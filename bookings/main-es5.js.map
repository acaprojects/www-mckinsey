{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/overlays/booking-modal/booking-modal.component.html","webpack:///./src/app/overlays/booking-modal/booking-modal.component.ts","webpack:///./src/app/overlays/confirm-modal/confirm-modal.component.html","webpack:///./src/app/overlays/confirm-modal/confirm-modal.component.ts","webpack:///./src/app/overlays/embedded-control-modal/embedded-control-modal.component.html","webpack:///./src/app/overlays/embedded-control-modal/embedded-control-modal.component.ts","webpack:///./src/app/overlays/overlays.module.ts","webpack:///./src/app/services/app.service.ts","webpack:///./src/app/services/data/base-api.class.ts","webpack:///./src/app/services/data/base.service.ts","webpack:///./src/app/services/data/bookings/booking.class.ts","webpack:///./src/app/services/data/bookings/booking.utilities.ts","webpack:///./src/app/services/data/bookings/bookings.service.ts","webpack:///./src/app/services/data/organisation/building.class.ts","webpack:///./src/app/services/data/organisation/organisation.class.ts","webpack:///./src/app/services/data/organisation/organisation.service.ts","webpack:///./src/app/services/data/polling/polling.service.ts","webpack:///./src/app/services/data/spaces/space.class.ts","webpack:///./src/app/services/data/spaces/space.utilities.ts","webpack:///./src/app/services/data/spaces/spaces.service.ts","webpack:///./src/app/services/data/systems-manager/systems-manager.service.ts","webpack:///./src/app/services/data/users/user.class.ts","webpack:///./src/app/services/data/users/user.utilities.ts","webpack:///./src/app/services/data/users/users.service.ts","webpack:///./src/app/services/hotkeys.service.ts","webpack:///./src/app/services/settings.service.ts","webpack:///./src/app/shared/base.class.ts","webpack:///./src/app/shared/base.component.ts","webpack:///./src/app/shared/components/duration-field/duration-field.component.html","webpack:///./src/app/shared/components/duration-field/duration-field.component.ts","webpack:///./src/app/shared/components/time-field/time-field.component.html","webpack:///./src/app/shared/components/time-field/time-field.component.ts","webpack:///./src/app/shared/components/user-search-field/user-search-field.component.html","webpack:///./src/app/shared/components/user-search-field/user-search-field.component.ts","webpack:///./src/app/shared/globals/application.ts","webpack:///./src/app/shared/globals/form-fields.ts","webpack:///./src/app/shared/globals/overlay-register.ts","webpack:///./src/app/shared/mocks/index.ts","webpack:///./src/app/shared/mocks/systems.mock.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/shared/utilities/api.utilities.ts","webpack:///./src/app/shared/utilities/formatting.utilities.ts","webpack:///./src/app/shared/utilities/general.utilities.ts","webpack:///./src/app/shared/utilities/validation.utilities.ts","webpack:///./src/app/shell/bootstrap/bootstrap.component.html","webpack:///./src/app/shell/bootstrap/bootstrap.component.ts","webpack:///./src/app/shell/panel-array/panel-array.component.html","webpack:///./src/app/shell/panel-array/panel-array.component.ts","webpack:///./src/app/shell/panel-select/panel-select.component.html","webpack:///./src/app/shell/panel-select/panel-select.component.ts","webpack:///./src/app/shell/panel/booking-actions/booking-actions.component.html","webpack:///./src/app/shell/panel/booking-actions/booking-actions.component.ts","webpack:///./src/app/shell/panel/custom-actions/custom-actions.component.html","webpack:///./src/app/shell/panel/custom-actions/custom-actions.component.ts","webpack:///./src/app/shell/panel/panel.component.html","webpack:///./src/app/shell/panel/panel.component.ts","webpack:///./src/app/shell/panel/space-details/space-details.component.html","webpack:///./src/app/shell/panel/space-details/space-details.component.ts","webpack:///./src/app/shell/panel/timeline/timeline.component.html","webpack:///./src/app/shell/panel/timeline/timeline.component.ts","webpack:///./src/app/shell/shell.component.html","webpack:///./src/app/shell/shell.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ShellWrapperComponent } from './shell/shell.component';\nimport { BootstrapComponent } from './shell/bootstrap/bootstrap.component';\nimport { BookingPanelComponent } from './shell/panel/panel.component';\nimport { BookingPanelArrayComponent } from './shell/panel-array/panel-array.component';\nimport { BookingPanelSelectComponent } from './shell/panel-select/panel-select.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ShellWrapperComponent,\n        children: [\n            { path: 'bootstrap', component: BootstrapComponent },\n            { path: 'panel/:system_id', component: BookingPanelComponent },\n            { path: 'panel-array', component: BookingPanelArrayComponent },\n            { path: 'panel-select', component: BookingPanelSelectComponent },\n            { path: '**', redirectTo: 'bootstrap' }\n        ]\n    },\n    { path: '**', redirectTo: 'bootstrap' }\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, { useHash: true })],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","<div class=\"app\">\n    <router-outlet></router-outlet>\n</div>\n","import { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./styles/app.component.scss', './styles/custom-element.styles.scss', './styles/native-element.styles.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class AppComponent {\n    constructor() {\n        (window as any).app_loaded = true;\n    }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport './shared/mocks';\n\nimport { ComposerModule } from '@acaprojects/ngx-composer';\nimport { AGoogleAnalyticsModule } from '@acaprojects/ngx-google-analytics';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\n\nimport { SharedOverlaysModule } from './overlays/overlays.module';\nimport { SharedContentModule } from './shared/shared.module';\n\nimport { ShellWrapperComponent } from './shell/shell.component';\nimport { BootstrapComponent } from './shell/bootstrap/bootstrap.component';\nimport { BookingPanelComponent } from './shell/panel/panel.component';\nimport { PanelTimelineComponent } from './shell/panel/timeline/timeline.component';\nimport { PanelSpaceDetailsComponent } from './shell/panel/space-details/space-details.component';\nimport { PanelBookingActionsComponent } from './shell/panel/booking-actions/booking-actions.component';\nimport { PanelCustomActionsComponent } from './shell/panel/custom-actions/custom-actions.component';\nimport { BookingPanelArrayComponent } from './shell/panel-array/panel-array.component';\nimport { BookingPanelSelectComponent } from './shell/panel-select/panel-select.component';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        ShellWrapperComponent,\n        BootstrapComponent,\n        BookingPanelComponent,\n        PanelTimelineComponent,\n        PanelSpaceDetailsComponent,\n        PanelBookingActionsComponent,\n        PanelCustomActionsComponent,\n        BookingPanelArrayComponent,\n        BookingPanelSelectComponent\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        AppRoutingModule,\n        HttpClientModule,\n        FormsModule,\n        ComposerModule,\n        AGoogleAnalyticsModule,\n        SharedOverlaysModule,\n        SharedContentModule,\n        ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production })\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n    constructor() {\n        console.log('Production:', !!environment.production);\n    }\n}\n","<div class=\"modal booking\" widget [class.is-loading]=\"loading\" [@show] *ngIf=\"!closing\">\n    <div class=\"header\">\n        <div class=\"text\">New Booking</div>\n    </div>\n    <div class=\"body\" *ngIf=\"!loading\">\n        <div class=\"form\" *ngIf=\"booking\">\n            <a-dynamic-form [fields]=\"booking.form_fields\"></a-dynamic-form>\n        </div>\n    </div>\n    <div class=\"body\" *ngIf=\"loading\">\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <a-spinner circle-ring color=\"#000\"></a-spinner>\n            </div>\n            <div class=\"text\">Processing request...</div>\n        </div>\n    </div>\n    <div class=\"footer\" *ngIf=\"!loading\">\n        <button widget name=\"close\" (tapped)=\"close()\">Cancel</button>\n        <button widget name=\"save\" (tapped)=\"save()\">Save</button>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { animate, style, transition, trigger } from '@angular/animations';\nimport { OverlayItem } from '@acaprojects/ngx-overlays';\n\nimport { ApplicationService } from '../../services/app.service';\nimport { BaseComponent } from '../../shared/base.component';\nimport { Booking } from '../../services/data/bookings/booking.class';\nimport { OVERLAY_REGISTER } from '../../shared/globals/overlay-register';\n\nimport * as dayjs from 'dayjs';\n\nexport interface BookingData {\n    booking: Booking;\n    on_error: () => void;\n    close: () => void;\n}\n\n@Component({\n    selector: 'booking-modal',\n    templateUrl: './booking-modal.component.html',\n    styleUrls: ['./booking-modal.component.scss'],\n    animations: [\n        trigger('show', [\n            transition(':enter', [\n                style({ opacity: 0, transform: 'translateX(100%) scale(0)' }),\n                animate(200, style({ opacity: 1, transform: 'translateX(0%) scale(1)' }))\n            ]),\n            transition(':leave', [\n                style({ opacity: 1, transform: 'translateX(0%) scale(1)' }),\n                animate(\n                    200,\n                    style({\n                        opacity: 0,\n                        transform: 'translateX(-100%) scale(0)'\n                    })\n                )\n            ])\n        ])\n    ]\n})\nexport class BookingModalComponent extends BaseComponent implements OnInit {\n    /** Whether modal is closing */\n    public closing: boolean;\n    /** New Booking instance */\n    public booking: Booking;\n    /** Whether the modal is processing a booking request */\n    public loading: boolean;\n\n    constructor(private item: OverlayItem, private service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.booking = new Booking(this.service.Bookings, {\n            date: this.item.data.date,\n            form_metadata: { ...this.item.data }\n        });\n        const space_field = this.booking.form_fields.find(field => field.key === 'space');\n        if (this.item.data.space && space_field) {\n            space_field.setValue(this.item.data.space);\n        }\n        const date_field = this.booking.form_fields.find(field => field.key === 'date');\n        if (date_field) {\n            date_field.setValue(this.item.data.date || dayjs().valueOf());\n        }\n        const title_field = this.booking.form_fields.find(field => field.key === 'title');\n        if (title_field) {\n            title_field.setValue(this.item.data.title || '');\n        }\n    }\n\n    /**\n     * Closes the modal\n     */\n    public close() {\n        this.closing = true;\n        this.timeout('close', () => this.item.close());\n    }\n\n    /**\n     * Post form data\n     */\n    public save() {\n        const fields = this.booking.form_fields;\n        fields.forEach(i => i.control.markAsDirty());\n        const valid = fields.reduce(\n            (fields_valid, field) =>\n                fields_valid &&\n                (field.control.valid ||\n                    (field.children &&\n                        field.children.length &&\n                        field.children.reduce(\n                            (sub_fields_valid, sub_field) => sub_fields_valid && sub_field.control.valid,\n                            true\n                        ))),\n            true\n        );\n        if (this.booking && valid) {\n            this.loading = true;\n            this.item.post('finish', {\n                booking: this.booking,\n                on_error: () => (this.loading = false),\n                close: () => this.close()\n            });\n        } else {\n            console.log(\n                'Invalid form fields. Valid states:',\n                fields.map(field => `${field.key}:${field.control.valid}`)\n            );\n        }\n    }\n}\n\nOVERLAY_REGISTER.push({\n    id: 'booking',\n    config: { content: BookingModalComponent, config: 'modal' }\n});\n","<div class=\"confirm modal\" widget [@show] *ngIf=\"!closing\">\n    <div class=\"header\">\n        <div class=\"text\">{{ title || 'Confirm' }}</div>\n    </div>\n    <div class=\"body\">\n        <div class=\"icon\" *ngIf=\"icon\">\n            <i *ngIf=\"icon.class\" [class]=\"icon.class\">{{ icon.value }}</i>\n            <img *ngIf=\"!icon.class && icon.src\" [src]=\"icon.src\">\n        </div>\n        <div class=\"content\">\n            <p>{{ content || 'Are you sure?' }}</p>\n        </div>\n    </div>\n    <div class=\"footer\">\n        <button widget name=\"cancel\" (tapped)=\"close()\">Cancel</button>\n        <button widget name=\"accept\" (tapped)=\"accept()\">{{ action || 'Ok' }}</button>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { animate, style, transition, trigger } from '@angular/animations';\n\nimport { OverlayItem } from '@acaprojects/ngx-overlays';\n\nimport { BaseComponent } from '../../shared/base.component';\nimport { OVERLAY_REGISTER } from '../../shared/globals/overlay-register';\n\n@Component({\n    selector: 'confirm-modal',\n    templateUrl: './confirm-modal.component.html',\n    styleUrls: ['./confirm-modal.component.scss'],\n    animations: [\n        trigger('show', [\n            transition(':enter', [\n                style({ opacity: 0, transform: 'translateX(100%) scale(0)' }),\n                animate(200, style({ opacity: 1, transform: 'translateX(0%) scale(1)' }))\n            ]),\n            transition(':leave', [\n                style({ opacity: 1, transform: 'translateX(0%) scale(1)' }),\n                animate(200, style({ opacity: 0, transform: 'translateX(-100%) scale(0)' }))\n            ])\n        ])\n    ]\n})\nexport class ConfirmModalComponent extends BaseComponent implements OnInit {\n    /** Title of the confirm modal */\n    public title: string;\n    /** Body of the confirm modal */\n    public content: string;\n    /** Display text on the confirm button */\n    public action: string;\n    /** Display icon properties */\n    public icon: { class?: string; value?: string; src?: string };\n    /** Whether modal is closing */\n    public closing: boolean;\n\n    constructor(private item: OverlayItem) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        const data = this.item.data;\n        if (data) {\n            this.title = data.title || 'Confirm';\n            this.content = data.content || data.body || data.description || 'Confirm';\n            this.action = data.action || 'Ok';\n            this.icon = data.icon;\n        }\n    }\n\n    /**\n     * Close the modal\n     */\n    public close() {\n        this.closing = true;\n        this.timeout('close', () => this.item.close());\n\n    }\n\n    /**\n     * User confirmation of the content of the modal\n     */\n    public accept() {\n        this.item.post('finish');\n        this.close();\n    }\n}\n\nOVERLAY_REGISTER.push({ id: 'confirm', config: { content: ConfirmModalComponent, config: 'modal' } });\n","<div class=\"background\"></div>\n<div class=\"modal control\" [@show] (window:touchend)=\"reset()\" (window:mouseup)=\"reset()\">\n    <div class=\"control-frame\">\n        <iframe [src]=\"control_url | safe:'resource'\"></iframe>\n    </div>\n</div>\n<div class=\"overlay\">\n    <button widget class=\"action countdown\" (tapped)=\"reset()\" (contextmenu)=\"$event.preventDefault()\">{{ countdown }}</button>\n    <button widget class=\"action close\" (tapped)=\"close()\" (contextmenu)=\"$event.preventDefault()\">\n        <div class=\"icon\">\n            <i class=\"material-icons\">close</i>\n        </div>\n    </button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { animate, keyframes, state, style, transition, trigger } from '@angular/animations';\n\nimport { OverlayItem } from '@acaprojects/ngx-overlays';\n\nimport { BaseComponent } from '../../shared/base.component';\nimport { OVERLAY_REGISTER } from '../../shared/globals/overlay-register';\n\n@Component({\n    selector: 'embedded-control-modal',\n    templateUrl: './embedded-control-modal.component.html',\n    styleUrls: ['./embedded-control-modal.component.scss'],\n    animations: [\n        trigger('show', [\n            transition(':enter', [style({ opacity: 0 }), animate(500, style({ opacity: 1 }))]),\n            transition(':leave', [style({ opacity: 1 }), animate(1000, style({ opacity: 0 }))]),\n        ]),\n    ],\n})\nexport class EmbeddedControlModalComponent extends BaseComponent implements OnInit {\n    /** Control URL to embed into the modal */\n    public control_url: string;\n    /** Display value for the time remain until the modal automatically closes */\n    public countdown: number;\n\n    constructor(private item: OverlayItem) {\n        super();\n        this.countdown = 30;\n    }\n\n    public ngOnInit(): void {\n        const data = this.item.data;\n        if (data) {\n            this.control_url = data.control_url;\n        }\n        if (!this.control_url) {\n            this.close();\n        }\n        this.countdown = 30;\n        this.interval('countdown', () => this.tick(), 1000);\n    }\n\n    /**\n     * Close the modal\n     */\n    public close() {\n        this.item.close();\n        this.countdown = 30;\n    }\n\n    /**\n     * User confirmation of the content of the modal\n     */\n    public reset() {\n        this.countdown = 30;\n        this.interval('countdown', () => this.tick(), 1000);\n    }\n\n    /**\n     * Decrement countdown and close if 0\n     */\n    public tick() {\n        if (this.countdown <= 0) {\n            this.close();\n        }\n        this.countdown--;\n    }\n}\n\nOVERLAY_REGISTER.push({ id: 'embeded-control', config: { content: EmbeddedControlModalComponent, config: 'modal' } });\n","\nimport { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SharedContentModule } from '../shared/shared.module';\n\nimport { ConfirmModalComponent } from './confirm-modal/confirm-modal.component';\nimport { EmbeddedControlModalComponent } from './embedded-control-modal/embedded-control-modal.component';\nimport { BookingModalComponent } from './booking-modal/booking-modal.component';\n\nconst OVERLAYS: Type<any>[] = [\n    ConfirmModalComponent,\n    EmbeddedControlModalComponent,\n    BookingModalComponent\n];\n\n@NgModule({\n    declarations: [\n        ...OVERLAYS\n    ],\n    imports: [\n        CommonModule,\n        SharedContentModule\n    ],\n    exports: [\n        ...OVERLAYS\n    ],\n    entryComponents: [\n        ...OVERLAYS\n    ]\n})\nexport class SharedOverlaysModule {}\n","import { ApplicationRef, Injectable, NgZone } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\nimport { SwUpdate } from '@angular/service-worker';\n\nimport { ComposerService } from '@acaprojects/ngx-composer';\nimport { ComposerOptions } from '@acaprojects/ts-composer';\nimport { AOverlayService } from '@acaprojects/ngx-overlays';\nimport { GoogleAnalyticsService } from '@acaprojects/ngx-google-analytics';\n\nimport { Observable, BehaviorSubject, Subject, Subscription } from 'rxjs';\n\nimport { BaseClass } from '../shared/base.class';\nimport { SettingsService, ConsoleStream } from './settings.service';\nimport { HashMap } from '../shared/utilities/types.utilities';\n\nimport { OVERLAY_REGISTER } from '../shared/globals/overlay-register';\nimport { ComposerSettings } from '../shared/utilities/settings.interfaces';\n\nimport { HotkeysService } from './hotkeys.service';\nimport { OrganisationService } from './data/organisation/organisation.service';\nimport { UsersService } from './data/users/users.service';\nimport { BookingsService } from './data/bookings/bookings.service';\nimport { SpacesService } from './data/spaces/spaces.service';\nimport { SystemsManagerService } from './data/systems-manager/systems-manager.service';\nimport { PollingService } from './data/polling/polling.service';\nimport { first } from 'rxjs/operators';\n\ndeclare global {\n    interface Window {\n        application: ApplicationService;\n        mock: {\n            enabled: boolean;\n            backend: any;\n        };\n    }\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ApplicationService extends BaseClass {\n    /** List of previous routes for return navigation */\n    private _route_trail: string[] = [];\n    /** Map of state variables for Service */\n    protected _subjects: { [key: string]: BehaviorSubject<any> | Subject<any> } = {};\n    /** Map of observables for state variables */\n    protected _observers: { [key: string]: Observable<any> } = {};\n    /** Whether the application has stablised */\n    private _stable: boolean;\n\n    /** Whether the application has stablised */\n    public get is_stable(): boolean {\n        return this._stable || false;\n    }\n\n    constructor(\n        private _app_ref: ApplicationRef,\n        private _zone: NgZone,\n        private _title: Title,\n        private _router: Router,\n        private _cache: SwUpdate,\n        private _settings: SettingsService,\n        private _overlay: AOverlayService,\n        private _composer: ComposerService,\n        private _analytics: GoogleAnalyticsService,\n        private _hotkeys: HotkeysService,\n        private _systems: SystemsManagerService,\n        private _organisation: OrganisationService,\n        private _users: UsersService,\n        private _bookings: BookingsService,\n        private _spaces: SpacesService,\n        private _polling: PollingService\n    ) {\n        super();\n        this._organisation.parent = this._users.parent = this._bookings.parent\n            = this._spaces.parent = this._systems.parent = this._polling.parent = this;\n        this.set('system', null);\n        this.log('APP', `Waiting for Application to stablised...`, undefined, undefined, true);\n        this._app_ref.isStable.pipe(first(_ => _)).subscribe(() => {\n            this.log('APP', `Application has stablised.`, undefined, undefined, true);\n            this._zone.run(() => {\n                this._stable = true;\n                this.setupCache();\n                this.waitForSettings();\n                this.registerOverlays();\n            });\n        });\n    }\n\n    /** Overlay service */\n    public get Overlay(): AOverlayService {\n        return this._overlay;\n    }\n\n    /** Analytics service */\n    public get Analytics() {\n        return this._analytics;\n    }\n\n    /** Hotkeys service */\n    public get Hotkeys() {\n        return this._hotkeys;\n    }\n\n    /** Systems Manager service */\n    public get Systems() {\n        return this._systems;\n    }\n\n    /** Organisation service */\n    public get Organisation() {\n        return this._organisation;\n    }\n\n    /** Users service */\n    public get Users() {\n        return this._users;\n    }\n\n    /** Bookings service */\n    public get Bookings() {\n        return this._bookings;\n    }\n\n    /** Spaces service */\n    public get Spaces() {\n        return this._spaces;\n    }\n\n    /**\n     * Get a setting from the settings service\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        return this._settings.get(key);\n    }\n\n    /** Name of the application */\n    public get name() {\n        return this._settings.app_name;\n    }\n\n    /**\n     * Title of the page\n     */\n    public set title(value: string) {\n        const title_suffix = this.setting('app.title');\n        this._title.setTitle(`${value ? value + ' | ' : ''}${title_suffix}`);\n    }\n\n    /**\n     * Title of the page\n     */\n    public get title(): string {\n        return this._title.getTitle();\n    }\n\n    /** Root API Endpoint */\n    public get endpoint() {\n        return `/api/staff/`;\n    }\n\n    /** Root API Endpoint for engine */\n    public get engine_endpoint() {\n        return `${this._composer.auth.api_endpoint}/`;\n    }\n\n    /** Get websocket */\n    public get websocket() {\n        return this._composer.realtime;\n    }\n\n    /**\n     * Create notification popup\n     * @param type CSS Class to add to the notification\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notify(type: string, msg: string, action?: string, on_action?: () => void): void {\n        const content = `<div class=\"icon\"><i class=\"material-icons\"></i></div><div class=\"text\">${msg}</div>`;\n        this._overlay.notify(content, action, on_action, type);\n    }\n\n    /**\n     * Create success notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifySuccess(msg: string, action?: string, on_action?: () => void): void {\n        this.notify('success', msg, action, on_action);\n    }\n\n    /**\n     * Create success notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifyError(msg: string, action?: string, on_action?: () => void): void {\n        this.notify('error', msg, action, on_action);\n    }\n\n    /**\n     * Create info notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifyInfo(msg: string, action?: string, on_action?: () => void): void {\n        this.notify('info', msg, action, on_action);\n    }\n\n    /**\n     * Log data to the browser console\n     * @param type Type of message\n     * @param msg Message body\n     * @param args array of argments to log to the console\n     * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\n     * @param force Whether to force message to be emitted when debug is disabled\n     */\n    public log(type: string, msg: string, args?: any, stream: ConsoleStream = 'debug', force: boolean = false): void {\n        this._settings.log(type, msg, args, stream, force);\n    }\n\n    /**\n     * Navigate to the given path\n     * @param path Path or array of path parts\n     * @param query Key value pairs to add to the URL as query parameters\n     */\n    public navigate(path: string | string[], query?: HashMap): void {\n        const route = path instanceof Array ? [...path] : [path];\n        this._route_trail.push(this._router.url);\n        this._router.navigate(route, query ? { queryParams: query } : { preserveFragment: true });\n    }\n\n    /**\n     * Navigate to the previous location in the route trail\n     */\n    public navigateBack(): void {\n        if (this._route_trail && this._route_trail.length > 0) {\n            const path = this._route_trail.pop();\n            this._router.navigate([path]);\n        } else {\n            this._router.navigate(['']);\n        }\n    }\n\n    /**\n     * Get the current value of the named property\n     * @param name Property name\n     */\n    public get<U = any>(name: string): U {\n        return this._subjects[name] && this._subjects[name] instanceof BehaviorSubject\n            ? (this._subjects[name] as BehaviorSubject<U>).getValue()\n            : null;\n    }\n\n\n    /**\n     * Listen to value change of the named property\n     * @param name Property name\n     * @param next Callback for value changes\n     */\n    public listen<U = any>(name: string, next: (_: U) => void): Subscription {\n        return this._observers[name] ? this._observers[name].subscribe(next) : null;\n    }\n\n    /**\n     * Update the value of the named property\n     * @param name Property name\n     * @param value New value\n     */\n    public set<U = any>(name: string, value: U): void {\n        if (!this._subjects[name]) {\n            this._subjects[name] = new BehaviorSubject<U>(value);\n            this._observers[name] = this._subjects[name].asObservable();\n        } else {\n            this._subjects[name].next(value);\n        }\n    }\n\n    /** Wait for settings to be initialised before setting up the application */\n    private waitForSettings() {\n        // Wait until the settings have loaded before initialising\n        this.subscription('setting_setup', this._settings.initialised.subscribe((setup) => {\n            if (setup) {\n                this.init();\n                this.unsub('setting_setup');\n            }\n        }));\n    }\n\n    /**\n     * Initialise application services\n     */\n    private init(): void {\n        this.setupComposer();\n        // Setup analytics\n        this._analytics.enabled = !!this.setting('app.analytics.enabled');\n        if (this._analytics.enabled) {\n            this._analytics.load(this.setting('app.analytics.tracking_id'));\n        }\n        this._composer.initialised.pipe(first(_ => _)).subscribe(() => {\n            this._users.init();\n            this._organisation.init();\n            this._bookings.init();\n            this._spaces.init();\n            this._polling.init();\n            this._initialised.next(true);\n        });\n        // Add service to window if in debug mode\n        if (window.debug) {\n            window.application = this;\n        }\n        this._hotkeys.listen(['Shift', 'Backslash'], () => {\n            this.navigate('bootstrap', { clear: true });\n        });\n    }\n\n    /**\n     * Initialise the composer library comms\n     */\n    private setupComposer(): void {\n        this.log('SYSTEM', 'Setting up composer...');\n        // Get application settings\n        const settings: ComposerSettings = this.setting('composer') || {};\n        const protocol = settings.protocol || location.protocol;\n        const host = settings.domain || location.hostname;\n        const port = settings.port || location.port;\n        const url = settings.use_domain ? `${protocol}//${host}:${port}` : location.origin;\n        const route = settings.route || '';\n        const mock = this.setting('mock');\n        // Generate configuration object\n        const config: ComposerOptions = {\n            scope: 'public',\n            host: `${host}:${port}`,\n            auth_uri: `${url}/auth/oauth/authorize`,\n            token_uri: `${url}/auth/token`,\n            redirect_uri: `${location.origin}${route}/oauth-resp.html`,\n            handle_login: !settings.local_login,\n            mock\n        };\n        if (localStorage) {\n            localStorage.setItem('oauth_redirect', location.href);\n        }\n        this._composer.setup(config);\n        this.log('SYSTEM', 'Finsihed setting up composer.');\n    }\n\n    /**\n     * Setup handler for cache change events\n     */\n    private setupCache() {\n        this.unsub('app_stable');\n        this.log('CACHE', `Initialising cache...`);\n        if (this._cache.isEnabled) {\n            this.log('CACHE', `Listening to cache events...`);\n            this._cache.activateUpdate();\n            this.subscription('cache_update', this._cache.available.subscribe((event) => {\n                const current = `current version is ${event.current.hash}`;\n                const available = `available version is ${event.available.hash}`;\n                this.log('CACHE', `Update available: ${current} ${available}`);\n                this.activateUpdate()\n            }));\n            setInterval(() => {\n                this.log('CACHE', `Checking for updates...`);\n                this._cache.checkForUpdate();\n            }, 5 * 60 * 1000);\n        }\n        this._users.init();\n        this._organisation.init();\n        this._bookings.init();\n        this._spaces.init();\n        // Add service to window if in debug mode\n        if (window.debug) {\n            window.application = this;\n        }\n\n        this._hotkeys.listen(['Shift', 'Backslash'], () => {\n            this.navigate('bootstrap', { clear: true });\n        });\n    }\n\n    /**\n     * Update the cache and reload the page\n     */\n    private activateUpdate() {\n        if (this._cache.isEnabled) {\n            this.log('CACHE', `Activating changes to the cache...`);\n            this._cache.activateUpdate().then(() => location.reload(true));\n        }\n    }\n\n    /**\n     * Pre-register available overlays\n     */\n    private registerOverlays(): void {\n        if (OVERLAY_REGISTER) {\n            for (const overlay of OVERLAY_REGISTER) {\n                this._overlay.register(overlay.id, overlay.config);\n            }\n        }\n    }\n}\n","import { ADynamicFormField } from '@acaprojects/ngx-dynamic-forms';\nimport { Subject } from 'rxjs';\n\nimport { BaseClass } from '../../shared/base.class';\nimport { HashMap } from '../../shared/utilities/types.utilities';\n\nexport interface IDataClassEvent {\n    type: string;\n    metadata: HashMap;\n}\n\nexport class BaseDataClass extends BaseClass {\n    /** Unique Identifier of the object */\n    readonly id: string;\n    /** Human readable name of the object */\n    readonly name: string;\n    /** Email address associated with the object */\n    readonly email: string;\n    /** Subject for change events to the class object */\n    readonly changeEvents = new Subject<IDataClassEvent>();\n    /** Form Fields for the object */\n    protected _form_fields: ADynamicFormField[];\n    /** Metadata to pass to form fields */\n    protected _form_metadata: HashMap;\n\n    constructor(protected service: any, raw_data: HashMap) {\n        super();\n        this.id = raw_data.id || raw_data.zone_id || raw_data.email || `${Math.floor(Math.random() * 9999999999)}`;\n        this.name = raw_data.name;\n        this.email = (raw_data.email || '').toLowerCase();\n        this._form_metadata = raw_data.form_metadata || {};\n    }\n\n    /** Get form field metadata for the object */\n    public get form_fields(): ADynamicFormField[] {\n        if (!this._form_fields) {\n            this._form_fields = this.initialiseFormFields();\n        }\n        return this._form_fields;\n    }\n\n    /** Whether form fields are valid */\n    public get valid(): boolean {\n        return this._form_fields ? this._form_fields.reduce((a, i) => a && i.isValid(), true) : false;\n    }\n\n    /** Whether the form has changes */\n    public get changes(): boolean {\n        return this.formChanges().length > 0;\n    }\n\n    /**\n     * Reset the values on the form to their initial state\n     */\n    public resetForm(): void {\n        if (this._form_fields) {\n            for (const field of this._form_fields) {\n                field.setValue(this[field.key]);\n            }\n        }\n    }\n\n    /**\n     * Get a list of the field names that have changed values\n     */\n    public formChanges(): string[] {\n        const changed: string[] = [];\n        if (this._form_fields) {\n            for (const field of this._form_fields) {\n                if (field.getValue() !== this[field.key]) {\n                    changed.push(field.key);\n                }\n            }\n        }\n        return changed;\n    }\n\n    /**\n     * Save form changes to server\n     */\n    public save(): Promise<BaseDataClass> {\n        if (this.changes && this.service) {\n            this._form_fields.forEach(i => i.showErrors(true));\n            if (this.valid) {\n                const form = this.formValues();\n                return this.id\n                    ? this.service.update(this.id, form)\n                    : this.service.add(form);\n            }\n        }\n    }\n\n    /**\n     * Delete this item from the server\n     */\n    public delete(): Promise<void> {\n        if (this.id) {\n            return this.service.delete(this.id);\n        }\n    }\n\n    /**\n     * Run task for this item on the service\n     * @param task_name Name of the task\n     * @param parameters Parameters to pass to the task request\n     */\n    public runTask(task_name: string, parameters: HashMap): Promise<void> {\n        if (this.id) {\n            return this.service.task(this.id, task_name, parameters);\n        }\n    }\n\n    /**\n     * Get a map of the field values\n     */\n    public toJSON(): HashMap {\n        if (!this._form_fields) {\n            this._form_fields = this.initialiseFormFields();\n        }\n        const json = this.formValues();\n        json.id = this.id;\n        delete json.changed_fields;\n        return json;\n    }\n\n    /**\n     * Emits change event\n     * @param type Type of change that has occurred\n     * @param metadata Supporting metadata for the event\n     */\n    public emit(type: string, metadata?: HashMap): void {\n        this.changeEvents.next({ type, metadata })\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): BaseDataClass {\n        return new BaseDataClass(this.service, this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): BaseDataClass {\n        return new BaseDataClass(this.service, { ...this, id: null, email: null });\n    }\n\n    /**\n     * Get the mapped values of the form fields\n     */\n    protected formValues(field_list: ADynamicFormField[] = this._form_fields, changes: boolean = true): HashMap {\n        const values: HashMap = {};\n        for (const field of field_list) {\n            if (field.children && field.children.length > 0) {\n                values[field.key] = this.formValues(field.children, false);\n            } else {\n                values[field.key] = field.getValue();\n            }\n        }\n        if (changes) {\n            values.changed_fields = this.formChanges();\n        }\n        return values;\n    }\n\n    /**\n     * Initialise the form field metadata for the field\n     */\n    protected initialiseFormFields(): ADynamicFormField[] {\n        const edit = !!this.id;\n        const fields: ADynamicFormField[] = [\n            new ADynamicFormField({\n                key: 'name',\n                type: 'input',\n                value: this.name\n            }),\n            new ADynamicFormField({\n                key: 'email',\n                type: 'input',\n                value: this.email,\n                required: true,\n                attributes: { type: 'email' }\n            })\n        ];\n        return fields;\n    }\n}\n","import { ComposerService } from '@acaprojects/ngx-composer';\nimport { EngineHttpClient } from '@acaprojects/ts-composer';\nimport { BehaviorSubject, Observable, Subscription, Subscriber, Subject } from 'rxjs';\n\nimport { BaseDataClass } from './base-api.class';\nimport { BaseClass } from '../../shared/base.class';\nimport { ApplicationService } from '../app.service';\nimport { HashMap } from '../../shared/utilities/types.utilities';\nimport { toQueryString } from '../../shared/utilities/api.utilities';\n\nexport interface IEngineResponse {\n    results: HashMap[];\n    total: number\n}\n\nexport class BaseAPIService<T = BaseDataClass> extends BaseClass {\n    /** Application service */\n    public parent: ApplicationService;\n    /** Display name of the service */\n    protected _name: string;\n    /** API Route of the service */\n    protected _api_route: string;\n    /** Map of state variables for Service */\n    protected _subjects: { [key: string]: BehaviorSubject<any> | Subject<any> } = {};\n    /** Map of observables for state variables */\n    protected _observers: { [key: string]: Observable<any> } = {};\n    /** Map of poll subscribers for API endpoints */\n    protected _subscribers: { [key: string]: Subscriber<any> } = {};\n    /** Map of promises for Service */\n    protected _promises: { [key: string]: Promise<any> } = {};\n    /** Comparison function for service items */\n    protected _compare: (a: T, b: T) => boolean = (a, b) => a === b || (a as any).id === (b as any).id;\n    /** Default filter function for list method */\n    protected _list_filter: (a: T) => boolean = (a) => !!a;\n\n    private get http(): EngineHttpClient {\n        return this._composer.http;\n    }\n\n    constructor(protected _composer: ComposerService) {\n        super();\n        this._name = 'Base';\n        this._api_route = 'base';\n        this.set('list', []);\n    }\n\n    /**\n     * Initailise service\n     */\n    public init() {\n        if (!this.parent || !this.parent.is_initialised) {\n            return this.timeout('init', () => this.init());\n        }\n        this.load().then(_ => this._initialised.next(true));\n    }\n\n    /**\n     * Get API route for the service\n     * @param engine Whether endpoint is using the application API or engine API\n     */\n    public route(engine: boolean = false) {\n        const endpoint = this.parent ? (engine ? this.parent.engine_endpoint : this.parent.endpoint) : '/api/';\n        return `${endpoint}${this._api_route}`;\n    }\n    /** API Route of the service */\n    public get api_route() {\n        return this._api_route;\n    }\n\n    /**\n     * Get a service related setting from the settings service\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string) {\n        return this.parent ? this.parent.setting(`app.${this._name.toLowerCase()}.${key}`) : null;\n    }\n\n    /**\n     * Get the current value of the named property\n     * @param name Property name\n     */\n    public get<U = any>(name: string): U {\n        return this._subjects[name] && this._subjects[name] instanceof BehaviorSubject\n            ? (this._subjects[name] as BehaviorSubject<U>).getValue()\n            : null;\n    }\n\n\n    /**\n     * Listen to value change of the named property\n     * @param name Property name\n     * @param next Callback for value changes\n     */\n    public listen<U = any>(name: string, next: (_: U) => void): Subscription {\n        return this._observers[name] ? this._observers[name].subscribe(next) : null;\n    }\n\n    /**\n     * Update the value of the named property\n     * @param name Property name\n     * @param value New value\n     */\n    protected set<U = any>(name: string, value: U): void {\n        if (!this._subjects[name]) {\n            this._subjects[name] = new BehaviorSubject<U>(value);\n            this._observers[name] = this._subjects[name].asObservable();\n        } else {\n            this._subjects[name].next(value);\n        }\n    }\n\n    /**\n     * Get list of loaded items\n     * @param filterFn Function for filtering the list\n     */\n    public list(filterFn: (a: T) => boolean = this._list_filter): T[] {\n        const list = this.get('list') || [];\n        return list.reduce((a, i) => { if (filterFn(i)) { a.push(i); } return a; }, []);\n    }\n\n    /**\n     * Get item with the given id from the loaded items\n     * @param id ID of the item\n     */\n    public item(id: string): T {\n        const list = this.get('list') || [];\n        return list.find(i => i.id === id || i.email === id);\n    }\n\n    /**\n     * Query the index of the API route associated with this service\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public query(query_params: HashMap = { update_list: true }): Promise<T[] | HashMap[]> {\n        let engine = false;\n        let cache = 1000;\n        if (query_params) {\n            engine = !!query_params.engine;\n            delete query_params.engine;\n            cache = query_params.cache || 1000;\n            delete query_params.cache;\n        }\n        const query = toQueryString(query_params);\n        const key = `query|${query}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise((resolve, reject) => {\n                const url = `${this.route(engine)}${query ? '?' + query : ''}`;\n                let result: T[] | HashMap[] = [];\n                this.http.get(url).subscribe(\n                    (d: IEngineResponse | HashMap[]) => {\n                        result = d && d instanceof Array\n                            ? d.map(i => this.process(i))\n                            : (d && !(d instanceof Array) && d.results\n                                ? d.results as HashMap[]\n                                : []);\n                    }, e => {\n                        reject(e);\n                        this._promises[key] = null;\n                    },\n                    () => {\n                        if ((!query || (query_params && query_params.update_list)) && result.length > 0 && result[0] instanceof BaseDataClass) {\n                            this.set('list', this.updateList(this.get('list'), result as T[]));\n                        }\n                        resolve(result);\n                        this.timeout(key, () => (this._promises[key] = null), cache);\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Query the API route for a sepecific item\n     * @param id ID of the item\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public show(id: string, query_params: HashMap = {}): Promise<T> {\n        let engine = false;\n        if (query_params) {\n            engine = !!query_params.engine;\n            delete query_params.engine;\n        }\n        const query = toQueryString(query_params);\n        const key = `show|${id}|${query}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<T>((resolve, reject) => {\n                const url = `${this.route(engine)}/${id}${query ? '?' + query : ''}`;\n                let result: T = null;\n                this.http.get(url).subscribe(\n                    d => result = this.process(d),\n                    e => {\n                        reject(e);\n                        this._promises[key] = null;\n                    },\n                    () => {\n                        resolve(result);\n                        this.timeout(key, () => (this._promises[key] = null), 1000);\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Make post request for a new item to the service\n     * @param form_data Data to post to the server\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public add(form_data: HashMap, query_params: HashMap = {}): Promise<T> {\n        if (!this._promises.new_item) {\n            this._promises.new_item = new Promise<T>((resolve, reject) => {\n                const query = toQueryString(query_params);\n                const url = `${this.route(query_params.engine)}${query ? '?' + query : ''}`;\n                let result: T = null;\n                this.http.post(url, form_data).subscribe(\n                    d => (result = this.process(d)),\n                    e => {\n                        reject(e);\n                        this.analyticsEvent(`create-${this._name.toLowerCase()}-failed`);\n                        this._promises.new_item = null;\n                    },\n                    () => {\n                        resolve(result);\n                        this.set('list', this.updateList(this.get('list'), [result]));\n                        this.analyticsEvent(`create-${this._name.toLowerCase()}-success`);\n                        this._promises.new_item = null;\n                    }\n                );\n            });\n        }\n        return this._promises.new_item;\n    }\n\n    /**\n     * Perform API task for the given item ID\n     * @param id ID of the item\n     * @param task_name Name of the task\n     * @param form_data Map of data to pass to the API\n     */\n    public task<U = any>(id: string, task_name: string, form_data: HashMap = {}): Promise<U> {\n        const query = toQueryString(form_data);\n        const key = `task|${id}|${task_name}|${query}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<U>((resolve, reject) => {\n                const post_data = { ...form_data, id, _task: task_name };\n                const url = `${this.route(form_data.engine)}/${id}/${task_name}`;\n                let result = null;\n                this.http.post(url, post_data).subscribe(\n                    d => result = d,\n                    e => {\n                        reject(e);\n                        this.analyticsEvent(`${this._name.toLowerCase()}-task-${task_name}-failed`, id);\n                        this._promises[key] = null;\n                    },\n                    () => {\n                        resolve(result as U);\n                        this.analyticsEvent(`${this._name.toLowerCase()}-task-${task_name}-success`, id);\n                        this.timeout(key, () => this._promises[key] = null, 1000);\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Setup a poller for an API endpoint\n     * @param id Show request ID. Leave blank to poll on the query endpoint\n     * @param query_params Map of query paramaters to add to the polled URL\n     * @param delay Delay between each poll event\n     */\n    public poll(id?: string, query_params: HashMap = {}, delay: number = 5000): Observable<T | T[]> {\n        const key = `poll|${id || ''}|${toQueryString(query_params) || ''}`;\n        this.stopPoll(id, query_params);\n        this._subjects[key] = new Subject<T | T[]>();\n        this._observers[key] = this._subjects[key].asObservable();\n        const sub = this._subjects[key];\n        const query = { ...(query_params || {}), _poll: true };\n        if (id) {\n            this.show(id, query).then((d) => sub.next(d), e => sub.error(e));\n            this.interval(key, () => {\n                this.show(id, query).then((d) => sub.next(d), e => sub.error(e));\n            }, delay);\n        } else {\n            this.query(query).then((d) => sub.next(d), e => sub.error(e));\n            this.interval(key, () => {\n                this.query(query).then((d) => sub.next(d), e => sub.error(e));\n            }, delay);\n        }\n        return this._observers[key];\n    }\n\n    /**\n     * Destroy poller\n     * @param id\n     * @param query_params\n     */\n    public stopPoll(id?: string, query_params: HashMap = {}) {\n        const key = `poll|${id || ''}|${toQueryString(query_params) || ''}`;\n        if (this._subjects[key]) {\n            this._subjects[key].complete();\n            this._subjects[key] = null;\n            this._observers[key] = null;\n        }\n    }\n\n    /**\n     * Make put request for changes to the item with the given id\n     * @param id ID of the item being updated\n     * @param form_data New values for the item\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public update(id: string, form_data: HashMap, query_params: HashMap = {}): Promise<T> {\n        const key = `update|${id}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<T>((resolve, reject) => {\n                const query = toQueryString(query_params);\n                const url = `${this.route(query_params.engine)}/${id}${query ? '?' + query : ''}`;\n                let result: T = null;\n                this.http.put(url, form_data).subscribe(\n                    d => (result = this.process(d)),\n                    e => {\n                        reject(e);\n                        this.analyticsEvent(`update-${this._name.toLowerCase()}-failed`, id);\n                        this._promises[key] = null;\n                    },\n                    () => {\n                        resolve(result);\n                        this.set('list', this.updateList(this.removeItem(this.get('list'), { id } as any), [result]));\n                        this.analyticsEvent(`update-${this._name.toLowerCase()}-success`, id);\n                        this._promises[key] = null;\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Make delete request for the given item\n     * @param id ID of item\n     */\n    public delete(id: string): Promise<void> {\n        const key = `delete|${id}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<void>((resolve, reject) => {\n                const url = `${this.route()}/${id}`;\n                this.http.delete(url).subscribe(\n                    _ => null,\n                    e => reject(e),\n                    () => {\n                        this.set('list', this.removeItem(this.get('list'), ({ id } as any)));\n                        resolve();\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Add new API item from another service or API class\n     * @param id ID of the item/or service adding the new item\n     * @param data Raw API data for the new item\n     * @param type Adder type\n     */\n    public addFrom(id: string, data: HashMap, type: 'class' | 'service' | 'other' = 'other'): string {\n        const new_item = this.process(data);\n        this.set('list', this.updateList(this.get('list'), [new_item]));\n        return (new_item as any).id;\n    }\n\n    /**\n     * Remove items with the given IDs from the list\n     * @param id ID of the item/or service remove the list of items\n     * @param remove_ids List of item IDs to remove\n     * @param type Remover type\n     */\n    public removeFrom(id: string, remove_ids: string[], type: 'class' | 'service' | 'other' = 'other') {\n        const list = this.get('list');\n        for (const item_id of remove_ids) {\n            const index = list.findIndex(item => item.id === item_id);\n            if (index >= 0) {\n                list.splice(index, 1);\n            }\n        }\n        this.set('list', list);\n    }\n\n    /**\n     * Load initial data for the service\n     */\n    protected load(): Promise<void> {\n        return new Promise<void>((resolve) => {\n            resolve();\n        });\n    }\n\n    /**\n     * Post analytics event for this service\n     * @param action Name of the action to post\n     */\n    protected analyticsEvent(action: string, label?: string) {\n        if (this.parent && this.parent.Analytics) {\n            this.parent.Analytics.event(this._name, `${this.parent.name.toLowerCase()}-${action}`, label);\n        }\n    }\n\n    /**\n     * Convert raw API data into a valid API Object\n     * @param raw_item Raw API data\n     */\n    protected process(raw_item: HashMap): T {\n        return raw_item as T;\n    }\n\n    /**\n     * Update recorded list of items\n     * @param old_list Old list of items\n     * @param list List of updated items\n     * @param compareFn Function to compare items to remove duplicates\n     */\n    protected updateList(old_list: T[], list: T[], compareFn: (a: T, b: T) => boolean = this._compare): T[] {\n        if (!list || list.length === 0) { return old_list; }\n        const new_list: T[] = [];\n        const mixed_list = [...list, ...old_list];\n        if (!compareFn) { compareFn = this._compare; }\n        for (const item of mixed_list) {\n            const found = new_list.find(i => compareFn(i, item));\n            if (!found) {\n                new_list.push(item);\n            }\n        }\n        return new_list;\n    }\n\n    /**\n     * Remove the given item from the given list\n     * @param list List of items\n     * @param item Item to remove\n     * @param compareFn Function to compare items\n     */\n    protected removeItem(list: T[], item: T, compareFn?: (a: T, b: T) => boolean) {\n        const new_list = [];\n        if (!compareFn) { compareFn = this._compare; }\n        list.forEach(i => compareFn(item, i) ? null : new_list.push(i));\n        return new_list;\n    }\n}\n","\nimport { formatDate } from '@angular/common';\nimport { Validators } from '@angular/forms';\nimport { ADynamicFormField } from '@acaprojects/ngx-dynamic-forms';\n\nimport { BaseDataClass } from '../base-api.class';\nimport { User } from '../users/user.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\nimport { humaniseDuration } from '../../../shared/utilities/general.utilities';\nimport { Space } from '../spaces/space.class';\nimport { FORM_FIELDS } from '../../../shared/globals/form-fields';\n\nimport { formatAttendeesWithHost, formatRecurrence, formatSpaces } from '../../../shared/utilities/formatting.utilities';\nimport { validateDate, buildValidateDuration, buildValidateAttendees } from '../../../shared/utilities/validation.utilities';\n\nimport * as dayjs from 'dayjs';\nimport { BaseAPIService } from '../base.service';\n\nexport class Booking extends BaseDataClass {\n    /** Unique calendar event ID */\n    readonly icaluid: string;\n    /** Subject or title of the booking */\n    readonly title: string;\n    /** Unix timestamp of the booking start */\n    readonly date: number;\n    /** Length of the booking in minutes */\n    readonly duration: number;\n    /** Description or details of the booking */\n    readonly body: string;\n    /** Supplimentary notes for the booking */\n    readonly notes: string;\n    /** Type of booking */\n    readonly type: string;\n    /** Whether the booking has catering associated with it */\n    readonly catering: boolean;\n    /** String location set in booking */\n    readonly _location: string;\n    /** List of attendee emails associated with the booking */\n    private _attendees: string[];\n    /** Email of the host or organiser of the booking */\n    private _organiser: string;\n    /** List of spaces associated with the booking */\n    private _space_list: string[];\n    /** Cached display strings */\n    private _display: HashMap<string> = {};\n\n    constructor(protected service: BaseAPIService<Booking>, raw_data: HashMap) {\n        super(service, raw_data);\n        const u_service = service.parent.Users;\n        this.icaluid = raw_data.icaluid || this.id;\n        this.title = raw_data.title || raw_data.subject || raw_data.Subject;\n        const start = dayjs(raw_data.date || raw_data.start || raw_data.start_epoch * 1000 || raw_data.Start);\n        this.date = start.valueOf();\n        this.duration = raw_data.duration || dayjs(raw_data.end || raw_data.end_epoch * 1000 || raw_data.End).diff(start, 'm');\n        this.body = raw_data.body || raw_data.description;\n        this.notes = raw_data.notes;\n        this.type = raw_data.type || (raw_data.visitors ? 'external' : null) || 'internal';\n        this.catering = raw_data.catering;\n        this._attendees = (raw_data.attendees || raw_data._attendees || []).map(i => u_service.item(i.email) || new User(u_service, i));\n        const organiser = raw_data.organiser || raw_data.organizer || { email: `${raw_data.owner}@fake.org` };\n        if (raw_data.owner) {\n            this.service.parent.Users.addFrom('booking', { name: raw_data.owner, email: `${raw_data.owner}@fake.org` });\n        }\n        this._organiser = organiser.email || raw_data._organiser;\n        this._location = raw_data.location || raw_data._location;\n        this._display = {\n            date: start.format('DD MMM YYYY'),\n            time: `${start.format('h:mma')} - ${dayjs(start)\n                .add(this.duration, 'm')\n                .format('h:mma')}`,\n            start: start.format('h:mma'),\n            end: dayjs(start)\n                .add(this.duration, 'm')\n                .format('h:mma'),\n            duration: humaniseDuration(this.duration)\n        };\n        this._space_list = raw_data.room_ids || raw_data._space_list;\n        // Add attendees and organiser to service data\n        if (this.service.parent && this.service.parent.Users) {\n            if (raw_data.attendees) {\n                raw_data.attendees.forEach(u => {\n                    if (!this.service.parent.Users.item(u.email)) {\n                        this.service.parent.Users.addFrom(this.id, u, 'class');\n                    }\n                });\n            }\n            if (organiser) {\n                if (!this.service.parent.Users.item(organiser.email)) {\n                    this.service.parent.Users.addFrom(this.id, organiser, 'class');\n                }\n            }\n        }\n    }\n\n    /** List of attendees to the meeting */\n    public get attendees(): User[] {\n        return this.service && this.service.parent && this.service.parent.Users\n            ? this.service.parent.Users.list((user) => this._attendees.indexOf(user.id) >= 0)\n            : [];\n    }\n\n    /** Host or organiser of the meeting */\n    public get organiser(): User {\n        return this.service && this.service.parent && this.service.parent.Users && this._organiser\n            ? this.service.parent.Users.item(this._organiser) : null;\n    }\n\n    /** Status of the booking */\n    public get status(): 'future' | 'upcoming' | 'done' | 'started' | 'in_progress' {\n        const now = dayjs();\n        const date = dayjs(this.date);\n        if (now.isBefore(date.subtract(15, 'm'), 'm')) {\n            return 'future';\n        } else if (now.isBefore(date, 'm')) {\n            return 'upcoming';\n        } else if (now.isBefore(date.add(15, 'm'), 'm')) {\n            return 'started';\n        } else if (now.isBefore(date.add(this.duration, 'm'), 'm')) {\n            return 'in_progress';\n        }\n        return 'done';\n    }\n\n    /** Get the first space from the space list */\n    public get space(): Space {\n        return this.service && this.service.parent && this.service.parent.Spaces && this._space_list && this._space_list.length > 0\n            ? this.service.parent.Spaces.item(this._space_list[0]) : null;\n    }\n    /** Spaces associated with the booking */\n    public get space_list(): Space[] {\n        return this.service && this.service.parent && this.service.parent.Spaces\n            ? this.service.parent.Spaces.list((space) => this._space_list.indexOf(space.id) >= 0)\n            : [];\n    }\n\n    /** Display value for the date */\n    public get date_string(): string {\n        return this._display.date;\n    }\n    /** Display valuie for the start and end times of the booking */\n    public get time_period(): string {\n        return this._display.time;\n    }\n    /** Display value for the start time of the booking */\n    public get start_time(): string {\n        return this._display.start;\n    }\n    /** Display value for the end time of the booking */\n    public get end_time(): string {\n        return this._display.end;\n    }\n    /** Display value for the duration of the booking */\n    public get length_string(): string {\n        return this._display.duration;\n    }\n    /** Display value for the location of the booking */\n    public get location(): string {\n        return this._display.space_names || this._location || 'No location set';\n    }\n    /** Display value for the level of the first space in the booking */\n    public get level(): string {\n        return this._display.level;\n    }\n\n    /**\n     * Create form fields for the object\n     */\n    protected initialiseFormFields(): ADynamicFormField[] {\n        const form_fields = [];\n        const form_settings = this.service.setting('fields') || [];\n        const user = this.service.parent.Users.current;\n        const actions = {\n            // space: () => this.setSpace(),\n            // recurrence: () => this.setRecurrence(),\n            // conferencing: (v?) => this.setConferencing(v)\n        };\n        const validators = {\n            date: [validateDate],\n            duration: [buildValidateDuration()],\n            attendees: [buildValidateAttendees(user, this.service.setting('min_attendees'))],\n            terms: [Validators.requiredTrue]\n        };\n        const formatters = {\n            attendees: formatAttendeesWithHost(user),\n            date: formatDate,\n            space: formatSpaces,\n            recurrence: formatRecurrence\n        };\n        const custom_elements = FORM_FIELDS;\n        const defaults = {};\n        const process_field = field => {\n            const f = {\n                key: field.key,\n                label: field.label,\n                icon: field.icon,\n                type: field.control_type || field.type,\n                value: this[field.key] || defaults[field.key] || '',\n                action: field.action || actions[field.key],\n                format: field.format || formatters[field.key],\n                content: field.content || custom_elements[field.key],\n                required: field.required,\n                validators: validators[field.key],\n                references: field.references || field.refs,\n                hide: field.hide,\n                metadata: { ...field.metadata, ...this._form_metadata, service: this.service },\n                attributes: { flex: field.flex },\n                children: field.children ? field.children.map(i => process_field(i)) : null\n            };\n            return new ADynamicFormField(f);\n        };\n        for (const field of form_settings) {\n            if (field.key) {\n                form_fields.push(process_field(field));\n            }\n        }\n        return form_fields;\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): Booking {\n        return new Booking(this.service, this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): Booking {\n        return new Booking(this.service, { ...this, id: null, email: null, icaluid: null });\n    }\n}\n","import { padZero } from '../../../shared/utilities/general.utilities';\n\nimport { generateMockUser } from '../users/user.utilities';\n\nimport * as faker from 'faker';\nimport * as dayjs from 'dayjs';\nimport { Booking } from './booking.class';\n\nlet BOOKING_COUNT = 0;\nlet BOOKING_DATE = dayjs().minute(0).startOf('m');\n\n/**\n * Set the initial time used for generating mock bookings\n * @param time New initial time as ms from UTC epoch\n */\nexport function setMockBookingStartDatetime(time: number) {\n    BOOKING_DATE = dayjs(time).startOf('m');\n}\n\n/**\n * Create mock raw API data for a booking\n * @param id\n */\nexport function generateMockBooking(id?: string) {\n    if (!id) {\n        id = `booking-${BOOKING_COUNT++}`;\n    }\n    BOOKING_DATE = BOOKING_DATE.add(Math.floor(Math.random() * 4) + 15, 'm');\n    const start = BOOKING_DATE.valueOf();\n    const duration = Math.floor(Math.random() * 4) + 30;\n    BOOKING_DATE = BOOKING_DATE.add(Math.floor(Math.random() * 4) + 15, 'm');\n    return {\n        id,\n        icaluid: padZero(Math.floor(Math.random() * 99999999), 8),\n        title: `${faker.commerce.productName()} Meeting`,\n        attendees: Array(Math.floor(Math.random() * 5 + 2))\n            .fill(0)\n            .map(i => generateMockUser()),\n        organiser: generateMockUser(),\n        date: start,\n        duration,\n        description: faker.lorem.paragraph(),\n        notes: faker.lorem.paragraph(),\n        location: faker.address.city(),\n        catering: Math.floor(Math.random() * 34567) % 3 === 0\n    };\n}\n\nexport interface IBookingSlot {\n    start: number;\n    end: number;\n}\n\n/**\n * Generate a list of free time slots between the given bookings\n * @param list List of bookings to find slots between\n * @param min_size Minimum length of a free slot in minutes\n */\nexport function getFreeBookingSlots(list: Booking[], min_size: number = 30): IBookingSlot[] {\n    if (!list) { return [{ start: 0, end: dayjs().startOf('m').valueOf() * 10 }] }\n    const slots: IBookingSlot[] = [];\n    let start = dayjs(0);\n    list.sort((a, b) => a.date - b.date);\n    for (const booking of list) {\n        const bkn_start = dayjs(booking.date);\n        const bkn_end = bkn_start.add(booking.duration, 'm');\n        if (bkn_start.isAfter(start)) {\n            const diff = bkn_start.diff(start, 'm');\n            if (diff >= min_size) {\n                slots.push({ start: start.valueOf(), end: bkn_start.valueOf() });\n            }\n            start = bkn_end;\n        }\n    }\n    slots.push({ start: start.valueOf(), end: dayjs().startOf('m').valueOf() * 10 })\n    return slots;\n}\n\n/**\n * Get the next free time slot from the given bookings\n * @param list List of bookings to find the next slot\n * @param date Date to find next slot after in ms since UTC epoch\n * @param min_size Minimum length of the free slot in minutes\n */\nexport function getNextFreeBookingSlot(list: Booking[], date: number = dayjs().valueOf(), min_size: number = 30): IBookingSlot {\n    const slots = getFreeBookingSlots(list, min_size);\n    const time = dayjs(date).startOf('m').second(1);\n    for (const block of slots) {\n        const start = dayjs(block.start).startOf('m');\n        const end = dayjs(block.end).startOf('m');\n        if (start.isAfter(time, 's')) {\n            return block;\n        } else if (time.isBefore(end, 's')) {\n            const duration = end.diff(time, 'm');\n            if (duration >= min_size) {\n                return block;\n            }\n        }\n    }\n    return slots[slots.length - 1];\n}\n","\nimport { Injectable } from '@angular/core';\nimport { ComposerService } from '@acaprojects/ngx-composer';\n\nimport { BaseAPIService } from '../base.service';\nimport { Booking } from './booking.class';\nimport { Space } from '../spaces/space.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\nimport { BookingData } from '../../../overlays/booking-modal/booking-modal.component';\n\nimport * as dayjs from 'dayjs';\n\nexport interface IBookingOptions {\n    space: Space;\n    date?: number;\n    title?: string;\n    max_duration?: number;\n    min_duration?: number;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class BookingsService extends BaseAPIService<Booking> {\n    constructor(protected _composer: ComposerService) {\n        super(_composer);\n        this._name = 'Bookings';\n        this._api_route = 'bookings';\n        this._compare = (a, b) => !a.id.localeCompare(b.id) || !a.icaluid.localeCompare(b.icaluid);\n    }\n\n    /**\n     * Open form modal for creating new bookings\n     * @param space Space to make booking in\n     * @param date Default date on the form\n     */\n    public new(options: IBookingOptions) {\n        if (options.space) {\n            this.parent.Overlay.open('booking', {\n                config: 'modal',\n                data: options as any\n            }, (event: { type: string, data: BookingData }) => {\n                const booking = event.data.booking.toJSON();\n                this.timeout('book', () => {\n                    this.create(options.space, booking)\n                        .then(() => {\n                            this.parent.notifySuccess('Booking successfully created');\n                            event.data.close ? event.data.close() : ''\n                        }).catch(_ => {\n                            this.parent.notifyError(`Error creating meeting. ${_}`);\n                            event.data.on_error ? event.data.on_error() : '';\n                        });\n                }, 1000);\n            });\n        }\n    }\n\n    /**\n     * Create new booking with the given properties\n     * @param booking New booking data\n     */\n    private create(space: Space, booking: HashMap) {\n        return new Promise((resolve, reject) => {\n            if (space) {\n                const request = {\n                    title: booking.title,\n                    count: {\n                        staff: booking.num_staff ? +booking.num_staff : 0,\n                        partners: booking.num_partners ? +booking.num_partners : 0,\n                    },\n                    staff_id: '', // data.form.user.staff_code,\n                    start: booking.date.valueOf(),\n                    end: dayjs(booking.date).add(booking.period.duration, 'm').valueOf(),\n                    host: booking.host || booking.user || { name: 'Panel User' }\n                };\n                const module = this.parent.Systems.get(space.id, 'Bookings');\n                if (request && module) {\n                    module.exec('create_meeting', [request]).then(() => {\n                        this.analyticsEvent('create-success');\n                        resolve();\n                    }, (err) => {\n                        this.analyticsEvent('create-failed');\n                        reject(`Error making booking: ${err}`);\n                    })\n                } else {\n                    reject(`No Bookings module found for space ${space.id}`);\n                }\n            } else {\n                reject('No space set for booking');\n            }\n        });\n    }\n\n    protected process(raw_data: HashMap): Booking {\n        return new Booking(this, raw_data);\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport { HashMap, Identity } from '../../../shared/utilities/types.utilities';\nimport { getItemWithKeys } from '../../../shared/utilities/general.utilities';\nimport { BaseAPIService } from '../base.service';\nimport { Organisation } from './organisation.class';\n\nexport interface IBuildingRoleUser {\n    name: string;\n    email: string;\n    phone: string;\n}\n\nexport interface LockerMap {\n    [zone: string]: {\n        [area: string]: {\n            [type: string]: (string | boolean)[][];\n        };\n    };\n}\n\nexport interface ICoordinates {\n    longitude: number;\n    latitude: number;\n}\n\nexport interface IMapFeature {\n    id: string;\n    level_id: string;\n    name: string;\n}\n\nexport class Building extends BaseDataClass {\n    /** Engine Zone ID for the building */\n    readonly zone_id: string;\n    /** List of available extras for the building */\n    private _extras: Identity[];\n    /** List of available extra equipment for loan at the building */\n    private _loan_items: Identity[];\n    /** List of available levels for the building */\n    private _levels: Identity[];\n    /** Map of custom settings for the building */\n    private _settings: HashMap;\n    /** Map of roles and list of the associated users */\n    private _roles: HashMap<IBuildingRoleUser[]>;\n    /** Map of the locker ID arrays */\n    private _lockers: LockerMap;\n    /** Map of important system ids for the building */\n    private _systems: HashMap<string>;\n    /** Map of important phone numbers for the building */\n    private _phone_numbers: HashMap<string>;\n    /** Globe coordiates for the build */\n    private _location: ICoordinates;\n    /** List of zones associated with the building */\n    private _zones: string[];\n    /** Searchable map features */\n    private _searchables: IMapFeature[];\n\n    constructor(protected service: BaseAPIService<Organisation>, raw_data: HashMap) {\n        super(service, raw_data);\n        this.zone_id = raw_data.zone_id || raw_data.zone;\n        this._extras = (raw_data.extras || []).map(i => ({ id: i.extra_id || i.id, name: i.extra_name || i.name }));\n        this._loan_items = (raw_data.loan_items || []).map(i => ({ id: i.extra_id || i.id, name: i.extra_name || i.name }));\n        this._levels = (raw_data.levels || []).map(i => ({ id: i.level_id || i.id, name: i.level_name || i.name }));\n        this._roles = raw_data.roles || {};\n        this._lockers = raw_data.lockers || raw_data.locker_structure || {};\n        this._systems = raw_data.systems || {};\n        this._settings = raw_data.settings || {};\n        this._phone_numbers = raw_data.phone_numbers || {};\n        this._location = raw_data.location || { longitude: null, latitude: null };\n        this._searchables = [];\n        if (raw_data.neighbourhoods) {\n            for (const lvl in raw_data.neighbourhoods) {\n                if (raw_data.neighbourhoods.hasOwnProperty(lvl)) {\n                    const lvl_features = raw_data.neighbourhoods[lvl] || {};\n                    for (const feature in lvl_features) {\n                        if (lvl_features.hasOwnProperty(feature)) {\n                            this._searchables.push({\n                                id: lvl_features[feature],\n                                name: feature,\n                                level_id: lvl\n                            });\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    /** List of available extras for the building */\n    public get extras(): Identity[] {\n        return [...(this._extras || [])];\n    }\n    /** List of available extras for the building */\n    public get loan_items(): Identity[] {\n        return [...(this._loan_items || [])];\n    }\n    /** List of available levels for the building */\n    public get levels(): Identity[] {\n        return [...(this._levels || [])];\n    }\n    /**\n     * Get a custom building setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        const keys = key.split('.');\n        const value = getItemWithKeys(keys, this._settings);\n        return value;\n    }\n\n    /**\n     * Get list of users with the associated role\n     * @param name Role to find users for\n     */\n    public role(name: string): IBuildingRoleUser[] {\n        return [...(this._roles[name] || [])];\n    }\n    /**\n     * Get list of the names of available user role lists\n     */\n    public get role_names(): string[] {\n        return Object.keys(this._roles).filter(i => this._roles.hasOwnProperty(i));\n    }\n    /** Map of the locker ID arrays */\n    public get lockers(): LockerMap {\n        return { ...(this._lockers || {}) };\n    }\n    /** Map of important system ids for the building */\n    public get systems(): HashMap<string> {\n        return { ...(this._systems || {}) };\n    }\n    /** Map of important phone numbers for the building */\n    public get phone_numbers(): HashMap<string> {\n        return { ...(this._phone_numbers || {}) };\n    }\n    /** Real coordinates */\n    public get location(): ICoordinates {\n        return { ...this._location };\n    }\n    /** List of zones associated with the building */\n    public get zones(): string[] {\n        return [...(this._zones || [])];\n    }\n    /** Searchable map features */\n    public get searchables(): IMapFeature[] {\n        return [...(this._searchables || [])];\n    }\n\n    /**\n     * Get search map feature for the given level ID\n     * @param level_id ID of level to grab features for\n     */\n    public featuresForLevel(level_id: string): IMapFeature[] {\n        return (this._searchables || []).filter(i => i.level_id === level_id);\n    }\n\n    /**\n     * Building objects are readonly and cannot be changed\n     */\n    public async save(): Promise<Building> {\n        throw new Error('Building objects are readonly and cannot be changed');\n    }\n\n    /**\n     * Building objects are readonly and cannot be deleted\n     */\n    public async delete(): Promise<void> {\n        throw new Error('Building objects are readonly and cannot be deleted');\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\nimport { getItemWithKeys } from '../../../shared/utilities/general.utilities';\nimport { BaseAPIService } from '../base.service';\n\nexport class Organisation extends BaseDataClass {\n    /** Map of custom settings for the building */\n    private _settings: HashMap;\n\n    constructor(protected service: BaseAPIService<Organisation>, raw_data: HashMap) {\n        super(service, raw_data);\n        this._settings = raw_data.settings || {};\n    }\n\n    /**\n     * Get a custom building setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        const keys = key.split('.');\n        const value = getItemWithKeys(keys, this._settings);\n        return value;\n    }\n\n    /**\n     * Building objects are readonly and cannot be changed\n     */\n    public async save(): Promise<Organisation> {\n        throw new Error('Organisation objects are readonly and cannot be changed');\n    }\n\n    /**\n     * Building objects are readonly and cannot be deleted\n     */\n    public async delete(): Promise<void> {\n        throw new Error('Organisation objects are readonly and cannot be deleted');\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { ComposerService } from '@acaprojects/ngx-composer';\n\nimport { BaseAPIService } from '../base.service';\nimport { Organisation } from './organisation.class';\nimport { Building } from './building.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class OrganisationService extends BaseAPIService {\n    /** Organisation data for the application */\n    private _organisation: Organisation;\n    /** Actively displayed building */\n    private _active_building: string;\n    /** Whether an error was shown when loading organisation data */\n    private shown_error: boolean;\n\n    constructor(protected _composer: ComposerService) {\n        super(_composer);\n        this._name = 'Organisation';\n        this._api_route = 'zones';\n        this.set('buildings', []);\n    }\n\n    /**\n     * Add is not available on organisation service\n     */\n    public async add(form_data: HashMap, query_params?: HashMap): Promise<Organisation> {\n        throw new Error('Add is not available on the organisation service');\n    }\n\n    /**\n     * Update is not available on organisation service\n     */\n    public async update(id: string, form_data: HashMap, query_params?: HashMap): Promise<Organisation> {\n        throw new Error('Update is not available on the organisation service');\n    }\n\n    /**\n     * Delete is not available on organisation service\n     */\n    public async delete(id: string): Promise<void> {\n        throw new Error('Delete is not available on the organisation service');\n    }\n\n    /**\n     * Get list of levels for the given building ID\n     * @param bld_id Building ID\n     */\n    public levels(bld_id: string): any[] {\n        return (this.buildings.find(i => i.id === bld_id) || {} as Building).levels;\n    }\n\n    /**\n     * Get a setting from the organisation or active building\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string) {\n        return this.building.setting(key) || this._organisation.setting(key);\n    }\n\n    /** Active building */\n    public get building(): Building {\n        return (this.buildings.find(i => i.id === this._active_building));\n    }\n\n    public set building(bld: Building) {\n        if (bld instanceof Building) {\n            this._active_building = bld.id;\n        } else {\n            this._active_building = bld;\n        }\n    }\n\n    /** List of buildings for the organisation */\n    public get buildings(): Building[] {\n        return this.get<Building[]>('buildings') || [];\n    }\n\n    /**\n     * Get list of available equipment\n     * @param id ID of the building to get the list from. i.e. Defaults to the active building\n     */\n    public getExtras(id: string, bld_id?: string) {\n        const bld = (bld_id ? this.buildings.find(i => i.id === bld_id) : null) || this.building;\n        if (bld && id) {\n            return bld.extras.filter(i => i.id.indexOf(id) >= 0) || [];\n        }\n        return [];\n    }\n\n    /**\n     * Get the first level matching the list of given IDs\n     * @param ids List of ID to search with\n     */\n    public levelWithID(ids: string | string[]) {\n        const list = ids instanceof Array ? ids : [ids];\n        const bld_list = this.buildings;\n        for (const id of list) {\n            for (const bld of bld_list) {\n                for (const lvl of bld.levels) {\n                    if (lvl.id === id) {\n                        return lvl;\n                    }\n                }\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Initialise service data\n     */\n    protected load(): Promise<void> {\n        if (localStorage) {\n            this._active_building = localStorage.getItem(`${this.parent.name}.building`);\n        }\n        return new Promise((resolve) => {\n            this.loadOrganisation().then(() => {\n                this.loadBuildings().then(() => {\n                    this.loadLevels().then(() => resolve());\n                });\n            });\n        });\n    }\n\n    /**\n     * Load organisation data for application\n     */\n    public loadOrganisation(): Promise<void> {\n        return new Promise<void>((resolve) => {\n            this.query({ tags: 'org', engine: true }).then((org_data) => {\n                this._organisation = new Organisation(this as any, org_data[0]);\n                this.set('organisation', this._organisation);\n                this.shown_error = false;\n                resolve();\n            }, _ => {\n                if (!this.shown_error) {\n                    this.shown_error = true;\n                    this.parent.notifyError('Error loading organisation data. Retrying...');\n                }\n                this.timeout('load_org', () => this.loadOrganisation().then(() => resolve()), 1000);\n            });\n        });\n    }\n\n    /**\n     * Load buildings data for the organisation\n     */\n    public loadBuildings(): Promise<void> {\n        return new Promise<void>((resolve) => {\n            this.query({ tags: 'building', engine: true }).then((bld_data) => {\n                const buildings = (bld_data as HashMap[]).map(i => new Building(this as any, i));\n                this.set('buildings', buildings || []);\n                if (!this._active_building && buildings && buildings.length > 0) {\n                    this._active_building = buildings[0].id;\n                }\n                resolve();\n            }, _ => {\n                this.parent.notifyError('Error loading building data. Retrying...');\n                this.timeout('load_bld', () => this.loadBuildings().then(() => resolve()), 1000);\n            });\n        });\n    }\n\n    /**\n     * Load levels data for the buildings\n     */\n    public loadLevels(): Promise<void> {\n        return new Promise<void>((resolve) => {\n            this.query({ tags: 'level', engine: true }).then((lvl_data) => {\n                resolve();\n            }, _ => {\n                this.parent.notifyError('Error loading level data. Retrying...');\n                this.timeout('load_lvl', () => this.loadLevels().then(() => resolve()), 1000);\n            });\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { ComposerService } from '@acaprojects/ngx-composer';\n\nimport { BaseAPIService } from '../base.service';\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\n\nexport interface PollingMetadata {\n    room_id: string;\n    metadata?: HashMap<any>;\n}\n\nexport class PingHistory {\n    /** List of previous poll data */\n    readonly history: PollingMetadata[];\n    /** Unix time in seconds of the last poll request */\n    readonly last_ping: number;\n    /** Email of the associated space */\n    readonly room_email: string;\n    /** ID of the associated space */\n    readonly room_id: string;\n\n    constructor(data: HashMap) {\n        this.history = data.history;\n        this.last_ping = data.last_ping;\n        this.room_email = data.room_email;\n        this.room_id = data.room_id;\n    }\n}\n\nconst SECONDS = 1000;\nconst MINUTES = 60 * SECONDS;\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PollingService extends BaseAPIService<PingHistory> {\n    constructor(protected _composer: ComposerService) {\n        super(_composer);\n        this._name = 'Users';\n        this._api_route = 'pings';\n    }\n\n    protected async load() {\n        this.interval('poll_endpoint', () => {\n            this.add({\n                room_id: this.parent.get('system')\n            });\n        }, 10 * MINUTES);\n    }\n\n    public query(...args: any): never {\n        throw new Error('Query method not available for polling endpoint');\n    }\n\n    public show(...args: any): never {\n        throw new Error('Show method not available for polling endpoint');\n    }\n\n    public update(...args: any): never {\n        throw new Error('Put method not available for polling endpoint');\n    }\n\n    public delete(...args: any): never {\n        throw new Error('delete method not available for polling endpoint');\n    }\n\n    protected process(data: HashMap) {\n        return new PingHistory(data);\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport { HashMap, Identity } from '../../../shared/utilities/types.utilities';\nimport { Booking } from '../bookings/booking.class';\nimport { BaseAPIService } from '../base.service';\n\nimport * as dayjs from 'dayjs';\n\nexport interface ISpaceAvailabilityOptions {\n    date?: number;\n    duration: number;\n    id?: string;\n    room_ids?: string;\n    bookable?: boolean;\n    rooms?: string;\n    ignore?: string;\n    zone_id?: string;\n    clear?: boolean;\n}\n\nconst OPTION_DEFAULTS: ISpaceAvailabilityOptions = {\n    duration: 60\n};\n\nexport class Space extends BaseDataClass {\n    /** Extends name for the space */\n    readonly long_name: string;\n    /** CSS selector for the location of the space of the level's map */\n    readonly map_id: string;\n    /** Type of space */\n    readonly type: string;\n    /** Whether user can search for this space */\n    readonly can_search: boolean;\n    /** Whether user can open the control URL if available */\n    readonly can_control: boolean;\n    /** Hourly cost for using the space */\n    readonly hourly_rate: number;\n    /** Whether space can be booked by users */\n    readonly bookable: boolean;\n    /** People capacity of the space */\n    readonly capacity: number;\n    /** Index to force order when sorting multiple spaces */\n    readonly sort_priority: number;\n    /** Setup time for bookings in this space */\n    readonly setup: number;\n    /** Breakdown time for bookings in this space */\n    readonly breakdown: number;\n    /** Last returned availability result */\n    readonly was_available: boolean;\n\n    /** Level in which the spaces is associated */\n    private _level: HashMap;\n    /** Bookings associated with the space */\n    private _bookings: string[];\n    /** Engine zones associated with the space */\n    private _zones: string[];\n    /** List of equipment available in the space */\n    private _extras: Identity[];\n    /** List of ids for linked spaces */\n    private _linked_spaces: string[];\n\n    constructor(protected service: BaseAPIService<Space>, raw_data: HashMap = {}) {\n        super(service, raw_data);\n        const settings = raw_data.settings || {};\n        this._level = this.service.parent.Organisation.levelWithID(raw_data.zones) || { settings: {} };\n\n        this.long_name = settings.long_name || raw_data.long_name;\n        this.map_id = settings.map_id || raw_data.map_id;\n        this.type = settings.book_type || this._level.book_type || this._level.settings.book_type || raw_data.book_type || raw_data.type || 'book';\n        this.can_search = settings.searchable || raw_data.searchable || raw_data.can_search || false;\n        this.can_control = settings.controlable || raw_data.controlable || raw_data.can_control || false;\n        this.hourly_rate = settings.cost_hour || raw_data.cost_hour || raw_data.hourly_rate || 0;\n        this.bookable = settings.bookable || raw_data.bookable || false;\n        this.setup = ((settings.setup || 0) / 60) || raw_data.setup || 0;\n        this.breakdown = ((settings.breakdown || 0) / 60) || raw_data.breakdown || 0;\n        this.capacity = raw_data.capacity || 0;\n        this.was_available = settings.available || raw_data.available || raw_data.was_available || false;\n\n        this._zones = raw_data.zones || [];\n        const raw_bookings = settings.bookings || raw_data.bookings || [];\n        this._bookings = raw_bookings.map(i => i.id);\n        if (this.service.parent && this.service.parent.Bookings) {\n            if (raw_bookings) {\n                const id_list = [];\n                raw_bookings.forEach(booking => {\n                    let id = booking.id;\n                    this.service.parent.Bookings.removeFrom(this.id, [id], 'class');\n                    id = this.service.parent.Bookings.addFrom(this.id, booking, 'class');\n                    id_list.push(id);\n                });\n                this._bookings = id_list;\n            }\n        }\n        this._extras = [];\n        this._linked_spaces = settings.linked_rooms || raw_data.linked_rooms || raw_data.linked_spaces || [];\n    }\n\n    /** Whether the space has a booking in progress */\n    public get in_use(): boolean {\n        return !!this.current;\n    }\n\n    /** Get any current in progress meeting */\n    public get current(): Booking {\n        const bookings = this.bookings;\n        for (const bkn of bookings) {\n            const status = bkn.status;\n            if (status === 'in_progress' || status === 'started') {\n                return bkn;\n            }\n        }\n        return null;\n    }\n\n    /** Get the next upcoming meeting */\n    public get next(): Booking {\n        const now = dayjs().valueOf();\n        const bookings = this.bookings;\n        for (const bkn of bookings) {\n            if (bkn.date > now) {\n                return bkn;\n            }\n        }\n        return null;\n    }\n\n    /** List of stored bookings for the space */\n    public get bookings(): Booking[] {\n        const booking_list = this.service && this.service.parent && this.service.parent.Bookings\n            ? this.service.parent.Bookings.list((booking) => this._bookings.indexOf(booking.id) >= 0) || []\n            : [];\n        return booking_list.sort((a, b) => a.date - b.date);\n    }\n\n    /** List of bookings for today */\n    public get todays_bookings(): Booking[] {\n        return this.bookingsFor(dayjs().valueOf());\n    }\n\n    /** List of ids for linked spaces */\n    public get linked_spaces() {\n        return [...this._linked_spaces];\n    }\n\n    /** Level in which the space is associated */\n    public get level(): HashMap {\n        return this._level;\n    }\n\n    /** Engine zones associated with the space */\n    public get zones(): string[] {\n        return [...this._zones];\n    }\n\n    /**\n     * Get bookings for space\n     * @param date Date to filter bookings on\n     */\n    public bookingsFor(date?: number): Booking[] {\n        if (date) {\n            const day = dayjs(date);\n            return this.bookings.filter(i => dayjs(i.date).isSame(day, 'd'));\n        } else {\n            return this.bookings;\n        }\n    }\n\n    /**\n     * Whether the space is available.\n     */\n    public isAvailable(options?: ISpaceAvailabilityOptions): Promise<boolean> {\n        options = options\n            ? { ...OPTION_DEFAULTS, ...options, room_ids: this.id }\n            : { ...OPTION_DEFAULTS, room_ids: this.id };\n        return new Promise((resolve) => {\n            (this.service as any).available(options).then((list: Space[]) => {\n                for (const rm of list) {\n                    if (rm.id === this.id) {\n                        return resolve(true);\n                    }\n                }\n                resolve(false);\n            }, () => resolve(false));\n        });\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): Space {\n        return new Space(this.service, this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): Space {\n        return new Space(this.service, { ...this, id: null, email: null, _bookings: [] });\n    }\n}\n","import { HashMap } from '../../../shared/utilities/types.utilities';\nimport { generateMockBooking } from '../bookings/booking.utilities';\n\nimport * as faker from 'faker';\nimport { USER_DOMAIN } from '../users/user.utilities';\n\nlet SPACE_COUNT: number = 0;\n\nexport function generateMockSpace(id?: string, zones?: string[]): HashMap {\n    if (!id) {\n        id = `space-${SPACE_COUNT++}`;\n    }\n    const name = `${faker.name.firstName()} ${faker.name.lastName()} Space`;\n    const linked = Math.floor(Math.random() * 99999) % 2 === 0 && SPACE_COUNT > 1;\n    return {\n        id,\n        name,\n        long_name: `${name} with an long name`,\n        map_id: `${SPACE_COUNT}`,\n        capacity: Math.floor(Math.random() * 20 + 1) * 2,\n        email: `${name.toLowerCase().split(' ').join('.')}@${USER_DOMAIN}`,\n        type: faker.commerce.productName(),\n        searchable: Math.floor(Math.random() * 99999) % 2 === 0,\n        controlable: Math.floor(Math.random() * 99999) % 2 === 0,\n        bookable: Math.floor(Math.random() * 99999) % 2 === 0,\n        cost_hour: Math.floor(Math.random() * 300) * 100,\n        setup: Math.floor(Math.random() * 6) * 5,\n        breakdown: Math.floor(Math.random() * 6) * 5,\n        zones: zones || ['zone_lvl-0'],\n        bookings: Array(10).fill(0).map(i => generateMockBooking()),\n        linked_rooms: linked ? [`space-${Math.floor(Math.random() * (SPACE_COUNT - 1))}`] : []\n    };\n}\n","\nimport { Injectable } from '@angular/core';\nimport { ComposerService } from '@acaprojects/ngx-composer';\n\nimport { BaseAPIService } from '../base.service';\nimport { Space, ISpaceAvailabilityOptions } from './space.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\n\nimport * as dayjs from 'dayjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SpacesService extends BaseAPIService<Space> {\n\n    constructor(protected _composer: ComposerService) {\n        super(_composer);\n        this._name = 'Space';\n        this._api_route = 'rooms';\n        this._compare = (a, b) => !a.id.localeCompare(b.id) || !a.email.localeCompare(b.email);\n        this._list_filter = (a: Space) => {\n            const bld = this.parent.Organisation.building;\n            return a.level.bld_id === bld.id;\n        };\n    }\n\n    /**\n     * Get available spaces\n     * @param options\n     */\n    public available(options: ISpaceAvailabilityOptions): Promise<Space[]> {\n        if (!options) { throw new Error('Space avilability requires request options'); }\n        if (!options.date) { options.date = dayjs().startOf('m').valueOf(); }\n        const key = `available|${options.id ? options.id : ''}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise((resolve, reject) => {\n                const respond = (list: Space[]) => {\n                    const available_spaces = list.filter(i => {\n                        const linked = list.filter(j => i.linked_spaces.indexOf(j.id) >= 0);\n                        return i.was_available && linked.reduce((a, v) => a && v.was_available, true);\n                    });\n                    resolve(available_spaces);\n                };\n                const error = (e) => reject(e);\n                if (options.id) {\n                    this.show(options.id, options).then((i) => respond([i]), error);\n                } else {\n                    this.query(options).then(respond, error);\n                }\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Convert raw data into API object\n     * @param raw_data Raw API data\n     */\n    protected process(raw_data: HashMap): Space {\n        return new Space(this, raw_data);\n    }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { ComposerService } from '@acaprojects/ngx-composer';\nimport { EngineSystemsService, EngineModuleBinding, EngineSystem } from '@acaprojects/ts-composer';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { ApplicationService } from '../../app.service';\nimport { BaseClass } from '../../../shared/base.class';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SystemsManagerService extends BaseClass {\n    /** Application service */\n    public parent: ApplicationService;\n    /** Composer resource service */\n    private _resources: EngineSystemsService;\n    /** Subject for System list */\n    private _list = new BehaviorSubject<EngineSystem[]>([]);\n\n    constructor(private _composer: ComposerService) {\n        super();\n        this._composer.initialised.subscribe((state) => {\n            if (state) {\n                this._resources = this._composer.systems;\n                this.load();\n            }\n        });\n    }\n\n    /** List of available systems */\n    public get list() {\n        return this._list.getValue() || [];\n    }\n\n    /**\n     * List to changes on observable\n     * @param name Name of the observable\n     * @param next Callback for changes to the observable\n     */\n    public listen(name: 'list', next: (list: EngineSystem[]) => void) {\n        return this._list.subscribe(next);\n    }\n\n    /**\n     * Get engine module for the given system\n     * @param sys_id ID of the system to get the module from\n     * @param mod_id ID of the module with the given system\n     * @param index Index of the module\n     */\n    public get(sys_id: string, mod_id: string, index?: number): EngineModuleBinding {\n        return this._composer.bindings.module(sys_id, mod_id, index);\n    }\n\n    /**\n     * Load Systems\n     */\n    protected load() {\n        if (!this.parent || !this.parent.is_initialised || !this.parent.Users || !this.parent.Users.initialised) {\n            return this.timeout('load', () => this.load());\n        }\n        this.loadSystems();\n    }\n\n    /**\n     * Load one page of systems\n     * @param offset Item offset for the page to load\n     */\n    protected loadSystems(offset: number = 0, limit: number = 250) {\n        this._resources.query({ offset, limit }).then((list) => {\n            const total = this._resources.last_total;\n            const systems: EngineSystem[] = [...this.list, ...list];\n            this._list.next(systems.sort((a, b) => (a.name || '').localeCompare(b.name)));\n            if (systems.length < total) {\n                this.loadSystems(systems.length);\n            }\n        });\n    }\n}\n","import { ADynamicFormField } from '@acaprojects/ngx-dynamic-forms';\n\nimport { BaseDataClass } from '../base-api.class';\nimport { HashMap, Identity } from '../../../shared/utilities/types.utilities';\nimport { BaseAPIService } from '../base.service';\n\nexport interface ILocation {\n    x?: number;\n    y?: number;\n    name?: string;\n    map_id?: string;\n    building: string;\n    level: string | Identity;\n    fixed: boolean;\n    loc_id?: string;\n    display?: { [name: string]: string };\n    confidence?: number;\n    another_bld?: boolean;\n    at_desk?: boolean;\n}\n\nexport class User extends BaseDataClass {\n    /** First name of the user */\n    readonly first_name: string;\n    /** Last name of the user */\n    readonly last_name: string;\n    /** Windows user ID */\n    readonly windows_id: string;\n    /** Type of user */\n    readonly type: 'partner' | 'external' | 'internal';\n    /** Contact phone number of the user */\n    readonly phone: string;\n    /** Organisational department the user is part of */\n    readonly business_unit: string;\n    /** Whether user is external from the application's organisation */\n    readonly external: boolean;\n    /** Organisational Identifier for the user */\n    readonly staff_code: string;\n    /** Organisation the user is associated with */\n    private _organisation: Identity;\n    /** Map location of the user */\n    private _location: ILocation;\n    /** List of users that this user can act on behalf */\n    private _delegates: string[];\n\n    constructor(protected service: BaseAPIService<User>, raw_data: HashMap = {}) {\n        super(service, raw_data);\n        this.first_name = raw_data.first_name;\n        this.last_name = raw_data.last_name;\n        this.windows_id = raw_data.email;\n        this.type = raw_data.visitor ? 'external' : raw_data.type || 'internal';\n        this.phone = raw_data.phone || raw_data.mobile;\n        this.business_unit = raw_data.business_unit || raw_data.department;\n        this._organisation = raw_data.organisation || { id: raw_data.organisation_id, name: raw_data.organisation_name };\n        this.external = this.type === 'external';\n        this._location = null;\n        this.staff_code = raw_data.staff_code || raw_data.fmno;\n        this._delegates = raw_data.delegates;\n    }\n\n    /** Organisation the user is associated with */\n    public get organisation() {\n        return this._organisation;\n    }\n\n    /** Map location of the user */\n    public get last_location(): ILocation {\n        return this._location ? { ...(this._location) } : null;\n    }\n\n    /** List of users that this user can act on behalf */\n    public get delegates(): string[] {\n        return [...(this._delegates || [])];\n    }\n\n    /**\n     * Ask the server for the users current location\n     */\n    public locate(): Promise<ILocation> {\n        const service: any = this.service.parent || {};\n        return new Promise((resolve, reject) => {\n            if (service.Location) {\n                service.Location.show(this.id, { desk: this.email }).then(\n                    l => {\n                        this._location = l;\n                        resolve(l);\n                    },\n                    e => reject(e)\n                );\n            } else {\n                resolve(null);\n            }\n        });\n    }\n\n    /**\n     * Whether user is available during the given period\n     * @param start Start time as a unix timestamp with milliseconds\n     * @param end End time as a unix timestamp with milliseconds\n     */\n    public available(start?: number, end?: number): Promise<boolean> {\n        return new Promise<boolean>(resolve => {\n            this.service.query({ email: this.email, start, end })\n                .then(l => resolve(l && l.length > 0), _ => resolve(false));\n        });\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): User {\n        return new User(this.service, this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): User {\n        return new User(this.service, { ...this, id: null, email: null });\n    }\n\n    /**\n     * Initialise the form field metadata for the field\n     */\n    protected initialiseFormFields(): ADynamicFormField[] {\n        const edit = !!this.id;\n        const fields: ADynamicFormField[] = [\n            new ADynamicFormField({\n                key: 'name',\n                type: 'input',\n                value: this.name,\n                hide: true\n            }),\n            new ADynamicFormField({\n                key: 'first_name',\n                label: 'First Name',\n                type: 'input',\n                value: this.first_name,\n                required: true\n            }),\n            new ADynamicFormField({\n                key: 'last_name',\n                label: 'Last Name',\n                type: 'input',\n                value: this.last_name,\n                required: true\n            }),\n            new ADynamicFormField({\n                key: 'email',\n                label: 'Email',\n                type: 'input',\n                value: this.email,\n                required: true,\n                attributes: { type: 'email' }\n            })\n        ];\n        return fields;\n    }\n}\n","import { HashMap } from '../../../shared/utilities/types.utilities';\n\nimport * as faker from 'faker';\nimport { padZero, unique } from '../../../shared/utilities/general.utilities';\n\nlet USER_COUNT = 0;\n\nexport let USER_DOMAIN = 'acaprojects.com';\n\nconst USER_EMAILS: string[] = [];\n\n/**\n * Generate raw mock data for a user\n * @param id Forced ID for the mock\n * @param name Forced name for the user\n * @param external Whether user is external of the organisation\n */\nexport function generateMockUser(id?: string, name?: string, external?: boolean): HashMap {\n    if (!id) {\n        id = `user-${USER_COUNT++}`;\n    }\n    if (!name) {\n        name = `${faker.name.firstName()} ${faker.name.lastName()}`;\n    }\n    if (external === undefined) {\n        external = !((Math.random() * 99999) % 2);\n    }\n    const organisation = external ? faker.company.companyName() : USER_DOMAIN.split('.')[0];\n    let delegates: string[] = [];\n    const delegate_count = Math.min(Math.random() * 4 + 1, USER_EMAILS.length);\n    for (let i = 0; i < delegate_count; i++) {\n        delegates.push(USER_EMAILS[Math.floor(Math.random() * USER_EMAILS.length)]);\n    }\n    delegates = unique(delegates);\n    const email = `${name.split(' ').join('.').toLowerCase()}@${external ? 'not-' : ''}${USER_DOMAIN}`;\n    USER_EMAILS.push(email);\n    return {\n        id,\n        name,\n        email,\n        phone: faker.phone.phoneNumber(),\n        visitor: external,\n        organisation: {\n            id: organisation.split(' ').join('.').toLowerCase(),\n            name: organisation\n        },\n        department: faker.commerce.department(),\n        staff_code: padZero(Math.floor(Math.random() * 99999), 5),\n        delegates\n    };\n}\n","import { Injectable } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { ComposerService } from '@acaprojects/ngx-composer';\nimport { Md5 } from 'ts-md5/dist/md5';\n\nimport { BaseAPIService } from '../base.service';\nimport { User } from './user.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\n\nimport * as dayjs from 'dayjs';\n\nexport interface ILoginOptions {\n    /** URL to post login request to */\n    url?: string;\n    /** Whether form data is passed in the body of the request */\n    form?: boolean;\n    /** Custom headers to pass into the post request */\n    headers?: HashMap<string>;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UsersService extends BaseAPIService<User> {\n    constructor(protected _composer: ComposerService, protected uhttp: HttpClient, protected location: Location) {\n        super(_composer);\n        this._name = 'Users';\n        this._api_route = 'users';\n        this._compare = (a, b) => !a.id.localeCompare(b.id) || !a.email.localeCompare(b.email);\n        this.set('current_user', new User(this, { id: 'local_user', name: 'Local User' }));\n    }\n\n    /** Currently logged in user */\n    public get current(): User {\n        return this.get('current_user');\n    }\n\n    /**\n     * Sets the access token and expiry for the user\n     * @param token OAuth bearer token\n     * @param expiry Expiry epoch timestamp in ms\n     * @param reload Whether to reload the page after setting tokens\n     */\n    public setToken(token: string, expiry?: number, reload: boolean = true) {\n        if (!expiry) {\n            expiry = dayjs()\n                .add(7, 'd').endOf('d')\n                .valueOf();\n        }\n        const path = `${location.origin}${this.parent.setting('composer.route') || ''}/oauth-resp.html`;\n        const client_id = Md5.hashStr(path);\n        if (sessionStorage) {\n            sessionStorage.setItem(`${client_id}_access_token`, token);\n            sessionStorage.setItem(`${client_id}_expires_at`, `${expiry}`);\n        }\n        if (localStorage) {\n            localStorage.setItem(`${client_id}_access_token`, token);\n            localStorage.setItem(`${client_id}_expires_at`, `${expiry}`);\n        }\n        if (reload) {\n            this.location.go(this.location.path());\n        }\n        return path;\n    }\n\n    /**\n     * Post login request to the API\n     * @param query_params Key value pairs to pass into\n     * @param options Options for the login request\n     */\n    public login(query_params: HashMap, options: ILoginOptions = {}): Promise<void> {\n        if (!this._promises['login']) {\n            this._promises['login'] = new Promise<void>((resolve, reject) => {\n                this.set('status', 'loading');\n                let headers = new HttpHeaders();\n                if (!options || options.form !== false) {\n                    headers = headers.append('Content-Type', 'application/x-www-form-urlencoded');\n                }\n                const url = (options ? options.url : '') || '/auth/signin';\n                this.uhttp.post(url, query_params, { headers }).subscribe(\n                    _ => null,\n                    e => reject(e),\n                    () => {\n                        this._composer.auth.authorise();\n                        resolve();\n                    }\n                );\n            });\n        }\n        return this._promises['login'];\n    }\n\n    /**\n     * Logout of user and redirect to logout URL\n     */\n    public logout() {\n        this._composer.auth.logout();\n    }\n\n    /**\n     * Load initial data for the service\n     */\n    protected load(tries: number = 0): Promise<void> {\n        this.set('status', 'loading');\n        return new Promise<void>(resolve => {\n            if (tries > 4) {\n                this.set('status', 'invalid');\n                return resolve();\n            }\n            this.show('current', { engine: true }).then(\n                current_user => {\n                    this.set('status', 'available');\n                    this.set('current_user', current_user);\n                    if (this.parent && this.parent.setting('app.user.grab_api_details')) {\n                        this.show(current_user.email).then(\n                            user => {\n                                this.set('current_user', user);\n                                resolve();\n                            },\n                            () => this.timeout('load', () => this.load(++tries).then(() => resolve()))\n                        );\n                    } else {\n                        resolve();\n                    }\n                },\n                () => this.timeout('load', () => this.load(++tries).then(() => resolve()))\n            );\n        });\n    }\n\n    /**\n     * Convert raw API data into a valid User Object\n     * @param raw_item Raw API data\n     */\n    protected process(raw_data: any): User {\n        return new User(this, raw_data);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\n\nimport { HashMap } from '../shared/utilities/types.utilities';\nimport { unique } from '../shared/utilities/general.utilities';\n\n/** List of keys that cannot be in a combination by themselves or with each other */\nconst INVALID_STANDALONE_KEYS: string[] = ['control', 'shift', 'alt', 'meta', 'os'];\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HotkeysService {\n    /** Map of subjects which store press states of keys */\n    private keydown_states: HashMap<BehaviorSubject<number>> = {};\n    /** Map of obserers for key state subjects */\n    private keydown_observers: HashMap<Observable<number>> = {};\n    /** List of keys at the end of a combination */\n    private combo_end: string[] = [];\n    /** List of registered hotkey combinations */\n    private registered_combos: string[][] = [];\n    /** Counter for the number of keydown events. Used for checking order of key presses */\n    private counter: number = 0;\n    /** Last key code to be pressed */\n    private last_down: string;\n\n    constructor() {\n        window.addEventListener('keydown', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            if (this.last_down !== code) {\n                if (!this.keydown_states[code]) {\n                    this.keydown_states[code] = new BehaviorSubject(null);\n                    this.keydown_observers[code] = this.keydown_states[code].asObservable();\n                }\n                this.keydown_states[code].next(this.counter++);\n                if (this.combo_end.indexOf(code) >= 0) {\n                    event.preventDefault();\n                }\n                this.last_down = code;\n            }\n        });\n\n        window.addEventListener('keyup', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            this.keydown_states[code].next(null);\n            if (this.last_down === code) {\n                this.last_down = null;\n            }\n        });\n    }\n\n    /**\n     * Listen to the given key combination\n     * @param combo Array of key codes to listen to or a hotkey string e.g. `Alt+Shift+KeyK`\n     * @param next Callback for combination presses\n     */\n    public listen(combo: string | string[], next: () => void): Subscription {\n        combo = (combo instanceof Array ? combo : combo.split('+'));\n        const combination: string[] = combo.map(i => this.mapKey(i.toLowerCase()));\n        if (combination.length > 0 && this.validCombination(combination)) {\n            this.registered_combos.push(combination);\n            const last_key = combination[combination.length - 1];\n            if (!this.keydown_states[last_key]) {\n                this.keydown_states[last_key] = new BehaviorSubject(null);\n                this.keydown_observers[last_key] = this.keydown_states[last_key].asObservable();\n            }\n            this.updateCombinationEndList();\n            return this.keydown_observers[last_key].subscribe((count) => {\n                if (count) {\n                    const presses: number[] = [];\n                    if (combination.length > 1) {\n                        // Check that keys are pressed\n                        for (const key of combination) {\n                            const state = this.keydown_states[key];\n                            presses.push(state ? state.getValue() || -1 : -1);\n                        }\n                        // Check that keys are pressed in the correct order\n                        for (let i = 0; i < combination.length - 1; i++) {\n                            if (presses[i] > presses[i + 1]) { return; }\n                        }\n                    }\n                    next();\n                }\n            });\n        }\n        return null;\n    }\n\n    /**\n     * Map key codes with multiple versions to simple form\n     * @param code Code to transform\n     */\n    private mapKey(code: string): string {\n        if (code.indexOf('alt') || code.indexOf('shift') || code.indexOf('control')) {\n            return code.replace('left', '').replace('right', '');\n        }\n        return code;\n    }\n\n    /**\n     * Update the list of the last keys in combinations to allow for prevent default actions on pre-existing hotkeys\n     */\n    private updateCombinationEndList(): void {\n        const key_list = [];\n        for (const combo of this.registered_combos) {\n            this.combo_end.push(combo[combo.length - 1]);\n        }\n        this.combo_end = unique(key_list);\n    }\n\n    /**\n     * Checks if the given hotkey combination is allowed and valid\n     * @param combo Array of key codes\n     */\n    private validCombination(combo: string[]): boolean {\n        let non_meta = 0;\n        for (const key of combo) {\n            if (INVALID_STANDALONE_KEYS.indexOf(key) < 0) {\n                non_meta++;\n            }\n        }\n        return non_meta > 0;\n    }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\n\nimport { HashMap } from '../shared/utilities/types.utilities';\nimport { getItemWithKeys } from '../shared/utilities/general.utilities';\nimport { version, build, core_version } from '../shared/globals/application';\n\nimport * as dayjs from 'dayjs';\nimport { BaseClass } from '../shared/base.class';\n\ninterface SettingsMap {\n    api: HashMap;\n    local: HashMap;\n    session: HashMap;\n    [block: string]: HashMap;\n}\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n    }\n}\n\nexport type ConsoleStream = 'debug' | 'warn' | 'log' | 'error';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SettingsService extends BaseClass {\n\n    /** Map of settings */\n    private _settings: SettingsMap = { api: {}, local: {}, session: {} };\n    /** Store for promises */\n    private _promises: { [name: string]: Promise<any> } = {};\n    /** Name of the application */\n    private _app_name = 'ACA';\n\n    constructor(private http: HttpClient) {\n        super();\n        const now = dayjs();\n        const built = now.isSame(build, 'd') ? `Today at ${build.format('h:mmA')}` : build.format('D MMM YYYY, h:mmA');\n        this.log('CORE', `${core_version}`, null, 'debug', true);\n        this.log('APP', `${version} | Built: ${built}`, null, 'debug', true);\n        this.init();\n    }\n\n    /**\n     * Initialise the settings\n     */\n    public async init() {\n        await this.loadFromFile('api');\n        this.loadStore('local', localStorage);\n        this.loadStore('session', sessionStorage);\n        if (this._settings.api.debug) {\n            window.debug = true;\n        }\n        if (this._settings.api.app && this._settings.api.app.name) {\n            this._app_name = this._settings.api.app.name;\n        }\n        this.log('Settings', 'Successfully loaded settings');\n        this._initialised.next(true);\n    }\n\n    /** Whether settings service has initialised */\n    public get app_name() { return this._app_name; }\n\n    /**\n     * Log data to the browser console\n     * @param type Type of message\n     * @param msg Message body\n     * @param args array of argments to log to the console\n     * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\n     * @param force Whether to force message to be emitted when debug is disabled\n     */\n    public log(type: string, msg: string, args?: any, stream: ConsoleStream = 'debug', force: boolean = false) {\n        if (window.debug || force) {\n            const colors: string[] = ['color: #E91E63', 'color: #3F51B5', 'color: default'];\n            if (args) {\n                console[stream](`%c[${this.app_name}]%c[${type}] %c${msg}`, ...colors, args);\n            } else {\n                console[stream](`%c[${this.app_name}]%c[${type}] %c${msg}`, ...colors);\n            }\n        }\n    }\n\n    /**\n     * Get a setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public get(key: string): any {\n        const keys = key.split('.');\n        let value = null;\n        if (keys[0] === 'session') {\n            keys.shift();\n            value = getItemWithKeys(keys, this._settings.session);\n        } else if (keys[0] === 'local') {\n            keys.shift();\n            value = getItemWithKeys(keys, this._settings.local);\n        } else {\n            value = getItemWithKeys(keys, this._settings.api) ||\n                getItemWithKeys(keys, this._settings.session) ||\n                getItemWithKeys(keys, this._settings.local);\n        }\n        return value;\n    }\n\n    /**\n     * Load settings from the given Storage object\n     * @param name Root key for the settings\n     * @param store Storage item to add to the load into the settings\n     */\n    private loadStore(name: string, store: Storage) {\n        if (store) {\n            for (let i = 0; i < store.length; i++) {\n                const key = store.key(i);\n                const item = store.getItem(key);\n                if (item) { this._settings[name][key] = item; }\n            }\n        }\n    }\n\n    /**\n     * Load setting data from a file\n     * @param name Namespace to add file data to\n     * @param file URL to file to load setting data from\n     */\n    private async loadFromFile(name: string, file: string = 'assets/settings.json', tries: number = 0) {\n        if (file !== 'assets/settings.json' && tries > 5) {\n            return Promise.resolve();\n        }\n        const key = `load|${name}|${file}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<void>((resolve, reject) => {\n                this.http.get(file).subscribe(\n                    (data) => {\n                        this._settings[name] = { ...(this._settings[name] || {}), ...(data || {}) };\n                    }, (e) => {\n                        this.log('Settings', `Failed to load settings from \"${file}\"`);\n                        this._promises[key] = null;\n                        this.loadFromFile(name, file, ++tries).then(() => resolve());\n                    }, () => resolve()\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n}\n","import { Subscription, BehaviorSubject } from \"rxjs\";\n\nexport class BaseClass {\n    /** Store for named timers */\n    protected _timers: { [name: string]: number } = {};\n    /** Store for named intervals */\n    protected _intervals: { [name: string]: number } = {};\n    /** Store for named subscription unsub callbacks */\n    protected _subscriptions: { [name: string]: (Subscription | (() => void)) } = {};\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n\n    /** Observable of the initialised state of the object */\n    public get initialised(): BehaviorSubject<boolean> {\n        return this._initialised;\n    }\n    /** Whether the object has been initialised */\n    public get is_initialised(): boolean {\n        return this._initialised.getValue();\n    }\n\n    /**\n     * Creates a named timer\n     * @param name Name of the timer\n     * @param fn Callback function for the timer\n     * @param delay Callback delay\n     */\n    protected timeout(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearTimeout(name);\n            this._timers[name] = <any>setTimeout(() => {\n                fn();\n                this._timers[name] = null;\n            }, delay);\n        } else {\n            throw new Error(\n                name ? 'Cannot create named timeout without a name' : 'Cannot create a timeout without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named timer\n     * @param name Timer name\n     */\n    protected clearTimeout(name: string) {\n        if (this._timers[name]) {\n            clearTimeout(this._timers[name]);\n            this._timers[name] = null;\n        }\n    }\n\n    /**\n     * Creates a named interval\n     * @param name Name of the interval\n     * @param fn Callback function for the interval\n     * @param delay Callback delay\n     */\n    protected interval(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearInterval(name);\n            this._intervals[name] = <any>setInterval(() => fn(), delay);\n        } else {\n            throw new Error(\n                name ? 'Cannot create named interval without a name' : 'Cannot create a interval without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named interval\n     * @param name Timer name\n     */\n    protected clearInterval(name: string) {\n        if (this._intervals[name]) {\n            clearInterval(this._intervals[name]);\n            this._intervals[name] = null;\n        }\n    }\n\n    /**\n     * Store named subscription\n     * @param name Name of the subscription\n     * @param unsub Unsubscribe callback or Subscription object\n     */\n    protected subscription(name: string, unsub: Subscription | (() => void)) {\n        this.unsub(name);\n        this._subscriptions[name] = unsub\n    }\n\n    /**\n     * Call unsubscribe callback with the given name\n     * @param name\n     */\n    protected unsub(name: string) {\n        if (this._subscriptions && this._subscriptions[name]) {\n            if (this._subscriptions[name] instanceof Subscription) {\n                (this._subscriptions[name] as Subscription).unsubscribe()\n            } else if (this._subscriptions[name] instanceof Function) {\n                (this._subscriptions[name] as any)();\n            }\n            this._subscriptions[name] = null;\n        }\n    }\n}\n","\nimport { Component, OnDestroy } from '@angular/core';\nimport { BaseClass } from './base.class';\n\n@Component({\n    selector: 'a-very-basic-component-base-that-should-not-be-used',\n    template: ``,\n    styles: [``]\n})\nexport class BaseComponent extends BaseClass implements OnDestroy {\n\n    public ngOnDestroy(): void {\n        // Clear local timers\n        for (const key in this._timers) {\n            if (this._timers.hasOwnProperty(key)) {\n                this.clearTimeout(key);\n            }\n        }\n        // Clear local intervals\n        for (const key in this._intervals) {\n            if (this._intervals.hasOwnProperty(key)) {\n                this.clearInterval(key);\n            }\n        }\n        // Clear local subscriptions\n        for (const key in this._subscriptions) {\n            if (this._subscriptions.hasOwnProperty(key)) {\n                this.unsub(key);\n            }\n        }\n    }\n}\n\n","<div *ngIf=\"group\">\n    <a-dropdown [items]=\"options\" [(ngModel)]=\"active_duration\" placeholder=\"Select duration...\" (ngModelChange)=\"setValue($event)\"></a-dropdown>\n</div>\n","import { Component } from '@angular/core';\nimport { FormGroup, AbstractControl } from '@angular/forms';\nimport { ADynamicFormField } from '@acaprojects/ngx-dynamic-forms';\n\nimport { BaseComponent } from '../../base.component';\nimport { getNextFreeBookingSlot } from '../../../services/data/bookings/booking.utilities';\nimport { humaniseDuration } from '../../utilities/general.utilities';\nimport { FORM_FIELDS } from '../../globals/form-fields';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'custom-duration-field',\n    templateUrl: './duration-field.component.html',\n    styleUrls: ['./duration-field.component.scss']\n})\nexport class CustomDurationFieldComponent extends BaseComponent  {\n    /** Form Control holding date data */\n    public date_control: AbstractControl;\n    /** Form Control holding space data */\n    public space_control: AbstractControl;\n    /** Step size for available times */\n    public block_size = 15;\n    /** Step size for available times */\n    public active_duration: { id: number, name: string };\n    /** List of available durations */\n    public options: { id: number, name: string }[] = [];\n\n    constructor(protected field: ADynamicFormField, public group: FormGroup) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        if (this.group) {\n            if (this.group.controls.date) {\n                this.date_control = this.group.controls.date;\n                this.subscription('date', this.date_control.valueChanges.subscribe(() => this.calculateAvailableDurations()));\n            }\n            if (this.group.controls.room || this.group.controls.space) {\n                this.space_control = this.group.controls.room || this.group.controls.space;\n                this.subscription('space', this.space_control.valueChanges.subscribe(() => this.calculateAvailableDurations()));\n            }\n            this.subscription('control', this.field.control.valueChanges.subscribe(() => this.updateDisplay()));\n        }\n        this.calculateAvailableDurations();\n    }\n\n    /**\n     * Update the active value displayed on the dropdown\n     */\n    public updateDisplay() {\n        if (this.options && this.options.length > 0) {\n            if (!this.active_duration) {\n                if (this.field.getValue()) {\n                    this.active_duration = this.options.find(i => i.id === this.field.getValue());\n                }\n                if (!this.active_duration) {\n                    this.active_duration = this.options[0];\n                    this.setValue(this.options[0]);\n                }\n            } else if (!this.options.find(i => i.id === this.active_duration.id)) {\n                let diff = 9999;\n                let new_opt = null;\n                for (const option of this.options) {\n                    if (Math.abs(option.id - this.active_duration.id) < diff) {\n                        diff = Math.abs(option.id - this.active_duration.id);\n                        new_opt = option;\n                    }\n                }\n                if (new_opt) {\n                    this.active_duration = new_opt;\n                    this.setValue(new_opt);\n                }\n            }\n        }\n    }\n\n    /**\n     * Generate a list of times selectable by the user\n     */\n    public calculateAvailableDurations() {\n        this.options = [];\n        let date = dayjs().startOf('m');\n        const max_duration = this.field.metadata ? this.field.metadata.max_duration || 600 : 600;\n        const min_duration = this.field.metadata ? this.field.metadata.min_duration || 30 : 30;\n        let end = date.add(max_duration, 'm');\n        if (this.space_control) {\n            // Get times based off available times in space\n            if (this.date_control && this.date_control.value) {\n                date = dayjs(this.date_control.value).startOf('m');\n            }\n            const slot = getNextFreeBookingSlot(this.space_control.value.bookings, date.valueOf(), min_duration);\n            if (slot) {\n                // Check if slot is after the active date\n                date = slot.start > date.valueOf() ? dayjs(slot.start).startOf('m') : date;\n            }\n            end = slot ? dayjs(slot.end).startOf('m') : dayjs(date).add(max_duration, 'm');\n        }\n        end = end.endOf('m');\n        // Get available durations between the date and end times\n        date = date.add(min_duration, 'm').startOf('m');\n        let duration = min_duration;\n        for (; date.isBefore(end, 's'); date = date.add(this.block_size, 'm')) {\n            this.options.push({ id: duration, name: humaniseDuration(duration) });\n            duration += 15;\n            if (this.options.length > Math.floor((max_duration - min_duration) / this.block_size)) {\n                break;\n            }\n        }\n        this.updateDisplay();\n    }\n\n    /**\n     * Update the value of the form field\n     * @param value New value\n     */\n    public setValue(block: { id: number, name: string }) {\n        this.field.setValue(block.id);\n    }\n}\n\nFORM_FIELDS.duration = CustomDurationFieldComponent;\n","<div *ngIf=\"group\">\n    <a-dropdown [items]=\"times\" [(ngModel)]=\"active_time\" placeholder=\"Select time...\" (ngModelChange)=\"setValue($event)\"></a-dropdown>\n</div>\n","import { Component } from '@angular/core';\nimport { FormGroup, AbstractControl } from '@angular/forms';\n\nimport { BaseComponent } from '../../base.component';\nimport { ADynamicFormField } from '@acaprojects/ngx-dynamic-forms';\nimport { getFreeBookingSlots } from '../../../services/data/bookings/booking.utilities';\n\nimport * as dayjs from 'dayjs';\nimport { FORM_FIELDS } from '../../globals/form-fields';\n\ninterface TimeSlot {\n    id: string;\n    name: string;\n    value?: number;\n}\n\n@Component({\n    selector: 'custom-time-field',\n    templateUrl: './time-field.component.html',\n    styleUrls: ['./time-field.component.scss']\n})\nexport class CustomTimeFieldComponent extends BaseComponent {\n    /** Form Control holding date data */\n    public date_control: AbstractControl;\n    /** Form Control holding space data */\n    public space_control: AbstractControl;\n    /** Step size for available times */\n    public block_size = 5;\n    /** Step size for available times */\n    public min_size = this.block_size * 6;\n    /** Step size for available times */\n    public active_time: TimeSlot;\n    /** List of selectable times */\n    public times: TimeSlot[];\n\n    constructor(protected field: ADynamicFormField, public group: FormGroup) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        if (this.group) {\n            if (this.group.controls.date) {\n                this.date_control = this.group.controls.date;\n                this.subscription('date', this.date_control.valueChanges.subscribe(() => this.updateDisplay(true)));\n            }\n            if (this.group.controls.room || this.group.controls.space) {\n                this.space_control = this.group.controls.room || this.group.controls.space;\n                this.subscription('space', this.space_control.valueChanges.subscribe(() => this.updateDisplay()));\n            }\n            this.subscription('control', this.field.control.valueChanges.subscribe(() => this.updateDisplay()));\n        }\n        this.calculateAvailableTimes();\n        if (this.date_control) {\n            const value = this.date_control.value;\n            if (!this.times.find(block => block.value === value)) {\n                this.setValue(this.times[0]);\n            }\n        }\n    }\n\n    /**\n     * Update the active value displayed on the dropdown\n     * @param from_ref Whether new value was generated from a reference field\n     */\n    public updateDisplay(from_ref: boolean = false) {\n        if (this.times) {\n            for (const time of this.times) {\n                if (this.field.getValue() === time.id) {\n                    this.active_time = time;\n                    break;\n                }\n            }\n            if (!this.field.getValue()) {\n                // Initialise with date time set on date control\n                if (this.date_control) {\n                    let date = dayjs(this.date_control.value);\n                    date = date.minute(Math.ceil(date.minute() / 5) * 5);\n                    const date_str = date.format('HH:mm');\n                    for (const time of this.times) {\n                        if (date.valueOf() - time.value <= 0) {\n                            this.active_time = time;\n                            this.setValue(time, true);\n                            break;\n                        }\n                    }\n                }\n                // Set to default value\n                if (!this.field.getValue()) {\n                    this.active_time = this.times[0];\n                    this.setValue(this.times[0], from_ref);\n                }\n            }\n        }\n    }\n\n    /**\n     * Generate a list of times selectable by the user\n     */\n    public calculateAvailableTimes() {\n        this.times = [];\n        let date = dayjs().startOf('m');\n        const book_ahead = this.field.metadata ? this.field.metadata.book_ahead || 660 : 660; // 11 hours default\n        const min_duration = this.field.metadata ? this.field.metadata.min_duration || 30 : 30;\n        if (this.space_control) {\n            // Get times based off available times in space\n            const slots = getFreeBookingSlots(this.space_control.value.bookings, min_duration);\n            date = date.minute(Math.ceil(date.minute() / this.block_size) * this.block_size);\n            const end = dayjs(date)\n                .add(book_ahead, 'm')\n                .endOf('m');\n            for (; date.isBefore(end, 's'); date = date.add(this.block_size, 'm')) {\n                const value = date.valueOf();\n                if (slots.find(i => i.start <= value && value < i.end && dayjs(i.end).diff(date, 'm') >= min_duration)) {\n                    this.times.push({ id: date.format('HH:mm'), name: date.format('h:mm A'), value: date.valueOf() });\n                }\n            }\n        } else {\n            // Get times from now\n            if (date.minute() % this.block_size !== 0) {\n                this.times.push({ id: date.format('HH:mm'), name: date.format('h:mm A') });\n            }\n            date = date.minute(Math.ceil(date.minute() / this.block_size) * this.block_size);\n            const end = dayjs(date).add(book_ahead, 'm');\n            for (; date.isBefore(end); date = date.add(this.block_size, 'm')) {\n                this.times.push({ id: date.format('HH:mm'), name: date.format('h:mm A'), value: date.valueOf() });\n            }\n        }\n        this.updateDisplay();\n    }\n\n    /**\n     * Update the value of the form field\n     * @param value New value\n     * @param from_ref Whether new value was generated from a reference field\n     */\n    public setValue(slot: TimeSlot, from_ref: boolean = false) {\n        this.field.setValue(slot.id);\n        if (this.date_control && !from_ref) {\n            const time = dayjs(slot.value);\n            const date = dayjs(this.date_control.value)\n                .hour(time.hour())\n                .minute(time.minute())\n                .startOf('m');\n            this.date_control.setValue(date.valueOf());\n        }\n    }\n}\n\nFORM_FIELDS.time = CustomTimeFieldComponent;\n","<div class=\"user-search\" widget>\n    <div class=\"search\" a-tooltip [show]=\"show && search_str && filtered_list.length > 0\" (showChange)=\"show = $event\" [content]=\"list\">\n        <div class=\"searchbar\">\n            <input type=\"text\" [(ngModel)]=\"search_str\" (ngModelChange)=\"search($event)\" (blur)=\"reset()\" placeholder=\"Search for host...\" />\n            <div class=\"spinner\" *ngIf=\"searching\">\n                <a-spinner circle-ring color=\"#000\"></a-spinner>\n            </div>\n        </div>\n        <ng-template #list>\n            <div class=\"user-list\">\n                <div class=\"item\" *ngFor=\"let item of filtered_list\" (mouseup)=\"select(item)\" (touchend)=\"select(item)\" feedback>\n                    <div class=\"name\" [innerHTML]=\"item.match_name || item.name\"></div>\n                    <div class=\"email\" [innerHTML]=\"item.match_email || item.email\"></div>\n                </div>\n            </div>\n        </ng-template>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Subject, Observable, of } from 'rxjs';\nimport { switchMap, debounceTime, distinctUntilChanged, map, catchError } from 'rxjs/operators';\n\nimport { ADynamicFormField } from '@acaprojects/ngx-dynamic-forms';\n\nimport { BaseComponent } from '../../base.component';\nimport { ApplicationService } from '../../../services/app.service';\nimport { User } from '../../../services/data/users/user.class';\nimport { filterList, matchToHighlight } from '../../utilities/general.utilities';\nimport { FORM_FIELDS } from '../../globals/form-fields';\n\n@Component({\n    selector: 'custom-user-search-field',\n    templateUrl: './user-search-field.component.html',\n    styleUrls: ['./user-search-field.component.scss']\n})\nexport class CustomUserSearchFieldComponent extends BaseComponent implements OnInit {\n    /** List of users from an API search */\n    public filtered_list: User[] = [];\n    /** List of users from an API search */\n    public search_results$: Observable<User[]>;\n    /** Whether to show list tooltip */\n    public show: boolean;\n    /** Search input field value */\n    public search_str: string;\n    /** Whether a query is in progress */\n    public searching: boolean;\n    /** Subject holding the value of the search */\n    private search$ = new Subject<string>();\n\n    constructor(protected field: ADynamicFormField, protected group: FormGroup, private service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        if (this.group) {\n            if (this.field.references && this.field.references.length > 0) {\n                const control = this.group.controls[this.field.references[0]];\n                if (control) {\n                    this.subscription('reference', control.valueChanges.subscribe(() => this.updateDisplay()));\n                }\n            }\n            this.subscription('control', this.field.control.valueChanges.subscribe(() => this.updateDisplay()));\n        }\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(400),\n            distinctUntilChanged(),\n            switchMap(query => {\n                this.searching = true;\n                this.show = true;\n                return query.length >= 3 ? (this.service.Users.query({ q: query.slice(0, 3), cache: 60 * 1000 }) as Promise<User[]>) : Promise.resolve([]);\n            }),\n            catchError((err) => of([])),\n            map(list => {\n                this.searching = false;\n                return filterList(this.search_str, list, ['name', 'email']);\n            })\n        );\n        // Process API results\n        this.search_results$.subscribe(list => {\n            this.filtered_list = list;\n            this.filtered_list.forEach((i: any) => {\n                i.match_name = matchToHighlight(i.match_name);\n                i.match_email = matchToHighlight(i.match_email);\n                return i;\n            });\n        });\n    }\n\n    /**\n     * Search for a user that matches the filter string\n     * @param filter String to filter users on\n     */\n    public search(filter: string) {\n        this.search_str = filter;\n        this.search$.next(filter);\n    }\n\n    /**\n     * Update input display string\n     */\n    public updateDisplay() {\n        const value = this.field.control.value;\n        this.search_str = value ? value.name : '';\n    }\n\n    /**\n     * Reset the display value for the search input\n     */\n    public reset() {\n        this.timeout('reset', () => {\n            const value = this.field.control.value;\n            this.search_str = value ? value.name : '';\n            this.show = false;\n        });\n    }\n\n    /**\n     * Set the active user\n     * @param user New active user\n     */\n    public select(user: User) {\n        if (user) {\n            this.field.setValue(user);\n        }\n        this.timeout('hide', () => {\n        this.show = false;\n        }, 100);\n    }\n}\n\nFORM_FIELDS.host = CustomUserSearchFieldComponent;\n","\nimport * as dayjs from 'dayjs';\n\n/** Version number of the application */\nexport const version = 'local-dev';\n/** Version number of the base application */\nexport const core_version = '1.0.0';\n/** Build time of the application */\nexport const build = dayjs();\n","\nimport { Type } from '@angular/core';\n\n/** List of form field contents mapped to corresponding keys */\nexport const FORM_FIELDS: { [id: string]: Type<any> } = {};","\nimport { IOverlayConfig } from \"@acaprojects/ngx-overlays\";\n\n/** List of Overlays to register on application initialisation */\nexport const OVERLAY_REGISTER: { id: string; config: IOverlayConfig }[] = [];\n","\nimport './systems.mock';\n","\nimport { MockHttpRequestHandlerOptions } from '@acaprojects/ts-composer';\n\nimport { HashMap } from \"../utilities/types.utilities\";\nimport { generateMockSpace } from \"../../services/data/spaces/space.utilities\";\nimport { setMockBookingStartDatetime } from \"../../services/data/bookings/booking.utilities\";\nimport { generateMockUser } from \"../../services/data/users/user.utilities\";\n\nimport * as dayjs from 'dayjs';\n\ninterface IMockEngineSystem {\n    id?: string;\n    name?: string;\n    [module: string]: HashMap[] | string;\n}\n\nexport interface IBookingPanelBindings {\n    /** Whether user input is enabled */\n    touch_enabled: boolean;\n    /** Number of seconds before a meeting can be started, being truthy enables start/stop and auto-cancellations */\n    timeout?: number;\n    /** Number of seconds after the start of a meeting when it is auto-cancelled, overrides `timeout` value */\n    cancel_timeout?: number;\n    /** Whether to display hearing assistance UI elements */\n    has_accessability?: boolean;\n    /** URL to embed into the control modal when opened */\n    control_url?: string;\n    /** Whether to display catering UI elements */\n    has_catering?: boolean;\n    /** Whether to hide booking details(title and host) */\n    hide_details?: boolean;\n    /** Whether to hide the title of the displayed bookings */\n    hide_title?: boolean;\n    /** Whether to hide user(host) details */\n    hide_user?: boolean;\n    /** Whether to hide timeline availability */\n    hide_availability?: boolean;\n    /** Whether to disable booking from the UI */\n    booking_disabled?: boolean;\n    /** Whether booking future meetings are allowed */\n    no_timeline_bookings?: boolean;\n    /** Time before the booking end with which the current booking is endable in ms from UTC epoch */\n    is_endable?: number;\n    /** Whether to automatically ask user starting the current meeting */\n    ask_start?: boolean;\n    /** Whether to automatically ask user about ending the active meeting */\n    ask_end?: boolean;\n    /** Default meeting title if the displayed meeting doesn't have one */\n    default_title?: string;\n    /** Hide all meeting related details */\n    hide_all?: boolean;\n    /** Title of the active space */\n    title?: string;\n    /** Description of the active space */\n    description?: string;\n    /** URL of an icon image to display on the UI */\n    icon?: string;\n    /** Whether the space status is displayed on the right */\n    flip_status?: boolean;\n    /** Whether bookings can be automatically cancelled once they expire */\n    can_cancel?: boolean;\n    /** Minimum bookable duration in minutes */\n    min_duration?: number;\n    /** Maximum bookable duration in minutes */\n    max_duration?: number;\n    /** Start time of the business day with format `HH:mm` */\n    business_start?: string;\n    /** End time of the business day with format `HH:mm` */\n    business_end?: string;\n\n}\n\nconst LETTERS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('');\nconst NUMBERS = '0123456789'.split('');\n\nlet index = 0;\n\nconst SPACE_LIST: any[] = [];\n\nconst IMAGES: string[] = ['large_down', 'large_up', 'small_down', 'small_up'];\n\n/**\n * Create mock engine booking module with appropriate bookings and space data\n */\nfunction createSystem(): IMockEngineSystem {\n    const id = `sys-${LETTERS[Math.floor(index / NUMBERS.length)]}${NUMBERS[(index++) % NUMBERS.length]}`;\n    setMockBookingStartDatetime(dayjs().minute(-50).valueOf());\n    const space = generateMockSpace(id);\n    SPACE_LIST.push(space);\n    const bindings: IBookingPanelBindings = {\n        touch_enabled: true,\n        timeout: 300,\n        cancel_timeout: 600,\n        has_catering: true,\n        control_url: 'https://aca.im/demo/aca/control/',\n        icon: `/assets/img/${IMAGES[Math.floor(Math.random() * IMAGES.length)]}.png`\n    };\n    const system = {\n        id, name: space.name,\n        Bookings: []\n    };\n    system.Bookings.push({\n        ...bindings,\n        room_name: space.name,\n        today: space.bookings,\n        reload: dayjs().add(1, 'h').unix(),\n        $start_meeting: (time: number) => {\n            system.Bookings[0].last_meeting_started = time;\n        },\n        $cancel_meeting: (time: number, reason: string) => {\n            const list = system.Bookings[0].today;\n            system.Bookings[0].today = list.filter(i => i.date !== time);\n        },\n        $waiter_call: () => {\n            console.log(`[MOCK][${id}] Waiter called...`);\n        }\n    });\n    return system;\n}\n\n\nexport const MOCK_SYSTEMS = Array(10).fill(0).map(i => createSystem());\n\n// Add mock systems to the global space so that the mock websocket can hook into them\nif (!window.control) {\n    window.control = { systems: {} };\n}\nwindow.control.systems = MOCK_SYSTEMS.reduce((a: { [module:string]: IMockEngineSystem }, v) => {\n    a[v.id] = v;\n    return a;\n}, {});\n\n// Add mock data for API endpoints\nconst USER_LIST = Array(1000).fill(0).map(i => generateMockUser());\n\nconst handlers: MockHttpRequestHandlerOptions[] = [\n    {\n        path: '/api/engine/v2/systems',\n        metadata: null,\n        method: 'GET',\n        callback: _ => ({ total: 10, results: MOCK_SYSTEMS })\n    },\n    {\n        path: '/api/staff/rooms',\n        metadata: null,\n        method: 'GET',\n        callback: _ => SPACE_LIST\n    },\n    {\n        path: '/api/staff/users',\n        metadata: null,\n        method: 'GET',\n        callback: _ => USER_LIST\n    },\n    {\n        path: '/api/engine/v2/users/current',\n        metadata: null,\n        method: 'GET',\n        callback: _ => USER_LIST[0]\n    },\n    {\n        path: '/api/engine/v2/zones',\n        metadata: null,\n        method: 'GET',\n        callback: _ => ({ total: 1, results: [{ id: 'zone_org-1' }] })\n    }\n];\nwindow.control.handlers = handlers;\n","\nimport { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { ADropdownsModule } from '@acaprojects/ngx-dropdown';\nimport { ASpinnerModule } from '@acaprojects/ngx-spinners';\nimport { AButtonsModule } from '@acaprojects/ngx-buttons';\nimport { APipesModule } from '@acaprojects/ngx-pipes';\nimport { AOverlayModule } from '@acaprojects/ngx-overlays';\nimport { ADynamicFormsModule } from '@acaprojects/ngx-dynamic-forms';\nimport { ACustomEventsModule } from '@acaprojects/ngx-custom-events';\n\nimport { BaseComponent } from './base.component';\nimport { CustomUserSearchFieldComponent } from './components/user-search-field/user-search-field.component';\nimport { CustomTimeFieldComponent } from './components/time-field/time-field.component';\nimport { CustomDurationFieldComponent } from './components/duration-field/duration-field.component';\n\nconst COMPONENTS: Type<any>[] = [\n    BaseComponent\n];\n\nconst ENTRY_COMPONENT: Type<any>[] = [\n    CustomUserSearchFieldComponent,\n    CustomTimeFieldComponent,\n    CustomDurationFieldComponent\n]\n\n@NgModule({\n    declarations: [\n        ...COMPONENTS,\n        ...ENTRY_COMPONENT,\n    ],\n    imports: [\n        CommonModule,\n        ADropdownsModule,\n        ASpinnerModule,\n        AButtonsModule,\n        AOverlayModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ACustomEventsModule,\n        ADynamicFormsModule\n    ],\n    exports: [\n        ADropdownsModule,\n        ASpinnerModule,\n        AButtonsModule,\n        APipesModule,\n        AOverlayModule,\n        ACustomEventsModule,\n        ADynamicFormsModule,\n        ...COMPONENTS,\n        ...ENTRY_COMPONENT\n    ],\n    entryComponents: [\n        ...COMPONENTS,\n        ...ENTRY_COMPONENT\n    ]\n})\nexport class SharedContentModule {}\n","import { HashMap } from \"./types.utilities\";\n\n/**\n * Convert map into a query string\n * @param map Key value pairs to convert\n */\nexport function toQueryString(map: HashMap) {\n    let str = '';\n    if (map) {\n        for (const key in map) {\n            if (map.hasOwnProperty(key) && map[key] !== undefined && map[key] !== null) {\n                str += `${(str ? '&' : '')}${key}=${map[key]}`;\n            }\n        }\n    }\n    return str;\n}\n","\nimport { humaniseDuration } from './general.utilities';\n\nimport { User } from '../../services/data/users/user.class';\nimport { Space } from '../../services/data/spaces/space.class';\n\nimport * as dayjs from 'dayjs';\n\n// attendees: FormFormatters.attendees(user),\n// date: FormFormatters.date,\n// room: FormFormatters.space,\n// recurrence: FormFormatters.recurrence\n\n/**\n * Get function to create formatted string for a list of users with a host\n * @param host Host user\n */\nexport function formatAttendeesWithHost(host: User): (_: User[]) => string {\n    return (l) => formatAttendees(l, host);\n}\n\n/**\n * Create formatted string from a list of users\n * @param list List of users\n * @param host Owner of the list of users\n */\nexport function formatAttendees(list: User[], host?: User) {\n    let attendee_str: string = '';\n    if (list && list.length > 0) {\n        const users = [...list];\n        if (host) {\n            const result = users.find(a => a.email === host.email);\n            if (result) {\n                users.splice(users.indexOf(result), 1);\n            }\n        }\n        const length = users.length + (host ? 1 : 0);\n        attendee_str = `${length} Attendee${length === 1 ? '' : 's'}; ${host ? host.name : ''}`;\n        for (const item of users) {\n            if (attendee_str) {\n                attendee_str += ', ';\n            }\n            attendee_str += item.name;\n        }\n        attendee_str = attendee_str.replace('; ,', ';');\n    }\n    return attendee_str;\n}\n\n/**\n * Create date formatted string for given date\n * @param date Date to format\n */\nexport function formatDate(date: number) {\n    return dayjs(date).format('DD MMMM YYYY');\n}\n\n/**\n * Create time formatted string for given date\n * @param date Date to format\n */\nexport function formatTime(date: number) {\n    return dayjs(date).format('h:mm A');\n}\n\n/**\n * Create formatted string for a period of given duration\n * @param duration Period duration in minutes\n */\nexport function formatPeriodWithDuration(duration: number) {\n    return (t) => formatPeriod(t, duration);\n}\n\n/**\n * Create formatted string for a period of given duration\n * @param timestamp Start hours and minutes of the period in the format `HH:mm`\n * @param duration Period duration in minutes\n */\nexport function formatPeriod(timestamp: string, duration: number = 60) {\n    const parts = timestamp.split(':');\n    const date = dayjs().hour(+parts[0]).minute(+parts[1]);\n    return `${date.format('h:mm A')} - ${date.add(duration, 'm').format('h:mm A')} (${humaniseDuration(duration)})`;\n}\n\n/**\n * Create formatted human readable string for a given duration\n * @param duration Duration in minutes\n */\nexport function formatDuration(duration: number) {\n    return humaniseDuration(duration);\n}\n\n/** Human readable names of applicable recurrence periods */\nexport const RECURRENCE_PERIODS: string[] = ['None', 'Daily', 'Weekly', 'Monthly', 'Yearly'];\n\n/**\n * Create human readable string for recurrence metadata\n * @param value\n */\nexport function formatRecurrence(value: { period: string | number, end: number }) {\n    if (!value || !value.period || value.period as any >= RECURRENCE_PERIODS.length) {\n        return 'No recurrence';\n    }\n    const period = typeof value.period === 'string' ? value.period : RECURRENCE_PERIODS[value.period];\n    const end = value.end ? `until ${dayjs(value.end).format('DD MMM YYYY')}` : 'forever';\n    return `${period} ${end}`;\n}\n\n/**\n * Create human readable string for a room or list of rooms\n * @param list List of spaces/rooms\n */\nexport function formatSpaces(list: Space | Space[]) {\n    if (!list || (list instanceof Array && list.length <= 0)) {\n        return 'No selected space';\n    }\n    if (list instanceof Array) {\n        return list.length === 1 ? list[0].name : `${list.length} Space${list.length !== 1 ? 's' : ''}`;\n    } else {\n        const capacity = list.capacity ? '(' + list.capacity + ' ' + (list.capacity === 1 ? 'person' : 'people') + ')' : '';\n        return `${list.name} ${capacity}`;\n    }\n}\n","import { HashMap } from './types.utilities';\n\nimport * as dayjs from 'dayjs';\n\nexport function getItemWithKeys(keys: string[], map: HashMap) {\n    const key = keys.shift();\n    if (map[key]) {\n        return keys.length > 0 ? getItemWithKeys(keys, map[key]) : map[key];\n    }\n    return null;\n}\n\n/**\n * Checks whether the platform is a mobile device.\n */\nexport function isMobileDevice(): boolean {\n    const r = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i;\n    return !!navigator.userAgent.match(r);\n}\n\n/**\n * Checks whether the browser is Mobile Safari.\n */\nexport function isMobileSafari(): boolean {\n    const agent = navigator.userAgent;\n    return !!(agent.match(/iPhone|iPad|iPod/) && agent.match(/AppleWebKit/) && !agent.match('CriOS'));\n}\n\n/**\n * Checks whether the browser is Android Chrome.\n */\nexport function isAndroidChrome(): boolean {\n    const agent = navigator.userAgent;\n    return !!(agent.match(/Android/) && agent.match(/Chrome/));\n}\n\n/**\n * Generate string representation of a number with zeros padding the length\n * @param value Number to pad with zeros\n * @param length Length of the resulting string\n */\nexport function padZero(value: number, length: number): string {\n    let str = value.toString();\n    while (str.length < length) {\n        str = '0' + str;\n    }\n    return str;\n}\n\n/**\n * Remove duplicates from the given array\n * @param array List of items to remove duplicates from\n * @param key Key on array objects to compare for uniqueness\n */\nexport function unique(array: any[], key: string = '') {\n    return array.filter((el, pos, arr) =>\n        arr.indexOf(key ? arr.find(i => i[key] === el[key]) : arr.find(i => i === el)) === pos\n    );\n}\n\n/**\n * Convert duration to human readable string\n * @param duration Duration in minutes\n * @param short Whether to use short form of duration words e.g. hours as h\n */\nexport function humaniseDuration(duration: number, short: boolean = false) {\n    if (!duration || duration < 0) { return ''; }\n    const h = Math.floor(duration / 60);\n    let d = `${h >= 1 ? (h + (short ? 'h' : (' hour' + (h === 1 ? '' : 's')))) : ''}`;\n    if (duration % 60 !== 0) {\n        if (d) { d += short ? ' ' : ', '; }\n        const m = duration % 60;\n        d += `${m >= 1 ? (m + (short ? 'm' : (' minute' + (m === 1 ? '' : 's')))) : ''}`;\n    }\n    return d;\n}\n\n/**\n * Get a filtered list of items\n * @param filter Value to filter on\n * @param items List of results to filter\n * @param fields Fields to check for matches on each item\n */\nexport function filterList<T = HashMap>(filter: string, items?: T[], fields: string[] = ['id']): T[] {\n    let results: any[];\n    // Tokenise filter string\n    const filters = (filter || '').toLowerCase().split(' ');\n    const list = {};\n    for (const f of filters) {\n        if (f) {\n            if (!list[f]) { list[f] = 0; }\n            list[f]++;\n        }\n    }\n    // Group similar tokens\n    const parts = [];\n    for (const f in list) {\n        if (list.hasOwnProperty(f)) {\n            parts.push({ word: f, count: list[f], regex: new RegExp(f, 'gi') });\n        }\n    }\n    parts.sort((a, b) => b.word.length - a.word.length || a.word.localeCompare(b.word));\n    const item_list = JSON.parse(JSON.stringify(items || []));\n    if (filter) {\n        results = item_list.filter(\n            (item) => {\n                let match_count = 0;\n                item.match_index = 65535;\n                item.match = '';\n                const field_list = {};\n                // Initialise field match variables\n                for (const f of fields) {\n                    field_list[f] = {\n                        value: (item[f] || '').toLowerCase(),\n                        index: 65536,\n                        matched: 0\n                    };\n                }\n                // Search for matches with the tokenised filter string\n                for (const i of parts) {\n                    if (i.word) {\n                        // Check fields for matches\n                        for (const f of fields) {\n                            const field = field_list[f];\n                            const index = field.value.indexOf(i.word);\n                            field.index = index < field.index ? index : field.index;\n                            field.matches = (field.value.match(i.regex) || []).length;\n                            field.value = field.value.replace(i.regex, ' ');\n                        }\n                        // Update token match count\n                        for (const f of fields) {\n                            const field = field_list[f];\n                            if (field.matches >= i.count) {\n                                match_count++;\n                                // Update field matches\n                                let changed = 0;\n                                const tokens = (item[`match_${f}`] || item[f] || '').split(' ');\n                                for (const k of tokens) {\n                                    if (changed >= i.count) {\n                                        break;\n                                    }\n                                    if (k.toLowerCase().indexOf(i.word) >= 0 && k.indexOf('`') < 0) {\n                                        tokens[tokens.indexOf(k)] = k.replace(i.regex, '`$&`');\n                                        changed++;\n                                    }\n                                }\n                                item[`match_${f}`] = tokens.join(' ');\n                                break;\n                            }\n                        }\n                    }\n                }\n                // Get field with the most relevent match\n                for (const f of fields) {\n                    const field = field_list[f];\n                    if (field.index < item.match_index && field.index >= 0) {\n                        item.match_index = field.index;\n                        item.match = f;\n                    }\n                }\n                return item.match_index >= 0 && item.match && (match_count >= parts.length);\n            });\n    } else {\n        results = item_list;\n    }\n    // Sort by order of relevence then name\n    results.sort((a, b) => {\n        const diff = a.match_index - b.match_index;\n        return diff === 0 ? a.name.localeCompare(b.name) : diff;\n    });\n    return results;\n}\n\n/**\n * Convert a match string from `filterList` to renderable HTML\n * @param str Match string to change\n */\nexport function matchToHighlight(str: string): string {\n    if (str) {\n        str = str.replace(/\\`[a-zA-Z0-9\\@\\.\\_]*\\`/g, '<span class=\"highlight\">$&</span>');\n        str = str.replace(/\\`/g, '');\n    }\n    return str;\n}\n\n/**\n * Convert time string to ms from UTC epoch for today\n * @param time Time string in the format `HH:mm`\n */\nexport function timeToDate(time: string): number {\n    const parts = (time || '').split(':');\n    const date = dayjs().hour(+parts[0]).minute(+parts[1]).startOf('m');\n    return date.valueOf();\n}\n","import { AbstractControl } from '@angular/forms';\n\nimport { User } from '../../services/data/users/user.class';\n\nimport * as dayjs from 'dayjs';\n\nconst HAS_ERROR = true;\n\n/**\n * Check that control value is a date that is the same or after from date\n * @param control Angular form control\n * @param is_from Comparison date(ms from UTC epoch). Defaults to the current time\n */\nexport function validateDate(control: AbstractControl, is_from: number = dayjs().valueOf()) {\n    const from = dayjs(is_from);\n    const date = dayjs(control.value || undefined);\n    return date.isBefore(from, 'd') ? { date: HAS_ERROR, message: 'Booking needs to be made in the future' } : null;\n}\n\n/**\n * Build start time validation function\n * @param date Date of the time to check\n * @param is_from Comparison date(ms from UTC epoch). Defaults to the current time\n */\nexport function buildValidateStartTime(date: number, is_from: number = dayjs().valueOf()) {\n    return (c) => validateStartTime(c, date, is_from);\n}\n\n/**\n * Check that control value time is after the comparison date time\n * @param control Angular form control\n * @param date Date of the time to check\n * @param is_from Comparison date(ms from UTC epoch). Defaults to the current time\n */\nexport function validateStartTime(control: AbstractControl, date: number, is_from: number = dayjs().valueOf()) {\n    const now = dayjs(is_from);\n    const parts = control.value.split(':');\n    const date_obj = dayjs(date).hour(+parts[0]).minute(+parts[1]);\n    return date_obj.isBefore(now, 'm') ? { start: HAS_ERROR, message: 'Booking time needs to be made in the future' } : null;\n}\n\nexport function buildValidateDuration(min: number = 30, max: number = 240) {\n    return (c) => validateDuration(c, min, max);\n}\n\nexport function validateDuration(control: AbstractControl, min: number = 30, max: number = 240) {\n    if (control.value < (min || 30)) {\n        return { duration: HAS_ERROR, message: `Minimum booking duration is ${min} minute${min === 1 ? 's' : ''}` };\n    } else if (control.value > (max || 480)) {\n        return { length: HAS_ERROR, message: `Maximum booking duration is ${max} minute${max === 1 ? 's' : ''}` };\n    }\n    return null;\n}\n\nexport function buildValidateAttendees(host: User, min: number = 0) {\n    return (c) => validateAttendees(c, host, min);\n}\n\nexport function validateAttendees(control: AbstractControl, host: User, min: number = 0) {\n    if (!control || !(control.value instanceof Array)) {\n        return min > 0\n            ? { invalid: true, message: `Minimum of ${min} attendee${min === 1 ? ' is' : 's are'} required other than you` }\n            : null;\n    }\n    const list: User[] = control.value;\n    if (host) {\n        const result = list.find(a => a.email === host.email);\n        if (result) { list.splice(list.indexOf(result), 1); }\n    }\n    return list.length >= min ? null : {\n        count: true,\n        message: `Minimum of ${min} attendee${min === 1 ? ' is' : 's are'} required other than you`\n    };\n}\n","<div class=\"bootstrap\">\n    <div class=\"options\">\n        <div class=\"header fs-big\">\n            <h1>Booking Panel Setup</h1>\n            <div\n                class=\"toggle\"\n                feedback\n                center=\"true\"\n                *ngIf=\"system_list && system_list.length > 0\"\n                (tapped)=\"manual_input = !manual_input\"\n            >\n                <i class=\"material-icons\">{{ manual_input ? 'list' : 'code' }}</i>\n            </div>\n        </div>\n        <div class=\"body\" *ngIf=\"!loading\">\n            <ng-container *ngIf=\"manual_input; else list_desc\">\n                <p class=\"description\">\n                    Input the Engine System ID to bootstrap\n                </p>\n                <div class=\"content\">\n                    <div class=\"input\" [class.focus]=\"input_focus || system_id\">\n                        <input [(ngModel)]=\"system_id\" (focus)=\"input_focus = true\" (blur)=\"input_focus = false\" />\n                        <div class=\"placeholder\" [class.focus]=\"input_focus\">Engine System ID</div>\n                    </div>\n                </div>\n            </ng-container>\n            <ng-template #list_desc>\n                <p class=\"description\">\n                    Select the relevent system from the available dropdown\n                </p>\n                <div class=\"content\">\n                    <a-dropdown\n                        klass=\"fill\"\n                        [items]=\"system_list\"\n                        [(ngModel)]=\"selected_system\"\n                        [options]=\"{ can_filter: true }\"\n                        placeholder=\"Select system\"\n                    ></a-dropdown>\n                </div>\n            </ng-template>\n        </div>\n        <div class=\"body\" *ngIf=\"loading\">\n            <div class=\"info-block\">\n                <div class=\"icon\">\n                    <a-spinner circle-ring color=\"#000\"></a-spinner>\n                </div>\n                <div class=\"text\">\n                    Loading system data...\n                </div>\n            </div>\n        </div>\n        <div class=\"footer\" *ngIf=\"!loading\">\n            <button\n                widget\n                [disabled]=\"(manual_input && !system_id) || (!manual_input && (!selected_system || !selected_system.id))\"\n                (tapped)=\"bootstrap()\"\n            >\n                Submit\n            </button>\n        </div>\n    </div>\n</div>\n","\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { EngineSystem } from '@acaprojects/ts-composer';\n\nimport { ApplicationService } from '../../services/app.service';\nimport { BaseComponent } from '../../shared/base.component';\n\n@Component({\n    selector: 'app-bootstrap',\n    templateUrl: './bootstrap.component.html',\n    styleUrls: ['./bootstrap.component.scss']\n})\nexport class BootstrapComponent extends BaseComponent implements OnInit {\n    /** Whether to show manual input for bootstrap ID */\n    public manual_input: boolean;\n    /** List of available systems */\n    public system_list: EngineSystem[] = [];\n    /** Whether application data is loading */\n    public loading: boolean;\n    /** ID of the system to bootstrap */\n    public system_id: string;\n    /** Selected system to bootstrap */\n    public selected_system: EngineSystem = null;\n    /** Whether input field is focused */\n    public input_focus: boolean;\n\n    constructor(private service: ApplicationService, private route: ActivatedRoute) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.loading = true;\n        this.subscription('app_ready', this.service.initialised.subscribe((is_ready) => {\n            if (is_ready) {\n                this.subscription('route.query', this.route.queryParamMap.subscribe((params) => {\n                    if (params.has('clear') && params.get('clear')) {\n                        this.clearBootstrap();\n                    }\n                    if (params.has('system_id') || params.has('sys_id')) {\n                        this.system_id = params.get('system_id') || params.get('sys_id');\n                        this.manual_input = true;\n                        this.bootstrap();\n                    }\n                }));\n                this.subscription('system_list', this.service.Systems.listen('list', (systems) => {\n                    this.system_list = systems || [];\n                    this.manual_input = !this.system_list || this.system_list.length <= 0;\n                }));\n                this.loadList();\n                this.checkBootstrapped();\n                this.unsub('app_ready');\n            }\n        }));\n    }\n\n    /**\n     * Setup the default system for the application to bind to\n     */\n    public bootstrap() {\n        if (this.manual_input && this.system_id) {\n            this.configure(this.system_id);\n        } else if (this.selected_system) {\n            this.configure(this.selected_system.id);\n        }\n    }\n\n    /**\n     * Grab the list of systems from the Systems Manager\n     * @param tries Number of previous attempts\n     */\n    private loadList(tries: number = 0): void {\n        this.system_list = this.service.Systems.list || [];\n        if ((!this.system_list || this.system_list.length <= 0) && tries < 10) {\n            this.timeout('load', () => this.loadList(++tries));\n            return;\n        }\n        if (!this.system_list || this.system_list.length <= 0) {\n            this.manual_input = true;\n        }\n        this.loading = false;\n    }\n\n    /**\n     * Check if the application has previously been bootstrapped\n     */\n    private checkBootstrapped(): void {\n        this.loading = true;\n        if (localStorage) {\n            const system_id = localStorage.getItem('ACA.PANEL.system') || localStorage.getItem('ACA.CONTROL.system');\n            if (system_id) {\n                this.service.navigate(['panel', system_id]);\n                return;\n            }\n        }\n        this.loading = false;\n    }\n\n    /**\n     * Save the bootstrapped ID and redirect to the panel for that ID\n     * @param system_id System to bootstrap\n     */\n    private configure(system_id: string): void {\n        if (localStorage) {\n            localStorage.setItem('ACA.PANEL.system', system_id);\n        }\n        this.service.navigate(['panel', system_id]);\n    }\n\n    /**\n     * Remove any previously set bootstrapping details\n     */\n    private clearBootstrap() {\n        if (localStorage) {\n            localStorage.removeItem('ACA.PANEL.system');\n        }\n    }\n\n}\n\n","<div class=\"panel-array\">\n    <ng-container *ngIf=\"systems && systems.length > 0; else none\">\n        <div\n            class=\"panel-outlet\"\n            *ngFor=\"let id of systems | slice: 0:4; let i = index\"\n            [style.height]=\"systems.length >= 2 ? '50%' : '100%'\"\n        >\n            <app-booking-panel *ngIf=\"id; else empty_state\" [system_id]=\"id\" [show_time]=\"false\" [reverse]=\"i % 2 !== 0\"></app-booking-panel>\n        </div>\n    </ng-container>\n    <ng-template #none>\n        <div class=\"info-block\">\n            <div class=\"text\">No systems are set for displaying on the panel array</div>\n        </div>\n    </ng-template>\n</div>\n<ng-template #empty_state>\n    <div class=\"container\">\n        <div class=\"content center\">\n            <div class=\"logo\" *ngIf=\"logo\">\n                <img [src]=\"logo\"/>\n            </div>\n            <div class=\"time\">{{ time }}</div>\n        </div>\n    </div>\n</ng-template>\n\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { BaseComponent } from '../../shared/base.component';\nimport { ApplicationService } from 'src/app/services/app.service';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'app-booking-panel-array',\n    templateUrl: './panel-array.component.html',\n    styleUrls: ['./panel-array.component.scss']\n})\nexport class BookingPanelArrayComponent extends BaseComponent implements OnInit {\n    /** List of systems to show panels for */\n    public systems: string[];\n    /** Application logo */\n    public logo: string;\n\n    /** Display value for the current time */\n    public get time(): string {\n        return dayjs().format('h:mm:ss A')\n    }\n\n    constructor(private route: ActivatedRoute, private _service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription('app_ready', this._service.initialised.subscribe((is_ready) => {\n            if (is_ready) {\n                this.subscription('route.query', this.route.queryParamMap.subscribe((params) => {\n                    if (params.has('system_ids')) {\n                        this.systems = (params.get('system_ids') || '').split(',');\n                    }\n                }));\n                const logo = this._service.setting('app.logo');\n                this.logo = (logo ? logo.inverse : null) || '';\n                this.unsub('app_ready');\n            }\n        }));\n    }\n}\n","<div class=\"panel-select\" (window:mousedown)=\"reset()\" (window:touchstart)=\"reset()\">\n    <div class=\"panel-options\">\n        <ng-container *ngIf=\"systems && systems.length > 0; else none\">\n            <div class=\"item\" *ngFor=\"let id of systems | slice: 0:8; let i = index\" (tapped)=\"system_name[id] ? showPanel(id) : ''\">\n                <div class=\"bindings\" *ngIf=\"id\">\n                    <i binding [sys]=\"id\" mod=\"Bookings\" bind=\"room_name\" [(model)]=\"system_name[id]\"></i>\n                    <i binding [sys]=\"id\" mod=\"Bookings\" bind=\"icon\" [(model)]=\"system_icon[id]\"></i>\n                    <i binding [sys]=\"id\" mod=\"Bookings\" bind=\"today\" (modelChange)=\"updateStatus(id, $event)\"></i>\n                </div>\n                <div [class]=\"'icon' + (system_status[id] ? ' ' + system_status[id] : '')\">\n                    <img *ngIf=\"system_name[id]\" [src]=\"system_icon[id]\">\n                    <a-spinner *ngIf=\"!system_name[id]\" circle-ring color=\"#fff\"></a-spinner>\n                </div>\n                <div class=\"text\">{{ system_name[id] || id + ' connecting...' }}</div>\n            </div>\n        </ng-container>\n    </div>\n    <div class=\"panel-outlet\" *ngIf=\"active_system\">\n        <app-booking-panel [system_id]=\"active_system\"></app-booking-panel>\n        <div class=\"overlay\">\n            <button widget class=\"action close\" (tapped)=\"close()\" (contextmenu)=\"$event.preventDefault()\">\n                <div class=\"icon\">\n                    <i class=\"material-icons\">close</i>\n                </div>\n            </button>\n            <button widget class=\"action countdown\" (contextmenu)=\"$event.preventDefault()\">{{ countdown }}</button>\n        </div>\n    </div>\n    <ng-template #none>\n        <div class=\"info-block\">\n            <div class=\"text\">No systems are set for displaying on the panel select list</div>\n        </div>\n    </ng-template>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { BaseComponent } from '../../shared/base.component';\nimport { ActivatedRoute } from '@angular/router';\nimport { HashMap } from '../../shared/utilities/types.utilities';\nimport { Space } from '../../services/data/spaces/space.class';\nimport { ApplicationService } from '../../services/app.service';\n\n@Component({\n    selector: 'app-booking-panel-select',\n    templateUrl: './panel-select.component.html',\n    styleUrls: ['./panel-select.component.scss']\n})\nexport class BookingPanelSelectComponent extends BaseComponent implements OnInit {\n    /** List of systems to show panels for */\n    public systems: string[];\n    /** Names for the list of systems */\n    public system_name: HashMap<string> = {};\n    /** Icons for the list of systems */\n    public system_icon: HashMap<string> = {};\n    /** Status for the list of systems */\n    public system_status: HashMap<string> = {};\n    /** Active Panel system */\n    public active_system: string;\n    /** Countdown counter */\n    public countdown: number;\n\n    constructor(private route: ActivatedRoute, private service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription('route.query', this.route.queryParamMap.subscribe((params) => {\n            if (params.has('system_ids')) {\n                this.systems = (params.get('system_ids') || '').split(',');\n            }\n        }));\n    }\n\n    /**\n     * Show booking panel for the given system ID\n     * @param id ID of the system to show\n     */\n    public showPanel(id: string) {\n        this.active_system = id;\n        this.reset();\n    }\n\n    /**\n     * Update the status value for the given system ID\n     * @param id ID of the system to update\n     * @param bookings List of current bookings for the system\n     */\n    public updateStatus(id: string, bookings: HashMap[]) {\n        const space = new Space(this.service.Spaces, { id, bookings });\n        this.system_status[id] = space.current ? 'available' : 'unavailable';\n    }\n\n    /**\n     * Close the modal\n     */\n    public close() {\n        this.active_system = null;\n        this.clearInterval('countdown');\n    }\n\n    /**\n     * User confirmation of the content of the modal\n     */\n    public reset() {\n        if (this.active_system) {\n            this.countdown = 30;\n            this.interval('countdown', () => this.tick(), 1000);\n        }\n    }\n\n    /**\n     * Decrement countdown and close if 0\n     */\n    public tick() {\n        if (this.countdown <= 0) {\n            this.close();\n        }\n        this.countdown--;\n    }\n}\n","<div class=\"booking-actions\">\n    <div class=\"actions\" *ngIf=\"space\">\n        <button widget class=\"end large action\" *ngIf=\"status === 'endable'\" (tapped)=\"confirmEnd()\" (contextmenu)=\"$event.preventDefault()\">\n            <div class=\"icon\">\n                <i class=\"material-icons\">event_busy</i>\n            </div>\n            <div class=\"text\">End</div>\n        </button>\n        <button widget class=\"start large action\" *ngIf=\"status === 'pending'\" (tapped)=\"startMeeting()\" (contextmenu)=\"$event.preventDefault()\">\n            <div class=\"icon\">\n                <i class=\"material-icons\">event_available</i>\n            </div>\n            <div class=\"text\">Start</div>\n        </button>\n        <button widget class=\"book large action\" *ngIf=\"!no_booking\" (tapped)=\"book()\" (contextmenu)=\"$event.preventDefault()\">\n            <div class=\"icon\">\n                <i class=\"material-icons\">add</i>\n            </div>\n            <div class=\"text\">Book</div>\n        </button>\n    </div>\n    <div class=\"bindings\" *ngIf=\"space\">\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"booking_disabled\" [(model)]=\"no_booking\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"last_meeting_started\" [(model)]=\"last_started\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"is_endable\" [(model)]=\"is_endable\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"timeout\" [(model)]=\"pending_timeout\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"cancel_timeout\" [(model)]=\"cancel_timeout\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"ask_start\" [(model)]=\"ask_start\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"ask_end\" [(model)]=\"ask_end\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"default_title\" [(model)]=\"default_title\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"min_duration\" [(model)]=\"min_duration\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"max_duration\" [(model)]=\"max_duration\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"business_start\" [(model)]=\"business_start\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"business_end\" [(model)]=\"business_end\"></i>\n    </div>\n</div>\n","\nimport { Component, Input } from '@angular/core';\n\nimport { Space } from '../../../services/data/spaces/space.class';\nimport { BaseComponent } from '../../../shared/base.component';\nimport { ApplicationService } from '../../../services/app.service';\nimport { timeToDate } from '../../../shared/utilities/general.utilities';\n\nimport * as dayjs from 'dayjs';\n\nexport type SpaceStatus = 'pending' | 'available' | 'unavailable' | 'endable';\n\n@Component({\n    selector: 'panel-booking-actions',\n    templateUrl: './booking-actions.component.html',\n    styleUrls: ['./booking-actions.component.scss']\n})\nexport class PanelBookingActionsComponent extends BaseComponent {\n    /** Space with which to display bookings for */\n    @Input() public space: Space;\n    /** Whether booking is allowed */\n    public no_booking: boolean = false;\n    /** Whether the current booking is able to be ended */\n    public is_endable: number;\n    /** Number of seconds before a meeting can be started, being truthy enables start/stop and auto-cancellations */\n    public pending_timeout: number;\n    /** Number of seconds after the start of a meeting when it is auto-cancelled, overrides `timeout` value */\n    public cancel_timeout: number;\n    /** Timestamp of the last started meeting as ms since UTC epoch */\n    public last_started: number;\n    /** Whether to ask user to start the meeting */\n    public ask_start: boolean;\n    /** Whether to ask user to end the meeting */\n    public ask_end: boolean;\n    /** Time of the last automatic confirmation of start or end */\n    public last_confirm: number = 0;\n    /** Default title for bookings */\n    public default_title: string;\n    /** Maximum allowed booking duation */\n    public max_duration: number;\n    /** Minimum allowed booking duation */\n    public min_duration: number;\n    /** Start time of the business day with format `HH:mm` */\n    public business_start: string;\n    /** End time of the business day with format `HH:mm` */\n    public business_end: string;\n\n    /** Current status of the active system */\n    public get status(): SpaceStatus{\n        let status: SpaceStatus = 'available';\n            if (this.space && (this.space.current || this.space.next)) {\n                const booking = this.space.current || this.space.next;\n                status = this.space.current ? 'unavailable' : 'available';\n                if (this.pending_timeout) {\n                    const now = dayjs().startOf('m').second(1);\n                    const business_start = dayjs(timeToDate(this.business_start || '08:00'));\n                    const business_end = dayjs(timeToDate(this.business_end || '17:30'));\n                    // Check if within business hours before looking at pending logic\n                    if (now.isBefore(business_start, 'm') || now.isAfter(business_end, 'm')) {\n                        return status;\n                    }\n                    const date = dayjs(booking.date);\n                    if (this.last_started >= now.valueOf() || this.last_started >= date.valueOf()) {\n                        if (this.is_endable && this.space.current) {\n                            const end = date.add(booking.duration, 'm').startOf('m');\n                            const block_end = end.subtract(Math.max(this.is_endable, 300), 's');\n                            if (now.isAfter(block_end, 's') && now.isBefore(end, 'm')) {\n                                status = 'endable';\n                                if (this.ask_end && this.last_confirm < end.valueOf()) {\n                                    this.confirmEnd();\n                                    this.last_confirm = end.valueOf();\n                                }\n                            } else {\n                                status = 'unavailable';\n                            }\n                        } else {\n                            status = 'unavailable';\n                        }\n                    } else {\n                        const pending_start = date.startOf('m').subtract(this.pending_timeout, 's');\n                        const pending_end = date.startOf('m').add(this.cancel_timeout || this.pending_timeout, 's');\n                        if (now.isAfter(pending_start, 's') && now.isBefore(pending_end, 's')) {\n                            status = 'pending';\n                            if (this.ask_start && this.last_confirm < date.valueOf()) {\n                                this.confirmStart();\n                                this.last_confirm = date.valueOf();\n                            }\n                        }\n                    }\n                }\n            }\n        return status;\n    }\n\n    constructor(private service: ApplicationService) {\n        super();\n    }\n\n    /**\n     * Open modal to make a new booking\n     */\n    public book() {\n        this.service.Bookings.new({\n            space: this.space,\n            title: this.default_title,\n            max_duration: this.max_duration,\n            min_duration: this.min_duration\n        });\n    }\n\n    /**\n     * Open confirmation modal for starting the meeting\n     */\n    public confirmStart() {\n        this.service.Overlay.open('confirm', {\n            config: 'modal',\n            data: {\n                title: 'Do you wish to start your meeting?',\n                body: `If you don't start your meeting it will be cancelled ${this.cancel_timeout / 60} minutes after the start time.`,\n                icon: { class: 'material-icons', value: 'play_arrow' }\n            }\n        }, _ => this.startMeeting());\n    }\n\n    /**\n     * Execute the logic on the engine driver to start the current or upcoming meeting\n     */\n    public startMeeting() {\n        if (this.space) {\n            const meeting = this.space.current || this.space.next;\n            const module = this.service.Systems.get(this.space.id, 'Bookings');\n            if (meeting && module) {\n                const date = dayjs(meeting.date);\n                module.exec('start_meeting', [meeting.date]).then(_ => {\n                    this.service.Analytics.event('Checkin', 'checked-in', `${this.space.id} at ${date.format('DD MMM YYYY, h:mm A Z')}`);\n                }, (e) => {\n                    this.service.notifyError(`Error starting meeting. ${e}`);\n                    this.service.Analytics.event('Checkin', 'checked-in-failed', `${this.space.id} at ${date.format('DD MMM YYYY, h:mm A Z')}`);\n                });\n            }\n        }\n    }\n\n    /**\n     * Open confirmation modal for ending the meeting\n     */\n    public confirmEnd() {\n        this.service.Overlay.open('confirm', {\n            config: 'modal',\n            data: {\n                title: 'Are you sure want to end your meeting?',\n                body: 'Ending your meeting early will free up this room for others to use',\n                icon: { class: 'material-icons', value: 'stop' }\n            }\n        }, _ => this.endMeeting());\n    }\n\n    /**\n     * Execute end meeting logic on engine driver\n     * @param reason Reason for ending the meeting early\n     */\n    public endMeeting(reason: string = 'user_input') {\n        if (this.space) {\n            const meeting = this.space.current || this.space.next;\n            const module = this.service.Systems.get(this.space.id, 'Bookings');\n            if (meeting && module) {\n                const date = dayjs(meeting.date);\n                module.exec('cancel_meeting', [meeting.date, reason]).then(_ => {\n                    this.service.Analytics.event('Checkin', 'cancelled', `${this.space.id} at ${date.format('DD MMM YYYY, h:mm A Z')} | ${reason}`);\n                }, (e) => {\n                    this.service.notifyError(`Error starting meeting. ${e}`);\n                    this.service.Analytics.event('Checkin', 'cancel-failed', `${this.space.id} at ${date.format('DD MMM YYYY, h:mm A Z')} | ${reason}`);\n                });\n            }\n        }\n    }\n\n}\n\n","<div class=\"custom-actions\">\n    <div class=\"actions\" *ngIf=\"space\">\n        <button widget class=\"action control\" *ngIf=\"can_control !== false && control_url\" (tapped)=\"openControl()\" (contextmenu)=\"$event.preventDefault()\">\n            <div class=\"icon\">\n                <i class=\"material-icons\">dvr</i>\n            </div>\n        </button>\n        <button widget class=\"action service\" *ngIf=\"catering\" (tapped)=\"confirmWaiterCall()\" (contextmenu)=\"$event.preventDefault()\">\n            <div class=\"icon\">\n                <i class=\"material-icons\">room_service</i>\n            </div>\n        </button>\n    </div>\n    <div class=\"bindings\" *ngIf=\"space\">\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"control_url\" [(model)]=\"control_url\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"can_control\" [(model)]=\"can_control\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"has_catering\" [(model)]=\"catering\"></i>\n    </div>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { Space } from '../../../services/data/spaces/space.class';\nimport { ApplicationService } from '../../../services/app.service';\n\n@Component({\n    selector: 'panel-custom-actions',\n    templateUrl: './custom-actions.component.html',\n    styleUrls: ['./custom-actions.component.scss']\n})\nexport class PanelCustomActionsComponent {\n    /** Space with which to display bookings for */\n    @Input() public space: Space;\n    /** Control URL of the active space */\n    public control_url: string;\n    /** Whether the user is able to open the control URL */\n    public can_control: boolean;\n    /** Whether space has catering */\n    public catering: boolean;\n\n    constructor(private service: ApplicationService) {}\n\n    /**\n     * Open confirmation modal for ending the meeting\n     */\n    public confirmWaiterCall() {\n        this.service.Overlay.open('confirm', {\n            config: 'modal',\n            data: {\n                title: 'Call a waiter to your room?',\n                body: 'Call a waiter to your room to order catering',\n                icon: { class: 'material-icons', value: 'call' }\n            }\n        }, _ => this.callWaiter());\n    }\n\n    /**\n     * Execute call waiter logic on engine driver\n     */\n    public callWaiter() {\n        if (this.space) {\n            const module = this.service.Systems.get(this.space.id, 'Bookings');\n            if (module) {\n                module.exec('waiter_call', []).then(_ => {\n                    this.service.Analytics.event('Catering', 'waiter-call', (new Date).toISOString());\n                }, (e) => {\n                    this.service.Analytics.event('Catering', 'waiter-call-failed', (new Date).toISOString());\n                    this.service.notifyError(`Error calling waiter. ${e}`);\n                });\n            }\n        }\n    }\n\n    /**\n     * Open modal to show embeded control URL\n     */\n    public openControl() {\n        this.service.Analytics.event('Control', 'open-view', (new Date).toISOString());\n        this.service.Overlay.open('embeded-control', {\n            config: 'modal',\n            data: {\n                control_url: this.control_url\n            }\n        });\n    }\n}\n","<div class=\"booking-panel\" [class.disabled]=\"interactive === false\" [class.reverse]=\"reverse || flip_status\" [class.no-time]=\"!show_time\">\n    <div [class]=\"'status' + (status && !hide_all ? ' ' + status : '')\">\n        <div class=\"time-display\" *ngIf=\"show_time\">{{ display_time }}</div>\n    </div>\n    <div class=\"body\">\n        <div class=\"details-display\">\n            <div class=\"content\">\n                <div class=\"title\" (tapped)=\"showTitle()\" [class.show]=\"show_title\">{{ space_name }}</div>\n                <div [class]=\"'status-text' + (status && !hide_all ? ' ' + status : '')\" >\n                    {{ (!hide_all ? status_display : null) || 'Not Bookable' }}\n                </div>\n                <div class=\"details\" *ngIf=\"!hide_all && show_details\">\n                    <panel-space-details [space]=\"space\"></panel-space-details>\n                </div>\n            </div>\n            <div class=\"overlay\" *ngIf=\"!hide_all && show_details\">\n                <panel-booking-actions [space]=\"space\"></panel-booking-actions>\n                <panel-custom-actions [space]=\"space\"></panel-custom-actions>\n            </div>\n        </div>\n        <div class=\"timeline\" *ngIf=\"show_details\">\n            <panel-timeline [space]=\"space\"></panel-timeline>\n        </div>\n    </div>\n    <div class=\"bindings\" *ngIf=\"system_id\">\n        <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"room_name\" [(model)]=\"space_name\"></i>\n        <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"touch_enabled\" [(model)]=\"interactive\"></i>\n        <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"today\" (modelChange)=\"updateBookings($event)\"></i>\n        <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"timeout\" [(model)]=\"pending_timeout\" (modelChange)=\"updateStatus()\"></i>\n        <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"cancel_timeout\" [(model)]=\"cancel_timeout\" (modelChange)=\"updateStatus()\"></i>\n        <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"last_meeting_started\" [(model)]=\"last_started\" (modelChange)=\"updateStatus()\"></i>\n        <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"hide_all\" [(model)]=\"hide_all\"></i>\n        <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"flip_status\" [(model)]=\"flip_status\"></i>\n        <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"can_cancel\" [(model)]=\"can_cancel\"></i>\n        <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"business_start\" [(model)]=\"business_start\"></i>\n        <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"business_end\" [(model)]=\"business_end\"></i>\n        <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"status_override\" [(model)]=\"status_overrides\"></i>\n    </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { ApplicationService } from '../../services/app.service';\nimport { BaseComponent } from '../../shared/base.component';\nimport { Space } from '../../services/data/spaces/space.class';\nimport { HashMap } from '../../shared/utilities/types.utilities';\nimport { timeToDate } from '../../shared/utilities/general.utilities';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'app-booking-panel',\n    templateUrl: './panel.component.html',\n    styleUrls: ['./panel.component.scss']\n})\nexport class BookingPanelComponent extends BaseComponent implements OnInit {\n    /** ID of the active system */\n    @Input() public system_id: string;\n    /** Whether the status is on the right side */\n    @Input() public reverse: boolean;\n    /** Whether to show the time at the bottom of the status */\n    @Input() public show_time = true;\n    /** Name of the connected system */\n    public space_name: string;\n    /** Space with which to display bookings for */\n    public space: Space;\n    /** Number of seconds before a meeting can be started, being truthy enables start/stop and auto-cancellations */\n    public pending_timeout: number;\n    /** Number of seconds after the start of a meeting when it is auto-cancelled, overrides `timeout` value */\n    public cancel_timeout: number;\n    /** Timestamp of the last started meeting as ms since UTC epoch */\n    public last_started: number;\n    /** Whether to hide booking related details */\n    public hide_all: boolean;\n    /** Whether user interaction is enabled for the panel */\n    public interactive = true;\n    /** Whether status display is on the right side of the UI */\n    public flip_status: boolean;\n    /** Whether bookings can be cancelled if they timeout */\n    public can_cancel: boolean;\n    /** Time of the last cancelled meeting in ms since UTC epoch */\n    private last_cancel: number;\n    /** Start time of the business day with format `HH:mm` */\n    public business_start: string;\n    /** End time of the business day with format `HH:mm` */\n    public business_end: string;\n    /** Whether to show full room name when it overflows */\n    public show_title: boolean;\n    /** Override mapping for status values */\n    public status_overrides: HashMap<string>;\n    /** Status of websocket */\n    public websocket_connected: boolean;\n\n    /** Current status of the active system */\n    private _status: 'pending' | 'available' | 'unavailable';\n\n    /** Get the display value for the status */\n    public get status_display(): string {\n        if (!this.websocket_connected && !this._service.setting('show_status_when_disconnected')) {\n            return ' ';\n        }\n        if (this.status_overrides && Object.keys(this.status_overrides).length === 1) {\n            this._status = this.space.current ? 'unavailable' : Object.keys(this.status_overrides)[0] as any;\n        }\n        const status = (!this.hide_all ? this._status : null) || 'not-bookable';\n        return (this.status_overrides || [])[status] || this._status;\n    }\n\n    /** Current status of the active system */\n    public get status(): 'pending' | 'available' | 'unavailable' | 'not-bookable' {\n        if (!this.websocket_connected && !this._service.setting('show_status_when_disconnected')) {\n            return 'not-bookable';\n        }\n        // Perform any status overrides\n        this.updateStatus();\n        if (\n            this.status_overrides &&\n            Object.keys(this.status_overrides).length === 1 &&\n            (!this.space.current || this._status !== 'unavailable')\n        ) {\n            this._status = Object.keys(this.status_overrides)[0] as any;\n        }\n        return this._status;\n    }\n    /** Whether booking details should be shown */\n    public get show_details(): boolean {\n        return this.websocket_connected || !!this._service.setting('show_status_when_disconnected');\n    }\n\n    /** Display string for the current time */\n    public get display_time(): string {\n        return dayjs().format('h:mm A');\n    }\n\n    constructor(public _service: ApplicationService, public _route: ActivatedRoute) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription('app_ready', this._service.initialised.subscribe((is_ready) => {\n            if (is_ready) {\n                this.subscription(\n                    'route.params',\n                    this._route.paramMap.subscribe(params => {\n                        if (params.has('system_id')) {\n                            this.system_id = params.get('system_id');\n                            this._service.set('system', this.system_id);\n                        }\n                    })\n                );\n                this.timeout('websocket', () => {\n                    this._service.websocket.status(status => {\n                        this.websocket_connected = status;\n                    });\n                });\n                this.unsub('app_ready');\n            }\n        }));\n    }\n\n    /**\n     * Update the bookings for the active space\n     * @param bookings Array of raw booking data\n     */\n    public updateBookings(bookings: HashMap[]): void {\n        this.space = new Space(this._service.Spaces, {\n            id: this.system_id,\n            name: this.space_name,\n            bookings\n        });\n    }\n\n    /**\n     * Update the current status of the active space\n     */\n    public updateStatus(): void {\n        if (this.hide_all) {\n            this._status = null;\n        } else {\n            if (this.space && (this.space.current || this.space.next)) {\n                const booking = this.space.current || this.space.next;\n                this._status = this.space.current ? 'unavailable' : 'available';\n                if (this.pending_timeout) {\n                    const now = dayjs();\n                    const date = dayjs(booking.date).startOf('m');\n                    if (this.last_started >= now.valueOf() || this.last_started >= date.valueOf()) {\n                        this._status = 'unavailable';\n                    } else {\n                        // Only meetings with durations less than 8 hours can be pending or cancelled\n                        const pending_start = date.subtract(this.pending_timeout, 's');\n                        const pending_end = date.add(this.cancel_timeout || this.pending_timeout, 's');\n                        const end = date.add(booking.duration, 'm');\n                        if (now.isAfter(pending_start, 's') && now.isBefore(pending_end, 's')) {\n                            this._status = 'pending';\n                        } else if (now.isAfter(pending_end, 's') && now.isBefore(end, 'm')) {\n                            this._status = 'pending';\n                            const business_start = dayjs(timeToDate(this.business_start || '08:00'));\n                            const business_end = dayjs(timeToDate(this.business_end || '17:30'));\n                            // Check if within business hours before cancelling the meeting\n                            if (now.isBefore(business_start, 'm') || now.isAfter(business_end, 'm')) {\n                                return;\n                            }\n                            this.endMeeting('timeout');\n                        }\n                    }\n                }\n            } else {\n                this._status = 'available';\n            }\n        }\n    }\n\n    /**\n     * Show full room name if overflowing\n     */\n    public showTitle() {\n        this.show_title = true;\n        this.timeout('hide_title', () => (this.show_title = false), 3000);\n    }\n\n    /**\n     * Execute end meeting logic on engine driver\n     * @param reason Reason for ending the meeting early\n     */\n    private endMeeting(reason: string = 'user_input') {\n        if (this.space && this.can_cancel !== false) {\n            const meeting = this.space.current || this.space.next;\n            const module = this._service.Systems.get(this.space.id, 'Bookings');\n            if (meeting.duration >= 8 * 60 && reason === 'timeout') {\n                reason = 'hide multi-day';\n            }\n            if (meeting && module && meeting.date !== this.last_cancel) {\n                const date = dayjs(meeting.date);\n                module.exec('cancel_meeting', [meeting.date, reason]).then(\n                    _ => {\n                        this._service.Analytics.event(\n                            'Checkin',\n                            'cancelled',\n                            `${this.space.id} at ${date.format('DD MMM YYYY, h:mm A Z')} | ${reason}`\n                        );\n                        this.last_cancel = meeting.date;\n                    },\n                    e => {\n                        this._service.notifyError(`Error cancelling meeting. ${e}`);\n                        this._service.Analytics.event(\n                            'Checkin',\n                            'cancel-failed',\n                            `${this.space.id} at ${date.format('DD MMM YYYY, h:mm A Z')} | ${reason}`\n                        );\n                    }\n                );\n            }\n        }\n    }\n}\n","<div class=\"space-booking-details\">\n    <div class=\"details current\" *ngIf=\"space && space.current\">\n        <div class=\"time\" *ngIf=\"!hide_availability\">Booked until {{ space.current?.end_time }}</div>\n        <div class=\"title\" *ngIf=\"!hide_title && !hide_details\">{{ space.current?.title }}</div>\n        <div class=\"host\" *ngIf=\"!hide_user && !hide_details\">{{ space.current?.organiser?.name }}</div>\n    </div>\n    <div class=\"details next\" *ngIf=\"space && space.next\">\n        <div class=\"time\" *ngIf=\"!hide_availability\">Next meeting at {{ space.next?.start_time }}</div>\n        <div class=\"title\" *ngIf=\"!hide_title && !hide_details\">{{ space.next?.title }}</div>\n        <div class=\"host\" *ngIf=\"!hide_user && !hide_details\">{{ space.next?.organiser?.name }}</div>\n    </div>\n    <div class=\"details other\" *ngIf=\"space && space.current && space.next\">\n        <div class=\"time\" *ngIf=\"!hide_availability\">\n            Free {{ space.current ? 'at ' + space.current.end_time : '' }} {{ space.next ? 'until ' + space.next.start_time : '' }}\n        </div>\n    </div>\n    <div class=\"information\" *ngIf=\"title || description\">\n        <div class=\"title\">{{ title }}</div>\n        <div class=\"block\">\n            <div class=\"icon\" *ngIf=\"icon\">\n                <img [src]=\"icon\">\n            </div>\n            <div class=\"text\">{{ description }}</div>\n        </div>\n    </div>\n    <div class=\"bindings\" *ngIf=\"space\">\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"hide_details\" [(model)]=\"hide_details\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"hide_title\" [(model)]=\"hide_title\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"hide_availability\" [(model)]=\"hide_availability\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"hide_user\" [(model)]=\"hide_user\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"title\" [(model)]=\"title\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"description\" [(model)]=\"description\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"icon\" [(model)]=\"icon\"></i>\n    </div>\n</div>\n","\nimport { Component, Input } from '@angular/core';\n\nimport { Space } from '../../../services/data/spaces/space.class';\n\n@Component({\n    selector: 'panel-space-details',\n    templateUrl: './space-details.component.html',\n    styleUrls: ['./space-details.component.scss']\n})\nexport class PanelSpaceDetailsComponent {\n    /** Space with which to display bookings for */\n    @Input() public space: Space;\n    /** Secondary title for the space */\n    public title: string;\n    /** Description for the space */\n    public description: string;\n    /** Image that suppliments the description for the space */\n    public icon: { class?: string, value?: string, src?: string };\n\n    /** Whether to hide the booking timing details */\n    public hide_availability: boolean;\n    /** Whether to hide the current booking title */\n    public hide_title: boolean;\n    /** Whether to hide booking details(title and host) */\n    public hide_details: boolean;\n    /** Whether to hide booking host */\n    public hide_user: boolean;\n}\n\n","<div class=\"timeline\">\n    <div class=\"block-list\" *ngIf=\"time_blocks && time_blocks.length > 0\">\n        <div\n            class=\"block\"\n            *ngFor=\"let item of time_blocks\"\n            [class.show]=\"item.show || item.hour\"\n            [class.in-use]=\"item.in_use\"\n            (tapped)=\"!item.in_use && !no_bookings && !no_timeline_bookings ? book(item) : ''\"\n        >\n            <div class=\"hour\" *ngIf=\"item.hour\">{{ item.hour }}</div>\n            <div class=\"bar\" [class.hour]=\"item.hour\"></div>\n        </div>\n    </div>\n    <div class=\"overlay\">\n        <div class=\"expired\" [style.width]=\"((options?.start_offset || 120) / (options?.duration || 720)) * 100 + '%'\"></div>\n        <div class=\"current-block\" [style.left]=\"((options?.start_offset || 120) / (options?.duration || 720)) * 100 + '%'\">\n            <div class=\"bar\"></div>\n            <div class=\"triangle\"></div>\n            <div class=\"time-display\" *ngIf=\"display_time\">Time Now<br>{{ display_time }}</div>\n        </div>\n    </div>\n    <div class=\"bindings\" *ngIf=\"space\">\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"hide_availability\" [(model)]=\"hide_status\" (modelChange)=\"checkBookings()\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"hide_all\" [(model)]=\"hide_all\" (modelChange)=\"checkBookings()\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"booking_disabled\" [(model)]=\"no_bookings\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"no_timeline_bookings\" [(model)]=\"no_timeline_bookings\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"default_title\" [(model)]=\"default_title\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"min_duration\" [(model)]=\"min_duration\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"max_duration\" [(model)]=\"max_duration\"></i>\n    </div>\n</div>\n","\nimport { Component, OnInit, Input, Output, EventEmitter, SimpleChanges, OnChanges } from '@angular/core';\nimport { BaseComponent } from '../../../shared/base.component';\nimport { Space } from '../../../services/data/spaces/space.class';\n\nimport * as dayjs from 'dayjs';\nimport { BookingData } from '../../../overlays/booking-modal/booking-modal.component';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\nimport { ApplicationService } from '../../../services/app.service';\n\nexport interface IPanelTimelineOptions {\n    /** Length of time in minutes to display on the timeline after the current time */\n    duration: number;\n    /** Time offset in minutes which is displayed before the current time marker */\n    start_offset: number;\n    /** Size of shown blocks in minutes */\n    block_size: number;\n}\n\ninterface ITimelineBlock {\n    /** Block time as ms since UTC epoch */\n    value: number;\n    /** Whether to show block divider */\n    show: boolean;\n    /** Hour of the day represented by this time block */\n    hour: number;\n    /** Whether block is in use or not */\n    in_use: boolean;\n}\n\n@Component({\n    selector: 'panel-timeline',\n    templateUrl: './timeline.component.html',\n    styleUrls: ['./timeline.component.scss']\n})\nexport class PanelTimelineComponent extends BaseComponent implements OnInit, OnChanges {\n    /** Space with which to display bookings for */\n    @Input() public space: Space;\n    /** Display options for the timeline */\n    @Input() public options: IPanelTimelineOptions;\n    /** Emitter for user events on the timeline */\n    @Output() public event = new EventEmitter();\n\n    /** List of display time block  */\n    public time_blocks: ITimelineBlock[] = [];\n    /** Whether to hide unavailable blocks on the UI */\n    public hide_status: boolean;\n    /** Whether to hide all booking data */\n    public hide_all: boolean;\n    /** Whether user is not allowed to make bookings */\n    public no_booking: boolean;\n    /** Whether user is not allowed to make bookings using the timeline */\n    public no_timeline_bookings: boolean;\n    /** Default title for bookings */\n    public default_title: string;\n    /** Maximum allowed booking duation */\n    public max_duration: number;\n    /** Minimum allowed booking duation */\n    public min_duration: number;\n\n    /** Display string for the current time */\n    public get display_time(): string {\n        return dayjs().format('h:mm A')\n    }\n\n    constructor(private service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.generateTimelineBlocks();\n        this.interval('update_blocks', () => this.generateTimelineBlocks(), 60 * 1000);\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        this.generateTimelineBlocks();\n    }\n\n    /**\n     * Generate time blocks to display\n     */\n    private generateTimelineBlocks(): void {\n        let now = dayjs().startOf('m');\n        now = now.minute(Math.round(now.minute() / 5) * 5);\n        const start = now.subtract((this.options ? this.options.start_offset : null) || 120, 'm');\n        const end = start.add((this.options ? this.options.duration : null) || 720, 'm');\n        let date = dayjs(start);\n        delete this.time_blocks;\n        this.time_blocks = [];\n        while (date.isBefore(end, 'm')) {\n            this.time_blocks.push({\n                value: date.valueOf(),\n                show: (date.minute() % ((this.options ? this.options.block_size : null) || 30)) === 0,\n                hour: date.minute() === 0 ? (date.hour() % 12 === 0 ? 12 : date.hour() % 12) : null,\n                in_use: false\n            });\n            date = date.add(5, 'm');\n        }\n        this.checkBookings();\n    }\n\n    /**\n     * Update the statuses of time blocks based off space bookings\n     */\n    public checkBookings(): void {\n        if (this.space && this.space.todays_bookings) {\n            const block_start = dayjs().subtract((this.options ? this.options.start_offset : null) || 120, 'm');\n            const block_end = dayjs().add((this.options ? this.options.duration : null) || 720, 'm');\n            // Filter bookings for the shown times\n            const bookings = this.space.bookings.filter(i => {\n                const start = dayjs(i.date);\n                const end = start.add(i.duration, 'm');\n                return end.isAfter(block_start, 'm') && start.isBefore(block_end, 'm');\n            });\n            this.time_blocks.forEach(i => i.in_use = false);\n            if (!this.hide_status && !this.hide_all) {\n                for (const booking of bookings) {\n                    const start = dayjs(booking.date);\n                    const end = start.add(booking.duration, 'm');\n                    for (const block of this.time_blocks) {\n                        const block_time = dayjs(block.value);\n                        if (block_time.isSame(start, 'm') || (block_time.isAfter(start, 'm') && block_time.isBefore(end, 'm'))) {\n                            block.in_use = true;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Open modal to make a new booking\n     */\n    public book(block: ITimelineBlock) {\n        this.service.Bookings.new({\n            space: this.space,\n            date: block.value,\n            title: this.default_title,\n            max_duration: this.max_duration,\n            min_duration: this.min_duration\n        });\n    }\n}\n\n","\n<div class=\"shell\">\n    <div class=\"view\">\n        <router-outlet></router-outlet>\n    </div>\n    <div class=\"bindings\" *ngIf=\"system_id\">\n        <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"room_name\" [(model)]=\"system_name\" (modelChange)=\"checkLoading()\"></i>\n        <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"reload\" (modelChange)=\"reloadAt($event)\"></i>\n    </div>\n    <div class=\"loading-block\" *ngIf=\"system_id && !system_name\">\n        <div class=\"info-block\">\n            <div class=\"title\">Connecting to system({{system_id}})...</div>\n            <div class=\"text\">Attempting to connect to engine server...</div>\n            <div class=\"text message\">{{info_messages[message_index]}}</div>\n            <div class=\"icon\">\n                <a-spinner ring-rotate color=\"#000\"></a-spinner>\n            </div>\n        </div>\n    </div>\n    <div class=\"version\" *ngIf=\"show_version\" [class.loading]=\"system_id && !system_name\">\n        Version: {{ version }}<br>\n        Built: {{ build }}\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\n\nimport { BaseComponent } from '../shared/base.component';\nimport { ApplicationService } from '../services/app.service';\nimport { version, build } from '../shared/globals/application';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'app-shell-wrapper',\n    templateUrl: './shell.component.html',\n    styleUrls: ['./shell.component.scss']\n})\nexport class ShellWrapperComponent extends BaseComponent implements OnInit {\n    /** Whether application has system */\n    public has_system: boolean;\n    /** ID of the active system */\n    public system_id: string;\n    /** Name of the active system */\n    public system_name: string;\n    /** Name of the active page */\n    public page: string;\n    /** List of informational messages to display while connecting to the active system */\n    public info_messages: string[] = [\n        'If this message persists, check you network connection and then try reloading this page.',\n        'It seems to be taking a while. Make sure the selected system is valid.',\n        'Still nothing, huh. Are you authenticated? Do you have have a network connection?',\n        'Try reloading the page. If this persists contact your administrator.'\n    ];\n    /** Index of the info message being displayed */\n    public message_index: number = 0;\n\n    /** Current version of the application */\n    public get version(): string {\n        return version;\n    }\n\n    /** Current version of the application */\n    public get build(): string {\n        const now = dayjs();\n        const built = build.format('DD/MM/YY HH:mm');\n        return built;\n    }\n\n    public get show_version(): boolean {\n        return this._service.setting('app.show_version');\n    }\n\n    constructor(private _service: ApplicationService, private _router: Router) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription('app_ready', this._service.initialised.subscribe((is_ready) => {\n            if (is_ready) {\n                // Listen for system changes\n                this.subscription('system', this._service.listen('system', (value) => this.system_id = value));\n                // Listen for routing events\n                this.page = this._router.url.split('/')[1] || '';\n                this.subscription(\n                    'router.change',\n                    this._router.events.subscribe(event => {\n                        if (event instanceof NavigationEnd) {\n                            this.page = this._router.url.split('/')[1] || '';\n                        }\n                    })\n                );\n                this.unsub('app_ready');\n            }\n        }));\n    }\n\n    /**\n     * Check if the system data has loaded\n     * @param delay Delay before first loading message update\n     */\n    public checkLoading(delay: number = 3000) {\n        if (!this.system_name) {\n            this.message_index = 0;\n            this.timeout('update_msg', () => this.updateMessage(), delay);\n        }\n    }\n\n    /**\n     * Update the index of the info message displayed\n     */\n    private updateMessage(): void {\n        if (!this.system_id) { return; }\n        this.message_index++;\n        if (this.message_index === this.info_messages.length) {\n            this.message_index--;\n            return;\n        }\n        this.timeout('update_msg', () => this.updateMessage(), 3000);\n    }\n\n    /**\n     * Schedule a reload the UI for a future time\n     * @param time Time to reload the UI\n     */\n    public reloadAt(time: number): void {\n        if (time && typeof time === 'number') {\n            this.clearTimeout('reload_ui');\n            const now = dayjs().startOf('s');\n            const reload_at_time = dayjs((time || 0) * 1000).startOf('s');\n            const diff = reload_at_time.diff(now, 'ms');\n            if (diff > 100) {\n                this.timeout('reload_ui', () => location.reload(true), diff);\n            }\n        }\n        this.timeout('update_msg', () => this.updateMessage(), 3000);\n    }\n}\n","export const environment = {\n  production: true\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}