{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/debug-outlet.component.ts.DebugOutletComponent.html","webpack:///src/app/debug-outlet.component.ts","webpack:///src/app/overlays/booking-modal/booking-modal.component.html","webpack:///src/app/overlays/booking-modal/booking-modal.component.ts","webpack:///src/app/overlays/confirm-modal/confirm-modal.component.html","webpack:///src/app/overlays/confirm-modal/confirm-modal.component.ts","webpack:///src/app/overlays/embedded-control-modal/embedded-control-modal.component.html","webpack:///src/app/overlays/embedded-control-modal/embedded-control-modal.component.ts","webpack:///src/app/overlays/overlays.module.ts","webpack:///src/app/services/app.service.ts","webpack:///src/app/services/data/base-api.class.ts","webpack:///src/app/services/data/base.service.ts","webpack:///src/app/services/data/bookings/booking.class.ts","webpack:///src/app/services/data/bookings/booking.utilities.ts","webpack:///src/app/services/data/bookings/bookings.service.ts","webpack:///src/app/services/data/organisation/building.class.ts","webpack:///src/app/services/data/organisation/level.class.ts","webpack:///src/app/services/data/organisation/organisation.class.ts","webpack:///src/app/services/data/organisation/organisation.service.ts","webpack:///src/app/services/data/polling/polling.service.ts","webpack:///src/app/services/data/service-manager.class.ts","webpack:///src/app/services/data/spaces/space.class.ts","webpack:///src/app/services/data/spaces/space.utilities.ts","webpack:///src/app/services/data/spaces/spaces.service.ts","webpack:///src/app/services/data/systems-manager/systems-manager.service.ts","webpack:///src/app/services/data/users/user.class.ts","webpack:///src/app/services/data/users/user.utilities.ts","webpack:///src/app/services/data/users/users.service.ts","webpack:///src/app/services/debug.service.ts","webpack:///src/app/services/hotkeys.service.ts","webpack:///src/app/services/settings.service.ts","webpack:///src/app/shared/base.class.ts","webpack:///src/app/shared/base.component.ts","webpack:///src/app/shared/components/duration-field/duration-field.component.html","webpack:///src/app/shared/components/duration-field/duration-field.component.ts","webpack:///src/app/shared/components/time-field/time-field.component.html","webpack:///src/app/shared/components/time-field/time-field.component.ts","webpack:///src/app/shared/components/user-search-field/user-search-field.component.html","webpack:///src/app/shared/components/user-search-field/user-search-field.component.ts","webpack:///src/app/shared/directives/binding/binding.directive.ts","webpack:///src/app/shared/globals/application.ts","webpack:///src/app/shared/globals/form-fields.ts","webpack:///src/app/shared/globals/overlay-register.ts","webpack:///src/app/shared/mocks/index.ts","webpack:///src/app/shared/mocks/systems.mock.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/shared/utilities/api.utilities.ts","webpack:///src/app/shared/utilities/formatting.utilities.ts","webpack:///src/app/shared/utilities/general.utilities.ts","webpack:///src/app/shared/utilities/validation.utilities.ts","webpack:///src/app/shell/bootstrap/bootstrap.component.html","webpack:///src/app/shell/bootstrap/bootstrap.component.ts","webpack:///src/app/shell/panel-array/panel-array.component.html","webpack:///src/app/shell/panel-array/panel-array.component.ts","webpack:///src/app/shell/panel-select/panel-select.component.html","webpack:///src/app/shell/panel-select/panel-select.component.ts","webpack:///src/app/shell/panel/booking-actions/booking-actions.component.html","webpack:///src/app/shell/panel/booking-actions/booking-actions.component.ts","webpack:///src/app/shell/panel/custom-actions/custom-actions.component.html","webpack:///src/app/shell/panel/custom-actions/custom-actions.component.ts","webpack:///src/app/shell/panel/panel-details-display.component.ts.PanelDetailsDisplayComponent.html","webpack:///src/app/shell/panel/panel-details-display.component.ts","webpack:///src/app/shell/panel/panel.component.ts.BookingPanelComponent.html","webpack:///src/app/shell/panel/panel.component.ts","webpack:///src/app/shell/panel/space-details/space-details.component.ts.PanelSpaceDetailsComponent.html","webpack:///src/app/shell/panel/space-details/space-details.component.ts","webpack:///src/app/shell/panel/timeline/timeline.component.html","webpack:///src/app/shell/panel/timeline/timeline.component.ts","webpack:///src/app/shell/panel/timeline/timeline.utils.ts","webpack:///src/app/shell/panel/v1/panel-details-display-v1.component.ts.PanelDetailsDisplayV1Component.html","webpack:///src/app/shell/panel/v1/panel-details-display-v1.component.ts","webpack:///src/app/shell/panel/v1/space-details/space-details.component.html","webpack:///src/app/shell/panel/v1/space-details/space-details.component.ts","webpack:///src/app/shell/shell.component.html","webpack:///src/app/shell/shell.component.ts","webpack:///src/environments/environment.ts","webpack:///src/environments/settings.ts","webpack:///src/environments/version.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","children","redirectTo","AppRoutingModule","AppComponent","window","app_loaded","AppModule","console","log","production","DebugOutletComponent","_debug","show","logs","BookingModalComponent","item","service","booking","Bookings","date","data","form_metadata","space_field","form_fields","find","field","key","space","setValue","date_field","valueOf","title_field","title","closing","timeout","close","fields","forEach","i","control","markAsDirty","valid","reduce","fields_valid","length","sub_fields_valid","sub_field","loading","post","on_error","map","push","config","content","ConfirmModalComponent","body","description","action","icon","EmbeddedControlModalComponent","countdown","control_url","interval","tick","OVERLAYS","SharedOverlaysModule","ApplicationService","_app_ref","_zone","_title","_router","_cache","_settings","_overlay","_analytics","_hotkeys","_systems","_organisation","_users","_bookings","_spaces","_polling","_route_trail","_subjects","_observers","parent","set","undefined","isStable","pipe","_","subscribe","run","_stable","setupCache","waitForSettings","registerOverlays","get","type","msg","on_action","notify","args","stream","force","query","route","Array","url","navigate","queryParams","preserveFragment","pop","name","getValue","next","value","asObservable","initialised","init","setupComposer","enabled","setting","load","debug","application","listen","clear","_initialised","settings","protocol","location","host","domain","hostname","port","use_domain","origin","includes","mock","href","localStorage","getItem","auth_type","scope","auth_uri","token_uri","redirect_uri","handle_login","local_login","use_iframe","token_header","unsub","isEnabled","activateUpdate","subscription","available","event","current","hash","setInterval","checkForUpdate","reload","overlay","register","app_name","title_suffix","setTitle","getTitle","BaseDataClass","raw_data","changeEvents","zone_id","email","Math","floor","random","toLowerCase","_form_metadata","_form_fields","changed","changes","showErrors","form","formValues","update","add","task_name","parameters","task","initialiseFormFields","json","changed_fields","metadata","field_list","values","formChanges","edit","required","attributes","a","isValid","BaseAPIService","_subscribers","_promises","_compare","b","_list_filter","_name","_api_route","engine","endpoint","engine_endpoint","filterFn","list","query_params","update_list","cache","reject","result","d","process","results","updateList","form_data","new_item","analyticsEvent","post_data","_task","delay","stopPoll","sub","_poll","error","complete","removeItem","remove_ids","item_id","index","findIndex","splice","label","Analytics","raw_item","old_list","compareFn","new_list","mixed_list","found","Booking","_display","u_service","Users","icaluid","subject","Subject","start","start_epoch","Start","duration","end","end_epoch","End","diff","notes","visitors","catering","_attendees","attendees","organiser","organizer","owner","addFrom","_organiser","_location","format","time","startDate","endDate","_space_list","room_ids","u","form_settings","user","actions","validators","terms","requiredTrue","formatters","recurrence","custom_elements","defaults","process_field","f","control_type","references","refs","hide","flex","indexOf","now","isBefore","subtract","Spaces","space_names","level","MINUTE","HOUR","DAY","WEEK","MONTH","DURATION_MAP","month","months","week","weeks","day","days","hour","hours","minute","minutes","initialTime","mockDate","BOOKING_COUNT","BOOKING_DATE","startOf","setMockBookingStartDatetime","generateMockBooking","seed","offset","localDate","productName","fill","paragraph","city","getFreeBookingSlots","min_size","slots","sort","bkn_start","bkn_end","isAfter","getNextFreeBookingSlot","second","block","rulesForSpace","options","space_rules_for_user","auto_approve","match","rules","hasOwnProperty","zones","zone","rule_block","checkRules","recurr_end","conditions","ruleset","max_length","stringToMinutes","min_length","recurr","count","Object","matches","counter","condition","groups","j","last_location","check","durationGreaterThanOrEqual","duration_1","duration_2","first","str","parts","split","BookingsService","setService","localeCompare","Overlay","open","toJSON","create","notifySuccess","notifyError","request","staff","num_staff","partners","num_partners","staff_id","period","Systems","execute","err","Building","disc_info","discovery_info","_extras","extras","extra_id","extra_name","_loan_items","loan_items","levels","building_id","_roles","roles","_lockers","lockers","locker_structure","systems","_phone_numbers","phone_numbers","longitude","latitude","_searchables","neighbourhoods","lvl","lvl_features","feature","level_id","booking_rules","filter","_zones","BuildingLevel","_data","bld_id","level_name","lower_name","num","replace","substr","toUpperCase","short_name","map_url","floor_type","Organisation","OrganisationService","buildings","building","bld","ids","bld_list","_active_building","loadOrganisation","loadBuildings","loadLevels","tags","org_data","shown_error","limit","bld_data","lvl_data","PingHistory","history","last_ping","room_email","room_id","SECONDS","MINUTES","PollingService","ServiceManager","_service_list","provider","provideFor","useValue","OPTION_DEFAULTS","SpaceTheme","Space","theme_rbp","long_name","map_id","book_type","can_search","searchable","can_control","controlable","hourly_rate","cost_hour","bookable","setup","breakdown","capacity","was_available","raw_bookings","bookings","id_list","removeFrom","_linked_spaces","linked_rooms","linked_spaces","isSame","rm","serviceFor","rulesFor","bkn","status","bookingService","booking_list","bookingsFor","newVar","levelWithID","SPACE_COUNT","generateMockSpace","overrides","firstName","lastName","linked","join","support_url","image","business","SpacesService","respond","available_spaces","v","SystemsManagerService","_list","sys_id","mod_id","loadSystems","toPromise","details","total","User","first_name","last_name","windows_id","visitor","phone","mobile","business_unit","department","organisation","organisation_id","organisation_name","external","staff_code","fmno","_delegates","delegates","officeLocation","Location","desk","l","USER_COUNT","USER_DOMAIN","USER_EMAILS","generateMockUser","companyName","delegate_count","min","phoneNumber","UsersService","uhttp","token","expiry","endOf","client_id","hashStr","sessionStorage","setItem","go","headers","append","tries","current_user","clearTimeout","DebugService","_old_log","_old_info","info","_old_warn","warn","_old_debug","_old_error","_logs","reverse","newLogMessage","call","Date","INVALID_STANDALONE_KEYS","HotkeysService","keydown_states","keydown_observers","combo_end","registered_combos","addEventListener","mapKey","last_down","preventDefault","combo","combination","validCombination","last_key","updateCombinationEndList","presses","state","key_list","non_meta","SettingsService","_app_name","_overrides","_observables","built","semver","override_settings","override","slice","BaseClass","_timers","_intervals","_subscriptions","fn","Function","setTimeout","clearInterval","unsubscribe","BaseComponent","CustomDurationFieldComponent","group","block_size","controls","date_control","valueChanges","calculateAvailableDurations","room","space_control","updateDisplay","active_duration","new_opt","option","abs","max_duration","min_duration","slot","CustomTimeFieldComponent","calculateAvailableTimes","times","from_ref","active_time","ceil","date_str","book_ahead","CustomUserSearchFieldComponent","filtered_list","search$","search_results$","searching","q","search_str","match_name","match_email","BindingDirective","_element","_renderer","params","modelChange","init_listener","bindVariable","listener","unbind","event_listener","sys","mod","bind","ngOnDestroy","on_event","nativeElement","binding","model","emit","exec","version","core_version","build","FORM_FIELDS","OVERLAY_REGISTER","LETTERS","NUMBERS","SPACE_LIST","IMAGES","createSystem","bindings","touch_enabled","cancel_timeout","has_catering","system","room_name","today","unix","$start_meeting","last_meeting_started","$cancel_meeting","reason","$waiter_call","MOCK_SYSTEMS","USER_LIST","handlers","method","callback","handler","COMPONENTS","ENTRY_COMPONENT","SharedContentModule","toQueryString","formatAttendeesWithHost","formatAttendees","attendee_str","users","formatDate","formatTime","formatPeriodWithDuration","t","formatPeriod","timestamp","formatDuration","RECURRENCE_PERIODS","formatRecurrence","formatSpaces","colors","xmur3","rand","sfc32","predictableRandomInt","getItemWithKeys","shift","isMobileDevice","r","navigator","userAgent","isMobileSafari","agent","isAndroidChrome","padZero","toString","unique","array","el","pos","arr","humaniseDuration","short","h","m","filterList","items","filters","word","regex","RegExp","item_list","JSON","parse","stringify","match_count","match_index","matched","tokens","k","matchToHighlight","timeToDate","flatten","an_array","stack","res","imul","charCodeAt","c","HAS_ERROR","validateDate","is_from","from","message","buildValidateStartTime","validateStartTime","date_obj","buildValidateDuration","max","validateDuration","buildValidateAttendees","validateAttendees","invalid","BootstrapComponent","system_list","selected_system","queryParamMap","has","clearBootstrap","system_id","manual_input","bootstrap","checkBootstrapped","configure","BookingPanelArrayComponent","_service","is_ready","logo","inverse","BookingPanelSelectComponent","system_name","system_icon","system_status","active_system","reset","PanelBookingActionsComponent","no_booking","last_confirm","default_title","startMeeting","meeting","endMeeting","pending_timeout","business_start","business_end","last_started","is_endable","block_end","ask_end","confirmEnd","pending_start","pending_end","ask_start","confirmStart","PanelCustomActionsComponent","callWaiter","toISOString","PanelDetailsDisplayComponent","show_title","status_display","RoomDisplayStatus","BookingPanelComponent","_route","show_time","interactive","spaces","paramMap","websocket_connected","v1","setSpace","space_name","hide_all","_status","can_cancel","last_cancel","status_overrides","updateStatus","Pending","AvailableByRequest","Available","NotBookable","InUse","localStatus","overrideDisplay","displayStatus","isV1","PanelSpaceDetailsComponent","PanelTimelineComponent","time_blocks","generateTimelineBlocks","checkBookings","todays_bookings","hide_status","DEFAULT_START_OFFSET","DEFAULT_DURATION","DEFAULT_BLOCK_SIZE","TIME_BLOCK_SEPARATOR_MINUTES","calculateTimelineBlocks","nowInMinutes","round","start_offset","timeBlocks","clampedHour","in_use","evaluateBookingsInUse","showInUse","blockStart","blockEnd","shownBookings","newBlocks","blockTime","PanelDetailsDisplayV1Component","PanelSpaceDetailsComponentV1","ShellWrapperComponent","info_messages","message_index","page","events","updateMessage","reload_at_time","environment","general","menu","copyright","position","home","background","tiles","help","columns","booking_types","show_fields","html_body","multiple_spaces","desk_start","space_display","show_images","directory","show_avatars","min_search_length","explore","can_select_building","show_legend_group_names","show_timeline","legend","General","app","logo_light","src","logo_dark","heap_io","app_id","force_ssl","secure_cookie","disable_text_capture","cookie_path","DEFAULT_SETTINGS","composer","VERSION"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ShellWrapperComponent } from './shell/shell.component';\nimport { BootstrapComponent } from './shell/bootstrap/bootstrap.component';\nimport { BookingPanelArrayComponent } from './shell/panel-array/panel-array.component';\nimport { BookingPanelSelectComponent } from './shell/panel-select/panel-select.component';\nimport { BookingPanelComponent } from './shell/panel/panel.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ShellWrapperComponent,\n        children: [\n            { path: 'bootstrap', component: BootstrapComponent },\n            { path: 'panel/:system_id', component: BookingPanelComponent },\n            { path: 'panel-array', component: BookingPanelArrayComponent },\n            { path: 'panel-select', component: BookingPanelSelectComponent },\n            { path: '**', redirectTo: 'bootstrap' }\n        ]\n    },\n    { path: '**', redirectTo: 'bootstrap' }\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, { useHash: true })],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","<div class=\"app\">\n    <router-outlet></router-outlet>\n    <debug-outlet></debug-outlet>\n</div>\n","import { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: [\n        './styles/app.component.scss',\n        './styles/custom-element.styles.scss',\n        './styles/native-element.styles.scss',\n    ],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class AppComponent {\n    constructor() {\n        (window as any).app_loaded = true;\n    }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport './shared/mocks';\n\nimport { AGoogleAnalyticsModule } from '@acaprojects/ngx-google-analytics';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\n\nimport { SharedOverlaysModule } from './overlays/overlays.module';\nimport { SharedContentModule } from './shared/shared.module';\n\nimport { ShellWrapperComponent } from './shell/shell.component';\nimport { BootstrapComponent } from './shell/bootstrap/bootstrap.component';\nimport { PanelTimelineComponent } from './shell/panel/timeline/timeline.component';\nimport { PanelSpaceDetailsComponentV1 } from './shell/panel/v1/space-details/space-details.component';\nimport { PanelBookingActionsComponent } from './shell/panel/booking-actions/booking-actions.component';\nimport { PanelCustomActionsComponent } from './shell/panel/custom-actions/custom-actions.component';\nimport { BookingPanelArrayComponent } from './shell/panel-array/panel-array.component';\nimport { BookingPanelSelectComponent } from './shell/panel-select/panel-select.component';\nimport { DebugOutletComponent } from './debug-outlet.component';\nimport { BookingPanelComponent } from './shell/panel/panel.component';\nimport { PanelDetailsDisplayV1Component } from './shell/panel/v1/panel-details-display-v1.component';\nimport { PanelDetailsDisplayComponent } from './shell/panel/panel-details-display.component';\nimport { PanelSpaceDetailsComponent } from './shell/panel/space-details/space-details.component';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        ShellWrapperComponent,\n        BootstrapComponent,\n        BookingPanelComponent,\n        PanelDetailsDisplayV1Component,\n        PanelDetailsDisplayComponent,\n        PanelTimelineComponent,\n        PanelSpaceDetailsComponentV1,\n        PanelSpaceDetailsComponent,\n        PanelBookingActionsComponent,\n        PanelCustomActionsComponent,\n        BookingPanelArrayComponent,\n        BookingPanelSelectComponent,\n        DebugOutletComponent\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        AppRoutingModule,\n        HttpClientModule,\n        FormsModule,\n        AGoogleAnalyticsModule,\n        SharedOverlaysModule,\n        SharedContentModule,\n        ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production })\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n    constructor() {\n        console.log('Production:', !!environment.production);\n    }\n}\n","\n        <div class=\"toggle-space\" (click)=\"show = !show\"></div>\n        <div class=\"debug-outlet\" *ngIf=\"show\">\n            <h4>Debug logs</h4>\n            <div class=\"list\">\n                <div class=\"log\" *ngFor=\"let log of log_list | async\">\n                    {{ log.time | date:'HH:mm:ss' }} <span>[{{log.level}}]</span> {{ log.content | json }}\n                </div>\n            </div>\n        </div>\n    ","import { Component } from '@angular/core';\nimport { DebugService } from './services/debug.service';\n\n@Component({\n    selector: 'debug-outlet',\n    template: `\n        <div class=\"toggle-space\" (click)=\"show = !show\"></div>\n        <div class=\"debug-outlet\" *ngIf=\"show\">\n            <h4>Debug logs</h4>\n            <div class=\"list\">\n                <div class=\"log\" *ngFor=\"let log of log_list | async\">\n                    {{ log.time | date:'HH:mm:ss' }} <span>[{{log.level}}]</span> {{ log.content | json }}\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [`\n        .toggle-space {\n            position: absolute;\n            top: 0;\n            left: 0;\n            height: 2em;\n            width: 2em;\n            z-index: 9999;\n        }\n\n        .debug-outlet {\n            position: absolute;\n            bottom: .5em;\n            left: .5em;\n            background-color: #fff;\n            border-radius: 4px;\n            z-index: 999;\n            box-shadow: 0 1px 3px 1px rgba(0,0,0, .2),\n                        0 1px 1px 0 rgba(0,0,0, .14),\n                        0 2px 1px -1px rgba(0,0,0, .12);\n        }\n\n        h4 { width: 100%; border-bottom: 1px solid #ccc; margin: 0; padding: .5rem }\n\n        .log {\n            font-size: .7em;\n            font-family: monospace;\n            padding: .5em;\n            white-space: nowrap;\n        }\n\n        .log:nth-child(2n) {\n            background-color: rgba(0,0,0,0.05);\n        }\n\n        span {\n            font-family: monospace;\n            opacity: .8;\n        }\n\n        .list {\n            max-height: 20em;\n            max-width: 40em;\n            overflow: auto;\n        }\n    `]\n})\nexport class DebugOutletComponent {\n\n    public show: boolean = false;\n\n    public get log_list() {\n        return this._debug.logs;\n    }\n\n    constructor(private _debug: DebugService) {}\n}\n","<div class=\"modal booking\" widget [class.is-loading]=\"loading\" [@show] *ngIf=\"!closing\">\n    <div class=\"header\">\n        <div class=\"text\">New Booking</div>\n    </div>\n    <div class=\"body\" *ngIf=\"!loading\">\n        <div class=\"form\" *ngIf=\"booking\">\n            <a-dynamic-form [fields]=\"booking.form_fields\"></a-dynamic-form>\n        </div>\n    </div>\n    <div class=\"body\" *ngIf=\"loading\">\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <a-spinner circle-ring color=\"#000\"></a-spinner>\n            </div>\n            <div class=\"text\">Processing request...</div>\n        </div>\n    </div>\n    <div class=\"footer\" *ngIf=\"!loading\">\n        <button widget name=\"close\" (tapped)=\"close()\">Cancel</button>\n        <button widget name=\"save\" (tapped)=\"save()\">Save</button>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { animate, style, transition, trigger } from '@angular/animations';\nimport { OverlayItem } from '@acaprojects/ngx-overlays';\n\nimport { ApplicationService } from '../../services/app.service';\nimport { BaseComponent } from '../../shared/base.component';\nimport { Booking } from '../../services/data/bookings/booking.class';\nimport { OVERLAY_REGISTER } from '../../shared/globals/overlay-register';\n\nimport * as dayjs from 'dayjs';\n\nexport interface BookingData {\n    booking: Booking;\n    on_error: () => void;\n    close: () => void;\n}\n\n@Component({\n    selector: 'booking-modal',\n    templateUrl: './booking-modal.component.html',\n    styleUrls: ['./booking-modal.component.scss'],\n    animations: [\n        trigger('show', [\n            transition(':enter', [\n                style({ opacity: 0, transform: 'translateX(100%) scale(0)' }),\n                animate(200, style({ opacity: 1, transform: 'translateX(0%) scale(1)' }))\n            ]),\n            transition(':leave', [\n                style({ opacity: 1, transform: 'translateX(0%) scale(1)' }),\n                animate(\n                    200,\n                    style({\n                        opacity: 0,\n                        transform: 'translateX(-100%) scale(0)'\n                    })\n                )\n            ])\n        ])\n    ]\n})\nexport class BookingModalComponent extends BaseComponent implements OnInit {\n    /** Whether modal is closing */\n    public closing: boolean;\n    /** New Booking instance */\n    public booking: Booking;\n    /** Whether the modal is processing a booking request */\n    public loading: boolean;\n\n    constructor(private item: OverlayItem, private service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.booking = new Booking(this.service.Bookings, {\n            date: this.item.data.date,\n            form_metadata: { ...this.item.data }\n        });\n        const space_field = this.booking.form_fields.find(field => field.key === 'space');\n        if (this.item.data.space && space_field) {\n            space_field.setValue(this.item.data.space);\n        }\n        const date_field = this.booking.form_fields.find(field => field.key === 'date');\n        if (date_field) {\n            date_field.setValue(this.item.data.date || dayjs().valueOf());\n        }\n        const title_field = this.booking.form_fields.find(field => field.key === 'title');\n        if (title_field) {\n            title_field.setValue(this.item.data.title || '');\n        }\n    }\n\n    /**\n     * Closes the modal\n     */\n    public close() {\n        this.closing = true;\n        this.timeout('close', () => this.item.close());\n    }\n\n    /**\n     * Post form data\n     */\n    public save() {\n        const fields = this.booking.form_fields;\n        fields.forEach(i => i.control.markAsDirty());\n        const valid = fields.reduce(\n            (fields_valid, field) =>\n                fields_valid &&\n                (field.control.valid ||\n                    (field.children &&\n                        field.children.length &&\n                        field.children.reduce(\n                            (sub_fields_valid, sub_field) => sub_fields_valid && sub_field.control.valid,\n                            true\n                        ))),\n            true\n        );\n        if (this.booking && valid) {\n            this.loading = true;\n            this.item.post('finish', {\n                booking: this.booking,\n                on_error: () => (this.loading = false),\n                close: () => this.close()\n            });\n        } else {\n            console.log(\n                'Invalid form fields. Valid states:',\n                fields.map(field => `${field.key}:${field.control.valid}`)\n            );\n        }\n    }\n}\n\nOVERLAY_REGISTER.push({\n    id: 'booking',\n    config: { content: BookingModalComponent, config: 'modal' }\n});\n","<div class=\"confirm modal\" widget [@show] *ngIf=\"!closing\">\n    <div class=\"header\">\n        <div class=\"text\">{{ title || 'Confirm' }}</div>\n    </div>\n    <div class=\"body\">\n        <div class=\"icon\" *ngIf=\"icon\">\n            <i *ngIf=\"icon.class\" [class]=\"icon.class\">{{ icon.value }}</i>\n            <img *ngIf=\"!icon.class && icon.src\" [src]=\"icon.src\">\n        </div>\n        <div class=\"content\">\n            <p>{{ content || 'Are you sure?' }}</p>\n        </div>\n    </div>\n    <div class=\"footer\">\n        <button widget name=\"cancel\" (tapped)=\"close()\">Cancel</button>\n        <button widget name=\"accept\" (tapped)=\"accept()\">{{ action || 'Ok' }}</button>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { animate, style, transition, trigger } from '@angular/animations';\n\nimport { OverlayItem } from '@acaprojects/ngx-overlays';\n\nimport { BaseComponent } from '../../shared/base.component';\nimport { OVERLAY_REGISTER } from '../../shared/globals/overlay-register';\n\n@Component({\n    selector: 'confirm-modal',\n    templateUrl: './confirm-modal.component.html',\n    styleUrls: ['./confirm-modal.component.scss'],\n    animations: [\n        trigger('show', [\n            transition(':enter', [\n                style({ opacity: 0, transform: 'translateX(100%) scale(0)' }),\n                animate(200, style({ opacity: 1, transform: 'translateX(0%) scale(1)' }))\n            ]),\n            transition(':leave', [\n                style({ opacity: 1, transform: 'translateX(0%) scale(1)' }),\n                animate(200, style({ opacity: 0, transform: 'translateX(-100%) scale(0)' }))\n            ])\n        ])\n    ]\n})\nexport class ConfirmModalComponent extends BaseComponent implements OnInit {\n    /** Title of the confirm modal */\n    public title: string;\n    /** Body of the confirm modal */\n    public content: string;\n    /** Display text on the confirm button */\n    public action: string;\n    /** Display icon properties */\n    public icon: { class?: string; value?: string; src?: string };\n    /** Whether modal is closing */\n    public closing: boolean;\n\n    constructor(private item: OverlayItem) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        const data = this.item.data;\n        if (data) {\n            this.title = data.title || 'Confirm';\n            this.content = data.content || data.body || data.description || 'Confirm';\n            this.action = data.action || 'Ok';\n            this.icon = data.icon;\n        }\n    }\n\n    /**\n     * Close the modal\n     */\n    public close() {\n        this.closing = true;\n        this.timeout('close', () => this.item.close());\n\n    }\n\n    /**\n     * User confirmation of the content of the modal\n     */\n    public accept() {\n        this.item.post('finish');\n        this.close();\n    }\n}\n\nOVERLAY_REGISTER.push({ id: 'confirm', config: { content: ConfirmModalComponent, config: 'modal' } });\n","<div class=\"background\"></div>\n<div class=\"modal control\" [@show] (window:touchend)=\"reset()\" (window:mouseup)=\"reset()\">\n    <div class=\"control-frame\">\n        <iframe [src]=\"control_url | safe:'resource'\"></iframe>\n    </div>\n</div>\n<div class=\"overlay\">\n    <button widget class=\"action countdown\" (tapped)=\"reset()\" (contextmenu)=\"$event.preventDefault()\">{{ countdown }}</button>\n    <button widget class=\"action close\" (tapped)=\"close()\" (contextmenu)=\"$event.preventDefault()\">\n        <div class=\"icon\">\n            <i class=\"material-icons\">close</i>\n        </div>\n    </button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { animate, keyframes, state, style, transition, trigger } from '@angular/animations';\n\nimport { OverlayItem } from '@acaprojects/ngx-overlays';\n\nimport { BaseComponent } from '../../shared/base.component';\nimport { OVERLAY_REGISTER } from '../../shared/globals/overlay-register';\n\n@Component({\n    selector: 'embedded-control-modal',\n    templateUrl: './embedded-control-modal.component.html',\n    styleUrls: ['./embedded-control-modal.component.scss'],\n    animations: [\n        trigger('show', [\n            transition(':enter', [style({ opacity: 0 }), animate(500, style({ opacity: 1 }))]),\n            transition(':leave', [style({ opacity: 1 }), animate(1000, style({ opacity: 0 }))]),\n        ]),\n    ],\n})\nexport class EmbeddedControlModalComponent extends BaseComponent implements OnInit {\n    /** Control URL to embed into the modal */\n    public control_url: string;\n    /** Display value for the time remain until the modal automatically closes */\n    public countdown: number;\n\n    constructor(private item: OverlayItem) {\n        super();\n        this.countdown = 30;\n    }\n\n    public ngOnInit(): void {\n        const data = this.item.data;\n        if (data) {\n            this.control_url = data.control_url;\n        }\n        if (!this.control_url) {\n            this.close();\n        }\n        this.countdown = 30;\n        this.interval('countdown', () => this.tick(), 1000);\n    }\n\n    /**\n     * Close the modal\n     */\n    public close() {\n        this.item.close();\n        this.countdown = 30;\n    }\n\n    /**\n     * User confirmation of the content of the modal\n     */\n    public reset() {\n        this.countdown = 30;\n        this.interval('countdown', () => this.tick(), 1000);\n    }\n\n    /**\n     * Decrement countdown and close if 0\n     */\n    public tick() {\n        if (this.countdown <= 0) {\n            this.close();\n        }\n        this.countdown--;\n    }\n}\n\nOVERLAY_REGISTER.push({ id: 'embeded-control', config: { content: EmbeddedControlModalComponent, config: 'modal' } });\n","\nimport { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SharedContentModule } from '../shared/shared.module';\n\nimport { ConfirmModalComponent } from './confirm-modal/confirm-modal.component';\nimport { EmbeddedControlModalComponent } from './embedded-control-modal/embedded-control-modal.component';\nimport { BookingModalComponent } from './booking-modal/booking-modal.component';\n\nconst OVERLAYS: Type<any>[] = [\n    ConfirmModalComponent,\n    EmbeddedControlModalComponent,\n    BookingModalComponent\n];\n\n@NgModule({\n    declarations: [\n        ...OVERLAYS\n    ],\n    imports: [\n        CommonModule,\n        SharedContentModule\n    ],\n    exports: [\n        ...OVERLAYS\n    ],\n    entryComponents: [\n        ...OVERLAYS\n    ]\n})\nexport class SharedOverlaysModule {}\n","import { ApplicationRef, Injectable, NgZone } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\nimport { SwUpdate } from '@angular/service-worker';\n\nimport { listenForToken, setup, PlaceAuthOptions, token, hasToken } from '@placeos/ts-client';\nimport { AOverlayService } from '@acaprojects/ngx-overlays';\nimport { GoogleAnalyticsService } from '@acaprojects/ngx-google-analytics';\n\nimport { Observable, BehaviorSubject, Subject, Subscription } from 'rxjs';\n\nimport { BaseClass } from '../shared/base.class';\nimport { SettingsService } from './settings.service';\nimport { HashMap } from '../shared/utilities/types.utilities';\n\nimport { OVERLAY_REGISTER } from '../shared/globals/overlay-register';\nimport { ComposerSettings } from '../shared/utilities/settings.interfaces';\n\nimport { HotkeysService } from './hotkeys.service';\nimport { OrganisationService } from './data/organisation/organisation.service';\nimport { UsersService } from './data/users/users.service';\nimport { BookingsService } from './data/bookings/bookings.service';\nimport { SpacesService } from './data/spaces/spaces.service';\nimport { SystemsManagerService } from './data/systems-manager/systems-manager.service';\nimport { PollingService } from './data/polling/polling.service';\nimport { first, delay } from 'rxjs/operators';\nimport { ConsoleStream, log } from '../shared/utilities/general.utilities';\n\ndeclare global {\n    interface Window {\n        application: ApplicationService;\n        mock: {\n            enabled: boolean;\n            backend: any;\n        };\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ApplicationService extends BaseClass {\n    /** List of previous routes for return navigation */\n    private _route_trail: string[] = [];\n    /** Map of state variables for Service */\n    protected _subjects: { [key: string]: BehaviorSubject<any> | Subject<any> } = {};\n    /** Map of observables for state variables */\n    protected _observers: { [key: string]: Observable<any> } = {};\n    /** Whether the application has stablised */\n    private _stable: boolean;\n\n    /** Whether the application has stablised */\n    public get is_stable(): boolean {\n        return this._stable || false;\n    }\n\n    constructor(\n        private _app_ref: ApplicationRef,\n        private _zone: NgZone,\n        private _title: Title,\n        private _router: Router,\n        private _cache: SwUpdate,\n        private _settings: SettingsService,\n        private _overlay: AOverlayService,\n        private _analytics: GoogleAnalyticsService,\n        private _hotkeys: HotkeysService,\n        private _systems: SystemsManagerService,\n        private _organisation: OrganisationService,\n        private _users: UsersService,\n        private _bookings: BookingsService,\n        private _spaces: SpacesService,\n        private _polling: PollingService\n    ) {\n        super();\n        this._organisation.parent = this._users.parent = this._bookings.parent = this._spaces.parent = this._polling.parent = this;\n        this.set('system', null);\n        this.log('APP', `Waiting for Application to stablised...`, undefined, undefined, true);\n        this._app_ref.isStable.pipe(first((_) => _)).subscribe(() => {\n            this.log('APP', `Application has stablised.`, undefined, undefined, true);\n            this._zone.run(() => {\n                this._stable = true;\n                this.setupCache();\n                this.waitForSettings();\n                this.registerOverlays();\n            });\n        });\n    }\n\n    /** Overlay service */\n    public get Overlay(): AOverlayService {\n        return this._overlay;\n    }\n\n    /** Analytics service */\n    public get Analytics() {\n        return this._analytics;\n    }\n\n    /** Hotkeys service */\n    public get Hotkeys() {\n        return this._hotkeys;\n    }\n\n    /** Systems Manager service */\n    public get Systems() {\n        return this._systems;\n    }\n\n    /** Organisation service */\n    public get Organisation() {\n        return this._organisation;\n    }\n\n    /** Users service */\n    public get Users() {\n        return this._users;\n    }\n\n    /** Bookings service */\n    public get Bookings() {\n        return this._bookings;\n    }\n\n    /** Spaces service */\n    public get Spaces() {\n        return this._spaces;\n    }\n\n    /**\n     * Get a setting from the settings service\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        return this._settings.get(key);\n    }\n\n    /** Name of the application */\n    public get name() {\n        return this._settings.app_name;\n    }\n\n    /**\n     * Title of the page\n     */\n    public set title(value: string) {\n        const title_suffix = this.setting('app.title');\n        this._title.setTitle(`${value ? value + ' | ' : ''}${title_suffix}`);\n    }\n\n    /**\n     * Title of the page\n     */\n    public get title(): string {\n        return this._title.getTitle();\n    }\n\n    /** Root API Endpoint */\n    public get endpoint() {\n        return `/api/staff/`;\n    }\n\n    /** Root API Endpoint for engine */\n    public get engine_endpoint() {\n        return `/control/api/`;\n    }\n\n    /**\n     * Create notification popup\n     * @param type CSS Class to add to the notification\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notify(type: string, msg: string, action?: string, on_action?: () => void): void {\n        const content = `<div class=\"icon\"><i class=\"material-icons\"></i></div><div class=\"text\">${msg}</div>`;\n        this._overlay.notify(content, action, on_action, type);\n    }\n\n    /**\n     * Create success notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifySuccess(msg: string, action?: string, on_action?: () => void): void {\n        this.notify('success', msg, action, on_action);\n    }\n\n    /**\n     * Create success notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifyError(msg: string, action?: string, on_action?: () => void): void {\n        this.notify('error', msg, action, on_action);\n    }\n\n    /**\n     * Create info notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifyInfo(msg: string, action?: string, on_action?: () => void): void {\n        this.notify('info', msg, action, on_action);\n    }\n\n    /**\n     * Log data to the browser console\n     * @param type Type of message\n     * @param msg Message body\n     * @param args array of argments to log to the console\n     * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\n     * @param force Whether to force message to be emitted when debug is disabled\n     */\n    public log(type: string, msg: string, args?: any, stream: ConsoleStream = 'debug', force: boolean = false): void {\n        log(type, msg, args, stream, force);\n    }\n\n    /**\n     * Navigate to the given path\n     * @param path Path or array of path parts\n     * @param query Key value pairs to add to the URL as query parameters\n     */\n    public navigate(path: string | string[], query?: HashMap): void {\n        const route = path instanceof Array ? [...path] : [path];\n        this._route_trail.push(this._router.url);\n        this._router.navigate(route, query ? { queryParams: query } : { preserveFragment: true });\n    }\n\n    /**\n     * Navigate to the previous location in the route trail\n     */\n    public navigateBack(): void {\n        if (this._route_trail && this._route_trail.length > 0) {\n            const path = this._route_trail.pop();\n            this._router.navigate([path]);\n        } else {\n            this._router.navigate(['']);\n        }\n    }\n\n    /**\n     * Get the current value of the named property\n     * @param name Property name\n     */\n    public get<U = any>(name: string): U {\n        return this._subjects[name] && this._subjects[name] instanceof BehaviorSubject\n            ? (this._subjects[name] as BehaviorSubject<U>).getValue()\n            : null;\n    }\n\n    /**\n     * Listen to value change of the named property\n     * @param name Property name\n     * @param next Callback for value changes\n     */\n    public listen<U = any>(name: string, next: (_: U) => void): Subscription {\n        return this._observers[name] ? this._observers[name].subscribe(next) : null;\n    }\n\n    /**\n     * Update the value of the named property\n     * @param name Property name\n     * @param value New value\n     */\n    public set<U = any>(name: string, value: U): void {\n        if (!this._subjects[name]) {\n            this._subjects[name] = new BehaviorSubject<U>(value);\n            this._observers[name] = this._subjects[name].asObservable();\n        } else {\n            this._subjects[name].next(value);\n        }\n    }\n\n    /** Wait for settings to be initialised before setting up the application */\n    private waitForSettings() {\n        this.log('SYSTEM', 'Waiting for settings...');\n        // Wait until the settings have loaded before initialising\n        this._settings.initialised.pipe(first(_ => _)).subscribe(() => this.init());\n    }\n\n    /**\n     * Initialise application services\n     */\n    private async init() {\n        await this.setupComposer().catch(_ => _);\n        listenForToken().pipe(delay(500), first(_ => hasToken())).subscribe(_ => {\n            this._users.init();\n            // Setup analytics\n            this._analytics.enabled = !!this.setting('app.analytics.enabled');\n            if (this._analytics.enabled) {\n                this._analytics.load(this.setting('app.analytics.tracking_id'));\n            }\n            // Add service to window if in debug mode\n            if (window.debug) {\n                window.application = this;\n            }\n            this._hotkeys.listen(['Shift', 'Backslash'], () => {\n                this.navigate('bootstrap', { clear: true });\n            });\n            this._organisation.init();\n            this._bookings.init();\n            this._spaces.init();\n            this._polling.init();\n            this._initialised.next(true);\n        });\n    }\n\n    /**\n     * Initialise the composer library comms\n     */\n    private setupComposer(): Promise<void> {\n        this.log('SYSTEM', 'Setting up composer...');\n        // Get application settings\n        const settings: ComposerSettings = this._settings.get('composer') || {};\n        const protocol = settings.protocol || location.protocol;\n        const host = settings.domain || location.hostname;\n        const port = settings.port || location.port;\n        const url = settings.use_domain ? `${protocol}//${host}:${port}` : location.origin;\n        const route = host.includes('localhost') && port === '4200' ? '' : settings.route || '';\n        const mock =\n            this._settings.get('mock') ||\n            location.href.includes('mock=true') ||\n            localStorage.getItem('mock') === 'true';\n        // Generate configuration object\n        const config: PlaceAuthOptions = {\n            auth_type: 'auth_code',\n            scope: 'public',\n            host: `${host}:${port}`,\n            auth_uri: `${url}/auth/oauth/authorize`,\n            token_uri: `${url}/auth/token`,\n            redirect_uri: `${location.origin}${route}/oauth-resp.html`,\n            handle_login: !settings.local_login,\n            use_iframe: true,\n            token_header: true,\n            mock\n        };\n        setup(config);\n        this.log('SYSTEM', 'Finsihed setting up composer.');\n        return setup(config);\n    }\n\n    /**\n     * Setup handler for cache change events\n     */\n    private setupCache() {\n        this.unsub('app_stable');\n        this.log('CACHE', `Initialising cache...`);\n        if (this._cache.isEnabled) {\n            this.log('CACHE', `Listening to cache events...`);\n            this._cache.activateUpdate();\n            this.subscription(\n                'cache_update',\n                this._cache.available.subscribe((event) => {\n                    const current = `current version is ${event.current.hash}`;\n                    const available = `available version is ${event.available.hash}`;\n                    this.log('CACHE', `Update available: ${current} ${available}`);\n                    this.activateUpdate();\n                })\n            );\n            setInterval(() => {\n                this.log('CACHE', `Checking for updates...`);\n                this._cache.checkForUpdate();\n            }, 5 * 60 * 1000);\n        }\n    }\n\n    /**\n     * Update the cache and reload the page\n     */\n    private activateUpdate() {\n        if (this._cache.isEnabled) {\n            this.log('CACHE', `Activating changes to the cache...`);\n            this._cache.activateUpdate().then(() => location.reload(true));\n        }\n    }\n\n    /**\n     * Pre-register available overlays\n     */\n    private registerOverlays(): void {\n        if (OVERLAY_REGISTER) {\n            for (const overlay of OVERLAY_REGISTER) {\n                this._overlay.register(overlay.id, overlay.config);\n            }\n        }\n    }\n}\n","import { ADynamicFormField } from '@acaprojects/ngx-dynamic-forms';\nimport { Subject } from 'rxjs';\n\nimport { BaseClass } from '../../shared/base.class';\nimport { HashMap } from '../../shared/utilities/types.utilities';\n\nexport interface IDataClassEvent {\n    type: string;\n    metadata: HashMap;\n}\n\nexport class BaseDataClass extends BaseClass {\n    /** Unique Identifier of the object */\n    readonly id: string;\n    /** Human readable name of the object */\n    readonly name: string;\n    /** Email address associated with the object */\n    readonly email: string;\n    /** Subject for change events to the class object */\n    readonly changeEvents = new Subject<IDataClassEvent>();\n    /** Form Fields for the object */\n    protected _form_fields: ADynamicFormField[];\n    /** Metadata to pass to form fields */\n    protected _form_metadata: HashMap;\n\n    constructor(protected service: any, raw_data: HashMap) {\n        super();\n        this.id = raw_data.id || raw_data.zone_id || raw_data.email || `${Math.floor(Math.random() * 9999999999)}`;\n        this.name = raw_data.name;\n        this.email = (raw_data.email || '').toLowerCase();\n        this._form_metadata = raw_data.form_metadata || {};\n    }\n\n    /** Get form field metadata for the object */\n    public get form_fields(): ADynamicFormField[] {\n        if (!this._form_fields) {\n            this._form_fields = this.initialiseFormFields();\n        }\n        return this._form_fields;\n    }\n\n    /** Whether form fields are valid */\n    public get valid(): boolean {\n        return this._form_fields ? this._form_fields.reduce((a, i) => a && i.isValid(), true) : false;\n    }\n\n    /** Whether the form has changes */\n    public get changes(): boolean {\n        return this.formChanges().length > 0;\n    }\n\n    /**\n     * Reset the values on the form to their initial state\n     */\n    public resetForm(): void {\n        if (this._form_fields) {\n            for (const field of this._form_fields) {\n                field.setValue(this[field.key]);\n            }\n        }\n    }\n\n    /**\n     * Get a list of the field names that have changed values\n     */\n    public formChanges(): string[] {\n        const changed: string[] = [];\n        if (this._form_fields) {\n            for (const field of this._form_fields) {\n                if (field.getValue() !== this[field.key]) {\n                    changed.push(field.key);\n                }\n            }\n        }\n        return changed;\n    }\n\n    /**\n     * Save form changes to server\n     */\n    public save(): Promise<BaseDataClass> {\n        if (this.changes && this.service) {\n            this._form_fields.forEach(i => i.showErrors(true));\n            if (this.valid) {\n                const form = this.formValues();\n                return this.id\n                    ? this.service.update(this.id, form)\n                    : this.service.add(form);\n            }\n        }\n    }\n\n    /**\n     * Delete this item from the server\n     */\n    public delete(): Promise<void> {\n        if (this.id) {\n            return this.service.delete(this.id);\n        }\n    }\n\n    /**\n     * Run task for this item on the service\n     * @param task_name Name of the task\n     * @param parameters Parameters to pass to the task request\n     */\n    public runTask(task_name: string, parameters: HashMap): Promise<void> {\n        if (this.id) {\n            return this.service.task(this.id, task_name, parameters);\n        }\n    }\n\n    /**\n     * Get a map of the field values\n     */\n    public toJSON(): HashMap {\n        if (!this._form_fields) {\n            this._form_fields = this.initialiseFormFields();\n        }\n        const json = this.formValues();\n        json.id = this.id;\n        delete json.changed_fields;\n        return json;\n    }\n\n    /**\n     * Emits change event\n     * @param type Type of change that has occurred\n     * @param metadata Supporting metadata for the event\n     */\n    public emit(type: string, metadata?: HashMap): void {\n        this.changeEvents.next({ type, metadata })\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): BaseDataClass {\n        return new BaseDataClass(this.service, this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): BaseDataClass {\n        return new BaseDataClass(this.service, { ...this, id: null, email: null });\n    }\n\n    /**\n     * Get the mapped values of the form fields\n     */\n    protected formValues(field_list: ADynamicFormField[] = this._form_fields, changes: boolean = true): HashMap {\n        const values: HashMap = {};\n        for (const field of field_list) {\n            if (field.children && field.children.length > 0) {\n                values[field.key] = this.formValues(field.children, false);\n            } else {\n                values[field.key] = field.getValue();\n            }\n        }\n        if (changes) {\n            values.changed_fields = this.formChanges();\n        }\n        return values;\n    }\n\n    /**\n     * Initialise the form field metadata for the field\n     */\n    protected initialiseFormFields(): ADynamicFormField[] {\n        const edit = !!this.id;\n        const fields: ADynamicFormField[] = [\n            new ADynamicFormField({\n                key: 'name',\n                type: 'input',\n                value: this.name\n            }),\n            new ADynamicFormField({\n                key: 'email',\n                type: 'input',\n                value: this.email,\n                required: true,\n                attributes: { type: 'email' }\n            })\n        ];\n        return fields;\n    }\n}\n","\nimport { get, post, put, del } from '@placeos/ts-client';\nimport { BehaviorSubject, Observable, Subscription, Subscriber, Subject } from 'rxjs';\n\nimport { BaseDataClass } from './base-api.class';\nimport { BaseClass } from '../../shared/base.class';\nimport { ApplicationService } from '../app.service';\nimport { HashMap } from '../../shared/utilities/types.utilities';\nimport { toQueryString } from '../../shared/utilities/api.utilities';\n\nexport interface IEngineResponse {\n    results: HashMap[];\n    total: number\n}\n\nexport class BaseAPIService<T = BaseDataClass> extends BaseClass {\n    /** Application service */\n    public parent: ApplicationService;\n    /** Display name of the service */\n    protected _name: string;\n    /** API Route of the service */\n    protected _api_route: string;\n    /** Map of state variables for Service */\n    protected _subjects: { [key: string]: BehaviorSubject<any> | Subject<any> } = {};\n    /** Map of observables for state variables */\n    protected _observers: { [key: string]: Observable<any> } = {};\n    /** Map of poll subscribers for API endpoints */\n    protected _subscribers: { [key: string]: Subscriber<any> } = {};\n    /** Map of promises for Service */\n    protected _promises: { [key: string]: Promise<any> } = {};\n    /** Comparison function for service items */\n    protected _compare: (a: T, b: T) => boolean = (a, b) => a === b || (a as any).id === (b as any).id;\n    /** Default filter function for list method */\n    protected _list_filter: (a: T) => boolean = (a) => !!a;\n\n    constructor() {\n        super();\n        this._name = 'Base';\n        this._api_route = 'base';\n        this.set('list', []);\n    }\n\n    /**\n     * Initailise service\n     */\n    public init() {\n        this.load().then(_ => this._initialised.next(true));\n    }\n\n    /**\n     * Get API route for the service\n     * @param engine Whether endpoint is using the application API or engine API\n     */\n    public route(engine: boolean = false) {\n        const endpoint = this.parent ? (engine ? this.parent.engine_endpoint : this.parent.endpoint) : '/api/';\n        return `${endpoint}${this._api_route}`;\n    }\n    /** API Route of the service */\n    public get api_route() {\n        return this._api_route;\n    }\n\n    /**\n     * Get a service related setting from the settings service\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string) {\n        return this.parent ? this.parent.setting(`app.${this._name.toLowerCase()}.${key}`) : null;\n    }\n\n    /**\n     * Get the current value of the named property\n     * @param name Property name\n     */\n    public get<U = any>(name: string): U {\n        return this._subjects[name] && this._subjects[name] instanceof BehaviorSubject\n            ? (this._subjects[name] as BehaviorSubject<U>).getValue()\n            : null;\n    }\n\n\n    /**\n     * Listen to value change of the named property\n     * @param name Property name\n     * @param next Callback for value changes\n     */\n    public listen<U = any>(name: string): Observable<U> {\n        return this._observers[name] ? this._observers[name] : null;\n    }\n\n    /**\n     * Update the value of the named property\n     * @param name Property name\n     * @param value New value\n     */\n    protected set<U = any>(name: string, value: U): void {\n        if (!this._subjects[name]) {\n            this._subjects[name] = new BehaviorSubject<U>(value);\n            this._observers[name] = this._subjects[name].asObservable();\n        } else {\n            this._subjects[name].next(value);\n        }\n    }\n\n    /**\n     * Get list of loaded items\n     * @param filterFn Function for filtering the list\n     */\n    public list(filterFn: (a: T) => boolean = this._list_filter): T[] {\n        const list = this.get('list') || [];\n        return list.reduce((a, i) => { if (filterFn(i)) { a.push(i); } return a; }, []);\n    }\n\n    /**\n     * Get item with the given id from the loaded items\n     * @param id ID of the item\n     */\n    public item(id: string): T {\n        const list = this.get('list') || [];\n        return list.find(i => i.id === id || i.email === id);\n    }\n\n    /**\n     * Query the index of the API route associated with this service\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public query(query_params: HashMap = { update_list: true }): Promise<T[] | HashMap[]> {\n        let engine = false;\n        let cache = 1000;\n        if (query_params) {\n            engine = !!query_params.engine;\n            delete query_params.engine;\n            cache = query_params.cache || 1000;\n            delete query_params.cache;\n        }\n        const query = toQueryString(query_params);\n        const key = `query|${query}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise((resolve, reject) => {\n                const url = `${this.route(engine)}${query ? '?' + query : ''}`;\n                let result: T[] | HashMap[] = [];\n                get(url).subscribe(\n                    (d: IEngineResponse | HashMap[]) => {\n                        result = d && d instanceof Array\n                            ? d.map(i => this.process(i))\n                            : (d && !(d instanceof Array) && d.results\n                                ? d.results as HashMap[]\n                                : []);\n                    }, e => {\n                        reject(e);\n                        this._promises[key] = null;\n                    },\n                    () => {\n                        if ((!query || (query_params && query_params.update_list)) && result.length > 0 && result[0] instanceof BaseDataClass) {\n                            this.set('list', this.updateList(this.get('list'), result as T[]));\n                        }\n                        resolve(result);\n                        this.timeout(key, () => (this._promises[key] = null), cache);\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Query the API route for a sepecific item\n     * @param id ID of the item\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public show(id: string, query_params: HashMap = {}): Promise<T> {\n        let engine = false;\n        if (query_params) {\n            engine = !!query_params.engine;\n            delete query_params.engine;\n        }\n        const query = toQueryString(query_params);\n        const key = `show|${id}|${query}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<T>((resolve, reject) => {\n                const url = `${this.route(engine)}/${id}${query ? '?' + query : ''}`;\n                let result: T = null;\n                get(url).subscribe(\n                    d => result = this.process(d),\n                    e => {\n                        reject(e);\n                        this._promises[key] = null;\n                    },\n                    () => {\n                        resolve(result);\n                        this.timeout(key, () => (this._promises[key] = null), 1000);\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Make post request for a new item to the service\n     * @param form_data Data to post to the server\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public add(form_data: HashMap, query_params: HashMap = {}): Promise<T> {\n        if (!this._promises.new_item) {\n            this._promises.new_item = new Promise<T>((resolve, reject) => {\n                const query = toQueryString(query_params);\n                const url = `${this.route(query_params.engine)}${query ? '?' + query : ''}`;\n                let result: T = null;\n                post(url, form_data).subscribe(\n                    d => (result = this.process(d)),\n                    e => {\n                        reject(e);\n                        this.analyticsEvent(`create-${this._name.toLowerCase()}-failed`);\n                        this._promises.new_item = null;\n                    },\n                    () => {\n                        resolve(result);\n                        this.set('list', this.updateList(this.get('list'), [result]));\n                        this.analyticsEvent(`create-${this._name.toLowerCase()}-success`);\n                        this._promises.new_item = null;\n                    }\n                );\n            });\n        }\n        return this._promises.new_item;\n    }\n\n    /**\n     * Perform API task for the given item ID\n     * @param id ID of the item\n     * @param task_name Name of the task\n     * @param form_data Map of data to pass to the API\n     */\n    public task<U = any>(id: string, task_name: string, form_data: HashMap = {}): Promise<U> {\n        const query = toQueryString(form_data);\n        const key = `task|${id}|${task_name}|${query}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<U>((resolve, reject) => {\n                const post_data = { ...form_data, id, _task: task_name };\n                const url = `${this.route(form_data.engine)}/${id}/${task_name}`;\n                let result = null;\n                post(url, post_data).subscribe(\n                    d => result = d,\n                    e => {\n                        reject(e);\n                        this.analyticsEvent(`${this._name.toLowerCase()}-task-${task_name}-failed`, id);\n                        this._promises[key] = null;\n                    },\n                    () => {\n                        resolve(result as U);\n                        this.analyticsEvent(`${this._name.toLowerCase()}-task-${task_name}-success`, id);\n                        this.timeout(key, () => this._promises[key] = null, 1000);\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Setup a poller for an API endpoint\n     * @param id Show request ID. Leave blank to poll on the query endpoint\n     * @param query_params Map of query paramaters to add to the polled URL\n     * @param delay Delay between each poll event\n     */\n    public poll(id?: string, query_params: HashMap = {}, delay: number = 5000): Observable<T | T[]> {\n        const key = `poll|${id || ''}|${toQueryString(query_params) || ''}`;\n        this.stopPoll(id, query_params);\n        this._subjects[key] = new Subject<T | T[]>();\n        this._observers[key] = this._subjects[key].asObservable();\n        const sub = this._subjects[key];\n        const query = { ...(query_params || {}), _poll: true };\n        if (id) {\n            this.show(id, query).then((d) => sub.next(d), e => sub.error(e));\n            this.interval(key, () => {\n                this.show(id, query).then((d) => sub.next(d), e => sub.error(e));\n            }, delay);\n        } else {\n            this.query(query).then((d) => sub.next(d), e => sub.error(e));\n            this.interval(key, () => {\n                this.query(query).then((d) => sub.next(d), e => sub.error(e));\n            }, delay);\n        }\n        return this._observers[key];\n    }\n\n    /**\n     * Destroy poller\n     * @param id\n     * @param query_params\n     */\n    public stopPoll(id?: string, query_params: HashMap = {}) {\n        const key = `poll|${id || ''}|${toQueryString(query_params) || ''}`;\n        if (this._subjects[key]) {\n            this._subjects[key].complete();\n            this._subjects[key] = null;\n            this._observers[key] = null;\n        }\n    }\n\n    /**\n     * Make put request for changes to the item with the given id\n     * @param id ID of the item being updated\n     * @param form_data New values for the item\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public update(id: string, form_data: HashMap, query_params: HashMap = {}): Promise<T> {\n        const key = `update|${id}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<T>((resolve, reject) => {\n                const query = toQueryString(query_params);\n                const url = `${this.route(query_params.engine)}/${id}${query ? '?' + query : ''}`;\n                let result: T = null;\n                put(url, form_data).subscribe(\n                    d => (result = this.process(d)),\n                    e => {\n                        reject(e);\n                        this.analyticsEvent(`update-${this._name.toLowerCase()}-failed`, id);\n                        this._promises[key] = null;\n                    },\n                    () => {\n                        resolve(result);\n                        this.set('list', this.updateList(this.removeItem(this.get('list'), { id } as any), [result]));\n                        this.analyticsEvent(`update-${this._name.toLowerCase()}-success`, id);\n                        this._promises[key] = null;\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Make delete request for the given item\n     * @param id ID of item\n     */\n    public delete(id: string): Promise<void> {\n        const key = `delete|${id}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<void>((resolve, reject) => {\n                const url = `${this.route()}/${id}`;\n                del(url).subscribe(\n                    _ => null,\n                    e => reject(e),\n                    () => {\n                        this.set('list', this.removeItem(this.get('list'), ({ id } as any)));\n                        resolve();\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Add new API item from another service or API class\n     * @param id ID of the item/or service adding the new item\n     * @param data Raw API data for the new item\n     * @param type Adder type\n     */\n    public addFrom(id: string, data: HashMap, type: 'class' | 'service' | 'other' = 'other'): string {\n        const new_item = this.process(data);\n        this.set('list', this.updateList(this.get('list'), [new_item]));\n        return (new_item as any).id;\n    }\n\n    /**\n     * Remove items with the given IDs from the list\n     * @param id ID of the item/or service remove the list of items\n     * @param remove_ids List of item IDs to remove\n     * @param type Remover type\n     */\n    public removeFrom(id: string, remove_ids: string[], type: 'class' | 'service' | 'other' = 'other') {\n        const list = this.get('list');\n        for (const item_id of remove_ids) {\n            const index = list.findIndex(item => item.id === item_id);\n            if (index >= 0) {\n                list.splice(index, 1);\n            }\n        }\n        this.set('list', list);\n    }\n\n    /**\n     * Load initial data for the service\n     */\n    protected load(): Promise<void> {\n        return new Promise<void>((resolve) => {\n            resolve();\n        });\n    }\n\n    /**\n     * Post analytics event for this service\n     * @param action Name of the action to post\n     */\n    protected analyticsEvent(action: string, label?: string) {\n        if (this.parent && this.parent.Analytics) {\n            this.parent.Analytics.event(this._name, `${this.parent.name.toLowerCase()}-${action}`, label);\n        }\n    }\n\n    /**\n     * Convert raw API data into a valid API Object\n     * @param raw_item Raw API data\n     */\n    protected process(raw_item: HashMap): T {\n        return raw_item as T;\n    }\n\n    /**\n     * Update recorded list of items\n     * @param old_list Old list of items\n     * @param list List of updated items\n     * @param compareFn Function to compare items to remove duplicates\n     */\n    protected updateList(old_list: T[], list: T[], compareFn: (a: T, b: T) => boolean = this._compare): T[] {\n        if (!list || list.length === 0) { return old_list; }\n        const new_list: T[] = [];\n        const mixed_list = [...list, ...old_list];\n        if (!compareFn) { compareFn = this._compare; }\n        for (const item of mixed_list) {\n            const found = new_list.find(i => compareFn(i, item));\n            if (!found) {\n                new_list.push(item);\n            }\n        }\n        return new_list;\n    }\n\n    /**\n     * Remove the given item from the given list\n     * @param list List of items\n     * @param item Item to remove\n     * @param compareFn Function to compare items\n     */\n    protected removeItem(list: T[], item: T, compareFn?: (a: T, b: T) => boolean) {\n        const new_list = [];\n        if (!compareFn) { compareFn = this._compare; }\n        list.forEach(i => compareFn(item, i) ? null : new_list.push(i));\n        return new_list;\n    }\n}\n","import { formatDate } from '@angular/common';\nimport { Validators } from '@angular/forms';\nimport { ADynamicFormField } from '@acaprojects/ngx-dynamic-forms';\n\nimport { BaseDataClass } from '../base-api.class';\nimport { User } from '../users/user.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\nimport { humaniseDuration } from '../../../shared/utilities/general.utilities';\nimport { Space } from '../spaces/space.class';\nimport { FORM_FIELDS } from '../../../shared/globals/form-fields';\n\nimport {\n    formatAttendeesWithHost, formatRecurrence, formatSpaces\n} from '../../../shared/utilities/formatting.utilities';\nimport {\n    buildValidateAttendees, buildValidateDuration, validateDate\n} from '../../../shared/utilities/validation.utilities';\n\nimport * as dayjs from 'dayjs';\nimport { BaseAPIService } from '../base.service';\n\nexport class Booking extends BaseDataClass {\n    /** Unique calendar event ID */\n    readonly icaluid: string;\n    /** Subject or title of the booking */\n    readonly title: string;\n    /** Unix timestamp of the booking start */\n    readonly date: number;\n    /** Length of the booking in minutes */\n    readonly duration: number;\n    /** Description or details of the booking */\n    readonly body: string;\n    /** Supplimentary notes for the booking */\n    readonly notes: string;\n    /** Type of booking */\n    readonly type: string;\n    /** Whether the booking has catering associated with it */\n    readonly catering: boolean;\n    /** String location set in booking */\n    readonly _location: string;\n    /** List of attendee emails associated with the booking */\n    private _attendees: string[];\n    /** Email of the host or organiser of the booking */\n    private _organiser: string;\n    /** List of spaces associated with the booking */\n    private _space_list: string[];\n    /** Cached display strings */\n    private _display: HashMap<string> = {};\n\n    constructor(protected service: BaseAPIService<Booking>, raw_data: HashMap = {}) {\n        super(service, raw_data);\n        const u_service = service && service.parent && service.parent.Users;\n        this.icaluid = raw_data.icaluid || this.id;\n        this.title = raw_data.title || raw_data.subject || raw_data.Subject;\n        const start = dayjs(raw_data.date || raw_data.start || raw_data.start_epoch * 1000 || raw_data.Start);\n        this.date = start.valueOf();\n        this.duration = raw_data.duration || dayjs(raw_data.end || raw_data.end_epoch * 1000 || raw_data.End).diff(start, 'm');\n        this.body = raw_data.body || raw_data.description;\n        this.notes = raw_data.notes;\n        this.type = raw_data.type || (raw_data.visitors ? 'external' : null) || 'internal';\n        this.catering = raw_data.catering;\n        this._attendees = (raw_data.attendees || raw_data._attendees || []).map(i => u_service?.item(i.email) || new User(u_service, i));\n        const organiser = raw_data.organiser || raw_data.organizer || { email: `${raw_data.owner}@fake.org` };\n        if (raw_data.owner) {\n            this.service?.parent.Users.addFrom('booking', { name: raw_data.owner, email: `${raw_data.owner}@fake.org` });\n        }\n        this._organiser = organiser.email || raw_data._organiser;\n        this._location = raw_data.location || raw_data._location;\n        this._display = {\n            date: start.format('DD MMM YYYY'),\n            time: `${start.format('h:mma')} - ${dayjs(start)\n                .add(this.duration, 'm')\n                .format('h:mma')}`,\n            start: start.format('h:mma'),\n            startDate: dayjs(start)\n                .format('MMMM Do'),\n            end: dayjs(start)\n                .add(this.duration, 'm')\n                .format('h:mma'),\n            endDate: dayjs(start)\n                .add(this.duration, 'm')\n                .format('MMMM Do'),\n            duration: humaniseDuration(this.duration)\n        };\n        this._space_list = raw_data.room_ids || raw_data._space_list;\n        // Add attendees and organiser to service data\n        if (this.service?.parent && this.service.parent.Users) {\n            if (raw_data.attendees) {\n                raw_data.attendees.forEach(u => {\n                    if (!this.service.parent.Users.item(u.email)) {\n                        this.service.parent.Users.addFrom(this.id, u, 'class');\n                    }\n                });\n            }\n            if (organiser) {\n                if (!this.service.parent.Users.item(organiser.email)) {\n                    this.service.parent.Users.addFrom(this.id, organiser, 'class');\n                }\n            }\n        }\n    }\n\n    /** List of attendees to the meeting */\n    public get attendees(): User[] {\n        return this.service && this.service.parent && this.service.parent.Users\n            ? this.service.parent.Users.list((user) => this._attendees.indexOf(user.id) >= 0)\n            : [];\n    }\n\n    /** Host or organiser of the meeting */\n    public get organiser(): User {\n        return this.service && this.service.parent && this.service.parent.Users && this._organiser\n            ? this.service.parent.Users.item(this._organiser) : null;\n    }\n\n    /** Status of the booking */\n    public get status(): 'future' | 'upcoming' | 'done' | 'started' | 'in_progress' {\n        const now = dayjs();\n        const date = dayjs(this.date);\n        if (now.isBefore(date.subtract(15, 'm'), 'm')) {\n            return 'future';\n        } else if (now.isBefore(date, 'm')) {\n            return 'upcoming';\n        } else if (now.isBefore(date.add(15, 'm'), 'm')) {\n            return 'started';\n        } else if (now.isBefore(date.add(this.duration, 'm'), 'm')) {\n            return 'in_progress';\n        }\n        return 'done';\n    }\n\n    /** Get the first space from the space list */\n    public get space(): Space {\n        return this.service && this.service.parent && this.service.parent.Spaces && this._space_list && this._space_list.length > 0\n            ? this.service.parent.Spaces.item(this._space_list[0]) : null;\n    }\n\n    /** Spaces associated with the booking */\n    public get space_list(): Space[] {\n        return this.service && this.service.parent && this.service.parent.Spaces\n            ? this.service.parent.Spaces.list((space) => this._space_list.indexOf(space.id) >= 0)\n            : [];\n    }\n\n    /** Display value for the date */\n    public get date_string(): string {\n        return this._display.date;\n    }\n\n    /** Display valuie for the start and end times of the booking */\n    public get time_period(): string {\n        return this._display.time;\n    }\n\n    /** Display value for the start time of the booking */\n    public get start_time(): string {\n        return this._display.start;\n    }\n\n    public get start_date(): string {\n        return this._display.startDate;\n    }\n\n    /** Display value for the end time of the booking */\n    public get end_time(): string {\n        return this._display.end;\n    }\n\n    public get end_date(): string {\n        return this._display.endDate;\n    }\n\n    /** Display value for the duration of the booking */\n    public get length_string(): string {\n        return this._display.duration;\n    }\n\n    /** Display value for the location of the booking */\n    public get location(): string {\n        return this._display.space_names || this._location || 'No location set';\n    }\n\n    /** Display value for the level of the first space in the booking */\n    public get level(): string {\n        return this._display.level;\n    }\n\n    /**\n     * Create form fields for the object\n     */\n    protected initialiseFormFields(): ADynamicFormField[] {\n        const form_fields = [];\n        const form_settings = this.service.setting('fields') || [];\n        const user = this.service.parent.Users.current;\n        const actions = {\n            // space: () => this.setSpace(),\n            // recurrence: () => this.setRecurrence(),\n            // conferencing: (v?) => this.setConferencing(v)\n        };\n        const validators = {\n            date: [validateDate],\n            duration: [buildValidateDuration()],\n            attendees: [buildValidateAttendees(user, this.service.setting('min_attendees'))],\n            terms: [Validators.requiredTrue]\n        };\n        const formatters = {\n            attendees: formatAttendeesWithHost(user),\n            date: formatDate,\n            space: formatSpaces,\n            recurrence: formatRecurrence\n        };\n        const custom_elements = FORM_FIELDS;\n        const defaults = {};\n        const process_field = field => {\n            const f = {\n                key: field.key,\n                label: field.label,\n                icon: field.icon,\n                type: field.control_type || field.type,\n                value: this[field.key] || defaults[field.key] || '',\n                action: field.action || actions[field.key],\n                format: field.format || formatters[field.key],\n                content: field.content || custom_elements[field.key],\n                required: field.required,\n                validators: validators[field.key],\n                references: field.references || field.refs,\n                hide: field.hide,\n                metadata: { ...field.metadata, ...this._form_metadata, service: this.service },\n                attributes: { flex: field.flex },\n                children: field.children ? field.children.map(i => process_field(i)) : null\n            };\n            return new ADynamicFormField(f);\n        };\n        for (const field of form_settings) {\n            if (field.key) {\n                form_fields.push(process_field(field));\n            }\n        }\n        return form_fields;\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): Booking {\n        return new Booking(this.service, this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): Booking {\n        return new Booking(this.service, { ...this, id: null, email: null, icaluid: null });\n    }\n}\n","import { padZero } from '../../../shared/utilities/general.utilities';\n\nimport { generateMockUser } from '../users/user.utilities';\n\nimport * as faker from 'faker';\nimport * as dayjs from 'dayjs';\nimport { Booking } from './booking.class';\nimport MockDate from 'mockdate';\nimport { SpaceCheckOptions, SpaceRuleOptions, SpaceRules } from './booking.interfaces';\n\nconst MINUTE = 1;\nconst HOUR = 60;\nconst DAY = 24 * HOUR;\nconst WEEK = 7 * DAY;\nconst MONTH = 30 * DAY;\n\nconst DURATION_MAP: { [duration: string]: number } = {\n    month: MONTH,\n    months: MONTH,\n    week: WEEK,\n    weeks: WEEK,\n    day: DAY,\n    days: DAY,\n    hour: HOUR,\n    hours: HOUR,\n    minute: MINUTE,\n    minutes: MINUTE,\n};\n\n/**\n * August 13, 2020 at 7:22:12 UTC\n */\nconst initialTime = 1597346532 * 1000;\n\nexport const mockDate = () => MockDate.set(initialTime);\n\nlet BOOKING_COUNT = 0;\nlet BOOKING_DATE = dayjs().minute(0).startOf('m');\n\n/**\n * Set the initial time used for generating mock bookings\n * @param time New initial time as ms from UTC epoch\n */\nexport function setMockBookingStartDatetime(time: number) {\n    BOOKING_DATE = dayjs(time).startOf('m');\n}\n\n/**\n * Create mock raw API data for a booking\n * @param id\n * @param seed - faker seed to remain stable.\n */\nexport function generateMockBooking(id?: string, seed?: number) {\n    if (seed) {\n        faker.seed(seed);\n    }\n    if (!id) {\n        id = `booking-${BOOKING_COUNT++}`;\n    }\n    const offset = seed ? 0 : Math.floor(Math.random() * 4);\n    const localDate = BOOKING_DATE.add(offset + 15, 'm');\n    const start = localDate.valueOf();\n    const duration = offset + 30;\n    return {\n        id,\n        icaluid: seed ? 0 : padZero(Math.floor(Math.random() * 99999999), 8),\n        title: `${faker.commerce.productName()} Meeting`,\n        attendees: Array(seed ? 1 : Math.floor(Math.random() * 5 + 2))\n            .fill(0)\n            .map(i => generateMockUser(undefined, undefined, undefined, seed)),\n        organiser: generateMockUser(undefined, undefined, undefined, seed),\n        date: start,\n        duration,\n        description: faker.lorem.paragraph(),\n        notes: faker.lorem.paragraph(),\n        location: faker.address.city(),\n        catering: seed ? false : Math.floor(Math.random() * 34567) % 3 === 0\n    };\n}\n\nexport interface IBookingSlot {\n    start: number;\n    end: number;\n}\n\n/**\n * Generate a list of free time slots between the given bookings\n * @param list List of bookings to find slots between\n * @param min_size Minimum length of a free slot in minutes\n */\nexport function getFreeBookingSlots(list: Booking[], min_size: number = 30): IBookingSlot[] {\n    if (!list) {\n        return [{ start: 0, end: dayjs().startOf('m').valueOf() * 10 }];\n    }\n    const slots: IBookingSlot[] = [];\n    let start = dayjs(0);\n    list.sort((a, b) => a.date - b.date);\n    for (const booking of list) {\n        const bkn_start = dayjs(booking.date);\n        const bkn_end = bkn_start.add(booking.duration, 'm');\n        if (bkn_start.isAfter(start)) {\n            const diff = bkn_start.diff(start, 'm');\n            if (diff >= min_size) {\n                slots.push({ start: start.valueOf(), end: bkn_start.valueOf() });\n            }\n            start = bkn_end;\n        }\n    }\n    slots.push({ start: start.valueOf(), end: dayjs().startOf('m').valueOf() * 10 });\n    return slots;\n}\n\n/**\n * Get the next free time slot from the given bookings\n * @param list List of bookings to find the next slot\n * @param date Date to find next slot after in ms since UTC epoch\n * @param min_size Minimum length of the free slot in minutes\n */\nexport function getNextFreeBookingSlot(list: Booking[], date: number = dayjs().valueOf(), min_size: number = 30): IBookingSlot {\n    const slots = getFreeBookingSlots(list, min_size);\n    const time = dayjs(date).startOf('m').second(1);\n    for (const block of slots) {\n        const start = dayjs(block.start).startOf('m');\n        const end = dayjs(block.end).startOf('m');\n        if (start.isAfter(time, 's')) {\n            return block;\n        } else if (time.isBefore(end, 's')) {\n            const duration = end.diff(time, 'm');\n            if (duration >= min_size) {\n                return block;\n            }\n        }\n    }\n    return slots[slots.length - 1];\n}\n\n\n/**\n * Get booking rules for the given user and space\n * @param user User to determine applicable rules\n * @param space Space to get rules for\n * @param time Booking start time in ms since UTC epoch\n * @param rules List of booking rules for the building\n */\nexport function rulesForSpace(options: SpaceRuleOptions): SpaceRules {\n    if (!options) {\n        throw Error('Options are needed to check for rule matches');\n    }\n    const space_rules_for_user: SpaceRules = {\n        auto_approve: true,\n        hide: true,\n    };\n    let match = false;\n    /* istanbul ignore else */\n    if (options.space) {\n        for (const type in options.rules) {\n            if (\n                options.rules.hasOwnProperty(type) &&\n                options.rules[type] instanceof Array &&\n                options.space.zones.find((zone) => zone === type)\n            ) {\n                for (const rule_block of options.rules[type]) {\n                    /* istanbul ignore else */\n                    if (\n                        checkRules({\n                            user: options.user,\n                            space: options.space,\n                            time: options.time,\n                            recurr_end: options.recurr_end,\n                            duration: options.duration,\n                            rules: rule_block.conditions,\n                        })\n                    ) {\n                        const ruleset = rule_block.rules;\n                        const conditions = rule_block.conditions;\n                        space_rules_for_user.hide = false;\n                        /* istanbul ignore else */\n                        if (conditions.max_length) {\n                            space_rules_for_user.max_length = stringToMinutes(\n                                conditions.max_length as string\n                            );\n                        }\n                        /* istanbul ignore else */\n                        if (conditions.min_length) {\n                            space_rules_for_user.min_length = stringToMinutes(\n                                conditions.min_length as string\n                            );\n                        }\n                        // NOTE: use max_length in conditions instead of book_length in rules\n                        // if (ruleset.book_length) {\n                        //     space_rules_for_user.max_length = stringToMinutes(ruleset.book_length as string);\n                        // }\n                        /* istanbul ignore else */\n                        if (ruleset.auto_approve !== undefined) {\n                            space_rules_for_user.auto_approve = ruleset.auto_approve;\n                        }\n                        match = true;\n                        break;\n                    }\n                }\n            }\n            /* istanbul ignore else */\n            if (!space_rules_for_user.hide) {\n                break;\n            }\n        }\n    }\n    if (!match) {\n        space_rules_for_user.hide = true;\n    }\n    return space_rules_for_user;\n}\n\n/**\n * Check if user matches the given ruleset\n * @param options\n */\nfunction checkRules(options: SpaceCheckOptions): boolean {\n    /* istanbul ignore else */\n    if (options.rules) {\n        const time = dayjs(options.time);\n        const recurr = options.recurr_end ? dayjs(options.recurr_end) : dayjs();\n        const count = Object.keys(options.rules).length;\n        let matches = 0;\n        Object.keys(options.rules).forEach((key) => {\n            let counter = 0;\n            const condition: string[] =\n                options.rules[key] instanceof Array\n                    ? (options.rules[key] as [])\n                    : [options.rules[key] as string];\n            switch (key) {\n                case 'groups':\n                    /* istanbul ignore else */\n                    if (options.user && options.user.groups) {\n                        counter = 0;\n                        condition.forEach((i) =>\n                            options.user.groups.find((j) => j === i) ? counter++ : null\n                        );\n                        /* istanbul ignore else */\n                        if (counter > 0) {\n                            matches++;\n                        }\n                    }\n                    break;\n                case 'locations':\n                    /* istanbul ignore else */\n                    if (options.user && options.user.location) {\n                        counter = 0;\n                        condition.forEach((i) =>\n                            (options.user.last_location.name || '').indexOf(i) >= 0\n                                ? counter++\n                                : null\n                        );\n                        /* istanbul ignore else */\n                        if (counter >= options.rules[key].length) {\n                            matches++;\n                        }\n                    }\n                    break;\n                case 'is_before':\n                    /* istanbul ignore else */\n                    if (options.time) {\n                        const duration = stringToMinutes(condition[0]);\n                        const check = dayjs().add(duration, 'm');\n                        let match = time.isBefore(check, 'm');\n                        /* istanbul ignore else */\n                        if (recurr) {\n                            match = match && recurr.isBefore(check, 'm');\n                        }\n                        matches += match ? 1 : 0;\n                    }\n                    break;\n                case 'is_after':\n                    /* istanbul ignore else */\n                    if (options.time) {\n                        const duration = stringToMinutes(condition[0]);\n                        const check = dayjs().add(duration, 'm');\n                        time.isAfter(check, 'm') ? matches++ : '';\n                    }\n                    break;\n                case 'min_length':\n                    /* istanbul ignore else */\n                    if (options.duration) {\n                        matches += durationGreaterThanOrEqual(options.duration, condition[0]) ? 1 : 0;\n                    }\n                    break;\n                case 'max_length':\n                    /* istanbul ignore else */\n                    if (options.duration) {\n                        durationGreaterThanOrEqual(condition[0], options.duration) ? matches++ : '';\n                    }\n                    break;\n            }\n        });\n        return matches >= count;\n    }\n    return false;\n}\n\n/**\n * Whether the first input is greater than the last. Converts duration strings into minutes\n * @param duration_1 First input can be a number in minutes or a duration string e.g. `1 hour`\n * @param duration_2 Second input can be a number in minutes or a duration string e.g. `30 minutes`\n */\nexport function durationGreaterThanOrEqual(\n    duration_1: string | number,\n    duration_2: string | number\n) {\n    const first: number = typeof duration_1 === 'string' ? stringToMinutes(duration_1) : duration_1;\n    const second: number =\n        typeof duration_2 === 'string' ? stringToMinutes(duration_2) : duration_2;\n    return first >= second;\n}\n\n/**\n * Conver time string into minutes\n * @param str timestring e.g. `'1 day'`, `'15 minutes'`, `'2 weeks'`\n */\nexport function stringToMinutes(str: string): number {\n    const parts = str.split(' ');\n    return +parts[0] * DURATION_MAP[parts[1]];\n}\n","\nimport { Injectable } from '@angular/core';\n\nimport { BaseAPIService } from '../base.service';\nimport { Booking } from './booking.class';\nimport { Space } from '../spaces/space.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\nimport { BookingData } from '../../../overlays/booking-modal/booking-modal.component';\n\nimport * as dayjs from 'dayjs';\nimport { ServiceManager } from '../service-manager.class';\n\nexport interface IBookingOptions {\n    space: Space;\n    date?: number;\n    title?: string;\n    max_duration?: number;\n    min_duration?: number;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class BookingsService extends BaseAPIService<Booking> {\n    constructor() {\n        super();\n        ServiceManager.setService(Booking, this);\n        this._name = 'Bookings';\n        this._api_route = 'bookings';\n        this._compare = (a, b) => !a.id.localeCompare(b.id) || !a.icaluid.localeCompare(b.icaluid);\n    }\n\n    /**\n     * Open form modal for creating new bookings\n     * @param space Space to make booking in\n     * @param date Default date on the form\n     */\n    public new(options: IBookingOptions) {\n        if (options.space) {\n            this.parent.Overlay.open('booking', {\n                config: 'modal',\n                data: options as any\n            }, (event: { type: string, data: BookingData }) => {\n                const booking = event.data.booking.toJSON();\n                this.timeout('book', () => {\n                    this.create(options.space, booking)\n                        .then(() => {\n                            this.parent.notifySuccess('Booking successfully created');\n                            event.data.close ? event.data.close() : ''\n                        }).catch(_ => {\n                            this.parent.notifyError(`Error creating meeting. ${_}`);\n                            event.data.on_error ? event.data.on_error() : '';\n                        });\n                }, 1000);\n            });\n        }\n    }\n\n    /**\n     * Create new booking with the given properties\n     * @param booking New booking data\n     */\n    private create(space: Space, booking: HashMap) {\n        return new Promise((resolve, reject) => {\n            if (space) {\n                const request = {\n                    title: booking.title,\n                    count: {\n                        staff: booking.num_staff ? +booking.num_staff : 0,\n                        partners: booking.num_partners ? +booking.num_partners : 0,\n                    },\n                    staff_id: '', // data.form.user.staff_code,\n                    start: booking.date.valueOf(),\n                    end: dayjs(booking.date).add(booking.period.duration, 'm').valueOf(),\n                    host: booking.host || booking.user || { name: 'Panel User' }\n                };\n                const module = this.parent.Systems.get(space.id, 'Bookings');\n                if (request && module) {\n                    module.execute('create_meeting', [request]).then(() => {\n                        this.analyticsEvent('create-success');\n                        resolve();\n                    }, (err) => {\n                        this.analyticsEvent('create-failed');\n                        reject(`Error making booking: ${err}`);\n                    })\n                } else {\n                    reject(`No Bookings module found for space ${space.id}`);\n                }\n            } else {\n                reject('No space set for booking');\n            }\n        });\n    }\n\n    protected process(raw_data: HashMap): Booking {\n        return new Booking(this, raw_data);\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport { HashMap, Identity } from '../../../shared/utilities/types.utilities';\nimport { getItemWithKeys } from '../../../shared/utilities/general.utilities';\nimport { BaseAPIService } from '../base.service';\nimport { Organisation } from './organisation.class';\nimport { BuildingLevel } from './level.class';\nimport { BookingRule } from '../bookings/booking.interfaces';\n\nexport interface IBuildingRoleUser {\n    name: string;\n    email: string;\n    phone: string;\n}\n\nexport interface LockerMap {\n    [zone: string]: {\n        [area: string]: {\n            [type: string]: (string | boolean)[][];\n        };\n    };\n}\n\nexport interface ICoordinates {\n    longitude: number;\n    latitude: number;\n}\n\nexport interface IMapFeature {\n    id: string;\n    level_id: string;\n    name: string;\n}\n\nexport class Building extends BaseDataClass {\n    /** Engine Zone ID for the building */\n    readonly zone_id: string;\n    /** List of available extras for the building */\n    private _extras: Identity[];\n    /** List of available extra equipment for loan at the building */\n    private _loan_items: Identity[];\n    /** List of available levels for the building */\n    public readonly levels: readonly BuildingLevel[];\n    /** Details about the booking rules for the building */\n    public readonly booking_rules: HashMap<readonly BookingRule[]>;\n    /** Map of custom settings for the building */\n    private _settings: HashMap;\n    /** Map of roles and list of the associated users */\n    private _roles: HashMap<IBuildingRoleUser[]>;\n    /** Map of the locker ID arrays */\n    private _lockers: LockerMap;\n    /** Map of important system ids for the building */\n    private _systems: HashMap<string>;\n    /** Map of important phone numbers for the building */\n    private _phone_numbers: HashMap<string>;\n    /** Globe coordiates for the build */\n    private _location: ICoordinates;\n    /** List of zones associated with the building */\n    private _zones: string[];\n    /** Searchable map features */\n    private _searchables: IMapFeature[];\n\n    constructor(protected service: BaseAPIService<Organisation>, raw_data: HashMap) {\n        super(service, raw_data);\n        const settings = raw_data.settings || {};\n        const disc_info = settings.discovery_info || settings;\n        this.zone_id = raw_data.zone_id || raw_data.zone;\n        this._extras = (raw_data.extras || []).map(i => ({ id: i.extra_id || i.id, name: i.extra_name || i.name }));\n        this._loan_items = (raw_data.loan_items || []).map(i => ({ id: i.extra_id || i.id, name: i.extra_name || i.name }));\n        this.levels = (raw_data.levels || disc_info.levels  || []).map(i => new BuildingLevel({ ...i, building_id: this.id }));\n        this._roles = raw_data.roles || {};\n        this._lockers = raw_data.lockers || raw_data.locker_structure || {};\n        this._systems = raw_data.systems || {};\n        this._settings = raw_data.settings || {};\n        this._phone_numbers = raw_data.phone_numbers || {};\n        this._location = raw_data.location || { longitude: null, latitude: null };\n        this._searchables = [];\n        if (raw_data.neighbourhoods) {\n            for (const lvl in raw_data.neighbourhoods) {\n                if (raw_data.neighbourhoods.hasOwnProperty(lvl)) {\n                    const lvl_features = raw_data.neighbourhoods[lvl] || {};\n                    for (const feature in lvl_features) {\n                        if (lvl_features.hasOwnProperty(feature)) {\n                            this._searchables.push({\n                                id: lvl_features[feature],\n                                name: feature,\n                                level_id: lvl\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        this.booking_rules = raw_data.booking_rules || disc_info.booking_rules || settings.booking_rules || {};\n    }\n\n    /** List of available extras for the building */\n    public get extras(): Identity[] {\n        return [...(this._extras || [])];\n    }\n    /** List of available extras for the building */\n    public get loan_items(): Identity[] {\n        return [...(this._loan_items || [])];\n    }\n\n    /**\n     * Get a custom building setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        const keys = key.split('.');\n        const value = getItemWithKeys(keys, this._settings);\n        return value;\n    }\n\n    /**\n     * Get list of users with the associated role\n     * @param name Role to find users for\n     */\n    public role(name: string): IBuildingRoleUser[] {\n        return [...(this._roles[name] || [])];\n    }\n    /**\n     * Get list of the names of available user role lists\n     */\n    public get role_names(): string[] {\n        return Object.keys(this._roles).filter(i => this._roles.hasOwnProperty(i));\n    }\n    /** Map of the locker ID arrays */\n    public get lockers(): LockerMap {\n        return { ...(this._lockers || {}) };\n    }\n    /** Map of important system ids for the building */\n    public get systems(): HashMap<string> {\n        return { ...(this._systems || {}) };\n    }\n    /** Map of important phone numbers for the building */\n    public get phone_numbers(): HashMap<string> {\n        return { ...(this._phone_numbers || {}) };\n    }\n    /** Real coordinates */\n    public get location(): ICoordinates {\n        return { ...this._location };\n    }\n    /** List of zones associated with the building */\n    public get zones(): string[] {\n        return [...(this._zones || [])];\n    }\n    /** Searchable map features */\n    public get searchables(): IMapFeature[] {\n        return [...(this._searchables || [])];\n    }\n\n    /**\n     * Get search map feature for the given level ID\n     * @param level_id ID of level to grab features for\n     */\n    public featuresForLevel(level_id: string): IMapFeature[] {\n        return (this._searchables || []).filter(i => i.level_id === level_id);\n    }\n\n    /**\n     * Building objects are readonly and cannot be changed\n     */\n    public async save(): Promise<Building> {\n        throw new Error('Building objects are readonly and cannot be changed');\n    }\n\n    /**\n     * Building objects are readonly and cannot be deleted\n     */\n    public async delete(): Promise<void> {\n        throw new Error('Building objects are readonly and cannot be deleted');\n    }\n}\n","import { HashMap } from 'src/app/shared/utilities/types.utilities';\n\n/** Building Level data */\nexport class BuildingLevel {\n    /** ID of the building level zone */\n    readonly id: string;\n    /** ID of the building zone associated with the level */\n    readonly building_id: string;\n    /** Name of the level */\n    readonly name: string;\n    /** Number or short identifier of the level */\n    readonly short_name: string;\n    /** Map URL for the level */\n    readonly map_url: string;\n    /** Usage type for the level */\n    readonly type: 'staff' | 'client' | 'any';\n    /** Setting for the level */\n    readonly settings: HashMap;\n\n    constructor(_data: HashMap = {}) {\n        this.id = _data.id || _data.level_id || '';\n        this.building_id = _data.bld_id || _data.building_id || '';\n        this.name = _data.name || _data.level_name || '';\n        const lower_name = this.name.toLowerCase();\n        const num = lower_name.indexOf('level') >= 0 ? lower_name.replace(/ ?level ?/gi, '') : lower_name.substr(0, 1).toUpperCase();\n        this.short_name = _data.short_name || num || '';\n        this.map_url = _data.map_url || '';\n        this.type = _data.type || _data.floor_type || 'any';\n        this.settings = _data.settings;\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\nimport { getItemWithKeys } from '../../../shared/utilities/general.utilities';\nimport { BaseAPIService } from '../base.service';\n\nexport class Organisation extends BaseDataClass {\n    /** Map of custom settings for the building */\n    private _settings: HashMap;\n\n    constructor(protected service: BaseAPIService<Organisation>, raw_data: HashMap) {\n        super(service, raw_data);\n        this._settings = raw_data.settings || {};\n    }\n\n    /**\n     * Get a custom building setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        const keys = key.split('.');\n        const value = getItemWithKeys(keys, this._settings);\n        return value;\n    }\n\n    /**\n     * Building objects are readonly and cannot be changed\n     */\n    public async save(): Promise<Organisation> {\n        throw new Error('Organisation objects are readonly and cannot be changed');\n    }\n\n    /**\n     * Building objects are readonly and cannot be deleted\n     */\n    public async delete(): Promise<void> {\n        throw new Error('Organisation objects are readonly and cannot be deleted');\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { BaseAPIService } from '../base.service';\nimport { Organisation } from './organisation.class';\nimport { Building } from './building.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\nimport { ServiceManager } from '../service-manager.class';\nimport { BuildingLevel } from './level.class';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class OrganisationService extends BaseAPIService {\n    /** Organisation data for the application */\n    private _organisation: Organisation;\n    /** Actively displayed building */\n    private _active_building: string;\n    /** Whether an error was shown when loading organisation data */\n    private shown_error: boolean;\n\n    constructor() {\n        super();\n        ServiceManager.setService(Building, this);\n        ServiceManager.setService(Organisation, this);\n        this._name = 'Organisation';\n        this._api_route = 'zones';\n        this.set('buildings', []);\n        this.set('levels', []);\n    }\n\n    /**\n     * Get list of levels for the given building ID\n     * @param bld_id Building ID\n     */\n    public levels(bld_id: string): readonly BuildingLevel[] {\n        return (this.buildings.find((i) => i.id === bld_id) || ({} as Building)).levels;\n    }\n\n    /**\n     * Get a setting from the organisation or active building\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string) {\n        return this.building.setting(key) || this._organisation.setting(key);\n    }\n\n    /** Active building */\n    public get building(): Building {\n        return (this.buildings.find(i => i.id === this._active_building));\n    }\n\n    public set building(bld: Building) {\n        if (bld instanceof Building) {\n            this._active_building = bld.id;\n        } else {\n            this._active_building = bld;\n        }\n    }\n\n    /** List of buildings for the organisation */\n    public get buildings(): Building[] {\n        return this.get<Building[]>('buildings') || [];\n    }\n\n    /**\n     * Get list of available equipment\n     * @param id ID of the building to get the list from. i.e. Defaults to the active building\n     */\n    public getExtras(id: string, bld_id?: string) {\n        const bld = (bld_id ? this.buildings.find(i => i.id === bld_id) : null) || this.building;\n        if (bld && id) {\n            return bld.extras.filter(i => i.id.indexOf(id) >= 0) || [];\n        }\n        return [];\n    }\n\n    /**\n     * Get the first level matching the list of given IDs\n     * @param ids List of ID to search with\n     */\n    public levelWithID(ids: string | string[]) {\n        const list = ids instanceof Array ? ids : [ids];\n        const bld_list = this.buildings;\n        for (const id of list) {\n            for (const bld of bld_list) {\n                for (const lvl of bld.levels) {\n                    if (lvl.id === id) {\n                        return lvl;\n                    }\n                }\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Initialise service data\n     */\n    protected load(): Promise<void> {\n        if (localStorage) {\n            this._active_building = localStorage.getItem(`${this.parent.name}.building`);\n        }\n        return new Promise((resolve) => {\n            this.loadOrganisation().then(() => {\n                this.loadBuildings().then(() => {\n                    this.loadLevels().then(() => resolve());\n                });\n            });\n        });\n    }\n\n    /**\n     * Load organisation data for application\n     */\n    public loadOrganisation(): Promise<void> {\n        return new Promise<void>((resolve) => {\n            this.query({ tags: 'org', engine: true }).then((org_data) => {\n                this._organisation = new Organisation(this as any, org_data[0]);\n                this.set('organisation', this._organisation);\n                this.shown_error = false;\n                resolve();\n            }, _ => {\n                if (!this.shown_error) {\n                    this.shown_error = true;\n                    this.parent.notifyError('Error loading organisation data. Retrying...');\n                }\n                this.timeout('load_org', () => this.loadOrganisation().then(() => resolve()), 1000);\n            });\n        });\n    }\n\n    /**\n     * Load buildings data for the organisation\n     */\n    public loadBuildings(): Promise<void> {\n        return new Promise<void>((resolve) => {\n            this.query({ tags: 'building', engine: true, limit: 1000 }).then((bld_data) => {\n                const buildings = (bld_data as HashMap[]).map(i => new Building(this as any, i));\n                this.set('buildings', buildings || []);\n                if (!this._active_building && buildings && buildings.length > 0) {\n                    this._active_building = buildings[0].id;\n                }\n                resolve();\n            }, _ => {\n                this.parent.notifyError('Error loading building data. Retrying...');\n                this.timeout('load_bld', () => this.loadBuildings().then(() => resolve()), 1000);\n            });\n        });\n    }\n\n    /**\n     * Load levels data for the buildings\n     */\n    public loadLevels(): Promise<void> {\n        return new Promise<void>((resolve) => {\n            this.query({ tags: 'level', engine: true, limit: 1000 }).then((lvl_data) => {\n                const levels = (lvl_data as HashMap[]).map((i) => new BuildingLevel(i));\n                this.set('levels', levels);\n            }, _ => {\n                this.parent.notifyError('Error loading level data. Retrying...');\n                this.timeout('load_lvl', () => this.loadLevels().then(() => resolve()), 1000);\n            });\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { BaseAPIService } from '../base.service';\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\n\nexport interface PollingMetadata {\n    room_id: string;\n    metadata?: HashMap<any>;\n}\n\nexport class PingHistory {\n    /** List of previous poll data */\n    readonly history: PollingMetadata[];\n    /** Unix time in seconds of the last poll request */\n    readonly last_ping: number;\n    /** Email of the associated space */\n    readonly room_email: string;\n    /** ID of the associated space */\n    readonly room_id: string;\n\n    constructor(data: HashMap) {\n        this.history = data.history;\n        this.last_ping = data.last_ping;\n        this.room_email = data.room_email;\n        this.room_id = data.room_id;\n    }\n}\n\nconst SECONDS = 1000;\nconst MINUTES = 60 * SECONDS;\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PollingService extends BaseAPIService<PingHistory> {\n    constructor() {\n        super();\n        this._name = 'Users';\n        this._api_route = 'pings';\n    }\n\n    protected async load() {\n        this.interval('poll_endpoint', () => {\n            this.add({\n                room_id: this.parent.get('system')\n            });\n        }, 10 * MINUTES);\n    }\n\n    public query(...args: any): never {\n        throw new Error('Query method not available for polling endpoint');\n    }\n\n    public show(...args: any): never {\n        throw new Error('Show method not available for polling endpoint');\n    }\n\n    public update(...args: any): never {\n        throw new Error('Put method not available for polling endpoint');\n    }\n\n    public delete(...args: any): never {\n        throw new Error('delete method not available for polling endpoint');\n    }\n\n    protected process(data: HashMap) {\n        return new PingHistory(data);\n    }\n}\n","import { Type } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { BaseDataClass } from './base-api.class';\n\n\nexport interface ServiceLike<T = BaseDataClass> extends HashMap {\n    parent: any;\n    add: (_: HashMap) => Promise<T>;\n    update: (id: string, _: HashMap) => Promise<T>;\n    delete: (id: string, params?: HashMap) => Promise<void>;\n    task: (id: string, name: string, data: HashMap) => Promise<void>;\n    listen: <U = any>(prop: string) => Observable<U>;\n}\nexport interface ServiceProvider<T extends ServiceLike> {\n    provideFor: Type<any>;\n    useValue: T;\n}\n\nexport class ServiceManager {\n    /** Map of available services for child classes */\n    private static _service_list: ServiceProvider<any>[] = [];\n    /** Set the services used to handle data model requests */\n    public static setService(type: Type<any>, service: ServiceLike): void {\n        if (window.debug) {\n            (window as any).ServiceManager = this._service_list;\n        }\n        const index = ServiceManager._service_list.findIndex(provider => provider.provideFor === type);\n        if (index >= 0) {\n            ServiceManager._service_list.splice(index, 1, { provideFor: type, useValue: service });\n        } else {\n            ServiceManager._service_list.push({ provideFor: type, useValue: service });\n        }\n    }\n    /** Get the services used to handle data model requests */\n    public static serviceFor(type: Type<any>): ServiceLike<any> {\n        const provider = ServiceManager._service_list.find(provider => provider.provideFor === type) || { useValue: null };\n        return provider.useValue;\n    }\n\n    constructor() {\n        throw new Error('ServiceMananger is static class');\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport { HashMap, Identity } from '../../../shared/utilities/types.utilities';\nimport { Booking } from '../bookings/booking.class';\nimport { BaseAPIService } from '../base.service';\n\nimport * as dayjs from 'dayjs';\nimport { rulesForSpace } from '../bookings/booking.utilities';\nimport { SpaceRules } from '../bookings/booking.interfaces';\nimport { ServiceManager } from '../service-manager.class';\nimport { Building } from '../organisation/building.class';\nimport { Organisation } from '../organisation/organisation.class';\nimport { BuildingLevel } from '../organisation/level.class';\nimport { User } from '../users/user.class';\n\nexport interface ISpaceAvailabilityOptions {\n    date?: number;\n    duration: number;\n    id?: string;\n    room_ids?: string;\n    bookable?: boolean;\n    rooms?: string;\n    ignore?: string;\n    zone_id?: string;\n    clear?: boolean;\n}\n\nexport interface SpaceBookingRuleOptions {\n    date?: number;\n    duration?: number;\n    host?: User;\n}\n\nconst OPTION_DEFAULTS: ISpaceAvailabilityOptions = {\n    duration: 60\n};\n\nexport enum SpaceTheme {\n    v1 = 'v1',\n    v2 = 'v2',\n}\n\nexport class Space extends BaseDataClass {\n    /** Extends name for the space */\n    readonly long_name: string;\n    /** CSS selector for the location of the space of the level's map */\n    readonly map_id: string;\n    /** Type of space */\n    readonly type: string;\n    /** Whether user can search for this space */\n    readonly can_search: boolean;\n    /** Whether user can open the control URL if available */\n    readonly can_control: boolean;\n    /** Hourly cost for using the space */\n    readonly hourly_rate: number;\n    /** Whether space can be booked by users */\n    readonly bookable: boolean;\n    /** People capacity of the space */\n    readonly capacity: number;\n    /** Index to force order when sorting multiple spaces */\n    readonly sort_priority: number;\n    /** Setup time for bookings in this space */\n    readonly setup: number;\n    /** Breakdown time for bookings in this space */\n    readonly breakdown: number;\n    /** Last returned availability result */\n    readonly was_available: boolean;\n    /** The version of the UI to support multiple version theming. */\n    readonly theme_rbp: SpaceTheme;\n    /** Bookings associated with the space */\n    private _bookings: string[];\n    /** Engine zones associated with the space */\n    public readonly zones: string[];\n    /** List of equipment available in the space */\n    private _extras: Identity[];\n    /** List of ids for linked spaces */\n    private _linked_spaces: string[];\n\n    constructor(protected service: BaseAPIService<Space>, raw_data: HashMap = {}) {\n        super(service, raw_data);\n        const settings = raw_data.settings || {};\n        this.theme_rbp = settings.theme_rbp || raw_data.theme_rbp;\n        this.long_name = settings.long_name || raw_data.long_name;\n        this.map_id = settings.map_id || raw_data.map_id;\n        this.type =\n            settings.book_type ||\n            (this.level.settings || {}).book_type ||\n            raw_data.book_type ||\n            raw_data.type ||\n            'book';\n        this.can_search = settings.searchable || raw_data.searchable || raw_data.can_search || false;\n        this.can_control = settings.controlable || raw_data.controlable || raw_data.can_control || false;\n        this.hourly_rate = settings.cost_hour || raw_data.cost_hour || raw_data.hourly_rate || 0;\n        this.bookable = settings.bookable || raw_data.bookable || false;\n        this.setup = ((settings.setup || 0) / 60) || raw_data.setup || 0;\n        this.breakdown = ((settings.breakdown || 0) / 60) || raw_data.breakdown || 0;\n        this.capacity = raw_data.capacity || 0;\n        this.was_available = settings.available || raw_data.available || raw_data.was_available || false;\n\n        this.zones = raw_data.zones instanceof Array ? raw_data.zones : [];\n        const raw_bookings = settings.bookings || raw_data.bookings || [];\n        this._bookings = raw_bookings.map(i => i.id);\n        if (this.service.parent && this.service.parent.Bookings) {\n            if (raw_bookings) {\n                const id_list = [];\n                raw_bookings.forEach(booking => {\n                    let id = booking.id;\n                    this.service.parent.Bookings.removeFrom(this.id, [id], 'class');\n                    id = this.service.parent.Bookings.addFrom(this.id, booking, 'class');\n                    id_list.push(id);\n                });\n                this._bookings = id_list;\n            }\n        }\n        this._extras = [];\n        this._linked_spaces = settings.linked_rooms || raw_data.linked_rooms || raw_data.linked_spaces || [];\n    }\n\n    /** Whether the space has a booking in progress */\n    public get in_use(): boolean {\n        return !!this.current;\n    }\n\n    /** Get any current in progress meeting */\n    public get current(): Booking | null {\n        const bookings = this.bookings;\n        for (const bkn of bookings) {\n            const status = bkn.status;\n            if (status === 'in_progress' || status === 'started') {\n                return bkn;\n            }\n        }\n        return null;\n    }\n\n    /** Get the next upcoming meeting */\n    public get next(): Booking {\n        const now = dayjs().valueOf();\n        const bookings = this.bookings;\n        for (const bkn of bookings) {\n            if (bkn.date > now) {\n                return bkn;\n            }\n        }\n        return null;\n    }\n\n    /** List of stored bookings for the space */\n    public get bookings(): Booking[] {\n        const bookingService = ServiceManager.serviceFor(Booking);\n        const booking_list = (bookingService\n            && bookingService.list((booking) => this._bookings.indexOf(booking.id) >= 0) || []);\n        return booking_list.sort((a, b) => a.date - b.date);\n    }\n\n    /** List of bookings for today */\n    public get todays_bookings(): Booking[] {\n        return this.bookingsFor(dayjs().valueOf());\n    }\n\n    /** List of ids for linked spaces */\n    public get linked_spaces() {\n        return [...this._linked_spaces];\n    }\n\n    /** Level in which the space is associated */\n    public get level(): BuildingLevel {\n        const service = ServiceManager.serviceFor(Organisation);\n        const newVar = service ? service.levelWithID(this.zones as any) : null;\n        return newVar || new BuildingLevel({});\n    }\n\n    /**\n     * Get bookings for space\n     * @param date Date to filter bookings on\n     */\n    public bookingsFor(date?: number): Booking[] {\n        if (date) {\n            const day = dayjs(date);\n            return this.bookings.filter(i => dayjs(i.date).isSame(day, 'd'));\n        } else {\n            return this.bookings;\n        }\n    }\n\n    /**\n     * Whether the space is available.\n     */\n    public isAvailable(options?: ISpaceAvailabilityOptions): Promise<boolean> {\n        options = options\n            ? { ...OPTION_DEFAULTS, ...options, room_ids: this.id }\n            : { ...OPTION_DEFAULTS, room_ids: this.id };\n        return new Promise((resolve) => {\n            (this.service as any).available(options).then((list: Space[]) => {\n                for (const rm of list) {\n                    if (rm.id === this.id) {\n                        return resolve(true);\n                    }\n                }\n                resolve(false);\n            }, () => resolve(false));\n        });\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): Space {\n        return new Space(this.service, this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): Space {\n        return new Space(this.service, { ...this, id: null, email: null, _bookings: [] });\n    }\n\n    /**\n     * Generate the booking rules for space with given options\n     * @param options Conditions for generating the space rules\n     */\n    public rulesFor(options: SpaceBookingRuleOptions): SpaceRules {\n        const service = ServiceManager.serviceFor(Building);\n        if (!service || !this.level) {\n            return { auto_approve: true, hide: false };\n        }\n        const building = service.buildings.find((bld) => bld.id === this.level.building_id);\n        if (!building) {\n            return { auto_approve: true, hide: false };\n        }\n        const { date, duration, host } = options;\n        const rules: SpaceRules = rulesForSpace({\n            time: date,\n            duration,\n            space: this,\n            user: host,\n            rules: building.booking_rules\n        });\n        return rules;\n    }\n\n    /**\n     * Whether space can only be booked by request\n     * @param options Conditions for checking the space rules\n     */\n    public byRequest(options: SpaceBookingRuleOptions) {\n        const rules = this.rulesFor(options);\n        return !rules.auto_approve;\n    }\n}\n","import { HashMap } from '../../../shared/utilities/types.utilities';\nimport { generateMockBooking } from '../bookings/booking.utilities';\n\nimport * as faker from 'faker';\nimport { USER_DOMAIN } from '../users/user.utilities';\nimport { predictableRandomInt } from '../../../shared/utilities/general.utilities';\n\nlet SPACE_COUNT: number = 0;\n\nexport function generateMockSpace(overrides: HashMap = {}): HashMap {\n    const id = `space-${SPACE_COUNT++}`;\n    const name = `${faker.name.firstName()} ${faker.name.lastName()} Space`;\n    const linked = Math.floor(predictableRandomInt(99999)) % 2 === 0 && SPACE_COUNT > 1;\n    return {\n        id,\n        name,\n        long_name: `${name} with an long name`,\n        map_id: `${SPACE_COUNT}`,\n        capacity: Math.floor(predictableRandomInt(20) + 1) * 2,\n        email: `${name.toLowerCase().split(' ').join('.')}@${USER_DOMAIN}`,\n        type: faker.commerce.productName(),\n        searchable: Math.floor(predictableRandomInt(99999)) % 2 === 0,\n        controlable: Math.floor(predictableRandomInt(99999)) % 2 === 0,\n        bookable: Math.floor(predictableRandomInt(99999)) % 2 === 0,\n        cost_hour: Math.floor(predictableRandomInt(300)) * 100,\n        setup: Math.floor(predictableRandomInt(6)) * 5,\n        breakdown: Math.floor(predictableRandomInt(6)) * 5,\n        zones: ['zone_lvl-0'],\n        support_url: `/control/#/${id}`,\n        bookings: Array(10).fill(0).map(i => generateMockBooking()),\n        linked_rooms: linked ? [`space-${Math.floor(predictableRandomInt(SPACE_COUNT - 1))}`] : [],\n        image: faker.image.business(),\n        ...overrides\n    };\n}\n","\nimport { Injectable } from '@angular/core';\n\nimport { BaseAPIService } from '../base.service';\nimport { Space, ISpaceAvailabilityOptions } from './space.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\n\nimport * as dayjs from 'dayjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SpacesService extends BaseAPIService<Space> {\n\n    constructor() {\n        super();\n        this._name = 'Space';\n        this._api_route = 'rooms';\n        this._compare = (a, b) => !a.id.localeCompare(b.id) || !a.email.localeCompare(b.email);\n        this._list_filter = (a: Space) => {\n            const bld = this.parent.Organisation.building;\n            return a.level.building_id === bld.id;\n        };\n    }\n\n    /**\n     * Get available spaces\n     * @param options\n     */\n    public available(options: ISpaceAvailabilityOptions): Promise<Space[]> {\n        if (!options) { throw new Error('Space avilability requires request options'); }\n        if (!options.date) { options.date = dayjs().startOf('m').valueOf(); }\n        const key = `available|${options.id ? options.id : ''}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise((resolve, reject) => {\n                const respond = (list: Space[]) => {\n                    const available_spaces = list.filter(i => {\n                        const linked = list.filter(j => i.linked_spaces.indexOf(j.id) >= 0);\n                        return i.was_available && linked.reduce((a, v) => a && v.was_available, true);\n                    });\n                    resolve(available_spaces);\n                };\n                const error = (e) => reject(e);\n                if (options.id) {\n                    this.show(options.id, options).then((i) => respond([i]), error);\n                } else {\n                    this.query(options).then(respond, error);\n                }\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Load initial data for the service\n     */\n    protected async load(): Promise<void> {\n        await this.query();\n    }\n\n    /**\n     * Convert raw data into API object\n     * @param raw_data Raw API data\n     */\n    protected process(raw_data: HashMap): Space {\n        return new Space(this, raw_data);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { first, delay } from 'rxjs/operators';\nimport { PlaceSystem, PlaceModuleBinding, listenForToken, getModule, querySystems, hasToken } from '@placeos/ts-client';\n\nimport { BaseClass } from '../../../shared/base.class';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SystemsManagerService extends BaseClass {\n    /** Subject for System list */\n    private _list = new BehaviorSubject<PlaceSystem[]>([]);\n    /** Observable for system list */\n    public readonly systems = this._list.asObservable();\n\n    constructor() {\n        super();\n        listenForToken().pipe(delay(500), first(_ => hasToken())).subscribe(() => this.load());\n    }\n\n    /** List of available systems */\n    public get list() {\n        return this._list.getValue() || [];\n    }\n\n    /**\n     * Get engine module for the given system\n     * @param sys_id ID of the system to get the module from\n     * @param mod_id ID of the module with the given system\n     * @param index Index of the module\n     */\n    public get(sys_id: string, mod_id: string, index?: number): PlaceModuleBinding {\n        return getModule(sys_id, mod_id, index);\n    }\n\n    /**\n     * Load Systems\n     */\n    protected load() {\n        this.loadSystems();\n    }\n\n    /**\n     * Load one page of systems\n     * @param offset Item offset for the page to load\n     */\n    protected loadSystems(offset: number = 0, limit: number = 2000) {\n        querySystems({ offset, limit })\n            .toPromise()\n            .then((details) => {\n                const systems: PlaceSystem[] = [...this.list, ...details.data];\n                systems.sort((a, b) => (a.name || '').localeCompare(b.name));\n                this._list.next(systems);\n                if (systems.length < details.total) {\n                    this.loadSystems(systems.length);\n                }\n            })\n            .catch((e) => this.timeout('retry', () => this.loadSystems(offset), 2000));\n    }\n}\n","import { ADynamicFormField } from '@acaprojects/ngx-dynamic-forms';\n\nimport { BaseDataClass } from '../base-api.class';\nimport { HashMap, Identity } from '../../../shared/utilities/types.utilities';\nimport { BaseAPIService } from '../base.service';\n\nexport interface ILocation {\n    x?: number;\n    y?: number;\n    name?: string;\n    map_id?: string;\n    building: string;\n    level: string | Identity;\n    fixed: boolean;\n    loc_id?: string;\n    display?: { [name: string]: string };\n    confidence?: number;\n    another_bld?: boolean;\n    at_desk?: boolean;\n}\n\nexport class User extends BaseDataClass {\n    /** First name of the user */\n    readonly first_name: string;\n    /** Last name of the user */\n    readonly last_name: string;\n    /** Windows user ID */\n    readonly windows_id: string;\n    /** Type of user */\n    readonly type: 'partner' | 'external' | 'internal';\n    /** Contact phone number of the user */\n    readonly phone: string;\n    /** Organisational department the user is part of */\n    readonly business_unit: string;\n    /** Whether user is external from the application's organisation */\n    readonly external: boolean;\n    /** Organisational Identifier for the user */\n    readonly staff_code: string;\n    /** Basic location descriptor for the user */\n    public readonly location: string;\n    /** List of user groups associated with this user */\n    public readonly groups: readonly string[];\n    /** Organisation the user is associated with */\n    private _organisation: Identity;\n    /** Map location of the user */\n    private _location: ILocation;\n    /** List of users that this user can act on behalf */\n    private _delegates: string[];\n\n    constructor(protected service: BaseAPIService<User>, raw_data: HashMap = {}) {\n        super(service, raw_data);\n        this.first_name = raw_data.first_name;\n        this.last_name = raw_data.last_name;\n        this.windows_id = raw_data.email;\n        this.type = raw_data.visitor ? 'external' : raw_data.type || 'internal';\n        this.phone = raw_data.phone || raw_data.mobile;\n        this.business_unit = raw_data.business_unit || raw_data.department;\n        this._organisation = raw_data.organisation || { id: raw_data.organisation_id, name: raw_data.organisation_name };\n        this.external = this.type === 'external';\n        this._location = null;\n        this.staff_code = raw_data.staff_code || raw_data.fmno;\n        this._delegates = raw_data.delegates;\n\n        this.groups = raw_data.groups || [];\n        this.location = raw_data.location || raw_data.officeLocation || '';\n    }\n\n    /** Organisation the user is associated with */\n    public get organisation() {\n        return this._organisation;\n    }\n\n    /** Map location of the user */\n    public get last_location(): ILocation {\n        return this._location ? { ...(this._location) } : null;\n    }\n\n    /** List of users that this user can act on behalf */\n    public get delegates(): string[] {\n        return [...(this._delegates || [])];\n    }\n\n    /**\n     * Ask the server for the users current location\n     */\n    public locate(): Promise<ILocation> {\n        const service: any = this.service.parent || {};\n        return new Promise((resolve, reject) => {\n            if (service.Location) {\n                service.Location.show(this.id, { desk: this.email }).then(\n                    l => {\n                        this._location = l;\n                        resolve(l);\n                    },\n                    e => reject(e)\n                );\n            } else {\n                resolve(null);\n            }\n        });\n    }\n\n    /**\n     * Whether user is available during the given period\n     * @param start Start time as a unix timestamp with milliseconds\n     * @param end End time as a unix timestamp with milliseconds\n     */\n    public available(start?: number, end?: number): Promise<boolean> {\n        return new Promise<boolean>(resolve => {\n            this.service.query({ email: this.email, start, end })\n                .then(l => resolve(l && l.length > 0), _ => resolve(false));\n        });\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): User {\n        return new User(this.service, this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): User {\n        return new User(this.service, { ...this, id: null, email: null });\n    }\n\n    /**\n     * Initialise the form field metadata for the field\n     */\n    protected initialiseFormFields(): ADynamicFormField[] {\n        const edit = !!this.id;\n        const fields: ADynamicFormField[] = [\n            new ADynamicFormField({\n                key: 'name',\n                type: 'input',\n                value: this.name,\n                hide: true\n            }),\n            new ADynamicFormField({\n                key: 'first_name',\n                label: 'First Name',\n                type: 'input',\n                value: this.first_name,\n                required: true\n            }),\n            new ADynamicFormField({\n                key: 'last_name',\n                label: 'Last Name',\n                type: 'input',\n                value: this.last_name,\n                required: true\n            }),\n            new ADynamicFormField({\n                key: 'email',\n                label: 'Email',\n                type: 'input',\n                value: this.email,\n                required: true,\n                attributes: { type: 'email' }\n            })\n        ];\n        return fields;\n    }\n}\n","import { HashMap } from '../../../shared/utilities/types.utilities';\n\nimport * as faker from 'faker';\nimport { padZero, unique } from '../../../shared/utilities/general.utilities';\n\nlet USER_COUNT = 0;\n\nexport let USER_DOMAIN = 'acaprojects.com';\n\nconst USER_EMAILS: string[] = [];\n\n/**\n * Generate raw mock data for a user\n * @param id Forced ID for the mock\n * @param name Forced name for the user\n * @param external Whether user is external of the organisation\n * @param seed - faker seed\n */\nexport function generateMockUser(id?: string, name?: string, external?: boolean, seed?: number): HashMap {\n    if (seed) {\n        faker.seed(seed);\n    }\n    if (!id) {\n        id = `user-${USER_COUNT++}`;\n    }\n    if (!name) {\n        name = `${faker.name.firstName()} ${faker.name.lastName()}`;\n    }\n    if (external === undefined) {\n        external = !((Math.random() * 99999) % 2);\n    }\n    const organisation = external ? faker.company.companyName() : USER_DOMAIN.split('.')[0];\n    let delegates: string[] = [];\n    const delegate_count = Math.min(Math.random() * 4 + 1, USER_EMAILS.length);\n    for (let i = 0; i < delegate_count; i++) {\n        delegates.push(USER_EMAILS[Math.floor(Math.random() * USER_EMAILS.length)]);\n    }\n    delegates = unique(delegates);\n    const email = `${name.split(' ').join('.').toLowerCase()}@${external ? 'not-' : ''}${USER_DOMAIN}`;\n    USER_EMAILS.push(email);\n    return {\n        id,\n        name,\n        email,\n        phone: faker.phone.phoneNumber(),\n        visitor: external,\n        organisation: {\n            id: organisation.split(' ').join('.').toLowerCase(),\n            name: organisation\n        },\n        department: faker.commerce.department(),\n        staff_code: padZero(Math.floor(Math.random() * 99999), 5),\n        delegates\n    };\n}\n","import { Injectable } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Md5 } from 'ts-md5/dist/md5';\nimport { logout, authorise, invalidateToken, refreshAuthority } from '@placeos/ts-client';\n\nimport { BaseAPIService } from '../base.service';\nimport { User } from './user.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\n\nimport * as dayjs from 'dayjs';\n\nexport interface ILoginOptions {\n    /** URL to post login request to */\n    url?: string;\n    /** Whether form data is passed in the body of the request */\n    form?: boolean;\n    /** Custom headers to pass into the post request */\n    headers?: HashMap<string>;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UsersService extends BaseAPIService<User> {\n    constructor(protected uhttp: HttpClient, protected location: Location) {\n        super();\n        this._name = 'Users';\n        this._api_route = 'users';\n        this._compare = (a, b) => !a.id.localeCompare(b.id) || !a.email.localeCompare(b.email);\n        this.set('current_user', new User(this, { id: 'local_user', name: 'Local User' }));\n    }\n\n    /** Currently logged in user */\n    public get current(): User {\n        return this.get('current_user');\n    }\n\n    /**\n     * Sets the access token and expiry for the user\n     * @param token OAuth bearer token\n     * @param expiry Expiry epoch timestamp in ms\n     * @param reload Whether to reload the page after setting tokens\n     */\n    public setToken(token: string, expiry?: number, reload: boolean = true) {\n        if (!expiry) {\n            expiry = dayjs()\n                .add(7, 'd').endOf('d')\n                .valueOf();\n        }\n        const path = `${location.origin}${this.parent.setting('composer.route') || ''}/oauth-resp.html`;\n        const client_id = Md5.hashStr(path);\n        if (sessionStorage) {\n            sessionStorage.setItem(`${client_id}_access_token`, token);\n            sessionStorage.setItem(`${client_id}_expires_at`, `${expiry}`);\n        }\n        if (localStorage) {\n            localStorage.setItem(`${client_id}_access_token`, token);\n            localStorage.setItem(`${client_id}_expires_at`, `${expiry}`);\n        }\n        if (reload) {\n            this.location.go(this.location.path());\n        }\n        return path;\n    }\n\n    /**\n     * Post login request to the API\n     * @param query_params Key value pairs to pass into\n     * @param options Options for the login request\n     */\n    public login(query_params: HashMap, options: ILoginOptions = {}): Promise<void> {\n        if (!this._promises['login']) {\n            this._promises['login'] = new Promise<void>((resolve, reject) => {\n                this.set('status', 'loading');\n                let headers = new HttpHeaders();\n                if (!options || options.form !== false) {\n                    headers = headers.append('Content-Type', 'application/x-www-form-urlencoded');\n                }\n                const url = (options ? options.url : '') || '/auth/signin';\n                this.uhttp.post(url, query_params, { headers }).subscribe(\n                    _ => null,\n                    e => reject(e),\n                    () => {\n                        authorise();\n                        resolve();\n                    }\n                );\n            });\n        }\n        return this._promises['login'];\n    }\n\n    /**\n     * Logout of user and redirect to logout URL\n     */\n    public logout() {\n        logout();\n    }\n\n    /**\n     * Load initial data for the service\n     */\n    protected load(tries: number = 0): Promise<void> {\n        this.set('status', 'loading');\n        return new Promise<void>(resolve => {\n            if (tries > 4) {\n                this.set('status', 'invalid');\n                return resolve();\n            }\n            this.show('current', { engine: true }).then(\n                current_user => {\n                    this.set('status', 'available');\n                    this.set('check_initialised', current_user);\n                    this.clearTimeout('load');\n                    if (this.parent && this.parent.setting('app.user.grab_api_details')) {\n                        this.show(current_user.email).then(\n                            user => {\n                                this.set('current_user', user);\n                                resolve();\n                            },\n                            () => this.timeout('load', () => this.load(++tries).then(() => resolve()))\n                        );\n                    } else {\n                        resolve();\n                    }\n                },\n                () => this.timeout('load', () => this.load(++tries).then(() => resolve()))\n            );\n        });\n    }\n\n    /**\n     * Convert raw API data into a valid User Object\n     * @param raw_item Raw API data\n     */\n    protected process(raw_data: any): User {\n        return new User(this, raw_data);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport interface DebugLog {\n    /** Logging level of the message */\n    level: 'log' | 'info' | 'warn' | 'debug' | 'error';\n    /** Contents of the log message */\n    content: any;\n    /** Time that the message was logged */\n    time: number;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class DebugService {\n\n    private _old_log = console.log;\n    private _old_info = console.info;\n    private _old_warn = console.warn;\n    private _old_debug = console.debug;\n    private _old_error = console.error;\n\n    /** Store for list of logs */\n    private _logs = new BehaviorSubject<DebugLog[]>([]);\n    /** Observable for list of logs */\n    public readonly logs = this._logs.pipe(map(list => list.reverse()));\n\n    constructor() {\n        console.log = (...args: any[]) => {\n            this.newLogMessage('log', args);\n            this._old_log.call(this, ...args);\n        };\n\n        console.info = (...args: any[]) => {\n            this.newLogMessage('info', args);\n            this._old_info.call(this, ...args);\n        };\n\n        console.warn = (...args: any[]) => {\n            this.newLogMessage('warn', args);\n            this._old_warn.call(this, ...args);\n        };\n\n        console.debug = (...args: any[]) => {\n            this.newLogMessage('debug', args);\n            this._old_debug.call(this, ...args);\n        };\n\n        console.error = (...args: any[]) => {\n            this.newLogMessage('error', args);\n            this._old_error.call(this, ...args);\n        };\n    }\n\n    private newLogMessage(level, content) {\n        const logs = [...this._logs.getValue()];\n        logs.push({ level, content, time: new Date().valueOf() });\n        logs.sort((a, b) => a.time - b.time);\n        this._logs.next(logs);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\n\nimport { HashMap } from '../shared/utilities/types.utilities';\nimport { unique } from '../shared/utilities/general.utilities';\n\n/** List of keys that cannot be in a combination by themselves or with each other */\nconst INVALID_STANDALONE_KEYS: string[] = ['control', 'shift', 'alt', 'meta', 'os'];\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HotkeysService {\n    /** Map of subjects which store press states of keys */\n    private keydown_states: HashMap<BehaviorSubject<number>> = {};\n    /** Map of obserers for key state subjects */\n    private keydown_observers: HashMap<Observable<number>> = {};\n    /** List of keys at the end of a combination */\n    private combo_end: string[] = [];\n    /** List of registered hotkey combinations */\n    private registered_combos: string[][] = [];\n    /** Counter for the number of keydown events. Used for checking order of key presses */\n    private counter: number = 0;\n    /** Last key code to be pressed */\n    private last_down: string;\n\n    constructor() {\n        window.addEventListener('keydown', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            if (this.last_down !== code) {\n                if (!this.keydown_states[code]) {\n                    this.keydown_states[code] = new BehaviorSubject(null);\n                    this.keydown_observers[code] = this.keydown_states[code].asObservable();\n                }\n                this.keydown_states[code].next(this.counter++);\n                if (this.combo_end.indexOf(code) >= 0) {\n                    event.preventDefault();\n                }\n                this.last_down = code;\n            }\n        });\n\n        window.addEventListener('keyup', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            this.keydown_states[code].next(null);\n            if (this.last_down === code) {\n                this.last_down = null;\n            }\n        });\n    }\n\n    /**\n     * Listen to the given key combination\n     * @param combo Array of key codes to listen to or a hotkey string e.g. `Alt+Shift+KeyK`\n     * @param next Callback for combination presses\n     */\n    public listen(combo: string | string[], next: () => void): Subscription {\n        combo = (combo instanceof Array ? combo : combo.split('+'));\n        const combination: string[] = combo.map(i => this.mapKey(i.toLowerCase()));\n        if (combination.length > 0 && this.validCombination(combination)) {\n            this.registered_combos.push(combination);\n            const last_key = combination[combination.length - 1];\n            if (!this.keydown_states[last_key]) {\n                this.keydown_states[last_key] = new BehaviorSubject(null);\n                this.keydown_observers[last_key] = this.keydown_states[last_key].asObservable();\n            }\n            this.updateCombinationEndList();\n            return this.keydown_observers[last_key].subscribe((count) => {\n                if (count) {\n                    const presses: number[] = [];\n                    if (combination.length > 1) {\n                        // Check that keys are pressed\n                        for (const key of combination) {\n                            const state = this.keydown_states[key];\n                            presses.push(state ? state.getValue() || -1 : -1);\n                        }\n                        // Check that keys are pressed in the correct order\n                        for (let i = 0; i < combination.length - 1; i++) {\n                            if (presses[i] > presses[i + 1]) { return; }\n                        }\n                    }\n                    next();\n                }\n            });\n        }\n        return null;\n    }\n\n    /**\n     * Map key codes with multiple versions to simple form\n     * @param code Code to transform\n     */\n    private mapKey(code: string): string {\n        if (code.indexOf('alt') || code.indexOf('shift') || code.indexOf('control')) {\n            return code.replace('left', '').replace('right', '');\n        }\n        return code;\n    }\n\n    /**\n     * Update the list of the last keys in combinations to allow for prevent default actions on pre-existing hotkeys\n     */\n    private updateCombinationEndList(): void {\n        const key_list = [];\n        for (const combo of this.registered_combos) {\n            this.combo_end.push(combo[combo.length - 1]);\n        }\n        this.combo_end = unique(key_list);\n    }\n\n    /**\n     * Checks if the given hotkey combination is allowed and valid\n     * @param combo Array of key codes\n     */\n    private validCombination(combo: string[]): boolean {\n        let non_meta = 0;\n        for (const key of combo) {\n            if (INVALID_STANDALONE_KEYS.indexOf(key) < 0) {\n                non_meta++;\n            }\n        }\n        return non_meta > 0;\n    }\n}","import { Injectable } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { format, isSameDay } from 'date-fns';\n\nimport { VERSION } from 'src/environments/version';\nimport { DEFAULT_SETTINGS } from 'src/environments/settings';\nimport { BaseClass } from '../shared/base.class';\nimport { HashMap } from '../shared/utilities/types.utilities';\nimport { getItemWithKeys, log } from '../shared/utilities/general.utilities';\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SettingsService extends BaseClass {\n    /** Name of the application */\n    private _app_name = 'PlaceOS';\n    /** List of override settings in order of priority */\n    private _overrides = new BehaviorSubject<HashMap[]>([]);\n    /** Mapping of behaviour subjects */\n    private _subjects: HashMap<BehaviorSubject<any>> = {};\n    /** Mapping of observables */\n    private _observables: HashMap<Observable<any>> = {};\n\n    /**\n     * @hidden\n     */\n    public set overrides(value: HashMap[]) {\n        this._overrides.next(value);\n    }\n\n    /** Get observable for key */\n    public listen<T = any>(name: string): Observable<T> {\n        if (!this._observables[name]) {\n            this._subjects[name] = new BehaviorSubject<T>(null);\n            this._observables[name] = this._subjects[name].asObservable();\n        }\n        return this._observables[name];\n    }\n\n    /** Update observable value for key */\n    public post<T>(name: string, value: T): void {\n        if (!this._observables[name]) {\n            this._subjects[name] = new BehaviorSubject<T>(null);\n            this._observables[name] = this._subjects[name].asObservable();\n        }\n        this._subjects[name].next(value);\n    }\n\n    public value<T = any>(name: string): T {\n        return !this._observables[name] ? null : this._subjects[name].getValue();\n    }\n\n    /** Page title */\n    public get title() {\n        return this._title.getTitle();\n    }\n    public set title(value: string) {\n        this._title.setTitle(`${value} | ${this._app_name}`);\n    }\n\n    constructor(private _title: Title) {\n        super();\n        const now = new Date();\n        const time = new Date(VERSION.time);\n        const built = isSameDay(now, time)\n            ? `Today at ${format(time, 'h:mma')}`\n            : format(time, 'do MMM yyyy, h:mma');\n        log('CORE', `${VERSION.semver}`, null, 'debug', true);\n        log('APP', `${VERSION.hash} | Built: ${built}`, null, 'debug', true);\n        this.init();\n    }\n\n    /**\n     * Initialise the settings\n     */\n    public async init() {\n        if (this.get('debug')) {\n            window.debug = true;\n        }\n        if (this.get('app')?.name) {\n            this._app_name = this.get('app').name;\n        }\n        log('Settings', 'Successfully loaded settings');\n        this._initialised.next(true);\n    }\n\n    /** Whether settings service has initialised */\n    public get app_name() {\n        return this._app_name;\n    }\n\n    /**\n     * Get a setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public get(key: string): any {\n        const keys = key.split('.');\n        if (keys[0] !== 'app') {\n            return getItemWithKeys(keys, DEFAULT_SETTINGS);\n        }\n        const override_settings = this._overrides.getValue();\n        for (const override of override_settings) {\n            const value = getItemWithKeys(keys.slice(1), override);\n            if (value != null) { return value; }\n        }\n        return getItemWithKeys(keys, DEFAULT_SETTINGS);\n    }\n}\n","import { Subscription, BehaviorSubject } from \"rxjs\";\n\nexport class BaseClass {\n    /** Store for named timers */\n    protected _timers: { [name: string]: number } = {};\n    /** Store for named intervals */\n    protected _intervals: { [name: string]: number } = {};\n    /** Store for named subscription unsub callbacks */\n    protected _subscriptions: { [name: string]: (Subscription | (() => void)) } = {};\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n    /** Whether the object has been initialised */\n    public get is_initialised(): boolean {\n        return this._initialised.getValue();\n    }\n\n    /**\n     * Creates a named timer\n     * @param name Name of the timer\n     * @param fn Callback function for the timer\n     * @param delay Callback delay\n     */\n    protected timeout(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearTimeout(name);\n            this._timers[name] = <any>setTimeout(() => {\n                fn();\n                this._timers[name] = null;\n            }, delay);\n        } else {\n            throw new Error(\n                name ? 'Cannot create named timeout without a name' : 'Cannot create a timeout without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named timer\n     * @param name Timer name\n     */\n    protected clearTimeout(name: string) {\n        if (this._timers[name]) {\n            clearTimeout(this._timers[name]);\n            this._timers[name] = null;\n        }\n    }\n\n    /**\n     * Creates a named interval\n     * @param name Name of the interval\n     * @param fn Callback function for the interval\n     * @param delay Callback delay\n     */\n    protected interval(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearInterval(name);\n            this._intervals[name] = <any>setInterval(() => fn(), delay);\n        } else {\n            throw new Error(\n                name ? 'Cannot create named interval without a name' : 'Cannot create a interval without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named interval\n     * @param name Timer name\n     */\n    protected clearInterval(name: string) {\n        if (this._intervals[name]) {\n            clearInterval(this._intervals[name]);\n            this._intervals[name] = null;\n        }\n    }\n\n    /**\n     * Store named subscription\n     * @param name Name of the subscription\n     * @param unsub Unsubscribe callback or Subscription object\n     */\n    protected subscription(name: string, unsub: Subscription | (() => void)) {\n        this.unsub(name);\n        this._subscriptions[name] = unsub\n    }\n\n    /**\n     * Call unsubscribe callback with the given name\n     * @param name\n     */\n    protected unsub(name: string) {\n        if (this._subscriptions && this._subscriptions[name]) {\n            if (this._subscriptions[name] instanceof Subscription) {\n                (this._subscriptions[name] as Subscription).unsubscribe()\n            } else if (this._subscriptions[name] instanceof Function) {\n                (this._subscriptions[name] as any)();\n            }\n            this._subscriptions[name] = null;\n        }\n    }\n}\n","\nimport { Component, OnDestroy } from '@angular/core';\nimport { BaseClass } from './base.class';\n\n@Component({\n    selector: 'a-very-basic-component-base-that-should-not-be-used',\n    template: ``,\n    styles: [``]\n})\nexport class BaseComponent extends BaseClass implements OnDestroy {\n\n    public ngOnDestroy(): void {\n        // Clear local timers\n        for (const key in this._timers) {\n            if (this._timers.hasOwnProperty(key)) {\n                this.clearTimeout(key);\n            }\n        }\n        // Clear local intervals\n        for (const key in this._intervals) {\n            if (this._intervals.hasOwnProperty(key)) {\n                this.clearInterval(key);\n            }\n        }\n        // Clear local subscriptions\n        for (const key in this._subscriptions) {\n            if (this._subscriptions.hasOwnProperty(key)) {\n                this.unsub(key);\n            }\n        }\n    }\n}\n\n","<div *ngIf=\"group\">\n    <a-dropdown [items]=\"options\" [(ngModel)]=\"active_duration\" placeholder=\"Select duration...\" (ngModelChange)=\"setValue($event)\"></a-dropdown>\n</div>\n","import { Component } from '@angular/core';\nimport { FormGroup, AbstractControl } from '@angular/forms';\nimport { ADynamicFormField } from '@acaprojects/ngx-dynamic-forms';\n\nimport { BaseComponent } from '../../base.component';\nimport { getNextFreeBookingSlot } from '../../../services/data/bookings/booking.utilities';\nimport { humaniseDuration } from '../../utilities/general.utilities';\nimport { FORM_FIELDS } from '../../globals/form-fields';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'custom-duration-field',\n    templateUrl: './duration-field.component.html',\n    styleUrls: ['./duration-field.component.scss']\n})\nexport class CustomDurationFieldComponent extends BaseComponent  {\n    /** Form Control holding date data */\n    public date_control: AbstractControl;\n    /** Form Control holding space data */\n    public space_control: AbstractControl;\n    /** Step size for available times */\n    public block_size = 15;\n    /** Step size for available times */\n    public active_duration: { id: number, name: string };\n    /** List of available durations */\n    public options: { id: number, name: string }[] = [];\n\n    constructor(protected field: ADynamicFormField, public group: FormGroup) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        if (this.group) {\n            if (this.group.controls.date) {\n                this.date_control = this.group.controls.date;\n                this.subscription('date', this.date_control.valueChanges.subscribe(() => this.calculateAvailableDurations()));\n            }\n            if (this.group.controls.room || this.group.controls.space) {\n                this.space_control = this.group.controls.room || this.group.controls.space;\n                this.subscription('space', this.space_control.valueChanges.subscribe(() => this.calculateAvailableDurations()));\n            }\n            this.subscription('control', this.field.control.valueChanges.subscribe(() => this.updateDisplay()));\n        }\n        this.calculateAvailableDurations();\n    }\n\n    /**\n     * Update the active value displayed on the dropdown\n     */\n    public updateDisplay() {\n        if (this.options && this.options.length > 0) {\n            if (!this.active_duration) {\n                if (this.field.getValue()) {\n                    this.active_duration = this.options.find(i => i.id === this.field.getValue());\n                }\n                if (!this.active_duration) {\n                    this.active_duration = this.options[0];\n                    this.setValue(this.options[0]);\n                }\n            } else if (!this.options.find(i => i.id === this.active_duration.id)) {\n                let diff = 9999;\n                let new_opt = null;\n                for (const option of this.options) {\n                    if (Math.abs(option.id - this.active_duration.id) < diff) {\n                        diff = Math.abs(option.id - this.active_duration.id);\n                        new_opt = option;\n                    }\n                }\n                if (new_opt) {\n                    this.active_duration = new_opt;\n                    this.setValue(new_opt);\n                }\n            }\n        }\n    }\n\n    /**\n     * Generate a list of times selectable by the user\n     */\n    public calculateAvailableDurations() {\n        this.options = [];\n        let date = dayjs().startOf('m');\n        const max_duration = this.field.metadata ? this.field.metadata.max_duration || 600 : 600;\n        const min_duration = this.field.metadata ? this.field.metadata.min_duration || 30 : 30;\n        let end = date.add(max_duration, 'm');\n        if (this.space_control) {\n            // Get times based off available times in space\n            if (this.date_control && this.date_control.value) {\n                date = dayjs(this.date_control.value).startOf('m');\n            }\n            const slot = getNextFreeBookingSlot(this.space_control.value.bookings, date.valueOf(), min_duration);\n            if (slot) {\n                // Check if slot is after the active date\n                date = slot.start > date.valueOf() ? dayjs(slot.start).startOf('m') : date;\n            }\n            end = slot ? dayjs(slot.end).startOf('m') : dayjs(date).add(max_duration, 'm');\n        }\n        end = end.endOf('m');\n        // Get available durations between the date and end times\n        date = date.add(min_duration, 'm').startOf('m');\n        let duration = min_duration;\n        for (; date.isBefore(end, 's'); date = date.add(this.block_size, 'm')) {\n            this.options.push({ id: duration, name: humaniseDuration(duration) });\n            duration += 15;\n            if (this.options.length > Math.floor((max_duration - min_duration) / this.block_size)) {\n                break;\n            }\n        }\n        this.updateDisplay();\n    }\n\n    /**\n     * Update the value of the form field\n     * @param value New value\n     */\n    public setValue(block: { id: number, name: string }) {\n        this.field.setValue(block.id);\n    }\n}\n\nFORM_FIELDS.duration = CustomDurationFieldComponent;\n","<div *ngIf=\"group\">\n    <a-dropdown [items]=\"times\" [(ngModel)]=\"active_time\" placeholder=\"Select time...\" (ngModelChange)=\"setValue($event)\"></a-dropdown>\n</div>\n","import { Component } from '@angular/core';\nimport { FormGroup, AbstractControl } from '@angular/forms';\n\nimport { BaseComponent } from '../../base.component';\nimport { ADynamicFormField } from '@acaprojects/ngx-dynamic-forms';\nimport { getFreeBookingSlots } from '../../../services/data/bookings/booking.utilities';\n\nimport * as dayjs from 'dayjs';\nimport { FORM_FIELDS } from '../../globals/form-fields';\n\ninterface TimeSlot {\n    id: string;\n    name: string;\n    value?: number;\n}\n\n@Component({\n    selector: 'custom-time-field',\n    templateUrl: './time-field.component.html',\n    styleUrls: ['./time-field.component.scss']\n})\nexport class CustomTimeFieldComponent extends BaseComponent {\n    /** Form Control holding date data */\n    public date_control: AbstractControl;\n    /** Form Control holding space data */\n    public space_control: AbstractControl;\n    /** Step size for available times */\n    public block_size = 5;\n    /** Step size for available times */\n    public min_size = this.block_size * 6;\n    /** Step size for available times */\n    public active_time: TimeSlot;\n    /** List of selectable times */\n    public times: TimeSlot[];\n\n    constructor(protected field: ADynamicFormField, public group: FormGroup) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        if (this.group) {\n            if (this.group.controls.date) {\n                this.date_control = this.group.controls.date;\n                this.subscription('date', this.date_control.valueChanges.subscribe(() => this.updateDisplay(true)));\n            }\n            if (this.group.controls.room || this.group.controls.space) {\n                this.space_control = this.group.controls.room || this.group.controls.space;\n                this.subscription('space', this.space_control.valueChanges.subscribe(() => this.updateDisplay()));\n            }\n            this.subscription('control', this.field.control.valueChanges.subscribe(() => this.updateDisplay()));\n        }\n        this.calculateAvailableTimes();\n        if (this.date_control) {\n            const value = this.date_control.value;\n            if (!this.times.find(block => block.value === value)) {\n                this.setValue(this.times[0]);\n            }\n        }\n    }\n\n    /**\n     * Update the active value displayed on the dropdown\n     * @param from_ref Whether new value was generated from a reference field\n     */\n    public updateDisplay(from_ref: boolean = false) {\n        if (this.times) {\n            for (const time of this.times) {\n                if (this.field.getValue() === time.id) {\n                    this.active_time = time;\n                    break;\n                }\n            }\n            if (!this.field.getValue()) {\n                // Initialise with date time set on date control\n                if (this.date_control) {\n                    let date = dayjs(this.date_control.value);\n                    date = date.minute(Math.ceil(date.minute() / 5) * 5);\n                    const date_str = date.format('HH:mm');\n                    for (const time of this.times) {\n                        if (date.valueOf() - time.value <= 0) {\n                            this.active_time = time;\n                            this.setValue(time, true);\n                            break;\n                        }\n                    }\n                }\n                // Set to default value\n                if (!this.field.getValue()) {\n                    this.active_time = this.times[0];\n                    this.setValue(this.times[0], from_ref);\n                }\n            }\n        }\n    }\n\n    /**\n     * Generate a list of times selectable by the user\n     */\n    public calculateAvailableTimes() {\n        this.times = [];\n        let date = dayjs().startOf('m');\n        const book_ahead = this.field.metadata ? this.field.metadata.book_ahead || 660 : 660; // 11 hours default\n        const min_duration = this.field.metadata ? this.field.metadata.min_duration || 30 : 30;\n        if (this.space_control) {\n            // Get times based off available times in space\n            const slots = getFreeBookingSlots(this.space_control.value.bookings, min_duration);\n            date = date.minute(Math.ceil(date.minute() / this.block_size) * this.block_size);\n            const end = dayjs(date)\n                .add(book_ahead, 'm')\n                .endOf('m');\n            for (; date.isBefore(end, 's'); date = date.add(this.block_size, 'm')) {\n                const value = date.valueOf();\n                if (slots.find(i => i.start <= value && value < i.end && dayjs(i.end).diff(date, 'm') >= min_duration)) {\n                    this.times.push({ id: date.format('HH:mm'), name: date.format('h:mm A'), value: date.valueOf() });\n                }\n            }\n        } else {\n            // Get times from now\n            if (date.minute() % this.block_size !== 0) {\n                this.times.push({ id: date.format('HH:mm'), name: date.format('h:mm A') });\n            }\n            date = date.minute(Math.ceil(date.minute() / this.block_size) * this.block_size);\n            const end = dayjs(date).add(book_ahead, 'm');\n            for (; date.isBefore(end); date = date.add(this.block_size, 'm')) {\n                this.times.push({ id: date.format('HH:mm'), name: date.format('h:mm A'), value: date.valueOf() });\n            }\n        }\n        this.updateDisplay();\n    }\n\n    /**\n     * Update the value of the form field\n     * @param value New value\n     * @param from_ref Whether new value was generated from a reference field\n     */\n    public setValue(slot: TimeSlot, from_ref: boolean = false) {\n        this.field.setValue(slot.id);\n        if (this.date_control && !from_ref) {\n            const time = dayjs(slot.value);\n            const date = dayjs(this.date_control.value)\n                .hour(time.hour())\n                .minute(time.minute())\n                .startOf('m');\n            this.date_control.setValue(date.valueOf());\n        }\n    }\n}\n\nFORM_FIELDS.time = CustomTimeFieldComponent;\n","<div class=\"user-search\" widget>\n    <div class=\"search\" a-tooltip [show]=\"show && search_str && filtered_list.length > 0\" (showChange)=\"show = $event\" [content]=\"list\">\n        <div class=\"searchbar\">\n            <input type=\"text\" [(ngModel)]=\"search_str\" (ngModelChange)=\"search($event)\" (blur)=\"reset()\" placeholder=\"Search for host...\" />\n            <div class=\"spinner\" *ngIf=\"searching\">\n                <a-spinner circle-ring color=\"#000\"></a-spinner>\n            </div>\n        </div>\n        <ng-template #list>\n            <div class=\"user-list\">\n                <div class=\"item\" *ngFor=\"let item of filtered_list\" (mouseup)=\"select(item)\" (touchend)=\"select(item)\" feedback>\n                    <div class=\"name\" [innerHTML]=\"item.match_name || item.name\"></div>\n                    <div class=\"email\" [innerHTML]=\"item.match_email || item.email\"></div>\n                </div>\n            </div>\n        </ng-template>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Subject, Observable, of } from 'rxjs';\nimport { switchMap, debounceTime, distinctUntilChanged, map, catchError } from 'rxjs/operators';\n\nimport { ADynamicFormField } from '@acaprojects/ngx-dynamic-forms';\n\nimport { BaseComponent } from '../../base.component';\nimport { ApplicationService } from '../../../services/app.service';\nimport { User } from '../../../services/data/users/user.class';\nimport { filterList, matchToHighlight } from '../../utilities/general.utilities';\nimport { FORM_FIELDS } from '../../globals/form-fields';\n\n@Component({\n    selector: 'custom-user-search-field',\n    templateUrl: './user-search-field.component.html',\n    styleUrls: ['./user-search-field.component.scss']\n})\nexport class CustomUserSearchFieldComponent extends BaseComponent implements OnInit {\n    /** List of users from an API search */\n    public filtered_list: User[] = [];\n    /** List of users from an API search */\n    public search_results$: Observable<User[]>;\n    /** Whether to show list tooltip */\n    public show: boolean;\n    /** Search input field value */\n    public search_str: string;\n    /** Whether a query is in progress */\n    public searching: boolean;\n    /** Subject holding the value of the search */\n    private search$ = new Subject<string>();\n\n    constructor(protected field: ADynamicFormField, protected group: FormGroup, private service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        if (this.group) {\n            if (this.field.references && this.field.references.length > 0) {\n                const control = this.group.controls[this.field.references[0]];\n                if (control) {\n                    this.subscription('reference', control.valueChanges.subscribe(() => this.updateDisplay()));\n                }\n            }\n            this.subscription('control', this.field.control.valueChanges.subscribe(() => this.updateDisplay()));\n        }\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(400),\n            distinctUntilChanged(),\n            switchMap(query => {\n                this.searching = true;\n                this.show = true;\n                return query.length >= 3 ? (this.service.Users.query({ q: query.slice(0, 3), cache: 60 * 1000 }) as Promise<User[]>) : Promise.resolve([]);\n            }),\n            catchError((err) => of([])),\n            map(list => {\n                this.searching = false;\n                return filterList(this.search_str, list, ['name', 'email']);\n            })\n        );\n        // Process API results\n        this.search_results$.subscribe(list => {\n            this.filtered_list = list;\n            this.filtered_list.forEach((i: any) => {\n                i.match_name = matchToHighlight(i.match_name);\n                i.match_email = matchToHighlight(i.match_email);\n                return i;\n            });\n        });\n    }\n\n    /**\n     * Search for a user that matches the filter string\n     * @param filter String to filter users on\n     */\n    public search(filter: string) {\n        this.search_str = filter;\n        this.search$.next(filter);\n    }\n\n    /**\n     * Update input display string\n     */\n    public updateDisplay() {\n        const value = this.field.control.value;\n        this.search_str = value ? value.name : '';\n    }\n\n    /**\n     * Reset the display value for the search input\n     */\n    public reset() {\n        this.timeout('reset', () => {\n            const value = this.field.control.value;\n            this.search_str = value ? value.name : '';\n            this.show = false;\n        });\n    }\n\n    /**\n     * Set the active user\n     * @param user New active user\n     */\n    public select(user: User) {\n        if (user) {\n            this.field.setValue(user);\n        }\n        this.timeout('hide', () => {\n        this.show = false;\n        }, 100);\n    }\n}\n\nFORM_FIELDS.host = CustomUserSearchFieldComponent;\n","import {\n    Directive,\n    Input,\n    SimpleChanges,\n    OnInit,\n    OnChanges,\n    OnDestroy,\n    ElementRef,\n    Renderer2,\n    EventEmitter,\n    Output\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { onlineState, authority, getModule } from '@placeos/ts-client';\n\n@Directive({\n    selector: 'i[bind], [binding], co-bind'\n})\nexport class BindingDirective<T = any> implements OnInit, OnChanges, OnDestroy {\n    /** ID of the system to bind */\n    @Input() public sys: string;\n    /** Class name of the module to bind */\n    @Input() public mod: string;\n    /** Index of the system to bind */\n    @Input() public index = 1;\n    /** Status variable to bind to */\n    @Input() public bind: string;\n    /** Method to execute */\n    @Input() public exec: string;\n    /** Event to listen for on the parent */\n    @Input('onEvent') public on_event: string;\n    /** ID of the system to bind to */\n    @Input() public params: any[] = [];\n    /** Current value of the binding */\n    @Input() public model: T;\n    /** Emitter for changes to the value of the binding */\n    @Output() public modelChange = new EventEmitter<T>();\n\n    /** Listener for event on host element */\n    private event_listener: () => void;\n    /** Listener for changes to the binding value */\n    private listener: Subscription;\n    /** Listener for initialisation state of composer */\n    private init_listener: Subscription;\n    /** Callback to unbind to the status variable */\n    private unbind: () => void;\n\n    constructor(\n        private _element: ElementRef<HTMLElement>,\n        private _renderer: Renderer2\n    ) {}\n\n    public ngOnInit(): void {\n        this.init_listener = onlineState().subscribe(init => {\n            if (init) {\n                this.bindVariable();\n                if (this.init_listener) {\n                    this.init_listener.unsubscribe();\n                    this.init_listener = null;\n                }\n            }\n        });\n    }\n\n    public ngOnDestroy(): void {\n        if (this.listener) {\n            this.listener.unsubscribe();\n            this.listener = null;\n        }\n        if (this.unbind) {\n            this.unbind();\n            this.unbind = null;\n        }\n        if (this.event_listener) {\n            this.event_listener();\n            this.event_listener = null;\n        }\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.sys || changes.mod || changes.bind) {\n            this.ngOnDestroy();\n            this.bindVariable();\n        }\n        if (changes.on_event && this.on_event) {\n            if (this.event_listener) {\n                this.event_listener();\n                this.event_listener = null;\n            }\n            this.event_listener = this._renderer.listen(\n                this._element.nativeElement,\n                this.on_event,\n                () => this.execute()\n            );\n        }\n    }\n\n    /** Bind to set status variable */\n    private bindVariable() {\n        if (authority() && this.bind && this.sys && this.mod) {\n            const module = getModule(this.sys, this.mod, this.index);\n            const binding = module.binding(this.bind);\n            this.unbind = binding.bind();\n            this.listener = binding.listen().subscribe(value => setTimeout(() => {\n                this.model = value;\n                this.modelChange.emit(this.model);\n            }, 10));\n        }\n    }\n\n    /** Excute the set method on the module */\n    private execute() {\n        if (authority() && this.exec && this.sys && this.mod) {\n            const module = getModule(this.sys, this.mod, this.index);\n            module.execute(this.exec, this.params).then(result => {\n                // Emit exec result if not bound to status variable\n                if (!this.bind) {\n                    this.model = result;\n                    this.modelChange.emit(this.model);\n                }\n            });\n        }\n    }\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: T) {\n        this.model = value;\n        this.modelChange.emit(this.model);\n        if (this.exec) {\n            this.execute();\n        }\n    }\n}\n","\nimport * as dayjs from 'dayjs';\n\n/** Version number of the application */\nexport const version = 'local-dev';\n/** Version number of the base application */\nexport const core_version = '1.0.0';\n/** Build time of the application */\nexport const build = dayjs();\n","\nimport { Type } from '@angular/core';\n\n/** List of form field contents mapped to corresponding keys */\nexport const FORM_FIELDS: { [id: string]: Type<any> } = {};","\nimport { IOverlayConfig } from \"@acaprojects/ngx-overlays\";\n\n/** List of Overlays to register on application initialisation */\nexport const OVERLAY_REGISTER: { id: string; config: IOverlayConfig }[] = [];\n","\nimport './systems.mock';\n","import { MockHttpRequestHandlerOptions, registerMockEndpoint, registerSystem } from '@placeos/ts-client';\n\nimport { HashMap } from '../utilities/types.utilities';\nimport { generateMockSpace } from '../../services/data/spaces/space.utilities';\nimport { setMockBookingStartDatetime } from '../../services/data/bookings/booking.utilities';\nimport { generateMockUser } from '../../services/data/users/user.utilities';\n\nimport * as dayjs from 'dayjs';\n\ninterface IMockEngineSystem {\n    id?: string;\n    name?: string;\n\n    [module: string]: HashMap[] | string;\n}\n\nexport interface IBookingPanelBindings {\n    /** Whether user input is enabled */\n    touch_enabled: boolean;\n    /** Number of seconds before a meeting can be started, being truthy enables start/stop and auto-cancellations */\n    timeout?: number;\n    /** Number of seconds after the start of a meeting when it is auto-cancelled, overrides `timeout` value */\n    cancel_timeout?: number;\n    /** Whether to display hearing assistance UI elements */\n    has_accessability?: boolean;\n    /** URL to embed into the control modal when opened */\n    control_url?: string;\n    /** Whether to display catering UI elements */\n    has_catering?: boolean;\n    /** Whether to hide booking details(title and host) */\n    hide_details?: boolean;\n    /** Whether to hide the title of the displayed bookings */\n    hide_title?: boolean;\n    /** Whether to hide user(host) details */\n    hide_user?: boolean;\n    /** Whether to hide timeline availability */\n    hide_availability?: boolean;\n    /** Whether to disable booking from the UI */\n    booking_disabled?: boolean;\n    /** Whether booking future meetings are allowed */\n    no_timeline_bookings?: boolean;\n    /** Time before the booking end with which the current booking is endable in ms from UTC epoch */\n    is_endable?: number;\n    /** Whether to automatically ask user starting the current meeting */\n    ask_start?: boolean;\n    /** Whether to automatically ask user about ending the active meeting */\n    ask_end?: boolean;\n    /** Default meeting title if the displayed meeting doesn't have one */\n    default_title?: string;\n    /** Hide all meeting related details */\n    hide_all?: boolean;\n    /** Title of the active space */\n    title?: string;\n    /** Description of the active space */\n    description?: string;\n    /** URL of an icon image to display on the UI */\n    icon?: string;\n    /** Whether the space status is displayed on the right */\n    flip_status?: boolean;\n    /** Whether bookings can be automatically cancelled once they expire */\n    can_cancel?: boolean;\n    /** Minimum bookable duration in minutes */\n    min_duration?: number;\n    /** Maximum bookable duration in minutes */\n    max_duration?: number;\n    /** Start time of the business day with format `HH:mm` */\n    business_start?: string;\n    /** End time of the business day with format `HH:mm` */\n    business_end?: string;\n\n}\n\nconst LETTERS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('');\nconst NUMBERS = '0123456789'.split('');\n\nlet index = 0;\n\nconst SPACE_LIST: any[] = [];\n\nconst IMAGES: string[] = ['large_down', 'large_up', 'small_down', 'small_up'];\n\n/**\n * Create mock engine booking module with appropriate bookings and space data\n */\nfunction createSystem(): IMockEngineSystem {\n    const id = `sys-${LETTERS[Math.floor(index / NUMBERS.length)]}${NUMBERS[(index++) % NUMBERS.length]}`;\n    setMockBookingStartDatetime(dayjs().minute(-50).valueOf());\n    const space = generateMockSpace({ id });\n    SPACE_LIST.push(space);\n    const bindings: IBookingPanelBindings = {\n        touch_enabled: true,\n        timeout: 300,\n        cancel_timeout: 600,\n        has_catering: true,\n        control_url: 'https://aca.im/demo/aca/control/',\n        icon: `/assets/img/${IMAGES[Math.floor(Math.random() * IMAGES.length)]}.png`\n    };\n    const system = {\n        id, name: space.name,\n        Bookings: []\n    };\n    system.Bookings.push({\n        ...bindings,\n        room_name: space.name,\n        today: space.bookings,\n        reload: dayjs().add(1, 'h').unix(),\n        $start_meeting: (time: number) => {\n            system.Bookings[0].last_meeting_started = time;\n        },\n        $cancel_meeting: (time: number, reason: string) => {\n            const list = system.Bookings[0].today;\n            system.Bookings[0].today = list.filter(i => i.date !== time);\n        },\n        $waiter_call: () => {\n            console.log(`[MOCK][${id}] Waiter called...`);\n        }\n    });\n    return system;\n}\n\n\nexport const MOCK_SYSTEMS = Array(10).fill(0).map(i => createSystem());\n\nfor (const system of MOCK_SYSTEMS) {\n    registerSystem(system.id, system as any);\n}\n\n// Add mock data for API endpoints\nconst USER_LIST = Array(1000).fill(0).map(i => generateMockUser());\n\nconst handlers: MockHttpRequestHandlerOptions[] = [\n    {\n        path: '/api/engine/v2/systems',\n        metadata: null,\n        method: 'GET',\n        callback: _ => ({ total: 10, results: MOCK_SYSTEMS })\n    },\n    {\n        path: '/api/staff/rooms',\n        metadata: null,\n        method: 'GET',\n        callback: _ => SPACE_LIST\n    },\n    {\n        path: '/api/staff/users',\n        metadata: null,\n        method: 'GET',\n        callback: _ => USER_LIST\n    },\n    {\n        path: '/api/engine/v2/users/current',\n        metadata: null,\n        method: 'GET',\n        callback: _ => USER_LIST[0]\n    },\n    {\n        path: '/api/engine/v2/zones',\n        metadata: null,\n        method: 'GET',\n        callback: _ => ({ total: 1, results: [{ id: 'zone_org-1' }] })\n    }\n];\n\nfor (const handler of handlers) {\n    registerMockEndpoint(handler);\n}\n","\nimport { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { ADropdownsModule } from '@acaprojects/ngx-dropdown';\nimport { ASpinnerModule } from '@acaprojects/ngx-spinners';\nimport { AButtonsModule } from '@acaprojects/ngx-buttons';\nimport { APipesModule } from '@acaprojects/ngx-pipes';\nimport { AOverlayModule } from '@acaprojects/ngx-overlays';\nimport { ADynamicFormsModule } from '@acaprojects/ngx-dynamic-forms';\nimport { ACustomEventsModule } from '@acaprojects/ngx-custom-events';\n\nimport { BaseComponent } from './base.component';\nimport { CustomUserSearchFieldComponent } from './components/user-search-field/user-search-field.component';\nimport { CustomTimeFieldComponent } from './components/time-field/time-field.component';\nimport { CustomDurationFieldComponent } from './components/duration-field/duration-field.component';\nimport { BindingDirective } from './directives/binding/binding.directive';\n\nconst COMPONENTS: Type<any>[] = [\n    BaseComponent,\n    BindingDirective\n];\n\nconst ENTRY_COMPONENT: Type<any>[] = [\n    CustomUserSearchFieldComponent,\n    CustomTimeFieldComponent,\n    CustomDurationFieldComponent\n]\n\n@NgModule({\n    declarations: [\n        ...COMPONENTS,\n        ...ENTRY_COMPONENT,\n    ],\n    imports: [\n        CommonModule,\n        ADropdownsModule,\n        ASpinnerModule,\n        AButtonsModule,\n        AOverlayModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ACustomEventsModule,\n        ADynamicFormsModule\n    ],\n    exports: [\n        ADropdownsModule,\n        ASpinnerModule,\n        AButtonsModule,\n        APipesModule,\n        AOverlayModule,\n        ACustomEventsModule,\n        ADynamicFormsModule,\n        ...COMPONENTS,\n        ...ENTRY_COMPONENT\n    ],\n    entryComponents: [\n        ...ENTRY_COMPONENT\n    ]\n})\nexport class SharedContentModule {}\n","import { HashMap } from \"./types.utilities\";\n\n/**\n * Convert map into a query string\n * @param map Key value pairs to convert\n */\nexport function toQueryString(map: HashMap) {\n    let str = '';\n    if (map) {\n        for (const key in map) {\n            if (map.hasOwnProperty(key) && map[key] !== undefined && map[key] !== null) {\n                str += `${(str ? '&' : '')}${key}=${map[key]}`;\n            }\n        }\n    }\n    return str;\n}\n","\nimport { humaniseDuration } from './general.utilities';\n\nimport { User } from '../../services/data/users/user.class';\nimport { Space } from '../../services/data/spaces/space.class';\n\nimport * as dayjs from 'dayjs';\n\n// attendees: FormFormatters.attendees(user),\n// date: FormFormatters.date,\n// room: FormFormatters.space,\n// recurrence: FormFormatters.recurrence\n\n/**\n * Get function to create formatted string for a list of users with a host\n * @param host Host user\n */\nexport function formatAttendeesWithHost(host: User): (_: User[]) => string {\n    return (l) => formatAttendees(l, host);\n}\n\n/**\n * Create formatted string from a list of users\n * @param list List of users\n * @param host Owner of the list of users\n */\nexport function formatAttendees(list: User[], host?: User) {\n    let attendee_str: string = '';\n    if (list && list.length > 0) {\n        const users = [...list];\n        if (host) {\n            const result = users.find(a => a.email === host.email);\n            if (result) {\n                users.splice(users.indexOf(result), 1);\n            }\n        }\n        const length = users.length + (host ? 1 : 0);\n        attendee_str = `${length} Attendee${length === 1 ? '' : 's'}; ${host ? host.name : ''}`;\n        for (const item of users) {\n            if (attendee_str) {\n                attendee_str += ', ';\n            }\n            attendee_str += item.name;\n        }\n        attendee_str = attendee_str.replace('; ,', ';');\n    }\n    return attendee_str;\n}\n\n/**\n * Create date formatted string for given date\n * @param date Date to format\n */\nexport function formatDate(date: number) {\n    return dayjs(date).format('DD MMMM YYYY');\n}\n\n/**\n * Create time formatted string for given date\n * @param date Date to format\n */\nexport function formatTime(date: number) {\n    return dayjs(date).format('h:mm A');\n}\n\n/**\n * Create formatted string for a period of given duration\n * @param duration Period duration in minutes\n */\nexport function formatPeriodWithDuration(duration: number) {\n    return (t) => formatPeriod(t, duration);\n}\n\n/**\n * Create formatted string for a period of given duration\n * @param timestamp Start hours and minutes of the period in the format `HH:mm`\n * @param duration Period duration in minutes\n */\nexport function formatPeriod(timestamp: string, duration: number = 60) {\n    const parts = timestamp.split(':');\n    const date = dayjs().hour(+parts[0]).minute(+parts[1]);\n    return `${date.format('h:mm A')} - ${date.add(duration, 'm').format('h:mm A')} (${humaniseDuration(duration)})`;\n}\n\n/**\n * Create formatted human readable string for a given duration\n * @param duration Duration in minutes\n */\nexport function formatDuration(duration: number) {\n    return humaniseDuration(duration);\n}\n\n/** Human readable names of applicable recurrence periods */\nexport const RECURRENCE_PERIODS: string[] = ['None', 'Daily', 'Weekly', 'Monthly', 'Yearly'];\n\n/**\n * Create human readable string for recurrence metadata\n * @param value\n */\nexport function formatRecurrence(value: { period: string | number, end: number }) {\n    if (!value || !value.period || value.period as any >= RECURRENCE_PERIODS.length) {\n        return 'No recurrence';\n    }\n    const period = typeof value.period === 'string' ? value.period : RECURRENCE_PERIODS[value.period];\n    const end = value.end ? `until ${dayjs(value.end).format('DD MMM YYYY')}` : 'forever';\n    return `${period} ${end}`;\n}\n\n/**\n * Create human readable string for a room or list of rooms\n * @param list List of spaces/rooms\n */\nexport function formatSpaces(list: Space | Space[]) {\n    if (!list || (list instanceof Array && list.length <= 0)) {\n        return 'No selected space';\n    }\n    if (list instanceof Array) {\n        return list.length === 1 ? list[0].name : `${list.length} Space${list.length !== 1 ? 's' : ''}`;\n    } else {\n        const capacity = list.capacity ? '(' + list.capacity + ' ' + (list.capacity === 1 ? 'person' : 'people') + ')' : '';\n        return `${list.name} ${capacity}`;\n    }\n}\n","import { HashMap } from './types.utilities';\n\nimport * as dayjs from 'dayjs';\n\n/** Available console output streams. */\nexport type ConsoleStream = 'debug' | 'warn' | 'log' | 'error' | 'info';\n\n/**\n * Log data to the browser console\n * @param type Type of message\n * @param msg Message body\n * @param args array of argments to log to the console\n * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\n * @param force Whether to force message to be emitted when debug is disabled\n */\nexport function log(\n    type: string,\n    msg: string,\n    args?: any,\n    stream: ConsoleStream = 'debug',\n    force: boolean = false,\n    app_name: string = 'STAFF'\n) {\n    if (window.debug || force) {\n        const colors: string[] = ['color: #E91E63', 'color: #3F51B5', 'color: default'];\n        if (args) {\n            console[stream](`%c[${app_name}]%c[${type}] %c${msg}`, ...colors, args);\n        } else {\n            console[stream](`%c[${app_name}]%c[${type}] %c${msg}`, ...colors);\n        }\n    }\n}\n\nconst seed = xmur3('PlaceOS');\nconst rand = sfc32(0x9e3779b9, 0x243f6a88, 0xb7e15162, seed());\n\nexport function predictableRandomInt(ceil: number = 100, floor: number = 0) {\n    return Math.floor(rand() * (ceil - floor)) + floor;\n}\n\nexport function getItemWithKeys(keys: string[], map: HashMap) {\n    const key = keys.shift();\n    if (map[key]) {\n        return keys.length > 0 ? getItemWithKeys(keys, map[key]) : map[key];\n    }\n    return null;\n}\n\n/**\n * Checks whether the platform is a mobile device.\n */\nexport function isMobileDevice(): boolean {\n    const r = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i;\n    return !!navigator.userAgent.match(r);\n}\n\n/**\n * Checks whether the browser is Mobile Safari.\n */\nexport function isMobileSafari(): boolean {\n    const agent = navigator.userAgent;\n    return !!(agent.match(/iPhone|iPad|iPod/) && agent.match(/AppleWebKit/) && !agent.match('CriOS'));\n}\n\n/**\n * Checks whether the browser is Android Chrome.\n */\nexport function isAndroidChrome(): boolean {\n    const agent = navigator.userAgent;\n    return !!(agent.match(/Android/) && agent.match(/Chrome/));\n}\n\n/**\n * Generate string representation of a number with zeros padding the length\n * @param value Number to pad with zeros\n * @param length Length of the resulting string\n */\nexport function padZero(value: number, length: number): string {\n    let str = value.toString();\n    while (str.length < length) {\n        str = '0' + str;\n    }\n    return str;\n}\n\n/**\n * Remove duplicates from the given array\n * @param array List of items to remove duplicates from\n * @param key Key on array objects to compare for uniqueness\n */\nexport function unique(array: any[], key: string = '') {\n    return array.filter((el, pos, arr) =>\n        arr.indexOf(key ? arr.find(i => i[key] === el[key]) : arr.find(i => i === el)) === pos\n    );\n}\n\n/**\n * Convert duration to human readable string\n * @param duration Duration in minutes\n * @param short Whether to use short form of duration words e.g. hours as h\n */\nexport function humaniseDuration(duration: number, short: boolean = false) {\n    if (!duration || duration < 0) { return ''; }\n    const h = Math.floor(duration / 60);\n    let d = `${h >= 1 ? (h + (short ? 'h' : (' hour' + (h === 1 ? '' : 's')))) : ''}`;\n    if (duration % 60 !== 0) {\n        if (d) { d += short ? ' ' : ', '; }\n        const m = duration % 60;\n        d += `${m >= 1 ? (m + (short ? 'm' : (' minute' + (m === 1 ? '' : 's')))) : ''}`;\n    }\n    return d;\n}\n\n/**\n * Get a filtered list of items\n * @param filter Value to filter on\n * @param items List of results to filter\n * @param fields Fields to check for matches on each item\n */\nexport function filterList<T = HashMap>(filter: string, items?: T[], fields: string[] = ['id']): T[] {\n    let results: any[];\n    // Tokenise filter string\n    const filters = (filter || '').toLowerCase().split(' ');\n    const list = {};\n    for (const f of filters) {\n        if (f) {\n            if (!list[f]) { list[f] = 0; }\n            list[f]++;\n        }\n    }\n    // Group similar tokens\n    const parts = [];\n    for (const f in list) {\n        if (list.hasOwnProperty(f)) {\n            parts.push({ word: f, count: list[f], regex: new RegExp(f, 'gi') });\n        }\n    }\n    parts.sort((a, b) => b.word.length - a.word.length || a.word.localeCompare(b.word));\n    const item_list = JSON.parse(JSON.stringify(items || []));\n    if (filter) {\n        results = item_list.filter(\n            (item) => {\n                let match_count = 0;\n                item.match_index = 65535;\n                item.match = '';\n                const field_list = {};\n                // Initialise field match variables\n                for (const f of fields) {\n                    field_list[f] = {\n                        value: (item[f] || '').toLowerCase(),\n                        index: 65536,\n                        matched: 0\n                    };\n                }\n                // Search for matches with the tokenised filter string\n                for (const i of parts) {\n                    if (i.word) {\n                        // Check fields for matches\n                        for (const f of fields) {\n                            const field = field_list[f];\n                            const index = field.value.indexOf(i.word);\n                            field.index = index < field.index ? index : field.index;\n                            field.matches = (field.value.match(i.regex) || []).length;\n                            field.value = field.value.replace(i.regex, ' ');\n                        }\n                        // Update token match count\n                        for (const f of fields) {\n                            const field = field_list[f];\n                            if (field.matches >= i.count) {\n                                match_count++;\n                                // Update field matches\n                                let changed = 0;\n                                const tokens = (item[`match_${f}`] || item[f] || '').split(' ');\n                                for (const k of tokens) {\n                                    if (changed >= i.count) {\n                                        break;\n                                    }\n                                    if (k.toLowerCase().indexOf(i.word) >= 0 && k.indexOf('`') < 0) {\n                                        tokens[tokens.indexOf(k)] = k.replace(i.regex, '`$&`');\n                                        changed++;\n                                    }\n                                }\n                                item[`match_${f}`] = tokens.join(' ');\n                                break;\n                            }\n                        }\n                    }\n                }\n                // Get field with the most relevent match\n                for (const f of fields) {\n                    const field = field_list[f];\n                    if (field.index < item.match_index && field.index >= 0) {\n                        item.match_index = field.index;\n                        item.match = f;\n                    }\n                }\n                return item.match_index >= 0 && item.match && (match_count >= parts.length);\n            });\n    } else {\n        results = item_list;\n    }\n    // Sort by order of relevence then name\n    results.sort((a, b) => {\n        const diff = a.match_index - b.match_index;\n        return diff === 0 ? a.name.localeCompare(b.name) : diff;\n    });\n    return results;\n}\n\n/**\n * Convert a match string from `filterList` to renderable HTML\n * @param str Match string to change\n */\nexport function matchToHighlight(str: string): string {\n    if (str) {\n        str = str.replace(/\\`[a-zA-Z0-9\\@\\.\\_]*\\`/g, '<span class=\"highlight\">$&</span>');\n        str = str.replace(/\\`/g, '');\n    }\n    return str;\n}\n\n/**\n * Convert time string to ms from UTC epoch for today\n * @param time Time string in the format `HH:mm`\n */\nexport function timeToDate(time: string): number {\n    const parts = (time || '').split(':');\n    const date = dayjs().hour(+parts[0]).minute(+parts[1]).startOf('m');\n    return date.valueOf();\n}\n\n/* istanbul ignore next */\n/**\n * Flatten nested array\n * @param an_array Array to flatten\n */\nexport function flatten<T = any>(an_array: (T[] | T)[]): T[] {\n    const stack: any[] = [...an_array];\n    const res = [];\n    while (stack.length) {\n        // pop value from stack\n        const next: T[] | T = stack.pop();\n        if (next instanceof Array) {\n            // push back array items, won't modify the original input\n            stack.push(...next);\n        } else {\n            res.push(next);\n        }\n    }\n    // reverse to restore input order\n    return res.reverse();\n}\n\n// https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript\nfunction xmur3(str) {\n    for (var i = 0, h = 1779033703 ^ str.length; i < str.length; i++)\n        (h = Math.imul(h ^ str.charCodeAt(i), 3432918353)), (h = (h << 13) | (h >>> 19));\n    return function () {\n        h = Math.imul(h ^ (h >>> 16), 2246822507);\n        h = Math.imul(h ^ (h >>> 13), 3266489909);\n        return (h ^= h >>> 16) >>> 0;\n    };\n}\n\nfunction sfc32(a, b, c, d) {\n    return function () {\n        a >>>= 0;\n        b >>>= 0;\n        c >>>= 0;\n        d >>>= 0;\n        var t = (a + b) | 0;\n        a = b ^ (b >>> 9);\n        b = (c + (c << 3)) | 0;\n        c = (c << 21) | (c >>> 11);\n        d = (d + 1) | 0;\n        t = (t + d) | 0;\n        c = (c + t) | 0;\n        return (t >>> 0) / 4294967296;\n    };\n}\n","import { AbstractControl } from '@angular/forms';\n\nimport { User } from '../../services/data/users/user.class';\n\nimport * as dayjs from 'dayjs';\n\nconst HAS_ERROR = true;\n\n/**\n * Check that control value is a date that is the same or after from date\n * @param control Angular form control\n * @param is_from Comparison date(ms from UTC epoch). Defaults to the current time\n */\nexport function validateDate(control: AbstractControl, is_from: number = dayjs().valueOf()) {\n    const from = dayjs(is_from);\n    const date = dayjs(control.value || undefined);\n    return date.isBefore(from, 'd') ? { date: HAS_ERROR, message: 'Booking needs to be made in the future' } : null;\n}\n\n/**\n * Build start time validation function\n * @param date Date of the time to check\n * @param is_from Comparison date(ms from UTC epoch). Defaults to the current time\n */\nexport function buildValidateStartTime(date: number, is_from: number = dayjs().valueOf()) {\n    return (c) => validateStartTime(c, date, is_from);\n}\n\n/**\n * Check that control value time is after the comparison date time\n * @param control Angular form control\n * @param date Date of the time to check\n * @param is_from Comparison date(ms from UTC epoch). Defaults to the current time\n */\nexport function validateStartTime(control: AbstractControl, date: number, is_from: number = dayjs().valueOf()) {\n    const now = dayjs(is_from);\n    const parts = control.value.split(':');\n    const date_obj = dayjs(date).hour(+parts[0]).minute(+parts[1]);\n    return date_obj.isBefore(now, 'm') ? { start: HAS_ERROR, message: 'Booking time needs to be made in the future' } : null;\n}\n\nexport function buildValidateDuration(min: number = 30, max: number = 240) {\n    return (c) => validateDuration(c, min, max);\n}\n\nexport function validateDuration(control: AbstractControl, min: number = 30, max: number = 240) {\n    if (control.value < (min || 30)) {\n        return { duration: HAS_ERROR, message: `Minimum booking duration is ${min} minute${min === 1 ? 's' : ''}` };\n    } else if (control.value > (max || 480)) {\n        return { length: HAS_ERROR, message: `Maximum booking duration is ${max} minute${max === 1 ? 's' : ''}` };\n    }\n    return null;\n}\n\nexport function buildValidateAttendees(host: User, min: number = 0) {\n    return (c) => validateAttendees(c, host, min);\n}\n\nexport function validateAttendees(control: AbstractControl, host: User, min: number = 0) {\n    if (!control || !(control.value instanceof Array)) {\n        return min > 0\n            ? { invalid: true, message: `Minimum of ${min} attendee${min === 1 ? ' is' : 's are'} required other than you` }\n            : null;\n    }\n    const list: User[] = control.value;\n    if (host) {\n        const result = list.find(a => a.email === host.email);\n        if (result) { list.splice(list.indexOf(result), 1); }\n    }\n    return list.length >= min ? null : {\n        count: true,\n        message: `Minimum of ${min} attendee${min === 1 ? ' is' : 's are'} required other than you`\n    };\n}\n","<div class=\"bootstrap\">\n    <div class=\"options\">\n        <div class=\"header fs-big\">\n            <h1>Booking Panel Setup</h1>\n            <div\n                class=\"toggle\"\n                feedback\n                center=\"true\"\n                *ngIf=\"system_list && system_list.length > 0\"\n                (tapped)=\"manual_input = !manual_input\"\n            >\n                <i class=\"material-icons\">{{ manual_input ? 'list' : 'code' }}</i>\n            </div>\n        </div>\n        <div class=\"body\" *ngIf=\"!loading\">\n            <ng-container *ngIf=\"manual_input; else list_desc\">\n                <p class=\"description\">\n                    Input the Engine System ID to bootstrap\n                </p>\n                <div class=\"content\">\n                    <div class=\"input\" [class.focus]=\"input_focus || system_id\">\n                        <input [(ngModel)]=\"system_id\" (focus)=\"input_focus = true\" (blur)=\"input_focus = false\" />\n                        <div class=\"placeholder\" [class.focus]=\"input_focus\">Engine System ID</div>\n                    </div>\n                </div>\n            </ng-container>\n            <ng-template #list_desc>\n                <p class=\"description\">\n                    Select the relevent system from the available dropdown\n                </p>\n                <div class=\"content\">\n                    <a-dropdown\n                        klass=\"fill\"\n                        [items]=\"system_list\"\n                        [(ngModel)]=\"selected_system\"\n                        [options]=\"{ can_filter: true }\"\n                        placeholder=\"Select system\"\n                    ></a-dropdown>\n                </div>\n            </ng-template>\n        </div>\n        <div class=\"body\" *ngIf=\"loading\">\n            <div class=\"info-block\">\n                <div class=\"icon\">\n                    <a-spinner circle-ring color=\"#000\"></a-spinner>\n                </div>\n                <div class=\"text\">\n                    Loading system data...\n                </div>\n            </div>\n        </div>\n        <div class=\"footer\" *ngIf=\"!loading\">\n            <button\n                widget\n                [disabled]=\"(manual_input && !system_id) || (!manual_input && (!selected_system || !selected_system.id))\"\n                (tapped)=\"bootstrap()\"\n            >\n                Submit\n            </button>\n        </div>\n    </div>\n</div>\n","\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { PlaceSystem } from '@placeos/ts-client'\n\nimport { ApplicationService } from '../../services/app.service';\nimport { BaseComponent } from '../../shared/base.component';\nimport { first } from 'rxjs/operators';\nimport { environment } from '../../../environments/environment';\n\n@Component({\n    selector: 'app-bootstrap',\n    templateUrl: './bootstrap.component.html',\n    styleUrls: ['./bootstrap.component.scss']\n})\nexport class BootstrapComponent extends BaseComponent implements OnInit {\n    /** Whether to show manual input for bootstrap ID */\n    public manual_input: boolean;\n    /** List of available systems */\n    public system_list: PlaceSystem[] = [];\n    /** Whether application data is loading */\n    public loading: boolean;\n    /** ID of the system to bootstrap */\n    public system_id: string;\n    /** Selected system to bootstrap */\n    public selected_system: PlaceSystem = null;\n    /** Whether input field is focused */\n    public input_focus: boolean;\n\n    constructor(private service: ApplicationService, private route: ActivatedRoute) {\n        super();\n        // ensure app is trusted in dev mode so we can preserve login.\n        if (!environment.production) {\n            localStorage.setItem('trusted', 'true');\n        }\n    }\n\n    public ngOnInit(): void {\n        this.loading = true;\n        this.service.Spaces.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.subscription('route.query', this.route.queryParamMap.subscribe((params) => {\n                if (params.has('clear') && params.get('clear')) {\n                    this.clearBootstrap();\n                }\n                if (params.has('system_id') || params.has('sys_id')) {\n                    this.system_id = params.get('system_id') || params.get('sys_id');\n                    this.manual_input = true;\n                    this.bootstrap();\n                }\n            }));\n            this.subscription('system_list', this.service.Systems.systems.subscribe((systems) => {\n                this.system_list = systems || [];\n                this.manual_input = !this.system_list || this.system_list.length <= 0;\n                this.loading = false;\n            }));\n            this.checkBootstrapped();\n        });\n    }\n\n    /**\n     * Setup the default system for the application to bind to\n     */\n    public bootstrap() {\n        if (this.manual_input && this.system_id) {\n            this.configure(this.system_id);\n        } else if (this.selected_system) {\n            this.configure(this.selected_system.id);\n        }\n    }\n\n    /**\n     * Check if the application has previously been bootstrapped\n     */\n    private checkBootstrapped(): void {\n        if (localStorage) {\n            const system_id = localStorage.getItem('ACA.PANEL.system') || localStorage.getItem('ACA.CONTROL.system');\n            if (system_id) {\n                this.service.log('BOOT', `Already bootstrapped, redirecting to ${system_id}...`);\n                this.service.navigate(['panel', system_id]);\n                return;\n            }\n        }\n        const user = this.service.Users.current;\n        if (user && user.email) {\n            const space = this.service.Spaces.item(user.email);\n            if (space) {\n                this.service.log('BOOT', `Bootstrapped as user, redirecting to ${space.id}...`);\n                this.service.navigate(['panel', space.id]);\n                return;\n            }\n        }\n        this.loading = false;\n    }\n\n    /**\n     * Save the bootstrapped ID and redirect to the panel for that ID\n     * @param system_id System to bootstrap\n     */\n    private configure(system_id: string): void {\n        this.service.log('BOOT', `Bootstrapping system ${system_id}...`);\n        if (localStorage) {\n            localStorage.setItem('ACA.PANEL.system', system_id);\n        }\n        this.service.navigate(['panel', system_id]);\n    }\n\n    /**\n     * Remove any previously set bootstrapping details\n     */\n    private clearBootstrap() {\n        if (localStorage) {\n            localStorage.removeItem('ACA.PANEL.system');\n        }\n    }\n\n}\n\n","<div class=\"panel-array\">\n    <ng-container *ngIf=\"systems && systems.length > 0; else none\">\n        <div\n            class=\"panel-outlet\"\n            *ngFor=\"let id of systems | slice: 0:4; let i = index\"\n            [style.height]=\"systems.length >= 2 ? '50%' : '100%'\"\n        >\n            <app-booking-panel *ngIf=\"id; else empty_state\" [system_id]=\"id\" [show_time]=\"false\" [reverse]=\"i % 2 !== 0\"></app-booking-panel>\n        </div>\n    </ng-container>\n    <ng-template #none>\n        <div class=\"info-block\">\n            <div class=\"text\">No systems are set for displaying on the panel array</div>\n        </div>\n    </ng-template>\n</div>\n<ng-template #empty_state>\n    <div class=\"container\">\n        <div class=\"content center\">\n            <div class=\"logo\" *ngIf=\"logo\">\n                <img [src]=\"logo\"/>\n            </div>\n            <div class=\"time\">{{ time }}</div>\n        </div>\n    </div>\n</ng-template>\n\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { BaseComponent } from '../../shared/base.component';\nimport { ApplicationService } from 'src/app/services/app.service';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'app-booking-panel-array',\n    templateUrl: './panel-array.component.html',\n    styleUrls: ['./panel-array.component.scss']\n})\nexport class BookingPanelArrayComponent extends BaseComponent implements OnInit {\n    /** List of systems to show panels for */\n    public systems: string[];\n    /** Application logo */\n    public logo: string;\n\n    /** Display value for the current time */\n    public get time(): string {\n        return dayjs().format('h:mm:ss A')\n    }\n\n    constructor(private route: ActivatedRoute, private _service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription('app_ready', this._service.initialised.subscribe((is_ready) => {\n            if (is_ready) {\n                this.subscription('route.query', this.route.queryParamMap.subscribe((params) => {\n                    if (params.has('system_ids')) {\n                        this.systems = (params.get('system_ids') || '').split(',');\n                    }\n                }));\n                const logo = this._service.setting('app.logo');\n                this.logo = (logo ? logo.inverse : null) || '';\n                this.unsub('app_ready');\n            }\n        }));\n    }\n}\n","<div class=\"panel-select\" (window:mousedown)=\"reset()\" (window:touchstart)=\"reset()\">\n    <div class=\"panel-options\">\n        <ng-container *ngIf=\"systems && systems.length > 0; else none\">\n            <div class=\"item\" *ngFor=\"let id of systems | slice: 0:8; let i = index\" (tapped)=\"system_name[id] ? showPanel(id) : ''\">\n                <div class=\"bindings\" *ngIf=\"id\">\n                    <i binding [sys]=\"id\" mod=\"Bookings\" bind=\"room_name\" [(model)]=\"system_name[id]\"></i>\n                    <i binding [sys]=\"id\" mod=\"Bookings\" bind=\"icon\" [(model)]=\"system_icon[id]\"></i>\n                    <i binding [sys]=\"id\" mod=\"Bookings\" bind=\"today\" (modelChange)=\"updateStatus(id, $event)\"></i>\n                </div>\n                <div [class]=\"'icon' + (system_status[id] ? ' ' + system_status[id] : '')\">\n                    <img *ngIf=\"system_name[id]\" [src]=\"system_icon[id]\">\n                    <a-spinner *ngIf=\"!system_name[id]\" circle-ring color=\"#fff\"></a-spinner>\n                </div>\n                <div class=\"text\">{{ system_name[id] || id + ' connecting...' }}</div>\n            </div>\n        </ng-container>\n    </div>\n    <div class=\"panel-outlet\" *ngIf=\"active_system\">\n        <app-booking-panel [system_id]=\"active_system\"></app-booking-panel>\n        <div class=\"overlay\">\n            <button widget class=\"action close\" (tapped)=\"close()\" (contextmenu)=\"$event.preventDefault()\">\n                <div class=\"icon\">\n                    <i class=\"material-icons\">close</i>\n                </div>\n            </button>\n            <button widget class=\"action countdown\" (contextmenu)=\"$event.preventDefault()\">{{ countdown }}</button>\n        </div>\n    </div>\n    <ng-template #none>\n        <div class=\"info-block\">\n            <div class=\"text\">No systems are set for displaying on the panel select list</div>\n        </div>\n    </ng-template>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { BaseComponent } from '../../shared/base.component';\nimport { ActivatedRoute } from '@angular/router';\nimport { HashMap } from '../../shared/utilities/types.utilities';\nimport { Space } from '../../services/data/spaces/space.class';\nimport { ApplicationService } from '../../services/app.service';\n\n@Component({\n    selector: 'app-booking-panel-select',\n    templateUrl: './panel-select.component.html',\n    styleUrls: ['./panel-select.component.scss']\n})\nexport class BookingPanelSelectComponent extends BaseComponent implements OnInit {\n    /** List of systems to show panels for */\n    public systems: string[];\n    /** Names for the list of systems */\n    public system_name: HashMap<string> = {};\n    /** Icons for the list of systems */\n    public system_icon: HashMap<string> = {};\n    /** Status for the list of systems */\n    public system_status: HashMap<string> = {};\n    /** Active Panel system */\n    public active_system: string;\n    /** Countdown counter */\n    public countdown: number;\n\n    constructor(private route: ActivatedRoute, private service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription('route.query', this.route.queryParamMap.subscribe((params) => {\n            if (params.has('system_ids')) {\n                this.systems = (params.get('system_ids') || '').split(',');\n            }\n        }));\n    }\n\n    /**\n     * Show booking panel for the given system ID\n     * @param id ID of the system to show\n     */\n    public showPanel(id: string) {\n        this.active_system = id;\n        this.reset();\n    }\n\n    /**\n     * Update the status value for the given system ID\n     * @param id ID of the system to update\n     * @param bookings List of current bookings for the system\n     */\n    public updateStatus(id: string, bookings: HashMap[]) {\n        const space = new Space(this.service.Spaces, { id, bookings });\n        this.system_status[id] = space.current ? 'available' : 'unavailable';\n    }\n\n    /**\n     * Close the modal\n     */\n    public close() {\n        this.active_system = null;\n        this.clearInterval('countdown');\n    }\n\n    /**\n     * User confirmation of the content of the modal\n     */\n    public reset() {\n        if (this.active_system) {\n            this.countdown = 30;\n            this.interval('countdown', () => this.tick(), 1000);\n        }\n    }\n\n    /**\n     * Decrement countdown and close if 0\n     */\n    public tick() {\n        if (this.countdown <= 0) {\n            this.close();\n        }\n        this.countdown--;\n    }\n}\n","<div class=\"booking-actions\">\n    <div class=\"actions\" *ngIf=\"space\">\n        <button widget class=\"end large action\" *ngIf=\"status === 'endable'\" (tapped)=\"confirmEnd()\" (contextmenu)=\"$event.preventDefault()\">\n            <div class=\"icon\">\n                <i class=\"material-icons\">event_busy</i>\n            </div>\n            <div class=\"text\">End</div>\n        </button>\n        <button widget class=\"start large action\" *ngIf=\"status === 'pending'\" (tapped)=\"startMeeting()\" (contextmenu)=\"$event.preventDefault()\">\n            <div class=\"icon\">\n                <i class=\"material-icons\">event_available</i>\n            </div>\n            <div class=\"text\">Start</div>\n        </button>\n        <button widget class=\"book large action\" *ngIf=\"!no_booking\" (tapped)=\"book()\" (contextmenu)=\"$event.preventDefault()\">\n            <div class=\"icon\">\n                <i class=\"material-icons\">add</i>\n            </div>\n            <div class=\"text\">Book</div>\n        </button>\n    </div>\n    <div class=\"bindings\" *ngIf=\"space\">\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"booking_disabled\" [(model)]=\"no_booking\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"last_meeting_started\" [(model)]=\"last_started\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"is_endable\" [(model)]=\"is_endable\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"timeout\" [(model)]=\"pending_timeout\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"cancel_timeout\" [(model)]=\"cancel_timeout\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"ask_start\" [(model)]=\"ask_start\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"ask_end\" [(model)]=\"ask_end\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"default_title\" [(model)]=\"default_title\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"min_duration\" [(model)]=\"min_duration\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"max_duration\" [(model)]=\"max_duration\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"business_start\" [(model)]=\"business_start\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"business_end\" [(model)]=\"business_end\"></i>\n    </div>\n</div>\n","\nimport { Component, Input } from '@angular/core';\n\nimport { Space } from '../../../services/data/spaces/space.class';\nimport { BaseComponent } from '../../../shared/base.component';\nimport { ApplicationService } from '../../../services/app.service';\nimport { timeToDate } from '../../../shared/utilities/general.utilities';\n\nimport * as dayjs from 'dayjs';\n\nexport type SpaceStatus = 'pending' | 'available' | 'unavailable' | 'endable';\n\n@Component({\n    selector: 'panel-booking-actions',\n    templateUrl: './booking-actions.component.html',\n    styleUrls: ['./booking-actions.component.scss']\n})\nexport class PanelBookingActionsComponent extends BaseComponent {\n    /** Space with which to display bookings for */\n    @Input() public space: Space;\n    /** Whether booking is allowed */\n    public no_booking: boolean = false;\n    /** Whether the current booking is able to be ended */\n    public is_endable: number;\n    /** Number of seconds before a meeting can be started, being truthy enables start/stop and auto-cancellations */\n    public pending_timeout: number;\n    /** Number of seconds after the start of a meeting when it is auto-cancelled, overrides `timeout` value */\n    public cancel_timeout: number;\n    /** Timestamp of the last started meeting as ms since UTC epoch */\n    public last_started: number;\n    /** Whether to ask user to start the meeting */\n    public ask_start: boolean;\n    /** Whether to ask user to end the meeting */\n    public ask_end: boolean;\n    /** Time of the last automatic confirmation of start or end */\n    public last_confirm: number = 0;\n    /** Default title for bookings */\n    public default_title: string;\n    /** Maximum allowed booking duation */\n    public max_duration: number;\n    /** Minimum allowed booking duation */\n    public min_duration: number;\n    /** Start time of the business day with format `HH:mm` */\n    public business_start: string;\n    /** End time of the business day with format `HH:mm` */\n    public business_end: string;\n\n    /** Current status of the active system */\n    public get status(): SpaceStatus{\n        let status: SpaceStatus = 'available';\n            if (this.space && (this.space.current || this.space.next)) {\n                const booking = this.space.current || this.space.next;\n                status = this.space.current ? 'unavailable' : 'available';\n                if (this.pending_timeout) {\n                    const now = dayjs().startOf('m').second(1);\n                    const business_start = dayjs(timeToDate(this.business_start || '08:00'));\n                    const business_end = dayjs(timeToDate(this.business_end || '17:30'));\n                    // Check if within business hours before looking at pending logic\n                    if (now.isBefore(business_start, 'm') || now.isAfter(business_end, 'm')) {\n                        return status;\n                    }\n                    const date = dayjs(booking.date);\n                    if (this.last_started >= now.valueOf() || this.last_started >= date.valueOf()) {\n                        if (this.is_endable && this.space.current) {\n                            const end = date.add(booking.duration, 'm').startOf('m');\n                            const block_end = end.subtract(Math.max(this.is_endable, 300), 's');\n                            if (now.isAfter(block_end, 's') && now.isBefore(end, 'm')) {\n                                status = 'endable';\n                                if (this.ask_end && this.last_confirm < end.valueOf()) {\n                                    this.confirmEnd();\n                                    this.last_confirm = end.valueOf();\n                                }\n                            } else {\n                                status = 'unavailable';\n                            }\n                        } else {\n                            status = 'unavailable';\n                        }\n                    } else {\n                        const pending_start = date.startOf('m').subtract(this.pending_timeout, 's');\n                        const pending_end = date.startOf('m').add(this.cancel_timeout || this.pending_timeout, 's');\n                        if (now.isAfter(pending_start, 's') && now.isBefore(pending_end, 's')) {\n                            status = 'pending';\n                            if (this.ask_start && this.last_confirm < date.valueOf()) {\n                                this.confirmStart();\n                                this.last_confirm = date.valueOf();\n                            }\n                        }\n                    }\n                }\n            }\n        return status;\n    }\n\n    constructor(private service: ApplicationService) {\n        super();\n    }\n\n    /**\n     * Open modal to make a new booking\n     */\n    public book() {\n        this.service.Bookings.new({\n            space: this.space,\n            title: this.default_title,\n            max_duration: this.max_duration,\n            min_duration: this.min_duration\n        });\n    }\n\n    /**\n     * Open confirmation modal for starting the meeting\n     */\n    public confirmStart() {\n        this.service.Overlay.open('confirm', {\n            config: 'modal',\n            data: {\n                title: 'Do you wish to start your meeting?',\n                body: `If you don't start your meeting it will be cancelled ${this.cancel_timeout / 60} minutes after the start time.`,\n                icon: { class: 'material-icons', value: 'play_arrow' }\n            }\n        }, _ => this.startMeeting());\n    }\n\n    /**\n     * Execute the logic on the engine driver to start the current or upcoming meeting\n     */\n    public startMeeting() {\n        if (this.space) {\n            const meeting = this.space.current || this.space.next;\n            const module = this.service.Systems.get(this.space.id, 'Bookings');\n            if (meeting && module) {\n                const date = dayjs(meeting.date);\n                module.execute('start_meeting', [meeting.date]).then(_ => {\n                    this.service.Analytics.event('Checkin', 'checked-in', `${this.space.id} at ${date.format('DD MMM YYYY, h:mm A Z')}`);\n                }, (e) => {\n                    this.service.notifyError(`Error starting meeting. ${e}`);\n                    this.service.Analytics.event('Checkin', 'checked-in-failed', `${this.space.id} at ${date.format('DD MMM YYYY, h:mm A Z')}`);\n                });\n            }\n        }\n    }\n\n    /**\n     * Open confirmation modal for ending the meeting\n     */\n    public confirmEnd() {\n        this.service.Overlay.open('confirm', {\n            config: 'modal',\n            data: {\n                title: 'Are you sure want to end your meeting?',\n                body: 'Ending your meeting early will free up this room for others to use',\n                icon: { class: 'material-icons', value: 'stop' }\n            }\n        }, _ => this.endMeeting());\n    }\n\n    /**\n     * Execute end meeting logic on engine driver\n     * @param reason Reason for ending the meeting early\n     */\n    public endMeeting(reason: string = 'user_input') {\n        if (this.space) {\n            const meeting = this.space.current || this.space.next;\n            const module = this.service.Systems.get(this.space.id, 'Bookings');\n            if (meeting && module) {\n                const date = dayjs(meeting.date);\n                module.execute('cancel_meeting', [meeting.date, reason]).then(_ => {\n                    this.service.Analytics.event('Checkin', 'cancelled', `${this.space.id} at ${date.format('DD MMM YYYY, h:mm A Z')} | ${reason}`);\n                }, (e) => {\n                    this.service.notifyError(`Error starting meeting. ${e}`);\n                    this.service.Analytics.event('Checkin', 'cancel-failed', `${this.space.id} at ${date.format('DD MMM YYYY, h:mm A Z')} | ${reason}`);\n                });\n            }\n        }\n    }\n\n}\n\n","<div class=\"custom-actions\">\n    <div class=\"actions\" *ngIf=\"space\">\n        <button widget class=\"action control\" *ngIf=\"can_control !== false && control_url\" (tapped)=\"openControl()\" (contextmenu)=\"$event.preventDefault()\">\n            <div class=\"icon\">\n                <i class=\"material-icons\">dvr</i>\n            </div>\n        </button>\n        <button widget class=\"action service\" *ngIf=\"catering\" (tapped)=\"confirmWaiterCall()\" (contextmenu)=\"$event.preventDefault()\">\n            <div class=\"icon\">\n                <i class=\"material-icons\">room_service</i>\n            </div>\n        </button>\n    </div>\n    <div class=\"bindings\" *ngIf=\"space\">\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"control_url\" [(model)]=\"control_url\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"can_control\" [(model)]=\"can_control\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"has_catering\" [(model)]=\"catering\"></i>\n    </div>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { Space } from '../../../services/data/spaces/space.class';\nimport { ApplicationService } from '../../../services/app.service';\n\n@Component({\n    selector: 'panel-custom-actions',\n    templateUrl: './custom-actions.component.html',\n    styleUrls: ['./custom-actions.component.scss']\n})\nexport class PanelCustomActionsComponent {\n    /** Space with which to display bookings for */\n    @Input() public space: Space;\n    /** Control URL of the active space */\n    public control_url: string;\n    /** Whether the user is able to open the control URL */\n    public can_control: boolean;\n    /** Whether space has catering */\n    public catering: boolean;\n\n    constructor(private service: ApplicationService) {}\n\n    /**\n     * Open confirmation modal for ending the meeting\n     */\n    public confirmWaiterCall() {\n        this.service.Overlay.open('confirm', {\n            config: 'modal',\n            data: {\n                title: 'Call a waiter to your room?',\n                body: 'Call a waiter to your room to order catering',\n                icon: { class: 'material-icons', value: 'call' }\n            }\n        }, _ => this.callWaiter());\n    }\n\n    /**\n     * Execute call waiter logic on engine driver\n     */\n    public callWaiter() {\n        if (this.space) {\n            const module = this.service.Systems.get(this.space.id, 'Bookings');\n            if (module) {\n                module.execute('waiter_call', []).then(_ => {\n                    this.service.Analytics.event('Catering', 'waiter-call', (new Date).toISOString());\n                }, (e) => {\n                    this.service.Analytics.event('Catering', 'waiter-call-failed', (new Date).toISOString());\n                    this.service.notifyError(`Error calling waiter. ${e}`);\n                });\n            }\n        }\n    }\n\n    /**\n     * Open modal to show embeded control URL\n     */\n    public openControl() {\n        this.service.Analytics.event('Control', 'open-view', (new Date).toISOString());\n        this.service.Overlay.open('embeded-control', {\n            config: 'modal',\n            data: {\n                control_url: this.control_url\n            }\n        });\n    }\n}\n","\n        <div class=\"content\">\n            <span class=\"panel-title\" (tapped)=\"showTitle()\" [class.show]=\"show_title\">{{ space_name }}</span>\n            <div class=\"details\" *ngIf=\"!hide_all && show_details\">\n                <app-panel-space-details [space]=\"space\"></app-panel-space-details>\n            </div>\n        </div>\n        <div class=\"overlay\" *ngIf=\"!hide_all && show_details\">\n            <panel-booking-actions [space]=\"space\"></panel-booking-actions>\n            <panel-custom-actions [space]=\"space\"></panel-custom-actions>\n        </div>\n    ","import { Component, Input, ViewEncapsulation } from '@angular/core';\nimport { Space } from '../../services/data/spaces/space.class';\nimport { BaseClass } from '../../shared/base.class';\n\n@Component({\n    selector: 'app-panel-details-display',\n    template: `\n        <div class=\"content\">\n            <span class=\"panel-title\" (tapped)=\"showTitle()\" [class.show]=\"show_title\">{{ space_name }}</span>\n            <div class=\"details\" *ngIf=\"!hide_all && show_details\">\n                <app-panel-space-details [space]=\"space\"></app-panel-space-details>\n            </div>\n        </div>\n        <div class=\"overlay\" *ngIf=\"!hide_all && show_details\">\n            <panel-booking-actions [space]=\"space\"></panel-booking-actions>\n            <panel-custom-actions [space]=\"space\"></panel-custom-actions>\n        </div>\n    `,\n    styleUrls: ['./panel.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class PanelDetailsDisplayComponent extends BaseClass {\n    @Input()\n    show_title: boolean;\n\n    @Input()\n    space_name: string;\n\n    @Input()\n    space: Space;\n\n    @Input()\n    show_details: boolean;\n\n    @Input()\n    hide_all: boolean;\n\n    /**\n     * Show full room name if overflowing\n     */\n    public showTitle() {\n        this.show_title = true;\n        this.timeout('hide_title', () => (this.show_title = false), 3000);\n    }\n}\n","\n        <div class=\"booking-panel\" [class.disabled]=\"interactive === false\" [class.reverse]=\"reverse || flip_status\"\n             [class.no-time]=\"!show_time\">\n            <div *ngIf=\"isV1()\"\n                 [class]=\"'status-v1' + (status && !hide_all ? ' ' + status : '')\">\n                <div class=\"time-display-v1\" *ngIf=\"show_time\">{{ display_time }}</div>\n            </div>\n            <div *ngIf=\"!isV1()\"\n                 [class]=\"'status' + (displayStatus && !hide_all ? ' ' + displayStatus : '')\">\n                <span class=\"time-display\" *ngIf=\"show_time\">{{ statusText }}</span>\n                <span class=\"time-display time-display-bottom\" *ngIf=\"show_time\">{{ display_time }}</span>\n            </div>\n            <div class=\"body\">\n                <app-panel-details-display\n                        *ngIf=\"!isV1()\"\n                        class=\"details-display\"\n                        [hide_all]=\"hide_all\" [show_details]=\"show_details\" [show_title]=\"show_title\"\n                        [space]=\"space\" [space_name]=\"space_name\"></app-panel-details-display>\n                <app-details-display-1\n                        *ngIf=\"isV1()\"\n                        class=\"details-display-v1\"\n                        [hide_all]=\"hide_all\" [show_details]=\"show_details\" [show_title]=\"show_title\"\n                        [space]=\"space\" [space_name]=\"space_name\" [status]=\"status\"\n                        status_display=\"{{status_display}}\"></app-details-display-1>\n                <div class=\"timeline\" *ngIf=\"show_details\">\n                    <panel-timeline [space]=\"space\"></panel-timeline>\n                </div>\n            </div>\n            <div class=\"bindings\" *ngIf=\"system_id\">\n                <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"room_name\" [(model)]=\"space_name\"></i>\n                <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"touch_enabled\" [(model)]=\"interactive\"></i>\n                <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"today\" (modelChange)=\"updateBookings($event)\"></i>\n                <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"timeout\" [(model)]=\"pending_timeout\"\n                   (modelChange)=\"updateStatus()\"></i>\n                <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"cancel_timeout\" [(model)]=\"cancel_timeout\"\n                   (modelChange)=\"updateStatus()\"></i>\n                <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"last_meeting_started\" [(model)]=\"last_started\"\n                   (modelChange)=\"updateStatus()\"></i>\n                <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"hide_all\" [(model)]=\"hide_all\"></i>\n                <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"flip_status\" [(model)]=\"flip_status\"></i>\n                <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"can_cancel\" [(model)]=\"can_cancel\"></i>\n                <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"business_start\" [(model)]=\"business_start\"></i>\n                <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"business_end\" [(model)]=\"business_end\"></i>\n                <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"status_override\" [(model)]=\"status_overrides\"></i>\n            </div>\n        </div>\n    ","import { Component, Input, OnInit } from '@angular/core';\nimport { BaseComponent } from '../../shared/base.component';\nimport { Space, SpaceTheme } from '../../services/data/spaces/space.class';\nimport { HashMap } from '../../shared/utilities/types.utilities';\nimport * as dayjs from 'dayjs';\nimport { ApplicationService } from '../../services/app.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { timeToDate } from '../../shared/utilities/general.utilities';\nimport { status } from '@placeos/ts-client/dist/esm/realtime/functions';\nimport { map } from 'rxjs/operators';\nimport { SpaceRules } from '../../services/data/bookings/booking.interfaces';\n\nexport enum RoomDisplayStatus {\n    Available = 'available',\n    NotBookable = 'not-bookable',\n    AvailableByRequest = 'available-by-request',\n    InUse = 'in-use',\n    Pending = 'none'\n}\n\n\n@Component({\n    selector: 'app-booking-panel',\n    template: `\n        <div class=\"booking-panel\" [class.disabled]=\"interactive === false\" [class.reverse]=\"reverse || flip_status\"\n             [class.no-time]=\"!show_time\">\n            <div *ngIf=\"isV1()\"\n                 [class]=\"'status-v1' + (status && !hide_all ? ' ' + status : '')\">\n                <div class=\"time-display-v1\" *ngIf=\"show_time\">{{ display_time }}</div>\n            </div>\n            <div *ngIf=\"!isV1()\"\n                 [class]=\"'status' + (displayStatus && !hide_all ? ' ' + displayStatus : '')\">\n                <span class=\"time-display\" *ngIf=\"show_time\">{{ statusText }}</span>\n                <span class=\"time-display time-display-bottom\" *ngIf=\"show_time\">{{ display_time }}</span>\n            </div>\n            <div class=\"body\">\n                <app-panel-details-display\n                        *ngIf=\"!isV1()\"\n                        class=\"details-display\"\n                        [hide_all]=\"hide_all\" [show_details]=\"show_details\" [show_title]=\"show_title\"\n                        [space]=\"space\" [space_name]=\"space_name\"></app-panel-details-display>\n                <app-details-display-1\n                        *ngIf=\"isV1()\"\n                        class=\"details-display-v1\"\n                        [hide_all]=\"hide_all\" [show_details]=\"show_details\" [show_title]=\"show_title\"\n                        [space]=\"space\" [space_name]=\"space_name\" [status]=\"status\"\n                        status_display=\"{{status_display}}\"></app-details-display-1>\n                <div class=\"timeline\" *ngIf=\"show_details\">\n                    <panel-timeline [space]=\"space\"></panel-timeline>\n                </div>\n            </div>\n            <div class=\"bindings\" *ngIf=\"system_id\">\n                <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"room_name\" [(model)]=\"space_name\"></i>\n                <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"touch_enabled\" [(model)]=\"interactive\"></i>\n                <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"today\" (modelChange)=\"updateBookings($event)\"></i>\n                <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"timeout\" [(model)]=\"pending_timeout\"\n                   (modelChange)=\"updateStatus()\"></i>\n                <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"cancel_timeout\" [(model)]=\"cancel_timeout\"\n                   (modelChange)=\"updateStatus()\"></i>\n                <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"last_meeting_started\" [(model)]=\"last_started\"\n                   (modelChange)=\"updateStatus()\"></i>\n                <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"hide_all\" [(model)]=\"hide_all\"></i>\n                <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"flip_status\" [(model)]=\"flip_status\"></i>\n                <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"can_cancel\" [(model)]=\"can_cancel\"></i>\n                <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"business_start\" [(model)]=\"business_start\"></i>\n                <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"business_end\" [(model)]=\"business_end\"></i>\n                <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"status_override\" [(model)]=\"status_overrides\"></i>\n            </div>\n        </div>\n    `,\n    styleUrls: ['./panel.component.scss']\n})\nexport class BookingPanelComponent extends BaseComponent implements OnInit {\n    /** ID of the active system */\n    @Input() public system_id: string;\n    /** Whether the status is on the right side */\n    @Input() public reverse: boolean;\n    /** Whether to show the time at the bottom of the status */\n    @Input() public show_time = true;\n    /** Name of the connected system */\n    public space_name: string;\n    /** Space with which to display bookings for. lazy loaded */\n    public space: Space | undefined;\n    public rules: SpaceRules | undefined;\n    /** Number of seconds before a meeting can be started, being truthy enables start/stop and auto-cancellations */\n    public pending_timeout: number;\n    /** Number of seconds after the start of a meeting when it is auto-cancelled, overrides `timeout` value */\n    public cancel_timeout: number;\n    /** Timestamp of the last started meeting as ms since UTC epoch */\n    public last_started: number;\n    /** Whether to hide booking related details */\n    public hide_all: boolean;\n    /** Whether user interaction is enabled for the panel */\n    public interactive = true;\n    /** Whether status display is on the right side of the UI */\n    public flip_status: boolean;\n    /** Whether bookings can be cancelled if they timeout */\n    public can_cancel: boolean;\n    /** Time of the last cancelled meeting in ms since UTC epoch */\n    private last_cancel: number;\n    /** Start time of the business day with format `HH:mm` */\n    public business_start: string;\n    /** End time of the business day with format `HH:mm` */\n    public business_end: string;\n    /** Whether to show full room name when it overflows */\n    public show_title: boolean;\n    /** Override mapping for status values */\n    public status_overrides: HashMap<string>;\n    /** Status of websocket */\n    public websocket_connected: boolean;\n\n    /** Current status of the active system */\n    private _status: 'pending' | 'available' | 'unavailable';\n\n    public setSpace(space: Space) {\n        this.space = space;\n    }\n\n    /** Get the display value for the status */\n    public get status_display(): string {\n        if (!this.websocket_connected && !this._service.setting('show_status_when_disconnected')) {\n            return ' ';\n        }\n        if (this.status_overrides && Object.keys(this.status_overrides).length === 1) {\n            this._status = this.space.current ? 'unavailable' : Object.keys(this.status_overrides)[0] as any;\n        }\n        const status = (!this.hide_all ? this._status : null) || 'not-bookable';\n        return (this.status_overrides || [])[status] || this._status;\n    }\n\n    /** Current status of the active system */\n    public get status(): 'pending' | 'available' | 'unavailable' | 'not-bookable' {\n        if (!this.websocket_connected && !this._service.setting('show_status_when_disconnected')) {\n            return 'not-bookable';\n        }\n        // Perform any status overrides\n        this.updateStatus();\n        if (\n            this.status_overrides &&\n            Object.keys(this.status_overrides).length === 1 &&\n            (this.space && !this.space.current || this._status !== 'unavailable')\n        ) {\n            this._status = Object.keys(this.status_overrides)[0] as any;\n        }\n        return this._status;\n    }\n\n    public get displayStatus(): RoomDisplayStatus {\n        // if we have not loaded rules, keep pending state.\n        if (!this.rules) {\n            return RoomDisplayStatus.Pending;\n        }\n        switch (this.status) {\n            case 'available':\n                if (!this.rules.auto_approve) {\n                    return RoomDisplayStatus.AvailableByRequest;\n                }\n                return RoomDisplayStatus.Available;\n            case 'not-bookable':\n                return RoomDisplayStatus.NotBookable;\n            case 'pending':\n                return RoomDisplayStatus.Pending;\n            case 'unavailable':\n                return RoomDisplayStatus.InUse;\n        }\n    }\n\n    public get statusText(): string {\n        const localStatus = this.status;\n        const overrideDisplay = this.status_overrides && this.status_overrides[localStatus];\n        if (overrideDisplay) {\n            return overrideDisplay;\n        }\n        switch (this.displayStatus) {\n            case RoomDisplayStatus.Available:\n                return 'Available';\n            case RoomDisplayStatus.NotBookable:\n                return 'Unbookable';\n            case RoomDisplayStatus.AvailableByRequest:\n                return 'Available By Request';\n            case RoomDisplayStatus.InUse:\n                return 'In Use';\n            case RoomDisplayStatus.Pending:\n                return '';\n        }\n    }\n\n    /** Whether booking details should be shown */\n    public get show_details(): boolean {\n        return this.websocket_connected || !!this._service.setting('show_status_when_disconnected');\n    }\n\n    /** Display string for the current time */\n    public get display_time(): string {\n        if (this.isV1()) {\n            return dayjs().format('h:mm A');\n        } else {\n            return dayjs().format('h:mma');\n        }\n    }\n\n    constructor(public _service: ApplicationService, public _route: ActivatedRoute) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription('get_current_space', this._service.Spaces\n            .listen<Space[]>('list')\n            .pipe(map(spaces => spaces.filter(space => space.id === this.system_id)))\n            .subscribe(value => {\n                if (value.length >= 1) {\n                    this.space = value[0];\n                }\n            }));\n\n        this.subscription('levels', this._service.Organisation.listen('levels')\n            .subscribe(() => {\n                // this requires a refactor, but essentially the rules will check for building\n                // levels. We need to listen for level loading to then load the rules.\n                this.rules = this.space && this.space.rulesFor({});\n            }));\n        this.subscription('app_ready', this._service.initialised.subscribe((is_ready) => {\n            if (is_ready) {\n                this.subscription(\n                    'route.params',\n                    this._route.paramMap.subscribe(params => {\n                        if (params.has('system_id')) {\n                            this.system_id = params.get('system_id');\n                            this._service.set('system', this.system_id);\n                        }\n                    })\n                );\n\n                this.timeout('websocket', () => {\n                    this.websocket_connected = true;\n                    // status().subscribe(status => this.websocket_connected = status);\n                });\n                this.unsub('app_ready');\n            }\n        }));\n    }\n\n    public isV1(): boolean {\n        return this.space?.theme_rbp === SpaceTheme.v1;\n    }\n\n    /**\n     * Update the bookings for the active space\n     * @param bookings Array of raw booking data\n     */\n    public updateBookings(bookings: HashMap[]): void {\n        if (!this.space) {\n            this.setSpace(new Space(this._service.Spaces, {\n                id: this.system_id,\n                name: this.space_name,\n                bookings\n            }));\n        } else {\n            this.setSpace(new Space(this._service.Spaces, {\n                ...this.space,\n                bookings\n            }));\n        }\n    }\n\n    /**\n     * Update the current status of the active space\n     */\n    public updateStatus(): void {\n        if (this.hide_all) {\n            this._status = null;\n        } else {\n            if (this.space && (this.space.current || this.space.next)) {\n                const booking = this.space.current || this.space.next;\n                this._status = this.space.current ? 'unavailable' : 'available';\n                if (this.pending_timeout) {\n                    const now = dayjs();\n                    const date = dayjs(booking.date).startOf('m');\n                    if (this.last_started >= now.valueOf() || this.last_started >= date.valueOf()) {\n                        this._status = 'unavailable';\n                    } else {\n                        // Only meetings with durations less than 8 hours can be pending or cancelled\n                        const pending_start = date.subtract(this.pending_timeout, 's');\n                        const pending_end = date.add(this.cancel_timeout || this.pending_timeout, 's');\n                        const end = date.add(booking.duration, 'm');\n                        if (now.isAfter(pending_start, 's') && now.isBefore(pending_end, 's')) {\n                            this._status = 'pending';\n                        } else if (now.isAfter(pending_end, 's') && now.isBefore(end, 'm')) {\n                            this._status = 'pending';\n                            const business_start = dayjs(timeToDate(this.business_start || '08:00'));\n                            const business_end = dayjs(timeToDate(this.business_end || '17:30'));\n                            // Check if within business hours before cancelling the meeting\n                            if (now.isBefore(business_start, 'm') || now.isAfter(business_end, 'm')) {\n                                return;\n                            }\n                            this.endMeeting('timeout');\n                        }\n                    }\n                }\n            } else {\n                this._status = 'available';\n            }\n        }\n    }\n\n    /**\n     * Execute end meeting logic on engine driver\n     * @param reason Reason for ending the meeting early\n     */\n    private endMeeting(reason: string = 'user_input') {\n        if (this.space && this.can_cancel !== false) {\n            const meeting = this.space.current || this.space.next;\n            const module = this._service.Systems.get(this.space.id, 'Bookings');\n            if (meeting.duration >= 8 * 60 && reason === 'timeout') {\n                reason = 'hide multi-day';\n            }\n            if (meeting && module && meeting.date !== this.last_cancel) {\n                const date = dayjs(meeting.date);\n                module.execute('cancel_meeting', [meeting.date, reason]).then(\n                    _ => {\n                        this._service.Analytics.event(\n                            'Checkin',\n                            'cancelled',\n                            `${this.space.id} at ${date.format('DD MMM YYYY, h:mm A Z')} | ${reason}`\n                        );\n                        this.last_cancel = meeting.date;\n                    },\n                    e => {\n                        this._service.notifyError(`Error cancelling meeting. ${e}`);\n                        this._service.Analytics.event(\n                            'Checkin',\n                            'cancel-failed',\n                            `${this.space.id} at ${date.format('DD MMM YYYY, h:mm A Z')} | ${reason}`\n                        );\n                    }\n                );\n            }\n        }\n    }\n}\n","\n        <div class=\"space-booking-details\">\n            <div class=\"booking-container\">\n                <div class=\"details current\" *ngIf=\"space && space.current\">\n                    <div class=\"heading\">Current Booking:</div>\n                    <div class=\"host\" *ngIf=\"!hide_user && !hide_details\">{{ space.current?.organiser?.name }}</div>\n                    <div class=\"time\" *ngIf=\"!hide_availability\">Booked until {{ space.current?.end_time }}\n                        on {{space.current?.end_date}}</div>\n                </div>\n                <div class=\"details next\" *ngIf=\"space && space.next\">\n                    <div class=\"heading\">Next Booking:</div>\n                    <div class=\"host\" *ngIf=\"!hide_user && !hide_details\">{{ space.next?.organiser?.name }}</div>\n                    <div class=\"time\" *ngIf=\"!hide_availability\">Booked at {{ space.next?.start_time }}\n                        on {{space.next?.start_date}}</div>\n                </div>\n            </div>\n            <div class=\"details other\" *ngIf=\"space && space.current\">\n                <div class=\"time\" *ngIf=\"!hide_availability\">\n                    <b>Room Availability:</b> Free at {{this.space.current.end_time}} on {{this.space.current.end_date}}\n                </div>\n                <div class=\"time\">\n                    <b>Make a reservation at:</b> roombooking.intranet.mckinsey.com\n                </div>\n            </div>\n            <div class=\"information\" *ngIf=\"title || description\">\n                <div class=\"title\">{{ title }}</div>\n                <div class=\"block\">\n                    <div class=\"icon\" *ngIf=\"icon\">\n                        <img [src]=\"icon\">\n                    </div>\n                    <div class=\"text\">{{ description }}</div>\n                </div>\n            </div>\n            <div class=\"bindings\" *ngIf=\"space\">\n                <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"hide_details\" [(model)]=\"hide_details\"></i>\n                <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"hide_title\" [(model)]=\"hide_title\"></i>\n                <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"hide_availability\" [(model)]=\"hide_availability\"></i>\n                <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"hide_user\" [(model)]=\"hide_user\"></i>\n                <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"title\" [(model)]=\"title\"></i>\n                <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"description\" [(model)]=\"description\"></i>\n                <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"icon\" [(model)]=\"icon\"></i>\n            </div>\n        </div>\n    ","import { Component, Input } from '@angular/core';\nimport { Space } from '../../../services/data/spaces/space.class';\n\n@Component({\n    selector: 'app-panel-space-details',\n    template: `\n        <div class=\"space-booking-details\">\n            <div class=\"booking-container\">\n                <div class=\"details current\" *ngIf=\"space && space.current\">\n                    <div class=\"heading\">Current Booking:</div>\n                    <div class=\"host\" *ngIf=\"!hide_user && !hide_details\">{{ space.current?.organiser?.name }}</div>\n                    <div class=\"time\" *ngIf=\"!hide_availability\">Booked until {{ space.current?.end_time }}\n                        on {{space.current?.end_date}}</div>\n                </div>\n                <div class=\"details next\" *ngIf=\"space && space.next\">\n                    <div class=\"heading\">Next Booking:</div>\n                    <div class=\"host\" *ngIf=\"!hide_user && !hide_details\">{{ space.next?.organiser?.name }}</div>\n                    <div class=\"time\" *ngIf=\"!hide_availability\">Booked at {{ space.next?.start_time }}\n                        on {{space.next?.start_date}}</div>\n                </div>\n            </div>\n            <div class=\"details other\" *ngIf=\"space && space.current\">\n                <div class=\"time\" *ngIf=\"!hide_availability\">\n                    <b>Room Availability:</b> Free at {{this.space.current.end_time}} on {{this.space.current.end_date}}\n                </div>\n                <div class=\"time\">\n                    <b>Make a reservation at:</b> roombooking.intranet.mckinsey.com\n                </div>\n            </div>\n            <div class=\"information\" *ngIf=\"title || description\">\n                <div class=\"title\">{{ title }}</div>\n                <div class=\"block\">\n                    <div class=\"icon\" *ngIf=\"icon\">\n                        <img [src]=\"icon\">\n                    </div>\n                    <div class=\"text\">{{ description }}</div>\n                </div>\n            </div>\n            <div class=\"bindings\" *ngIf=\"space\">\n                <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"hide_details\" [(model)]=\"hide_details\"></i>\n                <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"hide_title\" [(model)]=\"hide_title\"></i>\n                <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"hide_availability\" [(model)]=\"hide_availability\"></i>\n                <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"hide_user\" [(model)]=\"hide_user\"></i>\n                <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"title\" [(model)]=\"title\"></i>\n                <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"description\" [(model)]=\"description\"></i>\n                <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"icon\" [(model)]=\"icon\"></i>\n            </div>\n        </div>\n    `,\n    styleUrls: ['./space-details.component.scss']\n})\nexport class PanelSpaceDetailsComponent {\n    /** Space with which to display bookings for */\n    @Input() public space: Space;\n    /** Secondary title for the space */\n    public title: string;\n    /** Description for the space */\n    public description: string;\n    /** Image that suppliments the description for the space */\n    public icon: { class?: string, value?: string, src?: string };\n\n    /** Whether to hide the booking timing details */\n    public hide_availability: boolean;\n    /** Whether to hide the current booking title */\n    public hide_title: boolean;\n    /** Whether to hide booking details(title and host) */\n    public hide_details: boolean;\n    /** Whether to hide booking host */\n    public hide_user: boolean;\n\n}\n\n","<div class=\"timeline\">\n    <div class=\"block-list\" *ngIf=\"time_blocks && time_blocks.length > 0\">\n        <div\n            class=\"block\"\n            *ngFor=\"let item of time_blocks\"\n            [class.show]=\"item.show || item.hour\"\n            [class.in-use]=\"item.in_use\"\n            (tapped)=\"!item.in_use && !no_bookings && !no_timeline_bookings ? book(item) : ''\"\n        >\n            <div class=\"hour\" *ngIf=\"item.hour\">{{ item.hour }}</div>\n            <div class=\"bar\" [class.hour]=\"item.hour\"></div>\n        </div>\n    </div>\n    <div class=\"overlay\">\n        <div class=\"expired\" [style.width]=\"((options?.start_offset || 120) / (options?.duration || 720)) * 100 + '%'\"></div>\n        <div class=\"current-block\" [style.left]=\"((options?.start_offset || 120) / (options?.duration || 720)) * 100 + '%'\">\n            <div class=\"bar\"></div>\n            <div class=\"triangle\"></div>\n            <div class=\"time-display\" *ngIf=\"display_time\">Time Now<br>{{ display_time }}</div>\n        </div>\n    </div>\n    <div class=\"bindings\" *ngIf=\"space\">\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"hide_availability\" [(model)]=\"hide_status\" (modelChange)=\"checkBookings()\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"hide_all\" [(model)]=\"hide_all\" (modelChange)=\"checkBookings()\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"booking_disabled\" [(model)]=\"no_bookings\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"no_timeline_bookings\" [(model)]=\"no_timeline_bookings\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"default_title\" [(model)]=\"default_title\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"min_duration\" [(model)]=\"min_duration\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"max_duration\" [(model)]=\"max_duration\"></i>\n    </div>\n</div>\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { BaseComponent } from '../../../shared/base.component';\nimport { Space } from '../../../services/data/spaces/space.class';\n\nimport * as dayjs from 'dayjs';\nimport { ApplicationService } from '../../../services/app.service';\nimport { calculateTimelineBlocks, evaluateBookingsInUse, ITimelineBlock } from './timeline.utils';\n\nexport interface IPanelTimelineOptions {\n    /** Length of time in minutes to display on the timeline after the current time */\n    duration: number;\n    /** Time offset in minutes which is displayed before the current time marker */\n    start_offset: number;\n    /** Size of shown blocks in minutes */\n    block_size: number;\n}\n\n@Component({\n    selector: 'panel-timeline',\n    templateUrl: './timeline.component.html',\n    styleUrls: ['./timeline.component.scss']\n})\nexport class PanelTimelineComponent extends BaseComponent implements OnInit, OnChanges {\n    /** Space with which to display bookings for */\n    @Input() public space: Space;\n    /** Display options for the timeline */\n    @Input() public options: IPanelTimelineOptions;\n    /** Emitter for user events on the timeline */\n    @Output() public event = new EventEmitter();\n\n    /** List of display time block  */\n    public time_blocks: ITimelineBlock[] = [];\n    /** Whether to hide unavailable blocks on the UI */\n    public hide_status: boolean;\n    /** Whether to hide all booking data */\n    public hide_all: boolean;\n    /** Whether user is not allowed to make bookings */\n    public no_booking: boolean;\n    /** Whether user is not allowed to make bookings using the timeline */\n    public no_timeline_bookings: boolean;\n    /** Default title for bookings */\n    public default_title: string;\n    /** Maximum allowed booking duation */\n    public max_duration: number;\n    /** Minimum allowed booking duation */\n    public min_duration: number;\n\n    /** Display string for the current time */\n    public get display_time(): string {\n        return dayjs().format('h:mm A');\n    }\n\n    constructor(private service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.generateTimelineBlocks();\n        this.interval('update_blocks', () => this.generateTimelineBlocks(), 60 * 1000);\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        this.generateTimelineBlocks();\n    }\n\n    /**\n     * Generate time blocks to display\n     */\n    private generateTimelineBlocks(): void {\n        this.time_blocks = calculateTimelineBlocks(this.options);\n        this.checkBookings();\n    }\n\n    /**\n     * Update the statuses of time blocks based off space bookings\n     */\n    public checkBookings(): void {\n        if (this.space && this.space.todays_bookings) {\n            this.time_blocks = evaluateBookingsInUse(this.time_blocks, this.space.bookings,\n                !this.hide_status && !this.hide_all, this.options);\n        }\n    }\n\n    /**\n     * Open modal to make a new booking\n     */\n    public book(block: ITimelineBlock) {\n        this.service.Bookings.new({\n            space: this.space,\n            date: block.value,\n            title: this.default_title,\n            max_duration: this.max_duration,\n            min_duration: this.min_duration\n        });\n    }\n}\n\n","import * as dayjs from 'dayjs';\nimport { IPanelTimelineOptions } from './timeline.component';\nimport { Booking } from '../../../services/data/bookings/booking.class';\n\nexport const DEFAULT_START_OFFSET = 120;\nexport const DEFAULT_DURATION = 720;\nexport const DEFAULT_BLOCK_SIZE = 30;\nexport const TIME_BLOCK_SEPARATOR_MINUTES = 5;\n\nexport interface ITimelineBlock {\n    /** Block time as ms since UTC epoch */\n    value: number;\n    /** Whether to show block divider */\n    show: boolean;\n    /** Hour of the day represented by this time block */\n    hour: number;\n    /** Whether block is in use or not */\n    in_use: boolean;\n}\n\n/**\n * Calculate time blocks to display\n */\nexport const calculateTimelineBlocks = (options?: IPanelTimelineOptions): ITimelineBlock[] => {\n    const nowInMinutes = dayjs().startOf('m');\n    const now = nowInMinutes.minute(Math.round(nowInMinutes.minute() / 5) * 5);\n    const start = now.subtract((options ? options.start_offset : null) || DEFAULT_START_OFFSET, 'm');\n    const end = start.add((options ? options.duration : null) || DEFAULT_DURATION, 'm');\n    let date = dayjs(start);\n    const timeBlocks: ITimelineBlock[] = [];\n    while (date.isBefore(end, 'm')) {\n        // clamp by 12 for 12 hour system.\n        const clampedHour = date.hour() % 12;\n        timeBlocks.push({\n            value: date.valueOf(),\n            show: (date.minute() % ((options ? options.block_size : null) || DEFAULT_BLOCK_SIZE)) === 0,\n            hour: date.minute() === 0 ? (clampedHour === 0 ? 12 : clampedHour) : null,\n            in_use: false\n        });\n        date = date.add(TIME_BLOCK_SEPARATOR_MINUTES, 'm');\n    }\n    return timeBlocks;\n};\n/**\n * Will find and adjust each block to show if they're in use or not depending on the start and end of the bookings passed in.\n * @param timeBlocks The existing set of time blocks.\n * @param bookings The bookings to compare and find which are in use.\n * @param showInUse If false, we do not set timeBlocks status to \"in_use\".\n * @param options\n */\nexport const evaluateBookingsInUse = (\n    timeBlocks: ITimelineBlock[],\n    bookings: Booking[],\n    showInUse: boolean,\n    options?: IPanelTimelineOptions): ITimelineBlock[] => {\n    const blockStart = dayjs().subtract((options ? options.start_offset : null) || DEFAULT_START_OFFSET, 'm');\n    const blockEnd = dayjs().add((options ? options.duration : null) || DEFAULT_DURATION, 'm');\n    // Filter bookings for the shown times\n    const shownBookings = bookings.filter(i => {\n        const start = dayjs(i.date);\n        const end = start.add(i.duration, 'm');\n        return end.isAfter(blockStart, 'm') && start.isBefore(blockEnd, 'm');\n    });\n    const newBlocks = [...timeBlocks];\n    newBlocks.forEach(i => i.in_use = false);\n    if (showInUse) {\n        for (const booking of shownBookings) {\n            const start = dayjs(booking.date);\n            const end = start.add(booking.duration, 'm');\n            for (const block of timeBlocks) {\n                const blockTime = dayjs(block.value);\n                if (blockTime.isSame(start, 'm') || (blockTime.isAfter(start, 'm') && blockTime.isBefore(end, 'm'))) {\n                    block.in_use = true;\n                }\n            }\n        }\n    }\n    return newBlocks;\n};\n","\n        <div class=\"content\">\n            <div class=\"title\" (tapped)=\"showTitle()\" [class.show]=\"show_title\">{{ space_name }}</div>\n            <div [class]=\"'status-text' + (status && !hide_all ? ' ' + status : '')\">\n                {{ (!hide_all ? status_display : null) || 'Not Bookable' }}\n            </div>\n            <div class=\"details\" *ngIf=\"!hide_all && show_details\">\n                <panel-space-details [space]=\"space\"></panel-space-details>\n            </div>\n        </div>\n        <div class=\"overlay\" *ngIf=\"!hide_all && show_details\">\n            <panel-booking-actions [space]=\"space\"></panel-booking-actions>\n            <panel-custom-actions [space]=\"space\"></panel-custom-actions>\n        </div>\n    ","import { Component, Input, ViewEncapsulation } from '@angular/core';\nimport { Space } from '../../../services/data/spaces/space.class';\nimport { BaseClass } from '../../../shared/base.class';\n\n@Component({\n    selector: 'app-details-display-1',\n    template: `\n        <div class=\"content\">\n            <div class=\"title\" (tapped)=\"showTitle()\" [class.show]=\"show_title\">{{ space_name }}</div>\n            <div [class]=\"'status-text' + (status && !hide_all ? ' ' + status : '')\">\n                {{ (!hide_all ? status_display : null) || 'Not Bookable' }}\n            </div>\n            <div class=\"details\" *ngIf=\"!hide_all && show_details\">\n                <panel-space-details [space]=\"space\"></panel-space-details>\n            </div>\n        </div>\n        <div class=\"overlay\" *ngIf=\"!hide_all && show_details\">\n            <panel-booking-actions [space]=\"space\"></panel-booking-actions>\n            <panel-custom-actions [space]=\"space\"></panel-custom-actions>\n        </div>\n    `,\n    styleUrls: ['./panel-details-display-v1.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class PanelDetailsDisplayV1Component extends BaseClass {\n\n    @Input()\n    show_title: boolean;\n\n    @Input()\n    space_name: string;\n\n    @Input()\n    status: string;\n\n    @Input()\n    space: Space;\n\n    @Input()\n    show_details: boolean;\n\n    @Input()\n    hide_all: boolean;\n\n    @Input()\n    status_display: string;\n\n    /**\n     * Show full room name if overflowing\n     */\n    public showTitle() {\n        this.show_title = true;\n        this.timeout('hide_title', () => (this.show_title = false), 3000);\n    }\n}\n","<div class=\"space-booking-details\">\n    <div class=\"details current\" *ngIf=\"space && space.current\">\n        <div class=\"time\" *ngIf=\"!hide_availability\">Booked until {{ space.current?.end_time }}</div>\n        <div class=\"title\" *ngIf=\"!hide_title && !hide_details\">{{ space.current?.title }}</div>\n        <div class=\"host\" *ngIf=\"!hide_user && !hide_details\">{{ space.current?.organiser?.name }}</div>\n    </div>\n    <div class=\"details next\" *ngIf=\"space && space.next\">\n        <div class=\"time\" *ngIf=\"!hide_availability\">Next meeting at {{ space.next?.start_time }}</div>\n        <div class=\"title\" *ngIf=\"!hide_title && !hide_details\">{{ space.next?.title }}</div>\n        <div class=\"host\" *ngIf=\"!hide_user && !hide_details\">{{ space.next?.organiser?.name }}</div>\n    </div>\n    <div class=\"details other\" *ngIf=\"space && space.current && space.next\">\n        <div class=\"time\" *ngIf=\"!hide_availability\">\n            Free {{ space.current ? 'at ' + space.current.end_time : '' }} {{ space.next ? 'until ' + space.next.start_time : '' }}\n        </div>\n    </div>\n    <div class=\"information\" *ngIf=\"title || description\">\n        <div class=\"title\">{{ title }}</div>\n        <div class=\"block\">\n            <div class=\"icon\" *ngIf=\"icon\">\n                <img [src]=\"icon\">\n            </div>\n            <div class=\"text\">{{ description }}</div>\n        </div>\n    </div>\n    <div class=\"bindings\" *ngIf=\"space\">\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"hide_details\" [(model)]=\"hide_details\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"hide_title\" [(model)]=\"hide_title\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"hide_availability\" [(model)]=\"hide_availability\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"hide_user\" [(model)]=\"hide_user\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"title\" [(model)]=\"title\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"description\" [(model)]=\"description\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"icon\" [(model)]=\"icon\"></i>\n    </div>\n</div>\n","\nimport { Component, Input } from '@angular/core';\n\nimport { Space } from '../../../../services/data/spaces/space.class';\n\n@Component({\n    selector: 'panel-space-details',\n    templateUrl: './space-details.component.html',\n    styleUrls: ['./space-details.component.scss']\n})\nexport class PanelSpaceDetailsComponentV1 {\n    /** Space with which to display bookings for */\n    @Input() public space: Space;\n    /** Secondary title for the space */\n    public title: string;\n    /** Description for the space */\n    public description: string;\n    /** Image that suppliments the description for the space */\n    public icon: { class?: string, value?: string, src?: string };\n\n    /** Whether to hide the booking timing details */\n    public hide_availability: boolean;\n    /** Whether to hide the current booking title */\n    public hide_title: boolean;\n    /** Whether to hide booking details(title and host) */\n    public hide_details: boolean;\n    /** Whether to hide booking host */\n    public hide_user: boolean;\n}\n\n","\n<div class=\"shell\">\n    <div class=\"view\">\n        <router-outlet></router-outlet>\n    </div>\n    <div class=\"bindings\" *ngIf=\"system_id\">\n        <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"room_name\" [(model)]=\"system_name\" (modelChange)=\"checkLoading()\"></i>\n        <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"reload\" (modelChange)=\"reloadAt($event)\"></i>\n    </div>\n    <div class=\"loading-block\" *ngIf=\"system_id && !system_name\">\n        <div class=\"info-block\">\n            <div class=\"title\">Connecting to system({{system_id}})...</div>\n            <div class=\"text\">Attempting to connect to engine server...</div>\n            <div class=\"text message\">{{info_messages[message_index]}}</div>\n            <div class=\"icon\">\n                <a-spinner ring-rotate color=\"#000\"></a-spinner>\n            </div>\n        </div>\n    </div>\n    <div class=\"version\" *ngIf=\"show_version\" [class.loading]=\"system_id && !system_name\">\n        Version: {{ version }}<br>\n        Built: {{ build }}\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\n\nimport { BaseComponent } from '../shared/base.component';\nimport { ApplicationService } from '../services/app.service';\nimport { version, build } from '../shared/globals/application';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'app-shell-wrapper',\n    templateUrl: './shell.component.html',\n    styleUrls: ['./shell.component.scss']\n})\nexport class ShellWrapperComponent extends BaseComponent implements OnInit {\n    /** Whether application has system */\n    public has_system: boolean;\n    /** ID of the active system */\n    public system_id: string;\n    /** Name of the active system */\n    public system_name: string;\n    /** Name of the active page */\n    public page: string;\n    /** List of informational messages to display while connecting to the active system */\n    public info_messages: string[] = [\n        'If this message persists, check you network connection and then try reloading this page.',\n        'It seems to be taking a while. Make sure the selected system is valid.',\n        'Still nothing, huh. Are you authenticated? Do you have have a network connection?',\n        'Try reloading the page. If this persists contact your administrator.'\n    ];\n    /** Index of the info message being displayed */\n    public message_index: number = 0;\n\n    /** Current version of the application */\n    public get version(): string {\n        return version;\n    }\n\n    /** Current version of the application */\n    public get build(): string {\n        const now = dayjs();\n        const built = build.format('DD/MM/YY HH:mm');\n        return built;\n    }\n\n    public get show_version(): boolean {\n        return this._service.setting('app.show_version');\n    }\n\n    constructor(private _service: ApplicationService, private _router: Router) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription('app_ready', this._service.initialised.subscribe((is_ready) => {\n            if (is_ready) {\n                // Listen for system changes\n                this.subscription('system', this._service.listen('system', (value) => this.system_id = value));\n                // Listen for routing events\n                this.page = this._router.url?.split('/')[1] || '';\n\n                this.subscription(\n                    'router.change',\n                    this._router.events.subscribe(event => {\n                        if (event instanceof NavigationEnd) {\n                            this.page = this._router.url.split('/')[1] || '';\n                        }\n                    })\n                );\n                this.unsub('app_ready');\n            }\n        }));\n    }\n\n    /**\n     * Check if the system data has loaded\n     * @param delay Delay before first loading message update\n     */\n    public checkLoading(delay: number = 3000) {\n        console.log('Check Loading:', this.system_name);\n        if (!this.system_name) {\n            this.message_index = 0;\n            this.timeout('update_msg', () => this.updateMessage(), delay);\n        }\n    }\n\n    /**\n     * Update the index of the info message displayed\n     */\n    private updateMessage(): void {\n        if (!this.system_id) { return; }\n        this.message_index++;\n        if (this.message_index === this.info_messages.length) {\n            this.message_index--;\n            return;\n        }\n        this.timeout('update_msg', () => this.updateMessage(), 3000);\n    }\n\n    /**\n     * Schedule a reload the UI for a future time\n     * @param time Time to reload the UI\n     */\n    public reloadAt(time: number): void {\n        if (time && typeof time === 'number') {\n            this.clearTimeout('reload_ui');\n            const now = dayjs().startOf('s');\n            const reload_at_time = dayjs((time || 0) * 1000).startOf('s');\n            const diff = reload_at_time.diff(now, 'ms');\n            if (diff > 100) {\n                this.timeout('reload_ui', () => location.reload(true), diff);\n            }\n        }\n        this.timeout('update_msg', () => this.updateMessage(), 3000);\n    }\n}\n","export const environment = {\n  production: true\n};\n","\n/**\n * GENERAL APPLICATION SETTINGS\n */\nconst general = {\n    menu: {\n        items: [],\n        copyright: 'McKinsey & Company',\n        position: 'left'\n    }\n};\n/**\n * HOME PAGE SETTINGS\n */\nconst home = {\n    background: 'assets/img/skyline.jpg',\n    tiles: [\n        {\n            name: 'Book',\n            route: '/book/spaces',\n            icon: {\n                type: 'icon',\n                class: 'custom-book'\n            }\n        },\n        {\n            name: 'Maps',\n            route: '/explore/space',\n            icon: {\n                type: 'icon',\n                class: 'custom-spaces'\n            }\n        },\n        {\n            name: 'My Day',\n            route: '/schedule',\n            icon: {\n                type: 'icon',\n                class: 'custom-schedule'\n            }\n        }\n    ]\n};\n/**\n * HELP/SUPPORT SETTINGS\n */\nconst help = {\n    tiles: [],\n    columns: 2\n};\n/**\n * BOOKING FLOW SETTINGS\n */\nconst booking = {\n    booking_types: [\n        { name: 'Internal', id: 'internal' },\n        { name: 'Client', id: 'client' },\n        { name: 'External', id: 'external' },\n        { name: 'Setup', id: 'setup' },\n        { name: 'Training', id: 'training' },\n        { name: 'Interview', id: 'interview' }\n    ],\n    show_fields: [\n        'attendees',\n        'body',\n        'catering',\n        'date',\n        'duration',\n        'organiser',\n        'recurrence',\n        'title',\n        'type',\n        'all_day',\n        'needs_space',\n        'has_catering'\n    ],\n    html_body: true,\n    multiple_spaces: true,\n    desk_start: 9\n};\n/*===========================*\\\n||  SPACE LISTING SETTINGS   ||\n\\*===========================*/\nconst space_display = {\n    show_images: false\n};\n/*===========================*\\\n||  USER DIRECTORY SETTINGS  ||\n\\*===========================*/\nconst directory = {\n    show_avatars: true,\n    min_search_length: 3\n};\n/*===========================*\\\n||    EXPLORE MAP SETTINGS   ||\n\\*===========================*/\nconst explore = {\n    colors: {\n        'space-available': '#43a047',\n        'space-requestable': '#ffb300',\n        'space-unavailable': '#e53935',\n        'space-not-bookable': '#ccc',\n        'desk-available': '#43a047',\n        'desk-available-stroke': '#1b5e20',\n        'desk-unavailable': '#e53935',\n        'desk-unavailable-stroke': '#b71c1c',\n        'desk-reserved': '#ffb300',\n        'desk-reserved-stroke': '#ff6f00',\n        'desk-not-bookable': '#fff',\n        'desk-not-bookable-stroke': '#ccc',\n        'zone-low': '#43a047',\n        'zone-medium': '#ffb300',\n        'zone-high': '#e53935'\n    },\n    can_select_building: true,\n    show_legend_group_names: false,\n    show_timeline: true,\n    legend: {\n        General: [\n            { key: 'space-available', name: 'Available' },\n            { key: 'space-requestable', name: 'Available by request' },\n            { key: 'space-unavailable', name: 'In use' },\n            { key: 'space-not-bookable', name: 'Not Bookable' }\n        ]\n    }\n};\n/**\n * ROOT APPLICATION SETTINGS\n */\nconst app = {\n    title: 'McKinsey & Company',\n    description: 'McKinsey & Company Booking Panel UI written with Angular Framework',\n    short_name: 'PANEL',\n    logo_light: {\n        type: 'img',\n        src: 'assets/img/logo.svg',\n        background: ''\n    },\n    logo_dark: {\n        type: 'img',\n        src: 'assets/img/logo-inverse.svg',\n        background: ''\n    },\n    heap_io: {\n        app_id: 3540602199,\n        force_ssl: true,\n        secure_cookie: true,\n        disable_text_capture: true,\n        cookie_path: '/bookings/'\n    },\n    general,\n    home,\n    help,\n    booking,\n    space_display,\n    directory,\n    explore\n};\n\n/**\n * ROOT SETTIGNS\n */\nexport const DEFAULT_SETTINGS = {\n    debug: true,\n    composer: {\n        domain: '',\n        route: '/bookings',\n        protocol: '',\n        port: '',\n        use_domain: false,\n        local_login: false\n    },\n    app,\n    mock: false\n};\n","// IMPORTANT: THIS FILE IS AUTO GENERATED! DO NOT MANUALLY EDIT OR CHECKIN!\n/* tslint:disable */\nexport const VERSION = {\n    \"dirty\": false,\n    \"raw\": \"b68bfdc\",\n    \"hash\": \"b68bfdc\",\n    \"distance\": null,\n    \"tag\": null,\n    \"semver\": null,\n    \"suffix\": \"b68bfdc\",\n    \"semverString\": null,\n    \"version\": \"0.0.0\",\n    \"core_version\": \"1.0.0\",\n    \"time\": 1601658747997\n};\n/* tslint:enable */\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport * as dayjs from 'dayjs';\nimport * as AdvancedFormat from 'dayjs/plugin/advancedFormat';\n\nif (environment.production) {\n    enableProdMode();\n}\n\ndayjs.extend(AdvancedFormat);\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n    .catch(err => console.error(err));\n"]}