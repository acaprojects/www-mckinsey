{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/overlays/booking-modal/booking-modal.component.html","webpack:///src/app/overlays/booking-modal/booking-modal.component.ts","webpack:///src/app/overlays/confirm-modal/confirm-modal.component.html","webpack:///src/app/overlays/confirm-modal/confirm-modal.component.ts","webpack:///src/app/overlays/embedded-control-modal/embedded-control-modal.component.html","webpack:///src/app/overlays/embedded-control-modal/embedded-control-modal.component.ts","webpack:///src/app/overlays/overlays.module.ts","webpack:///src/app/services/app.service.ts","webpack:///src/app/services/data/base-api.class.ts","webpack:///src/app/services/data/base.service.ts","webpack:///src/app/services/data/bookings/booking.class.ts","webpack:///src/app/services/data/bookings/booking.utilities.ts","webpack:///src/app/services/data/bookings/bookings.service.ts","webpack:///src/app/services/data/organisation/building.class.ts","webpack:///src/app/services/data/organisation/organisation.class.ts","webpack:///src/app/services/data/organisation/organisation.service.ts","webpack:///src/app/services/data/polling/polling.service.ts","webpack:///src/app/services/data/spaces/space.class.ts","webpack:///src/app/services/data/spaces/space.utilities.ts","webpack:///src/app/services/data/spaces/spaces.service.ts","webpack:///src/app/services/data/systems-manager/systems-manager.service.ts","webpack:///src/app/services/data/users/user.class.ts","webpack:///src/app/services/data/users/user.utilities.ts","webpack:///src/app/services/data/users/users.service.ts","webpack:///src/app/services/hotkeys.service.ts","webpack:///src/app/services/settings.service.ts","webpack:///src/app/shared/base.class.ts","webpack:///src/app/shared/base.component.ts","webpack:///src/app/shared/components/duration-field/duration-field.component.html","webpack:///src/app/shared/components/duration-field/duration-field.component.ts","webpack:///src/app/shared/components/time-field/time-field.component.html","webpack:///src/app/shared/components/time-field/time-field.component.ts","webpack:///src/app/shared/components/user-search-field/user-search-field.component.html","webpack:///src/app/shared/components/user-search-field/user-search-field.component.ts","webpack:///src/app/shared/globals/application.ts","webpack:///src/app/shared/globals/form-fields.ts","webpack:///src/app/shared/globals/overlay-register.ts","webpack:///src/app/shared/mocks/index.ts","webpack:///src/app/shared/mocks/systems.mock.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/shared/utilities/api.utilities.ts","webpack:///src/app/shared/utilities/formatting.utilities.ts","webpack:///src/app/shared/utilities/general.utilities.ts","webpack:///src/app/shared/utilities/validation.utilities.ts","webpack:///src/app/shell/bootstrap/bootstrap.component.html","webpack:///src/app/shell/bootstrap/bootstrap.component.ts","webpack:///src/app/shell/panel-array/panel-array.component.html","webpack:///src/app/shell/panel-array/panel-array.component.ts","webpack:///src/app/shell/panel-select/panel-select.component.html","webpack:///src/app/shell/panel-select/panel-select.component.ts","webpack:///src/app/shell/panel/booking-actions/booking-actions.component.html","webpack:///src/app/shell/panel/booking-actions/booking-actions.component.ts","webpack:///src/app/shell/panel/custom-actions/custom-actions.component.html","webpack:///src/app/shell/panel/custom-actions/custom-actions.component.ts","webpack:///src/app/shell/panel/panel.component.html","webpack:///src/app/shell/panel/panel.component.ts","webpack:///src/app/shell/panel/space-details/space-details.component.html","webpack:///src/app/shell/panel/space-details/space-details.component.ts","webpack:///src/app/shell/panel/timeline/timeline.component.html","webpack:///src/app/shell/panel/timeline/timeline.component.ts","webpack:///src/app/shell/preload/preload.component.ts.PreloadComponent.html","webpack:///src/app/shell/preload/preload.component.ts","webpack:///src/app/shell/shell.component.html","webpack:///src/app/shell/shell.component.ts","webpack:///src/environments/environment.ts","webpack:///src/environments/version.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","children","redirectTo","AppRoutingModule","AppComponent","window","app_loaded","AppModule","console","log","production","BookingModalComponent","item","service","booking","Bookings","date","data","form_metadata","space_field","form_fields","find","field","key","space","setValue","date_field","valueOf","title_field","title","closing","timeout","close","fields","forEach","i","control","markAsDirty","valid","reduce","fields_valid","length","sub_fields_valid","sub_field","loading","post","on_error","map","push","config","content","ConfirmModalComponent","body","description","action","icon","EmbeddedControlModalComponent","countdown","control_url","interval","tick","OVERLAYS","SharedOverlaysModule","ApplicationService","_app_ref","_zone","_title","_router","_cache","_settings","_overlay","_composer","_analytics","_hotkeys","_systems","_organisation","_users","_bookings","_spaces","_polling","_route_trail","_subjects","_observers","parent","set","undefined","isStable","pipe","_","subscribe","run","_stable","setupCache","waitForSettings","registerOverlays","get","type","msg","on_action","notify","args","stream","force","query","route","Array","url","navigate","queryParams","preserveFragment","pop","name","getValue","next","value","asObservable","subscription","initialised","setup","init","unsub","setupComposer","enabled","setting","load","_initialised","debug","application","listen","clear","settings","protocol","location","host","domain","hostname","port","use_domain","origin","mock","scope","auth_uri","token_uri","redirect_uri","handle_login","local_login","localStorage","setItem","href","isEnabled","activateUpdate","available","event","current","hash","setInterval","checkForUpdate","reload","overlay","register","app_name","title_suffix","setTitle","getTitle","auth","api_endpoint","realtime","BaseDataClass","raw_data","changeEvents","zone_id","email","Math","floor","random","toLowerCase","_form_metadata","_form_fields","changed","changes","showErrors","form","formValues","update","add","task_name","parameters","task","initialiseFormFields","json","changed_fields","metadata","field_list","values","formChanges","edit","required","attributes","a","isValid","BaseAPIService","_subscribers","_promises","_compare","b","_list_filter","_name","_api_route","is_initialised","engine","endpoint","engine_endpoint","filterFn","list","query_params","update_list","cache","reject","result","http","d","process","results","updateList","form_data","new_item","analyticsEvent","post_data","_task","delay","stopPoll","sub","_poll","show","error","complete","put","removeItem","remove_ids","item_id","index","findIndex","splice","label","Analytics","raw_item","old_list","compareFn","new_list","mixed_list","found","Booking","_display","u_service","Users","icaluid","subject","Subject","start","start_epoch","Start","duration","end","end_epoch","End","diff","notes","visitors","catering","_attendees","attendees","organiser","organizer","owner","addFrom","_organiser","_location","format","time","_space_list","room_ids","u","form_settings","user","actions","validators","terms","requiredTrue","formatters","recurrence","custom_elements","defaults","process_field","f","control_type","references","refs","hide","flex","indexOf","now","isBefore","subtract","Spaces","space_names","level","BOOKING_COUNT","BOOKING_DATE","minute","startOf","setMockBookingStartDatetime","generateMockBooking","productName","fill","paragraph","city","getFreeBookingSlots","min_size","slots","sort","bkn_start","bkn_end","isAfter","getNextFreeBookingSlot","second","block","BookingsService","localeCompare","options","Overlay","open","toJSON","create","notifySuccess","notifyError","request","count","staff","num_staff","partners","num_partners","staff_id","period","Systems","exec","err","Building","zone","_extras","extras","extra_id","extra_name","_loan_items","loan_items","_levels","levels","level_id","level_name","_roles","roles","_lockers","lockers","locker_structure","systems","_phone_numbers","phone_numbers","longitude","latitude","_searchables","neighbourhoods","lvl","hasOwnProperty","lvl_features","feature","split","filter","Object","_zones","Organisation","OrganisationService","bld_id","buildings","building","bld","ids","bld_list","_active_building","getItem","loadOrganisation","loadBuildings","loadLevels","tags","org_data","shown_error","bld_data","lvl_data","PingHistory","history","last_ping","room_email","room_id","SECONDS","MINUTES","PollingService","OPTION_DEFAULTS","Space","_level","levelWithID","zones","long_name","map_id","book_type","can_search","searchable","can_control","controlable","hourly_rate","cost_hour","bookable","breakdown","capacity","was_available","raw_bookings","bookings","id_list","removeFrom","_linked_spaces","linked_rooms","linked_spaces","day","isSame","rm","bkn","status","booking_list","bookingsFor","SPACE_COUNT","generateMockSpace","firstName","lastName","linked","join","SpacesService","respond","available_spaces","j","v","idOrEmail","SystemsManagerService","_list","state","_resources","sys_id","mod_id","bindings","loadSystems","offset","limit","total","last_total","listValue","User","first_name","last_name","windows_id","visitor","phone","mobile","business_unit","department","organisation","organisation_id","organisation_name","external","staff_code","fmno","_delegates","delegates","Location","desk","l","USER_COUNT","USER_DOMAIN","USER_EMAILS","generateMockUser","companyName","delegate_count","min","phoneNumber","UsersService","uhttp","token","expiry","endOf","client_id","hashStr","sessionStorage","go","headers","append","authorise","logout","tries","current_user","INVALID_STANDALONE_KEYS","HotkeysService","keydown_states","keydown_observers","combo_end","registered_combos","counter","addEventListener","mapKey","last_down","preventDefault","combo","combination","validCombination","last_key","updateCombinationEndList","presses","replace","key_list","non_meta","SettingsService","api","local","session","_app_name","build","built","core_version","version","loadFromFile","app","colors","file","file_name","BaseClass","_timers","_intervals","_subscriptions","fn","Function","clearTimeout","setTimeout","clearInterval","unsubscribe","BaseComponent","CustomDurationFieldComponent","group","block_size","controls","date_control","valueChanges","calculateAvailableDurations","room","space_control","updateDisplay","active_duration","new_opt","option","abs","max_duration","min_duration","slot","CustomTimeFieldComponent","calculateAvailableTimes","times","from_ref","active_time","ceil","date_str","book_ahead","hour","CustomUserSearchFieldComponent","filtered_list","search$","search_results$","searching","q","slice","search_str","match_name","match_email","FORM_FIELDS","OVERLAY_REGISTER","LETTERS","NUMBERS","SPACE_LIST","IMAGES","createSystem","touch_enabled","cancel_timeout","has_catering","system","room_name","today","unix","$start_meeting","last_meeting_started","$cancel_meeting","reason","$waiter_call","MOCK_SYSTEMS","USER_LIST","handlers","method","callback","COMPONENTS","ENTRY_COMPONENT","SharedContentModule","toQueryString","str","formatAttendeesWithHost","formatAttendees","attendee_str","users","formatDate","formatTime","formatPeriodWithDuration","t","formatPeriod","timestamp","parts","formatDuration","RECURRENCE_PERIODS","formatRecurrence","formatSpaces","getItemWithKeys","shift","isMobileDevice","r","navigator","userAgent","match","isMobileSafari","agent","isAndroidChrome","padZero","toString","unique","array","el","pos","arr","humaniseDuration","short","h","m","filterList","items","filters","word","regex","RegExp","item_list","JSON","parse","stringify","match_count","match_index","matched","matches","tokens","k","matchToHighlight","timeToDate","flatten","an_array","stack","res","reverse","HAS_ERROR","validateDate","is_from","from","message","buildValidateStartTime","c","validateStartTime","date_obj","buildValidateDuration","max","validateDuration","buildValidateAttendees","validateAttendees","invalid","BootstrapComponent","routeParams","currentSystemId","useManualInput","systemsList","isLoading","currentSystem","s","obj","toUpperCase","doLoad","queryParamMap","params","has","configure","clearBootstrap","checkBootstrapped","systemId","storedSystemId","system_id","BookingPanelArrayComponent","_service","is_ready","logo","inverse","BookingPanelSelectComponent","system_name","system_icon","system_status","active_system","reset","PanelBookingActionsComponent","no_booking","last_confirm","default_title","startMeeting","meeting","endMeeting","pending_timeout","business_start","business_end","last_started","is_endable","block_end","ask_end","confirmEnd","pending_start","pending_end","ask_start","confirmStart","PanelCustomActionsComponent","callWaiter","Date","toISOString","BookingPanelComponent","_route","show_time","interactive","paramMap","websocket","websocket_connected","space_name","hide_all","_status","show_title","can_cancel","last_cancel","status_overrides","updateStatus","PanelSpaceDetailsComponent","PanelTimelineComponent","time_blocks","generateTimelineBlocks","round","start_offset","in_use","checkBookings","todays_bookings","block_start","hide_status","block_time","PreloadComponent","currentUser","prev","pushToPanel","pushToRoomSelect","pushIfBootstrapped","ShellWrapperComponent","info_messages","message_index","page","events","updateMessage","reload_at_time","environment","VERSION"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ShellWrapperComponent } from './shell/shell.component';\nimport { BootstrapComponent } from './shell/bootstrap/bootstrap.component';\nimport { BookingPanelComponent } from './shell/panel/panel.component';\nimport { BookingPanelArrayComponent } from './shell/panel-array/panel-array.component';\nimport { BookingPanelSelectComponent } from './shell/panel-select/panel-select.component';\nimport { PreloadComponent } from './shell/preload/preload.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ShellWrapperComponent,\n        children: [\n            { path: 'bootstrap', component: PreloadComponent },\n            { path: 'bootstrap/room-select', component: BootstrapComponent },\n            { path: 'panel/:system_id', component: BookingPanelComponent },\n            { path: 'panel-array', component: BookingPanelArrayComponent },\n            { path: 'panel-select', component: BookingPanelSelectComponent },\n            { path: '**', redirectTo: 'bootstrap' }\n        ]\n    },\n    { path: '**', redirectTo: 'bootstrap' }\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, { useHash: true })],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","<div class=\"app\">\n    <router-outlet></router-outlet>\n</div>\n","import { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./styles/app.component.scss', './styles/custom-element.styles.scss', './styles/native-element.styles.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class AppComponent {\n    constructor() {\n        (window as any).app_loaded = true;\n    }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport './shared/mocks';\n\nimport { ComposerModule } from '@placeos/composer';\nimport { AGoogleAnalyticsModule } from '@acaprojects/ngx-google-analytics';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\n\nimport { SharedOverlaysModule } from './overlays/overlays.module';\nimport { SharedContentModule } from './shared/shared.module';\n\nimport { ShellWrapperComponent } from './shell/shell.component';\nimport { BootstrapComponent } from './shell/bootstrap/bootstrap.component';\nimport { BookingPanelComponent } from './shell/panel/panel.component';\nimport { PanelTimelineComponent } from './shell/panel/timeline/timeline.component';\nimport { PanelSpaceDetailsComponent } from './shell/panel/space-details/space-details.component';\nimport { PanelBookingActionsComponent } from './shell/panel/booking-actions/booking-actions.component';\nimport { PanelCustomActionsComponent } from './shell/panel/custom-actions/custom-actions.component';\nimport { BookingPanelArrayComponent } from './shell/panel-array/panel-array.component';\nimport { BookingPanelSelectComponent } from './shell/panel-select/panel-select.component';\nimport { PreloadComponent } from './shell/preload/preload.component';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        ShellWrapperComponent,\n        BootstrapComponent,\n        PreloadComponent,\n        BookingPanelComponent,\n        PanelTimelineComponent,\n        PanelSpaceDetailsComponent,\n        PanelBookingActionsComponent,\n        PanelCustomActionsComponent,\n        BookingPanelArrayComponent,\n        BookingPanelSelectComponent\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        AppRoutingModule,\n        HttpClientModule,\n        FormsModule,\n        ComposerModule,\n        AGoogleAnalyticsModule,\n        SharedOverlaysModule,\n        SharedContentModule,\n        ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production })\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n    constructor() {\n        console.log('Production:', !!environment.production);\n    }\n}\n","<div class=\"modal booking\" widget [class.is-loading]=\"loading\" [@show] *ngIf=\"!closing\">\n    <div class=\"header\">\n        <div class=\"text\">New Booking</div>\n    </div>\n    <div class=\"body\" *ngIf=\"!loading\">\n        <div class=\"form\" *ngIf=\"booking\">\n            <a-dynamic-form [fields]=\"booking.form_fields\"></a-dynamic-form>\n        </div>\n    </div>\n    <div class=\"body\" *ngIf=\"loading\">\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <a-spinner circle-ring color=\"#000\"></a-spinner>\n            </div>\n            <div class=\"text\">Processing request...</div>\n        </div>\n    </div>\n    <div class=\"footer\" *ngIf=\"!loading\">\n        <button widget name=\"close\" (tapped)=\"close()\">Cancel</button>\n        <button widget name=\"save\" (tapped)=\"save()\">Save</button>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { animate, style, transition, trigger } from '@angular/animations';\nimport { OverlayItem } from '@acaprojects/ngx-overlays';\n\nimport { ApplicationService } from '../../services/app.service';\nimport { BaseComponent } from '../../shared/base.component';\nimport { Booking } from '../../services/data/bookings/booking.class';\nimport { OVERLAY_REGISTER } from '../../shared/globals/overlay-register';\n\nimport * as dayjs from 'dayjs';\n\nexport interface BookingData {\n    booking: Booking;\n    on_error: () => void;\n    close: () => void;\n}\n\n@Component({\n    selector: 'booking-modal',\n    templateUrl: './booking-modal.component.html',\n    styleUrls: ['./booking-modal.component.scss'],\n    animations: [\n        trigger('show', [\n            transition(':enter', [\n                style({ opacity: 0, transform: 'translateX(100%) scale(0)' }),\n                animate(200, style({ opacity: 1, transform: 'translateX(0%) scale(1)' }))\n            ]),\n            transition(':leave', [\n                style({ opacity: 1, transform: 'translateX(0%) scale(1)' }),\n                animate(\n                    200,\n                    style({\n                        opacity: 0,\n                        transform: 'translateX(-100%) scale(0)'\n                    })\n                )\n            ])\n        ])\n    ]\n})\nexport class BookingModalComponent extends BaseComponent implements OnInit {\n    /** Whether modal is closing */\n    public closing: boolean;\n    /** New Booking instance */\n    public booking: Booking;\n    /** Whether the modal is processing a booking request */\n    public loading: boolean;\n\n    constructor(private item: OverlayItem, private service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.booking = new Booking(this.service.Bookings, {\n            date: this.item.data.date,\n            form_metadata: { ...this.item.data }\n        });\n        const space_field = this.booking.form_fields.find(field => field.key === 'space');\n        if (this.item.data.space && space_field) {\n            space_field.setValue(this.item.data.space);\n        }\n        const date_field = this.booking.form_fields.find(field => field.key === 'date');\n        if (date_field) {\n            date_field.setValue(this.item.data.date || dayjs().valueOf());\n        }\n        const title_field = this.booking.form_fields.find(field => field.key === 'title');\n        if (title_field) {\n            title_field.setValue(this.item.data.title || '');\n        }\n    }\n\n    /**\n     * Closes the modal\n     */\n    public close() {\n        this.closing = true;\n        this.timeout('close', () => this.item.close());\n    }\n\n    /**\n     * Post form data\n     */\n    public save() {\n        const fields = this.booking.form_fields;\n        fields.forEach(i => i.control.markAsDirty());\n        const valid = fields.reduce(\n            (fields_valid, field) =>\n                fields_valid &&\n                (field.control.valid ||\n                    (field.children &&\n                        field.children.length &&\n                        field.children.reduce(\n                            (sub_fields_valid, sub_field) => sub_fields_valid && sub_field.control.valid,\n                            true\n                        ))),\n            true\n        );\n        if (this.booking && valid) {\n            this.loading = true;\n            this.item.post('finish', {\n                booking: this.booking,\n                on_error: () => (this.loading = false),\n                close: () => this.close()\n            });\n        } else {\n            console.log(\n                'Invalid form fields. Valid states:',\n                fields.map(field => `${field.key}:${field.control.valid}`)\n            );\n        }\n    }\n}\n\nOVERLAY_REGISTER.push({\n    id: 'booking',\n    config: { content: BookingModalComponent, config: 'modal' }\n});\n","<div class=\"confirm modal\" widget [@show] *ngIf=\"!closing\">\n    <div class=\"header\">\n        <div class=\"text\">{{ title || 'Confirm' }}</div>\n    </div>\n    <div class=\"body\">\n        <div class=\"icon\" *ngIf=\"icon\">\n            <i *ngIf=\"icon.class\" [class]=\"icon.class\">{{ icon.value }}</i>\n            <img *ngIf=\"!icon.class && icon.src\" [src]=\"icon.src\">\n        </div>\n        <div class=\"content\">\n            <p>{{ content || 'Are you sure?' }}</p>\n        </div>\n    </div>\n    <div class=\"footer\">\n        <button widget name=\"cancel\" (tapped)=\"close()\">Cancel</button>\n        <button widget name=\"accept\" (tapped)=\"accept()\">{{ action || 'Ok' }}</button>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { animate, style, transition, trigger } from '@angular/animations';\n\nimport { OverlayItem } from '@acaprojects/ngx-overlays';\n\nimport { BaseComponent } from '../../shared/base.component';\nimport { OVERLAY_REGISTER } from '../../shared/globals/overlay-register';\n\n@Component({\n    selector: 'confirm-modal',\n    templateUrl: './confirm-modal.component.html',\n    styleUrls: ['./confirm-modal.component.scss'],\n    animations: [\n        trigger('show', [\n            transition(':enter', [\n                style({ opacity: 0, transform: 'translateX(100%) scale(0)' }),\n                animate(200, style({ opacity: 1, transform: 'translateX(0%) scale(1)' }))\n            ]),\n            transition(':leave', [\n                style({ opacity: 1, transform: 'translateX(0%) scale(1)' }),\n                animate(200, style({ opacity: 0, transform: 'translateX(-100%) scale(0)' }))\n            ])\n        ])\n    ]\n})\nexport class ConfirmModalComponent extends BaseComponent implements OnInit {\n    /** Title of the confirm modal */\n    public title: string;\n    /** Body of the confirm modal */\n    public content: string;\n    /** Display text on the confirm button */\n    public action: string;\n    /** Display icon properties */\n    public icon: { class?: string; value?: string; src?: string };\n    /** Whether modal is closing */\n    public closing: boolean;\n\n    constructor(private item: OverlayItem) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        const data = this.item.data;\n        if (data) {\n            this.title = data.title || 'Confirm';\n            this.content = data.content || data.body || data.description || 'Confirm';\n            this.action = data.action || 'Ok';\n            this.icon = data.icon;\n        }\n    }\n\n    /**\n     * Close the modal\n     */\n    public close() {\n        this.closing = true;\n        this.timeout('close', () => this.item.close());\n\n    }\n\n    /**\n     * User confirmation of the content of the modal\n     */\n    public accept() {\n        this.item.post('finish');\n        this.close();\n    }\n}\n\nOVERLAY_REGISTER.push({ id: 'confirm', config: { content: ConfirmModalComponent, config: 'modal' } });\n","<div class=\"background\"></div>\n<div class=\"modal control\" [@show] (window:touchend)=\"reset()\" (window:mouseup)=\"reset()\">\n    <div class=\"control-frame\">\n        <iframe [src]=\"control_url | safe:'resource'\"></iframe>\n    </div>\n</div>\n<div class=\"overlay\">\n    <button widget class=\"action countdown\" (tapped)=\"reset()\" (contextmenu)=\"$event.preventDefault()\">{{ countdown }}</button>\n    <button widget class=\"action close\" (tapped)=\"close()\" (contextmenu)=\"$event.preventDefault()\">\n        <div class=\"icon\">\n            <i class=\"material-icons\">close</i>\n        </div>\n    </button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { animate, keyframes, state, style, transition, trigger } from '@angular/animations';\n\nimport { OverlayItem } from '@acaprojects/ngx-overlays';\n\nimport { BaseComponent } from '../../shared/base.component';\nimport { OVERLAY_REGISTER } from '../../shared/globals/overlay-register';\n\n@Component({\n    selector: 'embedded-control-modal',\n    templateUrl: './embedded-control-modal.component.html',\n    styleUrls: ['./embedded-control-modal.component.scss'],\n    animations: [\n        trigger('show', [\n            transition(':enter', [style({ opacity: 0 }), animate(500, style({ opacity: 1 }))]),\n            transition(':leave', [style({ opacity: 1 }), animate(1000, style({ opacity: 0 }))]),\n        ]),\n    ],\n})\nexport class EmbeddedControlModalComponent extends BaseComponent implements OnInit {\n    /** Control URL to embed into the modal */\n    public control_url: string;\n    /** Display value for the time remain until the modal automatically closes */\n    public countdown: number;\n\n    constructor(private item: OverlayItem) {\n        super();\n        this.countdown = 30;\n    }\n\n    public ngOnInit(): void {\n        const data = this.item.data;\n        if (data) {\n            this.control_url = data.control_url;\n        }\n        if (!this.control_url) {\n            this.close();\n        }\n        this.countdown = 30;\n        this.interval('countdown', () => this.tick(), 1000);\n    }\n\n    /**\n     * Close the modal\n     */\n    public close() {\n        this.item.close();\n        this.countdown = 30;\n    }\n\n    /**\n     * User confirmation of the content of the modal\n     */\n    public reset() {\n        this.countdown = 30;\n        this.interval('countdown', () => this.tick(), 1000);\n    }\n\n    /**\n     * Decrement countdown and close if 0\n     */\n    public tick() {\n        if (this.countdown <= 0) {\n            this.close();\n        }\n        this.countdown--;\n    }\n}\n\nOVERLAY_REGISTER.push({ id: 'embeded-control', config: { content: EmbeddedControlModalComponent, config: 'modal' } });\n","\nimport { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SharedContentModule } from '../shared/shared.module';\n\nimport { ConfirmModalComponent } from './confirm-modal/confirm-modal.component';\nimport { EmbeddedControlModalComponent } from './embedded-control-modal/embedded-control-modal.component';\nimport { BookingModalComponent } from './booking-modal/booking-modal.component';\n\nconst OVERLAYS: Type<any>[] = [\n    ConfirmModalComponent,\n    EmbeddedControlModalComponent,\n    BookingModalComponent\n];\n\n@NgModule({\n    declarations: [\n        ...OVERLAYS\n    ],\n    imports: [\n        CommonModule,\n        SharedContentModule\n    ],\n    exports: [\n        ...OVERLAYS\n    ],\n    entryComponents: [\n        ...OVERLAYS\n    ]\n})\nexport class SharedOverlaysModule {}\n","import { ApplicationRef, Injectable, NgZone } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\nimport { SwUpdate } from '@angular/service-worker';\n\nimport { ComposerService } from '@placeos/composer';\nimport { PlaceOSOptions } from '@placeos/ts-client';\nimport { AOverlayService } from '@acaprojects/ngx-overlays';\nimport { GoogleAnalyticsService } from '@acaprojects/ngx-google-analytics';\n\nimport { Observable, BehaviorSubject, Subject, Subscription } from 'rxjs';\n\nimport { BaseClass } from '../shared/base.class';\nimport { SettingsService, ConsoleStream } from './settings.service';\nimport { HashMap } from '../shared/utilities/types.utilities';\n\nimport { OVERLAY_REGISTER } from '../shared/globals/overlay-register';\nimport { ComposerSettings } from '../shared/utilities/settings.interfaces';\n\nimport { HotkeysService } from './hotkeys.service';\nimport { OrganisationService } from './data/organisation/organisation.service';\nimport { UsersService } from './data/users/users.service';\nimport { BookingsService } from './data/bookings/bookings.service';\nimport { SpacesService } from './data/spaces/spaces.service';\nimport { SystemsManagerService } from './data/systems-manager/systems-manager.service';\nimport { PollingService } from './data/polling/polling.service';\nimport { first } from 'rxjs/operators';\n\ndeclare global {\n    interface Window {\n        application: ApplicationService;\n        mock: {\n            enabled: boolean;\n            backend: any;\n        };\n    }\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ApplicationService extends BaseClass {\n    /** List of previous routes for return navigation */\n    private _route_trail: string[] = [];\n    /** Map of state variables for Service */\n    protected _subjects: { [key: string]: BehaviorSubject<any> | Subject<any> } = {};\n    /** Map of observables for state variables */\n    protected _observers: { [key: string]: Observable<any> } = {};\n    /** Whether the application has stablised */\n    private _stable: boolean;\n\n    /** Whether the application has stablised */\n    public get is_stable(): boolean {\n        return this._stable || false;\n    }\n\n    constructor(\n        private _app_ref: ApplicationRef,\n        private _zone: NgZone,\n        private _title: Title,\n        private _router: Router,\n        private _cache: SwUpdate,\n        private _settings: SettingsService,\n        private _overlay: AOverlayService,\n        private _composer: ComposerService,\n        private _analytics: GoogleAnalyticsService,\n        private _hotkeys: HotkeysService,\n        private _systems: SystemsManagerService,\n        private _organisation: OrganisationService,\n        private _users: UsersService,\n        private _bookings: BookingsService,\n        private _spaces: SpacesService,\n        private _polling: PollingService\n    ) {\n        super();\n        this._organisation.parent = this._users.parent = this._bookings.parent\n            = this._spaces.parent = this._systems.parent = this._polling.parent = this;\n        this.set('system', null);\n        this.log('APP', `Waiting for Application to stablised...`, undefined, undefined, true);\n        this._app_ref.isStable.pipe(first(_ => _)).subscribe(() => {\n            this.log('APP', `Application has stablised.`, undefined, undefined, true);\n            this._zone.run(() => {\n                this._stable = true;\n                this.setupCache();\n                this.waitForSettings();\n                this.registerOverlays();\n            });\n        });\n    }\n\n    /** Overlay service */\n    public get Overlay(): AOverlayService {\n        return this._overlay;\n    }\n\n    /** Analytics service */\n    public get Analytics() {\n        return this._analytics;\n    }\n\n    /** Hotkeys service */\n    public get Hotkeys() {\n        return this._hotkeys;\n    }\n\n    /** Systems Manager service */\n    public get Systems() {\n        return this._systems;\n    }\n\n    /** Organisation service */\n    public get Organisation() {\n        return this._organisation;\n    }\n\n    /** Users service */\n    public get Users() {\n        return this._users;\n    }\n\n    /** Bookings service */\n    public get Bookings() {\n        return this._bookings;\n    }\n\n    /** Spaces service */\n    public get Spaces() {\n        return this._spaces;\n    }\n\n    /**\n     * Get a setting from the settings service\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        return this._settings.get(key);\n    }\n\n    /** Name of the application */\n    public get name() {\n        return this._settings.app_name;\n    }\n\n    /**\n     * Title of the page\n     */\n    public set title(value: string) {\n        const title_suffix = this.setting('app.title');\n        this._title.setTitle(`${value ? value + ' | ' : ''}${title_suffix}`);\n    }\n\n    /**\n     * Title of the page\n     */\n    public get title(): string {\n        return this._title.getTitle();\n    }\n\n    /** Root API Endpoint */\n    public get endpoint() {\n        return `/api/staff/`;\n    }\n\n    /** Root API Endpoint for engine */\n    public get engine_endpoint() {\n        return `${this._composer.auth.api_endpoint}/`;\n    }\n\n    /** Get websocket */\n    public get websocket() {\n        return this._composer.realtime;\n    }\n\n    /**\n     * Create notification popup\n     * @param type CSS Class to add to the notification\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notify(type: string, msg: string, action?: string, on_action?: () => void): void {\n        const content = `<div class=\"icon\"><i class=\"material-icons\"></i></div><div class=\"text\">${msg}</div>`;\n        this._overlay.notify(content, action, on_action, type);\n    }\n\n    /**\n     * Create success notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifySuccess(msg: string, action?: string, on_action?: () => void): void {\n        this.notify('success', msg, action, on_action);\n    }\n\n    /**\n     * Create success notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifyError(msg: string, action?: string, on_action?: () => void): void {\n        this.notify('error', msg, action, on_action);\n    }\n\n    /**\n     * Create info notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifyInfo(msg: string, action?: string, on_action?: () => void): void {\n        this.notify('info', msg, action, on_action);\n    }\n\n    /**\n     * Log data to the browser console\n     * @param type Type of message\n     * @param msg Message body\n     * @param args array of argments to log to the console\n     * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\n     * @param force Whether to force message to be emitted when debug is disabled\n     */\n    public log(type: string, msg: string, args?: any, stream: ConsoleStream = 'debug', force: boolean = false): void {\n        this._settings.log(type, msg, args, stream, force);\n    }\n\n    /**\n     * Navigate to the given path\n     * @param path Path or array of path parts\n     * @param query Key value pairs to add to the URL as query parameters\n     */\n    public navigate(path: string | string[], query?: HashMap): void {\n        const route = path instanceof Array ? [...path] : [path];\n        this._route_trail.push(this._router.url);\n        this._router.navigate(route, query ? { queryParams: query } : { preserveFragment: true });\n    }\n\n    /**\n     * Navigate to the previous location in the route trail\n     */\n    public navigateBack(): void {\n        if (this._route_trail && this._route_trail.length > 0) {\n            const path = this._route_trail.pop();\n            this._router.navigate([path]);\n        } else {\n            this._router.navigate(['']);\n        }\n    }\n\n    /**\n     * Get the current value of the named property\n     * @param name Property name\n     */\n    public get<U = any>(name: string): U {\n        return this._subjects[name] && this._subjects[name] instanceof BehaviorSubject\n            ? (this._subjects[name] as BehaviorSubject<U>).getValue()\n            : null;\n    }\n\n\n    /**\n     * Listen to value change of the named property\n     * @param name Property name\n     * @param next Callback for value changes\n     */\n    public listen<U = any>(name: string, next: (_: U) => void): Subscription {\n        return this._observers[name] ? this._observers[name].subscribe(next) : null;\n    }\n\n    /**\n     * Update the value of the named property\n     * @param name Property name\n     * @param value New value\n     */\n    public set<U = any>(name: string, value: U): void {\n        if (!this._subjects[name]) {\n            this._subjects[name] = new BehaviorSubject<U>(value);\n            this._observers[name] = this._subjects[name].asObservable();\n        } else {\n            this._subjects[name].next(value);\n        }\n    }\n\n    /** Wait for settings to be initialised before setting up the application */\n    private waitForSettings() {\n        // Wait until the settings have loaded before initialising\n        this.subscription('setting_setup', this._settings.initialised.subscribe((setup) => {\n            if (setup) {\n                this.init();\n                this.unsub('setting_setup');\n            }\n        }));\n    }\n\n    /**\n     * Initialise application services\n     */\n    private init(): void {\n        this.setupComposer();\n        // Setup analytics\n        this._analytics.enabled = !!this.setting('app.analytics.enabled');\n        if (this._analytics.enabled) {\n            this._analytics.load(this.setting('app.analytics.tracking_id'));\n        }\n        this._composer.initialised.pipe(first(_ => _)).subscribe(() => {\n            this._users.init();\n            this._organisation.init();\n            this._bookings.init();\n            this._spaces.init();\n            this._polling.init();\n            this._initialised.next(true);\n        });\n        // Add service to window if in debug mode\n        if (window.debug) {\n            window.application = this;\n        }\n        this._hotkeys.listen(['Shift', 'Backslash'], () => {\n            this.navigate('bootstrap', { clear: true });\n        });\n    }\n\n    /**\n     * Initialise the composer library comms\n     */\n    private setupComposer(): void {\n        this.log('SYSTEM', 'Setting up composer...');\n        // Get application settings\n        const settings: ComposerSettings = this.setting('composer') || {};\n        const protocol = settings.protocol || location.protocol;\n        const host = settings.domain || location.hostname;\n        const port = settings.port || location.port;\n        const url = settings.use_domain ? `${protocol}//${host}:${port}` : location.origin;\n        const route = settings.route || '';\n        const mock = this.setting('mock');\n        // Generate configuration object\n        const config: PlaceOSOptions = {\n            scope: 'public',\n            host: `${host}:${port}`,\n            auth_uri: `${url}/auth/oauth/authorize`,\n            token_uri: `${url}/auth/token`,\n            redirect_uri: `${location.origin}${route}/oauth-resp.html`,\n            handle_login: !settings.local_login,\n            mock\n        };\n        if (localStorage) {\n            localStorage.setItem('oauth_redirect', location.href);\n        }\n        this._composer.setup(config);\n        this.log('SYSTEM', 'Finsihed setting up composer.');\n    }\n\n    /**\n     * Setup handler for cache change events\n     */\n    private setupCache() {\n        this.unsub('app_stable');\n        this.log('CACHE', `Initialising cache...`);\n        if (this._cache.isEnabled) {\n            this.log('CACHE', `Listening to cache events...`);\n            this._cache.activateUpdate();\n            this.subscription('cache_update', this._cache.available.subscribe((event) => {\n                const current = `current version is ${event.current.hash}`;\n                const available = `available version is ${event.available.hash}`;\n                this.log('CACHE', `Update available: ${current} ${available}`);\n                this.activateUpdate()\n            }));\n            setInterval(() => {\n                this.log('CACHE', `Checking for updates...`);\n                this._cache.checkForUpdate();\n            }, 5 * 60 * 1000);\n        }\n        this._users.init();\n        this._organisation.init();\n        this._bookings.init();\n        this._spaces.init();\n        // Add service to window if in debug mode\n        if (window.debug) {\n            window.application = this;\n        }\n\n        this._hotkeys.listen(['Shift', 'Backslash'], () => {\n            this.navigate('bootstrap', { clear: true });\n        });\n    }\n\n    /**\n     * Update the cache and reload the page\n     */\n    private activateUpdate() {\n        if (this._cache.isEnabled) {\n            this.log('CACHE', `Activating changes to the cache...`);\n            this._cache.activateUpdate().then(() => location.reload(true));\n        }\n    }\n\n    /**\n     * Pre-register available overlays\n     */\n    private registerOverlays(): void {\n        if (OVERLAY_REGISTER) {\n            for (const overlay of OVERLAY_REGISTER) {\n                this._overlay.register(overlay.id, overlay.config);\n            }\n        }\n    }\n}\n","import { ADynamicFormField } from '@acaprojects/ngx-dynamic-forms';\nimport { Subject } from 'rxjs';\n\nimport { BaseClass } from '../../shared/base.class';\nimport { HashMap } from '../../shared/utilities/types.utilities';\n\nexport interface IDataClassEvent {\n    type: string;\n    metadata: HashMap;\n}\n\nexport class BaseDataClass extends BaseClass {\n    /** Unique Identifier of the object */\n    readonly id: string;\n    /** Human readable name of the object */\n    readonly name: string;\n    /** Email address associated with the object */\n    readonly email: string;\n    /** Subject for change events to the class object */\n    readonly changeEvents = new Subject<IDataClassEvent>();\n    /** Form Fields for the object */\n    protected _form_fields: ADynamicFormField[];\n    /** Metadata to pass to form fields */\n    protected _form_metadata: HashMap;\n\n    constructor(protected service: any, raw_data: HashMap) {\n        super();\n        this.id = raw_data.id || raw_data.zone_id || raw_data.email || `${Math.floor(Math.random() * 9999999999)}`;\n        this.name = raw_data.name;\n        this.email = (raw_data.email || '').toLowerCase();\n        this._form_metadata = raw_data.form_metadata || {};\n    }\n\n    /** Get form field metadata for the object */\n    public get form_fields(): ADynamicFormField[] {\n        if (!this._form_fields) {\n            this._form_fields = this.initialiseFormFields();\n        }\n        return this._form_fields;\n    }\n\n    /** Whether form fields are valid */\n    public get valid(): boolean {\n        return this._form_fields ? this._form_fields.reduce((a, i) => a && i.isValid(), true) : false;\n    }\n\n    /** Whether the form has changes */\n    public get changes(): boolean {\n        return this.formChanges().length > 0;\n    }\n\n    /**\n     * Reset the values on the form to their initial state\n     */\n    public resetForm(): void {\n        if (this._form_fields) {\n            for (const field of this._form_fields) {\n                field.setValue(this[field.key]);\n            }\n        }\n    }\n\n    /**\n     * Get a list of the field names that have changed values\n     */\n    public formChanges(): string[] {\n        const changed: string[] = [];\n        if (this._form_fields) {\n            for (const field of this._form_fields) {\n                if (field.getValue() !== this[field.key]) {\n                    changed.push(field.key);\n                }\n            }\n        }\n        return changed;\n    }\n\n    /**\n     * Save form changes to server\n     */\n    public save(): Promise<BaseDataClass> {\n        if (this.changes && this.service) {\n            this._form_fields.forEach(i => i.showErrors(true));\n            if (this.valid) {\n                const form = this.formValues();\n                return this.id\n                    ? this.service.update(this.id, form)\n                    : this.service.add(form);\n            }\n        }\n    }\n\n    /**\n     * Delete this item from the server\n     */\n    public delete(): Promise<void> {\n        if (this.id) {\n            return this.service.delete(this.id);\n        }\n    }\n\n    /**\n     * Run task for this item on the service\n     * @param task_name Name of the task\n     * @param parameters Parameters to pass to the task request\n     */\n    public runTask(task_name: string, parameters: HashMap): Promise<void> {\n        if (this.id) {\n            return this.service.task(this.id, task_name, parameters);\n        }\n    }\n\n    /**\n     * Get a map of the field values\n     */\n    public toJSON(): HashMap {\n        if (!this._form_fields) {\n            this._form_fields = this.initialiseFormFields();\n        }\n        const json = this.formValues();\n        json.id = this.id;\n        delete json.changed_fields;\n        return json;\n    }\n\n    /**\n     * Emits change event\n     * @param type Type of change that has occurred\n     * @param metadata Supporting metadata for the event\n     */\n    public emit(type: string, metadata?: HashMap): void {\n        this.changeEvents.next({ type, metadata })\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): BaseDataClass {\n        return new BaseDataClass(this.service, this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): BaseDataClass {\n        return new BaseDataClass(this.service, { ...this, id: null, email: null });\n    }\n\n    /**\n     * Get the mapped values of the form fields\n     */\n    protected formValues(field_list: ADynamicFormField[] = this._form_fields, changes: boolean = true): HashMap {\n        const values: HashMap = {};\n        for (const field of field_list) {\n            if (field.children && field.children.length > 0) {\n                values[field.key] = this.formValues(field.children, false);\n            } else {\n                values[field.key] = field.getValue();\n            }\n        }\n        if (changes) {\n            values.changed_fields = this.formChanges();\n        }\n        return values;\n    }\n\n    /**\n     * Initialise the form field metadata for the field\n     */\n    protected initialiseFormFields(): ADynamicFormField[] {\n        const edit = !!this.id;\n        const fields: ADynamicFormField[] = [\n            new ADynamicFormField({\n                key: 'name',\n                type: 'input',\n                value: this.name\n            }),\n            new ADynamicFormField({\n                key: 'email',\n                type: 'input',\n                value: this.email,\n                required: true,\n                attributes: { type: 'email' }\n            })\n        ];\n        return fields;\n    }\n}\n","import { ComposerService } from '@placeos/composer';\nimport { EngineHttpClient } from '@placeos/ts-client';\nimport { BehaviorSubject, Observable, Subject, Subscriber, Subscription } from 'rxjs';\n\nimport { BaseDataClass } from './base-api.class';\nimport { BaseClass } from '../../shared/base.class';\nimport { ApplicationService } from '../app.service';\nimport { HashMap } from '../../shared/utilities/types.utilities';\nimport { toQueryString } from '../../shared/utilities/api.utilities';\nimport { distinctUntilChanged, map, tap } from 'rxjs/operators';\n\nexport interface IEngineResponse {\n    results: HashMap[];\n    total: number\n}\n\nexport class BaseAPIService<T = BaseDataClass> extends BaseClass {\n    /** Application service */\n    public parent: ApplicationService;\n    /** Display name of the service */\n    protected _name: string;\n    /** API Route of the service */\n    protected _api_route: string;\n    /** Map of state variables for Service */\n    protected _subjects: { [key: string]: BehaviorSubject<any> | Subject<any> } = {};\n    /** Map of observables for state variables */\n    protected _observers: { [key: string]: Observable<any> } = {};\n    /** Map of poll subscribers for API endpoints */\n    protected _subscribers: { [key: string]: Subscriber<any> } = {};\n    /** Map of promises for Service */\n    protected _promises: { [key: string]: Promise<any> } = {};\n    /** Comparison function for service items */\n    protected _compare: (a: T, b: T) => boolean = (a, b) => a === b || (a as any).id === (b as any).id;\n    /** Default filter function for list method */\n    protected _list_filter: (a: T) => boolean = (a) => !!a;\n\n    private get http(): EngineHttpClient {\n        return this._composer.http;\n    }\n\n    constructor(protected _composer: ComposerService) {\n        super();\n        this._name = 'Base';\n        this._api_route = 'base';\n        this.set('list', []);\n    }\n\n    /**\n     * Initailise service\n     */\n    public init() {\n        if (!this.parent || !this.parent.is_initialised) {\n            return this.timeout('init', () => this.init());\n        }\n        this.load().then(_ => this._initialised.next(true));\n    }\n\n    /**\n     * Get API route for the service\n     * @param engine Whether endpoint is using the application API or engine API\n     */\n    public route(engine: boolean = false) {\n        const endpoint = this.parent ? (engine ? this.parent.engine_endpoint : this.parent.endpoint) : '/api/';\n        return `${endpoint}${this._api_route}`;\n    }\n\n    /** API Route of the service */\n    public get api_route() {\n        return this._api_route;\n    }\n\n    /**\n     * Get a service related setting from the settings service\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string) {\n        return this.parent ? this.parent.setting(`app.${this._name.toLowerCase()}.${key}`) : null;\n    }\n\n    /**\n     * Get the current value of the named property\n     * @param name Property name\n     */\n    public get<U = any>(name: string): U {\n        return this._subjects[name] && this._subjects[name] instanceof BehaviorSubject\n            ? (this._subjects[name] as BehaviorSubject<U>).getValue()\n            : null;\n    }\n\n\n    /**\n     * Listen to value change of the named property\n     * @param name Property name\n     * @param next Callback for value changes\n     */\n    public listen<U = any>(name: string, next: (_: U) => void): Subscription {\n        return this._observers[name] ? this._observers[name].subscribe(next) : null;\n    }\n\n    /**\n     * Update the value of the named property\n     * @param name Property name\n     * @param value New value\n     */\n    protected set<U = any>(name: string, value: U): void {\n        if (!this._subjects[name]) {\n            this._subjects[name] = new BehaviorSubject<U>(value);\n            this._observers[name] = this._subjects[name].asObservable();\n        } else {\n            this._subjects[name].next(value);\n        }\n    }\n\n    /**\n     * Get list of loaded items\n     * @param filterFn Function for filtering the list\n     */\n    public list(filterFn: (a: T) => boolean = this._list_filter): T[] {\n        const list = this.get('list') || [];\n        return list.reduce((a, i) => {\n            if (filterFn(i)) {\n                a.push(i);\n            }\n            return a;\n        }, []);\n    }\n\n    /**\n     * Get item with the given id from the loaded items\n     * @param id ID of the item\n     */\n    public item(id: string): T {\n        const list = this.get('list') || [];\n        return list.find(i => i.id === id || i.email === id);\n    }\n\n    /**\n     * Query the index of the API route associated with this service\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public query(query_params: HashMap = { update_list: true }): Promise<T[] | HashMap[]> {\n        let engine = false;\n        let cache = 1000;\n        if (query_params) {\n            engine = !!query_params.engine;\n            delete query_params.engine;\n            cache = query_params.cache || 1000;\n            delete query_params.cache;\n        }\n        const query = toQueryString(query_params);\n        const key = `query|${query}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise((resolve, reject) => {\n                const url = `${this.route(engine)}${query ? '?' + query : ''}`;\n                let result: T[] | HashMap[] = [];\n                this.http.get(url).subscribe(\n                    (d: IEngineResponse | HashMap[]) => {\n                        result = d && d instanceof Array\n                            ? d.map(i => this.process(i))\n                            : (d && !(d instanceof Array) && d.results\n                                ? d.results as HashMap[]\n                                : []);\n                    }, e => {\n                        reject(e);\n                        this._promises[key] = null;\n                    },\n                    () => {\n                        if ((!query || (query_params && query_params.update_list)) && result.length > 0 && result[0] instanceof BaseDataClass) {\n                            this.set('list', this.updateList(this.get('list'), result as T[]));\n                        }\n                        resolve(result);\n                        this.timeout(key, () => (this._promises[key] = null), cache);\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Query the API route for a sepecific item\n     * @param id ID of the item\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public show(id: string, query_params: HashMap = {}): Promise<T> {\n        let engine = false;\n        if (query_params) {\n            engine = !!query_params.engine;\n            delete query_params.engine;\n        }\n        const query = toQueryString(query_params);\n        const key = `show|${id}|${query}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<T>((resolve, reject) => {\n                const url = `${this.route(engine)}/${id}${query ? '?' + query : ''}`;\n                let result: T = null;\n                this.http.get(url).subscribe(\n                    d => result = this.process(d),\n                    e => {\n                        reject(e);\n                        this._promises[key] = null;\n                    },\n                    () => {\n                        resolve(result);\n                        this.timeout(key, () => (this._promises[key] = null), 1000);\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Make post request for a new item to the service\n     * @param form_data Data to post to the server\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public add(form_data: HashMap, query_params: HashMap = {}): Promise<T> {\n        if (!this._promises.new_item) {\n            this._promises.new_item = new Promise<T>((resolve, reject) => {\n                const query = toQueryString(query_params);\n                const url = `${this.route(query_params.engine)}${query ? '?' + query : ''}`;\n                let result: T = null;\n                this.http.post(url, form_data).subscribe(\n                    d => (result = this.process(d)),\n                    e => {\n                        reject(e);\n                        this.analyticsEvent(`create-${this._name.toLowerCase()}-failed`);\n                        this._promises.new_item = null;\n                    },\n                    () => {\n                        resolve(result);\n                        this.set('list', this.updateList(this.get('list'), [result]));\n                        this.analyticsEvent(`create-${this._name.toLowerCase()}-success`);\n                        this._promises.new_item = null;\n                    }\n                );\n            });\n        }\n        return this._promises.new_item;\n    }\n\n    /**\n     * Perform API task for the given item ID\n     * @param id ID of the item\n     * @param task_name Name of the task\n     * @param form_data Map of data to pass to the API\n     */\n    public task<U = any>(id: string, task_name: string, form_data: HashMap = {}): Promise<U> {\n        const query = toQueryString(form_data);\n        const key = `task|${id}|${task_name}|${query}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<U>((resolve, reject) => {\n                const post_data = { ...form_data, id, _task: task_name };\n                const url = `${this.route(form_data.engine)}/${id}/${task_name}`;\n                let result = null;\n                this.http.post(url, post_data).subscribe(\n                    d => result = d,\n                    e => {\n                        reject(e);\n                        this.analyticsEvent(`${this._name.toLowerCase()}-task-${task_name}-failed`, id);\n                        this._promises[key] = null;\n                    },\n                    () => {\n                        resolve(result as U);\n                        this.analyticsEvent(`${this._name.toLowerCase()}-task-${task_name}-success`, id);\n                        this.timeout(key, () => this._promises[key] = null, 1000);\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Setup a poller for an API endpoint\n     * @param id Show request ID. Leave blank to poll on the query endpoint\n     * @param query_params Map of query paramaters to add to the polled URL\n     * @param delay Delay between each poll event\n     */\n    public poll(id?: string, query_params: HashMap = {}, delay: number = 5000): Observable<T | T[]> {\n        const key = `poll|${id || ''}|${toQueryString(query_params) || ''}`;\n        this.stopPoll(id, query_params);\n        this._subjects[key] = new Subject<T | T[]>();\n        this._observers[key] = this._subjects[key].asObservable();\n        const sub = this._subjects[key];\n        const query = { ...(query_params || {}), _poll: true };\n        if (id) {\n            this.show(id, query).then((d) => sub.next(d), e => sub.error(e));\n            this.interval(key, () => {\n                this.show(id, query).then((d) => sub.next(d), e => sub.error(e));\n            }, delay);\n        } else {\n            this.query(query).then((d) => sub.next(d), e => sub.error(e));\n            this.interval(key, () => {\n                this.query(query).then((d) => sub.next(d), e => sub.error(e));\n            }, delay);\n        }\n        return this._observers[key];\n    }\n\n    /**\n     * Destroy poller\n     * @param id\n     * @param query_params\n     */\n    public stopPoll(id?: string, query_params: HashMap = {}) {\n        const key = `poll|${id || ''}|${toQueryString(query_params) || ''}`;\n        if (this._subjects[key]) {\n            this._subjects[key].complete();\n            this._subjects[key] = null;\n            this._observers[key] = null;\n        }\n    }\n\n    /**\n     * Make put request for changes to the item with the given id\n     * @param id ID of the item being updated\n     * @param form_data New values for the item\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public update(id: string, form_data: HashMap, query_params: HashMap = {}): Promise<T> {\n        const key = `update|${id}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<T>((resolve, reject) => {\n                const query = toQueryString(query_params);\n                const url = `${this.route(query_params.engine)}/${id}${query ? '?' + query : ''}`;\n                let result: T = null;\n                this.http.put(url, form_data).subscribe(\n                    d => (result = this.process(d)),\n                    e => {\n                        reject(e);\n                        this.analyticsEvent(`update-${this._name.toLowerCase()}-failed`, id);\n                        this._promises[key] = null;\n                    },\n                    () => {\n                        resolve(result);\n                        this.set('list', this.updateList(this.removeItem(this.get('list'), { id } as any), [result]));\n                        this.analyticsEvent(`update-${this._name.toLowerCase()}-success`, id);\n                        this._promises[key] = null;\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Make delete request for the given item\n     * @param id ID of item\n     */\n    public delete(id: string): Promise<void> {\n        const key = `delete|${id}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<void>((resolve, reject) => {\n                const url = `${this.route()}/${id}`;\n                this.http.delete(url).subscribe(\n                    _ => null,\n                    e => reject(e),\n                    () => {\n                        this.set('list', this.removeItem(this.get('list'), ({ id } as any)));\n                        resolve();\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Add new API item from another service or API class\n     * @param id ID of the item/or service adding the new item\n     * @param data Raw API data for the new item\n     * @param type Adder type\n     */\n    public addFrom(id: string, data: HashMap, type: 'class' | 'service' | 'other' = 'other'): string {\n        const new_item = this.process(data);\n        this.set('list', this.updateList(this.get('list'), [new_item]));\n        return (new_item as any).id;\n    }\n\n    /**\n     * Remove items with the given IDs from the list\n     * @param id ID of the item/or service remove the list of items\n     * @param remove_ids List of item IDs to remove\n     * @param type Remover type\n     */\n    public removeFrom(id: string, remove_ids: string[], type: 'class' | 'service' | 'other' = 'other') {\n        const list = this.get('list');\n        for (const item_id of remove_ids) {\n            const index = list.findIndex(item => item.id === item_id);\n            if (index >= 0) {\n                list.splice(index, 1);\n            }\n        }\n        this.set('list', list);\n    }\n\n    /**\n     * Load initial data for the service\n     */\n    protected load(): Promise<void> {\n        return new Promise<void>((resolve) => {\n            resolve();\n        });\n    }\n\n    /**\n     * Post analytics event for this service\n     * @param action Name of the action to post\n     */\n    protected analyticsEvent(action: string, label?: string) {\n        if (this.parent && this.parent.Analytics) {\n            this.parent.Analytics.event(this._name, `${this.parent.name.toLowerCase()}-${action}`, label);\n        }\n    }\n\n    /**\n     * Convert raw API data into a valid API Object\n     * @param raw_item Raw API data\n     */\n    protected process(raw_item: HashMap): T {\n        return raw_item as T;\n    }\n\n    /**\n     * Update recorded list of items\n     * @param old_list Old list of items\n     * @param list List of updated items\n     * @param compareFn Function to compare items to remove duplicates\n     */\n    protected updateList(old_list: T[], list: T[], compareFn: (a: T, b: T) => boolean = this._compare): T[] {\n        if (!list || list.length === 0) {\n            return old_list;\n        }\n        const new_list: T[] = [];\n        const mixed_list = [...list, ...old_list];\n        if (!compareFn) {\n            compareFn = this._compare;\n        }\n        for (const item of mixed_list) {\n            const found = new_list.find(i => compareFn(i, item));\n            if (!found) {\n                new_list.push(item);\n            }\n        }\n        return new_list;\n    }\n\n    /**\n     * Remove the given item from the given list\n     * @param list List of items\n     * @param item Item to remove\n     * @param compareFn Function to compare items\n     */\n    protected removeItem(list: T[], item: T, compareFn?: (a: T, b: T) => boolean) {\n        const new_list = [];\n        if (!compareFn) {\n            compareFn = this._compare;\n        }\n        list.forEach(i => compareFn(item, i) ? null : new_list.push(i));\n        return new_list;\n    }\n}\n","\nimport { formatDate } from '@angular/common';\nimport { Validators } from '@angular/forms';\nimport { ADynamicFormField } from '@acaprojects/ngx-dynamic-forms';\n\nimport { BaseDataClass } from '../base-api.class';\nimport { User } from '../users/user.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\nimport { humaniseDuration } from '../../../shared/utilities/general.utilities';\nimport { Space } from '../spaces/space.class';\nimport { FORM_FIELDS } from '../../../shared/globals/form-fields';\n\nimport { formatAttendeesWithHost, formatRecurrence, formatSpaces } from '../../../shared/utilities/formatting.utilities';\nimport { validateDate, buildValidateDuration, buildValidateAttendees } from '../../../shared/utilities/validation.utilities';\n\nimport * as dayjs from 'dayjs';\nimport { BaseAPIService } from '../base.service';\n\nexport class Booking extends BaseDataClass {\n    /** Unique calendar event ID */\n    readonly icaluid: string;\n    /** Subject or title of the booking */\n    readonly title: string;\n    /** Unix timestamp of the booking start */\n    readonly date: number;\n    /** Length of the booking in minutes */\n    readonly duration: number;\n    /** Description or details of the booking */\n    readonly body: string;\n    /** Supplimentary notes for the booking */\n    readonly notes: string;\n    /** Type of booking */\n    readonly type: string;\n    /** Whether the booking has catering associated with it */\n    readonly catering: boolean;\n    /** String location set in booking */\n    readonly _location: string;\n    /** List of attendee emails associated with the booking */\n    private _attendees: string[];\n    /** Email of the host or organiser of the booking */\n    private _organiser: string;\n    /** List of spaces associated with the booking */\n    private _space_list: string[];\n    /** Cached display strings */\n    private _display: HashMap<string> = {};\n\n    constructor(protected service: BaseAPIService<Booking>, raw_data: HashMap) {\n        super(service, raw_data);\n        const u_service = service.parent.Users;\n        this.icaluid = raw_data.icaluid || this.id;\n        this.title = raw_data.title || raw_data.subject || raw_data.Subject;\n        const start = dayjs(raw_data.date || raw_data.start || raw_data.start_epoch * 1000 || raw_data.Start);\n        this.date = start.valueOf();\n        this.duration = raw_data.duration || dayjs(raw_data.end || raw_data.end_epoch * 1000 || raw_data.End).diff(start, 'm');\n        this.body = raw_data.body || raw_data.description;\n        this.notes = raw_data.notes;\n        this.type = raw_data.type || (raw_data.visitors ? 'external' : null) || 'internal';\n        this.catering = raw_data.catering;\n        this._attendees = (raw_data.attendees || raw_data._attendees || []).map(i => u_service.item(i.email) || new User(u_service, i));\n        const organiser = raw_data.organiser || raw_data.organizer || { email: `${raw_data.owner}@fake.org` };\n        if (raw_data.owner) {\n            this.service.parent.Users.addFrom('booking', { name: raw_data.owner, email: `${raw_data.owner}@fake.org` });\n        }\n        this._organiser = organiser.email || raw_data._organiser;\n        this._location = raw_data.location || raw_data._location;\n        this._display = {\n            date: start.format('DD MMM YYYY'),\n            time: `${start.format('h:mma')} - ${dayjs(start)\n                .add(this.duration, 'm')\n                .format('h:mma')}`,\n            start: start.format('h:mma'),\n            end: dayjs(start)\n                .add(this.duration, 'm')\n                .format('h:mma'),\n            duration: humaniseDuration(this.duration)\n        };\n        this._space_list = raw_data.room_ids || raw_data._space_list;\n        // Add attendees and organiser to service data\n        if (this.service.parent && this.service.parent.Users) {\n            if (raw_data.attendees) {\n                raw_data.attendees.forEach(u => {\n                    if (!this.service.parent.Users.item(u.email)) {\n                        this.service.parent.Users.addFrom(this.id, u, 'class');\n                    }\n                });\n            }\n            if (organiser) {\n                if (!this.service.parent.Users.item(organiser.email)) {\n                    this.service.parent.Users.addFrom(this.id, organiser, 'class');\n                }\n            }\n        }\n    }\n\n    /** List of attendees to the meeting */\n    public get attendees(): User[] {\n        return this.service && this.service.parent && this.service.parent.Users\n            ? this.service.parent.Users.list((user) => this._attendees.indexOf(user.id) >= 0)\n            : [];\n    }\n\n    /** Host or organiser of the meeting */\n    public get organiser(): User {\n        return this.service && this.service.parent && this.service.parent.Users && this._organiser\n            ? this.service.parent.Users.item(this._organiser) : null;\n    }\n\n    /** Status of the booking */\n    public get status(): 'future' | 'upcoming' | 'done' | 'started' | 'in_progress' {\n        const now = dayjs();\n        const date = dayjs(this.date);\n        if (now.isBefore(date.subtract(15, 'm'), 'm')) {\n            return 'future';\n        } else if (now.isBefore(date, 'm')) {\n            return 'upcoming';\n        } else if (now.isBefore(date.add(15, 'm'), 'm')) {\n            return 'started';\n        } else if (now.isBefore(date.add(this.duration, 'm'), 'm')) {\n            return 'in_progress';\n        }\n        return 'done';\n    }\n\n    /** Get the first space from the space list */\n    public get space(): Space {\n        return this.service && this.service.parent && this.service.parent.Spaces && this._space_list && this._space_list.length > 0\n            ? this.service.parent.Spaces.item(this._space_list[0]) : null;\n    }\n    /** Spaces associated with the booking */\n    public get space_list(): Space[] {\n        return this.service && this.service.parent && this.service.parent.Spaces\n            ? this.service.parent.Spaces.list((space) => this._space_list.indexOf(space.id) >= 0)\n            : [];\n    }\n\n    /** Display value for the date */\n    public get date_string(): string {\n        return this._display.date;\n    }\n    /** Display valuie for the start and end times of the booking */\n    public get time_period(): string {\n        return this._display.time;\n    }\n    /** Display value for the start time of the booking */\n    public get start_time(): string {\n        return this._display.start;\n    }\n    /** Display value for the end time of the booking */\n    public get end_time(): string {\n        return this._display.end;\n    }\n    /** Display value for the duration of the booking */\n    public get length_string(): string {\n        return this._display.duration;\n    }\n    /** Display value for the location of the booking */\n    public get location(): string {\n        return this._display.space_names || this._location || 'No location set';\n    }\n    /** Display value for the level of the first space in the booking */\n    public get level(): string {\n        return this._display.level;\n    }\n\n    /**\n     * Create form fields for the object\n     */\n    protected initialiseFormFields(): ADynamicFormField[] {\n        const form_fields = [];\n        const form_settings = this.service.setting('fields') || [];\n        const user = this.service.parent.Users.current;\n        const actions = {\n            // space: () => this.setSpace(),\n            // recurrence: () => this.setRecurrence(),\n            // conferencing: (v?) => this.setConferencing(v)\n        };\n        const validators = {\n            date: [validateDate],\n            duration: [buildValidateDuration()],\n            attendees: [buildValidateAttendees(user, this.service.setting('min_attendees'))],\n            terms: [Validators.requiredTrue]\n        };\n        const formatters = {\n            attendees: formatAttendeesWithHost(user),\n            date: formatDate,\n            space: formatSpaces,\n            recurrence: formatRecurrence\n        };\n        const custom_elements = FORM_FIELDS;\n        const defaults = {};\n        const process_field = field => {\n            const f = {\n                key: field.key,\n                label: field.label,\n                icon: field.icon,\n                type: field.control_type || field.type,\n                value: this[field.key] || defaults[field.key] || '',\n                action: field.action || actions[field.key],\n                format: field.format || formatters[field.key],\n                content: field.content || custom_elements[field.key],\n                required: field.required,\n                validators: validators[field.key],\n                references: field.references || field.refs,\n                hide: field.hide,\n                metadata: { ...field.metadata, ...this._form_metadata, service: this.service },\n                attributes: { flex: field.flex },\n                children: field.children ? field.children.map(i => process_field(i)) : null\n            };\n            return new ADynamicFormField(f);\n        };\n        for (const field of form_settings) {\n            if (field.key) {\n                form_fields.push(process_field(field));\n            }\n        }\n        return form_fields;\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): Booking {\n        return new Booking(this.service, this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): Booking {\n        return new Booking(this.service, { ...this, id: null, email: null, icaluid: null });\n    }\n}\n","import { padZero } from '../../../shared/utilities/general.utilities';\n\nimport { generateMockUser } from '../users/user.utilities';\n\nimport * as faker from 'faker';\nimport * as dayjs from 'dayjs';\nimport { Booking } from './booking.class';\n\nlet BOOKING_COUNT = 0;\nlet BOOKING_DATE = dayjs().minute(0).startOf('m');\n\n/**\n * Set the initial time used for generating mock bookings\n * @param time New initial time as ms from UTC epoch\n */\nexport function setMockBookingStartDatetime(time: number) {\n    BOOKING_DATE = dayjs(time).startOf('m');\n}\n\n/**\n * Create mock raw API data for a booking\n * @param id\n */\nexport function generateMockBooking(id?: string) {\n    if (!id) {\n        id = `booking-${BOOKING_COUNT++}`;\n    }\n    BOOKING_DATE = BOOKING_DATE.add(Math.floor(Math.random() * 4) + 15, 'm');\n    const start = BOOKING_DATE.valueOf();\n    const duration = Math.floor(Math.random() * 4) + 30;\n    BOOKING_DATE = BOOKING_DATE.add(Math.floor(Math.random() * 4) + 15, 'm');\n    return {\n        id,\n        icaluid: padZero(Math.floor(Math.random() * 99999999), 8),\n        title: `${faker.commerce.productName()} Meeting`,\n        attendees: Array(Math.floor(Math.random() * 5 + 2))\n            .fill(0)\n            .map(i => generateMockUser()),\n        organiser: generateMockUser(),\n        date: start,\n        duration,\n        description: faker.lorem.paragraph(),\n        notes: faker.lorem.paragraph(),\n        location: faker.address.city(),\n        catering: Math.floor(Math.random() * 34567) % 3 === 0\n    };\n}\n\nexport interface IBookingSlot {\n    start: number;\n    end: number;\n}\n\n/**\n * Generate a list of free time slots between the given bookings\n * @param list List of bookings to find slots between\n * @param min_size Minimum length of a free slot in minutes\n */\nexport function getFreeBookingSlots(list: Booking[], min_size: number = 30): IBookingSlot[] {\n    if (!list) { return [{ start: 0, end: dayjs().startOf('m').valueOf() * 10 }] }\n    const slots: IBookingSlot[] = [];\n    let start = dayjs(0);\n    list.sort((a, b) => a.date - b.date);\n    for (const booking of list) {\n        const bkn_start = dayjs(booking.date);\n        const bkn_end = bkn_start.add(booking.duration, 'm');\n        if (bkn_start.isAfter(start)) {\n            const diff = bkn_start.diff(start, 'm');\n            if (diff >= min_size) {\n                slots.push({ start: start.valueOf(), end: bkn_start.valueOf() });\n            }\n            start = bkn_end;\n        }\n    }\n    slots.push({ start: start.valueOf(), end: dayjs().startOf('m').valueOf() * 10 })\n    return slots;\n}\n\n/**\n * Get the next free time slot from the given bookings\n * @param list List of bookings to find the next slot\n * @param date Date to find next slot after in ms since UTC epoch\n * @param min_size Minimum length of the free slot in minutes\n */\nexport function getNextFreeBookingSlot(list: Booking[], date: number = dayjs().valueOf(), min_size: number = 30): IBookingSlot {\n    const slots = getFreeBookingSlots(list, min_size);\n    const time = dayjs(date).startOf('m').second(1);\n    for (const block of slots) {\n        const start = dayjs(block.start).startOf('m');\n        const end = dayjs(block.end).startOf('m');\n        if (start.isAfter(time, 's')) {\n            return block;\n        } else if (time.isBefore(end, 's')) {\n            const duration = end.diff(time, 'm');\n            if (duration >= min_size) {\n                return block;\n            }\n        }\n    }\n    return slots[slots.length - 1];\n}\n","\nimport { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\n\nimport { BaseAPIService } from '../base.service';\nimport { Booking } from './booking.class';\nimport { Space } from '../spaces/space.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\nimport { BookingData } from '../../../overlays/booking-modal/booking-modal.component';\n\nimport * as dayjs from 'dayjs';\n\nexport interface IBookingOptions {\n    space: Space;\n    date?: number;\n    title?: string;\n    max_duration?: number;\n    min_duration?: number;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class BookingsService extends BaseAPIService<Booking> {\n    constructor(protected _composer: ComposerService) {\n        super(_composer);\n        this._name = 'Bookings';\n        this._api_route = 'bookings';\n        this._compare = (a, b) => !a.id.localeCompare(b.id) || !a.icaluid.localeCompare(b.icaluid);\n    }\n\n    /**\n     * Open form modal for creating new bookings\n     * @param space Space to make booking in\n     * @param date Default date on the form\n     */\n    public new(options: IBookingOptions) {\n        if (options.space) {\n            this.parent.Overlay.open('booking', {\n                config: 'modal',\n                data: options as any\n            }, (event: { type: string, data: BookingData }) => {\n                const booking = event.data.booking.toJSON();\n                this.timeout('book', () => {\n                    this.create(options.space, booking)\n                        .then(() => {\n                            this.parent.notifySuccess('Booking successfully created');\n                            event.data.close ? event.data.close() : ''\n                        }).catch(_ => {\n                            this.parent.notifyError(`Error creating meeting. ${_}`);\n                            event.data.on_error ? event.data.on_error() : '';\n                        });\n                }, 1000);\n            });\n        }\n    }\n\n    /**\n     * Create new booking with the given properties\n     * @param booking New booking data\n     */\n    private create(space: Space, booking: HashMap) {\n        return new Promise((resolve, reject) => {\n            if (space) {\n                const request = {\n                    title: booking.title,\n                    count: {\n                        staff: booking.num_staff ? +booking.num_staff : 0,\n                        partners: booking.num_partners ? +booking.num_partners : 0,\n                    },\n                    staff_id: '', // data.form.user.staff_code,\n                    start: booking.date.valueOf(),\n                    end: dayjs(booking.date).add(booking.period.duration, 'm').valueOf(),\n                    host: booking.host || booking.user || { name: 'Panel User' }\n                };\n                const module = this.parent.Systems.get(space.id, 'Bookings');\n                if (request && module) {\n                    module.exec('create_meeting', [request]).then(() => {\n                        this.analyticsEvent('create-success');\n                        resolve();\n                    }, (err) => {\n                        this.analyticsEvent('create-failed');\n                        reject(`Error making booking: ${err}`);\n                    })\n                } else {\n                    reject(`No Bookings module found for space ${space.id}`);\n                }\n            } else {\n                reject('No space set for booking');\n            }\n        });\n    }\n\n    protected process(raw_data: HashMap): Booking {\n        return new Booking(this, raw_data);\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport { HashMap, Identity } from '../../../shared/utilities/types.utilities';\nimport { getItemWithKeys } from '../../../shared/utilities/general.utilities';\nimport { BaseAPIService } from '../base.service';\nimport { Organisation } from './organisation.class';\n\nexport interface IBuildingRoleUser {\n    name: string;\n    email: string;\n    phone: string;\n}\n\nexport interface LockerMap {\n    [zone: string]: {\n        [area: string]: {\n            [type: string]: (string | boolean)[][];\n        };\n    };\n}\n\nexport interface ICoordinates {\n    longitude: number;\n    latitude: number;\n}\n\nexport interface IMapFeature {\n    id: string;\n    level_id: string;\n    name: string;\n}\n\nexport class Building extends BaseDataClass {\n    /** Engine Zone ID for the building */\n    readonly zone_id: string;\n    /** List of available extras for the building */\n    private _extras: Identity[];\n    /** List of available extra equipment for loan at the building */\n    private _loan_items: Identity[];\n    /** List of available levels for the building */\n    private _levels: Identity[];\n    /** Map of custom settings for the building */\n    private _settings: HashMap;\n    /** Map of roles and list of the associated users */\n    private _roles: HashMap<IBuildingRoleUser[]>;\n    /** Map of the locker ID arrays */\n    private _lockers: LockerMap;\n    /** Map of important system ids for the building */\n    private _systems: HashMap<string>;\n    /** Map of important phone numbers for the building */\n    private _phone_numbers: HashMap<string>;\n    /** Globe coordiates for the build */\n    private _location: ICoordinates;\n    /** List of zones associated with the building */\n    private _zones: string[];\n    /** Searchable map features */\n    private _searchables: IMapFeature[];\n\n    constructor(protected service: BaseAPIService<Organisation>, raw_data: HashMap) {\n        super(service, raw_data);\n        this.zone_id = raw_data.zone_id || raw_data.zone;\n        this._extras = (raw_data.extras || []).map(i => ({ id: i.extra_id || i.id, name: i.extra_name || i.name }));\n        this._loan_items = (raw_data.loan_items || []).map(i => ({ id: i.extra_id || i.id, name: i.extra_name || i.name }));\n        this._levels = (raw_data.levels || []).map(i => ({ id: i.level_id || i.id, name: i.level_name || i.name }));\n        this._roles = raw_data.roles || {};\n        this._lockers = raw_data.lockers || raw_data.locker_structure || {};\n        this._systems = raw_data.systems || {};\n        this._settings = raw_data.settings || {};\n        this._phone_numbers = raw_data.phone_numbers || {};\n        this._location = raw_data.location || { longitude: null, latitude: null };\n        this._searchables = [];\n        if (raw_data.neighbourhoods) {\n            for (const lvl in raw_data.neighbourhoods) {\n                if (raw_data.neighbourhoods.hasOwnProperty(lvl)) {\n                    const lvl_features = raw_data.neighbourhoods[lvl] || {};\n                    for (const feature in lvl_features) {\n                        if (lvl_features.hasOwnProperty(feature)) {\n                            this._searchables.push({\n                                id: lvl_features[feature],\n                                name: feature,\n                                level_id: lvl\n                            });\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    /** List of available extras for the building */\n    public get extras(): Identity[] {\n        return [...(this._extras || [])];\n    }\n    /** List of available extras for the building */\n    public get loan_items(): Identity[] {\n        return [...(this._loan_items || [])];\n    }\n    /** List of available levels for the building */\n    public get levels(): Identity[] {\n        return [...(this._levels || [])];\n    }\n    /**\n     * Get a custom building setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        const keys = key.split('.');\n        const value = getItemWithKeys(keys, this._settings);\n        return value;\n    }\n\n    /**\n     * Get list of users with the associated role\n     * @param name Role to find users for\n     */\n    public role(name: string): IBuildingRoleUser[] {\n        return [...(this._roles[name] || [])];\n    }\n    /**\n     * Get list of the names of available user role lists\n     */\n    public get role_names(): string[] {\n        return Object.keys(this._roles).filter(i => this._roles.hasOwnProperty(i));\n    }\n    /** Map of the locker ID arrays */\n    public get lockers(): LockerMap {\n        return { ...(this._lockers || {}) };\n    }\n    /** Map of important system ids for the building */\n    public get systems(): HashMap<string> {\n        return { ...(this._systems || {}) };\n    }\n    /** Map of important phone numbers for the building */\n    public get phone_numbers(): HashMap<string> {\n        return { ...(this._phone_numbers || {}) };\n    }\n    /** Real coordinates */\n    public get location(): ICoordinates {\n        return { ...this._location };\n    }\n    /** List of zones associated with the building */\n    public get zones(): string[] {\n        return [...(this._zones || [])];\n    }\n    /** Searchable map features */\n    public get searchables(): IMapFeature[] {\n        return [...(this._searchables || [])];\n    }\n\n    /**\n     * Get search map feature for the given level ID\n     * @param level_id ID of level to grab features for\n     */\n    public featuresForLevel(level_id: string): IMapFeature[] {\n        return (this._searchables || []).filter(i => i.level_id === level_id);\n    }\n\n    /**\n     * Building objects are readonly and cannot be changed\n     */\n    public async save(): Promise<Building> {\n        throw new Error('Building objects are readonly and cannot be changed');\n    }\n\n    /**\n     * Building objects are readonly and cannot be deleted\n     */\n    public async delete(): Promise<void> {\n        throw new Error('Building objects are readonly and cannot be deleted');\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\nimport { getItemWithKeys } from '../../../shared/utilities/general.utilities';\nimport { BaseAPIService } from '../base.service';\n\nexport class Organisation extends BaseDataClass {\n    /** Map of custom settings for the building */\n    private _settings: HashMap;\n\n    constructor(protected service: BaseAPIService<Organisation>, raw_data: HashMap) {\n        super(service, raw_data);\n        this._settings = raw_data.settings || {};\n    }\n\n    /**\n     * Get a custom building setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        const keys = key.split('.');\n        const value = getItemWithKeys(keys, this._settings);\n        return value;\n    }\n\n    /**\n     * Building objects are readonly and cannot be changed\n     */\n    public async save(): Promise<Organisation> {\n        throw new Error('Organisation objects are readonly and cannot be changed');\n    }\n\n    /**\n     * Building objects are readonly and cannot be deleted\n     */\n    public async delete(): Promise<void> {\n        throw new Error('Organisation objects are readonly and cannot be deleted');\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\n\nimport { BaseAPIService } from '../base.service';\nimport { Organisation } from './organisation.class';\nimport { Building } from './building.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class OrganisationService extends BaseAPIService {\n    /** Organisation data for the application */\n    private _organisation: Organisation;\n    /** Actively displayed building */\n    private _active_building: string;\n    /** Whether an error was shown when loading organisation data */\n    private shown_error: boolean;\n\n    constructor(protected _composer: ComposerService) {\n        super(_composer);\n        this._name = 'Organisation';\n        this._api_route = 'zones';\n        this.set('buildings', []);\n    }\n\n    /**\n     * Get list of levels for the given building ID\n     * @param bld_id Building ID\n     */\n    public levels(bld_id: string): any[] {\n        return (this.buildings.find(i => i.id === bld_id) || {} as Building).levels;\n    }\n\n    /**\n     * Get a setting from the organisation or active building\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string) {\n        return this.building.setting(key) || this._organisation.setting(key);\n    }\n\n    /** Active building */\n    public get building(): Building {\n        return (this.buildings.find(i => i.id === this._active_building));\n    }\n\n    public set building(bld: Building) {\n        if (bld instanceof Building) {\n            this._active_building = bld.id;\n        } else {\n            this._active_building = bld;\n        }\n    }\n\n    /** List of buildings for the organisation */\n    public get buildings(): Building[] {\n        return this.get<Building[]>('buildings') || [];\n    }\n\n    /**\n     * Get list of available equipment\n     * @param id ID of the building to get the list from. i.e. Defaults to the active building\n     */\n    public getExtras(id: string, bld_id?: string) {\n        const bld = (bld_id ? this.buildings.find(i => i.id === bld_id) : null) || this.building;\n        if (bld && id) {\n            return bld.extras.filter(i => i.id.indexOf(id) >= 0) || [];\n        }\n        return [];\n    }\n\n    /**\n     * Get the first level matching the list of given IDs\n     * @param ids List of ID to search with\n     */\n    public levelWithID(ids: string | string[]) {\n        const list = ids instanceof Array ? ids : [ids];\n        const bld_list = this.buildings;\n        for (const id of list) {\n            for (const bld of bld_list) {\n                for (const lvl of bld.levels) {\n                    if (lvl.id === id) {\n                        return lvl;\n                    }\n                }\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Initialise service data\n     */\n    protected load(): Promise<void> {\n        if (localStorage) {\n            this._active_building = localStorage.getItem(`${this.parent.name}.building`);\n        }\n        return new Promise((resolve) => {\n            this.loadOrganisation().then(() => {\n                this.loadBuildings().then(() => {\n                    this.loadLevels().then(() => resolve());\n                });\n            });\n        });\n    }\n\n    /**\n     * Load organisation data for application\n     */\n    public loadOrganisation(): Promise<void> {\n        return new Promise<void>((resolve) => {\n            this.query({ tags: 'org', engine: true }).then((org_data) => {\n                this._organisation = new Organisation(this as any, org_data[0]);\n                this.set('organisation', this._organisation);\n                this.shown_error = false;\n                resolve();\n            }, _ => {\n                if (!this.shown_error) {\n                    this.shown_error = true;\n                    this.parent.notifyError('Error loading organisation data. Retrying...');\n                }\n                this.timeout('load_org', () => this.loadOrganisation().then(() => resolve()), 1000);\n            });\n        });\n    }\n\n    /**\n     * Load buildings data for the organisation\n     */\n    public loadBuildings(): Promise<void> {\n        return new Promise<void>((resolve) => {\n            this.query({ tags: 'building', engine: true }).then((bld_data) => {\n                const buildings = (bld_data as HashMap[]).map(i => new Building(this as any, i));\n                this.set('buildings', buildings || []);\n                if (!this._active_building && buildings && buildings.length > 0) {\n                    this._active_building = buildings[0].id;\n                }\n                resolve();\n            }, _ => {\n                this.parent.notifyError('Error loading building data. Retrying...');\n                this.timeout('load_bld', () => this.loadBuildings().then(() => resolve()), 1000);\n            });\n        });\n    }\n\n    /**\n     * Load levels data for the buildings\n     */\n    public loadLevels(): Promise<void> {\n        return new Promise<void>((resolve) => {\n            this.query({ tags: 'level', engine: true }).then((lvl_data) => {\n                resolve();\n            }, _ => {\n                this.parent.notifyError('Error loading level data. Retrying...');\n                this.timeout('load_lvl', () => this.loadLevels().then(() => resolve()), 1000);\n            });\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\n\nimport { BaseAPIService } from '../base.service';\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\n\nexport interface PollingMetadata {\n    room_id: string;\n    metadata?: HashMap<any>;\n}\n\nexport class PingHistory {\n    /** List of previous poll data */\n    readonly history: PollingMetadata[];\n    /** Unix time in seconds of the last poll request */\n    readonly last_ping: number;\n    /** Email of the associated space */\n    readonly room_email: string;\n    /** ID of the associated space */\n    readonly room_id: string;\n\n    constructor(data: HashMap) {\n        this.history = data.history;\n        this.last_ping = data.last_ping;\n        this.room_email = data.room_email;\n        this.room_id = data.room_id;\n    }\n}\n\nconst SECONDS = 1000;\nconst MINUTES = 60 * SECONDS;\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PollingService extends BaseAPIService<PingHistory> {\n    constructor(protected _composer: ComposerService) {\n        super(_composer);\n        this._name = 'Users';\n        this._api_route = 'pings';\n    }\n\n    protected async load() {\n        this.interval('poll_endpoint', () => {\n            this.add({\n                room_id: this.parent.get('system')\n            });\n        }, 10 * MINUTES);\n    }\n\n    public query(...args: any): never {\n        throw new Error('Query method not available for polling endpoint');\n    }\n\n    public show(...args: any): never {\n        throw new Error('Show method not available for polling endpoint');\n    }\n\n    public update(...args: any): never {\n        throw new Error('Put method not available for polling endpoint');\n    }\n\n    public delete(...args: any): never {\n        throw new Error('delete method not available for polling endpoint');\n    }\n\n    protected process(data: HashMap) {\n        return new PingHistory(data);\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport { HashMap, Identity } from '../../../shared/utilities/types.utilities';\nimport { Booking } from '../bookings/booking.class';\nimport { BaseAPIService } from '../base.service';\n\nimport * as dayjs from 'dayjs';\n\nexport interface ISpaceAvailabilityOptions {\n    date?: number;\n    duration: number;\n    id?: string;\n    room_ids?: string;\n    bookable?: boolean;\n    rooms?: string;\n    ignore?: string;\n    zone_id?: string;\n    clear?: boolean;\n}\n\nconst OPTION_DEFAULTS: ISpaceAvailabilityOptions = {\n    duration: 60\n};\n\nexport class Space extends BaseDataClass {\n    /** Extends name for the space */\n    readonly long_name: string;\n    /** CSS selector for the location of the space of the level's map */\n    readonly map_id: string;\n    /** Type of space */\n    readonly type: string;\n    /** Whether user can search for this space */\n    readonly can_search: boolean;\n    /** Whether user can open the control URL if available */\n    readonly can_control: boolean;\n    /** Hourly cost for using the space */\n    readonly hourly_rate: number;\n    /** Whether space can be booked by users */\n    readonly bookable: boolean;\n    /** People capacity of the space */\n    readonly capacity: number;\n    /** Index to force order when sorting multiple spaces */\n    readonly sort_priority: number;\n    /** Setup time for bookings in this space */\n    readonly setup: number;\n    /** Breakdown time for bookings in this space */\n    readonly breakdown: number;\n    /** Last returned availability result */\n    readonly was_available: boolean;\n\n    /** Level in which the spaces is associated */\n    private _level: HashMap;\n    /** Bookings associated with the space */\n    private _bookings: string[];\n    /** Engine zones associated with the space */\n    private _zones: string[];\n    /** List of equipment available in the space */\n    private _extras: Identity[];\n    /** List of ids for linked spaces */\n    private _linked_spaces: string[];\n\n    constructor(protected service: BaseAPIService<Space>, raw_data: HashMap = {}) {\n        super(service, raw_data);\n        const settings = raw_data.settings || {};\n        this._level = this.service.parent.Organisation.levelWithID(raw_data.zones) || { settings: {} };\n\n        this.long_name = settings.long_name || raw_data.long_name;\n        this.map_id = settings.map_id || raw_data.map_id;\n        this.type = settings.book_type || this._level.book_type || this._level.settings.book_type || raw_data.book_type || raw_data.type || 'book';\n        this.can_search = settings.searchable || raw_data.searchable || raw_data.can_search || false;\n        this.can_control = settings.controlable || raw_data.controlable || raw_data.can_control || false;\n        this.hourly_rate = settings.cost_hour || raw_data.cost_hour || raw_data.hourly_rate || 0;\n        this.bookable = settings.bookable || raw_data.bookable || false;\n        this.setup = ((settings.setup || 0) / 60) || raw_data.setup || 0;\n        this.breakdown = ((settings.breakdown || 0) / 60) || raw_data.breakdown || 0;\n        this.capacity = raw_data.capacity || 0;\n        this.was_available = settings.available || raw_data.available || raw_data.was_available || false;\n\n        this._zones = raw_data.zones || [];\n        const raw_bookings = settings.bookings || raw_data.bookings || [];\n        this._bookings = raw_bookings.map(i => i.id);\n        if (this.service.parent && this.service.parent.Bookings) {\n            if (raw_bookings) {\n                const id_list = [];\n                raw_bookings.forEach(booking => {\n                    let id = booking.id;\n                    this.service.parent.Bookings.removeFrom(this.id, [id], 'class');\n                    id = this.service.parent.Bookings.addFrom(this.id, booking, 'class');\n                    id_list.push(id);\n                });\n                this._bookings = id_list;\n            }\n        }\n        this._extras = [];\n        this._linked_spaces = settings.linked_rooms || raw_data.linked_rooms || raw_data.linked_spaces || [];\n    }\n\n    /** Whether the space has a booking in progress */\n    public get in_use(): boolean {\n        return !!this.current;\n    }\n\n    /** Get any current in progress meeting */\n    public get current(): Booking {\n        const bookings = this.bookings;\n        for (const bkn of bookings) {\n            const status = bkn.status;\n            if (status === 'in_progress' || status === 'started') {\n                return bkn;\n            }\n        }\n        return null;\n    }\n\n    /** Get the next upcoming meeting */\n    public get next(): Booking {\n        const now = dayjs().valueOf();\n        const bookings = this.bookings;\n        for (const bkn of bookings) {\n            if (bkn.date > now) {\n                return bkn;\n            }\n        }\n        return null;\n    }\n\n    /** List of stored bookings for the space */\n    public get bookings(): Booking[] {\n        const booking_list = this.service && this.service.parent && this.service.parent.Bookings\n            ? this.service.parent.Bookings.list((booking) => this._bookings.indexOf(booking.id) >= 0) || []\n            : [];\n        return booking_list.sort((a, b) => a.date - b.date);\n    }\n\n    /** List of bookings for today */\n    public get todays_bookings(): Booking[] {\n        return this.bookingsFor(dayjs().valueOf());\n    }\n\n    /** List of ids for linked spaces */\n    public get linked_spaces() {\n        return [...this._linked_spaces];\n    }\n\n    /** Level in which the space is associated */\n    public get level(): HashMap {\n        return this._level;\n    }\n\n    /** Engine zones associated with the space */\n    public get zones(): string[] {\n        return [...this._zones];\n    }\n\n    /**\n     * Get bookings for space\n     * @param date Date to filter bookings on\n     */\n    public bookingsFor(date?: number): Booking[] {\n        if (date) {\n            const day = dayjs(date);\n            return this.bookings.filter(i => dayjs(i.date).isSame(day, 'd'));\n        } else {\n            return this.bookings;\n        }\n    }\n\n    /**\n     * Whether the space is available.\n     */\n    public isAvailable(options?: ISpaceAvailabilityOptions): Promise<boolean> {\n        options = options\n            ? { ...OPTION_DEFAULTS, ...options, room_ids: this.id }\n            : { ...OPTION_DEFAULTS, room_ids: this.id };\n        return new Promise((resolve) => {\n            (this.service as any).available(options).then((list: Space[]) => {\n                for (const rm of list) {\n                    if (rm.id === this.id) {\n                        return resolve(true);\n                    }\n                }\n                resolve(false);\n            }, () => resolve(false));\n        });\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): Space {\n        return new Space(this.service, this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): Space {\n        return new Space(this.service, { ...this, id: null, email: null, _bookings: [] });\n    }\n}\n","import { HashMap } from '../../../shared/utilities/types.utilities';\nimport { generateMockBooking } from '../bookings/booking.utilities';\n\nimport * as faker from 'faker';\nimport { USER_DOMAIN } from '../users/user.utilities';\n\nlet SPACE_COUNT: number = 0;\n\nexport function generateMockSpace(id?: string, zones?: string[]): HashMap {\n    if (!id) {\n        id = `space-${SPACE_COUNT++}`;\n    }\n    const name = `${faker.name.firstName()} ${faker.name.lastName()} Space`;\n    const linked = Math.floor(Math.random() * 99999) % 2 === 0 && SPACE_COUNT > 1;\n    return {\n        id,\n        name,\n        long_name: `${name} with an long name`,\n        map_id: `${SPACE_COUNT}`,\n        capacity: Math.floor(Math.random() * 20 + 1) * 2,\n        email: `${name.toLowerCase().split(' ').join('.')}@${USER_DOMAIN}`,\n        type: faker.commerce.productName(),\n        searchable: Math.floor(Math.random() * 99999) % 2 === 0,\n        controlable: Math.floor(Math.random() * 99999) % 2 === 0,\n        bookable: Math.floor(Math.random() * 99999) % 2 === 0,\n        cost_hour: Math.floor(Math.random() * 300) * 100,\n        setup: Math.floor(Math.random() * 6) * 5,\n        breakdown: Math.floor(Math.random() * 6) * 5,\n        zones: zones || ['zone_lvl-0'],\n        bookings: Array(10).fill(0).map(i => generateMockBooking()),\n        linked_rooms: linked ? [`space-${Math.floor(Math.random() * (SPACE_COUNT - 1))}`] : []\n    };\n}\n","import { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\n\nimport { BaseAPIService } from '../base.service';\nimport { ISpaceAvailabilityOptions, Space } from './space.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\n\nimport * as dayjs from 'dayjs';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, map, tap } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SpacesService extends BaseAPIService<Space> {\n\n    constructor(protected _composer: ComposerService) {\n        super(_composer);\n        this._name = 'Space';\n        this._api_route = 'rooms';\n        this._compare = (a, b) => !a.id.localeCompare(b.id) || !a.email.localeCompare(b.email);\n        this._list_filter = (a: Space) => {\n            const bld = this.parent.Organisation.building;\n            return a.level.bld_id === bld.id;\n        };\n    }\n\n    /**\n     * Get available spaces\n     * @param options\n     */\n    public available(options: ISpaceAvailabilityOptions): Promise<Space[]> {\n        if (!options) {\n            throw new Error('Space avilability requires request options');\n        }\n        if (!options.date) {\n            options.date = dayjs().startOf('m').valueOf();\n        }\n        const key = `available|${options.id ? options.id : ''}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise((resolve, reject) => {\n                const respond = (list: Space[]) => {\n                    const available_spaces = list.filter(i => {\n                        const linked = list.filter(j => i.linked_spaces.indexOf(j.id) >= 0);\n                        return i.was_available && linked.reduce((a, v) => a && v.was_available, true);\n                    });\n                    resolve(available_spaces);\n                };\n                const error = (e) => reject(e);\n                if (options.id) {\n                    this.show(options.id, options).then((i) => respond([i]), error);\n                } else {\n                    this.query(options).then(respond, error);\n                }\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Load initial data for the service\n     */\n    protected async load(): Promise<void> {\n        await this.query();\n    }\n\n    /**\n     * Observes an item by id and returns the one from the list by id or email that matches id.\n     */\n    public observeItem(idOrEmail: string): Observable<Space | undefined> {\n        return this._observers.list.pipe(\n            distinctUntilChanged(),\n            map((list: Space[] | undefined) => {\n                const space = list?.find(i => i.id === idOrEmail || i.email === idOrEmail);\n                console.log('RETURNING', space, idOrEmail);\n                return space;\n            }),\n        );\n    }\n\n    /**\n     * Convert raw data into API object\n     * @param raw_data Raw API data\n     */\n    protected process(raw_data: HashMap): Space {\n        return new Space(this, raw_data);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\nimport { EngineModuleBinding, EngineSystem, EngineSystemsService } from '@placeos/ts-client';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nimport { ApplicationService } from '../../app.service';\nimport { BaseClass } from '../../../shared/base.class';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SystemsManagerService extends BaseClass {\n    /** Application service */\n    public parent: ApplicationService;\n    /** Composer resource service */\n    private _resources: EngineSystemsService;\n    /** Subject for System list */\n    private _list = new BehaviorSubject<EngineSystem[] | undefined>(undefined);\n\n    constructor(private _composer: ComposerService) {\n        super();\n    }\n\n    public doLoad() {\n        this._composer.initialised.subscribe((state) => {\n            if (state) {\n                this._resources = this._composer.systems;\n                this.load();\n            }\n        });\n    }\n\n    /** List of available systems */\n    public get listValue() {\n        return this._list.getValue() || [];\n    }\n\n    /**\n     * List to changes on observable\n     * @param name Name of the observable\n     * @param next Callback for changes to the observable\n     */\n    public list(): Observable<EngineSystem[] | undefined> {\n        return this._list;\n    }\n\n    /**\n     * Get engine module for the given system\n     * @param sys_id ID of the system to get the module from\n     * @param mod_id ID of the module with the given system\n     * @param index Index of the module\n     */\n    public get(sys_id: string, mod_id: string, index?: number): EngineModuleBinding {\n        return this._composer.bindings.module(sys_id, mod_id, index);\n    }\n\n    /**\n     * Load Systems\n     */\n    protected load() {\n        if (!this.parent || !this.parent.is_initialised || !this.parent.Users || !this.parent.Users.initialised) {\n            return this.timeout('load', () => this.load());\n        }\n        this.loadSystems();\n    }\n\n    /**\n     * Load one page of systems\n     * @param offset Item offset for the page to load\n     */\n    protected loadSystems(offset: number = 0, limit: number = 250) {\n        this._resources.query({ offset, limit }).then((list) => {\n            const total = this._resources.last_total;\n            const systems: EngineSystem[] = [...this.listValue, ...list];\n            this._list.next(systems.sort((a, b) => (a.name || '').localeCompare(b.name)));\n            if (systems.length < total) {\n                this.loadSystems(systems.length);\n            }\n        });\n    }\n}\n","import { ADynamicFormField } from '@acaprojects/ngx-dynamic-forms';\n\nimport { BaseDataClass } from '../base-api.class';\nimport { HashMap, Identity } from '../../../shared/utilities/types.utilities';\nimport { BaseAPIService } from '../base.service';\n\nexport interface ILocation {\n    x?: number;\n    y?: number;\n    name?: string;\n    map_id?: string;\n    building: string;\n    level: string | Identity;\n    fixed: boolean;\n    loc_id?: string;\n    display?: { [name: string]: string };\n    confidence?: number;\n    another_bld?: boolean;\n    at_desk?: boolean;\n}\n\nexport class User extends BaseDataClass {\n    /** First name of the user */\n    readonly first_name: string;\n    /** Last name of the user */\n    readonly last_name: string;\n    /** Windows user ID */\n    readonly windows_id: string;\n    /** Type of user */\n    readonly type: 'partner' | 'external' | 'internal';\n    /** Contact phone number of the user */\n    readonly phone: string;\n    /** Organisational department the user is part of */\n    readonly business_unit: string;\n    /** Whether user is external from the application's organisation */\n    readonly external: boolean;\n    /** Organisational Identifier for the user */\n    readonly staff_code: string;\n    /** Organisation the user is associated with */\n    private _organisation: Identity;\n    /** Map location of the user */\n    private _location: ILocation;\n    /** List of users that this user can act on behalf */\n    private _delegates: string[];\n\n    constructor(protected service: BaseAPIService<User>, raw_data: HashMap = {}) {\n        super(service, raw_data);\n        this.first_name = raw_data.first_name;\n        this.last_name = raw_data.last_name;\n        this.windows_id = raw_data.email;\n        this.type = raw_data.visitor ? 'external' : raw_data.type || 'internal';\n        this.phone = raw_data.phone || raw_data.mobile;\n        this.business_unit = raw_data.business_unit || raw_data.department;\n        this._organisation = raw_data.organisation || { id: raw_data.organisation_id, name: raw_data.organisation_name };\n        this.external = this.type === 'external';\n        this._location = null;\n        this.staff_code = raw_data.staff_code || raw_data.fmno;\n        this._delegates = raw_data.delegates;\n    }\n\n    /** Organisation the user is associated with */\n    public get organisation() {\n        return this._organisation;\n    }\n\n    /** Map location of the user */\n    public get last_location(): ILocation {\n        return this._location ? { ...(this._location) } : null;\n    }\n\n    /** List of users that this user can act on behalf */\n    public get delegates(): string[] {\n        return [...(this._delegates || [])];\n    }\n\n    /**\n     * Ask the server for the users current location\n     */\n    public locate(): Promise<ILocation> {\n        const service: any = this.service.parent || {};\n        return new Promise((resolve, reject) => {\n            if (service.Location) {\n                service.Location.show(this.id, { desk: this.email }).then(\n                    l => {\n                        this._location = l;\n                        resolve(l);\n                    },\n                    e => reject(e)\n                );\n            } else {\n                resolve(null);\n            }\n        });\n    }\n\n    /**\n     * Whether user is available during the given period\n     * @param start Start time as a unix timestamp with milliseconds\n     * @param end End time as a unix timestamp with milliseconds\n     */\n    public available(start?: number, end?: number): Promise<boolean> {\n        return new Promise<boolean>(resolve => {\n            this.service.query({ email: this.email, start, end })\n                .then(l => resolve(l && l.length > 0), _ => resolve(false));\n        });\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): User {\n        return new User(this.service, this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): User {\n        return new User(this.service, { ...this, id: null, email: null });\n    }\n\n    /**\n     * Initialise the form field metadata for the field\n     */\n    protected initialiseFormFields(): ADynamicFormField[] {\n        const edit = !!this.id;\n        const fields: ADynamicFormField[] = [\n            new ADynamicFormField({\n                key: 'name',\n                type: 'input',\n                value: this.name,\n                hide: true\n            }),\n            new ADynamicFormField({\n                key: 'first_name',\n                label: 'First Name',\n                type: 'input',\n                value: this.first_name,\n                required: true\n            }),\n            new ADynamicFormField({\n                key: 'last_name',\n                label: 'Last Name',\n                type: 'input',\n                value: this.last_name,\n                required: true\n            }),\n            new ADynamicFormField({\n                key: 'email',\n                label: 'Email',\n                type: 'input',\n                value: this.email,\n                required: true,\n                attributes: { type: 'email' }\n            })\n        ];\n        return fields;\n    }\n}\n","import { HashMap } from '../../../shared/utilities/types.utilities';\n\nimport * as faker from 'faker';\nimport { padZero, unique } from '../../../shared/utilities/general.utilities';\n\nlet USER_COUNT = 0;\n\nexport let USER_DOMAIN = 'acaprojects.com';\n\nconst USER_EMAILS: string[] = [];\n\n/**\n * Generate raw mock data for a user\n * @param id Forced ID for the mock\n * @param name Forced name for the user\n * @param external Whether user is external of the organisation\n */\nexport function generateMockUser(id?: string, name?: string, external?: boolean): HashMap {\n    if (!id) {\n        id = `user-${USER_COUNT++}`;\n    }\n    if (!name) {\n        name = `${faker.name.firstName()} ${faker.name.lastName()}`;\n    }\n    if (external === undefined) {\n        external = !((Math.random() * 99999) % 2);\n    }\n    const organisation = external ? faker.company.companyName() : USER_DOMAIN.split('.')[0];\n    let delegates: string[] = [];\n    const delegate_count = Math.min(Math.random() * 4 + 1, USER_EMAILS.length);\n    for (let i = 0; i < delegate_count; i++) {\n        delegates.push(USER_EMAILS[Math.floor(Math.random() * USER_EMAILS.length)]);\n    }\n    delegates = unique(delegates);\n    const email = `${name.split(' ').join('.').toLowerCase()}@${external ? 'not-' : ''}${USER_DOMAIN}`;\n    USER_EMAILS.push(email);\n    return {\n        id,\n        name,\n        email,\n        phone: faker.phone.phoneNumber(),\n        visitor: external,\n        organisation: {\n            id: organisation.split(' ').join('.').toLowerCase(),\n            name: organisation\n        },\n        department: faker.commerce.department(),\n        staff_code: padZero(Math.floor(Math.random() * 99999), 5),\n        delegates\n    };\n}\n","import { Injectable } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { ComposerService } from '@placeos/composer';\nimport { Md5 } from 'ts-md5/dist/md5';\n\nimport { BaseAPIService } from '../base.service';\nimport { User } from './user.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\n\nimport * as dayjs from 'dayjs';\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nexport interface ILoginOptions {\n    /** URL to post login request to */\n    url?: string;\n    /** Whether form data is passed in the body of the request */\n    form?: boolean;\n    /** Custom headers to pass into the post request */\n    headers?: HashMap<string>;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UsersService extends BaseAPIService<User> {\n    constructor(protected _composer: ComposerService, protected uhttp: HttpClient, protected location: Location) {\n        super(_composer);\n        this._name = 'Users';\n        this._api_route = 'users';\n        this._compare = (a, b) => !a.id.localeCompare(b.id) || !a.email.localeCompare(b.email);\n        this.set('current_user', new User(this, { id: 'local_user', name: 'Local User' }));\n    }\n\n    /** Currently logged in user */\n    public get current(): User {\n        return this.get('current_user');\n    }\n\n    public get currentUser(): Observable<User | undefined> {\n        return this._observers.current_user.pipe(\n            // don't want the local user\n            filter(u => u.id !== 'local_user')\n        );\n    }\n\n    /**\n     * Sets the access token and expiry for the user\n     * @param token OAuth bearer token\n     * @param expiry Expiry epoch timestamp in ms\n     * @param reload Whether to reload the page after setting tokens\n     */\n    public setToken(token: string, expiry?: number, reload: boolean = true) {\n        if (!expiry) {\n            expiry = dayjs()\n                .add(7, 'd').endOf('d')\n                .valueOf();\n        }\n        const path = `${location.origin}${this.parent.setting('composer.route') || ''}/oauth-resp.html`;\n        const client_id = Md5.hashStr(path);\n        if (sessionStorage) {\n            sessionStorage.setItem(`${client_id}_access_token`, token);\n            sessionStorage.setItem(`${client_id}_expires_at`, `${expiry}`);\n        }\n        if (localStorage) {\n            localStorage.setItem(`${client_id}_access_token`, token);\n            localStorage.setItem(`${client_id}_expires_at`, `${expiry}`);\n        }\n        if (reload) {\n            this.location.go(this.location.path());\n        }\n        return path;\n    }\n\n    /**\n     * Post login request to the API\n     * @param query_params Key value pairs to pass into\n     * @param options Options for the login request\n     */\n    public login(query_params: HashMap, options: ILoginOptions = {}): Promise<void> {\n        if (!this._promises['login']) {\n            this._promises['login'] = new Promise<void>((resolve, reject) => {\n                this.set('status', 'loading');\n                let headers = new HttpHeaders();\n                if (!options || options.form !== false) {\n                    headers = headers.append('Content-Type', 'application/x-www-form-urlencoded');\n                }\n                const url = (options ? options.url : '') || '/auth/signin';\n                this.uhttp.post(url, query_params, { headers }).subscribe(\n                    _ => null,\n                    e => reject(e),\n                    () => {\n                        this._composer.auth.authorise();\n                        resolve();\n                    }\n                );\n            });\n        }\n        return this._promises['login'];\n    }\n\n    /**\n     * Logout of user and redirect to logout URL\n     */\n    public logout() {\n        this._composer.auth.logout();\n    }\n\n    /**\n     * Load initial data for the service\n     */\n    protected load(tries: number = 0): Promise<void> {\n        this.set('status', 'loading');\n        return new Promise<void>(resolve => {\n            if (tries > 4) {\n                this.set('status', 'invalid');\n                return resolve();\n            }\n            this.show('current', { engine: true }).then(\n                current_user => {\n                    this.set('status', 'available');\n                    this.set('current_user', current_user);\n                    if (this.parent && this.parent.setting('app.user.grab_api_details')) {\n                        this.show(current_user.email).then(\n                            user => {\n                                this.set('current_user', user);\n                                resolve();\n                            },\n                            () => this.timeout('load', () => this.load(++tries).then(() => resolve()))\n                        );\n                    } else {\n                        resolve();\n                    }\n                },\n                () => this.timeout('load', () => this.load(++tries).then(() => resolve()))\n            );\n        });\n    }\n\n    /**\n     * Convert raw API data into a valid User Object\n     * @param raw_item Raw API data\n     */\n    protected process(raw_data: any): User {\n        return new User(this, raw_data);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\n\nimport { HashMap } from '../shared/utilities/types.utilities';\nimport { unique } from '../shared/utilities/general.utilities';\n\n/** List of keys that cannot be in a combination by themselves or with each other */\nconst INVALID_STANDALONE_KEYS: string[] = ['control', 'shift', 'alt', 'meta', 'os'];\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HotkeysService {\n    /** Map of subjects which store press states of keys */\n    private keydown_states: HashMap<BehaviorSubject<number>> = {};\n    /** Map of obserers for key state subjects */\n    private keydown_observers: HashMap<Observable<number>> = {};\n    /** List of keys at the end of a combination */\n    private combo_end: string[] = [];\n    /** List of registered hotkey combinations */\n    private registered_combos: string[][] = [];\n    /** Counter for the number of keydown events. Used for checking order of key presses */\n    private counter: number = 0;\n    /** Last key code to be pressed */\n    private last_down: string;\n\n    constructor() {\n        window.addEventListener('keydown', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            if (this.last_down !== code) {\n                if (!this.keydown_states[code]) {\n                    this.keydown_states[code] = new BehaviorSubject(null);\n                    this.keydown_observers[code] = this.keydown_states[code].asObservable();\n                }\n                this.keydown_states[code].next(this.counter++);\n                if (this.combo_end.indexOf(code) >= 0) {\n                    event.preventDefault();\n                }\n                this.last_down = code;\n            }\n        });\n\n        window.addEventListener('keyup', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            this.keydown_states[code].next(null);\n            if (this.last_down === code) {\n                this.last_down = null;\n            }\n        });\n    }\n\n    /**\n     * Listen to the given key combination\n     * @param combo Array of key codes to listen to or a hotkey string e.g. `Alt+Shift+KeyK`\n     * @param next Callback for combination presses\n     */\n    public listen(combo: string | string[], next: () => void): Subscription {\n        combo = (combo instanceof Array ? combo : combo.split('+'));\n        const combination: string[] = combo.map(i => this.mapKey(i.toLowerCase()));\n        if (combination.length > 0 && this.validCombination(combination)) {\n            this.registered_combos.push(combination);\n            const last_key = combination[combination.length - 1];\n            if (!this.keydown_states[last_key]) {\n                this.keydown_states[last_key] = new BehaviorSubject(null);\n                this.keydown_observers[last_key] = this.keydown_states[last_key].asObservable();\n            }\n            this.updateCombinationEndList();\n            return this.keydown_observers[last_key].subscribe((count) => {\n                if (count) {\n                    const presses: number[] = [];\n                    if (combination.length > 1) {\n                        // Check that keys are pressed\n                        for (const key of combination) {\n                            const state = this.keydown_states[key];\n                            presses.push(state ? state.getValue() || -1 : -1);\n                        }\n                        // Check that keys are pressed in the correct order\n                        for (let i = 0; i < combination.length - 1; i++) {\n                            if (presses[i] > presses[i + 1]) { return; }\n                        }\n                    }\n                    next();\n                }\n            });\n        }\n        return null;\n    }\n\n    /**\n     * Map key codes with multiple versions to simple form\n     * @param code Code to transform\n     */\n    private mapKey(code: string): string {\n        if (code.indexOf('alt') || code.indexOf('shift') || code.indexOf('control')) {\n            return code.replace('left', '').replace('right', '');\n        }\n        return code;\n    }\n\n    /**\n     * Update the list of the last keys in combinations to allow for prevent default actions on pre-existing hotkeys\n     */\n    private updateCombinationEndList(): void {\n        const key_list = [];\n        for (const combo of this.registered_combos) {\n            this.combo_end.push(combo[combo.length - 1]);\n        }\n        this.combo_end = unique(key_list);\n    }\n\n    /**\n     * Checks if the given hotkey combination is allowed and valid\n     * @param combo Array of key codes\n     */\n    private validCombination(combo: string[]): boolean {\n        let non_meta = 0;\n        for (const key of combo) {\n            if (INVALID_STANDALONE_KEYS.indexOf(key) < 0) {\n                non_meta++;\n            }\n        }\n        return non_meta > 0;\n    }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { HashMap } from '../shared/utilities/types.utilities';\nimport { getItemWithKeys } from '../shared/utilities/general.utilities';\nimport { BaseClass } from '../shared/base.class';\nimport { VERSION } from 'src/environments/version';\n\nimport * as dayjs from 'dayjs';\n\ninterface SettingsMap {\n    api: HashMap;\n    local: HashMap;\n    session: HashMap;\n    [block: string]: HashMap;\n}\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n    }\n}\n\nexport type ConsoleStream = 'debug' | 'warn' | 'log' | 'error';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SettingsService extends BaseClass {\n\n    /** Map of settings */\n    private _settings: SettingsMap = { api: {}, local: {}, session: {} };\n    /** Store for promises */\n    private _promises: { [name: string]: Promise<any> } = {};\n    /** Name of the application */\n    private _app_name = 'PlaceOS';\n\n    constructor(private http: HttpClient) {\n        super();\n        const now = dayjs();\n        const build = dayjs(VERSION.time);\n        const built = now.isSame(build, 'd') ? `Today at ${build.format('h:mmA')}` : build.format('D MMM YYYY, h:mmA');\n        this.log('CORE', `${VERSION.core_version}`, null, 'debug', true);\n        this.log('APP', `${VERSION.version} - ${VERSION.hash} | Built: ${built}`, null, 'debug', true);\n        this.init();\n    }\n\n    /**\n     * Initialise the settings\n     */\n    public async init() {\n        await this.loadFromFile('api');\n        /* istanbul ignore next */\n        if (this._settings.api.debug) {\n            window.debug = true;\n        }\n        /* istanbul ignore next */\n        if (this._settings.api.app && this._settings.api.app.name) {\n            this._app_name = this._settings.api.app.name;\n        }\n        this.log('Settings', 'Successfully loaded settings');\n        this._initialised.next(true);\n    }\n\n    /** Whether settings service has initialised */\n    public get app_name() { return this._app_name; }\n\n    /* istanbul ignore next */\n    /**\n     * Log data to the browser console\n     * @param type Type of message\n     * @param msg Message body\n     * @param args array of argments to log to the console\n     * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\n     * @param force Whether to force message to be emitted when debug is disabled\n     */\n    public log(type: string, msg: string, args?: any, stream: ConsoleStream = 'debug', force: boolean = false) {\n        if (window.debug || force) {\n            const colors: string[] = ['color: #E91E63', 'color: #3F51B5', 'color: default'];\n            if (args) {\n                console[stream](`%c[${this.app_name}]%c[${type}] %c${msg}`, ...colors, args);\n            } else {\n                console[stream](`%c[${this.app_name}]%c[${type}] %c${msg}`, ...colors);\n            }\n        }\n    }\n\n    /**\n     * Get a setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public get(key: string): any {\n        const keys = key.split('.');\n        let value = null;\n        value = getItemWithKeys(keys, this._settings.api) ||\n            getItemWithKeys(keys, this._settings.session) ||\n            getItemWithKeys(keys, this._settings.local);\n        return value;\n    }\n\n    /**\n     * Load setting data from a file\n     * @param name Namespace to add file data to\n     * @param file URL to file to load setting data from\n     */\n    private async loadFromFile(name: string, file: string = 'assets/settings.json', tries: number = 0) {\n        if (file !== 'assets/settings.json' && tries > 5) {\n            return Promise.resolve();\n        }\n        const file_name = file.split('/')[file.split('/').length - 1];\n        // Check if data has been loaded into the global space\n        if (window[file_name] instanceof Object) {\n            this._settings[name] = { ...(this._settings[name] || {}), ...window[file_name] };\n            return Promise.resolve();\n        }\n        const key = `load|${name}|${file}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<void>((resolve, reject) => {\n                this.http.get(file).subscribe(\n                    (data) => {\n                        this._settings[name] = { ...(this._settings[name] || {}), ...(data || {}) };\n                    }, (e) => {\n                        this.log('Settings', `Failed to load settings from \"${file}\"`);\n                        this._promises[key] = null;\n                        this.timeout(`load_${file_name}`, () => {\n                            this.loadFromFile(name, file, ++tries).then(() => resolve());\n                        })\n                    }, () => resolve()\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n}\n","import { Subscription, BehaviorSubject } from \"rxjs\";\n\nexport class BaseClass {\n    /** Store for named timers */\n    protected _timers: { [name: string]: number } = {};\n    /** Store for named intervals */\n    protected _intervals: { [name: string]: number } = {};\n    /** Store for named subscription unsub callbacks */\n    protected _subscriptions: { [name: string]: (Subscription | (() => void)) } = {};\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n\n    /** Observable of the initialised state of the object */\n    public get initialised(): BehaviorSubject<boolean> {\n        return this._initialised;\n    }\n    /** Whether the object has been initialised */\n    public get is_initialised(): boolean {\n        return this._initialised.getValue();\n    }\n\n    /**\n     * Creates a named timer\n     * @param name Name of the timer\n     * @param fn Callback function for the timer\n     * @param delay Callback delay\n     */\n    protected timeout(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearTimeout(name);\n            this._timers[name] = <any>setTimeout(() => {\n                fn();\n                this._timers[name] = null;\n            }, delay);\n        } else {\n            throw new Error(\n                name ? 'Cannot create named timeout without a name' : 'Cannot create a timeout without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named timer\n     * @param name Timer name\n     */\n    protected clearTimeout(name: string) {\n        if (this._timers[name]) {\n            clearTimeout(this._timers[name]);\n            this._timers[name] = null;\n        }\n    }\n\n    /**\n     * Creates a named interval\n     * @param name Name of the interval\n     * @param fn Callback function for the interval\n     * @param delay Callback delay\n     */\n    protected interval(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearInterval(name);\n            this._intervals[name] = <any>setInterval(() => fn(), delay);\n        } else {\n            throw new Error(\n                name ? 'Cannot create named interval without a name' : 'Cannot create a interval without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named interval\n     * @param name Timer name\n     */\n    protected clearInterval(name: string) {\n        if (this._intervals[name]) {\n            clearInterval(this._intervals[name]);\n            this._intervals[name] = null;\n        }\n    }\n\n    /**\n     * Store named subscription\n     * @param name Name of the subscription\n     * @param unsub Unsubscribe callback or Subscription object\n     */\n    protected subscription(name: string, unsub: Subscription | (() => void)) {\n        this.unsub(name);\n        this._subscriptions[name] = unsub\n    }\n\n    /**\n     * Call unsubscribe callback with the given name\n     * @param name\n     */\n    protected unsub(name: string) {\n        if (this._subscriptions && this._subscriptions[name]) {\n            if (this._subscriptions[name] instanceof Subscription) {\n                (this._subscriptions[name] as Subscription).unsubscribe()\n            } else if (this._subscriptions[name] instanceof Function) {\n                (this._subscriptions[name] as any)();\n            }\n            this._subscriptions[name] = null;\n        }\n    }\n}\n","\nimport { Component, OnDestroy } from '@angular/core';\nimport { BaseClass } from './base.class';\n\n@Component({\n    selector: 'a-very-basic-component-base-that-should-not-be-used',\n    template: ``,\n    styles: [``]\n})\nexport class BaseComponent extends BaseClass implements OnDestroy {\n\n    public ngOnDestroy(): void {\n        // Clear local timers\n        for (const key in this._timers) {\n            if (this._timers.hasOwnProperty(key)) {\n                this.clearTimeout(key);\n            }\n        }\n        // Clear local intervals\n        for (const key in this._intervals) {\n            if (this._intervals.hasOwnProperty(key)) {\n                this.clearInterval(key);\n            }\n        }\n        // Clear local subscriptions\n        for (const key in this._subscriptions) {\n            if (this._subscriptions.hasOwnProperty(key)) {\n                this.unsub(key);\n            }\n        }\n    }\n}\n\n","<div *ngIf=\"group\">\n    <a-dropdown [items]=\"options\" [(ngModel)]=\"active_duration\" placeholder=\"Select duration...\" (ngModelChange)=\"setValue($event)\"></a-dropdown>\n</div>\n","import { Component } from '@angular/core';\nimport { FormGroup, AbstractControl } from '@angular/forms';\nimport { ADynamicFormField } from '@acaprojects/ngx-dynamic-forms';\n\nimport { BaseComponent } from '../../base.component';\nimport { getNextFreeBookingSlot } from '../../../services/data/bookings/booking.utilities';\nimport { humaniseDuration } from '../../utilities/general.utilities';\nimport { FORM_FIELDS } from '../../globals/form-fields';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'custom-duration-field',\n    templateUrl: './duration-field.component.html',\n    styleUrls: ['./duration-field.component.scss']\n})\nexport class CustomDurationFieldComponent extends BaseComponent  {\n    /** Form Control holding date data */\n    public date_control: AbstractControl;\n    /** Form Control holding space data */\n    public space_control: AbstractControl;\n    /** Step size for available times */\n    public block_size = 15;\n    /** Step size for available times */\n    public active_duration: { id: number, name: string };\n    /** List of available durations */\n    public options: { id: number, name: string }[] = [];\n\n    constructor(protected field: ADynamicFormField, public group: FormGroup) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        if (this.group) {\n            if (this.group.controls.date) {\n                this.date_control = this.group.controls.date;\n                this.subscription('date', this.date_control.valueChanges.subscribe(() => this.calculateAvailableDurations()));\n            }\n            if (this.group.controls.room || this.group.controls.space) {\n                this.space_control = this.group.controls.room || this.group.controls.space;\n                this.subscription('space', this.space_control.valueChanges.subscribe(() => this.calculateAvailableDurations()));\n            }\n            this.subscription('control', this.field.control.valueChanges.subscribe(() => this.updateDisplay()));\n        }\n        this.calculateAvailableDurations();\n    }\n\n    /**\n     * Update the active value displayed on the dropdown\n     */\n    public updateDisplay() {\n        if (this.options && this.options.length > 0) {\n            if (!this.active_duration) {\n                if (this.field.getValue()) {\n                    this.active_duration = this.options.find(i => i.id === this.field.getValue());\n                }\n                if (!this.active_duration) {\n                    this.active_duration = this.options[0];\n                    this.setValue(this.options[0]);\n                }\n            } else if (!this.options.find(i => i.id === this.active_duration.id)) {\n                let diff = 9999;\n                let new_opt = null;\n                for (const option of this.options) {\n                    if (Math.abs(option.id - this.active_duration.id) < diff) {\n                        diff = Math.abs(option.id - this.active_duration.id);\n                        new_opt = option;\n                    }\n                }\n                if (new_opt) {\n                    this.active_duration = new_opt;\n                    this.setValue(new_opt);\n                }\n            }\n        }\n    }\n\n    /**\n     * Generate a list of times selectable by the user\n     */\n    public calculateAvailableDurations() {\n        this.options = [];\n        let date = dayjs().startOf('m');\n        const max_duration = this.field.metadata ? this.field.metadata.max_duration || 600 : 600;\n        const min_duration = this.field.metadata ? this.field.metadata.min_duration || 30 : 30;\n        let end = date.add(max_duration, 'm');\n        if (this.space_control) {\n            // Get times based off available times in space\n            if (this.date_control && this.date_control.value) {\n                date = dayjs(this.date_control.value).startOf('m');\n            }\n            const slot = getNextFreeBookingSlot(this.space_control.value.bookings, date.valueOf(), min_duration);\n            if (slot) {\n                // Check if slot is after the active date\n                date = slot.start > date.valueOf() ? dayjs(slot.start).startOf('m') : date;\n            }\n            end = slot ? dayjs(slot.end).startOf('m') : dayjs(date).add(max_duration, 'm');\n        }\n        end = end.endOf('m');\n        // Get available durations between the date and end times\n        date = date.add(min_duration, 'm').startOf('m');\n        let duration = min_duration;\n        for (; date.isBefore(end, 's'); date = date.add(this.block_size, 'm')) {\n            this.options.push({ id: duration, name: humaniseDuration(duration) });\n            duration += 15;\n            if (this.options.length > Math.floor((max_duration - min_duration) / this.block_size)) {\n                break;\n            }\n        }\n        this.updateDisplay();\n    }\n\n    /**\n     * Update the value of the form field\n     * @param value New value\n     */\n    public setValue(block: { id: number, name: string }) {\n        this.field.setValue(block.id);\n    }\n}\n\nFORM_FIELDS.duration = CustomDurationFieldComponent;\n","<div *ngIf=\"group\">\n    <a-dropdown [items]=\"times\" [(ngModel)]=\"active_time\" placeholder=\"Select time...\" (ngModelChange)=\"setValue($event)\"></a-dropdown>\n</div>\n","import { Component } from '@angular/core';\nimport { FormGroup, AbstractControl } from '@angular/forms';\n\nimport { BaseComponent } from '../../base.component';\nimport { ADynamicFormField } from '@acaprojects/ngx-dynamic-forms';\nimport { getFreeBookingSlots } from '../../../services/data/bookings/booking.utilities';\n\nimport * as dayjs from 'dayjs';\nimport { FORM_FIELDS } from '../../globals/form-fields';\n\ninterface TimeSlot {\n    id: string;\n    name: string;\n    value?: number;\n}\n\n@Component({\n    selector: 'custom-time-field',\n    templateUrl: './time-field.component.html',\n    styleUrls: ['./time-field.component.scss']\n})\nexport class CustomTimeFieldComponent extends BaseComponent {\n    /** Form Control holding date data */\n    public date_control: AbstractControl;\n    /** Form Control holding space data */\n    public space_control: AbstractControl;\n    /** Step size for available times */\n    public block_size = 5;\n    /** Step size for available times */\n    public min_size = this.block_size * 6;\n    /** Step size for available times */\n    public active_time: TimeSlot;\n    /** List of selectable times */\n    public times: TimeSlot[];\n\n    constructor(protected field: ADynamicFormField, public group: FormGroup) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        if (this.group) {\n            if (this.group.controls.date) {\n                this.date_control = this.group.controls.date;\n                this.subscription('date', this.date_control.valueChanges.subscribe(() => this.updateDisplay(true)));\n            }\n            if (this.group.controls.room || this.group.controls.space) {\n                this.space_control = this.group.controls.room || this.group.controls.space;\n                this.subscription('space', this.space_control.valueChanges.subscribe(() => this.updateDisplay()));\n            }\n            this.subscription('control', this.field.control.valueChanges.subscribe(() => this.updateDisplay()));\n        }\n        this.calculateAvailableTimes();\n        if (this.date_control) {\n            const value = this.date_control.value;\n            if (!this.times.find(block => block.value === value)) {\n                this.setValue(this.times[0]);\n            }\n        }\n    }\n\n    /**\n     * Update the active value displayed on the dropdown\n     * @param from_ref Whether new value was generated from a reference field\n     */\n    public updateDisplay(from_ref: boolean = false) {\n        if (this.times) {\n            for (const time of this.times) {\n                if (this.field.getValue() === time.id) {\n                    this.active_time = time;\n                    break;\n                }\n            }\n            if (!this.field.getValue()) {\n                // Initialise with date time set on date control\n                if (this.date_control) {\n                    let date = dayjs(this.date_control.value);\n                    date = date.minute(Math.ceil(date.minute() / 5) * 5);\n                    const date_str = date.format('HH:mm');\n                    for (const time of this.times) {\n                        if (date.valueOf() - time.value <= 0) {\n                            this.active_time = time;\n                            this.setValue(time, true);\n                            break;\n                        }\n                    }\n                }\n                // Set to default value\n                if (!this.field.getValue()) {\n                    this.active_time = this.times[0];\n                    this.setValue(this.times[0], from_ref);\n                }\n            }\n        }\n    }\n\n    /**\n     * Generate a list of times selectable by the user\n     */\n    public calculateAvailableTimes() {\n        this.times = [];\n        let date = dayjs().startOf('m');\n        const book_ahead = this.field.metadata ? this.field.metadata.book_ahead || 660 : 660; // 11 hours default\n        const min_duration = this.field.metadata ? this.field.metadata.min_duration || 30 : 30;\n        if (this.space_control) {\n            // Get times based off available times in space\n            const slots = getFreeBookingSlots(this.space_control.value.bookings, min_duration);\n            date = date.minute(Math.ceil(date.minute() / this.block_size) * this.block_size);\n            const end = dayjs(date)\n                .add(book_ahead, 'm')\n                .endOf('m');\n            for (; date.isBefore(end, 's'); date = date.add(this.block_size, 'm')) {\n                const value = date.valueOf();\n                if (slots.find(i => i.start <= value && value < i.end && dayjs(i.end).diff(date, 'm') >= min_duration)) {\n                    this.times.push({ id: date.format('HH:mm'), name: date.format('h:mm A'), value: date.valueOf() });\n                }\n            }\n        } else {\n            // Get times from now\n            if (date.minute() % this.block_size !== 0) {\n                this.times.push({ id: date.format('HH:mm'), name: date.format('h:mm A') });\n            }\n            date = date.minute(Math.ceil(date.minute() / this.block_size) * this.block_size);\n            const end = dayjs(date).add(book_ahead, 'm');\n            for (; date.isBefore(end); date = date.add(this.block_size, 'm')) {\n                this.times.push({ id: date.format('HH:mm'), name: date.format('h:mm A'), value: date.valueOf() });\n            }\n        }\n        this.updateDisplay();\n    }\n\n    /**\n     * Update the value of the form field\n     * @param value New value\n     * @param from_ref Whether new value was generated from a reference field\n     */\n    public setValue(slot: TimeSlot, from_ref: boolean = false) {\n        this.field.setValue(slot.id);\n        if (this.date_control && !from_ref) {\n            const time = dayjs(slot.value);\n            const date = dayjs(this.date_control.value)\n                .hour(time.hour())\n                .minute(time.minute())\n                .startOf('m');\n            this.date_control.setValue(date.valueOf());\n        }\n    }\n}\n\nFORM_FIELDS.time = CustomTimeFieldComponent;\n","<div class=\"user-search\" widget>\n    <div class=\"search\" a-tooltip [show]=\"show && search_str && filtered_list.length > 0\" (showChange)=\"show = $event\" [content]=\"list\">\n        <div class=\"searchbar\">\n            <input type=\"text\" [(ngModel)]=\"search_str\" (ngModelChange)=\"search($event)\" (blur)=\"reset()\" placeholder=\"Search for host...\" />\n            <div class=\"spinner\" *ngIf=\"searching\">\n                <a-spinner circle-ring color=\"#000\"></a-spinner>\n            </div>\n        </div>\n        <ng-template #list>\n            <div class=\"user-list\">\n                <div class=\"item\" *ngFor=\"let item of filtered_list\" (mouseup)=\"select(item)\" (touchend)=\"select(item)\" feedback>\n                    <div class=\"name\" [innerHTML]=\"item.match_name || item.name\"></div>\n                    <div class=\"email\" [innerHTML]=\"item.match_email || item.email\"></div>\n                </div>\n            </div>\n        </ng-template>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Subject, Observable, of } from 'rxjs';\nimport { switchMap, debounceTime, distinctUntilChanged, map, catchError } from 'rxjs/operators';\n\nimport { ADynamicFormField } from '@acaprojects/ngx-dynamic-forms';\n\nimport { BaseComponent } from '../../base.component';\nimport { ApplicationService } from '../../../services/app.service';\nimport { User } from '../../../services/data/users/user.class';\nimport { filterList, matchToHighlight } from '../../utilities/general.utilities';\nimport { FORM_FIELDS } from '../../globals/form-fields';\n\n@Component({\n    selector: 'custom-user-search-field',\n    templateUrl: './user-search-field.component.html',\n    styleUrls: ['./user-search-field.component.scss']\n})\nexport class CustomUserSearchFieldComponent extends BaseComponent implements OnInit {\n    /** List of users from an API search */\n    public filtered_list: User[] = [];\n    /** List of users from an API search */\n    public search_results$: Observable<User[]>;\n    /** Whether to show list tooltip */\n    public show: boolean;\n    /** Search input field value */\n    public search_str: string;\n    /** Whether a query is in progress */\n    public searching: boolean;\n    /** Subject holding the value of the search */\n    private search$ = new Subject<string>();\n\n    constructor(protected field: ADynamicFormField, protected group: FormGroup, private service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        if (this.group) {\n            if (this.field.references && this.field.references.length > 0) {\n                const control = this.group.controls[this.field.references[0]];\n                if (control) {\n                    this.subscription('reference', control.valueChanges.subscribe(() => this.updateDisplay()));\n                }\n            }\n            this.subscription('control', this.field.control.valueChanges.subscribe(() => this.updateDisplay()));\n        }\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(400),\n            distinctUntilChanged(),\n            switchMap(query => {\n                this.searching = true;\n                this.show = true;\n                return query.length >= 3 ? (this.service.Users.query({ q: query.slice(0, 3), cache: 60 * 1000 }) as Promise<User[]>) : Promise.resolve([]);\n            }),\n            catchError((err) => of([])),\n            map(list => {\n                this.searching = false;\n                return filterList(this.search_str, list, ['name', 'email']);\n            })\n        );\n        // Process API results\n        this.search_results$.subscribe(list => {\n            this.filtered_list = list;\n            this.filtered_list.forEach((i: any) => {\n                i.match_name = matchToHighlight(i.match_name);\n                i.match_email = matchToHighlight(i.match_email);\n                return i;\n            });\n        });\n    }\n\n    /**\n     * Search for a user that matches the filter string\n     * @param filter String to filter users on\n     */\n    public search(filter: string) {\n        this.search_str = filter;\n        this.search$.next(filter);\n    }\n\n    /**\n     * Update input display string\n     */\n    public updateDisplay() {\n        const value = this.field.control.value;\n        this.search_str = value ? value.name : '';\n    }\n\n    /**\n     * Reset the display value for the search input\n     */\n    public reset() {\n        this.timeout('reset', () => {\n            const value = this.field.control.value;\n            this.search_str = value ? value.name : '';\n            this.show = false;\n        });\n    }\n\n    /**\n     * Set the active user\n     * @param user New active user\n     */\n    public select(user: User) {\n        if (user) {\n            this.field.setValue(user);\n        }\n        this.timeout('hide', () => {\n        this.show = false;\n        }, 100);\n    }\n}\n\nFORM_FIELDS.host = CustomUserSearchFieldComponent;\n","\nimport * as dayjs from 'dayjs';\n\n/** Version number of the application */\nexport const version = 'local-dev';\n/** Version number of the base application */\nexport const core_version = '1.0.0';\n/** Build time of the application */\nexport const build = dayjs();\n","\nimport { Type } from '@angular/core';\n\n/** List of form field contents mapped to corresponding keys */\nexport const FORM_FIELDS: { [id: string]: Type<any> } = {};","\nimport { IOverlayConfig } from \"@acaprojects/ngx-overlays\";\n\n/** List of Overlays to register on application initialisation */\nexport const OVERLAY_REGISTER: { id: string; config: IOverlayConfig }[] = [];\n","\nimport './systems.mock';\n","\nimport { MockHttpRequestHandlerOptions } from '@placeos/ts-client';\n\nimport { HashMap } from \"../utilities/types.utilities\";\nimport { generateMockSpace } from \"../../services/data/spaces/space.utilities\";\nimport { setMockBookingStartDatetime } from \"../../services/data/bookings/booking.utilities\";\nimport { generateMockUser } from \"../../services/data/users/user.utilities\";\n\nimport * as dayjs from 'dayjs';\n\ninterface IMockEngineSystem {\n    id?: string;\n    name?: string;\n    [module: string]: HashMap[] | string;\n}\n\nexport interface IBookingPanelBindings {\n    /** Whether user input is enabled */\n    touch_enabled: boolean;\n    /** Number of seconds before a meeting can be started, being truthy enables start/stop and auto-cancellations */\n    timeout?: number;\n    /** Number of seconds after the start of a meeting when it is auto-cancelled, overrides `timeout` value */\n    cancel_timeout?: number;\n    /** Whether to display hearing assistance UI elements */\n    has_accessability?: boolean;\n    /** URL to embed into the control modal when opened */\n    control_url?: string;\n    /** Whether to display catering UI elements */\n    has_catering?: boolean;\n    /** Whether to hide booking details(title and host) */\n    hide_details?: boolean;\n    /** Whether to hide the title of the displayed bookings */\n    hide_title?: boolean;\n    /** Whether to hide user(host) details */\n    hide_user?: boolean;\n    /** Whether to hide timeline availability */\n    hide_availability?: boolean;\n    /** Whether to disable booking from the UI */\n    booking_disabled?: boolean;\n    /** Whether booking future meetings are allowed */\n    no_timeline_bookings?: boolean;\n    /** Time before the booking end with which the current booking is endable in ms from UTC epoch */\n    is_endable?: number;\n    /** Whether to automatically ask user starting the current meeting */\n    ask_start?: boolean;\n    /** Whether to automatically ask user about ending the active meeting */\n    ask_end?: boolean;\n    /** Default meeting title if the displayed meeting doesn't have one */\n    default_title?: string;\n    /** Hide all meeting related details */\n    hide_all?: boolean;\n    /** Title of the active space */\n    title?: string;\n    /** Description of the active space */\n    description?: string;\n    /** URL of an icon image to display on the UI */\n    icon?: string;\n    /** Whether the space status is displayed on the right */\n    flip_status?: boolean;\n    /** Whether bookings can be automatically cancelled once they expire */\n    can_cancel?: boolean;\n    /** Minimum bookable duration in minutes */\n    min_duration?: number;\n    /** Maximum bookable duration in minutes */\n    max_duration?: number;\n    /** Start time of the business day with format `HH:mm` */\n    business_start?: string;\n    /** End time of the business day with format `HH:mm` */\n    business_end?: string;\n\n}\n\nconst LETTERS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('');\nconst NUMBERS = '0123456789'.split('');\n\nlet index = 0;\n\nconst SPACE_LIST: any[] = [];\n\nconst IMAGES: string[] = ['large_down', 'large_up', 'small_down', 'small_up'];\n\n/**\n * Create mock engine booking module with appropriate bookings and space data\n */\nfunction createSystem(): IMockEngineSystem {\n    const id = `sys-${LETTERS[Math.floor(index / NUMBERS.length)]}${NUMBERS[(index++) % NUMBERS.length]}`;\n    setMockBookingStartDatetime(dayjs().minute(-50).valueOf());\n    const space = generateMockSpace(id);\n    SPACE_LIST.push(space);\n    const bindings: IBookingPanelBindings = {\n        touch_enabled: true,\n        timeout: 300,\n        cancel_timeout: 600,\n        has_catering: true,\n        control_url: 'https://aca.im/demo/aca/control/',\n        icon: `/assets/img/${IMAGES[Math.floor(Math.random() * IMAGES.length)]}.png`\n    };\n    const system = {\n        id, name: space.name,\n        Bookings: []\n    };\n    system.Bookings.push({\n        ...bindings,\n        room_name: space.name,\n        today: space.bookings,\n        reload: dayjs().add(1, 'h').unix(),\n        $start_meeting: (time: number) => {\n            system.Bookings[0].last_meeting_started = time;\n        },\n        $cancel_meeting: (time: number, reason: string) => {\n            const list = system.Bookings[0].today;\n            system.Bookings[0].today = list.filter(i => i.date !== time);\n        },\n        $waiter_call: () => {\n            console.log(`[MOCK][${id}] Waiter called...`);\n        }\n    });\n    return system;\n}\n\n\nexport const MOCK_SYSTEMS = Array(10).fill(0).map(i => createSystem());\n\n// Add mock systems to the global space so that the mock websocket can hook into them\nif (!window.control) {\n    window.control = { systems: {} };\n}\nwindow.control.systems = MOCK_SYSTEMS.reduce((a: { [module:string]: IMockEngineSystem }, v) => {\n    a[v.id] = v;\n    return a;\n}, {});\n\n// Add mock data for API endpoints\nconst USER_LIST = Array(1000).fill(0).map(i => generateMockUser());\n\nconst handlers: MockHttpRequestHandlerOptions[] = [\n    {\n        path: '/api/engine/v2/systems',\n        metadata: null,\n        method: 'GET',\n        callback: _ => ({ total: 10, results: MOCK_SYSTEMS })\n    },\n    {\n        path: '/api/staff/rooms',\n        metadata: null,\n        method: 'GET',\n        callback: _ => SPACE_LIST\n    },\n    {\n        path: '/api/staff/users',\n        metadata: null,\n        method: 'GET',\n        callback: _ => USER_LIST\n    },\n    {\n        path: '/api/engine/v2/users/current',\n        metadata: null,\n        method: 'GET',\n        callback: _ => USER_LIST[0]\n    },\n    {\n        path: '/api/engine/v2/zones',\n        metadata: null,\n        method: 'GET',\n        callback: _ => ({ total: 1, results: [{ id: 'zone_org-1' }] })\n    }\n];\nwindow.control.handlers = handlers;\n","\nimport { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { ADropdownsModule } from '@acaprojects/ngx-dropdown';\nimport { ASpinnerModule } from '@acaprojects/ngx-spinners';\nimport { AButtonsModule } from '@acaprojects/ngx-buttons';\nimport { APipesModule } from '@acaprojects/ngx-pipes';\nimport { AOverlayModule } from '@acaprojects/ngx-overlays';\nimport { ADynamicFormsModule } from '@acaprojects/ngx-dynamic-forms';\nimport { ACustomEventsModule } from '@acaprojects/ngx-custom-events';\n\nimport { BaseComponent } from './base.component';\nimport { CustomUserSearchFieldComponent } from './components/user-search-field/user-search-field.component';\nimport { CustomTimeFieldComponent } from './components/time-field/time-field.component';\nimport { CustomDurationFieldComponent } from './components/duration-field/duration-field.component';\n\nconst COMPONENTS: Type<any>[] = [\n    BaseComponent\n];\n\nconst ENTRY_COMPONENT: Type<any>[] = [\n    CustomUserSearchFieldComponent,\n    CustomTimeFieldComponent,\n    CustomDurationFieldComponent\n]\n\n@NgModule({\n    declarations: [\n        ...COMPONENTS,\n        ...ENTRY_COMPONENT,\n    ],\n    imports: [\n        CommonModule,\n        ADropdownsModule,\n        ASpinnerModule,\n        AButtonsModule,\n        AOverlayModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ACustomEventsModule,\n        ADynamicFormsModule\n    ],\n    exports: [\n        ADropdownsModule,\n        ASpinnerModule,\n        AButtonsModule,\n        APipesModule,\n        AOverlayModule,\n        ACustomEventsModule,\n        ADynamicFormsModule,\n        ...COMPONENTS,\n        ...ENTRY_COMPONENT\n    ],\n    entryComponents: [\n        ...COMPONENTS,\n        ...ENTRY_COMPONENT\n    ]\n})\nexport class SharedContentModule {}\n","import { HashMap } from \"./types.utilities\";\n\n/**\n * Convert map into a query string\n * @param map Key value pairs to convert\n */\nexport function toQueryString(map: HashMap) {\n    let str = '';\n    if (map) {\n        for (const key in map) {\n            if (map.hasOwnProperty(key) && map[key] !== undefined && map[key] !== null) {\n                str += `${(str ? '&' : '')}${key}=${map[key]}`;\n            }\n        }\n    }\n    return str;\n}\n","\nimport { humaniseDuration } from './general.utilities';\n\nimport { User } from '../../services/data/users/user.class';\nimport { Space } from '../../services/data/spaces/space.class';\n\nimport * as dayjs from 'dayjs';\n\n// attendees: FormFormatters.attendees(user),\n// date: FormFormatters.date,\n// room: FormFormatters.space,\n// recurrence: FormFormatters.recurrence\n\n/**\n * Get function to create formatted string for a list of users with a host\n * @param host Host user\n */\nexport function formatAttendeesWithHost(host: User): (_: User[]) => string {\n    return (l) => formatAttendees(l, host);\n}\n\n/**\n * Create formatted string from a list of users\n * @param list List of users\n * @param host Owner of the list of users\n */\nexport function formatAttendees(list: User[], host?: User) {\n    let attendee_str: string = '';\n    if (list && list.length > 0) {\n        const users = [...list];\n        if (host) {\n            const result = users.find(a => a.email === host.email);\n            if (result) {\n                users.splice(users.indexOf(result), 1);\n            }\n        }\n        const length = users.length + (host ? 1 : 0);\n        attendee_str = `${length} Attendee${length === 1 ? '' : 's'}; ${host ? host.name : ''}`;\n        for (const item of users) {\n            if (attendee_str) {\n                attendee_str += ', ';\n            }\n            attendee_str += item.name;\n        }\n        attendee_str = attendee_str.replace('; ,', ';');\n    }\n    return attendee_str;\n}\n\n/**\n * Create date formatted string for given date\n * @param date Date to format\n */\nexport function formatDate(date: number) {\n    return dayjs(date).format('DD MMMM YYYY');\n}\n\n/**\n * Create time formatted string for given date\n * @param date Date to format\n */\nexport function formatTime(date: number) {\n    return dayjs(date).format('h:mm A');\n}\n\n/**\n * Create formatted string for a period of given duration\n * @param duration Period duration in minutes\n */\nexport function formatPeriodWithDuration(duration: number) {\n    return (t) => formatPeriod(t, duration);\n}\n\n/**\n * Create formatted string for a period of given duration\n * @param timestamp Start hours and minutes of the period in the format `HH:mm`\n * @param duration Period duration in minutes\n */\nexport function formatPeriod(timestamp: string, duration: number = 60) {\n    const parts = timestamp.split(':');\n    const date = dayjs().hour(+parts[0]).minute(+parts[1]);\n    return `${date.format('h:mm A')} - ${date.add(duration, 'm').format('h:mm A')} (${humaniseDuration(duration)})`;\n}\n\n/**\n * Create formatted human readable string for a given duration\n * @param duration Duration in minutes\n */\nexport function formatDuration(duration: number) {\n    return humaniseDuration(duration);\n}\n\n/** Human readable names of applicable recurrence periods */\nexport const RECURRENCE_PERIODS: string[] = ['None', 'Daily', 'Weekly', 'Monthly', 'Yearly'];\n\n/**\n * Create human readable string for recurrence metadata\n * @param value\n */\nexport function formatRecurrence(value: { period: string | number, end: number }) {\n    if (!value || !value.period || value.period as any >= RECURRENCE_PERIODS.length) {\n        return 'No recurrence';\n    }\n    const period = typeof value.period === 'string' ? value.period : RECURRENCE_PERIODS[value.period];\n    const end = value.end ? `until ${dayjs(value.end).format('DD MMM YYYY')}` : 'forever';\n    return `${period} ${end}`;\n}\n\n/**\n * Create human readable string for a room or list of rooms\n * @param list List of spaces/rooms\n */\nexport function formatSpaces(list: Space | Space[]) {\n    if (!list || (list instanceof Array && list.length <= 0)) {\n        return 'No selected space';\n    }\n    if (list instanceof Array) {\n        return list.length === 1 ? list[0].name : `${list.length} Space${list.length !== 1 ? 's' : ''}`;\n    } else {\n        const capacity = list.capacity ? '(' + list.capacity + ' ' + (list.capacity === 1 ? 'person' : 'people') + ')' : '';\n        return `${list.name} ${capacity}`;\n    }\n}\n","import { HashMap } from './types.utilities';\n\nimport * as dayjs from 'dayjs';\n\nexport function getItemWithKeys(keys: string[], map: HashMap) {\n    const key = keys.shift();\n    if (map[key]) {\n        return keys.length > 0 ? getItemWithKeys(keys, map[key]) : map[key];\n    }\n    return null;\n}\n\n/**\n * Checks whether the platform is a mobile device.\n */\nexport function isMobileDevice(): boolean {\n    const r = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i;\n    return !!navigator.userAgent.match(r);\n}\n\n/**\n * Checks whether the browser is Mobile Safari.\n */\nexport function isMobileSafari(): boolean {\n    const agent = navigator.userAgent;\n    return !!(agent.match(/iPhone|iPad|iPod/) && agent.match(/AppleWebKit/) && !agent.match('CriOS'));\n}\n\n/**\n * Checks whether the browser is Android Chrome.\n */\nexport function isAndroidChrome(): boolean {\n    const agent = navigator.userAgent;\n    return !!(agent.match(/Android/) && agent.match(/Chrome/));\n}\n\n/**\n * Generate string representation of a number with zeros padding the length\n * @param value Number to pad with zeros\n * @param length Length of the resulting string\n */\nexport function padZero(value: number, length: number): string {\n    let str = value.toString();\n    while (str.length < length) {\n        str = '0' + str;\n    }\n    return str;\n}\n\n/**\n * Remove duplicates from the given array\n * @param array List of items to remove duplicates from\n * @param key Key on array objects to compare for uniqueness\n */\nexport function unique(array: any[], key: string = '') {\n    return array.filter((el, pos, arr) =>\n        arr.indexOf(key ? arr.find(i => i[key] === el[key]) : arr.find(i => i === el)) === pos\n    );\n}\n\n/**\n * Convert duration to human readable string\n * @param duration Duration in minutes\n * @param short Whether to use short form of duration words e.g. hours as h\n */\nexport function humaniseDuration(duration: number, short: boolean = false) {\n    if (!duration || duration < 0) { return ''; }\n    const h = Math.floor(duration / 60);\n    let d = `${h >= 1 ? (h + (short ? 'h' : (' hour' + (h === 1 ? '' : 's')))) : ''}`;\n    if (duration % 60 !== 0) {\n        if (d) { d += short ? ' ' : ', '; }\n        const m = duration % 60;\n        d += `${m >= 1 ? (m + (short ? 'm' : (' minute' + (m === 1 ? '' : 's')))) : ''}`;\n    }\n    return d;\n}\n\n/**\n * Get a filtered list of items\n * @param filter Value to filter on\n * @param items List of results to filter\n * @param fields Fields to check for matches on each item\n */\nexport function filterList<T = HashMap>(filter: string, items?: T[], fields: string[] = ['id']): T[] {\n    let results: any[];\n    // Tokenise filter string\n    const filters = (filter || '').toLowerCase().split(' ');\n    const list = {};\n    for (const f of filters) {\n        if (f) {\n            if (!list[f]) { list[f] = 0; }\n            list[f]++;\n        }\n    }\n    // Group similar tokens\n    const parts = [];\n    for (const f in list) {\n        if (list.hasOwnProperty(f)) {\n            parts.push({ word: f, count: list[f], regex: new RegExp(f, 'gi') });\n        }\n    }\n    parts.sort((a, b) => b.word.length - a.word.length || a.word.localeCompare(b.word));\n    const item_list = JSON.parse(JSON.stringify(items || []));\n    if (filter) {\n        results = item_list.filter(\n            (item) => {\n                let match_count = 0;\n                item.match_index = 65535;\n                item.match = '';\n                const field_list = {};\n                // Initialise field match variables\n                for (const f of fields) {\n                    field_list[f] = {\n                        value: (item[f] || '').toLowerCase(),\n                        index: 65536,\n                        matched: 0\n                    };\n                }\n                // Search for matches with the tokenised filter string\n                for (const i of parts) {\n                    if (i.word) {\n                        // Check fields for matches\n                        for (const f of fields) {\n                            const field = field_list[f];\n                            const index = field.value.indexOf(i.word);\n                            field.index = index < field.index ? index : field.index;\n                            field.matches = (field.value.match(i.regex) || []).length;\n                            field.value = field.value.replace(i.regex, ' ');\n                        }\n                        // Update token match count\n                        for (const f of fields) {\n                            const field = field_list[f];\n                            if (field.matches >= i.count) {\n                                match_count++;\n                                // Update field matches\n                                let changed = 0;\n                                const tokens = (item[`match_${f}`] || item[f] || '').split(' ');\n                                for (const k of tokens) {\n                                    if (changed >= i.count) {\n                                        break;\n                                    }\n                                    if (k.toLowerCase().indexOf(i.word) >= 0 && k.indexOf('`') < 0) {\n                                        tokens[tokens.indexOf(k)] = k.replace(i.regex, '`$&`');\n                                        changed++;\n                                    }\n                                }\n                                item[`match_${f}`] = tokens.join(' ');\n                                break;\n                            }\n                        }\n                    }\n                }\n                // Get field with the most relevent match\n                for (const f of fields) {\n                    const field = field_list[f];\n                    if (field.index < item.match_index && field.index >= 0) {\n                        item.match_index = field.index;\n                        item.match = f;\n                    }\n                }\n                return item.match_index >= 0 && item.match && (match_count >= parts.length);\n            });\n    } else {\n        results = item_list;\n    }\n    // Sort by order of relevence then name\n    results.sort((a, b) => {\n        const diff = a.match_index - b.match_index;\n        return diff === 0 ? a.name.localeCompare(b.name) : diff;\n    });\n    return results;\n}\n\n/**\n * Convert a match string from `filterList` to renderable HTML\n * @param str Match string to change\n */\nexport function matchToHighlight(str: string): string {\n    if (str) {\n        str = str.replace(/\\`[a-zA-Z0-9\\@\\.\\_]*\\`/g, '<span class=\"highlight\">$&</span>');\n        str = str.replace(/\\`/g, '');\n    }\n    return str;\n}\n\n/**\n * Convert time string to ms from UTC epoch for today\n * @param time Time string in the format `HH:mm`\n */\nexport function timeToDate(time: string): number {\n    const parts = (time || '').split(':');\n    const date = dayjs().hour(+parts[0]).minute(+parts[1]).startOf('m');\n    return date.valueOf();\n}\n\n/* istanbul ignore next */\n/**\n * Flatten nested array\n * @param an_array Array to flatten\n */\nexport function flatten<T = any>(an_array: (T[] | T)[]): T[] {\n    const stack: any[] = [...an_array];\n    const res = [];\n    while (stack.length) {\n        // pop value from stack\n        const next: T[] | T = stack.pop();\n        if (next instanceof Array) {\n            // push back array items, won't modify the original input\n            stack.push(...next);\n        } else {\n            res.push(next);\n        }\n    }\n    // reverse to restore input order\n    return res.reverse();\n}\n","import { AbstractControl } from '@angular/forms';\n\nimport { User } from '../../services/data/users/user.class';\n\nimport * as dayjs from 'dayjs';\n\nconst HAS_ERROR = true;\n\n/**\n * Check that control value is a date that is the same or after from date\n * @param control Angular form control\n * @param is_from Comparison date(ms from UTC epoch). Defaults to the current time\n */\nexport function validateDate(control: AbstractControl, is_from: number = dayjs().valueOf()) {\n    const from = dayjs(is_from);\n    const date = dayjs(control.value || undefined);\n    return date.isBefore(from, 'd') ? { date: HAS_ERROR, message: 'Booking needs to be made in the future' } : null;\n}\n\n/**\n * Build start time validation function\n * @param date Date of the time to check\n * @param is_from Comparison date(ms from UTC epoch). Defaults to the current time\n */\nexport function buildValidateStartTime(date: number, is_from: number = dayjs().valueOf()) {\n    return (c) => validateStartTime(c, date, is_from);\n}\n\n/**\n * Check that control value time is after the comparison date time\n * @param control Angular form control\n * @param date Date of the time to check\n * @param is_from Comparison date(ms from UTC epoch). Defaults to the current time\n */\nexport function validateStartTime(control: AbstractControl, date: number, is_from: number = dayjs().valueOf()) {\n    const now = dayjs(is_from);\n    const parts = control.value.split(':');\n    const date_obj = dayjs(date).hour(+parts[0]).minute(+parts[1]);\n    return date_obj.isBefore(now, 'm') ? { start: HAS_ERROR, message: 'Booking time needs to be made in the future' } : null;\n}\n\nexport function buildValidateDuration(min: number = 30, max: number = 240) {\n    return (c) => validateDuration(c, min, max);\n}\n\nexport function validateDuration(control: AbstractControl, min: number = 30, max: number = 240) {\n    if (control.value < (min || 30)) {\n        return { duration: HAS_ERROR, message: `Minimum booking duration is ${min} minute${min === 1 ? 's' : ''}` };\n    } else if (control.value > (max || 480)) {\n        return { length: HAS_ERROR, message: `Maximum booking duration is ${max} minute${max === 1 ? 's' : ''}` };\n    }\n    return null;\n}\n\nexport function buildValidateAttendees(host: User, min: number = 0) {\n    return (c) => validateAttendees(c, host, min);\n}\n\nexport function validateAttendees(control: AbstractControl, host: User, min: number = 0) {\n    if (!control || !(control.value instanceof Array)) {\n        return min > 0\n            ? { invalid: true, message: `Minimum of ${min} attendee${min === 1 ? ' is' : 's are'} required other than you` }\n            : null;\n    }\n    const list: User[] = control.value;\n    if (host) {\n        const result = list.find(a => a.email === host.email);\n        if (result) { list.splice(list.indexOf(result), 1); }\n    }\n    return list.length >= min ? null : {\n        count: true,\n        message: `Minimum of ${min} attendee${min === 1 ? ' is' : 's are'} required other than you`\n    };\n}\n","<div class=\"bootstrap\">\n    <div class=\"options\">\n        <div class=\"header fs-big\">\n            <h1>Booking Panel Setup</h1>\n            <div\n                    class=\"toggle\"\n                    feedback\n                    center=\"true\"\n                    *ngIf=\"(systemsList | async).length > 0\"\n                    (tapped)=\"toggleManualInput()\"\n            >\n                <i class=\"material-icons\">{{ (useManualInput | async) ? 'list' : 'code' }}</i>\n            </div>\n        </div>\n        <div class=\"body\" *ngIf=\"!(isLoading | async)\">\n            <ng-container *ngIf=\"(useManualInput | async); else list_desc\">\n                <p class=\"description\">\n                    Input the Engine System ID to bootstrap\n                </p>\n                <div class=\"content\">\n                    <div class=\"input\" [class.focus]=\"input_focus || (currentSystemId | async)\">\n                        <input [ngModel]=\"(currentSystemId | async)\"\n                               (ngModelChange)=\"currentSystemId.next($event)\"\n                               (focus)=\"input_focus = true\" (blur)=\"input_focus = false\"/>\n                        <div class=\"placeholder\" [class.focus]=\"input_focus\">Engine System ID</div>\n                    </div>\n                </div>\n            </ng-container>\n            <ng-template #list_desc>\n                <p class=\"description\">\n                    Select the relevent system from the available dropdown\n                </p>\n                <div class=\"content\">\n                    <a-dropdown\n                            klass=\"fill\"\n                            [items]=\"systemsList | async\"\n                            [ngModel]=\"currentSystem | async\"\n                            (ngModelChange)=\"selectItem($event)\"\n                            [options]=\"{ can_filter: true }\"\n                            placeholder=\"Select system\"\n                    ></a-dropdown>\n                </div>\n            </ng-template>\n        </div>\n        <div class=\"body\" *ngIf=\"isLoading | async\">\n            <div class=\"info-block\">\n                <div class=\"icon\">\n                    <a-spinner circle-ring color=\"#000\"></a-spinner>\n                </div>\n                <div class=\"text\">\n                    Loading system data...\n                </div>\n            </div>\n        </div>\n        <div class=\"footer\" *ngIf=\"!(isLoading | async)\">\n            <button\n                    widget\n                    [disabled]=\"!(currentSystemId | async)\"\n                    (tapped)=\"bootstrap()\"\n            >\n                Submit\n            </button>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { EngineSystem } from '@placeos/ts-client';\n\nimport { ApplicationService } from '../../services/app.service';\nimport { BaseComponent } from '../../shared/base.component';\nimport { distinctUntilChanged, filter, first, map, take, tap, withLatestFrom } from 'rxjs/operators';\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\n\n@Component({\n    selector: 'app-bootstrap',\n    templateUrl: './bootstrap.component.html',\n    styleUrls: ['./bootstrap.component.scss']\n})\nexport class BootstrapComponent extends BaseComponent implements OnInit {\n    /** Whether input field is focused */\n    public input_focus: boolean;\n    private routeParams = new BehaviorSubject<ParamMap | undefined>(undefined);\n    public currentSystemId = new BehaviorSubject<string | undefined>(undefined);\n    public useManualInput = new BehaviorSubject<boolean>(false);\n    public systemsList = new BehaviorSubject<EngineSystem[]>([]);\n    public isLoading = new BehaviorSubject<boolean>(false);\n    public currentSystem = combineLatest([\n        this.systemsList,\n        this.currentSystemId\n    ]).pipe(map(([systems, id]) => systems.find(s => s.id === id)));\n\n    constructor(private service: ApplicationService, private route: ActivatedRoute) {\n        super();\n    }\n\n    private log = (name: string, obj: Observable<any>) => {\n        this.subscription(name, obj.pipe(\n            tap(t => console.log(name.toUpperCase(), t))\n        ).subscribe());\n    };\n\n    public ngOnInit(): void {\n        // do load manually\n        this.service.Systems.doLoad();\n\n        this.log('manual', this.useManualInput);\n        this.log('routeParams', this.routeParams);\n        this.log('currentSystemId', this.currentSystemId);\n        this.log('currentSystem', this.currentSystem);\n        this.log('systemsList', this.systemsList);\n        this.log('isLoading', this.isLoading);\n        this.isLoading.next(true);\n        this.subscription('route.query', this.route.queryParamMap.subscribe((params) => {\n            this.routeParams.next(params);\n        }));\n\n        this.subscription('route.params.currentSystem', this.routeParams\n            .pipe(filter(params => params.has('system_id') || params.has('sys_id')),\n                map(params => params.get('system_id') || params.get('sys_id')))\n            .subscribe(next => {\n                this.currentSystemId.next(next);\n                this.useManualInput.next(true);\n                this.configure(next);\n            }));\n\n        this.subscription('route.params.clear', this.routeParams.pipe(\n            map(params => params.has('clear') && params.get('clear')),\n            filter(f => !!f))\n            .subscribe(next => {\n                this.currentSystemId.next(undefined);\n                this.clearBootstrap();\n            }));\n\n        this.subscription('system_list', this.service.Systems\n            .list()\n            .pipe(distinctUntilChanged(),\n                withLatestFrom(this.isLoading))\n            .subscribe(([systems, isLoading]) => {\n                this.systemsList.next(systems || []);\n                this.useManualInput.next(!isLoading && systems && systems.length <= 0);\n                if (systems) {\n                    this.isLoading.next(false);\n                }\n            }));\n\n        this.subscription('Spaces.initialized', this.service.Spaces.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.checkBootstrapped();\n        }));\n    }\n\n    public toggleManualInput() {\n        this.useManualInput.next(!this.useManualInput.value);\n    }\n\n    /**\n     * Setup the default system for the application to bind to\n     */\n    public bootstrap() {\n        this.currentSystemId\n            .pipe(take(1),\n                filter(systemId => !!systemId))\n            .subscribe((currentSystem) => {\n                this.configure(currentSystem);\n            });\n    }\n\n    public selectItem(engine: EngineSystem) {\n        this.currentSystemId.next(engine.id);\n    }\n\n    /**\n     * Check if the application has previously been bootstrapped\n     */\n    private checkBootstrapped(): void {\n        if (localStorage) {\n            const storedSystemId = localStorage.getItem('ACA.PANEL.system') || localStorage.getItem('ACA.CONTROL.system');\n            if (storedSystemId) {\n                this.currentSystemId.next(storedSystemId);\n                return;\n            }\n        }\n    }\n\n    /**\n     * Save the bootstrapped ID and redirect to the panel for that ID\n     * @param system_id System to bootstrap\n     */\n    private configure(system_id: string): void {\n        if (localStorage) {\n            localStorage.setItem('ACA.PANEL.system', system_id);\n        }\n        this.service.navigate(['panel', system_id]);\n    }\n\n    /**\n     * Remove any previously set bootstrapping details\n     */\n    private clearBootstrap() {\n        if (localStorage) {\n            localStorage.removeItem('ACA.PANEL.system');\n        }\n    }\n\n}\n\n","<div class=\"panel-array\">\n    <ng-container *ngIf=\"systems && systems.length > 0; else none\">\n        <div\n            class=\"panel-outlet\"\n            *ngFor=\"let id of systems | slice: 0:4; let i = index\"\n            [style.height]=\"systems.length >= 2 ? '50%' : '100%'\"\n        >\n            <app-booking-panel *ngIf=\"id; else empty_state\" [system_id]=\"id\" [show_time]=\"false\" [reverse]=\"i % 2 !== 0\"></app-booking-panel>\n        </div>\n    </ng-container>\n    <ng-template #none>\n        <div class=\"info-block\">\n            <div class=\"text\">No systems are set for displaying on the panel array</div>\n        </div>\n    </ng-template>\n</div>\n<ng-template #empty_state>\n    <div class=\"container\">\n        <div class=\"content center\">\n            <div class=\"logo\" *ngIf=\"logo\">\n                <img [src]=\"logo\"/>\n            </div>\n            <div class=\"time\">{{ time }}</div>\n        </div>\n    </div>\n</ng-template>\n\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { BaseComponent } from '../../shared/base.component';\nimport { ApplicationService } from 'src/app/services/app.service';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'app-booking-panel-array',\n    templateUrl: './panel-array.component.html',\n    styleUrls: ['./panel-array.component.scss']\n})\nexport class BookingPanelArrayComponent extends BaseComponent implements OnInit {\n    /** List of systems to show panels for */\n    public systems: string[];\n    /** Application logo */\n    public logo: string;\n\n    /** Display value for the current time */\n    public get time(): string {\n        return dayjs().format('h:mm:ss A')\n    }\n\n    constructor(private route: ActivatedRoute, private _service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription('app_ready', this._service.initialised.subscribe((is_ready) => {\n            if (is_ready) {\n                this.subscription('route.query', this.route.queryParamMap.subscribe((params) => {\n                    if (params.has('system_ids')) {\n                        this.systems = (params.get('system_ids') || '').split(',');\n                    }\n                }));\n                const logo = this._service.setting('app.logo');\n                this.logo = (logo ? logo.inverse : null) || '';\n                this.unsub('app_ready');\n            }\n        }));\n    }\n}\n","<div class=\"panel-select\" (window:mousedown)=\"reset()\" (window:touchstart)=\"reset()\">\n    <div class=\"panel-options\">\n        <ng-container *ngIf=\"systems && systems.length > 0; else none\">\n            <div class=\"item\" *ngFor=\"let id of systems | slice: 0:8; let i = index\" (tapped)=\"system_name[id] ? showPanel(id) : ''\">\n                <div class=\"bindings\" *ngIf=\"id\">\n                    <i binding [sys]=\"id\" mod=\"Bookings\" bind=\"room_name\" [(model)]=\"system_name[id]\"></i>\n                    <i binding [sys]=\"id\" mod=\"Bookings\" bind=\"icon\" [(model)]=\"system_icon[id]\"></i>\n                    <i binding [sys]=\"id\" mod=\"Bookings\" bind=\"today\" (modelChange)=\"updateStatus(id, $event)\"></i>\n                </div>\n                <div [class]=\"'icon' + (system_status[id] ? ' ' + system_status[id] : '')\">\n                    <img *ngIf=\"system_name[id]\" [src]=\"system_icon[id]\">\n                    <a-spinner *ngIf=\"!system_name[id]\" circle-ring color=\"#fff\"></a-spinner>\n                </div>\n                <div class=\"text\">{{ system_name[id] || id + ' connecting...' }}</div>\n            </div>\n        </ng-container>\n    </div>\n    <div class=\"panel-outlet\" *ngIf=\"active_system\">\n        <app-booking-panel [system_id]=\"active_system\"></app-booking-panel>\n        <div class=\"overlay\">\n            <button widget class=\"action close\" (tapped)=\"close()\" (contextmenu)=\"$event.preventDefault()\">\n                <div class=\"icon\">\n                    <i class=\"material-icons\">close</i>\n                </div>\n            </button>\n            <button widget class=\"action countdown\" (contextmenu)=\"$event.preventDefault()\">{{ countdown }}</button>\n        </div>\n    </div>\n    <ng-template #none>\n        <div class=\"info-block\">\n            <div class=\"text\">No systems are set for displaying on the panel select list</div>\n        </div>\n    </ng-template>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { BaseComponent } from '../../shared/base.component';\nimport { ActivatedRoute } from '@angular/router';\nimport { HashMap } from '../../shared/utilities/types.utilities';\nimport { Space } from '../../services/data/spaces/space.class';\nimport { ApplicationService } from '../../services/app.service';\n\n@Component({\n    selector: 'app-booking-panel-select',\n    templateUrl: './panel-select.component.html',\n    styleUrls: ['./panel-select.component.scss']\n})\nexport class BookingPanelSelectComponent extends BaseComponent implements OnInit {\n    /** List of systems to show panels for */\n    public systems: string[];\n    /** Names for the list of systems */\n    public system_name: HashMap<string> = {};\n    /** Icons for the list of systems */\n    public system_icon: HashMap<string> = {};\n    /** Status for the list of systems */\n    public system_status: HashMap<string> = {};\n    /** Active Panel system */\n    public active_system: string;\n    /** Countdown counter */\n    public countdown: number;\n\n    constructor(private route: ActivatedRoute, private service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription('route.query', this.route.queryParamMap.subscribe((params) => {\n            if (params.has('system_ids')) {\n                this.systems = (params.get('system_ids') || '').split(',');\n            }\n        }));\n    }\n\n    /**\n     * Show booking panel for the given system ID\n     * @param id ID of the system to show\n     */\n    public showPanel(id: string) {\n        this.active_system = id;\n        this.reset();\n    }\n\n    /**\n     * Update the status value for the given system ID\n     * @param id ID of the system to update\n     * @param bookings List of current bookings for the system\n     */\n    public updateStatus(id: string, bookings: HashMap[]) {\n        const space = new Space(this.service.Spaces, { id, bookings });\n        this.system_status[id] = space.current ? 'available' : 'unavailable';\n    }\n\n    /**\n     * Close the modal\n     */\n    public close() {\n        this.active_system = null;\n        this.clearInterval('countdown');\n    }\n\n    /**\n     * User confirmation of the content of the modal\n     */\n    public reset() {\n        if (this.active_system) {\n            this.countdown = 30;\n            this.interval('countdown', () => this.tick(), 1000);\n        }\n    }\n\n    /**\n     * Decrement countdown and close if 0\n     */\n    public tick() {\n        if (this.countdown <= 0) {\n            this.close();\n        }\n        this.countdown--;\n    }\n}\n","<div class=\"booking-actions\">\n    <div class=\"actions\" *ngIf=\"space\">\n        <button widget class=\"end large action\" *ngIf=\"status === 'endable'\" (tapped)=\"confirmEnd()\" (contextmenu)=\"$event.preventDefault()\">\n            <div class=\"icon\">\n                <i class=\"material-icons\">event_busy</i>\n            </div>\n            <div class=\"text\">End</div>\n        </button>\n        <button widget class=\"start large action\" *ngIf=\"status === 'pending'\" (tapped)=\"startMeeting()\" (contextmenu)=\"$event.preventDefault()\">\n            <div class=\"icon\">\n                <i class=\"material-icons\">event_available</i>\n            </div>\n            <div class=\"text\">Start</div>\n        </button>\n        <button widget class=\"book large action\" *ngIf=\"!no_booking\" (tapped)=\"book()\" (contextmenu)=\"$event.preventDefault()\">\n            <div class=\"icon\">\n                <i class=\"material-icons\">add</i>\n            </div>\n            <div class=\"text\">Book</div>\n        </button>\n    </div>\n    <div class=\"bindings\" *ngIf=\"space\">\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"booking_disabled\" [(model)]=\"no_booking\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"last_meeting_started\" [(model)]=\"last_started\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"is_endable\" [(model)]=\"is_endable\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"timeout\" [(model)]=\"pending_timeout\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"cancel_timeout\" [(model)]=\"cancel_timeout\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"ask_start\" [(model)]=\"ask_start\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"ask_end\" [(model)]=\"ask_end\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"default_title\" [(model)]=\"default_title\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"min_duration\" [(model)]=\"min_duration\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"max_duration\" [(model)]=\"max_duration\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"business_start\" [(model)]=\"business_start\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"business_end\" [(model)]=\"business_end\"></i>\n    </div>\n</div>\n","\nimport { Component, Input } from '@angular/core';\n\nimport { Space } from '../../../services/data/spaces/space.class';\nimport { BaseComponent } from '../../../shared/base.component';\nimport { ApplicationService } from '../../../services/app.service';\nimport { timeToDate } from '../../../shared/utilities/general.utilities';\n\nimport * as dayjs from 'dayjs';\n\nexport type SpaceStatus = 'pending' | 'available' | 'unavailable' | 'endable';\n\n@Component({\n    selector: 'panel-booking-actions',\n    templateUrl: './booking-actions.component.html',\n    styleUrls: ['./booking-actions.component.scss']\n})\nexport class PanelBookingActionsComponent extends BaseComponent {\n    /** Space with which to display bookings for */\n    @Input() public space: Space;\n    /** Whether booking is allowed */\n    public no_booking: boolean = false;\n    /** Whether the current booking is able to be ended */\n    public is_endable: number;\n    /** Number of seconds before a meeting can be started, being truthy enables start/stop and auto-cancellations */\n    public pending_timeout: number;\n    /** Number of seconds after the start of a meeting when it is auto-cancelled, overrides `timeout` value */\n    public cancel_timeout: number;\n    /** Timestamp of the last started meeting as ms since UTC epoch */\n    public last_started: number;\n    /** Whether to ask user to start the meeting */\n    public ask_start: boolean;\n    /** Whether to ask user to end the meeting */\n    public ask_end: boolean;\n    /** Time of the last automatic confirmation of start or end */\n    public last_confirm: number = 0;\n    /** Default title for bookings */\n    public default_title: string;\n    /** Maximum allowed booking duation */\n    public max_duration: number;\n    /** Minimum allowed booking duation */\n    public min_duration: number;\n    /** Start time of the business day with format `HH:mm` */\n    public business_start: string;\n    /** End time of the business day with format `HH:mm` */\n    public business_end: string;\n\n    /** Current status of the active system */\n    public get status(): SpaceStatus{\n        let status: SpaceStatus = 'available';\n            if (this.space && (this.space.current || this.space.next)) {\n                const booking = this.space.current || this.space.next;\n                status = this.space.current ? 'unavailable' : 'available';\n                if (this.pending_timeout) {\n                    const now = dayjs().startOf('m').second(1);\n                    const business_start = dayjs(timeToDate(this.business_start || '08:00'));\n                    const business_end = dayjs(timeToDate(this.business_end || '17:30'));\n                    // Check if within business hours before looking at pending logic\n                    if (now.isBefore(business_start, 'm') || now.isAfter(business_end, 'm')) {\n                        return status;\n                    }\n                    const date = dayjs(booking.date);\n                    if (this.last_started >= now.valueOf() || this.last_started >= date.valueOf()) {\n                        if (this.is_endable && this.space.current) {\n                            const end = date.add(booking.duration, 'm').startOf('m');\n                            const block_end = end.subtract(Math.max(this.is_endable, 300), 's');\n                            if (now.isAfter(block_end, 's') && now.isBefore(end, 'm')) {\n                                status = 'endable';\n                                if (this.ask_end && this.last_confirm < end.valueOf()) {\n                                    this.confirmEnd();\n                                    this.last_confirm = end.valueOf();\n                                }\n                            } else {\n                                status = 'unavailable';\n                            }\n                        } else {\n                            status = 'unavailable';\n                        }\n                    } else {\n                        const pending_start = date.startOf('m').subtract(this.pending_timeout, 's');\n                        const pending_end = date.startOf('m').add(this.cancel_timeout || this.pending_timeout, 's');\n                        if (now.isAfter(pending_start, 's') && now.isBefore(pending_end, 's')) {\n                            status = 'pending';\n                            if (this.ask_start && this.last_confirm < date.valueOf()) {\n                                this.confirmStart();\n                                this.last_confirm = date.valueOf();\n                            }\n                        }\n                    }\n                }\n            }\n        return status;\n    }\n\n    constructor(private service: ApplicationService) {\n        super();\n    }\n\n    /**\n     * Open modal to make a new booking\n     */\n    public book() {\n        this.service.Bookings.new({\n            space: this.space,\n            title: this.default_title,\n            max_duration: this.max_duration,\n            min_duration: this.min_duration\n        });\n    }\n\n    /**\n     * Open confirmation modal for starting the meeting\n     */\n    public confirmStart() {\n        this.service.Overlay.open('confirm', {\n            config: 'modal',\n            data: {\n                title: 'Do you wish to start your meeting?',\n                body: `If you don't start your meeting it will be cancelled ${this.cancel_timeout / 60} minutes after the start time.`,\n                icon: { class: 'material-icons', value: 'play_arrow' }\n            }\n        }, _ => this.startMeeting());\n    }\n\n    /**\n     * Execute the logic on the engine driver to start the current or upcoming meeting\n     */\n    public startMeeting() {\n        if (this.space) {\n            const meeting = this.space.current || this.space.next;\n            const module = this.service.Systems.get(this.space.id, 'Bookings');\n            if (meeting && module) {\n                const date = dayjs(meeting.date);\n                module.exec('start_meeting', [meeting.date]).then(_ => {\n                    this.service.Analytics.event('Checkin', 'checked-in', `${this.space.id} at ${date.format('DD MMM YYYY, h:mm A Z')}`);\n                }, (e) => {\n                    this.service.notifyError(`Error starting meeting. ${e}`);\n                    this.service.Analytics.event('Checkin', 'checked-in-failed', `${this.space.id} at ${date.format('DD MMM YYYY, h:mm A Z')}`);\n                });\n            }\n        }\n    }\n\n    /**\n     * Open confirmation modal for ending the meeting\n     */\n    public confirmEnd() {\n        this.service.Overlay.open('confirm', {\n            config: 'modal',\n            data: {\n                title: 'Are you sure want to end your meeting?',\n                body: 'Ending your meeting early will free up this room for others to use',\n                icon: { class: 'material-icons', value: 'stop' }\n            }\n        }, _ => this.endMeeting());\n    }\n\n    /**\n     * Execute end meeting logic on engine driver\n     * @param reason Reason for ending the meeting early\n     */\n    public endMeeting(reason: string = 'user_input') {\n        if (this.space) {\n            const meeting = this.space.current || this.space.next;\n            const module = this.service.Systems.get(this.space.id, 'Bookings');\n            if (meeting && module) {\n                const date = dayjs(meeting.date);\n                module.exec('cancel_meeting', [meeting.date, reason]).then(_ => {\n                    this.service.Analytics.event('Checkin', 'cancelled', `${this.space.id} at ${date.format('DD MMM YYYY, h:mm A Z')} | ${reason}`);\n                }, (e) => {\n                    this.service.notifyError(`Error starting meeting. ${e}`);\n                    this.service.Analytics.event('Checkin', 'cancel-failed', `${this.space.id} at ${date.format('DD MMM YYYY, h:mm A Z')} | ${reason}`);\n                });\n            }\n        }\n    }\n\n}\n\n","<div class=\"custom-actions\">\n    <div class=\"actions\" *ngIf=\"space\">\n        <button widget class=\"action control\" *ngIf=\"can_control !== false && control_url\" (tapped)=\"openControl()\" (contextmenu)=\"$event.preventDefault()\">\n            <div class=\"icon\">\n                <i class=\"material-icons\">dvr</i>\n            </div>\n        </button>\n        <button widget class=\"action service\" *ngIf=\"catering\" (tapped)=\"confirmWaiterCall()\" (contextmenu)=\"$event.preventDefault()\">\n            <div class=\"icon\">\n                <i class=\"material-icons\">room_service</i>\n            </div>\n        </button>\n    </div>\n    <div class=\"bindings\" *ngIf=\"space\">\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"control_url\" [(model)]=\"control_url\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"can_control\" [(model)]=\"can_control\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"has_catering\" [(model)]=\"catering\"></i>\n    </div>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { Space } from '../../../services/data/spaces/space.class';\nimport { ApplicationService } from '../../../services/app.service';\n\n@Component({\n    selector: 'panel-custom-actions',\n    templateUrl: './custom-actions.component.html',\n    styleUrls: ['./custom-actions.component.scss']\n})\nexport class PanelCustomActionsComponent {\n    /** Space with which to display bookings for */\n    @Input() public space: Space;\n    /** Control URL of the active space */\n    public control_url: string;\n    /** Whether the user is able to open the control URL */\n    public can_control: boolean;\n    /** Whether space has catering */\n    public catering: boolean;\n\n    constructor(private service: ApplicationService) {}\n\n    /**\n     * Open confirmation modal for ending the meeting\n     */\n    public confirmWaiterCall() {\n        this.service.Overlay.open('confirm', {\n            config: 'modal',\n            data: {\n                title: 'Call a waiter to your room?',\n                body: 'Call a waiter to your room to order catering',\n                icon: { class: 'material-icons', value: 'call' }\n            }\n        }, _ => this.callWaiter());\n    }\n\n    /**\n     * Execute call waiter logic on engine driver\n     */\n    public callWaiter() {\n        if (this.space) {\n            const module = this.service.Systems.get(this.space.id, 'Bookings');\n            if (module) {\n                module.exec('waiter_call', []).then(_ => {\n                    this.service.Analytics.event('Catering', 'waiter-call', (new Date).toISOString());\n                }, (e) => {\n                    this.service.Analytics.event('Catering', 'waiter-call-failed', (new Date).toISOString());\n                    this.service.notifyError(`Error calling waiter. ${e}`);\n                });\n            }\n        }\n    }\n\n    /**\n     * Open modal to show embeded control URL\n     */\n    public openControl() {\n        this.service.Analytics.event('Control', 'open-view', (new Date).toISOString());\n        this.service.Overlay.open('embeded-control', {\n            config: 'modal',\n            data: {\n                control_url: this.control_url\n            }\n        });\n    }\n}\n","<div class=\"booking-panel\" [class.disabled]=\"interactive === false\" [class.reverse]=\"reverse || flip_status\" [class.no-time]=\"!show_time\">\n    <div [class]=\"'status' + (status && !hide_all ? ' ' + status : '')\">\n        <div class=\"time-display\" *ngIf=\"show_time\">{{ display_time }}</div>\n    </div>\n    <div class=\"body\">\n        <div class=\"details-display\">\n            <div class=\"content\">\n                <div class=\"title\" (tapped)=\"showTitle()\" [class.show]=\"show_title\">{{ space_name }}</div>\n                <div [class]=\"'status-text' + (status && !hide_all ? ' ' + status : '')\" >\n                    {{ (!hide_all ? status_display : null) || 'Not Bookable' }}\n                </div>\n                <div class=\"details\" *ngIf=\"!hide_all && show_details\">\n                    <panel-space-details [space]=\"space\"></panel-space-details>\n                </div>\n            </div>\n            <div class=\"overlay\" *ngIf=\"!hide_all && show_details\">\n                <panel-booking-actions [space]=\"space\"></panel-booking-actions>\n                <panel-custom-actions [space]=\"space\"></panel-custom-actions>\n            </div>\n        </div>\n        <div class=\"timeline\" *ngIf=\"show_details\">\n            <panel-timeline [space]=\"space\"></panel-timeline>\n        </div>\n    </div>\n    <div class=\"bindings\" *ngIf=\"system_id\">\n        <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"room_name\" [(model)]=\"space_name\"></i>\n        <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"touch_enabled\" [(model)]=\"interactive\"></i>\n        <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"today\" (modelChange)=\"updateBookings($event)\"></i>\n        <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"timeout\" [(model)]=\"pending_timeout\" (modelChange)=\"updateStatus()\"></i>\n        <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"cancel_timeout\" [(model)]=\"cancel_timeout\" (modelChange)=\"updateStatus()\"></i>\n        <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"last_meeting_started\" [(model)]=\"last_started\" (modelChange)=\"updateStatus()\"></i>\n        <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"hide_all\" [(model)]=\"hide_all\"></i>\n        <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"flip_status\" [(model)]=\"flip_status\"></i>\n        <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"can_cancel\" [(model)]=\"can_cancel\"></i>\n        <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"business_start\" [(model)]=\"business_start\"></i>\n        <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"business_end\" [(model)]=\"business_end\"></i>\n        <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"status_override\" [(model)]=\"status_overrides\"></i>\n    </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { ApplicationService } from '../../services/app.service';\nimport { BaseComponent } from '../../shared/base.component';\nimport { Space } from '../../services/data/spaces/space.class';\nimport { HashMap } from '../../shared/utilities/types.utilities';\nimport { timeToDate } from '../../shared/utilities/general.utilities';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'app-booking-panel',\n    templateUrl: './panel.component.html',\n    styleUrls: ['./panel.component.scss']\n})\nexport class BookingPanelComponent extends BaseComponent implements OnInit {\n    /** ID of the active system */\n    @Input() public system_id: string;\n    /** Whether the status is on the right side */\n    @Input() public reverse: boolean;\n    /** Whether to show the time at the bottom of the status */\n    @Input() public show_time = true;\n    /** Name of the connected system */\n    public space_name: string;\n    /** Space with which to display bookings for */\n    public space: Space;\n    /** Number of seconds before a meeting can be started, being truthy enables start/stop and auto-cancellations */\n    public pending_timeout: number;\n    /** Number of seconds after the start of a meeting when it is auto-cancelled, overrides `timeout` value */\n    public cancel_timeout: number;\n    /** Timestamp of the last started meeting as ms since UTC epoch */\n    public last_started: number;\n    /** Whether to hide booking related details */\n    public hide_all: boolean;\n    /** Whether user interaction is enabled for the panel */\n    public interactive = true;\n    /** Whether status display is on the right side of the UI */\n    public flip_status: boolean;\n    /** Whether bookings can be cancelled if they timeout */\n    public can_cancel: boolean;\n    /** Time of the last cancelled meeting in ms since UTC epoch */\n    private last_cancel: number;\n    /** Start time of the business day with format `HH:mm` */\n    public business_start: string;\n    /** End time of the business day with format `HH:mm` */\n    public business_end: string;\n    /** Whether to show full room name when it overflows */\n    public show_title: boolean;\n    /** Override mapping for status values */\n    public status_overrides: HashMap<string>;\n    /** Status of websocket */\n    public websocket_connected: boolean;\n\n    /** Current status of the active system */\n    private _status: 'pending' | 'available' | 'unavailable';\n\n    /** Get the display value for the status */\n    public get status_display(): string {\n        if (!this.websocket_connected && !this._service.setting('show_status_when_disconnected')) {\n            return ' ';\n        }\n        if (this.status_overrides && Object.keys(this.status_overrides).length === 1) {\n            this._status = this.space.current ? 'unavailable' : Object.keys(this.status_overrides)[0] as any;\n        }\n        const status = (!this.hide_all ? this._status : null) || 'not-bookable';\n        return (this.status_overrides || [])[status] || this._status;\n    }\n\n    /** Current status of the active system */\n    public get status(): 'pending' | 'available' | 'unavailable' | 'not-bookable' {\n        if (!this.websocket_connected && !this._service.setting('show_status_when_disconnected')) {\n            return 'not-bookable';\n        }\n        // Perform any status overrides\n        this.updateStatus();\n        if (\n            this.status_overrides &&\n            Object.keys(this.status_overrides).length === 1 &&\n            (!this.space.current || this._status !== 'unavailable')\n        ) {\n            this._status = Object.keys(this.status_overrides)[0] as any;\n        }\n        return this._status;\n    }\n    /** Whether booking details should be shown */\n    public get show_details(): boolean {\n        return this.websocket_connected || !!this._service.setting('show_status_when_disconnected');\n    }\n\n    /** Display string for the current time */\n    public get display_time(): string {\n        return dayjs().format('h:mm A');\n    }\n\n    constructor(public _service: ApplicationService, public _route: ActivatedRoute) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription('app_ready', this._service.initialised.subscribe((is_ready) => {\n            if (is_ready) {\n                this.subscription(\n                    'route.params',\n                    this._route.paramMap.subscribe(params => {\n                        if (params.has('system_id')) {\n                            this.system_id = params.get('system_id');\n                            this._service.set('system', this.system_id);\n                        }\n                    })\n                );\n                this.timeout('websocket', () => {\n                    this._service.websocket.status(status => {\n                        this.websocket_connected = status;\n                    });\n                });\n                this.unsub('app_ready');\n            }\n        }));\n    }\n\n    /**\n     * Update the bookings for the active space\n     * @param bookings Array of raw booking data\n     */\n    public updateBookings(bookings: HashMap[]): void {\n        this.space = new Space(this._service.Spaces, {\n            id: this.system_id,\n            name: this.space_name,\n            bookings\n        });\n    }\n\n    /**\n     * Update the current status of the active space\n     */\n    public updateStatus(): void {\n        if (this.hide_all) {\n            this._status = null;\n        } else {\n            if (this.space && (this.space.current || this.space.next)) {\n                const booking = this.space.current || this.space.next;\n                this._status = this.space.current ? 'unavailable' : 'available';\n                if (this.pending_timeout) {\n                    const now = dayjs();\n                    const date = dayjs(booking.date).startOf('m');\n                    if (this.last_started >= now.valueOf() || this.last_started >= date.valueOf()) {\n                        this._status = 'unavailable';\n                    } else {\n                        // Only meetings with durations less than 8 hours can be pending or cancelled\n                        const pending_start = date.subtract(this.pending_timeout, 's');\n                        const pending_end = date.add(this.cancel_timeout || this.pending_timeout, 's');\n                        const end = date.add(booking.duration, 'm');\n                        if (now.isAfter(pending_start, 's') && now.isBefore(pending_end, 's')) {\n                            this._status = 'pending';\n                        } else if (now.isAfter(pending_end, 's') && now.isBefore(end, 'm')) {\n                            this._status = 'pending';\n                            const business_start = dayjs(timeToDate(this.business_start || '08:00'));\n                            const business_end = dayjs(timeToDate(this.business_end || '17:30'));\n                            // Check if within business hours before cancelling the meeting\n                            if (now.isBefore(business_start, 'm') || now.isAfter(business_end, 'm')) {\n                                return;\n                            }\n                            this.endMeeting('timeout');\n                        }\n                    }\n                }\n            } else {\n                this._status = 'available';\n            }\n        }\n    }\n\n    /**\n     * Show full room name if overflowing\n     */\n    public showTitle() {\n        this.show_title = true;\n        this.timeout('hide_title', () => (this.show_title = false), 3000);\n    }\n\n    /**\n     * Execute end meeting logic on engine driver\n     * @param reason Reason for ending the meeting early\n     */\n    private endMeeting(reason: string = 'user_input') {\n        if (this.space && this.can_cancel !== false) {\n            const meeting = this.space.current || this.space.next;\n            const module = this._service.Systems.get(this.space.id, 'Bookings');\n            if (meeting.duration >= 8 * 60 && reason === 'timeout') {\n                reason = 'hide multi-day';\n            }\n            if (meeting && module && meeting.date !== this.last_cancel) {\n                const date = dayjs(meeting.date);\n                module.exec('cancel_meeting', [meeting.date, reason]).then(\n                    _ => {\n                        this._service.Analytics.event(\n                            'Checkin',\n                            'cancelled',\n                            `${this.space.id} at ${date.format('DD MMM YYYY, h:mm A Z')} | ${reason}`\n                        );\n                        this.last_cancel = meeting.date;\n                    },\n                    e => {\n                        this._service.notifyError(`Error cancelling meeting. ${e}`);\n                        this._service.Analytics.event(\n                            'Checkin',\n                            'cancel-failed',\n                            `${this.space.id} at ${date.format('DD MMM YYYY, h:mm A Z')} | ${reason}`\n                        );\n                    }\n                );\n            }\n        }\n    }\n}\n","<div class=\"space-booking-details\">\n    <div class=\"details current\" *ngIf=\"space && space.current\">\n        <div class=\"time\" *ngIf=\"!hide_availability\">Booked until {{ space.current?.end_time }}</div>\n        <div class=\"title\" *ngIf=\"!hide_title && !hide_details\">{{ space.current?.title }}</div>\n        <div class=\"host\" *ngIf=\"!hide_user && !hide_details\">{{ space.current?.organiser?.name }}</div>\n    </div>\n    <div class=\"details next\" *ngIf=\"space && space.next\">\n        <div class=\"time\" *ngIf=\"!hide_availability\">Next meeting at {{ space.next?.start_time }}</div>\n        <div class=\"title\" *ngIf=\"!hide_title && !hide_details\">{{ space.next?.title }}</div>\n        <div class=\"host\" *ngIf=\"!hide_user && !hide_details\">{{ space.next?.organiser?.name }}</div>\n    </div>\n    <div class=\"details other\" *ngIf=\"space && space.current && space.next\">\n        <div class=\"time\" *ngIf=\"!hide_availability\">\n            Free {{ space.current ? 'at ' + space.current.end_time : '' }} {{ space.next ? 'until ' + space.next.start_time : '' }}\n        </div>\n    </div>\n    <div class=\"information\" *ngIf=\"title || description\">\n        <div class=\"title\">{{ title }}</div>\n        <div class=\"block\">\n            <div class=\"icon\" *ngIf=\"icon\">\n                <img [src]=\"icon\">\n            </div>\n            <div class=\"text\">{{ description }}</div>\n        </div>\n    </div>\n    <div class=\"bindings\" *ngIf=\"space\">\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"hide_details\" [(model)]=\"hide_details\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"hide_title\" [(model)]=\"hide_title\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"hide_availability\" [(model)]=\"hide_availability\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"hide_user\" [(model)]=\"hide_user\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"title\" [(model)]=\"title\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"description\" [(model)]=\"description\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"icon\" [(model)]=\"icon\"></i>\n    </div>\n</div>\n","\nimport { Component, Input } from '@angular/core';\n\nimport { Space } from '../../../services/data/spaces/space.class';\n\n@Component({\n    selector: 'panel-space-details',\n    templateUrl: './space-details.component.html',\n    styleUrls: ['./space-details.component.scss']\n})\nexport class PanelSpaceDetailsComponent {\n    /** Space with which to display bookings for */\n    @Input() public space: Space;\n    /** Secondary title for the space */\n    public title: string;\n    /** Description for the space */\n    public description: string;\n    /** Image that suppliments the description for the space */\n    public icon: { class?: string, value?: string, src?: string };\n\n    /** Whether to hide the booking timing details */\n    public hide_availability: boolean;\n    /** Whether to hide the current booking title */\n    public hide_title: boolean;\n    /** Whether to hide booking details(title and host) */\n    public hide_details: boolean;\n    /** Whether to hide booking host */\n    public hide_user: boolean;\n}\n\n","<div class=\"timeline\">\n    <div class=\"block-list\" *ngIf=\"time_blocks && time_blocks.length > 0\">\n        <div\n            class=\"block\"\n            *ngFor=\"let item of time_blocks\"\n            [class.show]=\"item.show || item.hour\"\n            [class.in-use]=\"item.in_use\"\n            (tapped)=\"!item.in_use && !no_bookings && !no_timeline_bookings ? book(item) : ''\"\n        >\n            <div class=\"hour\" *ngIf=\"item.hour\">{{ item.hour }}</div>\n            <div class=\"bar\" [class.hour]=\"item.hour\"></div>\n        </div>\n    </div>\n    <div class=\"overlay\">\n        <div class=\"expired\" [style.width]=\"((options?.start_offset || 120) / (options?.duration || 720)) * 100 + '%'\"></div>\n        <div class=\"current-block\" [style.left]=\"((options?.start_offset || 120) / (options?.duration || 720)) * 100 + '%'\">\n            <div class=\"bar\"></div>\n            <div class=\"triangle\"></div>\n            <div class=\"time-display\" *ngIf=\"display_time\">Time Now<br>{{ display_time }}</div>\n        </div>\n    </div>\n    <div class=\"bindings\" *ngIf=\"space\">\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"hide_availability\" [(model)]=\"hide_status\" (modelChange)=\"checkBookings()\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"hide_all\" [(model)]=\"hide_all\" (modelChange)=\"checkBookings()\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"booking_disabled\" [(model)]=\"no_bookings\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"no_timeline_bookings\" [(model)]=\"no_timeline_bookings\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"default_title\" [(model)]=\"default_title\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"min_duration\" [(model)]=\"min_duration\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"max_duration\" [(model)]=\"max_duration\"></i>\n    </div>\n</div>\n","\nimport { Component, OnInit, Input, Output, EventEmitter, SimpleChanges, OnChanges } from '@angular/core';\nimport { BaseComponent } from '../../../shared/base.component';\nimport { Space } from '../../../services/data/spaces/space.class';\n\nimport * as dayjs from 'dayjs';\nimport { BookingData } from '../../../overlays/booking-modal/booking-modal.component';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\nimport { ApplicationService } from '../../../services/app.service';\n\nexport interface IPanelTimelineOptions {\n    /** Length of time in minutes to display on the timeline after the current time */\n    duration: number;\n    /** Time offset in minutes which is displayed before the current time marker */\n    start_offset: number;\n    /** Size of shown blocks in minutes */\n    block_size: number;\n}\n\ninterface ITimelineBlock {\n    /** Block time as ms since UTC epoch */\n    value: number;\n    /** Whether to show block divider */\n    show: boolean;\n    /** Hour of the day represented by this time block */\n    hour: number;\n    /** Whether block is in use or not */\n    in_use: boolean;\n}\n\n@Component({\n    selector: 'panel-timeline',\n    templateUrl: './timeline.component.html',\n    styleUrls: ['./timeline.component.scss']\n})\nexport class PanelTimelineComponent extends BaseComponent implements OnInit, OnChanges {\n    /** Space with which to display bookings for */\n    @Input() public space: Space;\n    /** Display options for the timeline */\n    @Input() public options: IPanelTimelineOptions;\n    /** Emitter for user events on the timeline */\n    @Output() public event = new EventEmitter();\n\n    /** List of display time block  */\n    public time_blocks: ITimelineBlock[] = [];\n    /** Whether to hide unavailable blocks on the UI */\n    public hide_status: boolean;\n    /** Whether to hide all booking data */\n    public hide_all: boolean;\n    /** Whether user is not allowed to make bookings */\n    public no_booking: boolean;\n    /** Whether user is not allowed to make bookings using the timeline */\n    public no_timeline_bookings: boolean;\n    /** Default title for bookings */\n    public default_title: string;\n    /** Maximum allowed booking duation */\n    public max_duration: number;\n    /** Minimum allowed booking duation */\n    public min_duration: number;\n\n    /** Display string for the current time */\n    public get display_time(): string {\n        return dayjs().format('h:mm A')\n    }\n\n    constructor(private service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.generateTimelineBlocks();\n        this.interval('update_blocks', () => this.generateTimelineBlocks(), 60 * 1000);\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        this.generateTimelineBlocks();\n    }\n\n    /**\n     * Generate time blocks to display\n     */\n    private generateTimelineBlocks(): void {\n        let now = dayjs().startOf('m');\n        now = now.minute(Math.round(now.minute() / 5) * 5);\n        const start = now.subtract((this.options ? this.options.start_offset : null) || 120, 'm');\n        const end = start.add((this.options ? this.options.duration : null) || 720, 'm');\n        let date = dayjs(start);\n        delete this.time_blocks;\n        this.time_blocks = [];\n        while (date.isBefore(end, 'm')) {\n            this.time_blocks.push({\n                value: date.valueOf(),\n                show: (date.minute() % ((this.options ? this.options.block_size : null) || 30)) === 0,\n                hour: date.minute() === 0 ? (date.hour() % 12 === 0 ? 12 : date.hour() % 12) : null,\n                in_use: false\n            });\n            date = date.add(5, 'm');\n        }\n        this.checkBookings();\n    }\n\n    /**\n     * Update the statuses of time blocks based off space bookings\n     */\n    public checkBookings(): void {\n        if (this.space && this.space.todays_bookings) {\n            const block_start = dayjs().subtract((this.options ? this.options.start_offset : null) || 120, 'm');\n            const block_end = dayjs().add((this.options ? this.options.duration : null) || 720, 'm');\n            // Filter bookings for the shown times\n            const bookings = this.space.bookings.filter(i => {\n                const start = dayjs(i.date);\n                const end = start.add(i.duration, 'm');\n                return end.isAfter(block_start, 'm') && start.isBefore(block_end, 'm');\n            });\n            this.time_blocks.forEach(i => i.in_use = false);\n            if (!this.hide_status && !this.hide_all) {\n                for (const booking of bookings) {\n                    const start = dayjs(booking.date);\n                    const end = start.add(booking.duration, 'm');\n                    for (const block of this.time_blocks) {\n                        const block_time = dayjs(block.value);\n                        if (block_time.isSame(start, 'm') || (block_time.isAfter(start, 'm') && block_time.isBefore(end, 'm'))) {\n                            block.in_use = true;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Open modal to make a new booking\n     */\n    public book(block: ITimelineBlock) {\n        this.service.Bookings.new({\n            space: this.space,\n            date: block.value,\n            title: this.default_title,\n            max_duration: this.max_duration,\n            min_duration: this.min_duration\n        });\n    }\n}\n\n","\n        <div class=\"bootstrap\">\n            <div class=\"options\">\n                <div class=\"header fs-big\" style=\"background-color: white\">\n                    <div class=\"body\">\n                        <div class=\"info-block\">\n                            <div class=\"icon\">\n                                <a-spinner circle-ring color=\"#000\"></a-spinner>\n                            </div>\n                            <div class=\"text\">\n                                Loading system data...\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    ","import { Component, OnInit } from '@angular/core';\nimport { BaseComponent } from '../../shared/base.component';\nimport { catchError, distinctUntilChanged, filter, mergeMap } from 'rxjs/operators';\nimport { ApplicationService } from '../../services/app.service';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { from, of } from 'rxjs';\nimport { Space } from '../../services/data/spaces/space.class';\n\n@Component({\n    selector: 'pre-load-component',\n    template: `\n        <div class=\"bootstrap\">\n            <div class=\"options\">\n                <div class=\"header fs-big\" style=\"background-color: white\">\n                    <div class=\"body\">\n                        <div class=\"info-block\">\n                            <div class=\"icon\">\n                                <a-spinner circle-ring color=\"#000\"></a-spinner>\n                            </div>\n                            <div class=\"text\">\n                                Loading system data...\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    `,\n    styleUrls: ['../bootstrap/bootstrap.component.scss']\n})\nexport class PreloadComponent extends BaseComponent implements OnInit {\n    constructor(private service: ApplicationService, private route: ActivatedRoute) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.subscription('User.currentUser', this.service.Users.currentUser\n            .pipe(filter(current => !!current),\n                distinctUntilChanged((prev, current) => prev.email === current.email),\n                mergeMap(current =>\n                    from(this.service.Spaces.show(current.email))\n                        .pipe(\n                            catchError(_ => of(undefined)))),\n                distinctUntilChanged()\n            )\n            .subscribe((space: Space | undefined) => {\n                if (space) {\n                    // once we have space, then go to next\n                    this.pushToPanel(space.id);\n                } else {\n                    this.subscription('route.query', this.route.queryParamMap\n                        .pipe(distinctUntilChanged())\n                        .subscribe((params) => {\n                            // query params, check for legacy routes and forward over\n                            if (params.keys.length > 0 && (params.has('sys_id')\n                                || params.has('system_id')\n                                || params.has('clear'))) {\n                                this.pushToRoomSelect(params);\n                            } else {\n                                this.pushIfBootstrapped();\n                            }\n                        }));\n                }\n            }));\n    }\n\n    private pushToPanel(id: string) {\n        this.service.navigate(['panel', id]);\n    }\n\n    private pushToRoomSelect(params?: ParamMap) {\n        this.service.navigate('bootstrap/room-select', (params as any)?.params);\n    }\n\n    private storedSystemId(): string | undefined {\n        if (localStorage) {\n            return localStorage.getItem('ACA.PANEL.system') || localStorage.getItem('ACA.CONTROL.system');\n        }\n        return undefined;\n    }\n\n    /**\n     * Check if the application has previously been bootstrapped\n     */\n    private pushIfBootstrapped(): void {\n        const storedSystemId = this.storedSystemId();\n        if (storedSystemId) {\n            this.pushToPanel(storedSystemId);\n        } else {\n            this.pushToRoomSelect();\n        }\n    }\n}\n","\n<div class=\"shell\">\n    <div class=\"view\">\n        <router-outlet></router-outlet>\n    </div>\n    <div class=\"bindings\" *ngIf=\"system_id\">\n        <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"room_name\" [(model)]=\"system_name\" (modelChange)=\"checkLoading()\"></i>\n        <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"reload\" (modelChange)=\"reloadAt($event)\"></i>\n    </div>\n    <div class=\"loading-block\" *ngIf=\"system_id && !system_name\">\n        <div class=\"info-block\">\n            <div class=\"title\">Connecting to system({{system_id}})...</div>\n            <div class=\"text\">Attempting to connect to engine server...</div>\n            <div class=\"text message\">{{info_messages[message_index]}}</div>\n            <div class=\"icon\">\n                <a-spinner ring-rotate color=\"#000\"></a-spinner>\n            </div>\n        </div>\n    </div>\n    <div class=\"version\" *ngIf=\"show_version\" [class.loading]=\"system_id && !system_name\">\n        Version: {{ version }}<br>\n        Built: {{ build }}\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\n\nimport { BaseComponent } from '../shared/base.component';\nimport { ApplicationService } from '../services/app.service';\nimport { version, build } from '../shared/globals/application';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'app-shell-wrapper',\n    templateUrl: './shell.component.html',\n    styleUrls: ['./shell.component.scss']\n})\nexport class ShellWrapperComponent extends BaseComponent implements OnInit {\n    /** Whether application has system */\n    public has_system: boolean;\n    /** ID of the active system */\n    public system_id: string;\n    /** Name of the active system */\n    public system_name: string;\n    /** Name of the active page */\n    public page: string;\n    /** List of informational messages to display while connecting to the active system */\n    public info_messages: string[] = [\n        'If this message persists, check you network connection and then try reloading this page.',\n        'It seems to be taking a while. Make sure the selected system is valid.',\n        'Still nothing, huh. Are you authenticated? Do you have have a network connection?',\n        'Try reloading the page. If this persists contact your administrator.'\n    ];\n    /** Index of the info message being displayed */\n    public message_index: number = 0;\n\n    /** Current version of the application */\n    public get version(): string {\n        return version;\n    }\n\n    /** Current version of the application */\n    public get build(): string {\n        const now = dayjs();\n        const built = build.format('DD/MM/YY HH:mm');\n        return built;\n    }\n\n    public get show_version(): boolean {\n        return this._service.setting('app.show_version');\n    }\n\n    constructor(private _service: ApplicationService, private _router: Router) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription('app_ready', this._service.initialised.subscribe((is_ready) => {\n            if (is_ready) {\n                // Listen for system changes\n                this.subscription('system', this._service.listen('system', (value) => this.system_id = value));\n                // Listen for routing events\n                this.page = this._router.url?.split('/')[1] || '';\n\n                this.subscription(\n                    'router.change',\n                    this._router.events.subscribe(event => {\n                        if (event instanceof NavigationEnd) {\n                            this.page = this._router.url.split('/')[1] || '';\n                        }\n                    })\n                );\n                this.unsub('app_ready');\n            }\n        }));\n    }\n\n    /**\n     * Check if the system data has loaded\n     * @param delay Delay before first loading message update\n     */\n    public checkLoading(delay: number = 3000) {\n        if (!this.system_name) {\n            this.message_index = 0;\n            this.timeout('update_msg', () => this.updateMessage(), delay);\n        }\n    }\n\n    /**\n     * Update the index of the info message displayed\n     */\n    private updateMessage(): void {\n        if (!this.system_id) { return; }\n        this.message_index++;\n        if (this.message_index === this.info_messages.length) {\n            this.message_index--;\n            return;\n        }\n        this.timeout('update_msg', () => this.updateMessage(), 3000);\n    }\n\n    /**\n     * Schedule a reload the UI for a future time\n     * @param time Time to reload the UI\n     */\n    public reloadAt(time: number): void {\n        if (time && typeof time === 'number') {\n            this.clearTimeout('reload_ui');\n            const now = dayjs().startOf('s');\n            const reload_at_time = dayjs((time || 0) * 1000).startOf('s');\n            const diff = reload_at_time.diff(now, 'ms');\n            if (diff > 100) {\n                this.timeout('reload_ui', () => location.reload(true), diff);\n            }\n        }\n        this.timeout('update_msg', () => this.updateMessage(), 3000);\n    }\n}\n","export const environment = {\n  production: true\n};\n","// IMPORTANT: THIS FILE IS AUTO GENERATED! DO NOT MANUALLY EDIT OR CHECKIN!\n/* tslint:disable */\nexport const VERSION = {\n    \"dirty\": false,\n    \"raw\": \"a552c21\",\n    \"hash\": \"a552c21\",\n    \"distance\": null,\n    \"tag\": null,\n    \"semver\": null,\n    \"suffix\": \"a552c21\",\n    \"semverString\": null,\n    \"version\": \"0.0.0\",\n    \"core_version\": \"1.0.0\",\n    \"time\": 1624644537065\n};\n/* tslint:enable */\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}