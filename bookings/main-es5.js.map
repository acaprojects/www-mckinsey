{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/debug-outlet.component.ts.DebugOutletComponent.html","webpack:///src/app/debug-outlet.component.ts","webpack:///src/app/overlays/booking-modal/booking-modal.component.html","webpack:///src/app/overlays/booking-modal/booking-modal.component.ts","webpack:///src/app/overlays/confirm-modal/confirm-modal.component.html","webpack:///src/app/overlays/confirm-modal/confirm-modal.component.ts","webpack:///src/app/overlays/embedded-control-modal/embedded-control-modal.component.html","webpack:///src/app/overlays/embedded-control-modal/embedded-control-modal.component.ts","webpack:///src/app/overlays/overlays.module.ts","webpack:///src/app/services/app.service.ts","webpack:///src/app/services/data/base-api.class.ts","webpack:///src/app/services/data/base.service.ts","webpack:///src/app/services/data/bookings/booking.class.ts","webpack:///src/app/services/data/bookings/booking.interfaces.ts","webpack:///src/app/services/data/bookings/booking.utilities.ts","webpack:///src/app/services/data/bookings/bookings.service.ts","webpack:///src/app/services/data/organisation/building.class.ts","webpack:///src/app/services/data/organisation/level.class.ts","webpack:///src/app/services/data/organisation/organisation.class.ts","webpack:///src/app/services/data/organisation/organisation.service.ts","webpack:///src/app/services/data/polling/polling.service.ts","webpack:///src/app/services/data/service-manager.class.ts","webpack:///src/app/services/data/spaces/space.class.ts","webpack:///src/app/services/data/spaces/space.utilities.ts","webpack:///src/app/services/data/spaces/spaces.service.ts","webpack:///src/app/services/data/systems-manager/systems-manager.service.ts","webpack:///src/app/services/data/users/user.class.ts","webpack:///src/app/services/data/users/user.utilities.ts","webpack:///src/app/services/data/users/users.service.ts","webpack:///src/app/services/debug.service.ts","webpack:///src/app/services/hotkeys.service.ts","webpack:///src/app/services/settings.service.ts","webpack:///src/app/shared/base.class.ts","webpack:///src/app/shared/base.component.ts","webpack:///src/app/shared/components/duration-field/duration-field.component.html","webpack:///src/app/shared/components/duration-field/duration-field.component.ts","webpack:///src/app/shared/components/time-field/time-field.component.html","webpack:///src/app/shared/components/time-field/time-field.component.ts","webpack:///src/app/shared/components/user-search-field/user-search-field.component.html","webpack:///src/app/shared/components/user-search-field/user-search-field.component.ts","webpack:///src/app/shared/directives/binding/binding.directive.ts","webpack:///src/app/shared/globals/application.ts","webpack:///src/app/shared/globals/form-fields.ts","webpack:///src/app/shared/globals/overlay-register.ts","webpack:///src/app/shared/mocks/index.ts","webpack:///src/app/shared/mocks/systems.mock.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/shared/utilities/api.utilities.ts","webpack:///src/app/shared/utilities/formatting.utilities.ts","webpack:///src/app/shared/utilities/general.utilities.ts","webpack:///src/app/shared/utilities/translate.utilities.ts","webpack:///src/app/shared/utilities/validation.utilities.ts","webpack:///src/app/shell/bootstrap/bootstrap.component.html","webpack:///src/app/shell/bootstrap/bootstrap.component.ts","webpack:///src/app/shell/panel-array/panel-array.component.html","webpack:///src/app/shell/panel-array/panel-array.component.ts","webpack:///src/app/shell/panel-select/panel-select.component.html","webpack:///src/app/shell/panel-select/panel-select.component.ts","webpack:///src/app/shell/panel/panel-details-display.component.ts.PanelDetailsDisplayComponent.html","webpack:///src/app/shell/panel/panel-details-display.component.ts","webpack:///src/app/shell/panel/panel.component.ts.BookingPanelComponent.html","webpack:///src/app/shell/panel/panel.component.ts","webpack:///src/app/shell/panel/space-details/space-details.component.ts.PanelSpaceDetailsComponent.html","webpack:///src/app/shell/panel/space-details/space-details.component.ts","webpack:///src/app/shell/panel/timeline/timeline.component.html","webpack:///src/app/shell/panel/timeline/timeline.component.ts","webpack:///src/app/shell/panel/timeline/timeline.utils.ts","webpack:///src/app/shell/panel/v1/panel-details-display-v1.component.ts.PanelDetailsDisplayV1Component.html","webpack:///src/app/shell/panel/v1/panel-details-display-v1.component.ts","webpack:///src/app/shell/panel/v1/space-details/space-details.component.html","webpack:///src/app/shell/panel/v1/space-details/space-details.component.ts","webpack:///src/app/shell/shell.component.html","webpack:///src/app/shell/shell.component.ts","webpack:///src/environments/environment.ts","webpack:///src/environments/settings.ts","webpack:///src/environments/version.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","children","redirectTo","AppRoutingModule","AppComponent","window","app_loaded","AppModule","console","log","production","DebugOutletComponent","_debug","show","logs","BookingModalComponent","item","service","booking","Bookings","date","data","form_metadata","space_field","form_fields","find","field","key","space","setValue","date_field","valueOf","title_field","title","closing","timeout","close","fields","forEach","i","control","markAsDirty","valid","reduce","fields_valid","length","sub_fields_valid","sub_field","loading","post","on_error","map","push","config","content","ConfirmModalComponent","body","description","action","icon","EmbeddedControlModalComponent","countdown","control_url","interval","tick","OVERLAYS","SharedOverlaysModule","ApplicationService","_app_ref","_zone","_title","_router","_cache","_settings","_overlay","_analytics","_hotkeys","_systems","_organisation","_users","_bookings","_spaces","_polling","_route_trail","_subjects","_observers","parent","set","undefined","isStable","pipe","_","subscribe","run","_stable","setupCache","waitForSettings","registerOverlays","get","app_name","getTitle","value","title_suffix","setting","setTitle","type","msg","on_action","notify","args","stream","force","query","route","Array","url","navigate","queryParams","preserveFragment","pop","name","getValue","next","asObservable","initialised","init","Math","floor","random","toPromise","setupComposer","enabled","load","debug","application","listen","clear","_initialised","settings","protocol","location","host","domain","hostname","port","use_domain","origin","includes","mock","href","localStorage","getItem","auth_type","scope","auth_uri","token_uri","redirect_uri","handle_login","local_login","use_iframe","token_header","unsub","isEnabled","activateUpdate","subscription","available","event","current","hash","setInterval","checkForUpdate","reload","overlay","register","BaseDataClass","raw_data","changeEvents","zone_id","email","toLowerCase","_form_metadata","_form_fields","initialiseFormFields","a","isValid","formChanges","changed","changes","showErrors","form","formValues","update","add","task_name","parameters","task","json","changed_fields","metadata","field_list","values","edit","required","attributes","BaseAPIService","_subscribers","_promises","_compare","b","_list_filter","_name","_api_route","is_initialised","shouldLoadOnInit","engine","endpoint","engine_endpoint","filterFn","list","query_params","update_list","cache","reject","result","d","process","results","updateList","form_data","new_item","analyticsEvent","post_data","_task","delay","stopPoll","sub","_poll","error","complete","removeItem","remove_ids","item_id","index","findIndex","splice","label","Analytics","raw_item","old_list","compareFn","new_list","mixed_list","found","Booking","_display","u_service","Users","icaluid","subject","Subject","start","start_epoch","Start","duration","end","end_epoch","End","diff","notes","visitors","catering","_attendees","attendees","organiser","organizer","owner","addFrom","_organiser","_location","update_display","_space_list","room_ids","u","user","indexOf","now","isBefore","subtract","Spaces","time","startDate","endDate","space_names","level","form_settings","actions","validators","terms","requiredTrue","formatters","recurrence","custom_elements","defaults","process_field","f","control_type","format","references","refs","hide","flex","localeCode","dayjsLocaleCode","locale","timeFormat","dateFormat","SpaceRulesReason","MINUTE","HOUR","DAY","WEEK","MONTH","DURATION_MAP","month","months","week","weeks","day","days","hour","hours","minute","minutes","initialTime","mockDate","BOOKING_COUNT","BOOKING_DATE","startOf","setMockBookingStartDatetime","is24HourTime","Date","localeString","toLocaleTimeString","document","querySelector","getAttribute","navigator","language","generateMockBooking","seed","offset","localDate","productName","fill","paragraph","city","getFreeBookingSlots","min_size","slots","sort","bkn_start","bkn_end","isAfter","getNextFreeBookingSlot","second","block","rulesForSpace","options","space_rules_for_user","auto_approve","match","rules","hasOwnProperty","zones","zone","rule_block","checkRules","recurr_end","conditions","passes_rules","failures","concat","ruleset","max_length","stringToMinutes","min_length","reason","NoMatchingRules","MatchesRules","recurr","count","Object","matches","counter","condition","groups","j","last_location","check","durationGreater","durationGreaterThanOrEqual","duration_1","duration_2","first","str","parts","split","BookingsService","setService","localeCompare","Overlay","open","toJSON","create","notifySuccess","notifyError","request","staff","num_staff","partners","num_partners","staff_id","period","Systems","execute","err","Building","disc_info","discovery_info","_extras","extras","extra_id","extra_name","_loan_items","loan_items","levels","building_id","_roles","roles","_lockers","lockers","locker_structure","systems","_phone_numbers","phone_numbers","longitude","latitude","_searchables","neighbourhoods","lvl","lvl_features","feature","level_id","booking_rules","filter","_zones","BuildingLevel","_data","bld_id","level_name","lower_name","num","replace","substr","toUpperCase","short_name","map_url","floor_type","Organisation","OrganisationService","buildings","building","_active_building","bld","ids","bld_list","buildingWithID","resp","bld_data","tags","blds","loadOrganisation","loadBuildings","loadLevels","org_data","shown_error","limit","lvl_data","PingHistory","history","last_ping","room_email","room_id","SECONDS","MINUTES","PollingService","ServiceManager","_service_list","provider","provideFor","useValue","OPTION_DEFAULTS","SpaceTheme","Space","_theme_rbp","theme_rbp","_locale_code","locale_code","long_name","map_id","book_type","can_search","searchable","can_control","controlable","hourly_rate","cost_hour","bookable","setup","breakdown","capacity","was_available","raw_bookings","bookings","id_list","removeFrom","_linked_spaces","linked_rooms","linked_spaces","update_bookings_display","bkn","status","bookingService","serviceFor","booking_list","bookingsFor","levelWithID","isSame","rm","NoBuildingService","BuildingNotFound","rulesFor","SPACE_COUNT","generateMockSpace","overrides","firstName","lastName","linked","join","support_url","image","business","SpacesService","respond","available_spaces","v","idOrEmail","SystemsManagerService","_list","sys_id","mod_id","loadSystems","details","total","User","first_name","last_name","windows_id","visitor","phone","mobile","business_unit","department","organisation","organisation_id","organisation_name","external","staff_code","fmno","_delegates","delegates","officeLocation","Location","desk","l","USER_COUNT","USER_DOMAIN","USER_EMAILS","generateMockUser","companyName","delegate_count","min","phoneNumber","UsersService","uhttp","current_user","token","expiry","endOf","client_id","hashStr","sessionStorage","setItem","go","headers","append","tries","clearTimeout","DebugService","_old_log","_old_info","info","_old_warn","warn","_old_debug","_old_error","_logs","reverse","newLogMessage","call","INVALID_STANDALONE_KEYS","HotkeysService","keydown_states","keydown_observers","combo_end","registered_combos","addEventListener","mapKey","last_down","preventDefault","combo","combination","validCombination","last_key","updateCombinationEndList","presses","state","key_list","non_meta","SettingsService","_app_name","_overrides","_observables","built","semver","override_settings","override","slice","BaseClass","_timers","_intervals","_subscriptions","fn","Function","setTimeout","clearInterval","unsubscribe","BaseComponent","CustomDurationFieldComponent","group","block_size","controls","date_control","valueChanges","calculateAvailableDurations","room","space_control","updateDisplay","active_duration","new_opt","option","abs","max_duration","min_duration","slot","CustomTimeFieldComponent","calculateAvailableTimes","times","from_ref","active_time","ceil","date_str","book_ahead","CustomUserSearchFieldComponent","filtered_list","search$","search_results$","searching","q","search_str","match_name","match_email","BindingDirective","_element","_renderer","params","modelChange","init_listener","bindVariable","listener","unbind","event_listener","sys","mod","bind","ngOnDestroy","on_event","nativeElement","binding","model","emit","exec","version","core_version","build","FORM_FIELDS","OVERLAY_REGISTER","LETTERS","NUMBERS","SPACE_LIST","IMAGES","createSystem","bindings","touch_enabled","cancel_timeout","has_catering","system","room_name","today","unix","$start_meeting","last_meeting_started","$cancel_meeting","$waiter_call","MOCK_SYSTEMS","USER_LIST","handlers","method","callback","handler","COMPONENTS","ENTRY_COMPONENT","SharedContentModule","toQueryString","formatAttendeesWithHost","formatAttendees","attendee_str","users","formatDate","formatTime","formatPeriodWithDuration","t","formatPeriod","timestamp","formatDuration","RECURRENCE_PERIODS","formatRecurrence","formatSpaces","colors","xmur3","rand","sfc32","predictableRandomInt","getItemWithKeys","shift","isMobileDevice","r","userAgent","isMobileSafari","agent","isAndroidChrome","padZero","toString","unique","array","el","pos","arr","humaniseDuration","short","relativeTimeFormats","relativeTime","detectWord","minuteLocalised","mm","hourLocalised","hh","h","m","filterList","items","filters","word","regex","RegExp","item_list","JSON","parse","stringify","match_count","match_index","matched","tokens","k","matchToHighlight","timeToDate","flatten","an_array","stack","res","imul","charCodeAt","c","client","standardLoader","provide","useFactory","deps","bundledProvider","translations","bundledLoader","getTranslation","lang","translateModuleConfig","loader","bundledTranslateConfig","HAS_ERROR","validateDate","is_from","from","message","buildValidateStartTime","validateStartTime","date_obj","buildValidateDuration","max","validateDuration","buildValidateAttendees","validateAttendees","invalid","BootstrapComponent","system_list","selected_system","bootstrap","currentUser","manual_input","system_id","configure","BookingPanelArrayComponent","_service","is_ready","queryParamMap","has","logo","inverse","BookingPanelSelectComponent","system_name","system_icon","system_status","active_system","reset","PanelDetailsDisplayComponent","show_title","status_display","RoomDisplayStatus","BookingPanelComponent","_route","_translate","cdRef","show_time","interactive","wsStatus","bookingsLoaded","use","timeline_options","_theme","websocket_connected","status_overrides","_status","permittedStatus","hide_all","updateStatus","Pending","currentStatus","AvailableByRequest","Available","NotBookable","InUse","localStatus","overrideDisplay","normalisedStatus","theme","isV1","currentLang","onLangChange","languageEvent","addLangs","setDefaultLang","paramMap","showBuilding","setSpace","val","detectChanges","v1","pending_timeout","last_started","pending_start","pending_end","business_start","business_end","endMeeting","can_cancel","meeting","last_cancel","PanelSpaceDetailsComponent","PanelTimelineComponent","translate","time_blocks","generateTimelineBlocks","checkBookings","todays_bookings","hide_status","DEFAULT_START_OFFSET","DEFAULT_DURATION","DEFAULT_BLOCK_SIZE","TIME_BLOCK_SEPARATOR_MINUTES","DEFAULT_LOCALE_CODE","defaultBlockOptions","start_offset","hourMarker","localised","clampedHour","calculateTimelineBlocks","nowInMinutes","round","timeBlocks","in_use","evaluateBookingsInUse","showInUse","blockStart","blockEnd","shownBookings","newBlocks","blockTime","PanelDetailsDisplayV1Component","PanelSpaceDetailsComponentV1","len","ShellWrapperComponent","info_messages","message_index","updateMessage","reload_at_time","environment","general","menu","copyright","position","home","background","tiles","help","columns","booking_types","show_fields","html_body","multiple_spaces","desk_start","space_display","show_images","directory","show_avatars","min_search_length","explore","can_select_building","show_legend_group_names","show_timeline","legend","General","app","logo_light","src","logo_dark","heap_io","app_id","force_ssl","secure_cookie","disable_text_capture","cookie_path","DEFAULT_SETTINGS","composer","VERSION"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ShellWrapperComponent } from './shell/shell.component';\nimport { BootstrapComponent } from './shell/bootstrap/bootstrap.component';\nimport { BookingPanelArrayComponent } from './shell/panel-array/panel-array.component';\nimport { BookingPanelSelectComponent } from './shell/panel-select/panel-select.component';\nimport { BookingPanelComponent } from './shell/panel/panel.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ShellWrapperComponent,\n        children: [\n            { path: 'bootstrap', component: BootstrapComponent },\n            { path: 'panel/:system_id', component: BookingPanelComponent },\n            { path: 'panel-array', component: BookingPanelArrayComponent },\n            { path: 'panel-select', component: BookingPanelSelectComponent },\n            { path: '**', redirectTo: 'bootstrap' }\n        ]\n    },\n    { path: '**', redirectTo: 'bootstrap' }\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, { useHash: true })],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","<div class=\"app\">\n    <router-outlet></router-outlet>\n    <debug-outlet></debug-outlet>\n</div>\n","import { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: [\n        './styles/app.component.scss',\n        './styles/custom-element.styles.scss',\n        './styles/native-element.styles.scss',\n    ],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class AppComponent {\n    constructor() {\n        (window as any).app_loaded = true;\n    }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport './shared/mocks';\n\nimport { TranslateModule} from '@ngx-translate/core';\nimport { translateModuleConfig } from './shared/utilities/translate.utilities';\n\nimport { AGoogleAnalyticsModule } from '@acaprojects/ngx-google-analytics';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\n\nimport { SharedOverlaysModule } from './overlays/overlays.module';\nimport { SharedContentModule } from './shared/shared.module';\n\nimport { ShellWrapperComponent } from './shell/shell.component';\nimport { BootstrapComponent } from './shell/bootstrap/bootstrap.component';\nimport { PanelTimelineComponent } from './shell/panel/timeline/timeline.component';\nimport { PanelSpaceDetailsComponentV1 } from './shell/panel/v1/space-details/space-details.component';\nimport { PanelBookingActionsComponent } from './shell/panel/booking-actions/booking-actions.component';\nimport { PanelCustomActionsComponent } from './shell/panel/custom-actions/custom-actions.component';\nimport { BookingPanelArrayComponent } from './shell/panel-array/panel-array.component';\nimport { BookingPanelSelectComponent } from './shell/panel-select/panel-select.component';\nimport { DebugOutletComponent } from './debug-outlet.component';\nimport { BookingPanelComponent } from './shell/panel/panel.component';\nimport { PanelDetailsDisplayV1Component } from './shell/panel/v1/panel-details-display-v1.component';\nimport { PanelDetailsDisplayComponent } from './shell/panel/panel-details-display.component';\nimport { PanelSpaceDetailsComponent } from './shell/panel/space-details/space-details.component';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        ShellWrapperComponent,\n        BootstrapComponent,\n        BookingPanelComponent,\n        PanelDetailsDisplayV1Component,\n        PanelDetailsDisplayComponent,\n        PanelTimelineComponent,\n        PanelSpaceDetailsComponentV1,\n        PanelSpaceDetailsComponent,\n        PanelBookingActionsComponent,\n        PanelCustomActionsComponent,\n        BookingPanelArrayComponent,\n        BookingPanelSelectComponent,\n        DebugOutletComponent\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        AppRoutingModule,\n        HttpClientModule,\n        FormsModule,\n        TranslateModule.forRoot(translateModuleConfig),\n        AGoogleAnalyticsModule,\n        SharedOverlaysModule,\n        SharedContentModule,\n        ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production })\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n    constructor() {\n        console.log('Production:', !!environment.production);\n    }\n}\n","\n        <div class=\"toggle-space\" (click)=\"show = !show\"></div>\n        <div class=\"debug-outlet\" *ngIf=\"show\">\n            <h4>Debug logs</h4>\n            <div class=\"list\">\n                <div class=\"log\" *ngFor=\"let log of log_list | async\">\n                    {{ log.time | date:'HH:mm:ss' }} <span>[{{log.level}}]</span> {{ log.content | json }}\n                </div>\n            </div>\n        </div>\n    ","import { Component } from '@angular/core';\nimport { DebugService } from './services/debug.service';\n\n@Component({\n    selector: 'debug-outlet',\n    template: `\n        <div class=\"toggle-space\" (click)=\"show = !show\"></div>\n        <div class=\"debug-outlet\" *ngIf=\"show\">\n            <h4>Debug logs</h4>\n            <div class=\"list\">\n                <div class=\"log\" *ngFor=\"let log of log_list | async\">\n                    {{ log.time | date:'HH:mm:ss' }} <span>[{{log.level}}]</span> {{ log.content | json }}\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [`\n        .toggle-space {\n            position: absolute;\n            top: 0;\n            left: 0;\n            height: 2em;\n            width: 2em;\n            z-index: 9999;\n        }\n\n        .debug-outlet {\n            position: absolute;\n            bottom: .5em;\n            left: .5em;\n            background-color: #fff;\n            border-radius: 4px;\n            z-index: 999;\n            box-shadow: 0 1px 3px 1px rgba(0,0,0, .2),\n                        0 1px 1px 0 rgba(0,0,0, .14),\n                        0 2px 1px -1px rgba(0,0,0, .12);\n        }\n\n        h4 { width: 100%; border-bottom: 1px solid #ccc; margin: 0; padding: .5rem }\n\n        .log {\n            font-size: .7em;\n            font-family: monospace;\n            padding: .5em;\n            white-space: nowrap;\n        }\n\n        .log:nth-child(2n) {\n            background-color: rgba(0,0,0,0.05);\n        }\n\n        span {\n            font-family: monospace;\n            opacity: .8;\n        }\n\n        .list {\n            max-height: 20em;\n            max-width: 40em;\n            overflow: auto;\n        }\n    `]\n})\nexport class DebugOutletComponent {\n\n    public show: boolean = false;\n\n    public get log_list() {\n        return this._debug.logs;\n    }\n\n    constructor(private _debug: DebugService) {}\n}\n","<div class=\"modal booking\" widget [class.is-loading]=\"loading\" [@show] *ngIf=\"!closing\">\n    <div class=\"header\">\n        <div class=\"text\">New Booking</div>\n    </div>\n    <div class=\"body\" *ngIf=\"!loading\">\n        <div class=\"form\" *ngIf=\"booking\">\n            <a-dynamic-form [fields]=\"booking.form_fields\"></a-dynamic-form>\n        </div>\n    </div>\n    <div class=\"body\" *ngIf=\"loading\">\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <a-spinner circle-ring color=\"#000\"></a-spinner>\n            </div>\n            <div class=\"text\">Processing request...</div>\n        </div>\n    </div>\n    <div class=\"footer\" *ngIf=\"!loading\">\n        <button widget name=\"close\" (tapped)=\"close()\">Cancel</button>\n        <button widget name=\"save\" (tapped)=\"save()\">Save</button>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { animate, style, transition, trigger } from '@angular/animations';\nimport { OverlayItem } from '@acaprojects/ngx-overlays';\n\nimport { ApplicationService } from '../../services/app.service';\nimport { BaseComponent } from '../../shared/base.component';\nimport { Booking } from '../../services/data/bookings/booking.class';\nimport { OVERLAY_REGISTER } from '../../shared/globals/overlay-register';\n\nimport * as dayjs from 'dayjs';\n\nexport interface BookingData {\n    booking: Booking;\n    on_error: () => void;\n    close: () => void;\n}\n\n@Component({\n    selector: 'booking-modal',\n    templateUrl: './booking-modal.component.html',\n    styleUrls: ['./booking-modal.component.scss'],\n    animations: [\n        trigger('show', [\n            transition(':enter', [\n                style({ opacity: 0, transform: 'translateX(100%) scale(0)' }),\n                animate(200, style({ opacity: 1, transform: 'translateX(0%) scale(1)' }))\n            ]),\n            transition(':leave', [\n                style({ opacity: 1, transform: 'translateX(0%) scale(1)' }),\n                animate(\n                    200,\n                    style({\n                        opacity: 0,\n                        transform: 'translateX(-100%) scale(0)'\n                    })\n                )\n            ])\n        ])\n    ]\n})\nexport class BookingModalComponent extends BaseComponent implements OnInit {\n    /** Whether modal is closing */\n    public closing: boolean;\n    /** New Booking instance */\n    public booking: Booking;\n    /** Whether the modal is processing a booking request */\n    public loading: boolean;\n\n    constructor(private item: OverlayItem, private service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.booking = new Booking(this.service.Bookings, {\n            date: this.item.data.date,\n            form_metadata: { ...this.item.data }\n        });\n        const space_field = this.booking.form_fields.find(field => field.key === 'space');\n        if (this.item.data.space && space_field) {\n            space_field.setValue(this.item.data.space);\n        }\n        const date_field = this.booking.form_fields.find(field => field.key === 'date');\n        if (date_field) {\n            date_field.setValue(this.item.data.date || dayjs().valueOf());\n        }\n        const title_field = this.booking.form_fields.find(field => field.key === 'title');\n        if (title_field) {\n            title_field.setValue(this.item.data.title || '');\n        }\n    }\n\n    /**\n     * Closes the modal\n     */\n    public close() {\n        this.closing = true;\n        this.timeout('close', () => this.item.close());\n    }\n\n    /**\n     * Post form data\n     */\n    public save() {\n        const fields = this.booking.form_fields;\n        fields.forEach(i => i.control.markAsDirty());\n        const valid = fields.reduce(\n            (fields_valid, field) =>\n                fields_valid &&\n                (field.control.valid ||\n                    (field.children &&\n                        field.children.length &&\n                        field.children.reduce(\n                            (sub_fields_valid, sub_field) => sub_fields_valid && sub_field.control.valid,\n                            true\n                        ))),\n            true\n        );\n        if (this.booking && valid) {\n            this.loading = true;\n            this.item.post('finish', {\n                booking: this.booking,\n                on_error: () => (this.loading = false),\n                close: () => this.close()\n            });\n        } else {\n            console.log(\n                'Invalid form fields. Valid states:',\n                fields.map(field => `${field.key}:${field.control.valid}`)\n            );\n        }\n    }\n}\n\nOVERLAY_REGISTER.push({\n    id: 'booking',\n    config: { content: BookingModalComponent, config: 'modal' }\n});\n","<div class=\"confirm modal\" widget [@show] *ngIf=\"!closing\">\n    <div class=\"header\">\n        <div class=\"text\">{{ title || 'Confirm' }}</div>\n    </div>\n    <div class=\"body\">\n        <div class=\"icon\" *ngIf=\"icon\">\n            <i *ngIf=\"icon.class\" [class]=\"icon.class\">{{ icon.value }}</i>\n            <img *ngIf=\"!icon.class && icon.src\" [src]=\"icon.src\">\n        </div>\n        <div class=\"content\">\n            <p>{{ content || 'Are you sure?' }}</p>\n        </div>\n    </div>\n    <div class=\"footer\">\n        <button widget name=\"cancel\" (tapped)=\"close()\">Cancel</button>\n        <button widget name=\"accept\" (tapped)=\"accept()\">{{ action || 'Ok' }}</button>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { animate, style, transition, trigger } from '@angular/animations';\n\nimport { OverlayItem } from '@acaprojects/ngx-overlays';\n\nimport { BaseComponent } from '../../shared/base.component';\nimport { OVERLAY_REGISTER } from '../../shared/globals/overlay-register';\n\n@Component({\n    selector: 'confirm-modal',\n    templateUrl: './confirm-modal.component.html',\n    styleUrls: ['./confirm-modal.component.scss'],\n    animations: [\n        trigger('show', [\n            transition(':enter', [\n                style({ opacity: 0, transform: 'translateX(100%) scale(0)' }),\n                animate(200, style({ opacity: 1, transform: 'translateX(0%) scale(1)' }))\n            ]),\n            transition(':leave', [\n                style({ opacity: 1, transform: 'translateX(0%) scale(1)' }),\n                animate(200, style({ opacity: 0, transform: 'translateX(-100%) scale(0)' }))\n            ])\n        ])\n    ]\n})\nexport class ConfirmModalComponent extends BaseComponent implements OnInit {\n    /** Title of the confirm modal */\n    public title: string;\n    /** Body of the confirm modal */\n    public content: string;\n    /** Display text on the confirm button */\n    public action: string;\n    /** Display icon properties */\n    public icon: { class?: string; value?: string; src?: string };\n    /** Whether modal is closing */\n    public closing: boolean;\n\n    constructor(private item: OverlayItem) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        const data = this.item.data;\n        if (data) {\n            this.title = data.title || 'Confirm';\n            this.content = data.content || data.body || data.description || 'Confirm';\n            this.action = data.action || 'Ok';\n            this.icon = data.icon;\n        }\n    }\n\n    /**\n     * Close the modal\n     */\n    public close() {\n        this.closing = true;\n        this.timeout('close', () => this.item.close());\n\n    }\n\n    /**\n     * User confirmation of the content of the modal\n     */\n    public accept() {\n        this.item.post('finish');\n        this.close();\n    }\n}\n\nOVERLAY_REGISTER.push({ id: 'confirm', config: { content: ConfirmModalComponent, config: 'modal' } });\n","<div class=\"background\"></div>\n<div class=\"modal control\" [@show] (window:touchend)=\"reset()\" (window:mouseup)=\"reset()\">\n    <div class=\"control-frame\">\n        <iframe [src]=\"control_url | safe:'resource'\"></iframe>\n    </div>\n</div>\n<div class=\"overlay\">\n    <button widget class=\"action countdown\" (tapped)=\"reset()\" (contextmenu)=\"$event.preventDefault()\">{{ countdown }}</button>\n    <button widget class=\"action close\" (tapped)=\"close()\" (contextmenu)=\"$event.preventDefault()\">\n        <div class=\"icon\">\n            <i class=\"material-icons\">close</i>\n        </div>\n    </button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { animate, keyframes, state, style, transition, trigger } from '@angular/animations';\n\nimport { OverlayItem } from '@acaprojects/ngx-overlays';\n\nimport { BaseComponent } from '../../shared/base.component';\nimport { OVERLAY_REGISTER } from '../../shared/globals/overlay-register';\n\n@Component({\n    selector: 'embedded-control-modal',\n    templateUrl: './embedded-control-modal.component.html',\n    styleUrls: ['./embedded-control-modal.component.scss'],\n    animations: [\n        trigger('show', [\n            transition(':enter', [style({ opacity: 0 }), animate(500, style({ opacity: 1 }))]),\n            transition(':leave', [style({ opacity: 1 }), animate(1000, style({ opacity: 0 }))]),\n        ]),\n    ],\n})\nexport class EmbeddedControlModalComponent extends BaseComponent implements OnInit {\n    /** Control URL to embed into the modal */\n    public control_url: string;\n    /** Display value for the time remain until the modal automatically closes */\n    public countdown: number;\n\n    constructor(private item: OverlayItem) {\n        super();\n        this.countdown = 30;\n    }\n\n    public ngOnInit(): void {\n        const data = this.item.data;\n        if (data) {\n            this.control_url = data.control_url;\n        }\n        if (!this.control_url) {\n            this.close();\n        }\n        this.countdown = 30;\n        this.interval('countdown', () => this.tick(), 1000);\n    }\n\n    /**\n     * Close the modal\n     */\n    public close() {\n        this.item.close();\n        this.countdown = 30;\n    }\n\n    /**\n     * User confirmation of the content of the modal\n     */\n    public reset() {\n        this.countdown = 30;\n        this.interval('countdown', () => this.tick(), 1000);\n    }\n\n    /**\n     * Decrement countdown and close if 0\n     */\n    public tick() {\n        if (this.countdown <= 0) {\n            this.close();\n        }\n        this.countdown--;\n    }\n}\n\nOVERLAY_REGISTER.push({ id: 'embeded-control', config: { content: EmbeddedControlModalComponent, config: 'modal' } });\n","\nimport { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SharedContentModule } from '../shared/shared.module';\n\nimport { ConfirmModalComponent } from './confirm-modal/confirm-modal.component';\nimport { EmbeddedControlModalComponent } from './embedded-control-modal/embedded-control-modal.component';\nimport { BookingModalComponent } from './booking-modal/booking-modal.component';\n\nconst OVERLAYS: Type<any>[] = [\n    ConfirmModalComponent,\n    EmbeddedControlModalComponent,\n    BookingModalComponent\n];\n\n@NgModule({\n    declarations: [\n        ...OVERLAYS\n    ],\n    imports: [\n        CommonModule,\n        SharedContentModule\n    ],\n    exports: [\n        ...OVERLAYS\n    ],\n    entryComponents: [\n        ...OVERLAYS\n    ]\n})\nexport class SharedOverlaysModule {}\n","import { ApplicationRef, Injectable, NgZone } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\nimport { SwUpdate } from '@angular/service-worker';\n\nimport { listenForToken, setup, PlaceAuthOptions, token, hasToken } from '@placeos/ts-client';\nimport { AOverlayService } from '@acaprojects/ngx-overlays';\nimport { GoogleAnalyticsService } from '@acaprojects/ngx-google-analytics';\n\nimport { Observable, BehaviorSubject, Subject, Subscription, timer } from 'rxjs';\n\nimport { BaseClass } from '../shared/base.class';\nimport { SettingsService } from './settings.service';\nimport { HashMap } from '../shared/utilities/types.utilities';\n\nimport { OVERLAY_REGISTER } from '../shared/globals/overlay-register';\nimport { ComposerSettings } from '../shared/utilities/settings.interfaces';\n\nimport { HotkeysService } from './hotkeys.service';\nimport { OrganisationService } from './data/organisation/organisation.service';\nimport { UsersService } from './data/users/users.service';\nimport { BookingsService } from './data/bookings/bookings.service';\nimport { SpacesService } from './data/spaces/spaces.service';\nimport { SystemsManagerService } from './data/systems-manager/systems-manager.service';\nimport { PollingService } from './data/polling/polling.service';\nimport { first, delay } from 'rxjs/operators';\nimport { ConsoleStream, log } from '../shared/utilities/general.utilities';\n\ndeclare global {\n    interface Window {\n        application: ApplicationService;\n        mock: {\n            enabled: boolean;\n            backend: any;\n        };\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ApplicationService extends BaseClass {\n    /** List of previous routes for return navigation */\n    private _route_trail: string[] = [];\n    /** Map of state variables for Service */\n    protected _subjects: { [key: string]: BehaviorSubject<any> | Subject<any> } = {};\n    /** Map of observables for state variables */\n    protected _observers: { [key: string]: Observable<any> } = {};\n    /** Whether the application has stablised */\n    private _stable: boolean;\n\n    /** Whether the application has stablised */\n    public get is_stable(): boolean {\n        return this._stable || false;\n    }\n\n    constructor(\n        private _app_ref: ApplicationRef,\n        private _zone: NgZone,\n        private _title: Title,\n        private _router: Router,\n        private _cache: SwUpdate,\n        private _settings: SettingsService,\n        private _overlay: AOverlayService,\n        private _analytics: GoogleAnalyticsService,\n        private _hotkeys: HotkeysService,\n        private _systems: SystemsManagerService,\n        private _organisation: OrganisationService,\n        private _users: UsersService,\n        private _bookings: BookingsService,\n        private _spaces: SpacesService,\n        private _polling: PollingService\n    ) {\n        super();\n        this._organisation.parent = this._users.parent = this._bookings.parent = this._spaces.parent = this._polling.parent = this;\n        this.set('system', null);\n        this.log('APP', `Waiting for Application to stablised...`, undefined, undefined, true);\n        this._app_ref.isStable.pipe(first((_) => _)).subscribe(() => {\n            this.log('APP', `Application has stablised.`, undefined, undefined, true);\n            this._zone.run(() => {\n                this._stable = true;\n                this.setupCache();\n                this.waitForSettings();\n                this.registerOverlays();\n            });\n        });\n    }\n\n    /** Overlay service */\n    public get Overlay(): AOverlayService {\n        return this._overlay;\n    }\n\n    /** Analytics service */\n    public get Analytics() {\n        return this._analytics;\n    }\n\n    /** Hotkeys service */\n    public get Hotkeys() {\n        return this._hotkeys;\n    }\n\n    /** Systems Manager service */\n    public get Systems() {\n        return this._systems;\n    }\n\n    /** Organisation service */\n    public get Organisation() {\n        return this._organisation;\n    }\n\n    /** Users service */\n    public get Users() {\n        return this._users;\n    }\n\n    /** Bookings service */\n    public get Bookings() {\n        return this._bookings;\n    }\n\n    /** Spaces service */\n    public get Spaces() {\n        return this._spaces;\n    }\n\n    /**\n     * Get a setting from the settings service\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        return this._settings.get(key);\n    }\n\n    /** Name of the application */\n    public get name() {\n        return this._settings.app_name;\n    }\n\n    /**\n     * Title of the page\n     */\n    public set title(value: string) {\n        const title_suffix = this.setting('app.title');\n        this._title.setTitle(`${value ? value + ' | ' : ''}${title_suffix}`);\n    }\n\n    /**\n     * Title of the page\n     */\n    public get title(): string {\n        return this._title.getTitle();\n    }\n\n    /** Root API Endpoint */\n    public get endpoint() {\n        return `/api/staff/`;\n    }\n\n    /** Root API Endpoint for engine */\n    public get engine_endpoint() {\n        return `/control/api/`;\n    }\n\n    /**\n     * Create notification popup\n     * @param type CSS Class to add to the notification\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notify(type: string, msg: string, action?: string, on_action?: () => void): void {\n        const content = `<div class=\"icon\"><i class=\"material-icons\"></i></div><div class=\"text\">${msg}</div>`;\n        this._overlay.notify(content, action, on_action, type);\n    }\n\n    /**\n     * Create success notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifySuccess(msg: string, action?: string, on_action?: () => void): void {\n        this.notify('success', msg, action, on_action);\n    }\n\n    /**\n     * Create success notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifyError(msg: string, action?: string, on_action?: () => void): void {\n        this.notify('error', msg, action, on_action);\n    }\n\n    /**\n     * Create info notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifyInfo(msg: string, action?: string, on_action?: () => void): void {\n        this.notify('info', msg, action, on_action);\n    }\n\n    /**\n     * Log data to the browser console\n     * @param type Type of message\n     * @param msg Message body\n     * @param args array of argments to log to the console\n     * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\n     * @param force Whether to force message to be emitted when debug is disabled\n     */\n    public log(type: string, msg: string, args?: any, stream: ConsoleStream = 'debug', force: boolean = false): void {\n        log(type, msg, args, stream, force);\n    }\n\n    /**\n     * Navigate to the given path\n     * @param path Path or array of path parts\n     * @param query Key value pairs to add to the URL as query parameters\n     */\n    public navigate(path: string | string[], query?: HashMap): void {\n        const route = path instanceof Array ? [...path] : [path];\n        this._route_trail.push(this._router.url);\n        this._router.navigate(route, query ? { queryParams: query } : { preserveFragment: true });\n    }\n\n    /**\n     * Navigate to the previous location in the route trail\n     */\n    public navigateBack(): void {\n        if (this._route_trail && this._route_trail.length > 0) {\n            const path = this._route_trail.pop();\n            this._router.navigate([path]);\n        } else {\n            this._router.navigate(['']);\n        }\n    }\n\n    /**\n     * Get the current value of the named property\n     * @param name Property name\n     */\n    public get<U = any>(name: string): U {\n        return this._subjects[name] && this._subjects[name] instanceof BehaviorSubject\n            ? (this._subjects[name] as BehaviorSubject<U>).getValue()\n            : null;\n    }\n\n    /**\n     * Listen to value change of the named property\n     * @param name Property name\n     * @param next Callback for value changes\n     */\n    public listen<U = any>(name: string, next: (_: U) => void): Subscription {\n        return this._observers[name] ? this._observers[name].subscribe(next) : null;\n    }\n\n    /**\n     * Update the value of the named property\n     * @param name Property name\n     * @param value New value\n     */\n    public set<U = any>(name: string, value: U): void {\n        if (!this._subjects[name]) {\n            this._subjects[name] = new BehaviorSubject<U>(value);\n            this._observers[name] = this._subjects[name].asObservable();\n        } else {\n            this._subjects[name].next(value);\n        }\n    }\n\n    /** Wait for settings to be initialised before setting up the application */\n    private waitForSettings() {\n        this.log('SYSTEM', 'Waiting for settings...');\n        // Wait until the settings have loaded before initialising\n        this._settings.initialised.pipe(first(_ => _)).subscribe(() => this.init());\n    }\n\n    /**\n     * Initialise application services\n     */\n    private async init() {\n        await timer(Math.floor(Math.random() * 5 * 1000)).toPromise();\n        await this.setupComposer().catch(_ => _);\n        listenForToken().pipe(delay(500), first(_ => hasToken())).subscribe(_ => {\n            this._users.init();\n            // Setup analytics\n            this._analytics.enabled = !!this.setting('app.analytics.enabled');\n            if (this._analytics.enabled) {\n                this._analytics.load(this.setting('app.analytics.tracking_id'));\n            }\n            // Add service to window if in debug mode\n            if (window.debug) {\n                window.application = this;\n            }\n            this._hotkeys.listen(['Shift', 'Backslash'], () => {\n                this.navigate('bootstrap', { clear: true });\n            });\n            this._bookings.init();\n            this._spaces.init();\n            this._polling.init();\n            this._initialised.next(true);\n        });\n    }\n\n    /**\n     * Initialise the composer library comms\n     */\n    private setupComposer(): Promise<void> {\n        this.log('SYSTEM', 'Setting up composer...');\n        // Get application settings\n        const settings: ComposerSettings = this._settings.get('composer') || {};\n        const protocol = settings.protocol || location.protocol;\n        const host = settings.domain || location.hostname;\n        const port = settings.port || location.port;\n        const url = settings.use_domain ? `${protocol}//${host}:${port}` : location.origin;\n        const route = host.includes('localhost') && port === '4200' ? '' : settings.route || '';\n        const mock =\n            this._settings.get('mock') ||\n            location.href.includes('mock=true') ||\n            localStorage.getItem('mock') === 'true';\n        // Generate configuration object\n        const config: PlaceAuthOptions = {\n            auth_type: 'auth_code',\n            scope: 'public',\n            host: `${host}:${port}`,\n            auth_uri: `${url}/auth/oauth/authorize`,\n            token_uri: `${url}/auth/token`,\n            redirect_uri: `${location.origin}${route}/oauth-resp.html`,\n            handle_login: !settings.local_login,\n            use_iframe: true,\n            token_header: true,\n            mock\n        };\n        setup(config);\n        this.log('SYSTEM', 'Finsihed setting up composer.');\n        return setup(config);\n    }\n\n    /**\n     * Setup handler for cache change events\n     */\n    private setupCache() {\n        this.unsub('app_stable');\n        this.log('CACHE', `Initialising cache...`);\n        if (this._cache.isEnabled) {\n            this.log('CACHE', `Listening to cache events...`);\n            this._cache.activateUpdate();\n            this.subscription(\n                'cache_update',\n                this._cache.available.subscribe((event) => {\n                    const current = `current version is ${event.current.hash}`;\n                    const available = `available version is ${event.available.hash}`;\n                    this.log('CACHE', `Update available: ${current} ${available}`);\n                    this.activateUpdate();\n                })\n            );\n            setInterval(() => {\n                this.log('CACHE', `Checking for updates...`);\n                this._cache.checkForUpdate();\n            }, 5 * 60 * 1000);\n        }\n    }\n\n    /**\n     * Update the cache and reload the page\n     */\n    private activateUpdate() {\n        if (this._cache.isEnabled) {\n            this.log('CACHE', `Activating changes to the cache...`);\n            this._cache.activateUpdate().then(() => location.reload());\n        }\n    }\n\n    /**\n     * Pre-register available overlays\n     */\n    private registerOverlays(): void {\n        if (OVERLAY_REGISTER) {\n            for (const overlay of OVERLAY_REGISTER) {\n                this._overlay.register(overlay.id, overlay.config);\n            }\n        }\n    }\n}\n","import { ADynamicFormField } from '@acaprojects/ngx-dynamic-forms';\nimport { Subject } from 'rxjs';\n\nimport { BaseClass } from '../../shared/base.class';\nimport { HashMap } from '../../shared/utilities/types.utilities';\n\nexport interface IDataClassEvent {\n    type: string;\n    metadata: HashMap;\n}\n\nexport class BaseDataClass extends BaseClass {\n    /** Unique Identifier of the object */\n    readonly id: string;\n    /** Human readable name of the object */\n    readonly name: string;\n    /** Email address associated with the object */\n    readonly email: string;\n    /** Subject for change events to the class object */\n    readonly changeEvents = new Subject<IDataClassEvent>();\n    /** Form Fields for the object */\n    protected _form_fields: ADynamicFormField[];\n    /** Metadata to pass to form fields */\n    protected _form_metadata: HashMap;\n\n    constructor(protected service: any, raw_data: HashMap) {\n        super();\n        this.id = raw_data.id || raw_data.zone_id || raw_data.email || `${Math.floor(Math.random() * 9999999999)}`;\n        this.name = raw_data.name;\n        this.email = (raw_data.email || '').toLowerCase();\n        this._form_metadata = raw_data.form_metadata || {};\n    }\n\n    /** Get form field metadata for the object */\n    public get form_fields(): ADynamicFormField[] {\n        if (!this._form_fields) {\n            this._form_fields = this.initialiseFormFields();\n        }\n        return this._form_fields;\n    }\n\n    /** Whether form fields are valid */\n    public get valid(): boolean {\n        return this._form_fields ? this._form_fields.reduce((a, i) => a && i.isValid(), true) : false;\n    }\n\n    /** Whether the form has changes */\n    public get changes(): boolean {\n        return this.formChanges().length > 0;\n    }\n\n    /**\n     * Reset the values on the form to their initial state\n     */\n    public resetForm(): void {\n        if (this._form_fields) {\n            for (const field of this._form_fields) {\n                field.setValue(this[field.key]);\n            }\n        }\n    }\n\n    /**\n     * Get a list of the field names that have changed values\n     */\n    public formChanges(): string[] {\n        const changed: string[] = [];\n        if (this._form_fields) {\n            for (const field of this._form_fields) {\n                if (field.getValue() !== this[field.key]) {\n                    changed.push(field.key);\n                }\n            }\n        }\n        return changed;\n    }\n\n    /**\n     * Save form changes to server\n     */\n    public save(): Promise<BaseDataClass> {\n        if (this.changes && this.service) {\n            this._form_fields.forEach(i => i.showErrors(true));\n            if (this.valid) {\n                const form = this.formValues();\n                return this.id\n                    ? this.service.update(this.id, form)\n                    : this.service.add(form);\n            }\n        }\n    }\n\n    /**\n     * Delete this item from the server\n     */\n    public delete(): Promise<void> {\n        if (this.id) {\n            return this.service.delete(this.id);\n        }\n    }\n\n    /**\n     * Run task for this item on the service\n     * @param task_name Name of the task\n     * @param parameters Parameters to pass to the task request\n     */\n    public runTask(task_name: string, parameters: HashMap): Promise<void> {\n        if (this.id) {\n            return this.service.task(this.id, task_name, parameters);\n        }\n    }\n\n    /**\n     * Get a map of the field values\n     */\n    public toJSON(): HashMap {\n        if (!this._form_fields) {\n            this._form_fields = this.initialiseFormFields();\n        }\n        const json = this.formValues();\n        json.id = this.id;\n        delete json.changed_fields;\n        return json;\n    }\n\n    /**\n     * Emits change event\n     * @param type Type of change that has occurred\n     * @param metadata Supporting metadata for the event\n     */\n    public emit(type: string, metadata?: HashMap): void {\n        this.changeEvents.next({ type, metadata })\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): BaseDataClass {\n        return new BaseDataClass(this.service, this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): BaseDataClass {\n        return new BaseDataClass(this.service, { ...this, id: null, email: null });\n    }\n\n    /**\n     * Get the mapped values of the form fields\n     */\n    protected formValues(field_list: ADynamicFormField[] = this._form_fields, changes: boolean = true): HashMap {\n        const values: HashMap = {};\n        for (const field of field_list) {\n            if (field.children && field.children.length > 0) {\n                values[field.key] = this.formValues(field.children, false);\n            } else {\n                values[field.key] = field.getValue();\n            }\n        }\n        if (changes) {\n            values.changed_fields = this.formChanges();\n        }\n        return values;\n    }\n\n    /**\n     * Initialise the form field metadata for the field\n     */\n    protected initialiseFormFields(): ADynamicFormField[] {\n        const edit = !!this.id;\n        const fields: ADynamicFormField[] = [\n            new ADynamicFormField({\n                key: 'name',\n                type: 'input',\n                value: this.name\n            }),\n            new ADynamicFormField({\n                key: 'email',\n                type: 'input',\n                value: this.email,\n                required: true,\n                attributes: { type: 'email' }\n            })\n        ];\n        return fields;\n    }\n}\n","\nimport { get, post, put, del } from '@placeos/ts-client';\nimport { BehaviorSubject, Observable, Subscription, Subscriber, Subject } from 'rxjs';\n\nimport { BaseDataClass } from './base-api.class';\nimport { BaseClass } from '../../shared/base.class';\nimport { ApplicationService } from '../app.service';\nimport { HashMap } from '../../shared/utilities/types.utilities';\nimport { toQueryString } from '../../shared/utilities/api.utilities';\n\nexport interface IEngineResponse {\n    results: HashMap[];\n    total: number\n}\n\nexport class BaseAPIService<T = BaseDataClass> extends BaseClass {\n    /** Application service */\n    public parent: ApplicationService;\n    /** Display name of the service */\n    protected _name: string;\n    /** API Route of the service */\n    protected _api_route: string;\n    /** Map of state variables for Service */\n    protected _subjects: { [key: string]: BehaviorSubject<any> | Subject<any> } = {};\n    /** Map of observables for state variables */\n    protected _observers: { [key: string]: Observable<any> } = {};\n    /** Map of poll subscribers for API endpoints */\n    protected _subscribers: { [key: string]: Subscriber<any> } = {};\n    /** Map of promises for Service */\n    protected _promises: { [key: string]: Promise<any> } = {};\n    /** Comparison function for service items */\n    protected _compare: (a: T, b: T) => boolean = (a, b) => a === b || (a as any).id === (b as any).id;\n    /** Default filter function for list method */\n    protected _list_filter: (a: T) => boolean = (a) => !!a;\n\n    constructor() {\n        super();\n        this._name = 'Base';\n        this._api_route = 'base';\n        this.set('list', []);\n    }\n\n    /**\n     * Initailise service\n     */\n     public init() {\n        if (!this.parent || !this.parent.is_initialised) {\n            return this.timeout('init', () => this.init());\n        }\n        if (this.shouldLoadOnInit()) {\n            this.load().then(_ => this._initialised.next(true));\n        }\n    }\n\n    /**\n     * Override to prevent loading.\n     * @protected\n     */\n    protected shouldLoadOnInit() {\n        return true;\n    }\n\n    /**\n     * Get API route for the service\n     * @param engine Whether endpoint is using the application API or engine API\n     */\n    public route(engine: boolean = false) {\n        const endpoint = this.parent ? (engine ? this.parent.engine_endpoint : this.parent.endpoint) : '/api/';\n        return `${endpoint}${this._api_route}`;\n    }\n    /** API Route of the service */\n    public get api_route() {\n        return this._api_route;\n    }\n\n    /**\n     * Get a service related setting from the settings service\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string) {\n        return this.parent ? this.parent.setting(`app.${this._name.toLowerCase()}.${key}`) : null;\n    }\n\n    /**\n     * Get the current value of the named property\n     * @param name Property name\n     */\n    public get<U = any>(name: string): U {\n        return this._subjects[name] && this._subjects[name] instanceof BehaviorSubject\n            ? (this._subjects[name] as BehaviorSubject<U>).getValue()\n            : null;\n    }\n\n\n    /**\n     * Listen to value change of the named property\n     * @param name Property name\n     * @param next Callback for value changes\n     */\n    public listen<U = any>(name: string): Observable<U> {\n        return this._observers[name] ? this._observers[name] : null;\n    }\n\n    /**\n     * Update the value of the named property\n     * @param name Property name\n     * @param value New value\n     */\n    protected set<U = any>(name: string, value: U): void {\n        if (!this._subjects[name]) {\n            this._subjects[name] = new BehaviorSubject<U>(value);\n            this._observers[name] = this._subjects[name].asObservable();\n        } else {\n            this._subjects[name].next(value);\n        }\n    }\n\n    /**\n     * Get list of loaded items\n     * @param filterFn Function for filtering the list\n     */\n    public list(filterFn: (a: T) => boolean = this._list_filter): T[] {\n        const list = this.get('list') || [];\n        return list.reduce((a, i) => { if (filterFn(i)) { a.push(i); } return a; }, []);\n    }\n\n    /**\n     * Get item with the given id from the loaded items\n     * @param id ID of the item\n     */\n    public item(id: string): T {\n        const list = this.get('list') || [];\n        return list.find(i => i.id === id || i.email === id);\n    }\n\n    /**\n     * Query the index of the API route associated with this service\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public query(query_params: HashMap = { update_list: true }): Promise<T[] | HashMap[]> {\n        let engine = false;\n        let cache = 1000;\n        if (query_params) {\n            engine = !!query_params.engine;\n            delete query_params.engine;\n            cache = query_params.cache || 1000;\n            delete query_params.cache;\n        }\n        const query = toQueryString(query_params);\n        const key = `query|${query}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise((resolve, reject) => {\n                const url = `${this.route(engine)}${query ? '?' + query : ''}`;\n                let result: T[] | HashMap[] = [];\n                get(url).subscribe(\n                    (d: IEngineResponse | HashMap[]) => {\n                        result = d && d instanceof Array\n                            ? d.map(i => this.process(i))\n                            : (d && !(d instanceof Array) && d.results\n                                ? d.results as HashMap[]\n                                : []);\n                    }, e => {\n                        reject(e);\n                        this._promises[key] = null;\n                    },\n                    () => {\n                        if ((!query || (query_params && query_params.update_list)) && result.length > 0 && result[0] instanceof BaseDataClass) {\n                            this.set('list', this.updateList(this.get('list'), result as T[]));\n                        }\n                        resolve(result);\n                        this.timeout(key, () => (this._promises[key] = null), cache);\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Query the API route for a sepecific item\n     * @param id ID of the item\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public show(id: string, query_params: HashMap = {}): Promise<T> {\n        let engine = false;\n        if (query_params) {\n            engine = !!query_params.engine;\n            delete query_params.engine;\n        }\n        const query = toQueryString(query_params);\n        const key = `show|${id}|${query}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<T>((resolve, reject) => {\n                const url = `${this.route(engine)}/${id}${query ? '?' + query : ''}`;\n                let result: T = null;\n                get(url).subscribe(\n                    d => result = this.process(d),\n                    e => {\n                        reject(e);\n                        this._promises[key] = null;\n                    },\n                    () => {\n                        resolve(result);\n                        this.timeout(key, () => (this._promises[key] = null), 1000);\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Make post request for a new item to the service\n     * @param form_data Data to post to the server\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public add(form_data: HashMap, query_params: HashMap = {}): Promise<T> {\n        if (!this._promises.new_item) {\n            this._promises.new_item = new Promise<T>((resolve, reject) => {\n                const query = toQueryString(query_params);\n                const url = `${this.route(query_params.engine)}${query ? '?' + query : ''}`;\n                let result: T = null;\n                post(url, form_data).subscribe(\n                    d => (result = this.process(d)),\n                    e => {\n                        reject(e);\n                        this.analyticsEvent(`create-${this._name.toLowerCase()}-failed`);\n                        this._promises.new_item = null;\n                    },\n                    () => {\n                        resolve(result);\n                        this.set('list', this.updateList(this.get('list'), [result]));\n                        this.analyticsEvent(`create-${this._name.toLowerCase()}-success`);\n                        this._promises.new_item = null;\n                    }\n                );\n            });\n        }\n        return this._promises.new_item;\n    }\n\n    /**\n     * Perform API task for the given item ID\n     * @param id ID of the item\n     * @param task_name Name of the task\n     * @param form_data Map of data to pass to the API\n     */\n    public task<U = any>(id: string, task_name: string, form_data: HashMap = {}): Promise<U> {\n        const query = toQueryString(form_data);\n        const key = `task|${id}|${task_name}|${query}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<U>((resolve, reject) => {\n                const post_data = { ...form_data, id, _task: task_name };\n                const url = `${this.route(form_data.engine)}/${id}/${task_name}`;\n                let result = null;\n                post(url, post_data).subscribe(\n                    d => result = d,\n                    e => {\n                        reject(e);\n                        this.analyticsEvent(`${this._name.toLowerCase()}-task-${task_name}-failed`, id);\n                        this._promises[key] = null;\n                    },\n                    () => {\n                        resolve(result as U);\n                        this.analyticsEvent(`${this._name.toLowerCase()}-task-${task_name}-success`, id);\n                        this.timeout(key, () => this._promises[key] = null, 1000);\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Setup a poller for an API endpoint\n     * @param id Show request ID. Leave blank to poll on the query endpoint\n     * @param query_params Map of query paramaters to add to the polled URL\n     * @param delay Delay between each poll event\n     */\n    public poll(id?: string, query_params: HashMap = {}, delay: number = 5000): Observable<T | T[]> {\n        const key = `poll|${id || ''}|${toQueryString(query_params) || ''}`;\n        this.stopPoll(id, query_params);\n        this._subjects[key] = new Subject<T | T[]>();\n        this._observers[key] = this._subjects[key].asObservable();\n        const sub = this._subjects[key];\n        const query = { ...(query_params || {}), _poll: true };\n        if (id) {\n            this.show(id, query).then((d) => sub.next(d), e => sub.error(e));\n            this.interval(key, () => {\n                this.show(id, query).then((d) => sub.next(d), e => sub.error(e));\n            }, delay);\n        } else {\n            this.query(query).then((d) => sub.next(d), e => sub.error(e));\n            this.interval(key, () => {\n                this.query(query).then((d) => sub.next(d), e => sub.error(e));\n            }, delay);\n        }\n        return this._observers[key];\n    }\n\n    /**\n     * Destroy poller\n     * @param id\n     * @param query_params\n     */\n    public stopPoll(id?: string, query_params: HashMap = {}) {\n        const key = `poll|${id || ''}|${toQueryString(query_params) || ''}`;\n        if (this._subjects[key]) {\n            this._subjects[key].complete();\n            this._subjects[key] = null;\n            this._observers[key] = null;\n        }\n    }\n\n    /**\n     * Make put request for changes to the item with the given id\n     * @param id ID of the item being updated\n     * @param form_data New values for the item\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public update(id: string, form_data: HashMap, query_params: HashMap = {}): Promise<T> {\n        const key = `update|${id}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<T>((resolve, reject) => {\n                const query = toQueryString(query_params);\n                const url = `${this.route(query_params.engine)}/${id}${query ? '?' + query : ''}`;\n                let result: T = null;\n                put(url, form_data).subscribe(\n                    d => (result = this.process(d)),\n                    e => {\n                        reject(e);\n                        this.analyticsEvent(`update-${this._name.toLowerCase()}-failed`, id);\n                        this._promises[key] = null;\n                    },\n                    () => {\n                        resolve(result);\n                        this.set('list', this.updateList(this.removeItem(this.get('list'), { id } as any), [result]));\n                        this.analyticsEvent(`update-${this._name.toLowerCase()}-success`, id);\n                        this._promises[key] = null;\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Make delete request for the given item\n     * @param id ID of item\n     */\n    public delete(id: string): Promise<void> {\n        const key = `delete|${id}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<void>((resolve, reject) => {\n                const url = `${this.route()}/${id}`;\n                del(url).subscribe(\n                    _ => null,\n                    e => reject(e),\n                    () => {\n                        this.set('list', this.removeItem(this.get('list'), ({ id } as any)));\n                        resolve();\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Add new API item from another service or API class\n     * @param id ID of the item/or service adding the new item\n     * @param data Raw API data for the new item\n     * @param type Adder type\n     */\n    public addFrom(id: string, data: HashMap, type: 'class' | 'service' | 'other' = 'other'): string {\n        const new_item = this.process(data);\n        this.set('list', this.updateList(this.get('list'), [new_item]));\n        return (new_item as any).id;\n    }\n\n    /**\n     * Remove items with the given IDs from the list\n     * @param id ID of the item/or service remove the list of items\n     * @param remove_ids List of item IDs to remove\n     * @param type Remover type\n     */\n    public removeFrom(id: string, remove_ids: string[], type: 'class' | 'service' | 'other' = 'other') {\n        const list = this.get('list');\n        for (const item_id of remove_ids) {\n            const index = list.findIndex(item => item.id === item_id);\n            if (index >= 0) {\n                list.splice(index, 1);\n            }\n        }\n        this.set('list', list);\n    }\n\n    /**\n     * Load initial data for the service\n     */\n    protected load(): Promise<void> {\n        return new Promise<void>((resolve) => {\n            resolve();\n        });\n    }\n\n    /**\n     * Post analytics event for this service\n     * @param action Name of the action to post\n     */\n    protected analyticsEvent(action: string, label?: string) {\n        if (this.parent && this.parent.Analytics) {\n            this.parent.Analytics.event(this._name, `${this.parent.name.toLowerCase()}-${action}`, label);\n        }\n    }\n\n    /**\n     * Convert raw API data into a valid API Object\n     * @param raw_item Raw API data\n     */\n    protected process(raw_item: HashMap): T {\n        return raw_item as T;\n    }\n\n    /**\n     * Update recorded list of items\n     * @param old_list Old list of items\n     * @param list List of updated items\n     * @param compareFn Function to compare items to remove duplicates\n     */\n    protected updateList(old_list: T[], list: T[], compareFn: (a: T, b: T) => boolean = this._compare): T[] {\n        if (!list || list.length === 0) { return old_list; }\n        const new_list: T[] = [];\n        const mixed_list = [...list, ...old_list];\n        if (!compareFn) { compareFn = this._compare; }\n        for (const item of mixed_list) {\n            const found = new_list.find(i => compareFn(i, item));\n            if (!found) {\n                new_list.push(item);\n            }\n        }\n        return new_list;\n    }\n\n    /**\n     * Remove the given item from the given list\n     * @param list List of items\n     * @param item Item to remove\n     * @param compareFn Function to compare items\n     */\n    protected removeItem(list: T[], item: T, compareFn?: (a: T, b: T) => boolean) {\n        const new_list = [];\n        if (!compareFn) { compareFn = this._compare; }\n        list.forEach(i => compareFn(item, i) ? null : new_list.push(i));\n        return new_list;\n    }\n}\n","import { formatDate } from '@angular/common';\nimport { Validators } from '@angular/forms';\nimport { ADynamicFormField } from '@acaprojects/ngx-dynamic-forms';\n\nimport { BaseDataClass } from '../base-api.class';\nimport { User } from '../users/user.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\nimport { humaniseDuration } from '../../../shared/utilities/general.utilities';\nimport { Space } from '../spaces/space.class';\nimport { FORM_FIELDS } from '../../../shared/globals/form-fields';\n\nimport {\n    formatAttendeesWithHost, formatRecurrence, formatSpaces\n} from '../../../shared/utilities/formatting.utilities';\nimport {\n    buildValidateAttendees, buildValidateDuration, validateDate\n} from '../../../shared/utilities/validation.utilities';\n\nimport * as dayjs from 'dayjs';\nimport 'dayjs/locale/en';\nimport 'dayjs/locale/fr-ca';\nimport { is24HourTime } from './booking.utilities';\nimport { BaseAPIService } from '../base.service';\n\nexport class Booking extends BaseDataClass {\n    /** Unique calendar event ID */\n    readonly icaluid: string;\n    /** Subject or title of the booking */\n    readonly title: string;\n    /** Unix timestamp of the booking start */\n    readonly date: number;\n    /** Length of the booking in minutes */\n    readonly duration: number;\n    /** Description or details of the booking */\n    readonly body: string;\n    /** Supplimentary notes for the booking */\n    readonly notes: string;\n    /** Type of booking */\n    readonly type: string;\n    /** Whether the booking has catering associated with it */\n    readonly catering: boolean;\n    /** String location set in booking */\n    readonly _location: string;\n    /** List of attendee emails associated with the booking */\n    private _attendees: string[];\n    /** Email of the host or organiser of the booking */\n    private _organiser: string;\n    /** List of spaces associated with the booking */\n    private _space_list: string[];\n    /** Cached display strings */\n    private _display: HashMap<string> = {};\n\n    constructor(protected service: BaseAPIService<Booking>, raw_data: HashMap = {}) {\n        super(service, raw_data);\n        const u_service = service && service.parent && service.parent.Users;\n        this.icaluid = raw_data.icaluid || this.id;\n        this.title = raw_data.title || raw_data.subject || raw_data.Subject;\n        const start = dayjs(raw_data.date || raw_data.start || raw_data.start_epoch * 1000 || raw_data.Start);\n        this.date = start.valueOf();\n        this.duration = raw_data.duration || dayjs(raw_data.end || raw_data.end_epoch * 1000 || raw_data.End).diff(start, 'm');\n        this.body = raw_data.body || raw_data.description;\n        this.notes = raw_data.notes;\n        this.type = raw_data.type || (raw_data.visitors ? 'external' : null) || 'internal';\n        this.catering = raw_data.catering;\n        this._attendees = (raw_data.attendees || raw_data._attendees || []).map(i => u_service?.item(i.email) || new User(u_service, i));\n        const organiser = raw_data.organiser || raw_data.organizer || { email: `${raw_data.owner}@fake.org` };\n        if (raw_data.owner) {\n            this.service?.parent.Users.addFrom('booking', { name: raw_data.owner, email: `${raw_data.owner}@fake.org` });\n        }\n        this._organiser = organiser.email || raw_data._organiser;\n        this._location = raw_data.location || raw_data._location;\n        this.update_display();\n        this._space_list = raw_data.room_ids || raw_data._space_list;\n        // Add attendees and organiser to service data\n        if (this.service?.parent && this.service.parent.Users) {\n            if (raw_data.attendees) {\n                raw_data.attendees.forEach(u => {\n                    if (!this.service.parent.Users.item(u.email)) {\n                        this.service.parent.Users.addFrom(this.id, u, 'class');\n                    }\n                });\n            }\n            if (organiser) {\n                if (!this.service.parent.Users.item(organiser.email)) {\n                    this.service.parent.Users.addFrom(this.id, organiser, 'class');\n                }\n            }\n        }\n    }\n\n    /** List of attendees to the meeting */\n    public get attendees(): User[] {\n        return this.service && this.service.parent && this.service.parent.Users\n            ? this.service.parent.Users.list((user) => this._attendees.indexOf(user.id) >= 0)\n            : [];\n    }\n\n    /** Host or organiser of the meeting */\n    public get organiser(): User {\n        return this.service && this.service.parent && this.service.parent.Users && this._organiser\n            ? this.service.parent.Users.item(this._organiser) : null;\n    }\n\n    /** Status of the booking */\n    public get status(): 'future' | 'upcoming' | 'done' | 'started' | 'in_progress' {\n        const now = dayjs();\n        const date = dayjs(this.date);\n        if (now.isBefore(date.subtract(15, 'm'), 'm')) {\n            return 'future';\n        } else if (now.isBefore(date, 'm')) {\n            return 'upcoming';\n        } else if (now.isBefore(date.add(15, 'm'), 'm')) {\n            return 'started';\n        } else if (now.isBefore(date.add(this.duration, 'm'), 'm')) {\n            return 'in_progress';\n        }\n        return 'done';\n    }\n\n    /** Get the first space from the space list */\n    public get space(): Space {\n        return this.service && this.service.parent && this.service.parent.Spaces && this._space_list && this._space_list.length > 0\n            ? this.service.parent.Spaces.item(this._space_list[0]) : null;\n    }\n\n    /** Spaces associated with the booking */\n    public get space_list(): Space[] {\n        return this.service && this.service.parent && this.service.parent.Spaces\n            ? this.service.parent.Spaces.list((space) => this._space_list.indexOf(space.id) >= 0)\n            : [];\n    }\n\n    /** Display value for the date */\n    public get date_string(): string {\n        return this._display.date;\n    }\n\n    /** Display valuie for the start and end times of the booking */\n    public get time_period(): string {\n        return this._display.time;\n    }\n\n    /** Display value for the start time of the booking */\n    public get start_time(): string {\n        return this._display.start;\n    }\n\n    public get start_date(): string {\n        return this._display.startDate;\n    }\n\n    /** Display value for the end time of the booking */\n    public get end_time(): string {\n        return this._display.end;\n    }\n\n    public get end_date(): string {\n        return this._display.endDate;\n    }\n\n    /** Display value for the duration of the booking */\n    public get length_string(): string {\n        return this._display.duration;\n    }\n\n    /** Display value for the location of the booking */\n    public get location(): string {\n        return this._display.space_names || this._location || 'No location set';\n    }\n\n    /** Display value for the level of the first space in the booking */\n    public get level(): string {\n        return this._display.level;\n    }\n\n    /**\n     * Create form fields for the object\n     */\n    protected initialiseFormFields(): ADynamicFormField[] {\n        const form_fields = [];\n        const form_settings = this.service.setting('fields') || [];\n        const user = this.service.parent.Users.current;\n        const actions = {\n            // space: () => this.setSpace(),\n            // recurrence: () => this.setRecurrence(),\n            // conferencing: (v?) => this.setConferencing(v)\n        };\n        const validators = {\n            date: [validateDate],\n            duration: [buildValidateDuration()],\n            attendees: [buildValidateAttendees(user, this.service.setting('min_attendees'))],\n            terms: [Validators.requiredTrue]\n        };\n        const formatters = {\n            attendees: formatAttendeesWithHost(user),\n            date: formatDate,\n            space: formatSpaces,\n            recurrence: formatRecurrence\n        };\n        const custom_elements = FORM_FIELDS;\n        const defaults = {};\n        const process_field = field => {\n            const f = {\n                key: field.key,\n                label: field.label,\n                icon: field.icon,\n                type: field.control_type || field.type,\n                value: this[field.key] || defaults[field.key] || '',\n                action: field.action || actions[field.key],\n                format: field.format || formatters[field.key],\n                content: field.content || custom_elements[field.key],\n                required: field.required,\n                validators: validators[field.key],\n                references: field.references || field.refs,\n                hide: field.hide,\n                metadata: { ...field.metadata, ...this._form_metadata, service: this.service },\n                attributes: { flex: field.flex },\n                children: field.children ? field.children.map(i => process_field(i)) : null\n            };\n            return new ADynamicFormField(f);\n        };\n        for (const field of form_settings) {\n            if (field.key) {\n                form_fields.push(process_field(field));\n            }\n        }\n        return form_fields;\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): Booking {\n        return new Booking(this.service, this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): Booking {\n        return new Booking(this.service, { ...this, id: null, email: null, icaluid: null });\n    }\n\n    /**\n     * Update the strings cached in {@link _display}.\n     *\n     * NB: {@link date} and {@link duration} must already be defined.\n     */\n    public update_display(localeCode: string = 'en'): void {\n        // dayjs doesn't understand most valid BCP47 codes. Mangle the input value passed in to fit.\n        const dayjsLocaleCode = localeCode.toLowerCase();\n        const start = dayjs(this.date).locale(dayjsLocaleCode);\n\n        let timeFormat = is24HourTime(localeCode) ? 'HH:mm' : 'h:mma';\n        // This is only the Montreal 24r format\n        if (dayjsLocaleCode === 'fr-ca') {\n            timeFormat = 'HH [h] mm';\n        }\n\n        // Define our own format string for dates (dayjs does not offer a built in constant for this).\n        const dateFormat = localeCode === 'en' ? 'MMMM Do' : 'D MMMM';\n\n        this._display = {\n            date: start.format('DD MMM YYYY'),\n            time: `${start.format(timeFormat)} - ${dayjs(start)\n                .add(this.duration, 'm')\n                .format(timeFormat)}`,\n            start: start.format(timeFormat),\n            startDate: dayjs(start)\n                .format(dateFormat),\n            end: dayjs(start)\n                .add(this.duration, 'm')\n                .format(timeFormat),\n            endDate: dayjs(start)\n                .add(this.duration, 'm')\n                .format(dateFormat),\n            duration: humaniseDuration(this.duration, false, dayjsLocaleCode)\n        };\n    }\n}\n","import { Space } from '../spaces/space.class';\nimport { User } from '../users/user.class';\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\n\nexport interface IBookingOptions {\n    space: Space;\n    date?: number;\n    title?: string;\n    max_duration?: number;\n    min_duration?: number;\n}\n\nexport interface BookingNote {\n    /** Type of note */\n    type: 'equipment' | 'catering' | 'description' | 'private' | 'other';\n    /** Name of the note's author */\n    author: string;\n    /** Contents of the note */\n    message: string;\n    /** Time the note was added to the booking */\n    date: number;\n    /** Display value for the time */\n    time?: string;\n    /** ID of the space associated with the note */\n    space?: string;\n    /** ID of the catering order associated with the note */\n    order_id?: string;\n}\n\n/** Details about recurrence associated with the booking */\nexport interface BookingRecurrenceDetails {\n    /** Period of recurrence */\n    readonly period: string;\n    /** Unix epoch in seconds of the recurrence start date */\n    readonly start: number;\n    /** Unix epoch in seconds of the recurrence end date */\n    readonly end: number;\n    /** Calendar UID of the initial event */\n    readonly series_id: string;\n    /** List of replacement spaces for unavailable events in the original spaces */\n    readonly conflicts: BookingRecurrenceSpaceDetails[];\n}\n\nexport interface BookingRecurrenceSpaceDetails {\n    /** Date of the recurrence event */\n    date: number;\n    /** Email address of the space the event is occurring */\n    space: string;\n    /** Email address of the space replaced for this occurrence */\n    replaces?: string;\n}\n\nexport enum SpaceRulesReason {\n    NoBuildingService = 'NoBuildingService',\n    BuildingNotFound = 'BuildingNotFound',\n    NoMatchingRules = 'NoMatchingRules',\n    MatchesRules = 'MatchesRules',\n}\n\nexport interface SpaceRules {\n    auto_approve: boolean;\n    hide: boolean;\n    max_length?: number;\n    min_length?: number;\n    reason?: SpaceRulesReason;\n    // list of checks that failed\n    failures?: string[];\n}\n\nexport interface BookingRule {\n    conditions: BookingRuleConditions;\n    rules: {\n        book_ahead?: string;\n        book_length?: string;\n        auto_approve?: boolean;\n    };\n}\n\nexport interface BookingRuleConditions {\n    /** List of user groups that the host must be in */\n    groups?: string[];\n    /** List of locations that the host must be */\n    locations?: string[],\n    /** Minimum length of a booking */\n    min_length?: string;\n    /** Maximum length of a booking */\n    max_length?: string;\n    /** How far in the future this bookings are allowed */\n    is_before?: string;\n    /** How far in the future this bookings must be */\n    is_after?: string;\n}\n\nexport interface SpaceRuleOptions {\n    user?: User;\n    space: Space;\n    time?: number;\n    recurr_end?: number;\n    duration?: number;\n    rules?: HashMap<readonly BookingRule[]>;\n}\n\nexport interface SpaceCheckOptions {\n    user?: User;\n    space: Space;\n    time?: number;\n    recurr_end?: number;\n    duration?: number;\n    rules: BookingRuleConditions;\n}\n","import { padZero } from '../../../shared/utilities/general.utilities';\n\nimport { generateMockUser } from '../users/user.utilities';\n\nimport * as faker from 'faker';\nimport * as dayjs from 'dayjs';\nimport { Booking } from './booking.class';\nimport MockDate from 'mockdate';\nimport { SpaceCheckOptions, SpaceRuleOptions, SpaceRules, SpaceRulesReason } from './booking.interfaces';\n\nconst MINUTE = 1;\nconst HOUR = 60;\nconst DAY = 24 * HOUR;\nconst WEEK = 7 * DAY;\nconst MONTH = 30 * DAY;\n\nconst DURATION_MAP: { [duration: string]: number } = {\n    month: MONTH,\n    months: MONTH,\n    week: WEEK,\n    weeks: WEEK,\n    day: DAY,\n    days: DAY,\n    hour: HOUR,\n    hours: HOUR,\n    minute: MINUTE,\n    minutes: MINUTE\n};\n\n/**\n * August 13, 2020 at 7:22:12 UTC\n */\nconst initialTime = 1597346532 * 1000;\n\nexport const mockDate = () => MockDate.set(initialTime);\n\nlet BOOKING_COUNT = 0;\nlet BOOKING_DATE = dayjs().minute(0).startOf('m');\n\n/**\n * Set the initial time used for generating mock bookings\n * @param time New initial time as ms from UTC epoch\n */\nexport function setMockBookingStartDatetime(time: number) {\n    BOOKING_DATE = dayjs(time).startOf('m');\n}\n\n/**\n * Return whether locale string is displayed in 24 hour time\n *\n * (Function copied from -converge repository, file general.utilities.ts)\n */\nexport function is24HourTime(localeCode?: string): boolean {\n    const date = new Date();\n    const localeString = date.toLocaleTimeString(\n        localeCode || document.querySelector('html').getAttribute('lang') || navigator.language\n    ).toLowerCase();\n    return localeString.indexOf('am') < 0 && localeString.indexOf('pm') < 0;\n}\n\n/**\n * Create mock raw API data for a booking\n * @param id\n * @param seed - faker seed to remain stable.\n */\nexport function generateMockBooking(id?: string, seed?: number) {\n    if (seed) {\n        faker.seed(seed);\n    }\n    if (!id) {\n        id = `booking-${BOOKING_COUNT++}`;\n    }\n    const offset = seed ? 0 : Math.floor(Math.random() * 4);\n    const localDate = BOOKING_DATE.add(offset + 15, 'm');\n    const start = localDate.valueOf();\n    const duration = offset + 30;\n    return {\n        id,\n        icaluid: seed ? 0 : padZero(Math.floor(Math.random() * 99999999), 8),\n        title: `${faker.commerce.productName()} Meeting`,\n        attendees: Array(seed ? 1 : Math.floor(Math.random() * 5 + 2))\n            .fill(0)\n            .map(i => generateMockUser(undefined, undefined, undefined, seed)),\n        organiser: generateMockUser(undefined, undefined, undefined, seed),\n        date: start,\n        duration,\n        description: faker.lorem.paragraph(),\n        notes: faker.lorem.paragraph(),\n        location: faker.address.city(),\n        catering: seed ? false : Math.floor(Math.random() * 34567) % 3 === 0\n    };\n}\n\nexport interface IBookingSlot {\n    start: number;\n    end: number;\n}\n\n/**\n * Generate a list of free time slots between the given bookings\n * @param list List of bookings to find slots between\n * @param min_size Minimum length of a free slot in minutes\n */\nexport function getFreeBookingSlots(list: Booking[], min_size: number = 30): IBookingSlot[] {\n    if (!list) {\n        return [{ start: 0, end: dayjs().startOf('m').valueOf() * 10 }];\n    }\n    const slots: IBookingSlot[] = [];\n    let start = dayjs(0);\n    list.sort((a, b) => a.date - b.date);\n    for (const booking of list) {\n        const bkn_start = dayjs(booking.date);\n        const bkn_end = bkn_start.add(booking.duration, 'm');\n        if (bkn_start.isAfter(start)) {\n            const diff = bkn_start.diff(start, 'm');\n            if (diff >= min_size) {\n                slots.push({ start: start.valueOf(), end: bkn_start.valueOf() });\n            }\n            start = bkn_end;\n        }\n    }\n    slots.push({ start: start.valueOf(), end: dayjs().startOf('m').valueOf() * 10 });\n    return slots;\n}\n\n/**\n * Get the next free time slot from the given bookings\n * @param list List of bookings to find the next slot\n * @param date Date to find next slot after in ms since UTC epoch\n * @param min_size Minimum length of the free slot in minutes\n */\nexport function getNextFreeBookingSlot(list: Booking[], date: number = dayjs().valueOf(), min_size: number = 30): IBookingSlot {\n    const slots = getFreeBookingSlots(list, min_size);\n    const time = dayjs(date).startOf('m').second(1);\n    for (const block of slots) {\n        const start = dayjs(block.start).startOf('m');\n        const end = dayjs(block.end).startOf('m');\n        if (start.isAfter(time, 's')) {\n            return block;\n        } else if (time.isBefore(end, 's')) {\n            const duration = end.diff(time, 'm');\n            if (duration >= min_size) {\n                return block;\n            }\n        }\n    }\n    return slots[slots.length - 1];\n}\n\n\n/**\n * Get booking rules for the given user and space\n * @param user User to determine applicable rules\n * @param space Space to get rules for\n * @param time Booking start time in ms since UTC epoch\n * @param rules List of booking rules for the building\n */\nexport function rulesForSpace(options: SpaceRuleOptions): SpaceRules {\n    if (!options) {\n        throw Error('Options are needed to check for rule matches');\n    }\n    const space_rules_for_user: SpaceRules = {\n        auto_approve: true,\n        hide: true\n    };\n    let match = false;\n    /* istanbul ignore else */\n    if (options.space) {\n        for (const type in options.rules) {\n            if (\n                options.rules.hasOwnProperty(type) &&\n                options.rules[type] instanceof Array &&\n                options.space.zones.find((zone) => zone === type)\n            ) {\n                for (const rule_block of options.rules[type]) {\n                    /* istanbul ignore else */\n                    const { passes_rules, failures } = checkRules({\n                        user: options.user,\n                        space: options.space,\n                        time: options.time,\n                        recurr_end: options.recurr_end,\n                        duration: options.duration,\n                        rules: rule_block.conditions\n                    });\n                    if (!space_rules_for_user.failures) {\n                        space_rules_for_user.failures = [];\n                    }\n                    space_rules_for_user.failures.concat(failures);\n                    if (passes_rules) {\n                        const ruleset = rule_block.rules;\n                        const conditions = rule_block.conditions;\n                        space_rules_for_user.hide = false;\n                        /* istanbul ignore else */\n                        if (conditions.max_length) {\n                            space_rules_for_user.max_length = stringToMinutes(\n                                conditions.max_length as string\n                            );\n                        }\n                        /* istanbul ignore else */\n                        if (conditions.min_length) {\n                            space_rules_for_user.min_length = stringToMinutes(\n                                conditions.min_length as string\n                            );\n                        }\n                        // NOTE: use max_length in conditions instead of book_length in rules\n                        // if (ruleset.book_length) {\n                        //     space_rules_for_user.max_length = stringToMinutes(ruleset.book_length as string);\n                        // }\n                        /* istanbul ignore else */\n                        if (ruleset.auto_approve !== undefined) {\n                            space_rules_for_user.auto_approve = ruleset.auto_approve;\n                        }\n                        match = true;\n                        break;\n                    }\n                }\n            }\n            /* istanbul ignore else */\n            if (!space_rules_for_user.hide) {\n                break;\n            }\n        }\n    }\n    if (!match) {\n        space_rules_for_user.reason = SpaceRulesReason.NoMatchingRules;\n        space_rules_for_user.hide = true;\n    } else {\n        space_rules_for_user.reason = SpaceRulesReason.MatchesRules;\n    }\n    return space_rules_for_user;\n}\n\n/**\n * Check if user matches the given ruleset\n * @param options\n */\nfunction checkRules(options: SpaceCheckOptions): { passes_rules: boolean, failures: string[] } {\n    /* istanbul ignore else */\n    if (options.rules) {\n        // list of failure reasons based on rules\n        // no current attempt at deduplication.\n        const failures: string[] = [];\n        const time = dayjs(options.time);\n        const recurr = options.recurr_end ? dayjs(options.recurr_end) : dayjs();\n        const count = Object.keys(options.rules).length;\n        let matches = 0;\n        Object.keys(options.rules).forEach((key) => {\n            let counter = 0;\n            const condition: string[] =\n                options.rules[key] instanceof Array\n                    ? (options.rules[key] as [])\n                    : [options.rules[key] as string];\n            switch (key) {\n                case 'groups':\n                    /* istanbul ignore else */\n                    if (options.user && options.user.groups) {\n                        counter = 0;\n                        condition.forEach((i) =>\n                            options.user.groups.find((j) => j === i) ? counter++ : null\n                        );\n                        /* istanbul ignore else */\n                        if (counter > 0) {\n                            matches++;\n                        } else {\n                            failures.push('groups');\n                        }\n                    }\n                    break;\n                case 'locations':\n                    /* istanbul ignore else */\n                    if (options.user && options.user.location) {\n                        counter = 0;\n                        condition.forEach((i) =>\n                            (options.user.last_location.name || '').indexOf(i) >= 0\n                                ? counter++\n                                : null\n                        );\n                        /* istanbul ignore else */\n                        if (counter >= options.rules[key].length) {\n                            matches++;\n                        } else {\n                            failures.push('locations');\n                        }\n                    }\n                    break;\n                case 'is_before':\n                    /* istanbul ignore else */\n                    if (options.time) {\n                        const duration = stringToMinutes(condition[0]);\n                        const check = dayjs().add(duration, 'm');\n                        let match = time.isBefore(check, 'm');\n                        /* istanbul ignore else */\n                        if (recurr) {\n                            match = match && recurr.isBefore(check, 'm');\n                        }\n                        matches += match ? 1 : 0;\n                        if (!match) {\n                            failures.push('is_before');\n                        }\n                    }\n                    break;\n                case 'is_after':\n                    /* istanbul ignore else */\n                    if (options.time) {\n                        const duration = stringToMinutes(condition[0]);\n                        const check = dayjs().add(duration, 'm');\n                        const isAfter = time.isAfter(check, 'm');\n                        if (isAfter) {\n                            matches++;\n                        } else {\n                            failures.push('is_after');\n                        }\n                    }\n                    break;\n                case 'min_length':\n                    /* istanbul ignore else */\n                    if (options.duration) {\n                        const durationGreater = durationGreaterThanOrEqual(options.duration, condition[0]);\n                        matches += durationGreater ? 1 : 0;\n                        if (!durationGreater) {\n                            failures.push('min_length');\n                        }\n                    }\n                    break;\n                case 'max_length':\n                    /* istanbul ignore else */\n                    if (options.duration) {\n                        const durationGreater = durationGreaterThanOrEqual(condition[0], options.duration);\n                        if (durationGreater) {\n                            matches++;\n                        } else {\n                            failures.push('max_length');\n                        }\n                    }\n                    break;\n            }\n        });\n        const passes_rules = matches >= count;\n        // if pass, dont supply failures.\n        return { passes_rules, failures: passes_rules ? [] : failures };\n    }\n    return { passes_rules: false, failures: [] };\n}\n\n/**\n * Whether the first input is greater than the last. Converts duration strings into minutes\n * @param duration_1 First input can be a number in minutes or a duration string e.g. `1 hour`\n * @param duration_2 Second input can be a number in minutes or a duration string e.g. `30 minutes`\n */\nexport function durationGreaterThanOrEqual(\n    duration_1: string | number,\n    duration_2: string | number\n) {\n    const first: number = typeof duration_1 === 'string' ? stringToMinutes(duration_1) : duration_1;\n    const second: number =\n        typeof duration_2 === 'string' ? stringToMinutes(duration_2) : duration_2;\n    return first >= second;\n}\n\n/**\n * Conver time string into minutes\n * @param str timestring e.g. `'1 day'`, `'15 minutes'`, `'2 weeks'`\n */\nexport function stringToMinutes(str: string): number {\n    const parts = str.split(' ');\n    return +parts[0] * DURATION_MAP[parts[1]];\n}\n","\nimport { Injectable } from '@angular/core';\n\nimport { BaseAPIService } from '../base.service';\nimport { Booking } from './booking.class';\nimport { Space } from '../spaces/space.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\nimport { BookingData } from '../../../overlays/booking-modal/booking-modal.component';\n\nimport * as dayjs from 'dayjs';\nimport { ServiceManager } from '../service-manager.class';\n\nexport interface IBookingOptions {\n    space: Space;\n    date?: number;\n    title?: string;\n    max_duration?: number;\n    min_duration?: number;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class BookingsService extends BaseAPIService<Booking> {\n    constructor() {\n        super();\n        ServiceManager.setService(Booking, this);\n        this._name = 'Bookings';\n        this._api_route = 'bookings';\n        this._compare = (a, b) => !a.id.localeCompare(b.id) || !a.icaluid.localeCompare(b.icaluid);\n    }\n\n    /**\n     * Open form modal for creating new bookings\n     * @param space Space to make booking in\n     * @param date Default date on the form\n     */\n    public new(options: IBookingOptions) {\n        if (options.space) {\n            this.parent.Overlay.open('booking', {\n                config: 'modal',\n                data: options as any\n            }, (event: { type: string, data: BookingData }) => {\n                const booking = event.data.booking.toJSON();\n                this.timeout('book', () => {\n                    this.create(options.space, booking)\n                        .then(() => {\n                            this.parent.notifySuccess('Booking successfully created');\n                            event.data.close ? event.data.close() : ''\n                        }).catch(_ => {\n                            this.parent.notifyError(`Error creating meeting. ${_}`);\n                            event.data.on_error ? event.data.on_error() : '';\n                        });\n                }, 1000);\n            });\n        }\n    }\n\n    /**\n     * Create new booking with the given properties\n     * @param booking New booking data\n     */\n    private create(space: Space, booking: HashMap) {\n        return new Promise((resolve, reject) => {\n            if (space) {\n                const request = {\n                    title: booking.title,\n                    count: {\n                        staff: booking.num_staff ? +booking.num_staff : 0,\n                        partners: booking.num_partners ? +booking.num_partners : 0,\n                    },\n                    staff_id: '', // data.form.user.staff_code,\n                    start: booking.date.valueOf(),\n                    end: dayjs(booking.date).add(booking.period.duration, 'm').valueOf(),\n                    host: booking.host || booking.user || { name: 'Panel User' }\n                };\n                const module = this.parent.Systems.get(space.id, 'Bookings');\n                if (request && module) {\n                    module.execute('create_meeting', [request]).then(() => {\n                        this.analyticsEvent('create-success');\n                        resolve();\n                    }, (err) => {\n                        this.analyticsEvent('create-failed');\n                        reject(`Error making booking: ${err}`);\n                    })\n                } else {\n                    reject(`No Bookings module found for space ${space.id}`);\n                }\n            } else {\n                reject('No space set for booking');\n            }\n        });\n    }\n\n    protected process(raw_data: HashMap): Booking {\n        return new Booking(this, raw_data);\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport { HashMap, Identity } from '../../../shared/utilities/types.utilities';\nimport { getItemWithKeys } from '../../../shared/utilities/general.utilities';\nimport { BaseAPIService } from '../base.service';\nimport { Organisation } from './organisation.class';\nimport { BuildingLevel } from './level.class';\nimport { BookingRule } from '../bookings/booking.interfaces';\n\nexport interface IBuildingRoleUser {\n    name: string;\n    email: string;\n    phone: string;\n}\n\nexport interface LockerMap {\n    [zone: string]: {\n        [area: string]: {\n            [type: string]: (string | boolean)[][];\n        };\n    };\n}\n\nexport interface ICoordinates {\n    longitude: number;\n    latitude: number;\n}\n\nexport interface IMapFeature {\n    id: string;\n    level_id: string;\n    name: string;\n}\n\nexport class Building extends BaseDataClass {\n    /** Engine Zone ID for the building */\n    readonly zone_id: string;\n    /** List of available extras for the building */\n    private _extras: Identity[];\n    /** List of available extra equipment for loan at the building */\n    private _loan_items: Identity[];\n    /** List of available levels for the building */\n    public readonly levels: readonly BuildingLevel[];\n    /** Details about the booking rules for the building */\n    public readonly booking_rules: HashMap<readonly BookingRule[]>;\n    /** Map of custom settings for the building */\n    private _settings: HashMap;\n    /** Map of roles and list of the associated users */\n    private _roles: HashMap<IBuildingRoleUser[]>;\n    /** Map of the locker ID arrays */\n    private _lockers: LockerMap;\n    /** Map of important system ids for the building */\n    private _systems: HashMap<string>;\n    /** Map of important phone numbers for the building */\n    private _phone_numbers: HashMap<string>;\n    /** Globe coordiates for the build */\n    private _location: ICoordinates;\n    /** List of zones associated with the building */\n    private _zones: string[];\n    /** Searchable map features */\n    private _searchables: IMapFeature[];\n\n    constructor(protected service: BaseAPIService<Organisation>, raw_data: HashMap) {\n        super(service, raw_data);\n        const settings = raw_data.settings || {};\n        const disc_info = settings.discovery_info || settings;\n        this.zone_id = raw_data.zone_id || raw_data.zone;\n        this._extras = (raw_data.extras || []).map(i => ({ id: i.extra_id || i.id, name: i.extra_name || i.name }));\n        this._loan_items = (raw_data.loan_items || []).map(i => ({ id: i.extra_id || i.id, name: i.extra_name || i.name }));\n        this.levels = (raw_data.levels || disc_info.levels  || []).map(i => new BuildingLevel({ ...i, building_id: this.id }));\n        this._roles = raw_data.roles || {};\n        this._lockers = raw_data.lockers || raw_data.locker_structure || {};\n        this._systems = raw_data.systems || {};\n        this._settings = raw_data.settings || {};\n        this._phone_numbers = raw_data.phone_numbers || {};\n        this._location = raw_data.location || { longitude: null, latitude: null };\n        this._searchables = [];\n        if (raw_data.neighbourhoods) {\n            for (const lvl in raw_data.neighbourhoods) {\n                if (raw_data.neighbourhoods.hasOwnProperty(lvl)) {\n                    const lvl_features = raw_data.neighbourhoods[lvl] || {};\n                    for (const feature in lvl_features) {\n                        if (lvl_features.hasOwnProperty(feature)) {\n                            this._searchables.push({\n                                id: lvl_features[feature],\n                                name: feature,\n                                level_id: lvl\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        this.booking_rules = raw_data.booking_rules || disc_info.booking_rules || settings.booking_rules || {};\n    }\n\n    /** List of available extras for the building */\n    public get extras(): Identity[] {\n        return [...(this._extras || [])];\n    }\n    /** List of available extras for the building */\n    public get loan_items(): Identity[] {\n        return [...(this._loan_items || [])];\n    }\n\n    /**\n     * Get a custom building setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        const keys = key.split('.');\n        const value = getItemWithKeys(keys, this._settings);\n        return value;\n    }\n\n    /**\n     * Get list of users with the associated role\n     * @param name Role to find users for\n     */\n    public role(name: string): IBuildingRoleUser[] {\n        return [...(this._roles[name] || [])];\n    }\n    /**\n     * Get list of the names of available user role lists\n     */\n    public get role_names(): string[] {\n        return Object.keys(this._roles).filter(i => this._roles.hasOwnProperty(i));\n    }\n    /** Map of the locker ID arrays */\n    public get lockers(): LockerMap {\n        return { ...(this._lockers || {}) };\n    }\n    /** Map of important system ids for the building */\n    public get systems(): HashMap<string> {\n        return { ...(this._systems || {}) };\n    }\n    /** Map of important phone numbers for the building */\n    public get phone_numbers(): HashMap<string> {\n        return { ...(this._phone_numbers || {}) };\n    }\n    /** Real coordinates */\n    public get location(): ICoordinates {\n        return { ...this._location };\n    }\n    /** List of zones associated with the building */\n    public get zones(): string[] {\n        return [...(this._zones || [])];\n    }\n    /** Searchable map features */\n    public get searchables(): IMapFeature[] {\n        return [...(this._searchables || [])];\n    }\n\n    /**\n     * Get search map feature for the given level ID\n     * @param level_id ID of level to grab features for\n     */\n    public featuresForLevel(level_id: string): IMapFeature[] {\n        return (this._searchables || []).filter(i => i.level_id === level_id);\n    }\n\n    /**\n     * Building objects are readonly and cannot be changed\n     */\n    public async save(): Promise<Building> {\n        throw new Error('Building objects are readonly and cannot be changed');\n    }\n\n    /**\n     * Building objects are readonly and cannot be deleted\n     */\n    public async delete(): Promise<void> {\n        throw new Error('Building objects are readonly and cannot be deleted');\n    }\n}\n","import { HashMap } from 'src/app/shared/utilities/types.utilities';\n\n/** Building Level data */\nexport class BuildingLevel {\n    /** ID of the building level zone */\n    readonly id: string;\n    /** ID of the building zone associated with the level */\n    readonly building_id: string;\n    /** Name of the level */\n    readonly name: string;\n    /** Number or short identifier of the level */\n    readonly short_name: string;\n    /** Map URL for the level */\n    readonly map_url: string;\n    /** Usage type for the level */\n    readonly type: 'staff' | 'client' | 'any';\n    /** Setting for the level */\n    readonly settings: HashMap;\n\n    constructor(_data: HashMap = {}) {\n        this.id = _data.id || _data.level_id || '';\n        this.building_id = _data.bld_id || _data.building_id || '';\n        this.name = _data.name || _data.level_name || '';\n        const lower_name = this.name.toLowerCase();\n        const num = lower_name.indexOf('level') >= 0 ? lower_name.replace(/ ?level ?/gi, '') : lower_name.substr(0, 1).toUpperCase();\n        this.short_name = _data.short_name || num || '';\n        this.map_url = _data.map_url || '';\n        this.type = _data.type || _data.floor_type || 'any';\n        this.settings = _data.settings;\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\nimport { getItemWithKeys } from '../../../shared/utilities/general.utilities';\nimport { BaseAPIService } from '../base.service';\n\nexport class Organisation extends BaseDataClass {\n    /** Map of custom settings for the building */\n    private _settings: HashMap;\n\n    constructor(protected service: BaseAPIService<Organisation>, raw_data: HashMap) {\n        super(service, raw_data);\n        this._settings = raw_data.settings || {};\n    }\n\n    /**\n     * Get a custom building setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        const keys = key.split('.');\n        const value = getItemWithKeys(keys, this._settings);\n        return value;\n    }\n\n    /**\n     * Building objects are readonly and cannot be changed\n     */\n    public async save(): Promise<Organisation> {\n        throw new Error('Organisation objects are readonly and cannot be changed');\n    }\n\n    /**\n     * Building objects are readonly and cannot be deleted\n     */\n    public async delete(): Promise<void> {\n        throw new Error('Organisation objects are readonly and cannot be deleted');\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { BaseAPIService } from '../base.service';\nimport { Organisation } from './organisation.class';\nimport { Building } from './building.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\nimport { ServiceManager } from '../service-manager.class';\nimport { BuildingLevel } from './level.class';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\nimport { rejects } from 'assert';\nimport { get } from '@placeos/ts-client';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class OrganisationService extends BaseAPIService {\n    /** Organisation data for the application */\n    private _organisation: Organisation;\n    /** Actively displayed building */\n    private _active_building: string;\n    /** Whether an error was shown when loading organisation data */\n    private shown_error: boolean;\n\n    constructor() {\n        super();\n        ServiceManager.setService(Building, this);\n        ServiceManager.setService(Organisation, this);\n        this._name = 'Organisation';\n        this._api_route = 'zones';\n        this.set('buildings', []);\n        this.set('levels', []);\n    }\n\n    /**\n     * Get list of levels for the given building ID\n     * @param bld_id Building ID\n     */\n    public levels(bld_id: string): readonly BuildingLevel[] {\n        return (this.buildings.find((i) => i.id === bld_id) || ({} as Building)).levels;\n    }\n\n    /**\n     * Get a setting from the organisation or active building\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string) {\n        return this.building.setting(key) || this._organisation.setting(key);\n    }\n\n    /** Active building */\n    public get building(): Building {\n        return (this.buildings.find(i => i.id === this._active_building));\n    }\n\n    public set building(bld: Building) {\n        if (bld instanceof Building) {\n            this._active_building = bld.id;\n        } else {\n            this._active_building = bld;\n        }\n    }\n\n    /** List of buildings for the organisation */\n    public get buildings(): Building[] {\n        return this.get<Building[]>('buildings') || [];\n    }\n\n    /**\n     * Get list of available equipment\n     * @param id ID of the building to get the list from. i.e. Defaults to the active building\n     */\n    public getExtras(id: string, bld_id?: string) {\n        const bld = (bld_id ? this.buildings.find(i => i.id === bld_id) : null) || this.building;\n        if (bld && id) {\n            return bld.extras.filter(i => i.id.indexOf(id) >= 0) || [];\n        }\n        return [];\n    }\n\n    /**\n     * Get the first level matching the list of given IDs\n     * @param ids List of ID to search with\n     */\n    public levelWithID(ids: string | string[]) {\n        const list = ids instanceof Array ? ids : [ids];\n        const bld_list = this.buildings;\n        for (const id of list) {\n            for (const bld of bld_list) {\n                for (const lvl of bld.levels) {\n                    if (lvl.id === id) {\n                        return lvl;\n                    }\n                }\n            }\n        }\n        return null;\n    }\n\n    public buildingWithID(ids: string | string[]): Building | null {\n        const list = ids instanceof Array ? ids : [ids];\n        const bld_list = this.buildings;\n        for (const id of list) {\n            for (const bld of bld_list) {\n                if (bld.id === id) {\n                    return bld;\n                }\n            }\n        }\n        return null;\n    }\n\n    public showBuilding(id: string) {\n        return new Promise<Building>((resolve, reject) => {\n            if (this.buildingWithID(id)) return resolve(this.buildingWithID(id));\n            const resp: any = get(`/control/api/zones/${id}`).toPromise().then((bld_data) => {\n                if (!bld_data.tags.includes('building')) {\n                    return reject('Zone is not a building');\n                }\n                const bld = new Building(this as any, bld_data);\n                const blds = this.buildings || [];\n                blds.push(bld);\n                this.set('buildings', unique(blds, 'id'));\n                if (!this._active_building && blds && blds.length > 0) {\n                    this._active_building = blds[0].id;\n                }\n                resolve(bld);\n            }).catch(_ => reject('Unable to load building.'));\n        });\n    }\n\n    /**\n     * Initialise service data\n     */\n    protected load(): Promise<void> {\n        if (localStorage) {\n            this._active_building = localStorage.getItem(`${this.parent.name}.building`);\n        }\n        return new Promise((resolve) => {\n            this.loadOrganisation().then(() => {\n                this.loadBuildings().then(() => {\n                    this.loadLevels().then(() => {\n                        resolve();\n                    });\n                });\n            });\n        });\n    }\n\n    /**\n     * Load organisation data for application\n     */\n    public loadOrganisation(): Promise<void> {\n        return new Promise<void>((resolve) => {\n            this.query({ tags: 'org', engine: true }).then((org_data) => {\n                this._organisation = new Organisation(this as any, org_data[0]);\n                this.set('organisation', this._organisation);\n                this.shown_error = false;\n                resolve();\n            }, _ => {\n                if (!this.shown_error) {\n                    this.shown_error = true;\n                    this.parent.notifyError('Error loading organisation data. Retrying...');\n                }\n                this.timeout('load_org', () => this.loadOrganisation().then(() => resolve()), 1000);\n            });\n        });\n    }\n\n    /**\n     * Load buildings data for the organisation\n     */\n    public loadBuildings(): Promise<void> {\n        return new Promise<void>((resolve) => {\n            this.query({ tags: 'building', engine: true, limit: 1000 }).then((bld_data) => {\n                const buildings = (bld_data as HashMap[]).map(i => new Building(this as any, i));\n                this.set('buildings', buildings || []);\n                if (!this._active_building && buildings && buildings.length > 0) {\n                    this._active_building = buildings[0].id;\n                }\n                resolve();\n            }, _ => {\n                this.parent.notifyError('Error loading building data. Retrying...');\n                this.timeout('load_bld', () => this.loadBuildings().then(() => resolve()), 1000);\n            });\n        });\n    }\n\n    /**\n     * Load levels data for the buildings\n     */\n    public loadLevels(): Promise<void> {\n        return new Promise<void>((resolve) => {\n            this.query({ tags: 'level', engine: true, limit: 1000 }).then((lvl_data) => {\n                const levels = (lvl_data as HashMap[]).map((i) => new BuildingLevel(i));\n                this.set('levels', levels);\n                resolve();\n            }, _ => {\n                this.parent.notifyError('Error loading level data. Retrying...');\n                this.timeout('load_lvl', () => this.loadLevels().then(() => resolve()), 1000);\n            });\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { BaseAPIService } from '../base.service';\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\n\nexport interface PollingMetadata {\n    room_id: string;\n    metadata?: HashMap<any>;\n}\n\nexport class PingHistory {\n    /** List of previous poll data */\n    readonly history: PollingMetadata[];\n    /** Unix time in seconds of the last poll request */\n    readonly last_ping: number;\n    /** Email of the associated space */\n    readonly room_email: string;\n    /** ID of the associated space */\n    readonly room_id: string;\n\n    constructor(data: HashMap) {\n        this.history = data.history;\n        this.last_ping = data.last_ping;\n        this.room_email = data.room_email;\n        this.room_id = data.room_id;\n    }\n}\n\nconst SECONDS = 1000;\nconst MINUTES = 60 * SECONDS;\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PollingService extends BaseAPIService<PingHistory> {\n    constructor() {\n        super();\n        this._name = 'Polling';\n        this._api_route = 'pings';\n    }\n\n    protected async load() {\n        this.interval('poll_endpoint', () => {\n            this.add({\n                room_id: this.parent.get('system')\n            });\n        }, 10 * MINUTES);\n    }\n\n    public query(...args: any): never {\n        throw new Error('Query method not available for polling endpoint');\n    }\n\n    public show(...args: any): never {\n        throw new Error('Show method not available for polling endpoint');\n    }\n\n    public update(...args: any): never {\n        throw new Error('Put method not available for polling endpoint');\n    }\n\n    public delete(...args: any): never {\n        throw new Error('delete method not available for polling endpoint');\n    }\n\n    protected process(data: HashMap) {\n        return new PingHistory(data);\n    }\n}\n","import { Type } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { BaseDataClass } from './base-api.class';\n\n\nexport interface ServiceLike<T = BaseDataClass> extends HashMap {\n    parent: any;\n    add: (_: HashMap) => Promise<T>;\n    update: (id: string, _: HashMap) => Promise<T>;\n    delete: (id: string, params?: HashMap) => Promise<void>;\n    task: (id: string, name: string, data: HashMap) => Promise<void>;\n    listen: <U = any>(prop: string) => Observable<U>;\n}\nexport interface ServiceProvider<T extends ServiceLike> {\n    provideFor: Type<any>;\n    useValue: T;\n}\n\nexport class ServiceManager {\n    /** Map of available services for child classes */\n    private static _service_list: ServiceProvider<any>[] = [];\n    /** Set the services used to handle data model requests */\n    public static setService(type: Type<any>, service: ServiceLike): void {\n        if (window.debug) {\n            (window as any).ServiceManager = this._service_list;\n        }\n        const index = ServiceManager._service_list.findIndex(provider => provider.provideFor === type);\n        if (index >= 0) {\n            ServiceManager._service_list.splice(index, 1, { provideFor: type, useValue: service });\n        } else {\n            ServiceManager._service_list.push({ provideFor: type, useValue: service });\n        }\n    }\n    /** Get the services used to handle data model requests */\n    public static serviceFor(type: Type<any>): ServiceLike<any> {\n        const provider = ServiceManager._service_list.find(provider => provider.provideFor === type) || { useValue: null };\n        return provider.useValue;\n    }\n\n    constructor() {\n        throw new Error('ServiceMananger is static class');\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport { HashMap, Identity } from '../../../shared/utilities/types.utilities';\nimport { Booking } from '../bookings/booking.class';\nimport { BaseAPIService } from '../base.service';\n\nimport * as dayjs from 'dayjs';\nimport { rulesForSpace } from '../bookings/booking.utilities';\nimport { SpaceRules, SpaceRulesReason } from '../bookings/booking.interfaces';\nimport { ServiceManager } from '../service-manager.class';\nimport { Building } from '../organisation/building.class';\nimport { Organisation } from '../organisation/organisation.class';\nimport { BuildingLevel } from '../organisation/level.class';\nimport { User } from '../users/user.class';\nimport { OrganisationService } from '../organisation/organisation.service';\n\nexport interface ISpaceAvailabilityOptions {\n    date?: number;\n    duration: number;\n    id?: string;\n    room_ids?: string;\n    bookable?: boolean;\n    rooms?: string;\n    ignore?: string;\n    zone_id?: string;\n    clear?: boolean;\n}\n\nexport interface SpaceBookingRuleOptions {\n    date?: number;\n    duration?: number;\n    host?: User;\n}\n\nconst OPTION_DEFAULTS: ISpaceAvailabilityOptions = {\n    duration: 60\n};\n\nexport enum SpaceTheme {\n    v1 = 'v1',\n    v2 = 'v2',\n}\n\nexport class Space extends BaseDataClass {\n    /** Extends name for the space */\n    readonly long_name: string;\n    /** CSS selector for the location of the space of the level's map */\n    readonly map_id: string;\n    /** Type of space */\n    readonly type: string;\n    /** Whether user can search for this space */\n    readonly can_search: boolean;\n    /** Whether user can open the control URL if available */\n    readonly can_control: boolean;\n    /** Hourly cost for using the space */\n    readonly hourly_rate: number;\n    /** Whether space can be booked by users */\n    readonly bookable: boolean;\n    /** People capacity of the space */\n    readonly capacity: number;\n    /** Index to force order when sorting multiple spaces */\n    readonly sort_priority: number;\n    /** Setup time for bookings in this space */\n    readonly setup: number;\n    /** Breakdown time for bookings in this space */\n    readonly breakdown: number;\n    /** Last returned availability result */\n    readonly was_available: boolean;\n    /** The version of the UI to support multiple version theming. */\n    private readonly _theme_rbp: SpaceTheme;\n    /** A BCP-47 code specifying what language to use in the UI. */\n    private readonly _locale_code: string | undefined;\n    /** Bookings associated with the space */\n    private _bookings: string[];\n    /** Engine zones associated with the space */\n    public readonly zones: string[];\n    /** List of equipment available in the space */\n    private _extras: Identity[];\n    /** List of ids for linked spaces */\n    private _linked_spaces: string[];\n\n    constructor(protected service: BaseAPIService<Space>, raw_data: HashMap = {}) {\n        super(service, raw_data);\n        const settings = raw_data.settings || {};\n        this.zones = raw_data.zones instanceof Array ? raw_data.zones : [];\n        this._theme_rbp = settings.theme_rbp || raw_data.theme_rbp || (this.building.setting('theme_rpb'));\n        this._locale_code = raw_data.locale_code || this.building.setting('locale_code');\n        this.long_name = settings.long_name || raw_data.long_name;\n        this.map_id = settings.map_id || raw_data.map_id;\n        this.type =\n            settings.book_type ||\n            (this.level?.settings || {}).book_type ||\n            raw_data.book_type ||\n            raw_data.type ||\n            'book';\n        this.can_search = settings.searchable || raw_data.searchable || raw_data.can_search || false;\n        this.can_control = settings.controlable || raw_data.controlable || raw_data.can_control || false;\n        this.hourly_rate = settings.cost_hour || raw_data.cost_hour || raw_data.hourly_rate || 0;\n        this.bookable = settings.bookable || raw_data.bookable || false;\n        this.setup = ((settings.setup || 0) / 60) || raw_data.setup || 0;\n        this.breakdown = ((settings.breakdown || 0) / 60) || raw_data.breakdown || 0;\n        this.capacity = raw_data.capacity || 0;\n        this.was_available = settings.available || raw_data.available || raw_data.was_available || false;\n\n        const raw_bookings = settings.bookings || raw_data.bookings || [];\n        this._bookings = raw_bookings.map(i => i.id);\n        if (this.service.parent && this.service.parent.Bookings) {\n            if (raw_bookings) {\n                const id_list = [];\n                raw_bookings.forEach(booking => {\n                    let id = booking.id;\n                    this.service.parent.Bookings.removeFrom(this.id, [id], 'class');\n                    id = this.service.parent.Bookings.addFrom(this.id, booking, 'class');\n                    id_list.push(id);\n                });\n                this._bookings = id_list;\n            }\n        }\n        this._extras = [];\n        this._linked_spaces = settings.linked_rooms || raw_data.linked_rooms || raw_data.linked_spaces || [];\n\n        // Do this last, after the bookings have been setup\n        this.update_bookings_display(this.locale_code);\n    }\n\n    /** Whether the space has a booking in progress */\n    public get in_use(): boolean {\n        return !!this.current;\n    }\n\n    /** Get any current in progress meeting */\n    public get current(): Booking | null {\n        const bookings = this.bookings;\n        for (const bkn of bookings) {\n            const status = bkn.status;\n            if (status === 'in_progress' || status === 'started') {\n                return bkn;\n            }\n        }\n        return null;\n    }\n\n    /** Get the next upcoming meeting */\n    public get next(): Booking {\n        const now = dayjs().valueOf();\n        const bookings = this.bookings;\n        for (const bkn of bookings) {\n            if (bkn.date > now) {\n                return bkn;\n            }\n        }\n        return null;\n    }\n\n    /** Retrieve a BCP-47 tag representing the default locale (language, currency, etc.) of this space */\n    public get locale_code(): string {\n        // Default to 'en' (we localise most spaces to English (and only English) at this time)\n        return this._locale_code || this.building.setting('locale_code') || 'en';\n    }\n\n    public get theme_rbp(): SpaceTheme | null {\n        return this._theme_rbp || this.building.setting('theme_rbp') || 'v1';\n    }\n\n    /** List of stored bookings for the space */\n    public get bookings(): Booking[] {\n        const bookingService = ServiceManager.serviceFor(Booking);\n        const booking_list = (bookingService\n            && bookingService.list((booking) => this._bookings.indexOf(booking.id) >= 0) || []);\n        return booking_list.sort((a, b) => a.date - b.date);\n    }\n\n    /** List of bookings for today */\n    public get todays_bookings(): Booking[] {\n        return this.bookingsFor(dayjs().valueOf());\n    }\n\n    /** List of ids for linked spaces */\n    public get linked_spaces() {\n        return [...this._linked_spaces];\n    }\n\n    /** Level in which the space is associated */\n    public get level(): BuildingLevel | null {\n        const service: OrganisationService = ServiceManager.serviceFor(Organisation) as OrganisationService;\n        return service ? service.levelWithID(this.zones as any) : null || new BuildingLevel({});\n    }\n\n    public get building(): Building {\n        const service = ServiceManager.serviceFor(Organisation) as OrganisationService;\n        const building = service ? service.buildingWithID(this.zones as any) : null;\n        return building || new Building(service as any, {});\n    }\n\n    /**\n     * Get bookings for space\n     * @param date Date to filter bookings on\n     */\n    public bookingsFor(date?: number): Booking[] {\n        if (date) {\n            const day = dayjs(date);\n            return this.bookings.filter(i => dayjs(i.date).isSame(day, 'd'));\n        } else {\n            return this.bookings;\n        }\n    }\n\n    /**\n     * Whether the space is available.\n     */\n    public isAvailable(options?: ISpaceAvailabilityOptions): Promise<boolean> {\n        options = options\n            ? { ...OPTION_DEFAULTS, ...options, room_ids: this.id }\n            : { ...OPTION_DEFAULTS, room_ids: this.id };\n        return new Promise((resolve) => {\n            (this.service as any).available(options).then((list: Space[]) => {\n                for (const rm of list) {\n                    if (rm.id === this.id) {\n                        return resolve(true);\n                    }\n                }\n                resolve(false);\n            }, () => resolve(false));\n        });\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): Space {\n        return new Space(this.service, this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): Space {\n        return new Space(this.service, { ...this, id: null, email: null, _bookings: [] });\n    }\n\n    /**\n     * Generate the booking rules for space with given options\n     * @param options Conditions for generating the space rules\n     */\n    public rulesFor(options: SpaceBookingRuleOptions): SpaceRules {\n        const service = ServiceManager.serviceFor(Building);\n        if (!service || !this.level) {\n            return {\n                auto_approve: true,\n                hide: false,\n                reason: SpaceRulesReason.NoBuildingService,\n                failures: [!this.level ? 'No Level' : 'No Service']\n            };\n        }\n        const building = service.buildings.find((bld) => bld.id === this.level.building_id);\n        if (!building) {\n            return { auto_approve: true, hide: false, reason: SpaceRulesReason.BuildingNotFound };\n        }\n        const { date, duration, host } = options;\n        return rulesForSpace({\n            time: date,\n            duration,\n            space: this,\n            user: host,\n            rules: building.booking_rules\n        });\n    }\n\n    /**\n     * Whether space can only be booked by request\n     * @param options Conditions for checking the space rules\n     */\n    public byRequest(options: SpaceBookingRuleOptions) {\n        const rules = this.rulesFor(options);\n        return !rules.auto_approve;\n    }\n\n    /*\n     * Invoke {@link Booking.update_display} on each of the contained Bookings.\n     *\n     * In some test scenarios, bookings don't have an 'update_display' function.\n     * See <code>generateMockBooking()</code> in booking.utilities.ts for more\n     * details.\n     */\n    public update_bookings_display(localeCode: string) {\n        for (const booking of this.bookings) {\n            if (booking instanceof Booking) {\n                booking.update_display(localeCode);\n            }\n        }\n    }\n}\n","import { HashMap } from '../../../shared/utilities/types.utilities';\nimport { generateMockBooking } from '../bookings/booking.utilities';\n\nimport * as faker from 'faker';\nimport { USER_DOMAIN } from '../users/user.utilities';\nimport { predictableRandomInt } from '../../../shared/utilities/general.utilities';\n\nlet SPACE_COUNT: number = 0;\n\nexport function generateMockSpace(overrides: HashMap = {}): HashMap {\n    const id = `space-${SPACE_COUNT++}`;\n    const name = `${faker.name.firstName()} ${faker.name.lastName()} Space`;\n    const linked = Math.floor(predictableRandomInt(99999)) % 2 === 0 && SPACE_COUNT > 1;\n    return {\n        id,\n        name,\n        long_name: `${name} with an long name`,\n        map_id: `${SPACE_COUNT}`,\n        capacity: Math.floor(predictableRandomInt(20) + 1) * 2,\n        email: `${name.toLowerCase().split(' ').join('.')}@${USER_DOMAIN}`,\n        type: faker.commerce.productName(),\n        searchable: Math.floor(predictableRandomInt(99999)) % 2 === 0,\n        controlable: Math.floor(predictableRandomInt(99999)) % 2 === 0,\n        bookable: Math.floor(predictableRandomInt(99999)) % 2 === 0,\n        cost_hour: Math.floor(predictableRandomInt(300)) * 100,\n        setup: Math.floor(predictableRandomInt(6)) * 5,\n        breakdown: Math.floor(predictableRandomInt(6)) * 5,\n        zones: ['zone_lvl-0'],\n        support_url: `/control/#/${id}`,\n        bookings: Array(10).fill(0).map(i => generateMockBooking()),\n        linked_rooms: linked ? [`space-${Math.floor(predictableRandomInt(SPACE_COUNT - 1))}`] : [],\n        image: faker.image.business(),\n        ...overrides\n    };\n}\n","\nimport { Injectable } from '@angular/core';\n\nimport { BaseAPIService } from '../base.service';\nimport { Space, ISpaceAvailabilityOptions } from './space.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\n\nimport * as dayjs from 'dayjs';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SpacesService extends BaseAPIService<Space> {\n\n    constructor() {\n        super();\n        this._name = 'Space';\n        this._api_route = 'rooms';\n        this._compare = (a, b) => !a.id.localeCompare(b.id) || !a.email.localeCompare(b.email);\n        this._list_filter = (a: Space) => {\n            const bld = this.parent.Organisation.building;\n            return a.level.building_id === bld.id;\n        };\n    }\n\n    protected shouldLoadOnInit(): boolean {\n        return false;\n    }\n\n    /**\n     * Get available spaces\n     * @param options\n     */\n    public available(options: ISpaceAvailabilityOptions): Promise<Space[]> {\n        if (!options) { throw new Error('Space avilability requires request options'); }\n        if (!options.date) { options.date = dayjs().startOf('m').valueOf(); }\n        const key = `available|${options.id ? options.id : ''}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise((resolve, reject) => {\n                const respond = (list: Space[]) => {\n                    const available_spaces = list.filter(i => {\n                        const linked = list.filter(j => i.linked_spaces.indexOf(j.id) >= 0);\n                        return i.was_available && linked.reduce((a, v) => a && v.was_available, true);\n                    });\n                    resolve(available_spaces);\n                };\n                const error = (e) => reject(e);\n                if (options.id) {\n                    this.show(options.id, options).then((i) => respond([i]), error);\n                } else {\n                    this.query(options).then(respond, error);\n                }\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Load initial data for the service\n     */\n    protected async load(): Promise<void> {\n        await this.query();\n    }\n\n    /**\n     * Observes an item by id and returns the one from the list by id or email that matches id.\n     */\n     public observeItem(idOrEmail: string): Observable<Space | undefined> {\n        return this._observers.list.pipe(\n            distinctUntilChanged(),\n            map((list: Space[] | undefined) => {\n                const space = list?.find(i => i.id === idOrEmail || i.email === idOrEmail);\n                return space;\n            })\n        );\n    }\n\n    /**\n     * Convert raw data into API object\n     * @param raw_data Raw API data\n     */\n    protected process(raw_data: HashMap): Space {\n        return new Space(this, raw_data);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { first, delay } from 'rxjs/operators';\nimport { PlaceSystem, PlaceModuleBinding, listenForToken, getModule, querySystems, hasToken } from '@placeos/ts-client';\n\nimport { BaseClass } from '../../../shared/base.class';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SystemsManagerService extends BaseClass {\n    /** Subject for System list */\n    private _list = new BehaviorSubject<PlaceSystem[]>([]);\n    /** Observable for system list */\n    public readonly systems = this._list.asObservable();\n\n    constructor() {\n        super();\n        // listenForToken().pipe(delay(500), first(_ => hasToken())).subscribe(() => this.load());\n    }\n\n    /** List of available systems */\n    public get list() {\n        return this._list.getValue() || [];\n    }\n\n    /**\n     * Get engine module for the given system\n     * @param sys_id ID of the system to get the module from\n     * @param mod_id ID of the module with the given system\n     * @param index Index of the module\n     */\n    public get(sys_id: string, mod_id: string, index?: number): PlaceModuleBinding {\n        return getModule(sys_id, mod_id, index);\n    }\n\n    /**\n     * Load Systems\n     */\n    public load() {\n        this.loadSystems();\n    }\n\n    /**\n     * Load one page of systems\n     * @param offset Item offset for the page to load\n     */\n    protected loadSystems(offset: number = 0, limit: number = 2000) {\n        querySystems({ offset, limit })\n            .toPromise()\n            .then((details) => {\n                const systems: PlaceSystem[] = [...this.list, ...details.data];\n                systems.sort((a, b) => (a.name || '').localeCompare(b.name));\n                this._list.next(systems);\n                if (systems.length < details.total) {\n                    this.loadSystems(systems.length);\n                }\n            })\n            .catch((e) => this.timeout('retry', () => this.loadSystems(offset), 2000));\n    }\n}\n","import { ADynamicFormField } from '@acaprojects/ngx-dynamic-forms';\n\nimport { BaseDataClass } from '../base-api.class';\nimport { HashMap, Identity } from '../../../shared/utilities/types.utilities';\nimport { BaseAPIService } from '../base.service';\n\nexport interface ILocation {\n    x?: number;\n    y?: number;\n    name?: string;\n    map_id?: string;\n    building: string;\n    level: string | Identity;\n    fixed: boolean;\n    loc_id?: string;\n    display?: { [name: string]: string };\n    confidence?: number;\n    another_bld?: boolean;\n    at_desk?: boolean;\n}\n\nexport class User extends BaseDataClass {\n    /** First name of the user */\n    readonly first_name: string;\n    /** Last name of the user */\n    readonly last_name: string;\n    /** Windows user ID */\n    readonly windows_id: string;\n    /** Type of user */\n    readonly type: 'partner' | 'external' | 'internal';\n    /** Contact phone number of the user */\n    readonly phone: string;\n    /** Organisational department the user is part of */\n    readonly business_unit: string;\n    /** Whether user is external from the application's organisation */\n    readonly external: boolean;\n    /** Organisational Identifier for the user */\n    readonly staff_code: string;\n    /** Basic location descriptor for the user */\n    public readonly location: string;\n    /** List of user groups associated with this user */\n    public readonly groups: readonly string[];\n    /** Organisation the user is associated with */\n    private _organisation: Identity;\n    /** Map location of the user */\n    private _location: ILocation;\n    /** List of users that this user can act on behalf */\n    private _delegates: string[];\n\n    constructor(protected service: BaseAPIService<User>, raw_data: HashMap = {}) {\n        super(service, raw_data);\n        this.first_name = raw_data.first_name;\n        this.last_name = raw_data.last_name;\n        this.windows_id = raw_data.email;\n        this.type = raw_data.visitor ? 'external' : raw_data.type || 'internal';\n        this.phone = raw_data.phone || raw_data.mobile;\n        this.business_unit = raw_data.business_unit || raw_data.department;\n        this._organisation = raw_data.organisation || { id: raw_data.organisation_id, name: raw_data.organisation_name };\n        this.external = this.type === 'external';\n        this._location = null;\n        this.staff_code = raw_data.staff_code || raw_data.fmno;\n        this._delegates = raw_data.delegates;\n\n        this.groups = raw_data.groups || [];\n        this.location = raw_data.location || raw_data.officeLocation || '';\n    }\n\n    /** Organisation the user is associated with */\n    public get organisation() {\n        return this._organisation;\n    }\n\n    /** Map location of the user */\n    public get last_location(): ILocation {\n        return this._location ? { ...(this._location) } : null;\n    }\n\n    /** List of users that this user can act on behalf */\n    public get delegates(): string[] {\n        return [...(this._delegates || [])];\n    }\n\n    /**\n     * Ask the server for the users current location\n     */\n    public locate(): Promise<ILocation> {\n        const service: any = this.service.parent || {};\n        return new Promise((resolve, reject) => {\n            if (service.Location) {\n                service.Location.show(this.id, { desk: this.email }).then(\n                    l => {\n                        this._location = l;\n                        resolve(l);\n                    },\n                    e => reject(e)\n                );\n            } else {\n                resolve(null);\n            }\n        });\n    }\n\n    /**\n     * Whether user is available during the given period\n     * @param start Start time as a unix timestamp with milliseconds\n     * @param end End time as a unix timestamp with milliseconds\n     */\n    public available(start?: number, end?: number): Promise<boolean> {\n        return new Promise<boolean>(resolve => {\n            this.service.query({ email: this.email, start, end })\n                .then(l => resolve(l && l.length > 0), _ => resolve(false));\n        });\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): User {\n        return new User(this.service, this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): User {\n        return new User(this.service, { ...this, id: null, email: null });\n    }\n\n    /**\n     * Initialise the form field metadata for the field\n     */\n    protected initialiseFormFields(): ADynamicFormField[] {\n        const edit = !!this.id;\n        const fields: ADynamicFormField[] = [\n            new ADynamicFormField({\n                key: 'name',\n                type: 'input',\n                value: this.name,\n                hide: true\n            }),\n            new ADynamicFormField({\n                key: 'first_name',\n                label: 'First Name',\n                type: 'input',\n                value: this.first_name,\n                required: true\n            }),\n            new ADynamicFormField({\n                key: 'last_name',\n                label: 'Last Name',\n                type: 'input',\n                value: this.last_name,\n                required: true\n            }),\n            new ADynamicFormField({\n                key: 'email',\n                label: 'Email',\n                type: 'input',\n                value: this.email,\n                required: true,\n                attributes: { type: 'email' }\n            })\n        ];\n        return fields;\n    }\n}\n","import { HashMap } from '../../../shared/utilities/types.utilities';\n\nimport * as faker from 'faker';\nimport { padZero, unique } from '../../../shared/utilities/general.utilities';\n\nlet USER_COUNT = 0;\n\nexport let USER_DOMAIN = 'acaprojects.com';\n\nconst USER_EMAILS: string[] = [];\n\n/**\n * Generate raw mock data for a user\n * @param id Forced ID for the mock\n * @param name Forced name for the user\n * @param external Whether user is external of the organisation\n * @param seed - faker seed\n */\nexport function generateMockUser(id?: string, name?: string, external?: boolean, seed?: number): HashMap {\n    if (seed) {\n        faker.seed(seed);\n    }\n    if (!id) {\n        id = `user-${USER_COUNT++}`;\n    }\n    if (!name) {\n        name = `${faker.name.firstName()} ${faker.name.lastName()}`;\n    }\n    if (external === undefined) {\n        external = !((Math.random() * 99999) % 2);\n    }\n    const organisation = external ? faker.company.companyName() : USER_DOMAIN.split('.')[0];\n    let delegates: string[] = [];\n    const delegate_count = Math.min(Math.random() * 4 + 1, USER_EMAILS.length);\n    for (let i = 0; i < delegate_count; i++) {\n        delegates.push(USER_EMAILS[Math.floor(Math.random() * USER_EMAILS.length)]);\n    }\n    delegates = unique(delegates);\n    const email = `${name.split(' ').join('.').toLowerCase()}@${external ? 'not-' : ''}${USER_DOMAIN}`;\n    USER_EMAILS.push(email);\n    return {\n        id,\n        name,\n        email,\n        phone: faker.phone.phoneNumber(),\n        visitor: external,\n        organisation: {\n            id: organisation.split(' ').join('.').toLowerCase(),\n            name: organisation\n        },\n        department: faker.commerce.department(),\n        staff_code: padZero(Math.floor(Math.random() * 99999), 5),\n        delegates\n    };\n}\n","import { Injectable } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Md5 } from 'ts-md5/dist/md5';\nimport { logout, authorise, invalidateToken, refreshAuthority } from '@placeos/ts-client';\n\nimport { BaseAPIService } from '../base.service';\nimport { User } from './user.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\n\nimport * as dayjs from 'dayjs';\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nexport interface ILoginOptions {\n    /** URL to post login request to */\n    url?: string;\n    /** Whether form data is passed in the body of the request */\n    form?: boolean;\n    /** Custom headers to pass into the post request */\n    headers?: HashMap<string>;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UsersService extends BaseAPIService<User> {\n    constructor(protected uhttp: HttpClient, protected location: Location) {\n        super();\n        this._name = 'Users';\n        this._api_route = 'users';\n        this._compare = (a, b) => !a.id.localeCompare(b.id) || !a.email.localeCompare(b.email);\n        this.set('current_user', new User(this, { id: 'local_user', name: 'Local User' }));\n    }\n\n    /** Currently logged in user */\n    public get current(): User {\n        return this.get('current_user');\n    }\n\n    public get currentUser(): Observable<User | undefined> {\n        return this._observers.current_user.pipe(\n            // don't want the local user\n            filter(u => u.id !== 'local_user')\n        );\n    }\n\n    /**\n     * Sets the access token and expiry for the user\n     * @param token OAuth bearer token\n     * @param expiry Expiry epoch timestamp in ms\n     * @param reload Whether to reload the page after setting tokens\n     */\n    public setToken(token: string, expiry?: number, reload: boolean = true) {\n        if (!expiry) {\n            expiry = dayjs()\n                .add(7, 'd').endOf('d')\n                .valueOf();\n        }\n        const path = `${location.origin}${this.parent.setting('composer.route') || ''}/oauth-resp.html`;\n        const client_id = Md5.hashStr(path);\n        if (sessionStorage) {\n            sessionStorage.setItem(`${client_id}_access_token`, token);\n            sessionStorage.setItem(`${client_id}_expires_at`, `${expiry}`);\n        }\n        if (localStorage) {\n            localStorage.setItem(`${client_id}_access_token`, token);\n            localStorage.setItem(`${client_id}_expires_at`, `${expiry}`);\n        }\n        if (reload) {\n            this.location.go(this.location.path());\n        }\n        return path;\n    }\n\n    /**\n     * Post login request to the API\n     * @param query_params Key value pairs to pass into\n     * @param options Options for the login request\n     */\n    public login(query_params: HashMap, options: ILoginOptions = {}): Promise<void> {\n        if (!this._promises['login']) {\n            this._promises['login'] = new Promise<void>((resolve, reject) => {\n                this.set('status', 'loading');\n                let headers = new HttpHeaders();\n                if (!options || options.form !== false) {\n                    headers = headers.append('Content-Type', 'application/x-www-form-urlencoded');\n                }\n                const url = (options ? options.url : '') || '/auth/signin';\n                this.uhttp.post(url, query_params, { headers }).subscribe(\n                    _ => null,\n                    e => reject(e),\n                    () => {\n                        authorise();\n                        resolve();\n                    }\n                );\n            });\n        }\n        return this._promises['login'];\n    }\n\n    /**\n     * Logout of user and redirect to logout URL\n     */\n    public logout() {\n        logout();\n    }\n\n    /**\n     * Load initial data for the service\n     */\n    protected load(tries: number = 0): Promise<void> {\n        this.set('status', 'loading');\n        return new Promise<void>(resolve => {\n            if (tries > 4) {\n                this.set('status', 'invalid');\n                return resolve();\n            }\n            this.show('current', { engine: true }).then(\n                current_user => {\n                    this.set('status', 'available');\n                    this.set('check_initialised', current_user);\n                    this.clearTimeout('load');\n                    if (this.parent && this.parent.setting('app.user.grab_api_details')) {\n                        this.show(current_user.email).then(\n                            user => {\n                                this.set('current_user', user);\n                                resolve();\n                            },\n                            () => this.timeout('load', () => this.load(++tries).then(() => resolve()))\n                        );\n                    } else {\n                        this.set('current_user', current_user);\n                        resolve();\n                    }\n                },\n                () => this.timeout('load', () => this.load(++tries).then(() => resolve()))\n            );\n        });\n    }\n\n    /**\n     * Convert raw API data into a valid User Object\n     * @param raw_item Raw API data\n     */\n    protected process(raw_data: any): User {\n        return new User(this, raw_data);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport interface DebugLog {\n    /** Logging level of the message */\n    level: 'log' | 'info' | 'warn' | 'debug' | 'error';\n    /** Contents of the log message */\n    content: any;\n    /** Time that the message was logged */\n    time: number;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class DebugService {\n\n    private _old_log = console.log;\n    private _old_info = console.info;\n    private _old_warn = console.warn;\n    private _old_debug = console.debug;\n    private _old_error = console.error;\n\n    /** Store for list of logs */\n    private _logs = new BehaviorSubject<DebugLog[]>([]);\n    /** Observable for list of logs */\n    public readonly logs = this._logs.pipe(map(list => list.reverse()));\n\n    constructor() {\n        console.log = (...args: any[]) => {\n            this.newLogMessage('log', args);\n            this._old_log.call(this, ...args);\n        };\n\n        console.info = (...args: any[]) => {\n            this.newLogMessage('info', args);\n            this._old_info.call(this, ...args);\n        };\n\n        console.warn = (...args: any[]) => {\n            this.newLogMessage('warn', args);\n            this._old_warn.call(this, ...args);\n        };\n\n        console.debug = (...args: any[]) => {\n            this.newLogMessage('debug', args);\n            this._old_debug.call(this, ...args);\n        };\n\n        console.error = (...args: any[]) => {\n            this.newLogMessage('error', args);\n            this._old_error.call(this, ...args);\n        };\n    }\n\n    private newLogMessage(level, content) {\n        const logs = [...this._logs.getValue()];\n        logs.push({ level, content, time: new Date().valueOf() });\n        logs.sort((a, b) => a.time - b.time);\n        this._logs.next(logs);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\n\nimport { HashMap } from '../shared/utilities/types.utilities';\nimport { unique } from '../shared/utilities/general.utilities';\n\n/** List of keys that cannot be in a combination by themselves or with each other */\nconst INVALID_STANDALONE_KEYS: string[] = ['control', 'shift', 'alt', 'meta', 'os'];\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HotkeysService {\n    /** Map of subjects which store press states of keys */\n    private keydown_states: HashMap<BehaviorSubject<number>> = {};\n    /** Map of obserers for key state subjects */\n    private keydown_observers: HashMap<Observable<number>> = {};\n    /** List of keys at the end of a combination */\n    private combo_end: string[] = [];\n    /** List of registered hotkey combinations */\n    private registered_combos: string[][] = [];\n    /** Counter for the number of keydown events. Used for checking order of key presses */\n    private counter: number = 0;\n    /** Last key code to be pressed */\n    private last_down: string;\n\n    constructor() {\n        window.addEventListener('keydown', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            if (this.last_down !== code) {\n                if (!this.keydown_states[code]) {\n                    this.keydown_states[code] = new BehaviorSubject(null);\n                    this.keydown_observers[code] = this.keydown_states[code].asObservable();\n                }\n                this.keydown_states[code].next(this.counter++);\n                if (this.combo_end.indexOf(code) >= 0) {\n                    event.preventDefault();\n                }\n                this.last_down = code;\n            }\n        });\n\n        window.addEventListener('keyup', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            this.keydown_states[code].next(null);\n            if (this.last_down === code) {\n                this.last_down = null;\n            }\n        });\n    }\n\n    /**\n     * Listen to the given key combination\n     * @param combo Array of key codes to listen to or a hotkey string e.g. `Alt+Shift+KeyK`\n     * @param next Callback for combination presses\n     */\n    public listen(combo: string | string[], next: () => void): Subscription {\n        combo = (combo instanceof Array ? combo : combo.split('+'));\n        const combination: string[] = combo.map(i => this.mapKey(i.toLowerCase()));\n        if (combination.length > 0 && this.validCombination(combination)) {\n            this.registered_combos.push(combination);\n            const last_key = combination[combination.length - 1];\n            if (!this.keydown_states[last_key]) {\n                this.keydown_states[last_key] = new BehaviorSubject(null);\n                this.keydown_observers[last_key] = this.keydown_states[last_key].asObservable();\n            }\n            this.updateCombinationEndList();\n            return this.keydown_observers[last_key].subscribe((count) => {\n                if (count) {\n                    const presses: number[] = [];\n                    if (combination.length > 1) {\n                        // Check that keys are pressed\n                        for (const key of combination) {\n                            const state = this.keydown_states[key];\n                            presses.push(state ? state.getValue() || -1 : -1);\n                        }\n                        // Check that keys are pressed in the correct order\n                        for (let i = 0; i < combination.length - 1; i++) {\n                            if (presses[i] > presses[i + 1]) { return; }\n                        }\n                    }\n                    next();\n                }\n            });\n        }\n        return null;\n    }\n\n    /**\n     * Map key codes with multiple versions to simple form\n     * @param code Code to transform\n     */\n    private mapKey(code: string): string {\n        if (code.indexOf('alt') || code.indexOf('shift') || code.indexOf('control')) {\n            return code.replace('left', '').replace('right', '');\n        }\n        return code;\n    }\n\n    /**\n     * Update the list of the last keys in combinations to allow for prevent default actions on pre-existing hotkeys\n     */\n    private updateCombinationEndList(): void {\n        const key_list = [];\n        for (const combo of this.registered_combos) {\n            this.combo_end.push(combo[combo.length - 1]);\n        }\n        this.combo_end = unique(key_list);\n    }\n\n    /**\n     * Checks if the given hotkey combination is allowed and valid\n     * @param combo Array of key codes\n     */\n    private validCombination(combo: string[]): boolean {\n        let non_meta = 0;\n        for (const key of combo) {\n            if (INVALID_STANDALONE_KEYS.indexOf(key) < 0) {\n                non_meta++;\n            }\n        }\n        return non_meta > 0;\n    }\n}","import { Injectable } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { format, isSameDay } from 'date-fns';\n\nimport { VERSION } from 'src/environments/version';\nimport { DEFAULT_SETTINGS } from 'src/environments/settings';\nimport { BaseClass } from '../shared/base.class';\nimport { HashMap } from '../shared/utilities/types.utilities';\nimport { getItemWithKeys, log } from '../shared/utilities/general.utilities';\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SettingsService extends BaseClass {\n    /** Name of the application */\n    private _app_name = 'PlaceOS';\n    /** List of override settings in order of priority */\n    private _overrides = new BehaviorSubject<HashMap[]>([]);\n    /** Mapping of behaviour subjects */\n    private _subjects: HashMap<BehaviorSubject<any>> = {};\n    /** Mapping of observables */\n    private _observables: HashMap<Observable<any>> = {};\n\n    /**\n     * @hidden\n     */\n    public set overrides(value: HashMap[]) {\n        this._overrides.next(value);\n    }\n\n    /** Get observable for key */\n    public listen<T = any>(name: string): Observable<T> {\n        if (!this._observables[name]) {\n            this._subjects[name] = new BehaviorSubject<T>(null);\n            this._observables[name] = this._subjects[name].asObservable();\n        }\n        return this._observables[name];\n    }\n\n    /** Update observable value for key */\n    public post<T>(name: string, value: T): void {\n        if (!this._observables[name]) {\n            this._subjects[name] = new BehaviorSubject<T>(null);\n            this._observables[name] = this._subjects[name].asObservable();\n        }\n        this._subjects[name].next(value);\n    }\n\n    public value<T = any>(name: string): T {\n        return !this._observables[name] ? null : this._subjects[name].getValue();\n    }\n\n    /** Page title */\n    public get title() {\n        return this._title.getTitle();\n    }\n    public set title(value: string) {\n        this._title.setTitle(`${value} | ${this._app_name}`);\n    }\n\n    constructor(private _title: Title) {\n        super();\n        const now = new Date();\n        const time = new Date(VERSION.time);\n        const built = isSameDay(now, time)\n            ? `Today at ${format(time, 'h:mma')}`\n            : format(time, 'do MMM yyyy, h:mma');\n        log('CORE', `${VERSION.semver}`, null, 'debug', true);\n        log('APP', `${VERSION.hash} | Built: ${built}`, null, 'debug', true);\n        this.init();\n    }\n\n    /**\n     * Initialise the settings\n     */\n    public async init() {\n        if (this.get('debug')) {\n            window.debug = true;\n        }\n        if (this.get('app')?.name) {\n            this._app_name = this.get('app').name;\n        }\n        log('Settings', 'Successfully loaded settings');\n        this._initialised.next(true);\n    }\n\n    /** Whether settings service has initialised */\n    public get app_name() {\n        return this._app_name;\n    }\n\n    /**\n     * Get a setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public get(key: string): any {\n        const keys = key.split('.');\n        if (keys[0] !== 'app') {\n            return getItemWithKeys(keys, DEFAULT_SETTINGS);\n        }\n        const override_settings = this._overrides.getValue();\n        for (const override of override_settings) {\n            const value = getItemWithKeys(keys.slice(1), override);\n            if (value != null) { return value; }\n        }\n        return getItemWithKeys(keys, DEFAULT_SETTINGS);\n    }\n}\n","import { Subscription, BehaviorSubject } from \"rxjs\";\n\nexport class BaseClass {\n    /** Store for named timers */\n    protected _timers: { [name: string]: number } = {};\n    /** Store for named intervals */\n    protected _intervals: { [name: string]: number } = {};\n    /** Store for named subscription unsub callbacks */\n    protected _subscriptions: { [name: string]: (Subscription | (() => void)) } = {};\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n    /** Whether the object has been initialised */\n    public get is_initialised(): boolean {\n        return this._initialised.getValue();\n    }\n\n    /**\n     * Creates a named timer\n     * @param name Name of the timer\n     * @param fn Callback function for the timer\n     * @param delay Callback delay\n     */\n    protected timeout(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearTimeout(name);\n            this._timers[name] = <any>setTimeout(() => {\n                fn();\n                this._timers[name] = null;\n            }, delay);\n        } else {\n            throw new Error(\n                name ? 'Cannot create named timeout without a name' : 'Cannot create a timeout without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named timer\n     * @param name Timer name\n     */\n    protected clearTimeout(name: string) {\n        if (this._timers[name]) {\n            clearTimeout(this._timers[name]);\n            this._timers[name] = null;\n        }\n    }\n\n    /**\n     * Creates a named interval\n     * @param name Name of the interval\n     * @param fn Callback function for the interval\n     * @param delay Callback delay\n     */\n    protected interval(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearInterval(name);\n            this._intervals[name] = <any>setInterval(() => fn(), delay);\n        } else {\n            throw new Error(\n                name ? 'Cannot create named interval without a name' : 'Cannot create a interval without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named interval\n     * @param name Timer name\n     */\n    protected clearInterval(name: string) {\n        if (this._intervals[name]) {\n            clearInterval(this._intervals[name]);\n            this._intervals[name] = null;\n        }\n    }\n\n    /**\n     * Store named subscription\n     * @param name Name of the subscription\n     * @param unsub Unsubscribe callback or Subscription object\n     */\n    protected subscription(name: string, unsub: Subscription | (() => void)) {\n        this.unsub(name);\n        this._subscriptions[name] = unsub\n    }\n\n    /**\n     * Call unsubscribe callback with the given name\n     * @param name\n     */\n    protected unsub(name: string) {\n        if (this._subscriptions && this._subscriptions[name]) {\n            if (this._subscriptions[name] instanceof Subscription) {\n                (this._subscriptions[name] as Subscription).unsubscribe()\n            } else if (this._subscriptions[name] instanceof Function) {\n                (this._subscriptions[name] as any)();\n            }\n            this._subscriptions[name] = null;\n        }\n    }\n}\n","\nimport { Component, OnDestroy } from '@angular/core';\nimport { BaseClass } from './base.class';\n\n@Component({\n    selector: 'a-very-basic-component-base-that-should-not-be-used',\n    template: ``,\n    styles: [``]\n})\nexport class BaseComponent extends BaseClass implements OnDestroy {\n\n    public ngOnDestroy(): void {\n        // Clear local timers\n        for (const key in this._timers) {\n            if (this._timers.hasOwnProperty(key)) {\n                this.clearTimeout(key);\n            }\n        }\n        // Clear local intervals\n        for (const key in this._intervals) {\n            if (this._intervals.hasOwnProperty(key)) {\n                this.clearInterval(key);\n            }\n        }\n        // Clear local subscriptions\n        for (const key in this._subscriptions) {\n            if (this._subscriptions.hasOwnProperty(key)) {\n                this.unsub(key);\n            }\n        }\n    }\n}\n\n","<div *ngIf=\"group\">\n    <a-dropdown [items]=\"options\" [(ngModel)]=\"active_duration\" placeholder=\"Select duration...\" (ngModelChange)=\"setValue($event)\"></a-dropdown>\n</div>\n","import { Component } from '@angular/core';\nimport { FormGroup, AbstractControl } from '@angular/forms';\nimport { ADynamicFormField } from '@acaprojects/ngx-dynamic-forms';\n\nimport { BaseComponent } from '../../base.component';\nimport { getNextFreeBookingSlot } from '../../../services/data/bookings/booking.utilities';\nimport { humaniseDuration } from '../../utilities/general.utilities';\nimport { FORM_FIELDS } from '../../globals/form-fields';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'custom-duration-field',\n    templateUrl: './duration-field.component.html',\n    styleUrls: ['./duration-field.component.scss']\n})\nexport class CustomDurationFieldComponent extends BaseComponent  {\n    /** Form Control holding date data */\n    public date_control: AbstractControl;\n    /** Form Control holding space data */\n    public space_control: AbstractControl;\n    /** Step size for available times */\n    public block_size = 15;\n    /** Step size for available times */\n    public active_duration: { id: number, name: string };\n    /** List of available durations */\n    public options: { id: number, name: string }[] = [];\n\n    constructor(protected field: ADynamicFormField, public group: FormGroup) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        if (this.group) {\n            if (this.group.controls.date) {\n                this.date_control = this.group.controls.date;\n                this.subscription('date', this.date_control.valueChanges.subscribe(() => this.calculateAvailableDurations()));\n            }\n            if (this.group.controls.room || this.group.controls.space) {\n                this.space_control = this.group.controls.room || this.group.controls.space;\n                this.subscription('space', this.space_control.valueChanges.subscribe(() => this.calculateAvailableDurations()));\n            }\n            this.subscription('control', this.field.control.valueChanges.subscribe(() => this.updateDisplay()));\n        }\n        this.calculateAvailableDurations();\n    }\n\n    /**\n     * Update the active value displayed on the dropdown\n     */\n    public updateDisplay() {\n        if (this.options && this.options.length > 0) {\n            if (!this.active_duration) {\n                if (this.field.getValue()) {\n                    this.active_duration = this.options.find(i => i.id === this.field.getValue());\n                }\n                if (!this.active_duration) {\n                    this.active_duration = this.options[0];\n                    this.setValue(this.options[0]);\n                }\n            } else if (!this.options.find(i => i.id === this.active_duration.id)) {\n                let diff = 9999;\n                let new_opt = null;\n                for (const option of this.options) {\n                    if (Math.abs(option.id - this.active_duration.id) < diff) {\n                        diff = Math.abs(option.id - this.active_duration.id);\n                        new_opt = option;\n                    }\n                }\n                if (new_opt) {\n                    this.active_duration = new_opt;\n                    this.setValue(new_opt);\n                }\n            }\n        }\n    }\n\n    /**\n     * Generate a list of times selectable by the user\n     */\n    public calculateAvailableDurations() {\n        this.options = [];\n        let date = dayjs().startOf('m');\n        const max_duration = this.field.metadata ? this.field.metadata.max_duration || 600 : 600;\n        const min_duration = this.field.metadata ? this.field.metadata.min_duration || 30 : 30;\n        let end = date.add(max_duration, 'm');\n        if (this.space_control) {\n            // Get times based off available times in space\n            if (this.date_control && this.date_control.value) {\n                date = dayjs(this.date_control.value).startOf('m');\n            }\n            const slot = getNextFreeBookingSlot(this.space_control.value.bookings, date.valueOf(), min_duration);\n            if (slot) {\n                // Check if slot is after the active date\n                date = slot.start > date.valueOf() ? dayjs(slot.start).startOf('m') : date;\n            }\n            end = slot ? dayjs(slot.end).startOf('m') : dayjs(date).add(max_duration, 'm');\n        }\n        end = end.endOf('m');\n        // Get available durations between the date and end times\n        date = date.add(min_duration, 'm').startOf('m');\n        let duration = min_duration;\n        for (; date.isBefore(end, 's'); date = date.add(this.block_size, 'm')) {\n            this.options.push({ id: duration, name: humaniseDuration(duration) });\n            duration += 15;\n            if (this.options.length > Math.floor((max_duration - min_duration) / this.block_size)) {\n                break;\n            }\n        }\n        this.updateDisplay();\n    }\n\n    /**\n     * Update the value of the form field\n     * @param value New value\n     */\n    public setValue(block: { id: number, name: string }) {\n        this.field.setValue(block.id);\n    }\n}\n\nFORM_FIELDS.duration = CustomDurationFieldComponent;\n","<div *ngIf=\"group\">\n    <a-dropdown [items]=\"times\" [(ngModel)]=\"active_time\" placeholder=\"Select time...\" (ngModelChange)=\"setValue($event)\"></a-dropdown>\n</div>\n","import { Component } from '@angular/core';\nimport { FormGroup, AbstractControl } from '@angular/forms';\n\nimport { BaseComponent } from '../../base.component';\nimport { ADynamicFormField } from '@acaprojects/ngx-dynamic-forms';\nimport { getFreeBookingSlots } from '../../../services/data/bookings/booking.utilities';\n\nimport * as dayjs from 'dayjs';\nimport { FORM_FIELDS } from '../../globals/form-fields';\n\ninterface TimeSlot {\n    id: string;\n    name: string;\n    value?: number;\n}\n\n@Component({\n    selector: 'custom-time-field',\n    templateUrl: './time-field.component.html',\n    styleUrls: ['./time-field.component.scss']\n})\nexport class CustomTimeFieldComponent extends BaseComponent {\n    /** Form Control holding date data */\n    public date_control: AbstractControl;\n    /** Form Control holding space data */\n    public space_control: AbstractControl;\n    /** Step size for available times */\n    public block_size = 5;\n    /** Step size for available times */\n    public min_size = this.block_size * 6;\n    /** Step size for available times */\n    public active_time: TimeSlot;\n    /** List of selectable times */\n    public times: TimeSlot[];\n\n    constructor(protected field: ADynamicFormField, public group: FormGroup) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        if (this.group) {\n            if (this.group.controls.date) {\n                this.date_control = this.group.controls.date;\n                this.subscription('date', this.date_control.valueChanges.subscribe(() => this.updateDisplay(true)));\n            }\n            if (this.group.controls.room || this.group.controls.space) {\n                this.space_control = this.group.controls.room || this.group.controls.space;\n                this.subscription('space', this.space_control.valueChanges.subscribe(() => this.updateDisplay()));\n            }\n            this.subscription('control', this.field.control.valueChanges.subscribe(() => this.updateDisplay()));\n        }\n        this.calculateAvailableTimes();\n        if (this.date_control) {\n            const value = this.date_control.value;\n            if (!this.times.find(block => block.value === value)) {\n                this.setValue(this.times[0]);\n            }\n        }\n    }\n\n    /**\n     * Update the active value displayed on the dropdown\n     * @param from_ref Whether new value was generated from a reference field\n     */\n    public updateDisplay(from_ref: boolean = false) {\n        if (this.times) {\n            for (const time of this.times) {\n                if (this.field.getValue() === time.id) {\n                    this.active_time = time;\n                    break;\n                }\n            }\n            if (!this.field.getValue()) {\n                // Initialise with date time set on date control\n                if (this.date_control) {\n                    let date = dayjs(this.date_control.value);\n                    date = date.minute(Math.ceil(date.minute() / 5) * 5);\n                    const date_str = date.format('HH:mm');\n                    for (const time of this.times) {\n                        if (date.valueOf() - time.value <= 0) {\n                            this.active_time = time;\n                            this.setValue(time, true);\n                            break;\n                        }\n                    }\n                }\n                // Set to default value\n                if (!this.field.getValue()) {\n                    this.active_time = this.times[0];\n                    this.setValue(this.times[0], from_ref);\n                }\n            }\n        }\n    }\n\n    /**\n     * Generate a list of times selectable by the user\n     */\n    public calculateAvailableTimes() {\n        this.times = [];\n        let date = dayjs().startOf('m');\n        const book_ahead = this.field.metadata ? this.field.metadata.book_ahead || 660 : 660; // 11 hours default\n        const min_duration = this.field.metadata ? this.field.metadata.min_duration || 30 : 30;\n        if (this.space_control) {\n            // Get times based off available times in space\n            const slots = getFreeBookingSlots(this.space_control.value.bookings, min_duration);\n            date = date.minute(Math.ceil(date.minute() / this.block_size) * this.block_size);\n            const end = dayjs(date)\n                .add(book_ahead, 'm')\n                .endOf('m');\n            for (; date.isBefore(end, 's'); date = date.add(this.block_size, 'm')) {\n                const value = date.valueOf();\n                if (slots.find(i => i.start <= value && value < i.end && dayjs(i.end).diff(date, 'm') >= min_duration)) {\n                    this.times.push({ id: date.format('HH:mm'), name: date.format('h:mm A'), value: date.valueOf() });\n                }\n            }\n        } else {\n            // Get times from now\n            if (date.minute() % this.block_size !== 0) {\n                this.times.push({ id: date.format('HH:mm'), name: date.format('h:mm A') });\n            }\n            date = date.minute(Math.ceil(date.minute() / this.block_size) * this.block_size);\n            const end = dayjs(date).add(book_ahead, 'm');\n            for (; date.isBefore(end); date = date.add(this.block_size, 'm')) {\n                this.times.push({ id: date.format('HH:mm'), name: date.format('h:mm A'), value: date.valueOf() });\n            }\n        }\n        this.updateDisplay();\n    }\n\n    /**\n     * Update the value of the form field\n     * @param value New value\n     * @param from_ref Whether new value was generated from a reference field\n     */\n    public setValue(slot: TimeSlot, from_ref: boolean = false) {\n        this.field.setValue(slot.id);\n        if (this.date_control && !from_ref) {\n            const time = dayjs(slot.value);\n            const date = dayjs(this.date_control.value)\n                .hour(time.hour())\n                .minute(time.minute())\n                .startOf('m');\n            this.date_control.setValue(date.valueOf());\n        }\n    }\n}\n\nFORM_FIELDS.time = CustomTimeFieldComponent;\n","<div class=\"user-search\" widget>\n    <div class=\"search\" a-tooltip [show]=\"show && search_str && filtered_list.length > 0\" (showChange)=\"show = $event\" [content]=\"list\">\n        <div class=\"searchbar\">\n            <input type=\"text\" [(ngModel)]=\"search_str\" (ngModelChange)=\"search($event)\" (blur)=\"reset()\" placeholder=\"Search for host...\" />\n            <div class=\"spinner\" *ngIf=\"searching\">\n                <a-spinner circle-ring color=\"#000\"></a-spinner>\n            </div>\n        </div>\n        <ng-template #list>\n            <div class=\"user-list\">\n                <div class=\"item\" *ngFor=\"let item of filtered_list\" (mouseup)=\"select(item)\" (touchend)=\"select(item)\" feedback>\n                    <div class=\"name\" [innerHTML]=\"item.match_name || item.name\"></div>\n                    <div class=\"email\" [innerHTML]=\"item.match_email || item.email\"></div>\n                </div>\n            </div>\n        </ng-template>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Subject, Observable, of } from 'rxjs';\nimport { switchMap, debounceTime, distinctUntilChanged, map, catchError } from 'rxjs/operators';\n\nimport { ADynamicFormField } from '@acaprojects/ngx-dynamic-forms';\n\nimport { BaseComponent } from '../../base.component';\nimport { ApplicationService } from '../../../services/app.service';\nimport { User } from '../../../services/data/users/user.class';\nimport { filterList, matchToHighlight } from '../../utilities/general.utilities';\nimport { FORM_FIELDS } from '../../globals/form-fields';\n\n@Component({\n    selector: 'custom-user-search-field',\n    templateUrl: './user-search-field.component.html',\n    styleUrls: ['./user-search-field.component.scss']\n})\nexport class CustomUserSearchFieldComponent extends BaseComponent implements OnInit {\n    /** List of users from an API search */\n    public filtered_list: User[] = [];\n    /** List of users from an API search */\n    public search_results$: Observable<User[]>;\n    /** Whether to show list tooltip */\n    public show: boolean;\n    /** Search input field value */\n    public search_str: string;\n    /** Whether a query is in progress */\n    public searching: boolean;\n    /** Subject holding the value of the search */\n    private search$ = new Subject<string>();\n\n    constructor(protected field: ADynamicFormField, protected group: FormGroup, private service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        if (this.group) {\n            if (this.field.references && this.field.references.length > 0) {\n                const control = this.group.controls[this.field.references[0]];\n                if (control) {\n                    this.subscription('reference', control.valueChanges.subscribe(() => this.updateDisplay()));\n                }\n            }\n            this.subscription('control', this.field.control.valueChanges.subscribe(() => this.updateDisplay()));\n        }\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(400),\n            distinctUntilChanged(),\n            switchMap(query => {\n                this.searching = true;\n                this.show = true;\n                return query.length >= 3 ? (this.service.Users.query({ q: query.slice(0, 3), cache: 60 * 1000 }) as Promise<User[]>) : Promise.resolve([]);\n            }),\n            catchError((err) => of([])),\n            map(list => {\n                this.searching = false;\n                return filterList(this.search_str, list, ['name', 'email']);\n            })\n        );\n        // Process API results\n        this.search_results$.subscribe(list => {\n            this.filtered_list = list;\n            this.filtered_list.forEach((i: any) => {\n                i.match_name = matchToHighlight(i.match_name);\n                i.match_email = matchToHighlight(i.match_email);\n                return i;\n            });\n        });\n    }\n\n    /**\n     * Search for a user that matches the filter string\n     * @param filter String to filter users on\n     */\n    public search(filter: string) {\n        this.search_str = filter;\n        this.search$.next(filter);\n    }\n\n    /**\n     * Update input display string\n     */\n    public updateDisplay() {\n        const value = this.field.control.value;\n        this.search_str = value ? value.name : '';\n    }\n\n    /**\n     * Reset the display value for the search input\n     */\n    public reset() {\n        this.timeout('reset', () => {\n            const value = this.field.control.value;\n            this.search_str = value ? value.name : '';\n            this.show = false;\n        });\n    }\n\n    /**\n     * Set the active user\n     * @param user New active user\n     */\n    public select(user: User) {\n        if (user) {\n            this.field.setValue(user);\n        }\n        this.timeout('hide', () => {\n        this.show = false;\n        }, 100);\n    }\n}\n\nFORM_FIELDS.host = CustomUserSearchFieldComponent;\n","import {\n    Directive,\n    Input,\n    SimpleChanges,\n    OnInit,\n    OnChanges,\n    OnDestroy,\n    ElementRef,\n    Renderer2,\n    EventEmitter,\n    Output\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { onlineState, authority, getModule } from '@placeos/ts-client';\n\n@Directive({\n    selector: 'i[bind], [binding], co-bind'\n})\nexport class BindingDirective<T = any> implements OnInit, OnChanges, OnDestroy {\n    /** ID of the system to bind */\n    @Input() public sys: string;\n    /** Class name of the module to bind */\n    @Input() public mod: string;\n    /** Index of the system to bind */\n    @Input() public index = 1;\n    /** Status variable to bind to */\n    @Input() public bind: string;\n    /** Method to execute */\n    @Input() public exec: string;\n    /** Event to listen for on the parent */\n    @Input('onEvent') public on_event: string;\n    /** ID of the system to bind to */\n    @Input() public params: any[] = [];\n    /** Current value of the binding */\n    @Input() public model: T;\n    /** Emitter for changes to the value of the binding */\n    @Output() public modelChange = new EventEmitter<T>();\n\n    /** Listener for event on host element */\n    private event_listener: () => void;\n    /** Listener for changes to the binding value */\n    private listener: Subscription;\n    /** Listener for initialisation state of composer */\n    private init_listener: Subscription;\n    /** Callback to unbind to the status variable */\n    private unbind: () => void;\n\n    constructor(\n        private _element: ElementRef<HTMLElement>,\n        private _renderer: Renderer2\n    ) {}\n\n    public ngOnInit(): void {\n        this.init_listener = onlineState().subscribe(init => {\n            if (init) {\n                this.bindVariable();\n                if (this.init_listener) {\n                    this.init_listener.unsubscribe();\n                    this.init_listener = null;\n                }\n            }\n        });\n    }\n\n    public ngOnDestroy(): void {\n        if (this.listener) {\n            this.listener.unsubscribe();\n            this.listener = null;\n        }\n        if (this.unbind) {\n            this.unbind();\n            this.unbind = null;\n        }\n        if (this.event_listener) {\n            this.event_listener();\n            this.event_listener = null;\n        }\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.sys || changes.mod || changes.bind) {\n            this.ngOnDestroy();\n            this.bindVariable();\n        }\n        if (changes.on_event && this.on_event) {\n            if (this.event_listener) {\n                this.event_listener();\n                this.event_listener = null;\n            }\n            this.event_listener = this._renderer.listen(\n                this._element.nativeElement,\n                this.on_event,\n                () => this.execute()\n            );\n        }\n    }\n\n    /** Bind to set status variable */\n    private bindVariable() {\n        if (authority() && this.bind && this.sys && this.mod) {\n            const module = getModule(this.sys, this.mod, this.index);\n            const binding = module.binding(this.bind);\n            this.unbind = binding.bind();\n            this.listener = binding.listen().subscribe(value => setTimeout(() => {\n                this.model = value;\n                this.modelChange.emit(this.model);\n            }, 10));\n        }\n    }\n\n    /** Excute the set method on the module */\n    private execute() {\n        if (authority() && this.exec && this.sys && this.mod) {\n            const module = getModule(this.sys, this.mod, this.index);\n            module.execute(this.exec, this.params).then(result => {\n                // Emit exec result if not bound to status variable\n                if (!this.bind) {\n                    this.model = result;\n                    this.modelChange.emit(this.model);\n                }\n            });\n        }\n    }\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: T) {\n        this.model = value;\n        this.modelChange.emit(this.model);\n        if (this.exec) {\n            this.execute();\n        }\n    }\n}\n","\nimport * as dayjs from 'dayjs';\n\n/** Version number of the application */\nexport const version = 'local-dev';\n/** Version number of the base application */\nexport const core_version = '1.0.0';\n/** Build time of the application */\nexport const build = dayjs();\n","\nimport { Type } from '@angular/core';\n\n/** List of form field contents mapped to corresponding keys */\nexport const FORM_FIELDS: { [id: string]: Type<any> } = {};","\nimport { IOverlayConfig } from \"@acaprojects/ngx-overlays\";\n\n/** List of Overlays to register on application initialisation */\nexport const OVERLAY_REGISTER: { id: string; config: IOverlayConfig }[] = [];\n","\nimport './systems.mock';\n","import { MockHttpRequestHandlerOptions, registerMockEndpoint, registerSystem } from '@placeos/ts-client';\n\nimport { HashMap } from '../utilities/types.utilities';\nimport { generateMockSpace } from '../../services/data/spaces/space.utilities';\nimport { setMockBookingStartDatetime } from '../../services/data/bookings/booking.utilities';\nimport { generateMockUser } from '../../services/data/users/user.utilities';\n\nimport * as dayjs from 'dayjs';\n\ninterface IMockEngineSystem {\n    id?: string;\n    name?: string;\n\n    [module: string]: HashMap[] | string;\n}\n\nexport interface IBookingPanelBindings {\n    /** Whether user input is enabled */\n    touch_enabled: boolean;\n    /** Number of seconds before a meeting can be started, being truthy enables start/stop and auto-cancellations */\n    timeout?: number;\n    /** Number of seconds after the start of a meeting when it is auto-cancelled, overrides `timeout` value */\n    cancel_timeout?: number;\n    /** Whether to display hearing assistance UI elements */\n    has_accessability?: boolean;\n    /** URL to embed into the control modal when opened */\n    control_url?: string;\n    /** Whether to display catering UI elements */\n    has_catering?: boolean;\n    /** Whether to hide booking details(title and host) */\n    hide_details?: boolean;\n    /** Whether to hide the title of the displayed bookings */\n    hide_title?: boolean;\n    /** Whether to hide user(host) details */\n    hide_user?: boolean;\n    /** Whether to hide timeline availability */\n    hide_availability?: boolean;\n    /** Whether to disable booking from the UI */\n    booking_disabled?: boolean;\n    /** Whether booking future meetings are allowed */\n    no_timeline_bookings?: boolean;\n    /** Time before the booking end with which the current booking is endable in ms from UTC epoch */\n    is_endable?: number;\n    /** Whether to automatically ask user starting the current meeting */\n    ask_start?: boolean;\n    /** Whether to automatically ask user about ending the active meeting */\n    ask_end?: boolean;\n    /** Default meeting title if the displayed meeting doesn't have one */\n    default_title?: string;\n    /** Hide all meeting related details */\n    hide_all?: boolean;\n    /** Title of the active space */\n    title?: string;\n    /** Description of the active space */\n    description?: string;\n    /** URL of an icon image to display on the UI */\n    icon?: string;\n    /** Whether the space status is displayed on the right */\n    flip_status?: boolean;\n    /** Whether bookings can be automatically cancelled once they expire */\n    can_cancel?: boolean;\n    /** Minimum bookable duration in minutes */\n    min_duration?: number;\n    /** Maximum bookable duration in minutes */\n    max_duration?: number;\n    /** Start time of the business day with format `HH:mm` */\n    business_start?: string;\n    /** End time of the business day with format `HH:mm` */\n    business_end?: string;\n\n}\n\nconst LETTERS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('');\nconst NUMBERS = '0123456789'.split('');\n\nlet index = 0;\n\nconst SPACE_LIST: any[] = [];\n\nconst IMAGES: string[] = ['large_down', 'large_up', 'small_down', 'small_up'];\n\n/**\n * Create mock engine booking module with appropriate bookings and space data\n */\nfunction createSystem(): IMockEngineSystem {\n    const id = `sys-${LETTERS[Math.floor(index / NUMBERS.length)]}${NUMBERS[(index++) % NUMBERS.length]}`;\n    setMockBookingStartDatetime(dayjs().minute(-50).valueOf());\n    const space = generateMockSpace({ id });\n    SPACE_LIST.push(space);\n    const bindings: IBookingPanelBindings = {\n        touch_enabled: true,\n        timeout: 300,\n        cancel_timeout: 600,\n        has_catering: true,\n        control_url: 'https://aca.im/demo/aca/control/',\n        icon: `/assets/img/${IMAGES[Math.floor(Math.random() * IMAGES.length)]}.png`\n    };\n    const system = {\n        id, name: space.name,\n        Bookings: []\n    };\n    system.Bookings.push({\n        ...bindings,\n        room_name: space.name,\n        today: space.bookings,\n        reload: dayjs().add(1, 'h').unix(),\n        $start_meeting: (time: number) => {\n            system.Bookings[0].last_meeting_started = time;\n        },\n        $cancel_meeting: (time: number, reason: string) => {\n            const list = system.Bookings[0].today;\n            system.Bookings[0].today = list.filter(i => i.date !== time);\n        },\n        $waiter_call: () => {\n            console.log(`[MOCK][${id}] Waiter called...`);\n        }\n    });\n    return system;\n}\n\n\nexport const MOCK_SYSTEMS = Array(10).fill(0).map(i => createSystem());\n\nfor (const system of MOCK_SYSTEMS) {\n    registerSystem(system.id, system as any);\n}\n\n// Add mock data for API endpoints\nconst USER_LIST = Array(1000).fill(0).map(i => generateMockUser());\n\nconst handlers: MockHttpRequestHandlerOptions[] = [\n    {\n        path: '/api/engine/v2/systems',\n        metadata: null,\n        method: 'GET',\n        callback: _ => ({ total: 10, results: MOCK_SYSTEMS })\n    },\n    {\n        path: '/api/staff/rooms',\n        metadata: null,\n        method: 'GET',\n        callback: _ => SPACE_LIST\n    },\n    {\n        path: '/api/staff/users',\n        metadata: null,\n        method: 'GET',\n        callback: _ => USER_LIST\n    },\n    {\n        path: '/api/engine/v2/users/current',\n        metadata: null,\n        method: 'GET',\n        callback: _ => USER_LIST[0]\n    },\n    {\n        path: '/api/engine/v2/zones',\n        metadata: null,\n        method: 'GET',\n        callback: _ => ({ total: 1, results: [{ id: 'zone_org-1' }] })\n    }\n];\n\nfor (const handler of handlers) {\n    registerMockEndpoint(handler);\n}\n","\nimport { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { ADropdownsModule } from '@acaprojects/ngx-dropdown';\nimport { ASpinnerModule } from '@acaprojects/ngx-spinners';\nimport { AButtonsModule } from '@acaprojects/ngx-buttons';\nimport { APipesModule } from '@acaprojects/ngx-pipes';\nimport { AOverlayModule } from '@acaprojects/ngx-overlays';\nimport { ADynamicFormsModule } from '@acaprojects/ngx-dynamic-forms';\nimport { ACustomEventsModule } from '@acaprojects/ngx-custom-events';\n\nimport { BaseComponent } from './base.component';\nimport { CustomUserSearchFieldComponent } from './components/user-search-field/user-search-field.component';\nimport { CustomTimeFieldComponent } from './components/time-field/time-field.component';\nimport { CustomDurationFieldComponent } from './components/duration-field/duration-field.component';\nimport { BindingDirective } from './directives/binding/binding.directive';\n\nconst COMPONENTS: Type<any>[] = [\n    BaseComponent,\n    BindingDirective\n];\n\nconst ENTRY_COMPONENT: Type<any>[] = [\n    CustomUserSearchFieldComponent,\n    CustomTimeFieldComponent,\n    CustomDurationFieldComponent\n]\n\n@NgModule({\n    declarations: [\n        ...COMPONENTS,\n        ...ENTRY_COMPONENT,\n    ],\n    imports: [\n        CommonModule,\n        ADropdownsModule,\n        ASpinnerModule,\n        AButtonsModule,\n        AOverlayModule,\n        TranslateModule.forChild(),\n        FormsModule,\n        ReactiveFormsModule,\n        ACustomEventsModule,\n        ADynamicFormsModule\n    ],\n    exports: [\n        ADropdownsModule,\n        ASpinnerModule,\n        AButtonsModule,\n        APipesModule,\n        AOverlayModule,\n        ACustomEventsModule,\n        ADynamicFormsModule,\n        ...COMPONENTS,\n        ...ENTRY_COMPONENT\n    ],\n    entryComponents: [\n        ...ENTRY_COMPONENT\n    ]\n})\nexport class SharedContentModule {}\n","import { HashMap } from \"./types.utilities\";\n\n/**\n * Convert map into a query string\n * @param map Key value pairs to convert\n */\nexport function toQueryString(map: HashMap) {\n    let str = '';\n    if (map) {\n        for (const key in map) {\n            if (map.hasOwnProperty(key) && map[key] !== undefined && map[key] !== null) {\n                str += `${(str ? '&' : '')}${key}=${map[key]}`;\n            }\n        }\n    }\n    return str;\n}\n","\nimport { humaniseDuration } from './general.utilities';\n\nimport { User } from '../../services/data/users/user.class';\nimport { Space } from '../../services/data/spaces/space.class';\n\nimport * as dayjs from 'dayjs';\n\n// attendees: FormFormatters.attendees(user),\n// date: FormFormatters.date,\n// room: FormFormatters.space,\n// recurrence: FormFormatters.recurrence\n\n/**\n * Get function to create formatted string for a list of users with a host\n * @param host Host user\n */\nexport function formatAttendeesWithHost(host: User): (_: User[]) => string {\n    return (l) => formatAttendees(l, host);\n}\n\n/**\n * Create formatted string from a list of users\n * @param list List of users\n * @param host Owner of the list of users\n */\nexport function formatAttendees(list: User[], host?: User) {\n    let attendee_str: string = '';\n    if (list && list.length > 0) {\n        const users = [...list];\n        if (host) {\n            const result = users.find(a => a.email === host.email);\n            if (result) {\n                users.splice(users.indexOf(result), 1);\n            }\n        }\n        const length = users.length + (host ? 1 : 0);\n        attendee_str = `${length} Attendee${length === 1 ? '' : 's'}; ${host ? host.name : ''}`;\n        for (const item of users) {\n            if (attendee_str) {\n                attendee_str += ', ';\n            }\n            attendee_str += item.name;\n        }\n        attendee_str = attendee_str.replace('; ,', ';');\n    }\n    return attendee_str;\n}\n\n/**\n * Create date formatted string for given date\n * @param date Date to format\n */\nexport function formatDate(date: number) {\n    return dayjs(date).format('DD MMMM YYYY');\n}\n\n/**\n * Create time formatted string for given date\n * @param date Date to format\n */\nexport function formatTime(date: number) {\n    return dayjs(date).format('h:mm A');\n}\n\n/**\n * Create formatted string for a period of given duration\n * @param duration Period duration in minutes\n */\nexport function formatPeriodWithDuration(duration: number) {\n    return (t) => formatPeriod(t, duration);\n}\n\n/**\n * Create formatted string for a period of given duration\n * @param timestamp Start hours and minutes of the period in the format `HH:mm`\n * @param duration Period duration in minutes\n */\nexport function formatPeriod(timestamp: string, duration: number = 60) {\n    const parts = timestamp.split(':');\n    const date = dayjs().hour(+parts[0]).minute(+parts[1]);\n    return `${date.format('h:mm A')} - ${date.add(duration, 'm').format('h:mm A')} (${humaniseDuration(duration)})`;\n}\n\n/**\n * Create formatted human readable string for a given duration\n * @param duration Duration in minutes\n */\nexport function formatDuration(duration: number) {\n    return humaniseDuration(duration);\n}\n\n/** Human readable names of applicable recurrence periods */\nexport const RECURRENCE_PERIODS: string[] = ['None', 'Daily', 'Weekly', 'Monthly', 'Yearly'];\n\n/**\n * Create human readable string for recurrence metadata\n * @param value\n */\nexport function formatRecurrence(value: { period: string | number, end: number }) {\n    if (!value || !value.period || value.period as any >= RECURRENCE_PERIODS.length) {\n        return 'No recurrence';\n    }\n    const period = typeof value.period === 'string' ? value.period : RECURRENCE_PERIODS[value.period];\n    const end = value.end ? `until ${dayjs(value.end).format('DD MMM YYYY')}` : 'forever';\n    return `${period} ${end}`;\n}\n\n/**\n * Create human readable string for a room or list of rooms\n * @param list List of spaces/rooms\n */\nexport function formatSpaces(list: Space | Space[]) {\n    if (!list || (list instanceof Array && list.length <= 0)) {\n        return 'No selected space';\n    }\n    if (list instanceof Array) {\n        return list.length === 1 ? list[0].name : `${list.length} Space${list.length !== 1 ? 's' : ''}`;\n    } else {\n        const capacity = list.capacity ? '(' + list.capacity + ' ' + (list.capacity === 1 ? 'person' : 'people') + ')' : '';\n        return `${list.name} ${capacity}`;\n    }\n}\n","import { HashMap } from './types.utilities';\n\nimport * as dayjs from 'dayjs';\n// As long as we don't pick the base '/en', it doesn't matter which english locale we\n// import. They all use the same relativeTime format.\nimport * as en from 'dayjs/locale/en-au';\nimport * as fr from 'dayjs/locale/fr-ca';\n\n/** Available console output streams. */\nexport type ConsoleStream = 'debug' | 'warn' | 'log' | 'error' | 'info';\n\n/**\n * Log data to the browser console\n * @param type Type of message\n * @param msg Message body\n * @param args array of argments to log to the console\n * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\n * @param force Whether to force message to be emitted when debug is disabled\n */\nexport function log(\n    type: string,\n    msg: string,\n    args?: any,\n    stream: ConsoleStream = 'debug',\n    force: boolean = false,\n    app_name: string = 'STAFF'\n) {\n    if (window.debug || force) {\n        const colors: string[] = ['color: #E91E63', 'color: #3F51B5', 'color: default'];\n        if (args) {\n            console[stream](`%c[${app_name}]%c[${type}] %c${msg}`, ...colors, args);\n        } else {\n            console[stream](`%c[${app_name}]%c[${type}] %c${msg}`, ...colors);\n        }\n    }\n}\n\nconst seed = xmur3('PlaceOS');\nconst rand = sfc32(0x9e3779b9, 0x243f6a88, 0xb7e15162, seed());\n\nexport function predictableRandomInt(ceil: number = 100, floor: number = 0) {\n    return Math.floor(rand() * (ceil - floor)) + floor;\n}\n\nexport function getItemWithKeys(keys: string[], map: HashMap) {\n    const key = keys.shift();\n    if (map[key]) {\n        return keys.length > 0 ? getItemWithKeys(keys, map[key]) : map[key];\n    }\n    return null;\n}\n\n/**\n * Checks whether the platform is a mobile device.\n */\nexport function isMobileDevice(): boolean {\n    const r = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i;\n    return !!navigator.userAgent.match(r);\n}\n\n/**\n * Checks whether the browser is Mobile Safari.\n */\nexport function isMobileSafari(): boolean {\n    const agent = navigator.userAgent;\n    return !!(agent.match(/iPhone|iPad|iPod/) && agent.match(/AppleWebKit/) && !agent.match('CriOS'));\n}\n\n/**\n * Checks whether the browser is Android Chrome.\n */\nexport function isAndroidChrome(): boolean {\n    const agent = navigator.userAgent;\n    return !!(agent.match(/Android/) && agent.match(/Chrome/));\n}\n\n/**\n * Generate string representation of a number with zeros padding the length\n * @param value Number to pad with zeros\n * @param length Length of the resulting string\n */\nexport function padZero(value: number, length: number): string {\n    let str = value.toString();\n    while (str.length < length) {\n        str = '0' + str;\n    }\n    return str;\n}\n\n/**\n * Remove duplicates from the given array\n * @param array List of items to remove duplicates from\n * @param key Key on array objects to compare for uniqueness\n */\nexport function unique(array: any[], key: string = '') {\n    return array.filter((el, pos, arr) =>\n        arr.indexOf(key ? arr.find(i => i[key] === el[key]) : arr.find(i => i === el)) === pos\n    );\n}\n\n/**\n * Convert duration to human readable string\n * @param duration Duration in minutes\n * @param short Whether to use short form of duration words e.g. hours as h\n * @param locale A BCP-47 code for which human locale to use\n */\nexport function humaniseDuration(duration: number, short: boolean = false, locale: string = 'en') {\n\n    const relativeTimeFormats = (locale === 'en' ? en : fr).relativeTime;\n    /*\n     Drop prefix and suffix - that logic is handled separately, a couple lines down. NB: The\n     text captured in the middle of this RegExp may start with a space.\n    */\n    const detectWord = /%d(.*)s/;\n    const minuteLocalised = relativeTimeFormats.mm.replace(detectWord, '$1');\n    const hourLocalised = relativeTimeFormats.hh.replace(detectWord, '$1');\n\n    if (!duration || duration < 0) { return ''; }\n    const h = Math.floor(duration / 60);\n    let d = `${h >= 1 ? (h + (short ? 'h' : (hourLocalised + (h === 1 ? '' : 's')))) : ''}`;\n    if (duration % 60 !== 0) {\n        if (d) { d += short ? ' ' : ', '; }\n        const m = duration % 60;\n        d += `${m >= 1 ? (m + (short ? 'm' : (minuteLocalised + (m === 1 ? '' : 's')))) : ''}`;\n    }\n    return d;\n}\n\n/**\n * Get a filtered list of items\n * @param filter Value to filter on\n * @param items List of results to filter\n * @param fields Fields to check for matches on each item\n */\nexport function filterList<T = HashMap>(filter: string, items?: T[], fields: string[] = ['id']): T[] {\n    let results: any[];\n    // Tokenise filter string\n    const filters = (filter || '').toLowerCase().split(' ');\n    const list = {};\n    for (const f of filters) {\n        if (f) {\n            if (!list[f]) { list[f] = 0; }\n            list[f]++;\n        }\n    }\n    // Group similar tokens\n    const parts = [];\n    for (const f in list) {\n        if (list.hasOwnProperty(f)) {\n            parts.push({ word: f, count: list[f], regex: new RegExp(f, 'gi') });\n        }\n    }\n    parts.sort((a, b) => b.word.length - a.word.length || a.word.localeCompare(b.word));\n    const item_list = JSON.parse(JSON.stringify(items || []));\n    if (filter) {\n        results = item_list.filter(\n            (item) => {\n                let match_count = 0;\n                item.match_index = 65535;\n                item.match = '';\n                const field_list = {};\n                // Initialise field match variables\n                for (const f of fields) {\n                    field_list[f] = {\n                        value: (item[f] || '').toLowerCase(),\n                        index: 65536,\n                        matched: 0\n                    };\n                }\n                // Search for matches with the tokenised filter string\n                for (const i of parts) {\n                    if (i.word) {\n                        // Check fields for matches\n                        for (const f of fields) {\n                            const field = field_list[f];\n                            const index = field.value.indexOf(i.word);\n                            field.index = index < field.index ? index : field.index;\n                            field.matches = (field.value.match(i.regex) || []).length;\n                            field.value = field.value.replace(i.regex, ' ');\n                        }\n                        // Update token match count\n                        for (const f of fields) {\n                            const field = field_list[f];\n                            if (field.matches >= i.count) {\n                                match_count++;\n                                // Update field matches\n                                let changed = 0;\n                                const tokens = (item[`match_${f}`] || item[f] || '').split(' ');\n                                for (const k of tokens) {\n                                    if (changed >= i.count) {\n                                        break;\n                                    }\n                                    if (k.toLowerCase().indexOf(i.word) >= 0 && k.indexOf('`') < 0) {\n                                        tokens[tokens.indexOf(k)] = k.replace(i.regex, '`$&`');\n                                        changed++;\n                                    }\n                                }\n                                item[`match_${f}`] = tokens.join(' ');\n                                break;\n                            }\n                        }\n                    }\n                }\n                // Get field with the most relevent match\n                for (const f of fields) {\n                    const field = field_list[f];\n                    if (field.index < item.match_index && field.index >= 0) {\n                        item.match_index = field.index;\n                        item.match = f;\n                    }\n                }\n                return item.match_index >= 0 && item.match && (match_count >= parts.length);\n            });\n    } else {\n        results = item_list;\n    }\n    // Sort by order of relevence then name\n    results.sort((a, b) => {\n        const diff = a.match_index - b.match_index;\n        return diff === 0 ? a.name.localeCompare(b.name) : diff;\n    });\n    return results;\n}\n\n/**\n * Convert a match string from `filterList` to renderable HTML\n * @param str Match string to change\n */\nexport function matchToHighlight(str: string): string {\n    if (str) {\n        str = str.replace(/\\`[a-zA-Z0-9\\@\\.\\_]*\\`/g, '<span class=\"highlight\">$&</span>');\n        str = str.replace(/\\`/g, '');\n    }\n    return str;\n}\n\n/**\n * Convert time string to ms from UTC epoch for today\n * @param time Time string in the format `HH:mm`\n */\nexport function timeToDate(time: string): number {\n    const parts = (time || '').split(':');\n    const date = dayjs().hour(+parts[0]).minute(+parts[1]).startOf('m');\n    return date.valueOf();\n}\n\n/* istanbul ignore next */\n/**\n * Flatten nested array\n * @param an_array Array to flatten\n */\nexport function flatten<T = any>(an_array: (T[] | T)[]): T[] {\n    const stack: any[] = [...an_array];\n    const res = [];\n    while (stack.length) {\n        // pop value from stack\n        const next: T[] | T = stack.pop();\n        if (next instanceof Array) {\n            // push back array items, won't modify the original input\n            stack.push(...next);\n        } else {\n            res.push(next);\n        }\n    }\n    // reverse to restore input order\n    return res.reverse();\n}\n\n// https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript\nfunction xmur3(str) {\n    for (var i = 0, h = 1779033703 ^ str.length; i < str.length; i++)\n        (h = Math.imul(h ^ str.charCodeAt(i), 3432918353)), (h = (h << 13) | (h >>> 19));\n    return function () {\n        h = Math.imul(h ^ (h >>> 16), 2246822507);\n        h = Math.imul(h ^ (h >>> 13), 3266489909);\n        return (h ^= h >>> 16) >>> 0;\n    };\n}\n\nfunction sfc32(a, b, c, d) {\n    return function () {\n        a >>>= 0;\n        b >>>= 0;\n        c >>>= 0;\n        d >>>= 0;\n        var t = (a + b) | 0;\n        a = b ^ (b >>> 9);\n        b = (c + (c << 3)) | 0;\n        c = (c << 21) | (c >>> 11);\n        d = (d + 1) | 0;\n        t = (t + d) | 0;\n        c = (c + t) | 0;\n        return (t >>> 0) / 4294967296;\n    };\n}\n","import { HttpClient } from '@angular/common/http';\nimport { FactoryProvider } from '@angular/core';\n\nimport { TranslateLoader, TranslateModuleConfig } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\n\nimport { Observable, of } from 'rxjs';\n\n\n// Kudos to the guide in https://github.com/ngx-translate/http-loader/blob/0409e32f75/README.md for syntax.\nconst standardLoader: FactoryProvider = {\n    provide: TranslateLoader,\n    useFactory: client => new TranslateHttpLoader(client, \"assets/i18n/\"),\n    deps: [HttpClient]\n};\n\n/**\n * A more configurable alternative to {@link standardLoader}.\n *\n * In production builds this is not the best choice. In tests, though,\n * being able to supply alternative translation objects is quite helpful.\n *\n * @param translations a map from BCP 47 language codes to arbitrary objects\n */\nfunction bundledProvider(translations: Map<string, any>): FactoryProvider {\n    const bundledLoader: TranslateLoader = {\n        getTranslation(lang: string): Observable<any> {\n            return of(translations.get(lang));\n        }\n    };\n    return {\n        provide: TranslateLoader,\n        useFactory: () => bundledLoader,\n        deps: []\n    };\n}\n\n/**\n * For use with 'TranslateModule.forRoot()' calls.\n *\n * This returns a config whose loader conforms to the 'FactoryProvider' interface.\n */\nexport const translateModuleConfig: TranslateModuleConfig = {\n    loader: standardLoader\n};\n\n/**\n * This config is (currently) only approved for test purposes.\n *\n * Production builds should prefer {@link translateModuleConfig} instead.\n *\n * @param translations map of BCP 47 language-codes to translation JSON\n */\nexport function bundledTranslateConfig(translations: Map<string, any>): TranslateModuleConfig {\n    return {\n        loader: bundledProvider(translations)\n    };\n}\n","import { AbstractControl } from '@angular/forms';\n\nimport { User } from '../../services/data/users/user.class';\n\nimport * as dayjs from 'dayjs';\n\nconst HAS_ERROR = true;\n\n/**\n * Check that control value is a date that is the same or after from date\n * @param control Angular form control\n * @param is_from Comparison date(ms from UTC epoch). Defaults to the current time\n */\nexport function validateDate(control: AbstractControl, is_from: number = dayjs().valueOf()) {\n    const from = dayjs(is_from);\n    const date = dayjs(control.value || undefined);\n    return date.isBefore(from, 'd') ? { date: HAS_ERROR, message: 'Booking needs to be made in the future' } : null;\n}\n\n/**\n * Build start time validation function\n * @param date Date of the time to check\n * @param is_from Comparison date(ms from UTC epoch). Defaults to the current time\n */\nexport function buildValidateStartTime(date: number, is_from: number = dayjs().valueOf()) {\n    return (c) => validateStartTime(c, date, is_from);\n}\n\n/**\n * Check that control value time is after the comparison date time\n * @param control Angular form control\n * @param date Date of the time to check\n * @param is_from Comparison date(ms from UTC epoch). Defaults to the current time\n */\nexport function validateStartTime(control: AbstractControl, date: number, is_from: number = dayjs().valueOf()) {\n    const now = dayjs(is_from);\n    const parts = control.value.split(':');\n    const date_obj = dayjs(date).hour(+parts[0]).minute(+parts[1]);\n    return date_obj.isBefore(now, 'm') ? { start: HAS_ERROR, message: 'Booking time needs to be made in the future' } : null;\n}\n\nexport function buildValidateDuration(min: number = 30, max: number = 240) {\n    return (c) => validateDuration(c, min, max);\n}\n\nexport function validateDuration(control: AbstractControl, min: number = 30, max: number = 240) {\n    if (control.value < (min || 30)) {\n        return { duration: HAS_ERROR, message: `Minimum booking duration is ${min} minute${min === 1 ? 's' : ''}` };\n    } else if (control.value > (max || 480)) {\n        return { length: HAS_ERROR, message: `Maximum booking duration is ${max} minute${max === 1 ? 's' : ''}` };\n    }\n    return null;\n}\n\nexport function buildValidateAttendees(host: User, min: number = 0) {\n    return (c) => validateAttendees(c, host, min);\n}\n\nexport function validateAttendees(control: AbstractControl, host: User, min: number = 0) {\n    if (!control || !(control.value instanceof Array)) {\n        return min > 0\n            ? { invalid: true, message: `Minimum of ${min} attendee${min === 1 ? ' is' : 's are'} required other than you` }\n            : null;\n    }\n    const list: User[] = control.value;\n    if (host) {\n        const result = list.find(a => a.email === host.email);\n        if (result) { list.splice(list.indexOf(result), 1); }\n    }\n    return list.length >= min ? null : {\n        count: true,\n        message: `Minimum of ${min} attendee${min === 1 ? ' is' : 's are'} required other than you`\n    };\n}\n","<div class=\"bootstrap\">\n    <div class=\"options\">\n        <div class=\"header fs-big\">\n            <h1>Booking Panel Setup</h1>\n            <div\n                class=\"toggle\"\n                feedback\n                center=\"true\"\n                *ngIf=\"system_list && system_list.length > 0\"\n                (tapped)=\"manual_input = !manual_input\"\n            >\n                <i class=\"material-icons\">{{ manual_input ? 'list' : 'code' }}</i>\n            </div>\n        </div>\n        <div class=\"body\" *ngIf=\"!loading\">\n            <ng-container *ngIf=\"manual_input; else list_desc\">\n                <p class=\"description\">\n                    Input the Engine System ID to bootstrap\n                </p>\n                <div class=\"content\">\n                    <div class=\"input\" [class.focus]=\"input_focus || system_id\">\n                        <input [(ngModel)]=\"system_id\" (focus)=\"input_focus = true\" (blur)=\"input_focus = false\" />\n                        <div class=\"placeholder\" [class.focus]=\"input_focus\">Engine System ID</div>\n                    </div>\n                </div>\n            </ng-container>\n            <ng-template #list_desc>\n                <p class=\"description\">\n                    Select the relevent system from the available dropdown\n                </p>\n                <div class=\"content\">\n                    <a-dropdown\n                        klass=\"fill\"\n                        [items]=\"system_list\"\n                        [(ngModel)]=\"selected_system\"\n                        [options]=\"{ can_filter: true }\"\n                        placeholder=\"Select system\"\n                    ></a-dropdown>\n                </div>\n            </ng-template>\n        </div>\n        <div class=\"body\" *ngIf=\"loading\">\n            <div class=\"info-block\">\n                <div class=\"icon\">\n                    <a-spinner circle-ring color=\"#000\"></a-spinner>\n                </div>\n                <div class=\"text\">\n                    Loading system data...\n                </div>\n            </div>\n        </div>\n        <div class=\"footer\" *ngIf=\"!loading\">\n            <button\n                widget\n                [disabled]=\"(manual_input && !system_id) || (!manual_input && (!selected_system || !selected_system.id))\"\n                (tapped)=\"bootstrap()\"\n            >\n                Submit\n            </button>\n        </div>\n    </div>\n</div>\n","\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { PlaceSystem } from '@placeos/ts-client'\nimport { ApplicationService } from '../../services/app.service';\nimport { BaseComponent } from '../../shared/base.component';\nimport { environment } from '../../../environments/environment';\nimport { catchError, distinctUntilChanged, filter, mergeMap } from 'rxjs/operators';\nimport { from, of } from 'rxjs';\nimport { Space } from '../../services/data/spaces/space.class';\n\n@Component({\n    selector: 'app-bootstrap',\n    templateUrl: './bootstrap.component.html',\n    styleUrls: ['./bootstrap.component.scss']\n})\nexport class BootstrapComponent extends BaseComponent implements OnInit {\n    /** Whether to show manual input for bootstrap ID */\n    public manual_input: boolean;\n    /** List of available systems */\n    public system_list: PlaceSystem[] = [];\n    /** Whether application data is loading */\n    public loading: boolean;\n    /** ID of the system to bootstrap */\n    public system_id: string;\n    /** Selected system to bootstrap */\n    public selected_system: PlaceSystem = null;\n    /** Whether input field is focused */\n    public input_focus: boolean;\n    private email: string;\n\n    constructor(private service: ApplicationService, private route: ActivatedRoute) {\n        super();\n        // ensure app is trusted in dev mode so we can preserve login.\n        if (!environment.production) {\n            \n            localStorage.setItem('trusted', 'true');\n        }\n    }\n\n    public ngOnInit(): void {\n        this.loading = true;\n        this.bootstrap();\n        // Subscribe to the current user so when the user is no longer \"local\", but instead\n        // identifies the room by email and then redirects to the panel with the space ID.\n        this.subscription('User.currentUser', this.service.Users.currentUser\n            .pipe(filter(current => !!current),\n            mergeMap(current => {\n                this.email = current.email;\n                return from(this.service.Spaces.show(current.email)).pipe(catchError(_ => of(undefined)))\n            }),\n            distinctUntilChanged()\n        )\n        .subscribe((space: Space | undefined) => {\n            this.loading = false;\n            if (space) {\n                this.manual_input = true;\n                this.system_id = space.id;\n                this.bootstrap();\n            } else {\n                this.subscription('system_list', this.service.Systems.systems.subscribe((systems) => {\n                    this.system_list = systems || [];\n                    this.manual_input = !this.system_list || this.system_list.length <= 0;\n                }));\n            }\n        }));\n\n    }\n\n    /**\n     * Setup the default system for the application to bind to\n     */\n    public bootstrap() {\n        if (localStorage) {\n            const system_id = localStorage.getItem('ACA.PANEL.system') || localStorage.getItem('ACA.CONTROL.system');\n            if (system_id) {\n                this.manual_input = true;\n                this.system_id = system_id;\n            }\n        }\n\n        if (this.manual_input && this.system_id) {\n            this.configure(this.system_id);\n        } else if (this.selected_system) {\n            this.configure(this.selected_system.id);\n        }\n    }\n\n    /**\n     * Save the bootstrapped ID and redirect to the panel for that ID\n     * @param system_id System to bootstrap\n     */\n    private configure(system_id: string): void {\n        this.service.log('BOOT', `Bootstrapping system ${system_id}...`);\n        if (localStorage) {\n            localStorage.setItem('ACA.PANEL.system', system_id);\n        }\n        this.service.navigate(['panel', system_id]);\n    }\n}\n\n","<div class=\"panel-array\">\n    <ng-container *ngIf=\"systems && systems.length > 0; else none\">\n        <div\n            class=\"panel-outlet\"\n            *ngFor=\"let id of systems | slice: 0:4; let i = index\"\n            [style.height]=\"systems.length >= 2 ? '50%' : '100%'\"\n        >\n            <app-booking-panel *ngIf=\"id; else empty_state\" [system_id]=\"id\" [show_time]=\"false\" [reverse]=\"i % 2 !== 0\"></app-booking-panel>\n        </div>\n    </ng-container>\n    <ng-template #none>\n        <div class=\"info-block\">\n            <div class=\"text\">No systems are set for displaying on the panel array</div>\n        </div>\n    </ng-template>\n</div>\n<ng-template #empty_state>\n    <div class=\"container\">\n        <div class=\"content center\">\n            <div class=\"logo\" *ngIf=\"logo\">\n                <img [src]=\"logo\"/>\n            </div>\n            <div class=\"time\">{{ time }}</div>\n        </div>\n    </div>\n</ng-template>\n\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { BaseComponent } from '../../shared/base.component';\nimport { ApplicationService } from 'src/app/services/app.service';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'app-booking-panel-array',\n    templateUrl: './panel-array.component.html',\n    styleUrls: ['./panel-array.component.scss']\n})\nexport class BookingPanelArrayComponent extends BaseComponent implements OnInit {\n    /** List of systems to show panels for */\n    public systems: string[];\n    /** Application logo */\n    public logo: string;\n\n    /** Display value for the current time */\n    public get time(): string {\n        return dayjs().format('h:mm:ss A')\n    }\n\n    constructor(private route: ActivatedRoute, private _service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription('app_ready', this._service.initialised.subscribe((is_ready) => {\n            if (is_ready) {\n                this.subscription('route.query', this.route.queryParamMap.subscribe((params) => {\n                    if (params.has('system_ids')) {\n                        this.systems = (params.get('system_ids') || '').split(',');\n                    }\n                }));\n                const logo = this._service.setting('app.logo');\n                this.logo = (logo ? logo.inverse : null) || '';\n                this.unsub('app_ready');\n            }\n        }));\n    }\n}\n","<div class=\"panel-select\" (window:mousedown)=\"reset()\" (window:touchstart)=\"reset()\">\n    <div class=\"panel-options\">\n        <ng-container *ngIf=\"systems && systems.length > 0; else none\">\n            <div class=\"item\" *ngFor=\"let id of systems | slice: 0:8; let i = index\" (tapped)=\"system_name[id] ? showPanel(id) : ''\">\n                <div class=\"bindings\" *ngIf=\"id\">\n                    <i binding [sys]=\"id\" mod=\"Bookings\" bind=\"room_name\" [(model)]=\"system_name[id]\"></i>\n                    <i binding [sys]=\"id\" mod=\"Bookings\" bind=\"icon\" [(model)]=\"system_icon[id]\"></i>\n                    <i binding [sys]=\"id\" mod=\"Bookings\" bind=\"today\" (modelChange)=\"updateStatus(id, $event)\"></i>\n                </div>\n                <div [class]=\"'icon' + (system_status[id] ? ' ' + system_status[id] : '')\">\n                    <img *ngIf=\"system_name[id]\" [src]=\"system_icon[id]\">\n                    <a-spinner *ngIf=\"!system_name[id]\" circle-ring color=\"#fff\"></a-spinner>\n                </div>\n                <div class=\"text\">{{ system_name[id] || id + ' connecting...' }}</div>\n            </div>\n        </ng-container>\n    </div>\n    <div class=\"panel-outlet\" *ngIf=\"active_system\">\n        <app-booking-panel [system_id]=\"active_system\"></app-booking-panel>\n        <div class=\"overlay\">\n            <button widget class=\"action close\" (tapped)=\"close()\" (contextmenu)=\"$event.preventDefault()\">\n                <div class=\"icon\">\n                    <i class=\"material-icons\">close</i>\n                </div>\n            </button>\n            <button widget class=\"action countdown\" (contextmenu)=\"$event.preventDefault()\">{{ countdown }}</button>\n        </div>\n    </div>\n    <ng-template #none>\n        <div class=\"info-block\">\n            <div class=\"text\">No systems are set for displaying on the panel select list</div>\n        </div>\n    </ng-template>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { BaseComponent } from '../../shared/base.component';\nimport { ActivatedRoute } from '@angular/router';\nimport { HashMap } from '../../shared/utilities/types.utilities';\nimport { Space } from '../../services/data/spaces/space.class';\nimport { ApplicationService } from '../../services/app.service';\n\n@Component({\n    selector: 'app-booking-panel-select',\n    templateUrl: './panel-select.component.html',\n    styleUrls: ['./panel-select.component.scss']\n})\nexport class BookingPanelSelectComponent extends BaseComponent implements OnInit {\n    /** List of systems to show panels for */\n    public systems: string[];\n    /** Names for the list of systems */\n    public system_name: HashMap<string> = {};\n    /** Icons for the list of systems */\n    public system_icon: HashMap<string> = {};\n    /** Status for the list of systems */\n    public system_status: HashMap<string> = {};\n    /** Active Panel system */\n    public active_system: string;\n    /** Countdown counter */\n    public countdown: number;\n\n    constructor(private route: ActivatedRoute, private service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription('route.query', this.route.queryParamMap.subscribe((params) => {\n            if (params.has('system_ids')) {\n                this.systems = (params.get('system_ids') || '').split(',');\n            }\n        }));\n    }\n\n    /**\n     * Show booking panel for the given system ID\n     * @param id ID of the system to show\n     */\n    public showPanel(id: string) {\n        this.active_system = id;\n        this.reset();\n    }\n\n    /**\n     * Update the status value for the given system ID\n     * @param id ID of the system to update\n     * @param bookings List of current bookings for the system\n     */\n    public updateStatus(id: string, bookings: HashMap[]) {\n        const space = new Space(this.service.Spaces, { id, bookings });\n        this.system_status[id] = space.current ? 'available' : 'unavailable';\n    }\n\n    /**\n     * Close the modal\n     */\n    public close() {\n        this.active_system = null;\n        this.clearInterval('countdown');\n    }\n\n    /**\n     * User confirmation of the content of the modal\n     */\n    public reset() {\n        if (this.active_system) {\n            this.countdown = 30;\n            this.interval('countdown', () => this.tick(), 1000);\n        }\n    }\n\n    /**\n     * Decrement countdown and close if 0\n     */\n    public tick() {\n        if (this.countdown <= 0) {\n            this.close();\n        }\n        this.countdown--;\n    }\n}\n","\n        <div class=\"content\">\n            <span class=\"panel-title\" (tapped)=\"showTitle()\" [class.show]=\"show_title\">{{ space_name }}</span>\n            <div class=\"details\" *ngIf=\"!hide_all && show_details\">\n                <app-panel-space-details [space]=\"space\"></app-panel-space-details>\n            </div>\n        </div>\n    ","import { Component, Input, ViewEncapsulation } from '@angular/core';\nimport { Space } from '../../services/data/spaces/space.class';\nimport { BaseClass } from '../../shared/base.class';\n\n@Component({\n    selector: 'app-panel-details-display',\n    template: `\n        <div class=\"content\">\n            <span class=\"panel-title\" (tapped)=\"showTitle()\" [class.show]=\"show_title\">{{ space_name }}</span>\n            <div class=\"details\" *ngIf=\"!hide_all && show_details\">\n                <app-panel-space-details [space]=\"space\"></app-panel-space-details>\n            </div>\n        </div>\n    `,\n    styleUrls: ['./panel.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class PanelDetailsDisplayComponent extends BaseClass {\n    @Input()\n    show_title: boolean;\n\n    @Input()\n    space_name: string;\n\n    @Input()\n    space: Space;\n\n    @Input()\n    show_details: boolean;\n\n    @Input()\n    hide_all: boolean;\n\n    /**\n     * Show full room name if overflowing\n     */\n    public showTitle() {\n        this.show_title = true;\n        this.timeout('hide_title', () => (this.show_title = false), 3000);\n    }\n}\n","\n        <div\n            class=\"booking-panel\"\n            [class.disabled]=\"interactive === false\"\n            [class.reverse]=\"reverse || flip_status\"\n            [class.no-time]=\"!show_time\"\n        >\n            <div *ngIf=\"isV1() === true\" [class]=\"'status-v1' + (status && !hide_all ? ' ' + status : '')\">\n                <div class=\"time-display-v1\" *ngIf=\"show_time\">{{ display_time | async }}</div>\n            </div>\n            <div\n                *ngIf=\"isV1() === false\"\n                [class]=\"'status' + (normalisedStatus && !hide_all ? ' ' + normalisedStatus : '')\"\n            >\n                <span class=\"time-display\" *ngIf=\"show_time\">{{ userFacingStatusText | async }}</span>\n                <span class=\"time-display time-display-bottom\" *ngIf=\"show_time\">{{ display_time | async }}</span>\n            </div>\n            <div class=\"body\">\n                <app-panel-details-display\n                    *ngIf=\"isV1() === false\"\n                    class=\"details-display\"\n                    [hide_all]=\"hide_all\"\n                    [show_details]=\"show_details\"\n                    [show_title]=\"show_title\"\n                    [space]=\"space\"\n                    [space_name]=\"space_name\"\n                ></app-panel-details-display>\n                <app-details-display-1\n                    *ngIf=\"isV1() === true\"\n                    class=\"details-display-v1\"\n                    [hide_all]=\"hide_all\"\n                    [show_details]=\"show_details\"\n                    [show_title]=\"show_title\"\n                    [space]=\"space\"\n                    [space_name]=\"space_name\"\n                    [status]=\"status\"\n                    status_display=\"{{ status_display | async }}\"\n                ></app-details-display-1>\n                <div class=\"timeline\" *ngIf=\"show_details\">\n                    <panel-timeline [space]=\"space\" [options]=\"timeline_options\"></panel-timeline>\n                </div>\n                <div class=\"loading-block\" *ngIf=\"isV1() === undefined\">\n                    <div class=\"info-block\">\n                        <div *ngIf=\"!system_id\" class=\"title\">Starting Application...</div>\n                        <div *ngIf=\"system_id && !space_name\" class=\"title\">System ({{ system_id }}) found...</div>\n                        <div *ngIf=\"space_name\" class=\"title\">{{ space_name }} Panel connecting...</div>\n                        <div *ngIf=\"system_id && !space_name\" class=\"text\">Loading Panel settings...</div>\n                        <div *ngIf=\"space_name\" class=\"text\">Applying Panel settings...</div>\n                        <div class=\"icon\">\n                            <a-spinner ring-rotate color=\"#000\"></a-spinner>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"bindings\" *ngIf=\"system_id && wsStatus\">\n                <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"room_name\" [(model)]=\"space_name\"></i>\n                <i binding [sys]=\"system_id\" mod=\"Bookings\" [(model)]=\"interactive\"></i>\n                <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"today\" (modelChange)=\"updateBookings($event)\"></i>\n                <i\n                    binding\n                    [sys]=\"system_id\"\n                    mod=\"Bookings\"\n                    bind=\"timeout\"\n                    [(model)]=\"pending_timeout\"\n                    (modelChange)=\"updateStatus()\"\n                ></i>\n                <i\n                    binding\n                    [sys]=\"system_id\"\n                    mod=\"Bookings\"\n                    bind=\"cancel_timeout\"\n                    [(model)]=\"cancel_timeout\"\n                    (modelChange)=\"updateStatus()\"\n                ></i>\n                <i\n                    binding\n                    [sys]=\"system_id\"\n                    mod=\"Bookings\"\n                    bind=\"last_meeting_started\"\n                    [(model)]=\"last_started\"\n                    (modelChange)=\"updateStatus()\"\n                ></i>\n                <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"hide_all\" [(model)]=\"hide_all\" ></i>\n                <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"flip_status\" [(model)]=\"flip_status\"></i>\n                <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"can_cancel\" [(model)]=\"can_cancel\"></i>\n                <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"business_start\" [(model)]=\"business_start\"></i>\n                <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"business_end\" [(model)]=\"business_end\"></i>\n                <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"status_override\" [(model)]=\"status_overrides\"></i>\n            </div>\n        </div>\n    ","import { ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';\nimport { BaseComponent } from '../../shared/base.component';\nimport { Space, SpaceTheme } from '../../services/data/spaces/space.class';\nimport { HashMap } from '../../shared/utilities/types.utilities';\nimport * as dayjs from 'dayjs';\nimport { ApplicationService } from '../../services/app.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { timeToDate } from '../../shared/utilities/general.utilities';\nimport { catchError, map, mergeMap } from 'rxjs/operators';\nimport { SpaceRules } from '../../services/data/bookings/booking.interfaces';\nimport { BehaviorSubject, combineLatest, concat, from, Observable, of } from 'rxjs';\nimport { defaultBlockOptions, IPanelTimelineOptions } from './timeline/timeline.utils';\nimport { is24HourTime } from '../../services/data/bookings/booking.utilities';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { onlineState, authority, getModule, status} from '@placeos/ts-client';\n/**\n * The accepted states for a given room or space.\n *\n * Extension to/reinterpretation of {@link PermittedSystemStatus}.\n *\n * These constants are used as CSS classes and as keys in the /assets/i18n\n * directory - please take care when changing them.\n */\nexport enum RoomDisplayStatus {\n    Available = 'available',\n    NotBookable = 'not-bookable',\n    AvailableByRequest = 'available-by-request',\n    InUse = 'in-use',\n    Pending = 'none',\n}\n\n/**\n * Expected states for an enabled room or space.\n *\n * These constants may be different from those exported as part of\n * {@link RoomDisplayStatus}.\n *\n * Only use this type inside BookingPanelComponent. Please be careful to use\n * the right constant in the right place.\n */\ntype EnabledSystemStatus = 'pending' | 'available' | 'unavailable';\n\n/**\n * Extension to {@link EnabledSystemStatus}.\n *\n * In addition to the types listed there, this adds 'not-bookable' to designate\n * rooms/spaces that want to pretend to be offline.\n */\ntype PermittedSystemStatus = EnabledSystemStatus | 'not-bookable';\n\n@Component({\n    selector: 'app-booking-panel',\n    template: `\n        <div\n            class=\"booking-panel\"\n            [class.disabled]=\"interactive === false\"\n            [class.reverse]=\"reverse || flip_status\"\n            [class.no-time]=\"!show_time\"\n        >\n            <div *ngIf=\"isV1() === true\" [class]=\"'status-v1' + (status && !hide_all ? ' ' + status : '')\">\n                <div class=\"time-display-v1\" *ngIf=\"show_time\">{{ display_time | async }}</div>\n            </div>\n            <div\n                *ngIf=\"isV1() === false\"\n                [class]=\"'status' + (normalisedStatus && !hide_all ? ' ' + normalisedStatus : '')\"\n            >\n                <span class=\"time-display\" *ngIf=\"show_time\">{{ userFacingStatusText | async }}</span>\n                <span class=\"time-display time-display-bottom\" *ngIf=\"show_time\">{{ display_time | async }}</span>\n            </div>\n            <div class=\"body\">\n                <app-panel-details-display\n                    *ngIf=\"isV1() === false\"\n                    class=\"details-display\"\n                    [hide_all]=\"hide_all\"\n                    [show_details]=\"show_details\"\n                    [show_title]=\"show_title\"\n                    [space]=\"space\"\n                    [space_name]=\"space_name\"\n                ></app-panel-details-display>\n                <app-details-display-1\n                    *ngIf=\"isV1() === true\"\n                    class=\"details-display-v1\"\n                    [hide_all]=\"hide_all\"\n                    [show_details]=\"show_details\"\n                    [show_title]=\"show_title\"\n                    [space]=\"space\"\n                    [space_name]=\"space_name\"\n                    [status]=\"status\"\n                    status_display=\"{{ status_display | async }}\"\n                ></app-details-display-1>\n                <div class=\"timeline\" *ngIf=\"show_details\">\n                    <panel-timeline [space]=\"space\" [options]=\"timeline_options\"></panel-timeline>\n                </div>\n                <div class=\"loading-block\" *ngIf=\"isV1() === undefined\">\n                    <div class=\"info-block\">\n                        <div *ngIf=\"!system_id\" class=\"title\">Starting Application...</div>\n                        <div *ngIf=\"system_id && !space_name\" class=\"title\">System ({{ system_id }}) found...</div>\n                        <div *ngIf=\"space_name\" class=\"title\">{{ space_name }} Panel connecting...</div>\n                        <div *ngIf=\"system_id && !space_name\" class=\"text\">Loading Panel settings...</div>\n                        <div *ngIf=\"space_name\" class=\"text\">Applying Panel settings...</div>\n                        <div class=\"icon\">\n                            <a-spinner ring-rotate color=\"#000\"></a-spinner>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"bindings\" *ngIf=\"system_id && wsStatus\">\n                <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"room_name\" [(model)]=\"space_name\"></i>\n                <i binding [sys]=\"system_id\" mod=\"Bookings\" [(model)]=\"interactive\"></i>\n                <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"today\" (modelChange)=\"updateBookings($event)\"></i>\n                <i\n                    binding\n                    [sys]=\"system_id\"\n                    mod=\"Bookings\"\n                    bind=\"timeout\"\n                    [(model)]=\"pending_timeout\"\n                    (modelChange)=\"updateStatus()\"\n                ></i>\n                <i\n                    binding\n                    [sys]=\"system_id\"\n                    mod=\"Bookings\"\n                    bind=\"cancel_timeout\"\n                    [(model)]=\"cancel_timeout\"\n                    (modelChange)=\"updateStatus()\"\n                ></i>\n                <i\n                    binding\n                    [sys]=\"system_id\"\n                    mod=\"Bookings\"\n                    bind=\"last_meeting_started\"\n                    [(model)]=\"last_started\"\n                    (modelChange)=\"updateStatus()\"\n                ></i>\n                <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"hide_all\" [(model)]=\"hide_all\" ></i>\n                <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"flip_status\" [(model)]=\"flip_status\"></i>\n                <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"can_cancel\" [(model)]=\"can_cancel\"></i>\n                <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"business_start\" [(model)]=\"business_start\"></i>\n                <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"business_end\" [(model)]=\"business_end\"></i>\n                <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"status_override\" [(model)]=\"status_overrides\"></i>\n            </div>\n        </div>\n    `,\n    styleUrls: ['./panel.component.scss'],\n})\nexport class BookingPanelComponent extends BaseComponent implements OnInit {\n    /** ID of the active system */\n    @Input() public system_id: string;\n    /** Whether the status is on the right side */\n    @Input() public reverse: boolean;\n    /** Whether to show the time at the bottom of the status */\n    @Input() public show_time = true;\n    /** Name of the connected system */\n    public space_name: string;\n    /** Space with which to display bookings for. lazy loaded */\n    public space: Space | undefined;\n    public rules: SpaceRules | undefined;\n    /** Number of seconds before a meeting can be started, being truthy enables start/stop and auto-cancellations */\n    public pending_timeout: number;\n    /** Number of seconds after the start of a meeting when it is auto-cancelled, overrides `timeout` value */\n    public cancel_timeout: number;\n    /** Timestamp of the last started meeting as ms since UTC epoch */\n    public last_started: number;\n    /** Whether to hide booking related details */\n    public hide_all: boolean;\n    /** Whether user interaction is enabled for the panel */\n    public interactive = true;\n    /** Whether status display is on the right side of the UI */\n    public flip_status: boolean;\n    /** Whether bookings can be cancelled if they timeout */\n    public can_cancel: boolean;\n    /** Time of the last cancelled meeting in ms since UTC epoch */\n    private last_cancel: number;\n    /** Start time of the business day with format `HH:mm` */\n    public business_start: string;\n    /** End time of the business day with format `HH:mm` */\n    public business_end: string;\n    /** Whether to show full room name when it overflows */\n    public show_title: boolean;\n    /** Override mapping for status values */\n    public status_overrides: HashMap<string>;\n    /** Status of websocket */\n    public websocket_connected: boolean;\n    /** Options to use for the Timeline view at the bottom of the screen */\n    public timeline_options: IPanelTimelineOptions;\n\n    /** Current status of the active system */\n    private _status: EnabledSystemStatus;\n\n    private _theme: SpaceTheme | undefined;\n\n    public wsStatus = false;\n\n    /**\n     * When bookings loaded, triggers change.\n     */\n    private bookingsLoaded = new BehaviorSubject<HashMap[]>([]);\n\n    public setSpace(space: Space) {\n        // We have a new Space object. Angular will handle most of the propagation.\n        // But first, we should hook up translations....\n        const localeCode = space.locale_code;\n        this._translate.use(localeCode);\n        // ...and then we can assign this new Space\n\n        this.space = space;\n        this.timeline_options = {\n            ...defaultBlockOptions,\n            locale_code: localeCode,\n        };\n        this._theme = this.space.theme_rbp;\n    }\n\n    /**\n     * The text shown on screen to represent {@link _status}.\n     *\n     * Used for {@link isV1 V1} displays only - for V2+, prefer\n     * {@link userFacingStatusText}. C.f. property of the same name in\n     * <code>PanelDetailsDisplayV1Component</code>.\n     */\n    public get status_display(): Observable<string> {\n        if (!this.websocket_connected && !this._service.setting('show_status_when_disconnected')) {\n            return of(' ');\n        }\n        if (this.status_overrides && Object.keys(this.status_overrides).length === 1) {\n            this._status = this.space.current ? 'unavailable' : (Object.keys(this.status_overrides)[0] as any);\n        }\n        const permittedStatus: PermittedSystemStatus = (!this.hide_all ? this._status : null) || 'not-bookable';\n        return of((this.status_overrides || [])[permittedStatus] || this._status);\n    }\n\n    /**\n     * Current status of the system assigned to this {@link space}.\n     *\n     * If we do not have access to the server ({@link websocket_connected} is false),\n     * or if we've been asked to obscure the current status ({@link hide_all} is\n     * true), then this _may_ return a raw <code>null</code> value.\n     *\n     * @see updateStatus\n     */\n    public get status(): PermittedSystemStatus {\n        if (!this.websocket_connected && !this._service.setting('show_status_when_disconnected')) {\n            return 'not-bookable';\n        }\n        // Make '_status' incorporate any recent changes to 'space', 'hide_all', etc.\n        this.updateStatus();\n        // Perform any status overrides\n        if (\n            this.status_overrides &&\n            Object.keys(this.status_overrides).length === 1 &&\n            ((this.space && !this.space.current) || this._status !== 'unavailable')\n        ) {\n            this._status = Object.keys(this.status_overrides)[0] as any;\n        }\n        return this._status;\n    }\n\n    /**\n     * Normalised representation of {@link status}.\n     *\n     * This method will provide the most nuance re: whether the room is\n     * accepting new bookings.\n     */\n    public get normalisedStatus(): RoomDisplayStatus {\n        // if we have not loaded rules, keep pending state.\n        if (!this.rules) {\n            return RoomDisplayStatus.Pending;\n        }\n        const currentStatus = this.status;\n        if (!currentStatus) {\n            // 'status' is either hidden or damaged somehow. Switch to the 'Pending' state.\n            return RoomDisplayStatus.Pending;\n        }\n        switch (currentStatus) {\n            case 'available':\n                if (!this.rules.auto_approve) {\n                    return RoomDisplayStatus.AvailableByRequest;\n                }\n                return RoomDisplayStatus.Available;\n            case 'not-bookable':\n                return RoomDisplayStatus.NotBookable;\n            case 'pending':\n                return RoomDisplayStatus.Pending;\n            case 'unavailable':\n                return RoomDisplayStatus.InUse;\n        }\n    }\n\n    /**\n     * User-friendly description of the room status.\n     *\n     * While this is usually based on {@link RoomDisplayStatus}, it _can_\n     * be overridden by elements of {@link status_overrides}.\n     */\n    public get userFacingStatusText(): Observable<string> {\n        const localStatus = this.status;\n        const overrideDisplay = this.status_overrides && this.status_overrides[localStatus];\n        if (overrideDisplay) {\n            return of(overrideDisplay);\n        }\n        return this._translate.stream('status.' + this.normalisedStatus);\n    }\n\n    /** Whether booking details should be shown */\n    public get show_details(): boolean {\n        const theme = this.isV1();\n        if (theme === undefined) {\n            return false;\n        }\n        return this.websocket_connected || !!this._service.setting('show_status_when_disconnected');\n    }\n\n    /** Display string for the current time */\n    public get display_time(): Observable<string> {\n        return concat(\n            of(this._translate.currentLang),\n            this._translate.onLangChange.pipe(map((languageEvent) => languageEvent.lang))\n        ).pipe(\n            map((lang) => {\n                if (this.isV1() === undefined) {\n                    return '';\n                } else if (this.isV1()) {\n                    return dayjs().format('h:mm A');\n                } else if (lang === 'fr-CA') {\n                    return dayjs().format('HH [h] mm');\n                } else if (is24HourTime(lang)) {\n                    return dayjs().format('HH:mm');\n                } else {\n                    return dayjs().format('h:mma');\n                }\n            })\n        );\n    }\n\n    constructor(\n        public _service: ApplicationService,\n        public _route: ActivatedRoute,\n        public _translate: TranslateService,\n        private cdRef: ChangeDetectorRef\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        // We want to prepare the translation service early on ('defaultLang' should\n        // be described before we display any placeholder text)\n        this._translate.addLangs(['en', 'fr-CA']);\n        this._translate.setDefaultLang('en');\n\n        this.subscription(\n            'app_ready',\n            this._service.initialised.subscribe((is_ready) => {\n                if (is_ready) {\n                    this.subscription(\n                        'spaces_list_buildings',\n                        combineLatest([\n                            this._route.paramMap.pipe(\n                                mergeMap((params) => {\n                                    this.system_id = params.get('system_id');\n                                    this._service.set('system', this.system_id);\n                                    return from(this._service.Spaces.show(this.system_id)).pipe(\n                                        catchError((_) => of(undefined))\n                                    );\n                                })\n                            ),\n                            this.bookingsLoaded,\n                        ]).subscribe(async ([space, bookings]) => {\n                            // if (bookings) {\n                            //     if (bookings[0] && !bookings[0].Subject) {\n                            //         bookings[0].Subject = 'current meeting...';\n                            //     }\n                            //     if (bookings[1] && !bookings[1].Subject) {\n                            //         bookings[1].Subject = 'next meeting...';\n                            //     }\n                            // }\n                            if (!space) return;\n                            let bld = null;\n                            for (const zone of space.zones) {\n                                bld = await this._service.Organisation.showBuilding(zone).catch(_ => null);\n                                if (bld) break;\n                            }\n                            if (!bld) return;\n                            // this requires a refactor, but essentially the rules will check for building\n                            // levels. We need to listen for level loading to then load the rules.\n                            // const foundSpace = spaces[0];\n\n                            // As per MCK-480, these default options are based on the staff map default rules,\n                            // except for the host \"user\". The RBP does not have a real user so, we do not\n                            // evaluate rules for the user. This may lead to some inconsistencies when looking at\n                            // booking panel vs the staff application. In future we should place defaults in a better spot.\n                            this.rules = space.rulesFor({\n                                date: dayjs().valueOf(),\n                                duration: 30,\n                            });\n                            this._service.log('Panel', 'Evaluated Rules', this.rules);\n                            this.setSpace(\n                                new Space(this._service.Spaces, {\n                                    ...space,\n                                    bookings,\n                                    theme_rbp: this._theme,\n                                })\n                            );\n                        })\n                    );\n                    this.timeout('websocket', () => {\n                        this.websocket_connected = true;\n                    });\n                    this.unsub('app_ready');\n                }\n            })\n        );\n\n        status().subscribe(val => {\n            this.wsStatus = val ;\n            this.cdRef.detectChanges;\n        });\n    }\n\n    public isV1(): boolean {\n        return this._theme ? this._theme === SpaceTheme.v1 : undefined;\n    }\n\n    /**\n     * Update the bookings for the active space\n     * @param bookings Array of raw booking data\n     */\n    public updateBookings(bookings: HashMap[]): void {\n        this.bookingsLoaded.next(bookings);\n    }\n\n    /**\n     * Update the value of {@link _status}.\n     *\n     * Based on the current values of {@link hide_all}, {@link space},\n     * {@link pending_timeout}, and one or two other properties, this function\n     * changes {@link _status} to reflect whether or not the associated room is\n     * open for new bookings.\n     *\n     * Invoke this only when a model (such as {@link cancel_timeout}) changes.\n     * Most of the rest of the time you'd be better off either using the\n     * accessor {@link status} (which itself invokes this when appropriate), or\n     * querying {@link _status} directly.\n     */\n    public updateStatus(): void {\n        if (this.hide_all) {\n            this._status = null;\n        } else {\n            if (this.space && (this.space.current || this.space.next)) {\n                const booking = this.space.current || this.space.next;\n                this._status = this.space.current ? 'unavailable' : 'available';\n                if (this.pending_timeout) {\n                    const now = dayjs();\n                    const date = dayjs(booking.date).startOf('m');\n                    if (this.last_started >= now.valueOf() || this.last_started >= date.valueOf()) {\n                        this._status = 'unavailable';\n                    } else {\n                        // Only meetings with durations less than 8 hours can be pending or cancelled\n                        const pending_start = date.subtract(this.pending_timeout, 's');\n                        const pending_end = date.add(this.cancel_timeout || this.pending_timeout, 's');\n                        const end = date.add(booking.duration, 'm');\n                        if (now.isAfter(pending_start, 's') && now.isBefore(pending_end, 's')) {\n                            this._status = 'pending';\n                        } else if (now.isAfter(pending_end, 's') && now.isBefore(end, 'm')) {\n                            this._status = 'pending';\n                            const business_start = dayjs(timeToDate(this.business_start || '08:00'));\n                            const business_end = dayjs(timeToDate(this.business_end || '17:30'));\n                            // Check if within business hours before cancelling the meeting\n                            if (now.isBefore(business_start, 'm') || now.isAfter(business_end, 'm')) {\n                                return;\n                            }\n                            this.endMeeting('timeout');\n                        }\n                    }\n                }\n            } else {\n                this._status = 'available';\n            }\n        }\n    }\n\n    /**\n     * Execute end meeting logic on engine driver\n     * @param reason Reason for ending the meeting early\n     */\n    private endMeeting(reason: string = 'user_input') {\n        if (this.space && this.can_cancel !== false) {\n            const meeting = this.space.current || this.space.next;\n            const module = this._service.Systems.get(this.space.id, 'Bookings');\n            if (meeting.duration >= 8 * 60 && reason === 'timeout') {\n                reason = 'hide multi-day';\n            }\n            if (meeting && module && meeting.date !== this.last_cancel) {\n                const date = dayjs(meeting.date);\n                module.execute('cancel_meeting', [meeting.date, reason]).then(\n                    (_) => {\n                        this._service.Analytics.event(\n                            'Checkin',\n                            'cancelled',\n                            `${this.space.id} at ${date.format('DD MMM YYYY, h:mm A Z')} | ${reason}`\n                        );\n                        this.last_cancel = meeting.date;\n                    },\n                    (e) => {\n                        this._service.notifyError(`Error cancelling meeting. ${e}`);\n                        this._service.Analytics.event(\n                            'Checkin',\n                            'cancel-failed',\n                            `${this.space.id} at ${date.format('DD MMM YYYY, h:mm A Z')} | ${reason}`\n                        );\n                    }\n                );\n            }\n        }\n    }\n}\n","\n        <div class=\"space-booking-details\">\n            <div class=\"booking-container\">\n                <div class=\"details current\" *ngIf=\"space && space.current\">\n                    <div class=\"heading\">{{ 'space-details.booking.current.heading' | translate }}</div>\n                    <div class=\"host\" *ngIf=\"!hide_user && !hide_details\">{{ space.current?.organiser?.name }}</div>\n                    <div class=\"time\" *ngIf=\"!hide_availability\">\n                        {{ 'space-details.booking.current.time-range' | translate:{\n                            time: space.current?.end_time,\n                            date: space.current?.end_date\n                        } }}\n                    </div>\n                </div>\n                <div class=\"details next\" *ngIf=\"space && space.next\">\n                    <div class=\"heading\">{{ 'space-details.booking.next.heading' | translate }}</div>\n                    <div class=\"host\" *ngIf=\"!hide_user && !hide_details\">{{ space.next?.organiser?.name }}</div>\n                    <div class=\"time\" *ngIf=\"!hide_availability\">\n                        {{ 'space-details.booking.next.time-range' | translate:{\n                            time: space.next?.start_time,\n                            date: space.next?.start_date\n                        } }}\n                    </div>\n                </div>\n            </div>\n            <div class=\"details other\">\n                <div class=\"time\" *ngIf=\"!hide_availability && space?.current\"\n                    [innerHTML]=\"'space-details.other.availability' | translate:{\n                        time: this.space.current.end_time,\n                        date: this.space.current.end_date\n                    }\">\n                </div>\n                <div class=\"time\"\n                    [innerHTML]=\"'space-details.other.link' | translate\">\n                </div>\n            </div>\n            <div class=\"bindings\" *ngIf=\"space\">\n                <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"hide_details\" [(model)]=\"hide_details\"></i>\n                <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"hide_title\" [(model)]=\"hide_title\"></i>\n                <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"hide_availability\" [(model)]=\"hide_availability\"></i>\n                <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"hide_user\" [(model)]=\"hide_user\"></i>\n                <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"title\" [(model)]=\"title\"></i>\n                <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"description\" [(model)]=\"description\"></i>\n                <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"icon\" [(model)]=\"icon\"></i>\n            </div>\n        </div>\n    ","import { Component, Input } from '@angular/core';\nimport { Space } from '../../../services/data/spaces/space.class';\n\n/**\n * The 'details' section of a {@link BookingPanelComponent}.\n *\n * NB: A BookingPanelComponent or equivalent ancestor component is responsible\n * for ensuring that the 'space' property and all ngx-translate\n * <code>TranslateService</code> properties are set properly.\n */\n@Component({\n    selector: 'app-panel-space-details',\n    template: `\n        <div class=\"space-booking-details\">\n            <div class=\"booking-container\">\n                <div class=\"details current\" *ngIf=\"space && space.current\">\n                    <div class=\"heading\">{{ 'space-details.booking.current.heading' | translate }}</div>\n                    <div class=\"host\" *ngIf=\"!hide_user && !hide_details\">{{ space.current?.organiser?.name }}</div>\n                    <div class=\"time\" *ngIf=\"!hide_availability\">\n                        {{ 'space-details.booking.current.time-range' | translate:{\n                            time: space.current?.end_time,\n                            date: space.current?.end_date\n                        } }}\n                    </div>\n                </div>\n                <div class=\"details next\" *ngIf=\"space && space.next\">\n                    <div class=\"heading\">{{ 'space-details.booking.next.heading' | translate }}</div>\n                    <div class=\"host\" *ngIf=\"!hide_user && !hide_details\">{{ space.next?.organiser?.name }}</div>\n                    <div class=\"time\" *ngIf=\"!hide_availability\">\n                        {{ 'space-details.booking.next.time-range' | translate:{\n                            time: space.next?.start_time,\n                            date: space.next?.start_date\n                        } }}\n                    </div>\n                </div>\n            </div>\n            <div class=\"details other\">\n                <div class=\"time\" *ngIf=\"!hide_availability && space?.current\"\n                    [innerHTML]=\"'space-details.other.availability' | translate:{\n                        time: this.space.current.end_time,\n                        date: this.space.current.end_date\n                    }\">\n                </div>\n                <div class=\"time\"\n                    [innerHTML]=\"'space-details.other.link' | translate\">\n                </div>\n            </div>\n            <div class=\"bindings\" *ngIf=\"space\">\n                <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"hide_details\" [(model)]=\"hide_details\"></i>\n                <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"hide_title\" [(model)]=\"hide_title\"></i>\n                <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"hide_availability\" [(model)]=\"hide_availability\"></i>\n                <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"hide_user\" [(model)]=\"hide_user\"></i>\n                <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"title\" [(model)]=\"title\"></i>\n                <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"description\" [(model)]=\"description\"></i>\n                <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"icon\" [(model)]=\"icon\"></i>\n            </div>\n        </div>\n    `,\n    styleUrls: ['./space-details.component.scss']\n})\nexport class PanelSpaceDetailsComponent {\n    /** Space with which to display bookings for */\n    @Input() public space: Space;\n    /** Secondary title for the space */\n    public title: string;\n    /** Description for the space */\n    public description: string;\n    /** Image that suppliments the description for the space */\n    public icon: { class?: string, value?: string, src?: string };\n\n    /** Whether to hide the booking timing details */\n    public hide_availability: boolean;\n    /** Whether to hide the current booking title */\n    public hide_title: boolean;\n    /** Whether to hide booking details(title and host) */\n    public hide_details: boolean;\n    /** Whether to hide booking host */\n    public hide_user: boolean;\n\n}\n\n","<div class=\"timeline\">\n    <div class=\"block-list\" *ngIf=\"time_blocks && time_blocks.length > 0\">\n        <div\n            class=\"block\"\n            *ngFor=\"let item of time_blocks\"\n            [class.show]=\"item.show || item.hour\"\n            [class.in-use]=\"item.in_use\"\n        >\n            <div class=\"hour\" *ngIf=\"item.hour\">{{ item.hour }}</div>\n            <div class=\"bar\" [class.hour]=\"item.hour\"></div>\n        </div>\n    </div>\n    <div class=\"overlay\">\n        <div class=\"expired\" [style.width]=\"((options?.start_offset || 120) / (options?.duration || 720)) * 100 + '%'\"></div>\n        <div class=\"current-block\" [style.left]=\"((options?.start_offset || 120) / (options?.duration || 720)) * 100 + '%'\">\n            <div class=\"bar\"></div>\n            <div class=\"triangle\"></div>\n            <div class=\"time-display\" *ngIf=\"display_time\">{{ 'timeline.now-label' | translate }}<br>{{ display_time }}</div>\n        </div>\n    </div>\n    <div class=\"bindings\" *ngIf=\"space\">\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"hide_availability\" [(model)]=\"hide_status\" (modelChange)=\"checkBookings()\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"hide_all\" [(model)]=\"hide_all\" (modelChange)=\"checkBookings()\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"booking_disabled\" [(model)]=\"no_bookings\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"no_timeline_bookings\" [(model)]=\"no_timeline_bookings\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"default_title\" [(model)]=\"default_title\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"min_duration\" [(model)]=\"min_duration\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"max_duration\" [(model)]=\"max_duration\"></i>\n    </div>\n</div>\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { BaseComponent } from '../../../shared/base.component';\nimport { Space } from '../../../services/data/spaces/space.class';\n\nimport * as dayjs from 'dayjs';\nimport { ApplicationService } from '../../../services/app.service';\nimport {\n    calculateTimelineBlocks,\n    evaluateBookingsInUse,\n    IPanelTimelineOptions,\n    ITimelineBlock\n} from './timeline.utils';\nimport { TranslateService } from '@ngx-translate/core';\nimport { is24HourTime } from 'src/app/services/data/bookings/booking.utilities';\n\n@Component({\n    selector: 'panel-timeline',\n    templateUrl: './timeline.component.html',\n    styleUrls: ['./timeline.component.scss']\n})\nexport class PanelTimelineComponent extends BaseComponent implements OnInit, OnChanges {\n    /** Space with which to display bookings for */\n    @Input() public space: Space;\n    /** Display options for the timeline */\n    @Input() public options: IPanelTimelineOptions;\n    /** Emitter for user events on the timeline */\n    @Output() public event = new EventEmitter();\n\n    /** List of display time block  */\n    public time_blocks: ITimelineBlock[] = [];\n    /** Whether to hide unavailable blocks on the UI */\n    public hide_status: boolean;\n    /** Whether to hide all booking data */\n    public hide_all: boolean;\n    /** Whether user is not allowed to make bookings */\n    public no_booking: boolean;\n    /** Whether user is not allowed to make bookings using the timeline */\n    public no_timeline_bookings: boolean;\n    /** Default title for bookings */\n    public default_title: string;\n    /** Maximum allowed booking duation */\n    public max_duration: number;\n    /** Minimum allowed booking duation */\n    public min_duration: number;\n\n    /** Display string for the current time */\n    public get display_time(): string {\n        const now = dayjs();\n        let timeFormat = is24HourTime(this.space?.locale_code) ? 'HH:mm' : 'h:mm A';\n        // This is only the Montreal 24r format\n        if (this.space?.locale_code?.toLowerCase() === 'fr-ca') {\n            timeFormat = 'HH [h] mm';\n        }\n        return now.format(timeFormat);\n    }\n\n    constructor(private service: ApplicationService, private translate: TranslateService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.generateTimelineBlocks();\n        this.interval('update_blocks', () => this.generateTimelineBlocks(), 60 * 1000);\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        this.generateTimelineBlocks();\n    }\n\n    /**\n     * Generate time blocks to display\n     */\n    private generateTimelineBlocks(): void {\n        this.time_blocks = calculateTimelineBlocks(this.options);\n        this.checkBookings();\n    }\n\n    /**\n     * Update the statuses of time blocks based off space bookings\n     */\n    public checkBookings(): void {\n        if (this.space && this.space.todays_bookings) {\n            this.time_blocks = evaluateBookingsInUse(this.time_blocks, this.space.bookings,\n                !this.hide_status && !this.hide_all, this.options);\n        }\n    }\n}\n\n","import * as dayjs from 'dayjs';\nimport { Booking } from '../../../services/data/bookings/booking.class';\nimport { is24HourTime } from '../../../services/data/bookings/booking.utilities';\n\nexport const DEFAULT_START_OFFSET = 120;\nexport const DEFAULT_DURATION = 720;\nexport const DEFAULT_BLOCK_SIZE = 30;\nexport const TIME_BLOCK_SEPARATOR_MINUTES = 5;\nconst DEFAULT_LOCALE_CODE = 'en';\n\n/**\n * Representation of one block in a TimelineComponent.\n *\n * Note that 'hour' is a string type and not numeric. This is\n * for two main reasons:\n * 1. strings with a value of '0' are truthy (the number 0 isn't)\n * 2. if you need to do math with the represented time, 'value' is\n *    a much more reliable choice\n */\nexport interface ITimelineBlock {\n    /** Block time as ms since UTC epoch */\n    value: number;\n    /** Whether to show block divider */\n    show: boolean;\n    /** Hour of the day represented by this time block (optional) */\n    hour: string;\n    /** Whether block is in use or not */\n    in_use: boolean;\n}\n\nexport interface IPanelTimelineOptions {\n    /** Length of time in minutes to display on the timeline after the current time */\n    duration: number;\n    /** Time offset in minutes which is displayed before the current time marker */\n    start_offset: number;\n    /** Size of shown blocks in minutes */\n    block_size: number;\n    /** BCP-47 Locale for formatting time and duration */\n    locale_code: string;\n}\n\n/**\n * Default set of options for {@link calculateTimelineBlocks}.\n */\nexport const defaultBlockOptions: IPanelTimelineOptions = {\n    block_size: DEFAULT_BLOCK_SIZE,\n    duration: DEFAULT_DURATION,\n    locale_code: DEFAULT_LOCALE_CODE,\n    start_offset: DEFAULT_START_OFFSET\n};\n\n/**\n * What to display for the optional 'hour' property of an {@link ITimelineBlock}.\n *\n * @param timestamp any time (ideally this is already rounded to the nearest minute)\n * @param options additional timeline configuration\n * @return the 'hour' part of the timestamp if its 'minute' part is 0, or else null\n */\nexport const hourMarker = (timestamp: dayjs.Dayjs, options: IPanelTimelineOptions): string | null => {\n    let localised: string;\n    if (is24HourTime(options.locale_code)) {\n        // we can just use the 'hour' property directly\n        localised = `${timestamp.hour()}`;\n    } else {\n        // clamp by 12 for 12 hour system.\n        const clampedHour = timestamp.hour() % 12;\n        localised = clampedHour === 0 ? '12' : '' + clampedHour;\n    }\n\n    return timestamp.minute() === 0 ? localised : null;\n};\n\n/**\n * Calculate time blocks to display\n */\nexport const calculateTimelineBlocks = (options?: IPanelTimelineOptions): ITimelineBlock[] => {\n    if (!options) {\n        options = defaultBlockOptions;\n    }\n    // First, round off the 'seconds' of the current time\n    const nowInMinutes = dayjs().startOf('m');\n    // Then round the 'minutes' part to the nearest multiple of 5\n    const now = nowInMinutes.minute(Math.round(nowInMinutes.minute() / 5) * 5);\n    // Define a time range:\n    // 'start' is included; it's the value we attach to the earliest block\n    const start = now.subtract(options.start_offset, 'm');\n    // 'end' is not included; it's the boundary after the latest block\n    const end = start.add(options.duration, 'm');\n\n    const timeBlocks: ITimelineBlock[] = [];\n    let timestamp = dayjs(start);\n    while (timestamp.isBefore(end, 'm')) {\n        timeBlocks.push({\n            value: timestamp.valueOf(),\n            show: (timestamp.minute() % (options.block_size)) === 0,\n            hour: hourMarker(timestamp, options),\n            in_use: false\n        });\n        timestamp = timestamp.add(TIME_BLOCK_SEPARATOR_MINUTES, 'm');\n    }\n    return timeBlocks;\n};\n/**\n * Will find and adjust each block to show if they're in use or not depending on the start and end of the bookings passed in.\n * @param timeBlocks The existing set of time blocks.\n * @param bookings The bookings to compare and find which are in use.\n * @param showInUse If false, we do not set timeBlocks status to \"in_use\".\n * @param options\n */\nexport const evaluateBookingsInUse = (\n    timeBlocks: ITimelineBlock[],\n    bookings: Booking[],\n    showInUse: boolean,\n    options?: IPanelTimelineOptions): ITimelineBlock[] => {\n    const blockStart = dayjs().subtract((options ? options.start_offset : null) || DEFAULT_START_OFFSET, 'm');\n    const blockEnd = dayjs().add((options ? options.duration : null) || DEFAULT_DURATION, 'm');\n    // Filter bookings for the shown times\n    const shownBookings = bookings.filter(i => {\n        const start = dayjs(i.date);\n        const end = start.add(i.duration, 'm');\n        return end.isAfter(blockStart, 'm') && start.isBefore(blockEnd, 'm');\n    });\n    const newBlocks = [...timeBlocks];\n    newBlocks.forEach(i => i.in_use = false);\n    if (showInUse) {\n        for (const booking of shownBookings) {\n            const start = dayjs(booking.date);\n            const end = start.add(booking.duration, 'm');\n            for (const block of timeBlocks) {\n                const blockTime = dayjs(block.value);\n                if (blockTime.isSame(start, 'm') || (blockTime.isAfter(start, 'm') && blockTime.isBefore(end, 'm'))) {\n                    block.in_use = true;\n                }\n            }\n        }\n    }\n    return newBlocks;\n};\n","\n        <div class=\"content\">\n            <div class=\"title\" (tapped)=\"showTitle()\" [class.show]=\"show_title\">{{ space_name }}</div>\n            <div [class]=\"'status-text' + (status && !hide_all ? ' ' + status : '')\">\n                {{ (!hide_all ? status_display : null) || 'Not Bookable' }}\n            </div>\n            <div class=\"details\" *ngIf=\"!hide_all && show_details\">\n                <panel-space-details [space]=\"space\"></panel-space-details>\n            </div>\n        </div>\n    ","import { Component, Input, ViewEncapsulation } from '@angular/core';\nimport { Space } from '../../../services/data/spaces/space.class';\nimport { BaseClass } from '../../../shared/base.class';\n\n@Component({\n    selector: 'app-details-display-1',\n    template: `\n        <div class=\"content\">\n            <div class=\"title\" (tapped)=\"showTitle()\" [class.show]=\"show_title\">{{ space_name }}</div>\n            <div [class]=\"'status-text' + (status && !hide_all ? ' ' + status : '')\">\n                {{ (!hide_all ? status_display : null) || 'Not Bookable' }}\n            </div>\n            <div class=\"details\" *ngIf=\"!hide_all && show_details\">\n                <panel-space-details [space]=\"space\"></panel-space-details>\n            </div>\n        </div>\n    `,\n    styleUrls: ['./panel-details-display-v1.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class PanelDetailsDisplayV1Component extends BaseClass {\n\n    @Input()\n    show_title: boolean;\n\n    @Input()\n    space_name: string;\n\n    @Input()\n    status: string;\n\n    @Input()\n    space: Space;\n\n    @Input()\n    show_details: boolean;\n\n    @Input()\n    hide_all: boolean;\n\n    @Input()\n    status_display: string;\n\n    /**\n     * Show full room name if overflowing\n     */\n    public showTitle() {\n        this.show_title = true;\n        this.timeout('hide_title', () => (this.show_title = false), 3000);\n    }\n}\n","<div class=\"space-booking-details\">\n    <div class=\"details current\" *ngIf=\"space && space.current\">\n        <div class=\"time\" *ngIf=\"!hide_availability\">Booked until {{ space.current?.end_time }}</div>\n        <div class=\"title {{ titleClass }}\" *ngIf=\"!hide_title && !hide_details\">{{ space.current?.title }}</div>\n        <div class=\"host\" *ngIf=\"!hide_user && !hide_details\">{{ space.current?.organiser?.name }}</div>\n    </div>\n    <div class=\"details next\" *ngIf=\"space && space.next\">\n        <div class=\"time\" *ngIf=\"!hide_availability\">Next meeting at {{ space.next?.start_time }}</div>\n        <div class=\"title {{ titleClass }}\" *ngIf=\"!hide_title && !hide_details\">{{ space.next?.title }}</div>\n        <div class=\"host\" *ngIf=\"!hide_user && !hide_details\">{{ space.next?.organiser?.name }}</div>\n    </div>\n    <div class=\"details other\" *ngIf=\"space && space.current && space.next\">\n        <div class=\"time\" *ngIf=\"!hide_availability\">\n            Free {{ space.current ? 'at ' + space.current.end_time : '' }} {{ space.next ? 'until ' + space.next.start_time : '' }}\n        </div>\n    </div>\n    <div class=\"information\" *ngIf=\"title || description\">\n        <div class=\"title\">{{ title }}</div>\n        <div class=\"block\">\n            <div class=\"icon\" *ngIf=\"icon\">\n                <img [src]=\"icon\">\n            </div>\n            <div class=\"text\">{{ description }}</div>\n        </div>\n    </div>\n    <div class=\"bindings\" *ngIf=\"space\">\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"hide_details\" [(model)]=\"hide_details\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"hide_title\" [(model)]=\"hide_title\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"hide_availability\" [(model)]=\"hide_availability\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"hide_user\" [(model)]=\"hide_user\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"title\" [(model)]=\"title\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"description\" [(model)]=\"description\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"icon\" [(model)]=\"icon\"></i>\n    </div>\n</div>\n","\nimport { Component, Input } from '@angular/core';\n\nimport { Space } from '../../../../services/data/spaces/space.class';\n\n@Component({\n    selector: 'panel-space-details',\n    templateUrl: './space-details.component.html',\n    styleUrls: ['./space-details.component.scss']\n})\nexport class PanelSpaceDetailsComponentV1 {\n    /** Space with which to display bookings for */\n    @Input() public space: Space;\n    /** Secondary title for the space */\n    public title: string;\n    /** Description for the space */\n    public description: string;\n    /** Image that suppliments the description for the space */\n    public icon: { class?: string, value?: string, src?: string };\n\n    /** Whether to hide the booking timing details */\n    public hide_availability: boolean;\n    /** Whether to hide the current booking title */\n    public hide_title: boolean;\n    /** Whether to hide booking details(title and host) */\n    public hide_details: boolean;\n    /** Whether to hide booking host */\n    public hide_user: boolean;\n\n    public get titleClass(): string {\n        // Determine the title css class by the length of string, \n        // if both bookings are active add 80 for the extra host and time lines.\n        const len = (this.space?.current?.title + this.space?.next?.title).length + (!!this.space?.current ? 80 : 0);\n        if (len > 370) {\n            return 'smallest';\n        } else if (len > 210) {\n            return 'smaller';\n        } else {\n            return '';\n        }\n    }\n}\n\n","\n<div class=\"shell\">\n    <div class=\"view\">\n        <router-outlet></router-outlet>\n    </div>\n    <div class=\"bindings\" *ngIf=\"system_id\">\n        <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"room_name\" [(model)]=\"system_name\" (modelChange)=\"checkLoading()\"></i>\n        <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"reload\" (modelChange)=\"reloadAt($event)\"></i>\n    </div>\n    <div class=\"loading-block\" *ngIf=\"system_id && !system_name\">\n        <div class=\"info-block\">\n            <div class=\"title\">Connecting to system({{system_id}})...</div>\n            <div class=\"text\">Attempting to connect to engine server...</div>\n            <div class=\"text message\">{{info_messages[message_index]}}</div>\n            <div class=\"icon\">\n                <a-spinner ring-rotate color=\"#000\"></a-spinner>\n            </div>\n        </div>\n    </div>\n    <div class=\"version\" *ngIf=\"show_version\" [class.loading]=\"system_id && !system_name\">\n        Version: {{ version }}<br>\n        Built: {{ build }}\n    </div>\n</div>","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { BaseComponent } from '../shared/base.component';\nimport { ApplicationService } from '../services/app.service';\nimport { version, build } from '../shared/globals/application';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'app-shell-wrapper',\n    templateUrl: './shell.component.html',\n    styleUrls: ['./shell.component.scss']\n})\nexport class ShellWrapperComponent extends BaseComponent {\n    /** Whether application has system */\n    public has_system: boolean;\n    /** ID of the active system */\n    public system_id: string;\n    /** Name of the active system */\n    public system_name: string;\n    /** List of informational messages to display while connecting to the active system */\n    public info_messages: string[] = [\n        'If this message persists, check you network connection and then try reloading this page.',\n        'It seems to be taking a while. Make sure the selected system is valid.',\n        'Still nothing, huh. Are you authenticated? Do you have have a network connection?',\n        'Try reloading the page. If this persists contact your administrator.'\n    ];\n    /** Index of the info message being displayed */\n    public message_index: number = 0;\n\n    /** Current version of the application */\n    public get version(): string {\n        return version;\n    }\n\n    /** Current version of the application */\n    public get build(): string {\n        const now = dayjs();\n        const built = build.format('DD/MM/YY HH:mm');\n        return built;\n    }\n\n    public get show_version(): boolean {\n        return this._service.setting('app.show_version');\n    }\n\n    constructor(private _service: ApplicationService, private _router: Router) {\n        super();\n    }\n\n    /**\n     * Check if the system data has loaded\n     * @param delay Delay before first loading message update\n     */\n    public checkLoading(delay: number = 3000) {\n        if (!this.system_name) {\n            this.message_index = 0;\n            this.timeout('update_msg', () => this.updateMessage(), delay);\n        }\n    }\n\n    /**\n     * Update the index of the info message displayed\n     */\n    private updateMessage(): void {\n        if (!this.system_id) { return; }\n        this.message_index++;\n        if (this.message_index === this.info_messages.length) {\n            this.message_index--;\n            return;\n        }\n        this.timeout('update_msg', () => this.updateMessage(), 3000);\n    }\n\n    /**\n     * Schedule a reload the UI for a future time\n     * @param time Time to reload the UI\n     */\n    public reloadAt(time: number): void {\n        if (time && typeof time === 'number') {\n            this.clearTimeout('reload_ui');\n            const now = dayjs().startOf('s');\n            const reload_at_time = dayjs((time || 0) * 1000).startOf('s');\n            const diff = reload_at_time.diff(now, 'ms');\n            if (diff > 100) {\n                this.timeout('reload_ui', () => location.reload(true), diff);\n            }\n        }\n        this.timeout('update_msg', () => this.updateMessage(), 3000);\n    }\n}\n","export const environment = {\n  production: true\n};\n","\n/**\n * GENERAL APPLICATION SETTINGS\n */\nconst general = {\n    menu: {\n        items: [],\n        copyright: 'McKinsey & Company',\n        position: 'left'\n    }\n};\n/**\n * HOME PAGE SETTINGS\n */\nconst home = {\n    background: 'assets/img/skyline.jpg',\n    tiles: [\n        {\n            name: 'Book',\n            route: '/book/spaces',\n            icon: {\n                type: 'icon',\n                class: 'custom-book'\n            }\n        },\n        {\n            name: 'Maps',\n            route: '/explore/space',\n            icon: {\n                type: 'icon',\n                class: 'custom-spaces'\n            }\n        },\n        {\n            name: 'My Day',\n            route: '/schedule',\n            icon: {\n                type: 'icon',\n                class: 'custom-schedule'\n            }\n        }\n    ]\n};\n/**\n * HELP/SUPPORT SETTINGS\n */\nconst help = {\n    tiles: [],\n    columns: 2\n};\n/**\n * BOOKING FLOW SETTINGS\n */\nconst booking = {\n    booking_types: [\n        { name: 'Internal', id: 'internal' },\n        { name: 'Client', id: 'client' },\n        { name: 'External', id: 'external' },\n        { name: 'Setup', id: 'setup' },\n        { name: 'Training', id: 'training' },\n        { name: 'Interview', id: 'interview' }\n    ],\n    show_fields: [\n        'attendees',\n        'body',\n        'catering',\n        'date',\n        'duration',\n        'organiser',\n        'recurrence',\n        'title',\n        'type',\n        'all_day',\n        'needs_space',\n        'has_catering'\n    ],\n    html_body: true,\n    multiple_spaces: true,\n    desk_start: 9\n};\n/*===========================*\\\n||  SPACE LISTING SETTINGS   ||\n\\*===========================*/\nconst space_display = {\n    show_images: false\n};\n/*===========================*\\\n||  USER DIRECTORY SETTINGS  ||\n\\*===========================*/\nconst directory = {\n    show_avatars: true,\n    min_search_length: 3\n};\n/*===========================*\\\n||    EXPLORE MAP SETTINGS   ||\n\\*===========================*/\nconst explore = {\n    colors: {\n        'space-available': '#43a047',\n        'space-requestable': '#ffb300',\n        'space-unavailable': '#e53935',\n        'space-not-bookable': '#ccc',\n        'desk-available': '#43a047',\n        'desk-available-stroke': '#1b5e20',\n        'desk-unavailable': '#e53935',\n        'desk-unavailable-stroke': '#b71c1c',\n        'desk-reserved': '#ffb300',\n        'desk-reserved-stroke': '#ff6f00',\n        'desk-not-bookable': '#fff',\n        'desk-not-bookable-stroke': '#ccc',\n        'zone-low': '#43a047',\n        'zone-medium': '#ffb300',\n        'zone-high': '#e53935'\n    },\n    can_select_building: true,\n    show_legend_group_names: false,\n    show_timeline: true,\n    legend: {\n        General: [\n            { key: 'space-available', name: 'Available' },\n            { key: 'space-requestable', name: 'Available by request' },\n            { key: 'space-unavailable', name: 'In use' },\n            { key: 'space-not-bookable', name: 'Not Bookable' }\n        ]\n    }\n};\n/**\n * ROOT APPLICATION SETTINGS\n */\nconst app = {\n    title: 'McKinsey & Company',\n    description: 'McKinsey & Company Booking Panel UI written with Angular Framework',\n    short_name: 'PANEL',\n    logo_light: {\n        type: 'img',\n        src: 'assets/img/logo.svg',\n        background: ''\n    },\n    logo_dark: {\n        type: 'img',\n        src: 'assets/img/logo-inverse.svg',\n        background: ''\n    },\n    heap_io: {\n        app_id: 3540602199,\n        force_ssl: true,\n        secure_cookie: true,\n        disable_text_capture: true,\n        cookie_path: '/bookings/'\n    },\n    general,\n    home,\n    help,\n    booking,\n    space_display,\n    directory,\n    explore\n};\n\n/**\n * ROOT SETTIGNS\n */\nexport const DEFAULT_SETTINGS = {\n    debug: true,\n    composer: {\n        domain: '',\n        route: '/bookings',\n        protocol: '',\n        port: '',\n        use_domain: false,\n        local_login: false\n    },\n    app,\n    mock: false\n};\n","// IMPORTANT: THIS FILE IS AUTO GENERATED! DO NOT MANUALLY EDIT OR CHECKIN!\n/* tslint:disable */\nexport const VERSION = {\n    \"dirty\": false,\n    \"raw\": \"ce60965\",\n    \"hash\": \"ce60965\",\n    \"distance\": null,\n    \"tag\": null,\n    \"semver\": null,\n    \"suffix\": \"ce60965\",\n    \"semverString\": null,\n    \"version\": \"0.0.0\",\n    \"core_version\": \"1.0.0\",\n    \"time\": 1669686233877\n};\n/* tslint:enable */\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport * as dayjs from 'dayjs';\nimport * as AdvancedFormat from 'dayjs/plugin/advancedFormat';\n\nif (environment.production) {\n    enableProdMode();\n}\n\ndayjs.extend(AdvancedFormat);\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n    .catch(err => console.error(err));\n"]}