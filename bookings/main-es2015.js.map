{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/overlays/booking-modal/booking-modal.component.html","./src/app/overlays/booking-modal/booking-modal.component.ts","./src/app/overlays/confirm-modal/confirm-modal.component.html","./src/app/overlays/confirm-modal/confirm-modal.component.ts","./src/app/overlays/embedded-control-modal/embedded-control-modal.component.html","./src/app/overlays/embedded-control-modal/embedded-control-modal.component.ts","./src/app/overlays/overlays.module.ts","./src/app/services/app.service.ts","./src/app/services/data/base-api.class.ts","./src/app/services/data/base.service.ts","./src/app/services/data/bookings/booking.class.ts","./src/app/services/data/bookings/booking.utilities.ts","./src/app/services/data/bookings/bookings.service.ts","./src/app/services/data/organisation/building.class.ts","./src/app/services/data/organisation/organisation.class.ts","./src/app/services/data/organisation/organisation.service.ts","./src/app/services/data/polling/polling.service.ts","./src/app/services/data/spaces/space.class.ts","./src/app/services/data/spaces/space.utilities.ts","./src/app/services/data/spaces/spaces.service.ts","./src/app/services/data/systems-manager/systems-manager.service.ts","./src/app/services/data/users/user.class.ts","./src/app/services/data/users/user.utilities.ts","./src/app/services/data/users/users.service.ts","./src/app/services/hotkeys.service.ts","./src/app/services/settings.service.ts","./src/app/shared/base.class.ts","./src/app/shared/base.component.ts","./src/app/shared/components/duration-field/duration-field.component.html","./src/app/shared/components/duration-field/duration-field.component.ts","./src/app/shared/components/time-field/time-field.component.html","./src/app/shared/components/time-field/time-field.component.ts","./src/app/shared/components/user-search-field/user-search-field.component.html","./src/app/shared/components/user-search-field/user-search-field.component.ts","./src/app/shared/globals/application.ts","./src/app/shared/globals/form-fields.ts","./src/app/shared/globals/overlay-register.ts","./src/app/shared/mocks/index.ts","./src/app/shared/mocks/systems.mock.ts","./src/app/shared/shared.module.ts","./src/app/shared/utilities/api.utilities.ts","./src/app/shared/utilities/formatting.utilities.ts","./src/app/shared/utilities/general.utilities.ts","./src/app/shared/utilities/validation.utilities.ts","./src/app/shell/bootstrap/bootstrap.component.html","./src/app/shell/bootstrap/bootstrap.component.ts","./src/app/shell/panel-array/panel-array.component.html","./src/app/shell/panel-array/panel-array.component.ts","./src/app/shell/panel-select/panel-select.component.html","./src/app/shell/panel-select/panel-select.component.ts","./src/app/shell/panel/booking-actions/booking-actions.component.html","./src/app/shell/panel/booking-actions/booking-actions.component.ts","./src/app/shell/panel/custom-actions/custom-actions.component.html","./src/app/shell/panel/custom-actions/custom-actions.component.ts","./src/app/shell/panel/panel.component.html","./src/app/shell/panel/panel.component.ts","./src/app/shell/panel/space-details/space-details.component.html","./src/app/shell/panel/space-details/space-details.component.ts","./src/app/shell/panel/timeline/timeline.component.html","./src/app/shell/panel/timeline/timeline.component.ts","./src/app/shell/shell.component.html","./src/app/shell/shell.component.ts","./src/environments/environment.ts","./src/environments/version.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ShellWrapperComponent } from './shell/shell.component';\r\nimport { BootstrapComponent } from './shell/bootstrap/bootstrap.component';\r\nimport { BookingPanelComponent } from './shell/panel/panel.component';\r\nimport { BookingPanelArrayComponent } from './shell/panel-array/panel-array.component';\r\nimport { BookingPanelSelectComponent } from './shell/panel-select/panel-select.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: ShellWrapperComponent,\r\n        children: [\r\n            { path: 'bootstrap', component: BootstrapComponent },\r\n            { path: 'panel/:system_id', component: BookingPanelComponent },\r\n            { path: 'panel-array', component: BookingPanelArrayComponent },\r\n            { path: 'panel-select', component: BookingPanelSelectComponent },\r\n            { path: '**', redirectTo: 'bootstrap' }\r\n        ]\r\n    },\r\n    { path: '**', redirectTo: 'bootstrap' }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes, { useHash: true })],\r\n    exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\n","<div class=\"app\">\r\n    <router-outlet></router-outlet>\r\n</div>\r\n","import { Component, ViewEncapsulation } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./styles/app.component.scss', './styles/custom-element.styles.scss', './styles/native-element.styles.scss'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class AppComponent {\r\n    constructor() {\r\n        (window as any).app_loaded = true;\r\n    }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport './shared/mocks';\r\n\r\nimport { ComposerModule } from '@acaprojects/ngx-composer';\r\nimport { AGoogleAnalyticsModule } from '@acaprojects/ngx-google-analytics';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { ServiceWorkerModule } from '@angular/service-worker';\r\nimport { environment } from '../environments/environment';\r\n\r\nimport { SharedOverlaysModule } from './overlays/overlays.module';\r\nimport { SharedContentModule } from './shared/shared.module';\r\n\r\nimport { ShellWrapperComponent } from './shell/shell.component';\r\nimport { BootstrapComponent } from './shell/bootstrap/bootstrap.component';\r\nimport { BookingPanelComponent } from './shell/panel/panel.component';\r\nimport { PanelTimelineComponent } from './shell/panel/timeline/timeline.component';\r\nimport { PanelSpaceDetailsComponent } from './shell/panel/space-details/space-details.component';\r\nimport { PanelBookingActionsComponent } from './shell/panel/booking-actions/booking-actions.component';\r\nimport { PanelCustomActionsComponent } from './shell/panel/custom-actions/custom-actions.component';\r\nimport { BookingPanelArrayComponent } from './shell/panel-array/panel-array.component';\r\nimport { BookingPanelSelectComponent } from './shell/panel-select/panel-select.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        ShellWrapperComponent,\r\n        BootstrapComponent,\r\n        BookingPanelComponent,\r\n        PanelTimelineComponent,\r\n        PanelSpaceDetailsComponent,\r\n        PanelBookingActionsComponent,\r\n        PanelCustomActionsComponent,\r\n        BookingPanelArrayComponent,\r\n        BookingPanelSelectComponent\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        BrowserAnimationsModule,\r\n        AppRoutingModule,\r\n        HttpClientModule,\r\n        FormsModule,\r\n        ComposerModule,\r\n        AGoogleAnalyticsModule,\r\n        SharedOverlaysModule,\r\n        SharedContentModule,\r\n        ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production })\r\n    ],\r\n    providers: [],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n    constructor() {\r\n        console.log('Production:', !!environment.production);\r\n    }\r\n}\r\n","<div class=\"modal booking\" widget [class.is-loading]=\"loading\" [@show] *ngIf=\"!closing\">\r\n    <div class=\"header\">\r\n        <div class=\"text\">New Booking</div>\r\n    </div>\r\n    <div class=\"body\" *ngIf=\"!loading\">\r\n        <div class=\"form\" *ngIf=\"booking\">\r\n            <a-dynamic-form [fields]=\"booking.form_fields\"></a-dynamic-form>\r\n        </div>\r\n    </div>\r\n    <div class=\"body\" *ngIf=\"loading\">\r\n        <div class=\"info-block\">\r\n            <div class=\"icon\">\r\n                <a-spinner circle-ring color=\"#000\"></a-spinner>\r\n            </div>\r\n            <div class=\"text\">Processing request...</div>\r\n        </div>\r\n    </div>\r\n    <div class=\"footer\" *ngIf=\"!loading\">\r\n        <button widget name=\"close\" (tapped)=\"close()\">Cancel</button>\r\n        <button widget name=\"save\" (tapped)=\"save()\">Save</button>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { animate, style, transition, trigger } from '@angular/animations';\r\nimport { OverlayItem } from '@acaprojects/ngx-overlays';\r\n\r\nimport { ApplicationService } from '../../services/app.service';\r\nimport { BaseComponent } from '../../shared/base.component';\r\nimport { Booking } from '../../services/data/bookings/booking.class';\r\nimport { OVERLAY_REGISTER } from '../../shared/globals/overlay-register';\r\n\r\nimport * as dayjs from 'dayjs';\r\n\r\nexport interface BookingData {\r\n    booking: Booking;\r\n    on_error: () => void;\r\n    close: () => void;\r\n}\r\n\r\n@Component({\r\n    selector: 'booking-modal',\r\n    templateUrl: './booking-modal.component.html',\r\n    styleUrls: ['./booking-modal.component.scss'],\r\n    animations: [\r\n        trigger('show', [\r\n            transition(':enter', [\r\n                style({ opacity: 0, transform: 'translateX(100%) scale(0)' }),\r\n                animate(200, style({ opacity: 1, transform: 'translateX(0%) scale(1)' }))\r\n            ]),\r\n            transition(':leave', [\r\n                style({ opacity: 1, transform: 'translateX(0%) scale(1)' }),\r\n                animate(\r\n                    200,\r\n                    style({\r\n                        opacity: 0,\r\n                        transform: 'translateX(-100%) scale(0)'\r\n                    })\r\n                )\r\n            ])\r\n        ])\r\n    ]\r\n})\r\nexport class BookingModalComponent extends BaseComponent implements OnInit {\r\n    /** Whether modal is closing */\r\n    public closing: boolean;\r\n    /** New Booking instance */\r\n    public booking: Booking;\r\n    /** Whether the modal is processing a booking request */\r\n    public loading: boolean;\r\n\r\n    constructor(private item: OverlayItem, private service: ApplicationService) {\r\n        super();\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n        this.booking = new Booking(this.service.Bookings, {\r\n            date: this.item.data.date,\r\n            form_metadata: { ...this.item.data }\r\n        });\r\n        const space_field = this.booking.form_fields.find(field => field.key === 'space');\r\n        if (this.item.data.space && space_field) {\r\n            space_field.setValue(this.item.data.space);\r\n        }\r\n        const date_field = this.booking.form_fields.find(field => field.key === 'date');\r\n        if (date_field) {\r\n            date_field.setValue(this.item.data.date || dayjs().valueOf());\r\n        }\r\n        const title_field = this.booking.form_fields.find(field => field.key === 'title');\r\n        if (title_field) {\r\n            title_field.setValue(this.item.data.title || '');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Closes the modal\r\n     */\r\n    public close() {\r\n        this.closing = true;\r\n        this.timeout('close', () => this.item.close());\r\n    }\r\n\r\n    /**\r\n     * Post form data\r\n     */\r\n    public save() {\r\n        const fields = this.booking.form_fields;\r\n        fields.forEach(i => i.control.markAsDirty());\r\n        const valid = fields.reduce(\r\n            (fields_valid, field) =>\r\n                fields_valid &&\r\n                (field.control.valid ||\r\n                    (field.children &&\r\n                        field.children.length &&\r\n                        field.children.reduce(\r\n                            (sub_fields_valid, sub_field) => sub_fields_valid && sub_field.control.valid,\r\n                            true\r\n                        ))),\r\n            true\r\n        );\r\n        if (this.booking && valid) {\r\n            this.loading = true;\r\n            this.item.post('finish', {\r\n                booking: this.booking,\r\n                on_error: () => (this.loading = false),\r\n                close: () => this.close()\r\n            });\r\n        } else {\r\n            console.log(\r\n                'Invalid form fields. Valid states:',\r\n                fields.map(field => `${field.key}:${field.control.valid}`)\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nOVERLAY_REGISTER.push({\r\n    id: 'booking',\r\n    config: { content: BookingModalComponent, config: 'modal' }\r\n});\r\n","<div class=\"confirm modal\" widget [@show] *ngIf=\"!closing\">\r\n    <div class=\"header\">\r\n        <div class=\"text\">{{ title || 'Confirm' }}</div>\r\n    </div>\r\n    <div class=\"body\">\r\n        <div class=\"icon\" *ngIf=\"icon\">\r\n            <i *ngIf=\"icon.class\" [class]=\"icon.class\">{{ icon.value }}</i>\r\n            <img *ngIf=\"!icon.class && icon.src\" [src]=\"icon.src\">\r\n        </div>\r\n        <div class=\"content\">\r\n            <p>{{ content || 'Are you sure?' }}</p>\r\n        </div>\r\n    </div>\r\n    <div class=\"footer\">\r\n        <button widget name=\"cancel\" (tapped)=\"close()\">Cancel</button>\r\n        <button widget name=\"accept\" (tapped)=\"accept()\">{{ action || 'Ok' }}</button>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { animate, style, transition, trigger } from '@angular/animations';\r\n\r\nimport { OverlayItem } from '@acaprojects/ngx-overlays';\r\n\r\nimport { BaseComponent } from '../../shared/base.component';\r\nimport { OVERLAY_REGISTER } from '../../shared/globals/overlay-register';\r\n\r\n@Component({\r\n    selector: 'confirm-modal',\r\n    templateUrl: './confirm-modal.component.html',\r\n    styleUrls: ['./confirm-modal.component.scss'],\r\n    animations: [\r\n        trigger('show', [\r\n            transition(':enter', [\r\n                style({ opacity: 0, transform: 'translateX(100%) scale(0)' }),\r\n                animate(200, style({ opacity: 1, transform: 'translateX(0%) scale(1)' }))\r\n            ]),\r\n            transition(':leave', [\r\n                style({ opacity: 1, transform: 'translateX(0%) scale(1)' }),\r\n                animate(200, style({ opacity: 0, transform: 'translateX(-100%) scale(0)' }))\r\n            ])\r\n        ])\r\n    ]\r\n})\r\nexport class ConfirmModalComponent extends BaseComponent implements OnInit {\r\n    /** Title of the confirm modal */\r\n    public title: string;\r\n    /** Body of the confirm modal */\r\n    public content: string;\r\n    /** Display text on the confirm button */\r\n    public action: string;\r\n    /** Display icon properties */\r\n    public icon: { class?: string; value?: string; src?: string };\r\n    /** Whether modal is closing */\r\n    public closing: boolean;\r\n\r\n    constructor(private item: OverlayItem) {\r\n        super();\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n        const data = this.item.data;\r\n        if (data) {\r\n            this.title = data.title || 'Confirm';\r\n            this.content = data.content || data.body || data.description || 'Confirm';\r\n            this.action = data.action || 'Ok';\r\n            this.icon = data.icon;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Close the modal\r\n     */\r\n    public close() {\r\n        this.closing = true;\r\n        this.timeout('close', () => this.item.close());\r\n\r\n    }\r\n\r\n    /**\r\n     * User confirmation of the content of the modal\r\n     */\r\n    public accept() {\r\n        this.item.post('finish');\r\n        this.close();\r\n    }\r\n}\r\n\r\nOVERLAY_REGISTER.push({ id: 'confirm', config: { content: ConfirmModalComponent, config: 'modal' } });\r\n","<div class=\"background\"></div>\r\n<div class=\"modal control\" [@show] (window:touchend)=\"reset()\" (window:mouseup)=\"reset()\">\r\n    <div class=\"control-frame\">\r\n        <iframe [src]=\"control_url | safe:'resource'\"></iframe>\r\n    </div>\r\n</div>\r\n<div class=\"overlay\">\r\n    <button widget class=\"action countdown\" (tapped)=\"reset()\" (contextmenu)=\"$event.preventDefault()\">{{ countdown }}</button>\r\n    <button widget class=\"action close\" (tapped)=\"close()\" (contextmenu)=\"$event.preventDefault()\">\r\n        <div class=\"icon\">\r\n            <i class=\"material-icons\">close</i>\r\n        </div>\r\n    </button>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { animate, keyframes, state, style, transition, trigger } from '@angular/animations';\r\n\r\nimport { OverlayItem } from '@acaprojects/ngx-overlays';\r\n\r\nimport { BaseComponent } from '../../shared/base.component';\r\nimport { OVERLAY_REGISTER } from '../../shared/globals/overlay-register';\r\n\r\n@Component({\r\n    selector: 'embedded-control-modal',\r\n    templateUrl: './embedded-control-modal.component.html',\r\n    styleUrls: ['./embedded-control-modal.component.scss'],\r\n    animations: [\r\n        trigger('show', [\r\n            transition(':enter', [style({ opacity: 0 }), animate(500, style({ opacity: 1 }))]),\r\n            transition(':leave', [style({ opacity: 1 }), animate(1000, style({ opacity: 0 }))]),\r\n        ]),\r\n    ],\r\n})\r\nexport class EmbeddedControlModalComponent extends BaseComponent implements OnInit {\r\n    /** Control URL to embed into the modal */\r\n    public control_url: string;\r\n    /** Display value for the time remain until the modal automatically closes */\r\n    public countdown: number;\r\n\r\n    constructor(private item: OverlayItem) {\r\n        super();\r\n        this.countdown = 30;\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n        const data = this.item.data;\r\n        if (data) {\r\n            this.control_url = data.control_url;\r\n        }\r\n        if (!this.control_url) {\r\n            this.close();\r\n        }\r\n        this.countdown = 30;\r\n        this.interval('countdown', () => this.tick(), 1000);\r\n    }\r\n\r\n    /**\r\n     * Close the modal\r\n     */\r\n    public close() {\r\n        this.item.close();\r\n        this.countdown = 30;\r\n    }\r\n\r\n    /**\r\n     * User confirmation of the content of the modal\r\n     */\r\n    public reset() {\r\n        this.countdown = 30;\r\n        this.interval('countdown', () => this.tick(), 1000);\r\n    }\r\n\r\n    /**\r\n     * Decrement countdown and close if 0\r\n     */\r\n    public tick() {\r\n        if (this.countdown <= 0) {\r\n            this.close();\r\n        }\r\n        this.countdown--;\r\n    }\r\n}\r\n\r\nOVERLAY_REGISTER.push({ id: 'embeded-control', config: { content: EmbeddedControlModalComponent, config: 'modal' } });\r\n","\r\nimport { NgModule, Type } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { SharedContentModule } from '../shared/shared.module';\r\n\r\nimport { ConfirmModalComponent } from './confirm-modal/confirm-modal.component';\r\nimport { EmbeddedControlModalComponent } from './embedded-control-modal/embedded-control-modal.component';\r\nimport { BookingModalComponent } from './booking-modal/booking-modal.component';\r\n\r\nconst OVERLAYS: Type<any>[] = [\r\n    ConfirmModalComponent,\r\n    EmbeddedControlModalComponent,\r\n    BookingModalComponent\r\n];\r\n\r\n@NgModule({\r\n    declarations: [\r\n        ...OVERLAYS\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        SharedContentModule\r\n    ],\r\n    exports: [\r\n        ...OVERLAYS\r\n    ],\r\n    entryComponents: [\r\n        ...OVERLAYS\r\n    ]\r\n})\r\nexport class SharedOverlaysModule {}\r\n","import { ApplicationRef, Injectable, NgZone } from '@angular/core';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { Router } from '@angular/router';\r\nimport { SwUpdate } from '@angular/service-worker';\r\n\r\nimport { ComposerService } from '@acaprojects/ngx-composer';\r\nimport { ComposerOptions } from '@acaprojects/ts-composer';\r\nimport { AOverlayService } from '@acaprojects/ngx-overlays';\r\nimport { GoogleAnalyticsService } from '@acaprojects/ngx-google-analytics';\r\n\r\nimport { Observable, BehaviorSubject, Subject, Subscription } from 'rxjs';\r\n\r\nimport { BaseClass } from '../shared/base.class';\r\nimport { SettingsService, ConsoleStream } from './settings.service';\r\nimport { HashMap } from '../shared/utilities/types.utilities';\r\n\r\nimport { OVERLAY_REGISTER } from '../shared/globals/overlay-register';\r\nimport { ComposerSettings } from '../shared/utilities/settings.interfaces';\r\n\r\nimport { HotkeysService } from './hotkeys.service';\r\nimport { OrganisationService } from './data/organisation/organisation.service';\r\nimport { UsersService } from './data/users/users.service';\r\nimport { BookingsService } from './data/bookings/bookings.service';\r\nimport { SpacesService } from './data/spaces/spaces.service';\r\nimport { SystemsManagerService } from './data/systems-manager/systems-manager.service';\r\nimport { PollingService } from './data/polling/polling.service';\r\nimport { first } from 'rxjs/operators';\r\n\r\ndeclare global {\r\n    interface Window {\r\n        application: ApplicationService;\r\n        mock: {\r\n            enabled: boolean;\r\n            backend: any;\r\n        };\r\n    }\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ApplicationService extends BaseClass {\r\n    /** List of previous routes for return navigation */\r\n    private _route_trail: string[] = [];\r\n    /** Map of state variables for Service */\r\n    protected _subjects: { [key: string]: BehaviorSubject<any> | Subject<any> } = {};\r\n    /** Map of observables for state variables */\r\n    protected _observers: { [key: string]: Observable<any> } = {};\r\n    /** Whether the application has stablised */\r\n    private _stable: boolean;\r\n\r\n    /** Whether the application has stablised */\r\n    public get is_stable(): boolean {\r\n        return this._stable || false;\r\n    }\r\n\r\n    constructor(\r\n        private _app_ref: ApplicationRef,\r\n        private _zone: NgZone,\r\n        private _title: Title,\r\n        private _router: Router,\r\n        private _cache: SwUpdate,\r\n        private _settings: SettingsService,\r\n        private _overlay: AOverlayService,\r\n        private _composer: ComposerService,\r\n        private _analytics: GoogleAnalyticsService,\r\n        private _hotkeys: HotkeysService,\r\n        private _systems: SystemsManagerService,\r\n        private _organisation: OrganisationService,\r\n        private _users: UsersService,\r\n        private _bookings: BookingsService,\r\n        private _spaces: SpacesService,\r\n        private _polling: PollingService\r\n    ) {\r\n        super();\r\n        this._organisation.parent = this._users.parent = this._bookings.parent\r\n            = this._spaces.parent = this._systems.parent = this._polling.parent = this;\r\n        this.set('system', null);\r\n        this.log('APP', `Waiting for Application to stablised...`, undefined, undefined, true);\r\n        this._app_ref.isStable.pipe(first(_ => _)).subscribe(() => {\r\n            this.log('APP', `Application has stablised.`, undefined, undefined, true);\r\n            this._zone.run(() => {\r\n                this._stable = true;\r\n                this.setupCache();\r\n                this.waitForSettings();\r\n                this.registerOverlays();\r\n            });\r\n        });\r\n    }\r\n\r\n    /** Overlay service */\r\n    public get Overlay(): AOverlayService {\r\n        return this._overlay;\r\n    }\r\n\r\n    /** Analytics service */\r\n    public get Analytics() {\r\n        return this._analytics;\r\n    }\r\n\r\n    /** Hotkeys service */\r\n    public get Hotkeys() {\r\n        return this._hotkeys;\r\n    }\r\n\r\n    /** Systems Manager service */\r\n    public get Systems() {\r\n        return this._systems;\r\n    }\r\n\r\n    /** Organisation service */\r\n    public get Organisation() {\r\n        return this._organisation;\r\n    }\r\n\r\n    /** Users service */\r\n    public get Users() {\r\n        return this._users;\r\n    }\r\n\r\n    /** Bookings service */\r\n    public get Bookings() {\r\n        return this._bookings;\r\n    }\r\n\r\n    /** Spaces service */\r\n    public get Spaces() {\r\n        return this._spaces;\r\n    }\r\n\r\n    /**\r\n     * Get a setting from the settings service\r\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\r\n     */\r\n    public setting(key: string): any {\r\n        return this._settings.get(key);\r\n    }\r\n\r\n    /** Name of the application */\r\n    public get name() {\r\n        return this._settings.app_name;\r\n    }\r\n\r\n    /**\r\n     * Title of the page\r\n     */\r\n    public set title(value: string) {\r\n        const title_suffix = this.setting('app.title');\r\n        this._title.setTitle(`${value ? value + ' | ' : ''}${title_suffix}`);\r\n    }\r\n\r\n    /**\r\n     * Title of the page\r\n     */\r\n    public get title(): string {\r\n        return this._title.getTitle();\r\n    }\r\n\r\n    /** Root API Endpoint */\r\n    public get endpoint() {\r\n        return `/api/staff/`;\r\n    }\r\n\r\n    /** Root API Endpoint for engine */\r\n    public get engine_endpoint() {\r\n        return `${this._composer.auth.api_endpoint}/`;\r\n    }\r\n\r\n    /** Get websocket */\r\n    public get websocket() {\r\n        return this._composer.realtime;\r\n    }\r\n\r\n    /**\r\n     * Create notification popup\r\n     * @param type CSS Class to add to the notification\r\n     * @param msg Message to display on the notificaiton\r\n     * @param action Display text for the callback action\r\n     * @param on_action Callback of action on the notification\r\n     */\r\n    public notify(type: string, msg: string, action?: string, on_action?: () => void): void {\r\n        const content = `<div class=\"icon\"><i class=\"material-icons\"></i></div><div class=\"text\">${msg}</div>`;\r\n        this._overlay.notify(content, action, on_action, type);\r\n    }\r\n\r\n    /**\r\n     * Create success notification popup\r\n     * @param msg Message to display on the notificaiton\r\n     * @param action Display text for the callback action\r\n     * @param on_action Callback of action on the notification\r\n     */\r\n    public notifySuccess(msg: string, action?: string, on_action?: () => void): void {\r\n        this.notify('success', msg, action, on_action);\r\n    }\r\n\r\n    /**\r\n     * Create success notification popup\r\n     * @param msg Message to display on the notificaiton\r\n     * @param action Display text for the callback action\r\n     * @param on_action Callback of action on the notification\r\n     */\r\n    public notifyError(msg: string, action?: string, on_action?: () => void): void {\r\n        this.notify('error', msg, action, on_action);\r\n    }\r\n\r\n    /**\r\n     * Create info notification popup\r\n     * @param msg Message to display on the notificaiton\r\n     * @param action Display text for the callback action\r\n     * @param on_action Callback of action on the notification\r\n     */\r\n    public notifyInfo(msg: string, action?: string, on_action?: () => void): void {\r\n        this.notify('info', msg, action, on_action);\r\n    }\r\n\r\n    /**\r\n     * Log data to the browser console\r\n     * @param type Type of message\r\n     * @param msg Message body\r\n     * @param args array of argments to log to the console\r\n     * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\r\n     * @param force Whether to force message to be emitted when debug is disabled\r\n     */\r\n    public log(type: string, msg: string, args?: any, stream: ConsoleStream = 'debug', force: boolean = false): void {\r\n        this._settings.log(type, msg, args, stream, force);\r\n    }\r\n\r\n    /**\r\n     * Navigate to the given path\r\n     * @param path Path or array of path parts\r\n     * @param query Key value pairs to add to the URL as query parameters\r\n     */\r\n    public navigate(path: string | string[], query?: HashMap): void {\r\n        const route = path instanceof Array ? [...path] : [path];\r\n        this._route_trail.push(this._router.url);\r\n        this._router.navigate(route, query ? { queryParams: query } : { preserveFragment: true });\r\n    }\r\n\r\n    /**\r\n     * Navigate to the previous location in the route trail\r\n     */\r\n    public navigateBack(): void {\r\n        if (this._route_trail && this._route_trail.length > 0) {\r\n            const path = this._route_trail.pop();\r\n            this._router.navigate([path]);\r\n        } else {\r\n            this._router.navigate(['']);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get the current value of the named property\r\n     * @param name Property name\r\n     */\r\n    public get<U = any>(name: string): U {\r\n        return this._subjects[name] && this._subjects[name] instanceof BehaviorSubject\r\n            ? (this._subjects[name] as BehaviorSubject<U>).getValue()\r\n            : null;\r\n    }\r\n\r\n\r\n    /**\r\n     * Listen to value change of the named property\r\n     * @param name Property name\r\n     * @param next Callback for value changes\r\n     */\r\n    public listen<U = any>(name: string, next: (_: U) => void): Subscription {\r\n        return this._observers[name] ? this._observers[name].subscribe(next) : null;\r\n    }\r\n\r\n    /**\r\n     * Update the value of the named property\r\n     * @param name Property name\r\n     * @param value New value\r\n     */\r\n    public set<U = any>(name: string, value: U): void {\r\n        if (!this._subjects[name]) {\r\n            this._subjects[name] = new BehaviorSubject<U>(value);\r\n            this._observers[name] = this._subjects[name].asObservable();\r\n        } else {\r\n            this._subjects[name].next(value);\r\n        }\r\n    }\r\n\r\n    /** Wait for settings to be initialised before setting up the application */\r\n    private waitForSettings() {\r\n        // Wait until the settings have loaded before initialising\r\n        this.subscription('setting_setup', this._settings.initialised.subscribe((setup) => {\r\n            if (setup) {\r\n                this.init();\r\n                this.unsub('setting_setup');\r\n            }\r\n        }));\r\n    }\r\n\r\n    /**\r\n     * Initialise application services\r\n     */\r\n    private init(): void {\r\n        this.setupComposer();\r\n        // Setup analytics\r\n        this._analytics.enabled = !!this.setting('app.analytics.enabled');\r\n        if (this._analytics.enabled) {\r\n            this._analytics.load(this.setting('app.analytics.tracking_id'));\r\n        }\r\n        this._composer.initialised.pipe(first(_ => _)).subscribe(() => {\r\n            this._users.init();\r\n            this._organisation.init();\r\n            this._bookings.init();\r\n            this._spaces.init();\r\n            this._polling.init();\r\n            this._initialised.next(true);\r\n        });\r\n        // Add service to window if in debug mode\r\n        if (window.debug) {\r\n            window.application = this;\r\n        }\r\n        this._hotkeys.listen(['Shift', 'Backslash'], () => {\r\n            this.navigate('bootstrap', { clear: true });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Initialise the composer library comms\r\n     */\r\n    private setupComposer(): void {\r\n        this.log('SYSTEM', 'Setting up composer...');\r\n        // Get application settings\r\n        const settings: ComposerSettings = this.setting('composer') || {};\r\n        const protocol = settings.protocol || location.protocol;\r\n        const host = settings.domain || location.hostname;\r\n        const port = settings.port || location.port;\r\n        const url = settings.use_domain ? `${protocol}//${host}:${port}` : location.origin;\r\n        const route = settings.route || '';\r\n        const mock = this.setting('mock');\r\n        // Generate configuration object\r\n        const config: ComposerOptions = {\r\n            scope: 'public',\r\n            host: `${host}:${port}`,\r\n            auth_uri: `${url}/auth/oauth/authorize`,\r\n            token_uri: `${url}/auth/token`,\r\n            redirect_uri: `${location.origin}${route}/oauth-resp.html`,\r\n            handle_login: !settings.local_login,\r\n            mock\r\n        };\r\n        if (localStorage) {\r\n            localStorage.setItem('oauth_redirect', location.href);\r\n        }\r\n        this._composer.setup(config);\r\n        this.log('SYSTEM', 'Finsihed setting up composer.');\r\n    }\r\n\r\n    /**\r\n     * Setup handler for cache change events\r\n     */\r\n    private setupCache() {\r\n        this.unsub('app_stable');\r\n        this.log('CACHE', `Initialising cache...`);\r\n        if (this._cache.isEnabled) {\r\n            this.log('CACHE', `Listening to cache events...`);\r\n            this._cache.activateUpdate();\r\n            this.subscription('cache_update', this._cache.available.subscribe((event) => {\r\n                const current = `current version is ${event.current.hash}`;\r\n                const available = `available version is ${event.available.hash}`;\r\n                this.log('CACHE', `Update available: ${current} ${available}`);\r\n                this.activateUpdate()\r\n            }));\r\n            setInterval(() => {\r\n                this.log('CACHE', `Checking for updates...`);\r\n                this._cache.checkForUpdate();\r\n            }, 5 * 60 * 1000);\r\n        }\r\n        this._users.init();\r\n        this._organisation.init();\r\n        this._bookings.init();\r\n        this._spaces.init();\r\n        // Add service to window if in debug mode\r\n        if (window.debug) {\r\n            window.application = this;\r\n        }\r\n\r\n        this._hotkeys.listen(['Shift', 'Backslash'], () => {\r\n            this.navigate('bootstrap', { clear: true });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Update the cache and reload the page\r\n     */\r\n    private activateUpdate() {\r\n        if (this._cache.isEnabled) {\r\n            this.log('CACHE', `Activating changes to the cache...`);\r\n            this._cache.activateUpdate().then(() => location.reload(true));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Pre-register available overlays\r\n     */\r\n    private registerOverlays(): void {\r\n        if (OVERLAY_REGISTER) {\r\n            for (const overlay of OVERLAY_REGISTER) {\r\n                this._overlay.register(overlay.id, overlay.config);\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { ADynamicFormField } from '@acaprojects/ngx-dynamic-forms';\r\nimport { Subject } from 'rxjs';\r\n\r\nimport { BaseClass } from '../../shared/base.class';\r\nimport { HashMap } from '../../shared/utilities/types.utilities';\r\n\r\nexport interface IDataClassEvent {\r\n    type: string;\r\n    metadata: HashMap;\r\n}\r\n\r\nexport class BaseDataClass extends BaseClass {\r\n    /** Unique Identifier of the object */\r\n    readonly id: string;\r\n    /** Human readable name of the object */\r\n    readonly name: string;\r\n    /** Email address associated with the object */\r\n    readonly email: string;\r\n    /** Subject for change events to the class object */\r\n    readonly changeEvents = new Subject<IDataClassEvent>();\r\n    /** Form Fields for the object */\r\n    protected _form_fields: ADynamicFormField[];\r\n    /** Metadata to pass to form fields */\r\n    protected _form_metadata: HashMap;\r\n\r\n    constructor(protected service: any, raw_data: HashMap) {\r\n        super();\r\n        this.id = raw_data.id || raw_data.zone_id || raw_data.email || `${Math.floor(Math.random() * 9999999999)}`;\r\n        this.name = raw_data.name;\r\n        this.email = (raw_data.email || '').toLowerCase();\r\n        this._form_metadata = raw_data.form_metadata || {};\r\n    }\r\n\r\n    /** Get form field metadata for the object */\r\n    public get form_fields(): ADynamicFormField[] {\r\n        if (!this._form_fields) {\r\n            this._form_fields = this.initialiseFormFields();\r\n        }\r\n        return this._form_fields;\r\n    }\r\n\r\n    /** Whether form fields are valid */\r\n    public get valid(): boolean {\r\n        return this._form_fields ? this._form_fields.reduce((a, i) => a && i.isValid(), true) : false;\r\n    }\r\n\r\n    /** Whether the form has changes */\r\n    public get changes(): boolean {\r\n        return this.formChanges().length > 0;\r\n    }\r\n\r\n    /**\r\n     * Reset the values on the form to their initial state\r\n     */\r\n    public resetForm(): void {\r\n        if (this._form_fields) {\r\n            for (const field of this._form_fields) {\r\n                field.setValue(this[field.key]);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get a list of the field names that have changed values\r\n     */\r\n    public formChanges(): string[] {\r\n        const changed: string[] = [];\r\n        if (this._form_fields) {\r\n            for (const field of this._form_fields) {\r\n                if (field.getValue() !== this[field.key]) {\r\n                    changed.push(field.key);\r\n                }\r\n            }\r\n        }\r\n        return changed;\r\n    }\r\n\r\n    /**\r\n     * Save form changes to server\r\n     */\r\n    public save(): Promise<BaseDataClass> {\r\n        if (this.changes && this.service) {\r\n            this._form_fields.forEach(i => i.showErrors(true));\r\n            if (this.valid) {\r\n                const form = this.formValues();\r\n                return this.id\r\n                    ? this.service.update(this.id, form)\r\n                    : this.service.add(form);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Delete this item from the server\r\n     */\r\n    public delete(): Promise<void> {\r\n        if (this.id) {\r\n            return this.service.delete(this.id);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Run task for this item on the service\r\n     * @param task_name Name of the task\r\n     * @param parameters Parameters to pass to the task request\r\n     */\r\n    public runTask(task_name: string, parameters: HashMap): Promise<void> {\r\n        if (this.id) {\r\n            return this.service.task(this.id, task_name, parameters);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get a map of the field values\r\n     */\r\n    public toJSON(): HashMap {\r\n        if (!this._form_fields) {\r\n            this._form_fields = this.initialiseFormFields();\r\n        }\r\n        const json = this.formValues();\r\n        json.id = this.id;\r\n        delete json.changed_fields;\r\n        return json;\r\n    }\r\n\r\n    /**\r\n     * Emits change event\r\n     * @param type Type of change that has occurred\r\n     * @param metadata Supporting metadata for the event\r\n     */\r\n    public emit(type: string, metadata?: HashMap): void {\r\n        this.changeEvents.next({ type, metadata })\r\n    }\r\n\r\n    /**\r\n     * Make a copy of this object\r\n     */\r\n    public clone(): BaseDataClass {\r\n        return new BaseDataClass(this.service, this);\r\n    }\r\n\r\n    /**\r\n     * Make a copy of this object without identification data\r\n     */\r\n    public duplicate(): BaseDataClass {\r\n        return new BaseDataClass(this.service, { ...this, id: null, email: null });\r\n    }\r\n\r\n    /**\r\n     * Get the mapped values of the form fields\r\n     */\r\n    protected formValues(field_list: ADynamicFormField[] = this._form_fields, changes: boolean = true): HashMap {\r\n        const values: HashMap = {};\r\n        for (const field of field_list) {\r\n            if (field.children && field.children.length > 0) {\r\n                values[field.key] = this.formValues(field.children, false);\r\n            } else {\r\n                values[field.key] = field.getValue();\r\n            }\r\n        }\r\n        if (changes) {\r\n            values.changed_fields = this.formChanges();\r\n        }\r\n        return values;\r\n    }\r\n\r\n    /**\r\n     * Initialise the form field metadata for the field\r\n     */\r\n    protected initialiseFormFields(): ADynamicFormField[] {\r\n        const edit = !!this.id;\r\n        const fields: ADynamicFormField[] = [\r\n            new ADynamicFormField({\r\n                key: 'name',\r\n                type: 'input',\r\n                value: this.name\r\n            }),\r\n            new ADynamicFormField({\r\n                key: 'email',\r\n                type: 'input',\r\n                value: this.email,\r\n                required: true,\r\n                attributes: { type: 'email' }\r\n            })\r\n        ];\r\n        return fields;\r\n    }\r\n}\r\n","import { ComposerService } from '@acaprojects/ngx-composer';\r\nimport { EngineHttpClient } from '@acaprojects/ts-composer';\r\nimport { BehaviorSubject, Observable, Subscription, Subscriber, Subject } from 'rxjs';\r\n\r\nimport { BaseDataClass } from './base-api.class';\r\nimport { BaseClass } from '../../shared/base.class';\r\nimport { ApplicationService } from '../app.service';\r\nimport { HashMap } from '../../shared/utilities/types.utilities';\r\nimport { toQueryString } from '../../shared/utilities/api.utilities';\r\n\r\nexport interface IEngineResponse {\r\n    results: HashMap[];\r\n    total: number\r\n}\r\n\r\nexport class BaseAPIService<T = BaseDataClass> extends BaseClass {\r\n    /** Application service */\r\n    public parent: ApplicationService;\r\n    /** Display name of the service */\r\n    protected _name: string;\r\n    /** API Route of the service */\r\n    protected _api_route: string;\r\n    /** Map of state variables for Service */\r\n    protected _subjects: { [key: string]: BehaviorSubject<any> | Subject<any> } = {};\r\n    /** Map of observables for state variables */\r\n    protected _observers: { [key: string]: Observable<any> } = {};\r\n    /** Map of poll subscribers for API endpoints */\r\n    protected _subscribers: { [key: string]: Subscriber<any> } = {};\r\n    /** Map of promises for Service */\r\n    protected _promises: { [key: string]: Promise<any> } = {};\r\n    /** Comparison function for service items */\r\n    protected _compare: (a: T, b: T) => boolean = (a, b) => a === b || (a as any).id === (b as any).id;\r\n    /** Default filter function for list method */\r\n    protected _list_filter: (a: T) => boolean = (a) => !!a;\r\n\r\n    private get http(): EngineHttpClient {\r\n        return this._composer.http;\r\n    }\r\n\r\n    constructor(protected _composer: ComposerService) {\r\n        super();\r\n        this._name = 'Base';\r\n        this._api_route = 'base';\r\n        this.set('list', []);\r\n    }\r\n\r\n    /**\r\n     * Initailise service\r\n     */\r\n    public init() {\r\n        if (!this.parent || !this.parent.is_initialised) {\r\n            return this.timeout('init', () => this.init());\r\n        }\r\n        this.load().then(_ => this._initialised.next(true));\r\n    }\r\n\r\n    /**\r\n     * Get API route for the service\r\n     * @param engine Whether endpoint is using the application API or engine API\r\n     */\r\n    public route(engine: boolean = false) {\r\n        const endpoint = this.parent ? (engine ? this.parent.engine_endpoint : this.parent.endpoint) : '/api/';\r\n        return `${endpoint}${this._api_route}`;\r\n    }\r\n    /** API Route of the service */\r\n    public get api_route() {\r\n        return this._api_route;\r\n    }\r\n\r\n    /**\r\n     * Get a service related setting from the settings service\r\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\r\n     */\r\n    public setting(key: string) {\r\n        return this.parent ? this.parent.setting(`app.${this._name.toLowerCase()}.${key}`) : null;\r\n    }\r\n\r\n    /**\r\n     * Get the current value of the named property\r\n     * @param name Property name\r\n     */\r\n    public get<U = any>(name: string): U {\r\n        return this._subjects[name] && this._subjects[name] instanceof BehaviorSubject\r\n            ? (this._subjects[name] as BehaviorSubject<U>).getValue()\r\n            : null;\r\n    }\r\n\r\n\r\n    /**\r\n     * Listen to value change of the named property\r\n     * @param name Property name\r\n     * @param next Callback for value changes\r\n     */\r\n    public listen<U = any>(name: string, next: (_: U) => void): Subscription {\r\n        return this._observers[name] ? this._observers[name].subscribe(next) : null;\r\n    }\r\n\r\n    /**\r\n     * Update the value of the named property\r\n     * @param name Property name\r\n     * @param value New value\r\n     */\r\n    protected set<U = any>(name: string, value: U): void {\r\n        if (!this._subjects[name]) {\r\n            this._subjects[name] = new BehaviorSubject<U>(value);\r\n            this._observers[name] = this._subjects[name].asObservable();\r\n        } else {\r\n            this._subjects[name].next(value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get list of loaded items\r\n     * @param filterFn Function for filtering the list\r\n     */\r\n    public list(filterFn: (a: T) => boolean = this._list_filter): T[] {\r\n        const list = this.get('list') || [];\r\n        return list.reduce((a, i) => { if (filterFn(i)) { a.push(i); } return a; }, []);\r\n    }\r\n\r\n    /**\r\n     * Get item with the given id from the loaded items\r\n     * @param id ID of the item\r\n     */\r\n    public item(id: string): T {\r\n        const list = this.get('list') || [];\r\n        return list.find(i => i.id === id || i.email === id);\r\n    }\r\n\r\n    /**\r\n     * Query the index of the API route associated with this service\r\n     * @param query_params Map of query paramaters to add to the request URL\r\n     */\r\n    public query(query_params: HashMap = { update_list: true }): Promise<T[] | HashMap[]> {\r\n        let engine = false;\r\n        let cache = 1000;\r\n        if (query_params) {\r\n            engine = !!query_params.engine;\r\n            delete query_params.engine;\r\n            cache = query_params.cache || 1000;\r\n            delete query_params.cache;\r\n        }\r\n        const query = toQueryString(query_params);\r\n        const key = `query|${query}`;\r\n        if (!this._promises[key]) {\r\n            this._promises[key] = new Promise((resolve, reject) => {\r\n                const url = `${this.route(engine)}${query ? '?' + query : ''}`;\r\n                let result: T[] | HashMap[] = [];\r\n                this.http.get(url).subscribe(\r\n                    (d: IEngineResponse | HashMap[]) => {\r\n                        result = d && d instanceof Array\r\n                            ? d.map(i => this.process(i))\r\n                            : (d && !(d instanceof Array) && d.results\r\n                                ? d.results as HashMap[]\r\n                                : []);\r\n                    }, e => {\r\n                        reject(e);\r\n                        this._promises[key] = null;\r\n                    },\r\n                    () => {\r\n                        if ((!query || (query_params && query_params.update_list)) && result.length > 0 && result[0] instanceof BaseDataClass) {\r\n                            this.set('list', this.updateList(this.get('list'), result as T[]));\r\n                        }\r\n                        resolve(result);\r\n                        this.timeout(key, () => (this._promises[key] = null), cache);\r\n                    }\r\n                );\r\n            });\r\n        }\r\n        return this._promises[key];\r\n    }\r\n\r\n    /**\r\n     * Query the API route for a sepecific item\r\n     * @param id ID of the item\r\n     * @param query_params Map of query paramaters to add to the request URL\r\n     */\r\n    public show(id: string, query_params: HashMap = {}): Promise<T> {\r\n        let engine = false;\r\n        if (query_params) {\r\n            engine = !!query_params.engine;\r\n            delete query_params.engine;\r\n        }\r\n        const query = toQueryString(query_params);\r\n        const key = `show|${id}|${query}`;\r\n        if (!this._promises[key]) {\r\n            this._promises[key] = new Promise<T>((resolve, reject) => {\r\n                const url = `${this.route(engine)}/${id}${query ? '?' + query : ''}`;\r\n                let result: T = null;\r\n                this.http.get(url).subscribe(\r\n                    d => result = this.process(d),\r\n                    e => {\r\n                        reject(e);\r\n                        this._promises[key] = null;\r\n                    },\r\n                    () => {\r\n                        resolve(result);\r\n                        this.timeout(key, () => (this._promises[key] = null), 1000);\r\n                    }\r\n                );\r\n            });\r\n        }\r\n        return this._promises[key];\r\n    }\r\n\r\n    /**\r\n     * Make post request for a new item to the service\r\n     * @param form_data Data to post to the server\r\n     * @param query_params Map of query paramaters to add to the request URL\r\n     */\r\n    public add(form_data: HashMap, query_params: HashMap = {}): Promise<T> {\r\n        if (!this._promises.new_item) {\r\n            this._promises.new_item = new Promise<T>((resolve, reject) => {\r\n                const query = toQueryString(query_params);\r\n                const url = `${this.route(query_params.engine)}${query ? '?' + query : ''}`;\r\n                let result: T = null;\r\n                this.http.post(url, form_data).subscribe(\r\n                    d => (result = this.process(d)),\r\n                    e => {\r\n                        reject(e);\r\n                        this.analyticsEvent(`create-${this._name.toLowerCase()}-failed`);\r\n                        this._promises.new_item = null;\r\n                    },\r\n                    () => {\r\n                        resolve(result);\r\n                        this.set('list', this.updateList(this.get('list'), [result]));\r\n                        this.analyticsEvent(`create-${this._name.toLowerCase()}-success`);\r\n                        this._promises.new_item = null;\r\n                    }\r\n                );\r\n            });\r\n        }\r\n        return this._promises.new_item;\r\n    }\r\n\r\n    /**\r\n     * Perform API task for the given item ID\r\n     * @param id ID of the item\r\n     * @param task_name Name of the task\r\n     * @param form_data Map of data to pass to the API\r\n     */\r\n    public task<U = any>(id: string, task_name: string, form_data: HashMap = {}): Promise<U> {\r\n        const query = toQueryString(form_data);\r\n        const key = `task|${id}|${task_name}|${query}`;\r\n        if (!this._promises[key]) {\r\n            this._promises[key] = new Promise<U>((resolve, reject) => {\r\n                const post_data = { ...form_data, id, _task: task_name };\r\n                const url = `${this.route(form_data.engine)}/${id}/${task_name}`;\r\n                let result = null;\r\n                this.http.post(url, post_data).subscribe(\r\n                    d => result = d,\r\n                    e => {\r\n                        reject(e);\r\n                        this.analyticsEvent(`${this._name.toLowerCase()}-task-${task_name}-failed`, id);\r\n                        this._promises[key] = null;\r\n                    },\r\n                    () => {\r\n                        resolve(result as U);\r\n                        this.analyticsEvent(`${this._name.toLowerCase()}-task-${task_name}-success`, id);\r\n                        this.timeout(key, () => this._promises[key] = null, 1000);\r\n                    }\r\n                );\r\n            });\r\n        }\r\n        return this._promises[key];\r\n    }\r\n\r\n    /**\r\n     * Setup a poller for an API endpoint\r\n     * @param id Show request ID. Leave blank to poll on the query endpoint\r\n     * @param query_params Map of query paramaters to add to the polled URL\r\n     * @param delay Delay between each poll event\r\n     */\r\n    public poll(id?: string, query_params: HashMap = {}, delay: number = 5000): Observable<T | T[]> {\r\n        const key = `poll|${id || ''}|${toQueryString(query_params) || ''}`;\r\n        this.stopPoll(id, query_params);\r\n        this._subjects[key] = new Subject<T | T[]>();\r\n        this._observers[key] = this._subjects[key].asObservable();\r\n        const sub = this._subjects[key];\r\n        const query = { ...(query_params || {}), _poll: true };\r\n        if (id) {\r\n            this.show(id, query).then((d) => sub.next(d), e => sub.error(e));\r\n            this.interval(key, () => {\r\n                this.show(id, query).then((d) => sub.next(d), e => sub.error(e));\r\n            }, delay);\r\n        } else {\r\n            this.query(query).then((d) => sub.next(d), e => sub.error(e));\r\n            this.interval(key, () => {\r\n                this.query(query).then((d) => sub.next(d), e => sub.error(e));\r\n            }, delay);\r\n        }\r\n        return this._observers[key];\r\n    }\r\n\r\n    /**\r\n     * Destroy poller\r\n     * @param id\r\n     * @param query_params\r\n     */\r\n    public stopPoll(id?: string, query_params: HashMap = {}) {\r\n        const key = `poll|${id || ''}|${toQueryString(query_params) || ''}`;\r\n        if (this._subjects[key]) {\r\n            this._subjects[key].complete();\r\n            this._subjects[key] = null;\r\n            this._observers[key] = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Make put request for changes to the item with the given id\r\n     * @param id ID of the item being updated\r\n     * @param form_data New values for the item\r\n     * @param query_params Map of query paramaters to add to the request URL\r\n     */\r\n    public update(id: string, form_data: HashMap, query_params: HashMap = {}): Promise<T> {\r\n        const key = `update|${id}`;\r\n        if (!this._promises[key]) {\r\n            this._promises[key] = new Promise<T>((resolve, reject) => {\r\n                const query = toQueryString(query_params);\r\n                const url = `${this.route(query_params.engine)}/${id}${query ? '?' + query : ''}`;\r\n                let result: T = null;\r\n                this.http.put(url, form_data).subscribe(\r\n                    d => (result = this.process(d)),\r\n                    e => {\r\n                        reject(e);\r\n                        this.analyticsEvent(`update-${this._name.toLowerCase()}-failed`, id);\r\n                        this._promises[key] = null;\r\n                    },\r\n                    () => {\r\n                        resolve(result);\r\n                        this.set('list', this.updateList(this.removeItem(this.get('list'), { id } as any), [result]));\r\n                        this.analyticsEvent(`update-${this._name.toLowerCase()}-success`, id);\r\n                        this._promises[key] = null;\r\n                    }\r\n                );\r\n            });\r\n        }\r\n        return this._promises[key];\r\n    }\r\n\r\n    /**\r\n     * Make delete request for the given item\r\n     * @param id ID of item\r\n     */\r\n    public delete(id: string): Promise<void> {\r\n        const key = `delete|${id}`;\r\n        if (!this._promises[key]) {\r\n            this._promises[key] = new Promise<void>((resolve, reject) => {\r\n                const url = `${this.route()}/${id}`;\r\n                this.http.delete(url).subscribe(\r\n                    _ => null,\r\n                    e => reject(e),\r\n                    () => {\r\n                        this.set('list', this.removeItem(this.get('list'), ({ id } as any)));\r\n                        resolve();\r\n                    }\r\n                );\r\n            });\r\n        }\r\n        return this._promises[key];\r\n    }\r\n\r\n    /**\r\n     * Add new API item from another service or API class\r\n     * @param id ID of the item/or service adding the new item\r\n     * @param data Raw API data for the new item\r\n     * @param type Adder type\r\n     */\r\n    public addFrom(id: string, data: HashMap, type: 'class' | 'service' | 'other' = 'other'): string {\r\n        const new_item = this.process(data);\r\n        this.set('list', this.updateList(this.get('list'), [new_item]));\r\n        return (new_item as any).id;\r\n    }\r\n\r\n    /**\r\n     * Remove items with the given IDs from the list\r\n     * @param id ID of the item/or service remove the list of items\r\n     * @param remove_ids List of item IDs to remove\r\n     * @param type Remover type\r\n     */\r\n    public removeFrom(id: string, remove_ids: string[], type: 'class' | 'service' | 'other' = 'other') {\r\n        const list = this.get('list');\r\n        for (const item_id of remove_ids) {\r\n            const index = list.findIndex(item => item.id === item_id);\r\n            if (index >= 0) {\r\n                list.splice(index, 1);\r\n            }\r\n        }\r\n        this.set('list', list);\r\n    }\r\n\r\n    /**\r\n     * Load initial data for the service\r\n     */\r\n    protected load(): Promise<void> {\r\n        return new Promise<void>((resolve) => {\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Post analytics event for this service\r\n     * @param action Name of the action to post\r\n     */\r\n    protected analyticsEvent(action: string, label?: string) {\r\n        if (this.parent && this.parent.Analytics) {\r\n            this.parent.Analytics.event(this._name, `${this.parent.name.toLowerCase()}-${action}`, label);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Convert raw API data into a valid API Object\r\n     * @param raw_item Raw API data\r\n     */\r\n    protected process(raw_item: HashMap): T {\r\n        return raw_item as T;\r\n    }\r\n\r\n    /**\r\n     * Update recorded list of items\r\n     * @param old_list Old list of items\r\n     * @param list List of updated items\r\n     * @param compareFn Function to compare items to remove duplicates\r\n     */\r\n    protected updateList(old_list: T[], list: T[], compareFn: (a: T, b: T) => boolean = this._compare): T[] {\r\n        if (!list || list.length === 0) { return old_list; }\r\n        const new_list: T[] = [];\r\n        const mixed_list = [...list, ...old_list];\r\n        if (!compareFn) { compareFn = this._compare; }\r\n        for (const item of mixed_list) {\r\n            const found = new_list.find(i => compareFn(i, item));\r\n            if (!found) {\r\n                new_list.push(item);\r\n            }\r\n        }\r\n        return new_list;\r\n    }\r\n\r\n    /**\r\n     * Remove the given item from the given list\r\n     * @param list List of items\r\n     * @param item Item to remove\r\n     * @param compareFn Function to compare items\r\n     */\r\n    protected removeItem(list: T[], item: T, compareFn?: (a: T, b: T) => boolean) {\r\n        const new_list = [];\r\n        if (!compareFn) { compareFn = this._compare; }\r\n        list.forEach(i => compareFn(item, i) ? null : new_list.push(i));\r\n        return new_list;\r\n    }\r\n}\r\n","\r\nimport { formatDate } from '@angular/common';\r\nimport { Validators } from '@angular/forms';\r\nimport { ADynamicFormField } from '@acaprojects/ngx-dynamic-forms';\r\n\r\nimport { BaseDataClass } from '../base-api.class';\r\nimport { User } from '../users/user.class';\r\nimport { HashMap } from '../../../shared/utilities/types.utilities';\r\nimport { humaniseDuration } from '../../../shared/utilities/general.utilities';\r\nimport { Space } from '../spaces/space.class';\r\nimport { FORM_FIELDS } from '../../../shared/globals/form-fields';\r\n\r\nimport { formatAttendeesWithHost, formatRecurrence, formatSpaces } from '../../../shared/utilities/formatting.utilities';\r\nimport { validateDate, buildValidateDuration, buildValidateAttendees } from '../../../shared/utilities/validation.utilities';\r\n\r\nimport * as dayjs from 'dayjs';\r\nimport { BaseAPIService } from '../base.service';\r\n\r\nexport class Booking extends BaseDataClass {\r\n    /** Unique calendar event ID */\r\n    readonly icaluid: string;\r\n    /** Subject or title of the booking */\r\n    readonly title: string;\r\n    /** Unix timestamp of the booking start */\r\n    readonly date: number;\r\n    /** Length of the booking in minutes */\r\n    readonly duration: number;\r\n    /** Description or details of the booking */\r\n    readonly body: string;\r\n    /** Supplimentary notes for the booking */\r\n    readonly notes: string;\r\n    /** Type of booking */\r\n    readonly type: string;\r\n    /** Whether the booking has catering associated with it */\r\n    readonly catering: boolean;\r\n    /** String location set in booking */\r\n    readonly _location: string;\r\n    /** List of attendee emails associated with the booking */\r\n    private _attendees: string[];\r\n    /** Email of the host or organiser of the booking */\r\n    private _organiser: string;\r\n    /** List of spaces associated with the booking */\r\n    private _space_list: string[];\r\n    /** Cached display strings */\r\n    private _display: HashMap<string> = {};\r\n\r\n    constructor(protected service: BaseAPIService<Booking>, raw_data: HashMap) {\r\n        super(service, raw_data);\r\n        const u_service = service.parent.Users;\r\n        this.icaluid = raw_data.icaluid || this.id;\r\n        this.title = raw_data.title || raw_data.subject || raw_data.Subject;\r\n        const start = dayjs(raw_data.date || raw_data.start || raw_data.start_epoch * 1000 || raw_data.Start);\r\n        this.date = start.valueOf();\r\n        this.duration = raw_data.duration || dayjs(raw_data.end || raw_data.end_epoch * 1000 || raw_data.End).diff(start, 'm');\r\n        this.body = raw_data.body || raw_data.description;\r\n        this.notes = raw_data.notes;\r\n        this.type = raw_data.type || (raw_data.visitors ? 'external' : null) || 'internal';\r\n        this.catering = raw_data.catering;\r\n        this._attendees = (raw_data.attendees || raw_data._attendees || []).map(i => u_service.item(i.email) || new User(u_service, i));\r\n        const organiser = raw_data.organiser || raw_data.organizer || { email: `${raw_data.owner}@fake.org` };\r\n        if (raw_data.owner) {\r\n            this.service.parent.Users.addFrom('booking', { name: raw_data.owner, email: `${raw_data.owner}@fake.org` });\r\n        }\r\n        this._organiser = organiser.email || raw_data._organiser;\r\n        this._location = raw_data.location || raw_data._location;\r\n        this._display = {\r\n            date: start.format('DD MMM YYYY'),\r\n            time: `${start.format('h:mma')} - ${dayjs(start)\r\n                .add(this.duration, 'm')\r\n                .format('h:mma')}`,\r\n            start: start.format('h:mma'),\r\n            end: dayjs(start)\r\n                .add(this.duration, 'm')\r\n                .format('h:mma'),\r\n            duration: humaniseDuration(this.duration)\r\n        };\r\n        this._space_list = raw_data.room_ids || raw_data._space_list;\r\n        // Add attendees and organiser to service data\r\n        if (this.service.parent && this.service.parent.Users) {\r\n            if (raw_data.attendees) {\r\n                raw_data.attendees.forEach(u => {\r\n                    if (!this.service.parent.Users.item(u.email)) {\r\n                        this.service.parent.Users.addFrom(this.id, u, 'class');\r\n                    }\r\n                });\r\n            }\r\n            if (organiser) {\r\n                if (!this.service.parent.Users.item(organiser.email)) {\r\n                    this.service.parent.Users.addFrom(this.id, organiser, 'class');\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /** List of attendees to the meeting */\r\n    public get attendees(): User[] {\r\n        return this.service && this.service.parent && this.service.parent.Users\r\n            ? this.service.parent.Users.list((user) => this._attendees.indexOf(user.id) >= 0)\r\n            : [];\r\n    }\r\n\r\n    /** Host or organiser of the meeting */\r\n    public get organiser(): User {\r\n        return this.service && this.service.parent && this.service.parent.Users && this._organiser\r\n            ? this.service.parent.Users.item(this._organiser) : null;\r\n    }\r\n\r\n    /** Status of the booking */\r\n    public get status(): 'future' | 'upcoming' | 'done' | 'started' | 'in_progress' {\r\n        const now = dayjs();\r\n        const date = dayjs(this.date);\r\n        if (now.isBefore(date.subtract(15, 'm'), 'm')) {\r\n            return 'future';\r\n        } else if (now.isBefore(date, 'm')) {\r\n            return 'upcoming';\r\n        } else if (now.isBefore(date.add(15, 'm'), 'm')) {\r\n            return 'started';\r\n        } else if (now.isBefore(date.add(this.duration, 'm'), 'm')) {\r\n            return 'in_progress';\r\n        }\r\n        return 'done';\r\n    }\r\n\r\n    /** Get the first space from the space list */\r\n    public get space(): Space {\r\n        return this.service && this.service.parent && this.service.parent.Spaces && this._space_list && this._space_list.length > 0\r\n            ? this.service.parent.Spaces.item(this._space_list[0]) : null;\r\n    }\r\n    /** Spaces associated with the booking */\r\n    public get space_list(): Space[] {\r\n        return this.service && this.service.parent && this.service.parent.Spaces\r\n            ? this.service.parent.Spaces.list((space) => this._space_list.indexOf(space.id) >= 0)\r\n            : [];\r\n    }\r\n\r\n    /** Display value for the date */\r\n    public get date_string(): string {\r\n        return this._display.date;\r\n    }\r\n    /** Display valuie for the start and end times of the booking */\r\n    public get time_period(): string {\r\n        return this._display.time;\r\n    }\r\n    /** Display value for the start time of the booking */\r\n    public get start_time(): string {\r\n        return this._display.start;\r\n    }\r\n    /** Display value for the end time of the booking */\r\n    public get end_time(): string {\r\n        return this._display.end;\r\n    }\r\n    /** Display value for the duration of the booking */\r\n    public get length_string(): string {\r\n        return this._display.duration;\r\n    }\r\n    /** Display value for the location of the booking */\r\n    public get location(): string {\r\n        return this._display.space_names || this._location || 'No location set';\r\n    }\r\n    /** Display value for the level of the first space in the booking */\r\n    public get level(): string {\r\n        return this._display.level;\r\n    }\r\n\r\n    /**\r\n     * Create form fields for the object\r\n     */\r\n    protected initialiseFormFields(): ADynamicFormField[] {\r\n        const form_fields = [];\r\n        const form_settings = this.service.setting('fields') || [];\r\n        const user = this.service.parent.Users.current;\r\n        const actions = {\r\n            // space: () => this.setSpace(),\r\n            // recurrence: () => this.setRecurrence(),\r\n            // conferencing: (v?) => this.setConferencing(v)\r\n        };\r\n        const validators = {\r\n            date: [validateDate],\r\n            duration: [buildValidateDuration()],\r\n            attendees: [buildValidateAttendees(user, this.service.setting('min_attendees'))],\r\n            terms: [Validators.requiredTrue]\r\n        };\r\n        const formatters = {\r\n            attendees: formatAttendeesWithHost(user),\r\n            date: formatDate,\r\n            space: formatSpaces,\r\n            recurrence: formatRecurrence\r\n        };\r\n        const custom_elements = FORM_FIELDS;\r\n        const defaults = {};\r\n        const process_field = field => {\r\n            const f = {\r\n                key: field.key,\r\n                label: field.label,\r\n                icon: field.icon,\r\n                type: field.control_type || field.type,\r\n                value: this[field.key] || defaults[field.key] || '',\r\n                action: field.action || actions[field.key],\r\n                format: field.format || formatters[field.key],\r\n                content: field.content || custom_elements[field.key],\r\n                required: field.required,\r\n                validators: validators[field.key],\r\n                references: field.references || field.refs,\r\n                hide: field.hide,\r\n                metadata: { ...field.metadata, ...this._form_metadata, service: this.service },\r\n                attributes: { flex: field.flex },\r\n                children: field.children ? field.children.map(i => process_field(i)) : null\r\n            };\r\n            return new ADynamicFormField(f);\r\n        };\r\n        for (const field of form_settings) {\r\n            if (field.key) {\r\n                form_fields.push(process_field(field));\r\n            }\r\n        }\r\n        return form_fields;\r\n    }\r\n\r\n    /**\r\n     * Make a copy of this object\r\n     */\r\n    public clone(): Booking {\r\n        return new Booking(this.service, this);\r\n    }\r\n\r\n    /**\r\n     * Make a copy of this object without identification data\r\n     */\r\n    public duplicate(): Booking {\r\n        return new Booking(this.service, { ...this, id: null, email: null, icaluid: null });\r\n    }\r\n}\r\n","import { padZero } from '../../../shared/utilities/general.utilities';\r\n\r\nimport { generateMockUser } from '../users/user.utilities';\r\n\r\nimport * as faker from 'faker';\r\nimport * as dayjs from 'dayjs';\r\nimport { Booking } from './booking.class';\r\n\r\nlet BOOKING_COUNT = 0;\r\nlet BOOKING_DATE = dayjs().minute(0).startOf('m');\r\n\r\n/**\r\n * Set the initial time used for generating mock bookings\r\n * @param time New initial time as ms from UTC epoch\r\n */\r\nexport function setMockBookingStartDatetime(time: number) {\r\n    BOOKING_DATE = dayjs(time).startOf('m');\r\n}\r\n\r\n/**\r\n * Create mock raw API data for a booking\r\n * @param id\r\n */\r\nexport function generateMockBooking(id?: string) {\r\n    if (!id) {\r\n        id = `booking-${BOOKING_COUNT++}`;\r\n    }\r\n    BOOKING_DATE = BOOKING_DATE.add(Math.floor(Math.random() * 4) + 15, 'm');\r\n    const start = BOOKING_DATE.valueOf();\r\n    const duration = Math.floor(Math.random() * 4) + 30;\r\n    BOOKING_DATE = BOOKING_DATE.add(Math.floor(Math.random() * 4) + 15, 'm');\r\n    return {\r\n        id,\r\n        icaluid: padZero(Math.floor(Math.random() * 99999999), 8),\r\n        title: `${faker.commerce.productName()} Meeting`,\r\n        attendees: Array(Math.floor(Math.random() * 5 + 2))\r\n            .fill(0)\r\n            .map(i => generateMockUser()),\r\n        organiser: generateMockUser(),\r\n        date: start,\r\n        duration,\r\n        description: faker.lorem.paragraph(),\r\n        notes: faker.lorem.paragraph(),\r\n        location: faker.address.city(),\r\n        catering: Math.floor(Math.random() * 34567) % 3 === 0\r\n    };\r\n}\r\n\r\nexport interface IBookingSlot {\r\n    start: number;\r\n    end: number;\r\n}\r\n\r\n/**\r\n * Generate a list of free time slots between the given bookings\r\n * @param list List of bookings to find slots between\r\n * @param min_size Minimum length of a free slot in minutes\r\n */\r\nexport function getFreeBookingSlots(list: Booking[], min_size: number = 30): IBookingSlot[] {\r\n    if (!list) { return [{ start: 0, end: dayjs().startOf('m').valueOf() * 10 }] }\r\n    const slots: IBookingSlot[] = [];\r\n    let start = dayjs(0);\r\n    list.sort((a, b) => a.date - b.date);\r\n    for (const booking of list) {\r\n        const bkn_start = dayjs(booking.date);\r\n        const bkn_end = bkn_start.add(booking.duration, 'm');\r\n        if (bkn_start.isAfter(start)) {\r\n            const diff = bkn_start.diff(start, 'm');\r\n            if (diff >= min_size) {\r\n                slots.push({ start: start.valueOf(), end: bkn_start.valueOf() });\r\n            }\r\n            start = bkn_end;\r\n        }\r\n    }\r\n    slots.push({ start: start.valueOf(), end: dayjs().startOf('m').valueOf() * 10 })\r\n    return slots;\r\n}\r\n\r\n/**\r\n * Get the next free time slot from the given bookings\r\n * @param list List of bookings to find the next slot\r\n * @param date Date to find next slot after in ms since UTC epoch\r\n * @param min_size Minimum length of the free slot in minutes\r\n */\r\nexport function getNextFreeBookingSlot(list: Booking[], date: number = dayjs().valueOf(), min_size: number = 30): IBookingSlot {\r\n    const slots = getFreeBookingSlots(list, min_size);\r\n    const time = dayjs(date).startOf('m').second(1);\r\n    for (const block of slots) {\r\n        const start = dayjs(block.start).startOf('m');\r\n        const end = dayjs(block.end).startOf('m');\r\n        if (start.isAfter(time, 's')) {\r\n            return block;\r\n        } else if (time.isBefore(end, 's')) {\r\n            const duration = end.diff(time, 'm');\r\n            if (duration >= min_size) {\r\n                return block;\r\n            }\r\n        }\r\n    }\r\n    return slots[slots.length - 1];\r\n}\r\n","\r\nimport { Injectable } from '@angular/core';\r\nimport { ComposerService } from '@acaprojects/ngx-composer';\r\n\r\nimport { BaseAPIService } from '../base.service';\r\nimport { Booking } from './booking.class';\r\nimport { Space } from '../spaces/space.class';\r\nimport { HashMap } from '../../../shared/utilities/types.utilities';\r\nimport { BookingData } from '../../../overlays/booking-modal/booking-modal.component';\r\n\r\nimport * as dayjs from 'dayjs';\r\n\r\nexport interface IBookingOptions {\r\n    space: Space;\r\n    date?: number;\r\n    title?: string;\r\n    max_duration?: number;\r\n    min_duration?: number;\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class BookingsService extends BaseAPIService<Booking> {\r\n    constructor(protected _composer: ComposerService) {\r\n        super(_composer);\r\n        this._name = 'Bookings';\r\n        this._api_route = 'bookings';\r\n        this._compare = (a, b) => !a.id.localeCompare(b.id) || !a.icaluid.localeCompare(b.icaluid);\r\n    }\r\n\r\n    /**\r\n     * Open form modal for creating new bookings\r\n     * @param space Space to make booking in\r\n     * @param date Default date on the form\r\n     */\r\n    public new(options: IBookingOptions) {\r\n        if (options.space) {\r\n            this.parent.Overlay.open('booking', {\r\n                config: 'modal',\r\n                data: options as any\r\n            }, (event: { type: string, data: BookingData }) => {\r\n                const booking = event.data.booking.toJSON();\r\n                this.timeout('book', () => {\r\n                    this.create(options.space, booking)\r\n                        .then(() => {\r\n                            this.parent.notifySuccess('Booking successfully created');\r\n                            event.data.close ? event.data.close() : ''\r\n                        }).catch(_ => {\r\n                            this.parent.notifyError(`Error creating meeting. ${_}`);\r\n                            event.data.on_error ? event.data.on_error() : '';\r\n                        });\r\n                }, 1000);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Create new booking with the given properties\r\n     * @param booking New booking data\r\n     */\r\n    private create(space: Space, booking: HashMap) {\r\n        return new Promise((resolve, reject) => {\r\n            if (space) {\r\n                const request = {\r\n                    title: booking.title,\r\n                    count: {\r\n                        staff: booking.num_staff ? +booking.num_staff : 0,\r\n                        partners: booking.num_partners ? +booking.num_partners : 0,\r\n                    },\r\n                    staff_id: '', // data.form.user.staff_code,\r\n                    start: booking.date.valueOf(),\r\n                    end: dayjs(booking.date).add(booking.period.duration, 'm').valueOf(),\r\n                    host: booking.host || booking.user || { name: 'Panel User' }\r\n                };\r\n                const module = this.parent.Systems.get(space.id, 'Bookings');\r\n                if (request && module) {\r\n                    module.exec('create_meeting', [request]).then(() => {\r\n                        this.analyticsEvent('create-success');\r\n                        resolve();\r\n                    }, (err) => {\r\n                        this.analyticsEvent('create-failed');\r\n                        reject(`Error making booking: ${err}`);\r\n                    })\r\n                } else {\r\n                    reject(`No Bookings module found for space ${space.id}`);\r\n                }\r\n            } else {\r\n                reject('No space set for booking');\r\n            }\r\n        });\r\n    }\r\n\r\n    protected process(raw_data: HashMap): Booking {\r\n        return new Booking(this, raw_data);\r\n    }\r\n}\r\n","import { BaseDataClass } from '../base-api.class';\r\nimport { HashMap, Identity } from '../../../shared/utilities/types.utilities';\r\nimport { getItemWithKeys } from '../../../shared/utilities/general.utilities';\r\nimport { BaseAPIService } from '../base.service';\r\nimport { Organisation } from './organisation.class';\r\n\r\nexport interface IBuildingRoleUser {\r\n    name: string;\r\n    email: string;\r\n    phone: string;\r\n}\r\n\r\nexport interface LockerMap {\r\n    [zone: string]: {\r\n        [area: string]: {\r\n            [type: string]: (string | boolean)[][];\r\n        };\r\n    };\r\n}\r\n\r\nexport interface ICoordinates {\r\n    longitude: number;\r\n    latitude: number;\r\n}\r\n\r\nexport interface IMapFeature {\r\n    id: string;\r\n    level_id: string;\r\n    name: string;\r\n}\r\n\r\nexport class Building extends BaseDataClass {\r\n    /** Engine Zone ID for the building */\r\n    readonly zone_id: string;\r\n    /** List of available extras for the building */\r\n    private _extras: Identity[];\r\n    /** List of available extra equipment for loan at the building */\r\n    private _loan_items: Identity[];\r\n    /** List of available levels for the building */\r\n    private _levels: Identity[];\r\n    /** Map of custom settings for the building */\r\n    private _settings: HashMap;\r\n    /** Map of roles and list of the associated users */\r\n    private _roles: HashMap<IBuildingRoleUser[]>;\r\n    /** Map of the locker ID arrays */\r\n    private _lockers: LockerMap;\r\n    /** Map of important system ids for the building */\r\n    private _systems: HashMap<string>;\r\n    /** Map of important phone numbers for the building */\r\n    private _phone_numbers: HashMap<string>;\r\n    /** Globe coordiates for the build */\r\n    private _location: ICoordinates;\r\n    /** List of zones associated with the building */\r\n    private _zones: string[];\r\n    /** Searchable map features */\r\n    private _searchables: IMapFeature[];\r\n\r\n    constructor(protected service: BaseAPIService<Organisation>, raw_data: HashMap) {\r\n        super(service, raw_data);\r\n        this.zone_id = raw_data.zone_id || raw_data.zone;\r\n        this._extras = (raw_data.extras || []).map(i => ({ id: i.extra_id || i.id, name: i.extra_name || i.name }));\r\n        this._loan_items = (raw_data.loan_items || []).map(i => ({ id: i.extra_id || i.id, name: i.extra_name || i.name }));\r\n        this._levels = (raw_data.levels || []).map(i => ({ id: i.level_id || i.id, name: i.level_name || i.name }));\r\n        this._roles = raw_data.roles || {};\r\n        this._lockers = raw_data.lockers || raw_data.locker_structure || {};\r\n        this._systems = raw_data.systems || {};\r\n        this._settings = raw_data.settings || {};\r\n        this._phone_numbers = raw_data.phone_numbers || {};\r\n        this._location = raw_data.location || { longitude: null, latitude: null };\r\n        this._searchables = [];\r\n        if (raw_data.neighbourhoods) {\r\n            for (const lvl in raw_data.neighbourhoods) {\r\n                if (raw_data.neighbourhoods.hasOwnProperty(lvl)) {\r\n                    const lvl_features = raw_data.neighbourhoods[lvl] || {};\r\n                    for (const feature in lvl_features) {\r\n                        if (lvl_features.hasOwnProperty(feature)) {\r\n                            this._searchables.push({\r\n                                id: lvl_features[feature],\r\n                                name: feature,\r\n                                level_id: lvl\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /** List of available extras for the building */\r\n    public get extras(): Identity[] {\r\n        return [...(this._extras || [])];\r\n    }\r\n    /** List of available extras for the building */\r\n    public get loan_items(): Identity[] {\r\n        return [...(this._loan_items || [])];\r\n    }\r\n    /** List of available levels for the building */\r\n    public get levels(): Identity[] {\r\n        return [...(this._levels || [])];\r\n    }\r\n    /**\r\n     * Get a custom building setting\r\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\r\n     */\r\n    public setting(key: string): any {\r\n        const keys = key.split('.');\r\n        const value = getItemWithKeys(keys, this._settings);\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * Get list of users with the associated role\r\n     * @param name Role to find users for\r\n     */\r\n    public role(name: string): IBuildingRoleUser[] {\r\n        return [...(this._roles[name] || [])];\r\n    }\r\n    /**\r\n     * Get list of the names of available user role lists\r\n     */\r\n    public get role_names(): string[] {\r\n        return Object.keys(this._roles).filter(i => this._roles.hasOwnProperty(i));\r\n    }\r\n    /** Map of the locker ID arrays */\r\n    public get lockers(): LockerMap {\r\n        return { ...(this._lockers || {}) };\r\n    }\r\n    /** Map of important system ids for the building */\r\n    public get systems(): HashMap<string> {\r\n        return { ...(this._systems || {}) };\r\n    }\r\n    /** Map of important phone numbers for the building */\r\n    public get phone_numbers(): HashMap<string> {\r\n        return { ...(this._phone_numbers || {}) };\r\n    }\r\n    /** Real coordinates */\r\n    public get location(): ICoordinates {\r\n        return { ...this._location };\r\n    }\r\n    /** List of zones associated with the building */\r\n    public get zones(): string[] {\r\n        return [...(this._zones || [])];\r\n    }\r\n    /** Searchable map features */\r\n    public get searchables(): IMapFeature[] {\r\n        return [...(this._searchables || [])];\r\n    }\r\n\r\n    /**\r\n     * Get search map feature for the given level ID\r\n     * @param level_id ID of level to grab features for\r\n     */\r\n    public featuresForLevel(level_id: string): IMapFeature[] {\r\n        return (this._searchables || []).filter(i => i.level_id === level_id);\r\n    }\r\n\r\n    /**\r\n     * Building objects are readonly and cannot be changed\r\n     */\r\n    public async save(): Promise<Building> {\r\n        throw new Error('Building objects are readonly and cannot be changed');\r\n    }\r\n\r\n    /**\r\n     * Building objects are readonly and cannot be deleted\r\n     */\r\n    public async delete(): Promise<void> {\r\n        throw new Error('Building objects are readonly and cannot be deleted');\r\n    }\r\n}\r\n","import { BaseDataClass } from '../base-api.class';\r\nimport { HashMap } from '../../../shared/utilities/types.utilities';\r\nimport { getItemWithKeys } from '../../../shared/utilities/general.utilities';\r\nimport { BaseAPIService } from '../base.service';\r\n\r\nexport class Organisation extends BaseDataClass {\r\n    /** Map of custom settings for the building */\r\n    private _settings: HashMap;\r\n\r\n    constructor(protected service: BaseAPIService<Organisation>, raw_data: HashMap) {\r\n        super(service, raw_data);\r\n        this._settings = raw_data.settings || {};\r\n    }\r\n\r\n    /**\r\n     * Get a custom building setting\r\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\r\n     */\r\n    public setting(key: string): any {\r\n        const keys = key.split('.');\r\n        const value = getItemWithKeys(keys, this._settings);\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * Building objects are readonly and cannot be changed\r\n     */\r\n    public async save(): Promise<Organisation> {\r\n        throw new Error('Organisation objects are readonly and cannot be changed');\r\n    }\r\n\r\n    /**\r\n     * Building objects are readonly and cannot be deleted\r\n     */\r\n    public async delete(): Promise<void> {\r\n        throw new Error('Organisation objects are readonly and cannot be deleted');\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ComposerService } from '@acaprojects/ngx-composer';\r\n\r\nimport { BaseAPIService } from '../base.service';\r\nimport { Organisation } from './organisation.class';\r\nimport { Building } from './building.class';\r\nimport { HashMap } from '../../../shared/utilities/types.utilities';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class OrganisationService extends BaseAPIService {\r\n    /** Organisation data for the application */\r\n    private _organisation: Organisation;\r\n    /** Actively displayed building */\r\n    private _active_building: string;\r\n    /** Whether an error was shown when loading organisation data */\r\n    private shown_error: boolean;\r\n\r\n    constructor(protected _composer: ComposerService) {\r\n        super(_composer);\r\n        this._name = 'Organisation';\r\n        this._api_route = 'zones';\r\n        this.set('buildings', []);\r\n    }\r\n\r\n    /**\r\n     * Get list of levels for the given building ID\r\n     * @param bld_id Building ID\r\n     */\r\n    public levels(bld_id: string): any[] {\r\n        return (this.buildings.find(i => i.id === bld_id) || {} as Building).levels;\r\n    }\r\n\r\n    /**\r\n     * Get a setting from the organisation or active building\r\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\r\n     */\r\n    public setting(key: string) {\r\n        return this.building.setting(key) || this._organisation.setting(key);\r\n    }\r\n\r\n    /** Active building */\r\n    public get building(): Building {\r\n        return (this.buildings.find(i => i.id === this._active_building));\r\n    }\r\n\r\n    public set building(bld: Building) {\r\n        if (bld instanceof Building) {\r\n            this._active_building = bld.id;\r\n        } else {\r\n            this._active_building = bld;\r\n        }\r\n    }\r\n\r\n    /** List of buildings for the organisation */\r\n    public get buildings(): Building[] {\r\n        return this.get<Building[]>('buildings') || [];\r\n    }\r\n\r\n    /**\r\n     * Get list of available equipment\r\n     * @param id ID of the building to get the list from. i.e. Defaults to the active building\r\n     */\r\n    public getExtras(id: string, bld_id?: string) {\r\n        const bld = (bld_id ? this.buildings.find(i => i.id === bld_id) : null) || this.building;\r\n        if (bld && id) {\r\n            return bld.extras.filter(i => i.id.indexOf(id) >= 0) || [];\r\n        }\r\n        return [];\r\n    }\r\n\r\n    /**\r\n     * Get the first level matching the list of given IDs\r\n     * @param ids List of ID to search with\r\n     */\r\n    public levelWithID(ids: string | string[]) {\r\n        const list = ids instanceof Array ? ids : [ids];\r\n        const bld_list = this.buildings;\r\n        for (const id of list) {\r\n            for (const bld of bld_list) {\r\n                for (const lvl of bld.levels) {\r\n                    if (lvl.id === id) {\r\n                        return lvl;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Initialise service data\r\n     */\r\n    protected load(): Promise<void> {\r\n        if (localStorage) {\r\n            this._active_building = localStorage.getItem(`${this.parent.name}.building`);\r\n        }\r\n        return new Promise((resolve) => {\r\n            this.loadOrganisation().then(() => {\r\n                this.loadBuildings().then(() => {\r\n                    this.loadLevels().then(() => resolve());\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Load organisation data for application\r\n     */\r\n    public loadOrganisation(): Promise<void> {\r\n        return new Promise<void>((resolve) => {\r\n            this.query({ tags: 'org', engine: true }).then((org_data) => {\r\n                this._organisation = new Organisation(this as any, org_data[0]);\r\n                this.set('organisation', this._organisation);\r\n                this.shown_error = false;\r\n                resolve();\r\n            }, _ => {\r\n                if (!this.shown_error) {\r\n                    this.shown_error = true;\r\n                    this.parent.notifyError('Error loading organisation data. Retrying...');\r\n                }\r\n                this.timeout('load_org', () => this.loadOrganisation().then(() => resolve()), 1000);\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Load buildings data for the organisation\r\n     */\r\n    public loadBuildings(): Promise<void> {\r\n        return new Promise<void>((resolve) => {\r\n            this.query({ tags: 'building', engine: true }).then((bld_data) => {\r\n                const buildings = (bld_data as HashMap[]).map(i => new Building(this as any, i));\r\n                this.set('buildings', buildings || []);\r\n                if (!this._active_building && buildings && buildings.length > 0) {\r\n                    this._active_building = buildings[0].id;\r\n                }\r\n                resolve();\r\n            }, _ => {\r\n                this.parent.notifyError('Error loading building data. Retrying...');\r\n                this.timeout('load_bld', () => this.loadBuildings().then(() => resolve()), 1000);\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Load levels data for the buildings\r\n     */\r\n    public loadLevels(): Promise<void> {\r\n        return new Promise<void>((resolve) => {\r\n            this.query({ tags: 'level', engine: true }).then((lvl_data) => {\r\n                resolve();\r\n            }, _ => {\r\n                this.parent.notifyError('Error loading level data. Retrying...');\r\n                this.timeout('load_lvl', () => this.loadLevels().then(() => resolve()), 1000);\r\n            });\r\n        });\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ComposerService } from '@acaprojects/ngx-composer';\r\n\r\nimport { BaseAPIService } from '../base.service';\r\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\r\n\r\nexport interface PollingMetadata {\r\n    room_id: string;\r\n    metadata?: HashMap<any>;\r\n}\r\n\r\nexport class PingHistory {\r\n    /** List of previous poll data */\r\n    readonly history: PollingMetadata[];\r\n    /** Unix time in seconds of the last poll request */\r\n    readonly last_ping: number;\r\n    /** Email of the associated space */\r\n    readonly room_email: string;\r\n    /** ID of the associated space */\r\n    readonly room_id: string;\r\n\r\n    constructor(data: HashMap) {\r\n        this.history = data.history;\r\n        this.last_ping = data.last_ping;\r\n        this.room_email = data.room_email;\r\n        this.room_id = data.room_id;\r\n    }\r\n}\r\n\r\nconst SECONDS = 1000;\r\nconst MINUTES = 60 * SECONDS;\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class PollingService extends BaseAPIService<PingHistory> {\r\n    constructor(protected _composer: ComposerService) {\r\n        super(_composer);\r\n        this._name = 'Users';\r\n        this._api_route = 'pings';\r\n    }\r\n\r\n    protected async load() {\r\n        this.interval('poll_endpoint', () => {\r\n            this.add({\r\n                room_id: this.parent.get('system')\r\n            });\r\n        }, 10 * MINUTES);\r\n    }\r\n\r\n    public query(...args: any): never {\r\n        throw new Error('Query method not available for polling endpoint');\r\n    }\r\n\r\n    public show(...args: any): never {\r\n        throw new Error('Show method not available for polling endpoint');\r\n    }\r\n\r\n    public update(...args: any): never {\r\n        throw new Error('Put method not available for polling endpoint');\r\n    }\r\n\r\n    public delete(...args: any): never {\r\n        throw new Error('delete method not available for polling endpoint');\r\n    }\r\n\r\n    protected process(data: HashMap) {\r\n        return new PingHistory(data);\r\n    }\r\n}\r\n","import { BaseDataClass } from '../base-api.class';\r\nimport { HashMap, Identity } from '../../../shared/utilities/types.utilities';\r\nimport { Booking } from '../bookings/booking.class';\r\nimport { BaseAPIService } from '../base.service';\r\n\r\nimport * as dayjs from 'dayjs';\r\n\r\nexport interface ISpaceAvailabilityOptions {\r\n    date?: number;\r\n    duration: number;\r\n    id?: string;\r\n    room_ids?: string;\r\n    bookable?: boolean;\r\n    rooms?: string;\r\n    ignore?: string;\r\n    zone_id?: string;\r\n    clear?: boolean;\r\n}\r\n\r\nconst OPTION_DEFAULTS: ISpaceAvailabilityOptions = {\r\n    duration: 60\r\n};\r\n\r\nexport class Space extends BaseDataClass {\r\n    /** Extends name for the space */\r\n    readonly long_name: string;\r\n    /** CSS selector for the location of the space of the level's map */\r\n    readonly map_id: string;\r\n    /** Type of space */\r\n    readonly type: string;\r\n    /** Whether user can search for this space */\r\n    readonly can_search: boolean;\r\n    /** Whether user can open the control URL if available */\r\n    readonly can_control: boolean;\r\n    /** Hourly cost for using the space */\r\n    readonly hourly_rate: number;\r\n    /** Whether space can be booked by users */\r\n    readonly bookable: boolean;\r\n    /** People capacity of the space */\r\n    readonly capacity: number;\r\n    /** Index to force order when sorting multiple spaces */\r\n    readonly sort_priority: number;\r\n    /** Setup time for bookings in this space */\r\n    readonly setup: number;\r\n    /** Breakdown time for bookings in this space */\r\n    readonly breakdown: number;\r\n    /** Last returned availability result */\r\n    readonly was_available: boolean;\r\n\r\n    /** Level in which the spaces is associated */\r\n    private _level: HashMap;\r\n    /** Bookings associated with the space */\r\n    private _bookings: string[];\r\n    /** Engine zones associated with the space */\r\n    private _zones: string[];\r\n    /** List of equipment available in the space */\r\n    private _extras: Identity[];\r\n    /** List of ids for linked spaces */\r\n    private _linked_spaces: string[];\r\n\r\n    constructor(protected service: BaseAPIService<Space>, raw_data: HashMap = {}) {\r\n        super(service, raw_data);\r\n        const settings = raw_data.settings || {};\r\n        this._level = this.service.parent.Organisation.levelWithID(raw_data.zones) || { settings: {} };\r\n\r\n        this.long_name = settings.long_name || raw_data.long_name;\r\n        this.map_id = settings.map_id || raw_data.map_id;\r\n        this.type = settings.book_type || this._level.book_type || this._level.settings.book_type || raw_data.book_type || raw_data.type || 'book';\r\n        this.can_search = settings.searchable || raw_data.searchable || raw_data.can_search || false;\r\n        this.can_control = settings.controlable || raw_data.controlable || raw_data.can_control || false;\r\n        this.hourly_rate = settings.cost_hour || raw_data.cost_hour || raw_data.hourly_rate || 0;\r\n        this.bookable = settings.bookable || raw_data.bookable || false;\r\n        this.setup = ((settings.setup || 0) / 60) || raw_data.setup || 0;\r\n        this.breakdown = ((settings.breakdown || 0) / 60) || raw_data.breakdown || 0;\r\n        this.capacity = raw_data.capacity || 0;\r\n        this.was_available = settings.available || raw_data.available || raw_data.was_available || false;\r\n\r\n        this._zones = raw_data.zones || [];\r\n        const raw_bookings = settings.bookings || raw_data.bookings || [];\r\n        this._bookings = raw_bookings.map(i => i.id);\r\n        if (this.service.parent && this.service.parent.Bookings) {\r\n            if (raw_bookings) {\r\n                const id_list = [];\r\n                raw_bookings.forEach(booking => {\r\n                    let id = booking.id;\r\n                    this.service.parent.Bookings.removeFrom(this.id, [id], 'class');\r\n                    id = this.service.parent.Bookings.addFrom(this.id, booking, 'class');\r\n                    id_list.push(id);\r\n                });\r\n                this._bookings = id_list;\r\n            }\r\n        }\r\n        this._extras = [];\r\n        this._linked_spaces = settings.linked_rooms || raw_data.linked_rooms || raw_data.linked_spaces || [];\r\n    }\r\n\r\n    /** Whether the space has a booking in progress */\r\n    public get in_use(): boolean {\r\n        return !!this.current;\r\n    }\r\n\r\n    /** Get any current in progress meeting */\r\n    public get current(): Booking {\r\n        const bookings = this.bookings;\r\n        for (const bkn of bookings) {\r\n            const status = bkn.status;\r\n            if (status === 'in_progress' || status === 'started') {\r\n                return bkn;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /** Get the next upcoming meeting */\r\n    public get next(): Booking {\r\n        const now = dayjs().valueOf();\r\n        const bookings = this.bookings;\r\n        for (const bkn of bookings) {\r\n            if (bkn.date > now) {\r\n                return bkn;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /** List of stored bookings for the space */\r\n    public get bookings(): Booking[] {\r\n        const booking_list = this.service && this.service.parent && this.service.parent.Bookings\r\n            ? this.service.parent.Bookings.list((booking) => this._bookings.indexOf(booking.id) >= 0) || []\r\n            : [];\r\n        return booking_list.sort((a, b) => a.date - b.date);\r\n    }\r\n\r\n    /** List of bookings for today */\r\n    public get todays_bookings(): Booking[] {\r\n        return this.bookingsFor(dayjs().valueOf());\r\n    }\r\n\r\n    /** List of ids for linked spaces */\r\n    public get linked_spaces() {\r\n        return [...this._linked_spaces];\r\n    }\r\n\r\n    /** Level in which the space is associated */\r\n    public get level(): HashMap {\r\n        return this._level;\r\n    }\r\n\r\n    /** Engine zones associated with the space */\r\n    public get zones(): string[] {\r\n        return [...this._zones];\r\n    }\r\n\r\n    /**\r\n     * Get bookings for space\r\n     * @param date Date to filter bookings on\r\n     */\r\n    public bookingsFor(date?: number): Booking[] {\r\n        if (date) {\r\n            const day = dayjs(date);\r\n            return this.bookings.filter(i => dayjs(i.date).isSame(day, 'd'));\r\n        } else {\r\n            return this.bookings;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Whether the space is available.\r\n     */\r\n    public isAvailable(options?: ISpaceAvailabilityOptions): Promise<boolean> {\r\n        options = options\r\n            ? { ...OPTION_DEFAULTS, ...options, room_ids: this.id }\r\n            : { ...OPTION_DEFAULTS, room_ids: this.id };\r\n        return new Promise((resolve) => {\r\n            (this.service as any).available(options).then((list: Space[]) => {\r\n                for (const rm of list) {\r\n                    if (rm.id === this.id) {\r\n                        return resolve(true);\r\n                    }\r\n                }\r\n                resolve(false);\r\n            }, () => resolve(false));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Make a copy of this object\r\n     */\r\n    public clone(): Space {\r\n        return new Space(this.service, this);\r\n    }\r\n\r\n    /**\r\n     * Make a copy of this object without identification data\r\n     */\r\n    public duplicate(): Space {\r\n        return new Space(this.service, { ...this, id: null, email: null, _bookings: [] });\r\n    }\r\n}\r\n","import { HashMap } from '../../../shared/utilities/types.utilities';\r\nimport { generateMockBooking } from '../bookings/booking.utilities';\r\n\r\nimport * as faker from 'faker';\r\nimport { USER_DOMAIN } from '../users/user.utilities';\r\n\r\nlet SPACE_COUNT: number = 0;\r\n\r\nexport function generateMockSpace(id?: string, zones?: string[]): HashMap {\r\n    if (!id) {\r\n        id = `space-${SPACE_COUNT++}`;\r\n    }\r\n    const name = `${faker.name.firstName()} ${faker.name.lastName()} Space`;\r\n    const linked = Math.floor(Math.random() * 99999) % 2 === 0 && SPACE_COUNT > 1;\r\n    return {\r\n        id,\r\n        name,\r\n        long_name: `${name} with an long name`,\r\n        map_id: `${SPACE_COUNT}`,\r\n        capacity: Math.floor(Math.random() * 20 + 1) * 2,\r\n        email: `${name.toLowerCase().split(' ').join('.')}@${USER_DOMAIN}`,\r\n        type: faker.commerce.productName(),\r\n        searchable: Math.floor(Math.random() * 99999) % 2 === 0,\r\n        controlable: Math.floor(Math.random() * 99999) % 2 === 0,\r\n        bookable: Math.floor(Math.random() * 99999) % 2 === 0,\r\n        cost_hour: Math.floor(Math.random() * 300) * 100,\r\n        setup: Math.floor(Math.random() * 6) * 5,\r\n        breakdown: Math.floor(Math.random() * 6) * 5,\r\n        zones: zones || ['zone_lvl-0'],\r\n        bookings: Array(10).fill(0).map(i => generateMockBooking()),\r\n        linked_rooms: linked ? [`space-${Math.floor(Math.random() * (SPACE_COUNT - 1))}`] : []\r\n    };\r\n}\r\n","\r\nimport { Injectable } from '@angular/core';\r\nimport { ComposerService } from '@acaprojects/ngx-composer';\r\n\r\nimport { BaseAPIService } from '../base.service';\r\nimport { Space, ISpaceAvailabilityOptions } from './space.class';\r\nimport { HashMap } from '../../../shared/utilities/types.utilities';\r\n\r\nimport * as dayjs from 'dayjs';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class SpacesService extends BaseAPIService<Space> {\r\n\r\n    constructor(protected _composer: ComposerService) {\r\n        super(_composer);\r\n        this._name = 'Space';\r\n        this._api_route = 'rooms';\r\n        this._compare = (a, b) => !a.id.localeCompare(b.id) || !a.email.localeCompare(b.email);\r\n        this._list_filter = (a: Space) => {\r\n            const bld = this.parent.Organisation.building;\r\n            return a.level.bld_id === bld.id;\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Get available spaces\r\n     * @param options\r\n     */\r\n    public available(options: ISpaceAvailabilityOptions): Promise<Space[]> {\r\n        if (!options) { throw new Error('Space avilability requires request options'); }\r\n        if (!options.date) { options.date = dayjs().startOf('m').valueOf(); }\r\n        const key = `available|${options.id ? options.id : ''}`;\r\n        if (!this._promises[key]) {\r\n            this._promises[key] = new Promise((resolve, reject) => {\r\n                const respond = (list: Space[]) => {\r\n                    const available_spaces = list.filter(i => {\r\n                        const linked = list.filter(j => i.linked_spaces.indexOf(j.id) >= 0);\r\n                        return i.was_available && linked.reduce((a, v) => a && v.was_available, true);\r\n                    });\r\n                    resolve(available_spaces);\r\n                };\r\n                const error = (e) => reject(e);\r\n                if (options.id) {\r\n                    this.show(options.id, options).then((i) => respond([i]), error);\r\n                } else {\r\n                    this.query(options).then(respond, error);\r\n                }\r\n            });\r\n        }\r\n        return this._promises[key];\r\n    }\r\n\r\n    /**\r\n     * Load initial data for the service\r\n     */\r\n    protected async load(): Promise<void> {\r\n        await this.query();\r\n    }\r\n\r\n    /**\r\n     * Convert raw data into API object\r\n     * @param raw_data Raw API data\r\n     */\r\n    protected process(raw_data: HashMap): Space {\r\n        return new Space(this, raw_data);\r\n    }\r\n}\r\n","\r\nimport { Injectable } from '@angular/core';\r\nimport { ComposerService } from '@acaprojects/ngx-composer';\r\nimport { EngineSystemsService, EngineModuleBinding, EngineSystem } from '@acaprojects/ts-composer';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\nimport { ApplicationService } from '../../app.service';\r\nimport { BaseClass } from '../../../shared/base.class';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class SystemsManagerService extends BaseClass {\r\n    /** Application service */\r\n    public parent: ApplicationService;\r\n    /** Composer resource service */\r\n    private _resources: EngineSystemsService;\r\n    /** Subject for System list */\r\n    private _list = new BehaviorSubject<EngineSystem[]>([]);\r\n\r\n    constructor(private _composer: ComposerService) {\r\n        super();\r\n        this._composer.initialised.subscribe((state) => {\r\n            if (state) {\r\n                this._resources = this._composer.systems;\r\n                this.load();\r\n            }\r\n        });\r\n    }\r\n\r\n    /** List of available systems */\r\n    public get list() {\r\n        return this._list.getValue() || [];\r\n    }\r\n\r\n    /**\r\n     * List to changes on observable\r\n     * @param name Name of the observable\r\n     * @param next Callback for changes to the observable\r\n     */\r\n    public listen(name: 'list', next: (list: EngineSystem[]) => void) {\r\n        return this._list.subscribe(next);\r\n    }\r\n\r\n    /**\r\n     * Get engine module for the given system\r\n     * @param sys_id ID of the system to get the module from\r\n     * @param mod_id ID of the module with the given system\r\n     * @param index Index of the module\r\n     */\r\n    public get(sys_id: string, mod_id: string, index?: number): EngineModuleBinding {\r\n        return this._composer.bindings.module(sys_id, mod_id, index);\r\n    }\r\n\r\n    /**\r\n     * Load Systems\r\n     */\r\n    protected load() {\r\n        if (!this.parent || !this.parent.is_initialised || !this.parent.Users || !this.parent.Users.initialised) {\r\n            return this.timeout('load', () => this.load());\r\n        }\r\n        this.loadSystems();\r\n    }\r\n\r\n    /**\r\n     * Load one page of systems\r\n     * @param offset Item offset for the page to load\r\n     */\r\n    protected loadSystems(offset: number = 0, limit: number = 250) {\r\n        this._resources.query({ offset, limit }).then((list) => {\r\n            const total = this._resources.last_total;\r\n            const systems: EngineSystem[] = [...this.list, ...list];\r\n            this._list.next(systems.sort((a, b) => (a.name || '').localeCompare(b.name)));\r\n            if (systems.length < total) {\r\n                this.loadSystems(systems.length);\r\n            }\r\n        });\r\n    }\r\n}\r\n","import { ADynamicFormField } from '@acaprojects/ngx-dynamic-forms';\r\n\r\nimport { BaseDataClass } from '../base-api.class';\r\nimport { HashMap, Identity } from '../../../shared/utilities/types.utilities';\r\nimport { BaseAPIService } from '../base.service';\r\n\r\nexport interface ILocation {\r\n    x?: number;\r\n    y?: number;\r\n    name?: string;\r\n    map_id?: string;\r\n    building: string;\r\n    level: string | Identity;\r\n    fixed: boolean;\r\n    loc_id?: string;\r\n    display?: { [name: string]: string };\r\n    confidence?: number;\r\n    another_bld?: boolean;\r\n    at_desk?: boolean;\r\n}\r\n\r\nexport class User extends BaseDataClass {\r\n    /** First name of the user */\r\n    readonly first_name: string;\r\n    /** Last name of the user */\r\n    readonly last_name: string;\r\n    /** Windows user ID */\r\n    readonly windows_id: string;\r\n    /** Type of user */\r\n    readonly type: 'partner' | 'external' | 'internal';\r\n    /** Contact phone number of the user */\r\n    readonly phone: string;\r\n    /** Organisational department the user is part of */\r\n    readonly business_unit: string;\r\n    /** Whether user is external from the application's organisation */\r\n    readonly external: boolean;\r\n    /** Organisational Identifier for the user */\r\n    readonly staff_code: string;\r\n    /** Organisation the user is associated with */\r\n    private _organisation: Identity;\r\n    /** Map location of the user */\r\n    private _location: ILocation;\r\n    /** List of users that this user can act on behalf */\r\n    private _delegates: string[];\r\n\r\n    constructor(protected service: BaseAPIService<User>, raw_data: HashMap = {}) {\r\n        super(service, raw_data);\r\n        this.first_name = raw_data.first_name;\r\n        this.last_name = raw_data.last_name;\r\n        this.windows_id = raw_data.email;\r\n        this.type = raw_data.visitor ? 'external' : raw_data.type || 'internal';\r\n        this.phone = raw_data.phone || raw_data.mobile;\r\n        this.business_unit = raw_data.business_unit || raw_data.department;\r\n        this._organisation = raw_data.organisation || { id: raw_data.organisation_id, name: raw_data.organisation_name };\r\n        this.external = this.type === 'external';\r\n        this._location = null;\r\n        this.staff_code = raw_data.staff_code || raw_data.fmno;\r\n        this._delegates = raw_data.delegates;\r\n    }\r\n\r\n    /** Organisation the user is associated with */\r\n    public get organisation() {\r\n        return this._organisation;\r\n    }\r\n\r\n    /** Map location of the user */\r\n    public get last_location(): ILocation {\r\n        return this._location ? { ...(this._location) } : null;\r\n    }\r\n\r\n    /** List of users that this user can act on behalf */\r\n    public get delegates(): string[] {\r\n        return [...(this._delegates || [])];\r\n    }\r\n\r\n    /**\r\n     * Ask the server for the users current location\r\n     */\r\n    public locate(): Promise<ILocation> {\r\n        const service: any = this.service.parent || {};\r\n        return new Promise((resolve, reject) => {\r\n            if (service.Location) {\r\n                service.Location.show(this.id, { desk: this.email }).then(\r\n                    l => {\r\n                        this._location = l;\r\n                        resolve(l);\r\n                    },\r\n                    e => reject(e)\r\n                );\r\n            } else {\r\n                resolve(null);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Whether user is available during the given period\r\n     * @param start Start time as a unix timestamp with milliseconds\r\n     * @param end End time as a unix timestamp with milliseconds\r\n     */\r\n    public available(start?: number, end?: number): Promise<boolean> {\r\n        return new Promise<boolean>(resolve => {\r\n            this.service.query({ email: this.email, start, end })\r\n                .then(l => resolve(l && l.length > 0), _ => resolve(false));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Make a copy of this object\r\n     */\r\n    public clone(): User {\r\n        return new User(this.service, this);\r\n    }\r\n\r\n    /**\r\n     * Make a copy of this object without identification data\r\n     */\r\n    public duplicate(): User {\r\n        return new User(this.service, { ...this, id: null, email: null });\r\n    }\r\n\r\n    /**\r\n     * Initialise the form field metadata for the field\r\n     */\r\n    protected initialiseFormFields(): ADynamicFormField[] {\r\n        const edit = !!this.id;\r\n        const fields: ADynamicFormField[] = [\r\n            new ADynamicFormField({\r\n                key: 'name',\r\n                type: 'input',\r\n                value: this.name,\r\n                hide: true\r\n            }),\r\n            new ADynamicFormField({\r\n                key: 'first_name',\r\n                label: 'First Name',\r\n                type: 'input',\r\n                value: this.first_name,\r\n                required: true\r\n            }),\r\n            new ADynamicFormField({\r\n                key: 'last_name',\r\n                label: 'Last Name',\r\n                type: 'input',\r\n                value: this.last_name,\r\n                required: true\r\n            }),\r\n            new ADynamicFormField({\r\n                key: 'email',\r\n                label: 'Email',\r\n                type: 'input',\r\n                value: this.email,\r\n                required: true,\r\n                attributes: { type: 'email' }\r\n            })\r\n        ];\r\n        return fields;\r\n    }\r\n}\r\n","import { HashMap } from '../../../shared/utilities/types.utilities';\r\n\r\nimport * as faker from 'faker';\r\nimport { padZero, unique } from '../../../shared/utilities/general.utilities';\r\n\r\nlet USER_COUNT = 0;\r\n\r\nexport let USER_DOMAIN = 'acaprojects.com';\r\n\r\nconst USER_EMAILS: string[] = [];\r\n\r\n/**\r\n * Generate raw mock data for a user\r\n * @param id Forced ID for the mock\r\n * @param name Forced name for the user\r\n * @param external Whether user is external of the organisation\r\n */\r\nexport function generateMockUser(id?: string, name?: string, external?: boolean): HashMap {\r\n    if (!id) {\r\n        id = `user-${USER_COUNT++}`;\r\n    }\r\n    if (!name) {\r\n        name = `${faker.name.firstName()} ${faker.name.lastName()}`;\r\n    }\r\n    if (external === undefined) {\r\n        external = !((Math.random() * 99999) % 2);\r\n    }\r\n    const organisation = external ? faker.company.companyName() : USER_DOMAIN.split('.')[0];\r\n    let delegates: string[] = [];\r\n    const delegate_count = Math.min(Math.random() * 4 + 1, USER_EMAILS.length);\r\n    for (let i = 0; i < delegate_count; i++) {\r\n        delegates.push(USER_EMAILS[Math.floor(Math.random() * USER_EMAILS.length)]);\r\n    }\r\n    delegates = unique(delegates);\r\n    const email = `${name.split(' ').join('.').toLowerCase()}@${external ? 'not-' : ''}${USER_DOMAIN}`;\r\n    USER_EMAILS.push(email);\r\n    return {\r\n        id,\r\n        name,\r\n        email,\r\n        phone: faker.phone.phoneNumber(),\r\n        visitor: external,\r\n        organisation: {\r\n            id: organisation.split(' ').join('.').toLowerCase(),\r\n            name: organisation\r\n        },\r\n        department: faker.commerce.department(),\r\n        staff_code: padZero(Math.floor(Math.random() * 99999), 5),\r\n        delegates\r\n    };\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { ComposerService } from '@acaprojects/ngx-composer';\r\nimport { Md5 } from 'ts-md5/dist/md5';\r\n\r\nimport { BaseAPIService } from '../base.service';\r\nimport { User } from './user.class';\r\nimport { HashMap } from '../../../shared/utilities/types.utilities';\r\n\r\nimport * as dayjs from 'dayjs';\r\n\r\nexport interface ILoginOptions {\r\n    /** URL to post login request to */\r\n    url?: string;\r\n    /** Whether form data is passed in the body of the request */\r\n    form?: boolean;\r\n    /** Custom headers to pass into the post request */\r\n    headers?: HashMap<string>;\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class UsersService extends BaseAPIService<User> {\r\n    constructor(protected _composer: ComposerService, protected uhttp: HttpClient, protected location: Location) {\r\n        super(_composer);\r\n        this._name = 'Users';\r\n        this._api_route = 'users';\r\n        this._compare = (a, b) => !a.id.localeCompare(b.id) || !a.email.localeCompare(b.email);\r\n        this.set('current_user', new User(this, { id: 'local_user', name: 'Local User' }));\r\n    }\r\n\r\n    /** Currently logged in user */\r\n    public get current(): User {\r\n        return this.get('current_user');\r\n    }\r\n\r\n    /**\r\n     * Sets the access token and expiry for the user\r\n     * @param token OAuth bearer token\r\n     * @param expiry Expiry epoch timestamp in ms\r\n     * @param reload Whether to reload the page after setting tokens\r\n     */\r\n    public setToken(token: string, expiry?: number, reload: boolean = true) {\r\n        if (!expiry) {\r\n            expiry = dayjs()\r\n                .add(7, 'd').endOf('d')\r\n                .valueOf();\r\n        }\r\n        const path = `${location.origin}${this.parent.setting('composer.route') || ''}/oauth-resp.html`;\r\n        const client_id = Md5.hashStr(path);\r\n        if (sessionStorage) {\r\n            sessionStorage.setItem(`${client_id}_access_token`, token);\r\n            sessionStorage.setItem(`${client_id}_expires_at`, `${expiry}`);\r\n        }\r\n        if (localStorage) {\r\n            localStorage.setItem(`${client_id}_access_token`, token);\r\n            localStorage.setItem(`${client_id}_expires_at`, `${expiry}`);\r\n        }\r\n        if (reload) {\r\n            this.location.go(this.location.path());\r\n        }\r\n        return path;\r\n    }\r\n\r\n    /**\r\n     * Post login request to the API\r\n     * @param query_params Key value pairs to pass into\r\n     * @param options Options for the login request\r\n     */\r\n    public login(query_params: HashMap, options: ILoginOptions = {}): Promise<void> {\r\n        if (!this._promises['login']) {\r\n            this._promises['login'] = new Promise<void>((resolve, reject) => {\r\n                this.set('status', 'loading');\r\n                let headers = new HttpHeaders();\r\n                if (!options || options.form !== false) {\r\n                    headers = headers.append('Content-Type', 'application/x-www-form-urlencoded');\r\n                }\r\n                const url = (options ? options.url : '') || '/auth/signin';\r\n                this.uhttp.post(url, query_params, { headers }).subscribe(\r\n                    _ => null,\r\n                    e => reject(e),\r\n                    () => {\r\n                        this._composer.auth.authorise();\r\n                        resolve();\r\n                    }\r\n                );\r\n            });\r\n        }\r\n        return this._promises['login'];\r\n    }\r\n\r\n    /**\r\n     * Logout of user and redirect to logout URL\r\n     */\r\n    public logout() {\r\n        this._composer.auth.logout();\r\n    }\r\n\r\n    /**\r\n     * Load initial data for the service\r\n     */\r\n    protected load(tries: number = 0): Promise<void> {\r\n        this.set('status', 'loading');\r\n        return new Promise<void>(resolve => {\r\n            if (tries > 4) {\r\n                this.set('status', 'invalid');\r\n                return resolve();\r\n            }\r\n            this.show('current', { engine: true }).then(\r\n                current_user => {\r\n                    this.set('status', 'available');\r\n                    this.set('current_user', current_user);\r\n                    if (this.parent && this.parent.setting('app.user.grab_api_details')) {\r\n                        this.show(current_user.email).then(\r\n                            user => {\r\n                                this.set('current_user', user);\r\n                                resolve();\r\n                            },\r\n                            () => this.timeout('load', () => this.load(++tries).then(() => resolve()))\r\n                        );\r\n                    } else {\r\n                        resolve();\r\n                    }\r\n                },\r\n                () => this.timeout('load', () => this.load(++tries).then(() => resolve()))\r\n            );\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Convert raw API data into a valid User Object\r\n     * @param raw_item Raw API data\r\n     */\r\n    protected process(raw_data: any): User {\r\n        return new User(this, raw_data);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\r\n\r\nimport { HashMap } from '../shared/utilities/types.utilities';\r\nimport { unique } from '../shared/utilities/general.utilities';\r\n\r\n/** List of keys that cannot be in a combination by themselves or with each other */\r\nconst INVALID_STANDALONE_KEYS: string[] = ['control', 'shift', 'alt', 'meta', 'os'];\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class HotkeysService {\r\n    /** Map of subjects which store press states of keys */\r\n    private keydown_states: HashMap<BehaviorSubject<number>> = {};\r\n    /** Map of obserers for key state subjects */\r\n    private keydown_observers: HashMap<Observable<number>> = {};\r\n    /** List of keys at the end of a combination */\r\n    private combo_end: string[] = [];\r\n    /** List of registered hotkey combinations */\r\n    private registered_combos: string[][] = [];\r\n    /** Counter for the number of keydown events. Used for checking order of key presses */\r\n    private counter: number = 0;\r\n    /** Last key code to be pressed */\r\n    private last_down: string;\r\n\r\n    constructor() {\r\n        window.addEventListener('keydown', (event: KeyboardEvent) => {\r\n            const code = this.mapKey((event.code || '').toLowerCase());\r\n            if (this.last_down !== code) {\r\n                if (!this.keydown_states[code]) {\r\n                    this.keydown_states[code] = new BehaviorSubject(null);\r\n                    this.keydown_observers[code] = this.keydown_states[code].asObservable();\r\n                }\r\n                this.keydown_states[code].next(this.counter++);\r\n                if (this.combo_end.indexOf(code) >= 0) {\r\n                    event.preventDefault();\r\n                }\r\n                this.last_down = code;\r\n            }\r\n        });\r\n\r\n        window.addEventListener('keyup', (event: KeyboardEvent) => {\r\n            const code = this.mapKey((event.code || '').toLowerCase());\r\n            this.keydown_states[code].next(null);\r\n            if (this.last_down === code) {\r\n                this.last_down = null;\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Listen to the given key combination\r\n     * @param combo Array of key codes to listen to or a hotkey string e.g. `Alt+Shift+KeyK`\r\n     * @param next Callback for combination presses\r\n     */\r\n    public listen(combo: string | string[], next: () => void): Subscription {\r\n        combo = (combo instanceof Array ? combo : combo.split('+'));\r\n        const combination: string[] = combo.map(i => this.mapKey(i.toLowerCase()));\r\n        if (combination.length > 0 && this.validCombination(combination)) {\r\n            this.registered_combos.push(combination);\r\n            const last_key = combination[combination.length - 1];\r\n            if (!this.keydown_states[last_key]) {\r\n                this.keydown_states[last_key] = new BehaviorSubject(null);\r\n                this.keydown_observers[last_key] = this.keydown_states[last_key].asObservable();\r\n            }\r\n            this.updateCombinationEndList();\r\n            return this.keydown_observers[last_key].subscribe((count) => {\r\n                if (count) {\r\n                    const presses: number[] = [];\r\n                    if (combination.length > 1) {\r\n                        // Check that keys are pressed\r\n                        for (const key of combination) {\r\n                            const state = this.keydown_states[key];\r\n                            presses.push(state ? state.getValue() || -1 : -1);\r\n                        }\r\n                        // Check that keys are pressed in the correct order\r\n                        for (let i = 0; i < combination.length - 1; i++) {\r\n                            if (presses[i] > presses[i + 1]) { return; }\r\n                        }\r\n                    }\r\n                    next();\r\n                }\r\n            });\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Map key codes with multiple versions to simple form\r\n     * @param code Code to transform\r\n     */\r\n    private mapKey(code: string): string {\r\n        if (code.indexOf('alt') || code.indexOf('shift') || code.indexOf('control')) {\r\n            return code.replace('left', '').replace('right', '');\r\n        }\r\n        return code;\r\n    }\r\n\r\n    /**\r\n     * Update the list of the last keys in combinations to allow for prevent default actions on pre-existing hotkeys\r\n     */\r\n    private updateCombinationEndList(): void {\r\n        const key_list = [];\r\n        for (const combo of this.registered_combos) {\r\n            this.combo_end.push(combo[combo.length - 1]);\r\n        }\r\n        this.combo_end = unique(key_list);\r\n    }\r\n\r\n    /**\r\n     * Checks if the given hotkey combination is allowed and valid\r\n     * @param combo Array of key codes\r\n     */\r\n    private validCombination(combo: string[]): boolean {\r\n        let non_meta = 0;\r\n        for (const key of combo) {\r\n            if (INVALID_STANDALONE_KEYS.indexOf(key) < 0) {\r\n                non_meta++;\r\n            }\r\n        }\r\n        return non_meta > 0;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { HashMap } from '../shared/utilities/types.utilities';\r\nimport { getItemWithKeys } from '../shared/utilities/general.utilities';\r\nimport { BaseClass } from '../shared/base.class';\r\nimport { VERSION } from 'src/environments/version';\r\n\r\nimport * as dayjs from 'dayjs';\r\n\r\ninterface SettingsMap {\r\n    api: HashMap;\r\n    local: HashMap;\r\n    session: HashMap;\r\n    [block: string]: HashMap;\r\n}\r\n\r\ndeclare global {\r\n    interface Window {\r\n        debug: boolean;\r\n    }\r\n}\r\n\r\nexport type ConsoleStream = 'debug' | 'warn' | 'log' | 'error';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class SettingsService extends BaseClass {\r\n\r\n    /** Map of settings */\r\n    private _settings: SettingsMap = { api: {}, local: {}, session: {} };\r\n    /** Store for promises */\r\n    private _promises: { [name: string]: Promise<any> } = {};\r\n    /** Name of the application */\r\n    private _app_name = 'PlaceOS';\r\n\r\n    constructor(private http: HttpClient) {\r\n        super();\r\n        const now = dayjs();\r\n        const build = dayjs(VERSION.time);\r\n        const built = now.isSame(build, 'd') ? `Today at ${build.format('h:mmA')}` : build.format('D MMM YYYY, h:mmA');\r\n        this.log('CORE', `${VERSION.core_version}`, null, 'debug', true);\r\n        this.log('APP', `${VERSION.version} - ${VERSION.hash} | Built: ${built}`, null, 'debug', true);\r\n        this.init();\r\n    }\r\n\r\n    /**\r\n     * Initialise the settings\r\n     */\r\n    public async init() {\r\n        await this.loadFromFile('api');\r\n        /* istanbul ignore next */\r\n        if (this._settings.api.debug) {\r\n            window.debug = true;\r\n        }\r\n        /* istanbul ignore next */\r\n        if (this._settings.api.app && this._settings.api.app.name) {\r\n            this._app_name = this._settings.api.app.name;\r\n        }\r\n        this.log('Settings', 'Successfully loaded settings');\r\n        this._initialised.next(true);\r\n    }\r\n\r\n    /** Whether settings service has initialised */\r\n    public get app_name() { return this._app_name; }\r\n\r\n    /* istanbul ignore next */\r\n    /**\r\n     * Log data to the browser console\r\n     * @param type Type of message\r\n     * @param msg Message body\r\n     * @param args array of argments to log to the console\r\n     * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\r\n     * @param force Whether to force message to be emitted when debug is disabled\r\n     */\r\n    public log(type: string, msg: string, args?: any, stream: ConsoleStream = 'debug', force: boolean = false) {\r\n        if (window.debug || force) {\r\n            const colors: string[] = ['color: #E91E63', 'color: #3F51B5', 'color: default'];\r\n            if (args) {\r\n                console[stream](`%c[${this.app_name}]%c[${type}] %c${msg}`, ...colors, args);\r\n            } else {\r\n                console[stream](`%c[${this.app_name}]%c[${type}] %c${msg}`, ...colors);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get a setting\r\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\r\n     */\r\n    public get(key: string): any {\r\n        const keys = key.split('.');\r\n        let value = null;\r\n        value = getItemWithKeys(keys, this._settings.api) ||\r\n            getItemWithKeys(keys, this._settings.session) ||\r\n            getItemWithKeys(keys, this._settings.local);\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * Load setting data from a file\r\n     * @param name Namespace to add file data to\r\n     * @param file URL to file to load setting data from\r\n     */\r\n    private async loadFromFile(name: string, file: string = 'assets/settings.json', tries: number = 0) {\r\n        if (file !== 'assets/settings.json' && tries > 5) {\r\n            return Promise.resolve();\r\n        }\r\n        const file_name = file.split('/')[file.split('/').length - 1];\r\n        // Check if data has been loaded into the global space\r\n        if (window[file_name] instanceof Object) {\r\n            this._settings[name] = { ...(this._settings[name] || {}), ...window[file_name] };\r\n            return Promise.resolve();\r\n        }\r\n        const key = `load|${name}|${file}`;\r\n        if (!this._promises[key]) {\r\n            this._promises[key] = new Promise<void>((resolve, reject) => {\r\n                this.http.get(file).subscribe(\r\n                    (data) => {\r\n                        this._settings[name] = { ...(this._settings[name] || {}), ...(data || {}) };\r\n                    }, (e) => {\r\n                        this.log('Settings', `Failed to load settings from \"${file}\"`);\r\n                        this._promises[key] = null;\r\n                        this.timeout(`load_${file_name}`, () => {\r\n                            this.loadFromFile(name, file, ++tries).then(() => resolve());\r\n                        })\r\n                    }, () => resolve()\r\n                );\r\n            });\r\n        }\r\n        return this._promises[key];\r\n    }\r\n\r\n}\r\n","import { Subscription, BehaviorSubject } from \"rxjs\";\r\n\r\nexport class BaseClass {\r\n    /** Store for named timers */\r\n    protected _timers: { [name: string]: number } = {};\r\n    /** Store for named intervals */\r\n    protected _intervals: { [name: string]: number } = {};\r\n    /** Store for named subscription unsub callbacks */\r\n    protected _subscriptions: { [name: string]: (Subscription | (() => void)) } = {};\r\n    /** Subject which stores the initialised state of the object */\r\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\r\n\r\n    /** Observable of the initialised state of the object */\r\n    public get initialised(): BehaviorSubject<boolean> {\r\n        return this._initialised;\r\n    }\r\n    /** Whether the object has been initialised */\r\n    public get is_initialised(): boolean {\r\n        return this._initialised.getValue();\r\n    }\r\n\r\n    /**\r\n     * Creates a named timer\r\n     * @param name Name of the timer\r\n     * @param fn Callback function for the timer\r\n     * @param delay Callback delay\r\n     */\r\n    protected timeout(name: string, fn: () => void, delay: number = 300) {\r\n        if (name && fn && fn instanceof Function) {\r\n            this.clearTimeout(name);\r\n            this._timers[name] = <any>setTimeout(() => {\r\n                fn();\r\n                this._timers[name] = null;\r\n            }, delay);\r\n        } else {\r\n            throw new Error(\r\n                name ? 'Cannot create named timeout without a name' : 'Cannot create a timeout without a callback'\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Clears the named timer\r\n     * @param name Timer name\r\n     */\r\n    protected clearTimeout(name: string) {\r\n        if (this._timers[name]) {\r\n            clearTimeout(this._timers[name]);\r\n            this._timers[name] = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Creates a named interval\r\n     * @param name Name of the interval\r\n     * @param fn Callback function for the interval\r\n     * @param delay Callback delay\r\n     */\r\n    protected interval(name: string, fn: () => void, delay: number = 300) {\r\n        if (name && fn && fn instanceof Function) {\r\n            this.clearInterval(name);\r\n            this._intervals[name] = <any>setInterval(() => fn(), delay);\r\n        } else {\r\n            throw new Error(\r\n                name ? 'Cannot create named interval without a name' : 'Cannot create a interval without a callback'\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Clears the named interval\r\n     * @param name Timer name\r\n     */\r\n    protected clearInterval(name: string) {\r\n        if (this._intervals[name]) {\r\n            clearInterval(this._intervals[name]);\r\n            this._intervals[name] = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Store named subscription\r\n     * @param name Name of the subscription\r\n     * @param unsub Unsubscribe callback or Subscription object\r\n     */\r\n    protected subscription(name: string, unsub: Subscription | (() => void)) {\r\n        this.unsub(name);\r\n        this._subscriptions[name] = unsub\r\n    }\r\n\r\n    /**\r\n     * Call unsubscribe callback with the given name\r\n     * @param name\r\n     */\r\n    protected unsub(name: string) {\r\n        if (this._subscriptions && this._subscriptions[name]) {\r\n            if (this._subscriptions[name] instanceof Subscription) {\r\n                (this._subscriptions[name] as Subscription).unsubscribe()\r\n            } else if (this._subscriptions[name] instanceof Function) {\r\n                (this._subscriptions[name] as any)();\r\n            }\r\n            this._subscriptions[name] = null;\r\n        }\r\n    }\r\n}\r\n","\r\nimport { Component, OnDestroy } from '@angular/core';\r\nimport { BaseClass } from './base.class';\r\n\r\n@Component({\r\n    selector: 'a-very-basic-component-base-that-should-not-be-used',\r\n    template: ``,\r\n    styles: [``]\r\n})\r\nexport class BaseComponent extends BaseClass implements OnDestroy {\r\n\r\n    public ngOnDestroy(): void {\r\n        // Clear local timers\r\n        for (const key in this._timers) {\r\n            if (this._timers.hasOwnProperty(key)) {\r\n                this.clearTimeout(key);\r\n            }\r\n        }\r\n        // Clear local intervals\r\n        for (const key in this._intervals) {\r\n            if (this._intervals.hasOwnProperty(key)) {\r\n                this.clearInterval(key);\r\n            }\r\n        }\r\n        // Clear local subscriptions\r\n        for (const key in this._subscriptions) {\r\n            if (this._subscriptions.hasOwnProperty(key)) {\r\n                this.unsub(key);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n","<div *ngIf=\"group\">\r\n    <a-dropdown [items]=\"options\" [(ngModel)]=\"active_duration\" placeholder=\"Select duration...\" (ngModelChange)=\"setValue($event)\"></a-dropdown>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { FormGroup, AbstractControl } from '@angular/forms';\r\nimport { ADynamicFormField } from '@acaprojects/ngx-dynamic-forms';\r\n\r\nimport { BaseComponent } from '../../base.component';\r\nimport { getNextFreeBookingSlot } from '../../../services/data/bookings/booking.utilities';\r\nimport { humaniseDuration } from '../../utilities/general.utilities';\r\nimport { FORM_FIELDS } from '../../globals/form-fields';\r\n\r\nimport * as dayjs from 'dayjs';\r\n\r\n@Component({\r\n    selector: 'custom-duration-field',\r\n    templateUrl: './duration-field.component.html',\r\n    styleUrls: ['./duration-field.component.scss']\r\n})\r\nexport class CustomDurationFieldComponent extends BaseComponent  {\r\n    /** Form Control holding date data */\r\n    public date_control: AbstractControl;\r\n    /** Form Control holding space data */\r\n    public space_control: AbstractControl;\r\n    /** Step size for available times */\r\n    public block_size = 15;\r\n    /** Step size for available times */\r\n    public active_duration: { id: number, name: string };\r\n    /** List of available durations */\r\n    public options: { id: number, name: string }[] = [];\r\n\r\n    constructor(protected field: ADynamicFormField, public group: FormGroup) {\r\n        super();\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n        if (this.group) {\r\n            if (this.group.controls.date) {\r\n                this.date_control = this.group.controls.date;\r\n                this.subscription('date', this.date_control.valueChanges.subscribe(() => this.calculateAvailableDurations()));\r\n            }\r\n            if (this.group.controls.room || this.group.controls.space) {\r\n                this.space_control = this.group.controls.room || this.group.controls.space;\r\n                this.subscription('space', this.space_control.valueChanges.subscribe(() => this.calculateAvailableDurations()));\r\n            }\r\n            this.subscription('control', this.field.control.valueChanges.subscribe(() => this.updateDisplay()));\r\n        }\r\n        this.calculateAvailableDurations();\r\n    }\r\n\r\n    /**\r\n     * Update the active value displayed on the dropdown\r\n     */\r\n    public updateDisplay() {\r\n        if (this.options && this.options.length > 0) {\r\n            if (!this.active_duration) {\r\n                if (this.field.getValue()) {\r\n                    this.active_duration = this.options.find(i => i.id === this.field.getValue());\r\n                }\r\n                if (!this.active_duration) {\r\n                    this.active_duration = this.options[0];\r\n                    this.setValue(this.options[0]);\r\n                }\r\n            } else if (!this.options.find(i => i.id === this.active_duration.id)) {\r\n                let diff = 9999;\r\n                let new_opt = null;\r\n                for (const option of this.options) {\r\n                    if (Math.abs(option.id - this.active_duration.id) < diff) {\r\n                        diff = Math.abs(option.id - this.active_duration.id);\r\n                        new_opt = option;\r\n                    }\r\n                }\r\n                if (new_opt) {\r\n                    this.active_duration = new_opt;\r\n                    this.setValue(new_opt);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generate a list of times selectable by the user\r\n     */\r\n    public calculateAvailableDurations() {\r\n        this.options = [];\r\n        let date = dayjs().startOf('m');\r\n        const max_duration = this.field.metadata ? this.field.metadata.max_duration || 600 : 600;\r\n        const min_duration = this.field.metadata ? this.field.metadata.min_duration || 30 : 30;\r\n        let end = date.add(max_duration, 'm');\r\n        if (this.space_control) {\r\n            // Get times based off available times in space\r\n            if (this.date_control && this.date_control.value) {\r\n                date = dayjs(this.date_control.value).startOf('m');\r\n            }\r\n            const slot = getNextFreeBookingSlot(this.space_control.value.bookings, date.valueOf(), min_duration);\r\n            if (slot) {\r\n                // Check if slot is after the active date\r\n                date = slot.start > date.valueOf() ? dayjs(slot.start).startOf('m') : date;\r\n            }\r\n            end = slot ? dayjs(slot.end).startOf('m') : dayjs(date).add(max_duration, 'm');\r\n        }\r\n        end = end.endOf('m');\r\n        // Get available durations between the date and end times\r\n        date = date.add(min_duration, 'm').startOf('m');\r\n        let duration = min_duration;\r\n        for (; date.isBefore(end, 's'); date = date.add(this.block_size, 'm')) {\r\n            this.options.push({ id: duration, name: humaniseDuration(duration) });\r\n            duration += 15;\r\n            if (this.options.length > Math.floor((max_duration - min_duration) / this.block_size)) {\r\n                break;\r\n            }\r\n        }\r\n        this.updateDisplay();\r\n    }\r\n\r\n    /**\r\n     * Update the value of the form field\r\n     * @param value New value\r\n     */\r\n    public setValue(block: { id: number, name: string }) {\r\n        this.field.setValue(block.id);\r\n    }\r\n}\r\n\r\nFORM_FIELDS.duration = CustomDurationFieldComponent;\r\n","<div *ngIf=\"group\">\r\n    <a-dropdown [items]=\"times\" [(ngModel)]=\"active_time\" placeholder=\"Select time...\" (ngModelChange)=\"setValue($event)\"></a-dropdown>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { FormGroup, AbstractControl } from '@angular/forms';\r\n\r\nimport { BaseComponent } from '../../base.component';\r\nimport { ADynamicFormField } from '@acaprojects/ngx-dynamic-forms';\r\nimport { getFreeBookingSlots } from '../../../services/data/bookings/booking.utilities';\r\n\r\nimport * as dayjs from 'dayjs';\r\nimport { FORM_FIELDS } from '../../globals/form-fields';\r\n\r\ninterface TimeSlot {\r\n    id: string;\r\n    name: string;\r\n    value?: number;\r\n}\r\n\r\n@Component({\r\n    selector: 'custom-time-field',\r\n    templateUrl: './time-field.component.html',\r\n    styleUrls: ['./time-field.component.scss']\r\n})\r\nexport class CustomTimeFieldComponent extends BaseComponent {\r\n    /** Form Control holding date data */\r\n    public date_control: AbstractControl;\r\n    /** Form Control holding space data */\r\n    public space_control: AbstractControl;\r\n    /** Step size for available times */\r\n    public block_size = 5;\r\n    /** Step size for available times */\r\n    public min_size = this.block_size * 6;\r\n    /** Step size for available times */\r\n    public active_time: TimeSlot;\r\n    /** List of selectable times */\r\n    public times: TimeSlot[];\r\n\r\n    constructor(protected field: ADynamicFormField, public group: FormGroup) {\r\n        super();\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n        if (this.group) {\r\n            if (this.group.controls.date) {\r\n                this.date_control = this.group.controls.date;\r\n                this.subscription('date', this.date_control.valueChanges.subscribe(() => this.updateDisplay(true)));\r\n            }\r\n            if (this.group.controls.room || this.group.controls.space) {\r\n                this.space_control = this.group.controls.room || this.group.controls.space;\r\n                this.subscription('space', this.space_control.valueChanges.subscribe(() => this.updateDisplay()));\r\n            }\r\n            this.subscription('control', this.field.control.valueChanges.subscribe(() => this.updateDisplay()));\r\n        }\r\n        this.calculateAvailableTimes();\r\n        if (this.date_control) {\r\n            const value = this.date_control.value;\r\n            if (!this.times.find(block => block.value === value)) {\r\n                this.setValue(this.times[0]);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Update the active value displayed on the dropdown\r\n     * @param from_ref Whether new value was generated from a reference field\r\n     */\r\n    public updateDisplay(from_ref: boolean = false) {\r\n        if (this.times) {\r\n            for (const time of this.times) {\r\n                if (this.field.getValue() === time.id) {\r\n                    this.active_time = time;\r\n                    break;\r\n                }\r\n            }\r\n            if (!this.field.getValue()) {\r\n                // Initialise with date time set on date control\r\n                if (this.date_control) {\r\n                    let date = dayjs(this.date_control.value);\r\n                    date = date.minute(Math.ceil(date.minute() / 5) * 5);\r\n                    const date_str = date.format('HH:mm');\r\n                    for (const time of this.times) {\r\n                        if (date.valueOf() - time.value <= 0) {\r\n                            this.active_time = time;\r\n                            this.setValue(time, true);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                // Set to default value\r\n                if (!this.field.getValue()) {\r\n                    this.active_time = this.times[0];\r\n                    this.setValue(this.times[0], from_ref);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generate a list of times selectable by the user\r\n     */\r\n    public calculateAvailableTimes() {\r\n        this.times = [];\r\n        let date = dayjs().startOf('m');\r\n        const book_ahead = this.field.metadata ? this.field.metadata.book_ahead || 660 : 660; // 11 hours default\r\n        const min_duration = this.field.metadata ? this.field.metadata.min_duration || 30 : 30;\r\n        if (this.space_control) {\r\n            // Get times based off available times in space\r\n            const slots = getFreeBookingSlots(this.space_control.value.bookings, min_duration);\r\n            date = date.minute(Math.ceil(date.minute() / this.block_size) * this.block_size);\r\n            const end = dayjs(date)\r\n                .add(book_ahead, 'm')\r\n                .endOf('m');\r\n            for (; date.isBefore(end, 's'); date = date.add(this.block_size, 'm')) {\r\n                const value = date.valueOf();\r\n                if (slots.find(i => i.start <= value && value < i.end && dayjs(i.end).diff(date, 'm') >= min_duration)) {\r\n                    this.times.push({ id: date.format('HH:mm'), name: date.format('h:mm A'), value: date.valueOf() });\r\n                }\r\n            }\r\n        } else {\r\n            // Get times from now\r\n            if (date.minute() % this.block_size !== 0) {\r\n                this.times.push({ id: date.format('HH:mm'), name: date.format('h:mm A') });\r\n            }\r\n            date = date.minute(Math.ceil(date.minute() / this.block_size) * this.block_size);\r\n            const end = dayjs(date).add(book_ahead, 'm');\r\n            for (; date.isBefore(end); date = date.add(this.block_size, 'm')) {\r\n                this.times.push({ id: date.format('HH:mm'), name: date.format('h:mm A'), value: date.valueOf() });\r\n            }\r\n        }\r\n        this.updateDisplay();\r\n    }\r\n\r\n    /**\r\n     * Update the value of the form field\r\n     * @param value New value\r\n     * @param from_ref Whether new value was generated from a reference field\r\n     */\r\n    public setValue(slot: TimeSlot, from_ref: boolean = false) {\r\n        this.field.setValue(slot.id);\r\n        if (this.date_control && !from_ref) {\r\n            const time = dayjs(slot.value);\r\n            const date = dayjs(this.date_control.value)\r\n                .hour(time.hour())\r\n                .minute(time.minute())\r\n                .startOf('m');\r\n            this.date_control.setValue(date.valueOf());\r\n        }\r\n    }\r\n}\r\n\r\nFORM_FIELDS.time = CustomTimeFieldComponent;\r\n","<div class=\"user-search\" widget>\r\n    <div class=\"search\" a-tooltip [show]=\"show && search_str && filtered_list.length > 0\" (showChange)=\"show = $event\" [content]=\"list\">\r\n        <div class=\"searchbar\">\r\n            <input type=\"text\" [(ngModel)]=\"search_str\" (ngModelChange)=\"search($event)\" (blur)=\"reset()\" placeholder=\"Search for host...\" />\r\n            <div class=\"spinner\" *ngIf=\"searching\">\r\n                <a-spinner circle-ring color=\"#000\"></a-spinner>\r\n            </div>\r\n        </div>\r\n        <ng-template #list>\r\n            <div class=\"user-list\">\r\n                <div class=\"item\" *ngFor=\"let item of filtered_list\" (mouseup)=\"select(item)\" (touchend)=\"select(item)\" feedback>\r\n                    <div class=\"name\" [innerHTML]=\"item.match_name || item.name\"></div>\r\n                    <div class=\"email\" [innerHTML]=\"item.match_email || item.email\"></div>\r\n                </div>\r\n            </div>\r\n        </ng-template>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Subject, Observable, of } from 'rxjs';\r\nimport { switchMap, debounceTime, distinctUntilChanged, map, catchError } from 'rxjs/operators';\r\n\r\nimport { ADynamicFormField } from '@acaprojects/ngx-dynamic-forms';\r\n\r\nimport { BaseComponent } from '../../base.component';\r\nimport { ApplicationService } from '../../../services/app.service';\r\nimport { User } from '../../../services/data/users/user.class';\r\nimport { filterList, matchToHighlight } from '../../utilities/general.utilities';\r\nimport { FORM_FIELDS } from '../../globals/form-fields';\r\n\r\n@Component({\r\n    selector: 'custom-user-search-field',\r\n    templateUrl: './user-search-field.component.html',\r\n    styleUrls: ['./user-search-field.component.scss']\r\n})\r\nexport class CustomUserSearchFieldComponent extends BaseComponent implements OnInit {\r\n    /** List of users from an API search */\r\n    public filtered_list: User[] = [];\r\n    /** List of users from an API search */\r\n    public search_results$: Observable<User[]>;\r\n    /** Whether to show list tooltip */\r\n    public show: boolean;\r\n    /** Search input field value */\r\n    public search_str: string;\r\n    /** Whether a query is in progress */\r\n    public searching: boolean;\r\n    /** Subject holding the value of the search */\r\n    private search$ = new Subject<string>();\r\n\r\n    constructor(protected field: ADynamicFormField, protected group: FormGroup, private service: ApplicationService) {\r\n        super();\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n        if (this.group) {\r\n            if (this.field.references && this.field.references.length > 0) {\r\n                const control = this.group.controls[this.field.references[0]];\r\n                if (control) {\r\n                    this.subscription('reference', control.valueChanges.subscribe(() => this.updateDisplay()));\r\n                }\r\n            }\r\n            this.subscription('control', this.field.control.valueChanges.subscribe(() => this.updateDisplay()));\r\n        }\r\n        // Listen for input changes\r\n        this.search_results$ = this.search$.pipe(\r\n            debounceTime(400),\r\n            distinctUntilChanged(),\r\n            switchMap(query => {\r\n                this.searching = true;\r\n                this.show = true;\r\n                return query.length >= 3 ? (this.service.Users.query({ q: query.slice(0, 3), cache: 60 * 1000 }) as Promise<User[]>) : Promise.resolve([]);\r\n            }),\r\n            catchError((err) => of([])),\r\n            map(list => {\r\n                this.searching = false;\r\n                return filterList(this.search_str, list, ['name', 'email']);\r\n            })\r\n        );\r\n        // Process API results\r\n        this.search_results$.subscribe(list => {\r\n            this.filtered_list = list;\r\n            this.filtered_list.forEach((i: any) => {\r\n                i.match_name = matchToHighlight(i.match_name);\r\n                i.match_email = matchToHighlight(i.match_email);\r\n                return i;\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Search for a user that matches the filter string\r\n     * @param filter String to filter users on\r\n     */\r\n    public search(filter: string) {\r\n        this.search_str = filter;\r\n        this.search$.next(filter);\r\n    }\r\n\r\n    /**\r\n     * Update input display string\r\n     */\r\n    public updateDisplay() {\r\n        const value = this.field.control.value;\r\n        this.search_str = value ? value.name : '';\r\n    }\r\n\r\n    /**\r\n     * Reset the display value for the search input\r\n     */\r\n    public reset() {\r\n        this.timeout('reset', () => {\r\n            const value = this.field.control.value;\r\n            this.search_str = value ? value.name : '';\r\n            this.show = false;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Set the active user\r\n     * @param user New active user\r\n     */\r\n    public select(user: User) {\r\n        if (user) {\r\n            this.field.setValue(user);\r\n        }\r\n        this.timeout('hide', () => {\r\n        this.show = false;\r\n        }, 100);\r\n    }\r\n}\r\n\r\nFORM_FIELDS.host = CustomUserSearchFieldComponent;\r\n","\r\nimport * as dayjs from 'dayjs';\r\n\r\n/** Version number of the application */\r\nexport const version = 'local-dev';\r\n/** Version number of the base application */\r\nexport const core_version = '1.0.0';\r\n/** Build time of the application */\r\nexport const build = dayjs();\r\n","\r\nimport { Type } from '@angular/core';\r\n\r\n/** List of form field contents mapped to corresponding keys */\r\nexport const FORM_FIELDS: { [id: string]: Type<any> } = {};","\r\nimport { IOverlayConfig } from \"@acaprojects/ngx-overlays\";\r\n\r\n/** List of Overlays to register on application initialisation */\r\nexport const OVERLAY_REGISTER: { id: string; config: IOverlayConfig }[] = [];\r\n","\r\nimport './systems.mock';\r\n","\r\nimport { MockHttpRequestHandlerOptions } from '@acaprojects/ts-composer';\r\n\r\nimport { HashMap } from \"../utilities/types.utilities\";\r\nimport { generateMockSpace } from \"../../services/data/spaces/space.utilities\";\r\nimport { setMockBookingStartDatetime } from \"../../services/data/bookings/booking.utilities\";\r\nimport { generateMockUser } from \"../../services/data/users/user.utilities\";\r\n\r\nimport * as dayjs from 'dayjs';\r\n\r\ninterface IMockEngineSystem {\r\n    id?: string;\r\n    name?: string;\r\n    [module: string]: HashMap[] | string;\r\n}\r\n\r\nexport interface IBookingPanelBindings {\r\n    /** Whether user input is enabled */\r\n    touch_enabled: boolean;\r\n    /** Number of seconds before a meeting can be started, being truthy enables start/stop and auto-cancellations */\r\n    timeout?: number;\r\n    /** Number of seconds after the start of a meeting when it is auto-cancelled, overrides `timeout` value */\r\n    cancel_timeout?: number;\r\n    /** Whether to display hearing assistance UI elements */\r\n    has_accessability?: boolean;\r\n    /** URL to embed into the control modal when opened */\r\n    control_url?: string;\r\n    /** Whether to display catering UI elements */\r\n    has_catering?: boolean;\r\n    /** Whether to hide booking details(title and host) */\r\n    hide_details?: boolean;\r\n    /** Whether to hide the title of the displayed bookings */\r\n    hide_title?: boolean;\r\n    /** Whether to hide user(host) details */\r\n    hide_user?: boolean;\r\n    /** Whether to hide timeline availability */\r\n    hide_availability?: boolean;\r\n    /** Whether to disable booking from the UI */\r\n    booking_disabled?: boolean;\r\n    /** Whether booking future meetings are allowed */\r\n    no_timeline_bookings?: boolean;\r\n    /** Time before the booking end with which the current booking is endable in ms from UTC epoch */\r\n    is_endable?: number;\r\n    /** Whether to automatically ask user starting the current meeting */\r\n    ask_start?: boolean;\r\n    /** Whether to automatically ask user about ending the active meeting */\r\n    ask_end?: boolean;\r\n    /** Default meeting title if the displayed meeting doesn't have one */\r\n    default_title?: string;\r\n    /** Hide all meeting related details */\r\n    hide_all?: boolean;\r\n    /** Title of the active space */\r\n    title?: string;\r\n    /** Description of the active space */\r\n    description?: string;\r\n    /** URL of an icon image to display on the UI */\r\n    icon?: string;\r\n    /** Whether the space status is displayed on the right */\r\n    flip_status?: boolean;\r\n    /** Whether bookings can be automatically cancelled once they expire */\r\n    can_cancel?: boolean;\r\n    /** Minimum bookable duration in minutes */\r\n    min_duration?: number;\r\n    /** Maximum bookable duration in minutes */\r\n    max_duration?: number;\r\n    /** Start time of the business day with format `HH:mm` */\r\n    business_start?: string;\r\n    /** End time of the business day with format `HH:mm` */\r\n    business_end?: string;\r\n\r\n}\r\n\r\nconst LETTERS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('');\r\nconst NUMBERS = '0123456789'.split('');\r\n\r\nlet index = 0;\r\n\r\nconst SPACE_LIST: any[] = [];\r\n\r\nconst IMAGES: string[] = ['large_down', 'large_up', 'small_down', 'small_up'];\r\n\r\n/**\r\n * Create mock engine booking module with appropriate bookings and space data\r\n */\r\nfunction createSystem(): IMockEngineSystem {\r\n    const id = `sys-${LETTERS[Math.floor(index / NUMBERS.length)]}${NUMBERS[(index++) % NUMBERS.length]}`;\r\n    setMockBookingStartDatetime(dayjs().minute(-50).valueOf());\r\n    const space = generateMockSpace(id);\r\n    SPACE_LIST.push(space);\r\n    const bindings: IBookingPanelBindings = {\r\n        touch_enabled: true,\r\n        timeout: 300,\r\n        cancel_timeout: 600,\r\n        has_catering: true,\r\n        control_url: 'https://aca.im/demo/aca/control/',\r\n        icon: `/assets/img/${IMAGES[Math.floor(Math.random() * IMAGES.length)]}.png`\r\n    };\r\n    const system = {\r\n        id, name: space.name,\r\n        Bookings: []\r\n    };\r\n    system.Bookings.push({\r\n        ...bindings,\r\n        room_name: space.name,\r\n        today: space.bookings,\r\n        reload: dayjs().add(1, 'h').unix(),\r\n        $start_meeting: (time: number) => {\r\n            system.Bookings[0].last_meeting_started = time;\r\n        },\r\n        $cancel_meeting: (time: number, reason: string) => {\r\n            const list = system.Bookings[0].today;\r\n            system.Bookings[0].today = list.filter(i => i.date !== time);\r\n        },\r\n        $waiter_call: () => {\r\n            console.log(`[MOCK][${id}] Waiter called...`);\r\n        }\r\n    });\r\n    return system;\r\n}\r\n\r\n\r\nexport const MOCK_SYSTEMS = Array(10).fill(0).map(i => createSystem());\r\n\r\n// Add mock systems to the global space so that the mock websocket can hook into them\r\nif (!window.control) {\r\n    window.control = { systems: {} };\r\n}\r\nwindow.control.systems = MOCK_SYSTEMS.reduce((a: { [module:string]: IMockEngineSystem }, v) => {\r\n    a[v.id] = v;\r\n    return a;\r\n}, {});\r\n\r\n// Add mock data for API endpoints\r\nconst USER_LIST = Array(1000).fill(0).map(i => generateMockUser());\r\n\r\nconst handlers: MockHttpRequestHandlerOptions[] = [\r\n    {\r\n        path: '/api/engine/v2/systems',\r\n        metadata: null,\r\n        method: 'GET',\r\n        callback: _ => ({ total: 10, results: MOCK_SYSTEMS })\r\n    },\r\n    {\r\n        path: '/api/staff/rooms',\r\n        metadata: null,\r\n        method: 'GET',\r\n        callback: _ => SPACE_LIST\r\n    },\r\n    {\r\n        path: '/api/staff/users',\r\n        metadata: null,\r\n        method: 'GET',\r\n        callback: _ => USER_LIST\r\n    },\r\n    {\r\n        path: '/api/engine/v2/users/current',\r\n        metadata: null,\r\n        method: 'GET',\r\n        callback: _ => USER_LIST[0]\r\n    },\r\n    {\r\n        path: '/api/engine/v2/zones',\r\n        metadata: null,\r\n        method: 'GET',\r\n        callback: _ => ({ total: 1, results: [{ id: 'zone_org-1' }] })\r\n    }\r\n];\r\nwindow.control.handlers = handlers;\r\n","\r\nimport { NgModule, Type } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { ADropdownsModule } from '@acaprojects/ngx-dropdown';\r\nimport { ASpinnerModule } from '@acaprojects/ngx-spinners';\r\nimport { AButtonsModule } from '@acaprojects/ngx-buttons';\r\nimport { APipesModule } from '@acaprojects/ngx-pipes';\r\nimport { AOverlayModule } from '@acaprojects/ngx-overlays';\r\nimport { ADynamicFormsModule } from '@acaprojects/ngx-dynamic-forms';\r\nimport { ACustomEventsModule } from '@acaprojects/ngx-custom-events';\r\n\r\nimport { BaseComponent } from './base.component';\r\nimport { CustomUserSearchFieldComponent } from './components/user-search-field/user-search-field.component';\r\nimport { CustomTimeFieldComponent } from './components/time-field/time-field.component';\r\nimport { CustomDurationFieldComponent } from './components/duration-field/duration-field.component';\r\n\r\nconst COMPONENTS: Type<any>[] = [\r\n    BaseComponent\r\n];\r\n\r\nconst ENTRY_COMPONENT: Type<any>[] = [\r\n    CustomUserSearchFieldComponent,\r\n    CustomTimeFieldComponent,\r\n    CustomDurationFieldComponent\r\n]\r\n\r\n@NgModule({\r\n    declarations: [\r\n        ...COMPONENTS,\r\n        ...ENTRY_COMPONENT,\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        ADropdownsModule,\r\n        ASpinnerModule,\r\n        AButtonsModule,\r\n        AOverlayModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        ACustomEventsModule,\r\n        ADynamicFormsModule\r\n    ],\r\n    exports: [\r\n        ADropdownsModule,\r\n        ASpinnerModule,\r\n        AButtonsModule,\r\n        APipesModule,\r\n        AOverlayModule,\r\n        ACustomEventsModule,\r\n        ADynamicFormsModule,\r\n        ...COMPONENTS,\r\n        ...ENTRY_COMPONENT\r\n    ],\r\n    entryComponents: [\r\n        ...COMPONENTS,\r\n        ...ENTRY_COMPONENT\r\n    ]\r\n})\r\nexport class SharedContentModule {}\r\n","import { HashMap } from \"./types.utilities\";\r\n\r\n/**\r\n * Convert map into a query string\r\n * @param map Key value pairs to convert\r\n */\r\nexport function toQueryString(map: HashMap) {\r\n    let str = '';\r\n    if (map) {\r\n        for (const key in map) {\r\n            if (map.hasOwnProperty(key) && map[key] !== undefined && map[key] !== null) {\r\n                str += `${(str ? '&' : '')}${key}=${map[key]}`;\r\n            }\r\n        }\r\n    }\r\n    return str;\r\n}\r\n","\r\nimport { humaniseDuration } from './general.utilities';\r\n\r\nimport { User } from '../../services/data/users/user.class';\r\nimport { Space } from '../../services/data/spaces/space.class';\r\n\r\nimport * as dayjs from 'dayjs';\r\n\r\n// attendees: FormFormatters.attendees(user),\r\n// date: FormFormatters.date,\r\n// room: FormFormatters.space,\r\n// recurrence: FormFormatters.recurrence\r\n\r\n/**\r\n * Get function to create formatted string for a list of users with a host\r\n * @param host Host user\r\n */\r\nexport function formatAttendeesWithHost(host: User): (_: User[]) => string {\r\n    return (l) => formatAttendees(l, host);\r\n}\r\n\r\n/**\r\n * Create formatted string from a list of users\r\n * @param list List of users\r\n * @param host Owner of the list of users\r\n */\r\nexport function formatAttendees(list: User[], host?: User) {\r\n    let attendee_str: string = '';\r\n    if (list && list.length > 0) {\r\n        const users = [...list];\r\n        if (host) {\r\n            const result = users.find(a => a.email === host.email);\r\n            if (result) {\r\n                users.splice(users.indexOf(result), 1);\r\n            }\r\n        }\r\n        const length = users.length + (host ? 1 : 0);\r\n        attendee_str = `${length} Attendee${length === 1 ? '' : 's'}; ${host ? host.name : ''}`;\r\n        for (const item of users) {\r\n            if (attendee_str) {\r\n                attendee_str += ', ';\r\n            }\r\n            attendee_str += item.name;\r\n        }\r\n        attendee_str = attendee_str.replace('; ,', ';');\r\n    }\r\n    return attendee_str;\r\n}\r\n\r\n/**\r\n * Create date formatted string for given date\r\n * @param date Date to format\r\n */\r\nexport function formatDate(date: number) {\r\n    return dayjs(date).format('DD MMMM YYYY');\r\n}\r\n\r\n/**\r\n * Create time formatted string for given date\r\n * @param date Date to format\r\n */\r\nexport function formatTime(date: number) {\r\n    return dayjs(date).format('h:mm A');\r\n}\r\n\r\n/**\r\n * Create formatted string for a period of given duration\r\n * @param duration Period duration in minutes\r\n */\r\nexport function formatPeriodWithDuration(duration: number) {\r\n    return (t) => formatPeriod(t, duration);\r\n}\r\n\r\n/**\r\n * Create formatted string for a period of given duration\r\n * @param timestamp Start hours and minutes of the period in the format `HH:mm`\r\n * @param duration Period duration in minutes\r\n */\r\nexport function formatPeriod(timestamp: string, duration: number = 60) {\r\n    const parts = timestamp.split(':');\r\n    const date = dayjs().hour(+parts[0]).minute(+parts[1]);\r\n    return `${date.format('h:mm A')} - ${date.add(duration, 'm').format('h:mm A')} (${humaniseDuration(duration)})`;\r\n}\r\n\r\n/**\r\n * Create formatted human readable string for a given duration\r\n * @param duration Duration in minutes\r\n */\r\nexport function formatDuration(duration: number) {\r\n    return humaniseDuration(duration);\r\n}\r\n\r\n/** Human readable names of applicable recurrence periods */\r\nexport const RECURRENCE_PERIODS: string[] = ['None', 'Daily', 'Weekly', 'Monthly', 'Yearly'];\r\n\r\n/**\r\n * Create human readable string for recurrence metadata\r\n * @param value\r\n */\r\nexport function formatRecurrence(value: { period: string | number, end: number }) {\r\n    if (!value || !value.period || value.period as any >= RECURRENCE_PERIODS.length) {\r\n        return 'No recurrence';\r\n    }\r\n    const period = typeof value.period === 'string' ? value.period : RECURRENCE_PERIODS[value.period];\r\n    const end = value.end ? `until ${dayjs(value.end).format('DD MMM YYYY')}` : 'forever';\r\n    return `${period} ${end}`;\r\n}\r\n\r\n/**\r\n * Create human readable string for a room or list of rooms\r\n * @param list List of spaces/rooms\r\n */\r\nexport function formatSpaces(list: Space | Space[]) {\r\n    if (!list || (list instanceof Array && list.length <= 0)) {\r\n        return 'No selected space';\r\n    }\r\n    if (list instanceof Array) {\r\n        return list.length === 1 ? list[0].name : `${list.length} Space${list.length !== 1 ? 's' : ''}`;\r\n    } else {\r\n        const capacity = list.capacity ? '(' + list.capacity + ' ' + (list.capacity === 1 ? 'person' : 'people') + ')' : '';\r\n        return `${list.name} ${capacity}`;\r\n    }\r\n}\r\n","import { HashMap } from './types.utilities';\r\n\r\nimport * as dayjs from 'dayjs';\r\n\r\nexport function getItemWithKeys(keys: string[], map: HashMap) {\r\n    const key = keys.shift();\r\n    if (map[key]) {\r\n        return keys.length > 0 ? getItemWithKeys(keys, map[key]) : map[key];\r\n    }\r\n    return null;\r\n}\r\n\r\n/**\r\n * Checks whether the platform is a mobile device.\r\n */\r\nexport function isMobileDevice(): boolean {\r\n    const r = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i;\r\n    return !!navigator.userAgent.match(r);\r\n}\r\n\r\n/**\r\n * Checks whether the browser is Mobile Safari.\r\n */\r\nexport function isMobileSafari(): boolean {\r\n    const agent = navigator.userAgent;\r\n    return !!(agent.match(/iPhone|iPad|iPod/) && agent.match(/AppleWebKit/) && !agent.match('CriOS'));\r\n}\r\n\r\n/**\r\n * Checks whether the browser is Android Chrome.\r\n */\r\nexport function isAndroidChrome(): boolean {\r\n    const agent = navigator.userAgent;\r\n    return !!(agent.match(/Android/) && agent.match(/Chrome/));\r\n}\r\n\r\n/**\r\n * Generate string representation of a number with zeros padding the length\r\n * @param value Number to pad with zeros\r\n * @param length Length of the resulting string\r\n */\r\nexport function padZero(value: number, length: number): string {\r\n    let str = value.toString();\r\n    while (str.length < length) {\r\n        str = '0' + str;\r\n    }\r\n    return str;\r\n}\r\n\r\n/**\r\n * Remove duplicates from the given array\r\n * @param array List of items to remove duplicates from\r\n * @param key Key on array objects to compare for uniqueness\r\n */\r\nexport function unique(array: any[], key: string = '') {\r\n    return array.filter((el, pos, arr) =>\r\n        arr.indexOf(key ? arr.find(i => i[key] === el[key]) : arr.find(i => i === el)) === pos\r\n    );\r\n}\r\n\r\n/**\r\n * Convert duration to human readable string\r\n * @param duration Duration in minutes\r\n * @param short Whether to use short form of duration words e.g. hours as h\r\n */\r\nexport function humaniseDuration(duration: number, short: boolean = false) {\r\n    if (!duration || duration < 0) { return ''; }\r\n    const h = Math.floor(duration / 60);\r\n    let d = `${h >= 1 ? (h + (short ? 'h' : (' hour' + (h === 1 ? '' : 's')))) : ''}`;\r\n    if (duration % 60 !== 0) {\r\n        if (d) { d += short ? ' ' : ', '; }\r\n        const m = duration % 60;\r\n        d += `${m >= 1 ? (m + (short ? 'm' : (' minute' + (m === 1 ? '' : 's')))) : ''}`;\r\n    }\r\n    return d;\r\n}\r\n\r\n/**\r\n * Get a filtered list of items\r\n * @param filter Value to filter on\r\n * @param items List of results to filter\r\n * @param fields Fields to check for matches on each item\r\n */\r\nexport function filterList<T = HashMap>(filter: string, items?: T[], fields: string[] = ['id']): T[] {\r\n    let results: any[];\r\n    // Tokenise filter string\r\n    const filters = (filter || '').toLowerCase().split(' ');\r\n    const list = {};\r\n    for (const f of filters) {\r\n        if (f) {\r\n            if (!list[f]) { list[f] = 0; }\r\n            list[f]++;\r\n        }\r\n    }\r\n    // Group similar tokens\r\n    const parts = [];\r\n    for (const f in list) {\r\n        if (list.hasOwnProperty(f)) {\r\n            parts.push({ word: f, count: list[f], regex: new RegExp(f, 'gi') });\r\n        }\r\n    }\r\n    parts.sort((a, b) => b.word.length - a.word.length || a.word.localeCompare(b.word));\r\n    const item_list = JSON.parse(JSON.stringify(items || []));\r\n    if (filter) {\r\n        results = item_list.filter(\r\n            (item) => {\r\n                let match_count = 0;\r\n                item.match_index = 65535;\r\n                item.match = '';\r\n                const field_list = {};\r\n                // Initialise field match variables\r\n                for (const f of fields) {\r\n                    field_list[f] = {\r\n                        value: (item[f] || '').toLowerCase(),\r\n                        index: 65536,\r\n                        matched: 0\r\n                    };\r\n                }\r\n                // Search for matches with the tokenised filter string\r\n                for (const i of parts) {\r\n                    if (i.word) {\r\n                        // Check fields for matches\r\n                        for (const f of fields) {\r\n                            const field = field_list[f];\r\n                            const index = field.value.indexOf(i.word);\r\n                            field.index = index < field.index ? index : field.index;\r\n                            field.matches = (field.value.match(i.regex) || []).length;\r\n                            field.value = field.value.replace(i.regex, ' ');\r\n                        }\r\n                        // Update token match count\r\n                        for (const f of fields) {\r\n                            const field = field_list[f];\r\n                            if (field.matches >= i.count) {\r\n                                match_count++;\r\n                                // Update field matches\r\n                                let changed = 0;\r\n                                const tokens = (item[`match_${f}`] || item[f] || '').split(' ');\r\n                                for (const k of tokens) {\r\n                                    if (changed >= i.count) {\r\n                                        break;\r\n                                    }\r\n                                    if (k.toLowerCase().indexOf(i.word) >= 0 && k.indexOf('`') < 0) {\r\n                                        tokens[tokens.indexOf(k)] = k.replace(i.regex, '`$&`');\r\n                                        changed++;\r\n                                    }\r\n                                }\r\n                                item[`match_${f}`] = tokens.join(' ');\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                // Get field with the most relevent match\r\n                for (const f of fields) {\r\n                    const field = field_list[f];\r\n                    if (field.index < item.match_index && field.index >= 0) {\r\n                        item.match_index = field.index;\r\n                        item.match = f;\r\n                    }\r\n                }\r\n                return item.match_index >= 0 && item.match && (match_count >= parts.length);\r\n            });\r\n    } else {\r\n        results = item_list;\r\n    }\r\n    // Sort by order of relevence then name\r\n    results.sort((a, b) => {\r\n        const diff = a.match_index - b.match_index;\r\n        return diff === 0 ? a.name.localeCompare(b.name) : diff;\r\n    });\r\n    return results;\r\n}\r\n\r\n/**\r\n * Convert a match string from `filterList` to renderable HTML\r\n * @param str Match string to change\r\n */\r\nexport function matchToHighlight(str: string): string {\r\n    if (str) {\r\n        str = str.replace(/\\`[a-zA-Z0-9\\@\\.\\_]*\\`/g, '<span class=\"highlight\">$&</span>');\r\n        str = str.replace(/\\`/g, '');\r\n    }\r\n    return str;\r\n}\r\n\r\n/**\r\n * Convert time string to ms from UTC epoch for today\r\n * @param time Time string in the format `HH:mm`\r\n */\r\nexport function timeToDate(time: string): number {\r\n    const parts = (time || '').split(':');\r\n    const date = dayjs().hour(+parts[0]).minute(+parts[1]).startOf('m');\r\n    return date.valueOf();\r\n}\r\n\r\n/* istanbul ignore next */\r\n/**\r\n * Flatten nested array\r\n * @param an_array Array to flatten\r\n */\r\nexport function flatten<T = any>(an_array: (T[] | T)[]): T[] {\r\n    const stack: any[] = [...an_array];\r\n    const res = [];\r\n    while (stack.length) {\r\n        // pop value from stack\r\n        const next: T[] | T = stack.pop();\r\n        if (next instanceof Array) {\r\n            // push back array items, won't modify the original input\r\n            stack.push(...next);\r\n        } else {\r\n            res.push(next);\r\n        }\r\n    }\r\n    // reverse to restore input order\r\n    return res.reverse();\r\n}\r\n","import { AbstractControl } from '@angular/forms';\r\n\r\nimport { User } from '../../services/data/users/user.class';\r\n\r\nimport * as dayjs from 'dayjs';\r\n\r\nconst HAS_ERROR = true;\r\n\r\n/**\r\n * Check that control value is a date that is the same or after from date\r\n * @param control Angular form control\r\n * @param is_from Comparison date(ms from UTC epoch). Defaults to the current time\r\n */\r\nexport function validateDate(control: AbstractControl, is_from: number = dayjs().valueOf()) {\r\n    const from = dayjs(is_from);\r\n    const date = dayjs(control.value || undefined);\r\n    return date.isBefore(from, 'd') ? { date: HAS_ERROR, message: 'Booking needs to be made in the future' } : null;\r\n}\r\n\r\n/**\r\n * Build start time validation function\r\n * @param date Date of the time to check\r\n * @param is_from Comparison date(ms from UTC epoch). Defaults to the current time\r\n */\r\nexport function buildValidateStartTime(date: number, is_from: number = dayjs().valueOf()) {\r\n    return (c) => validateStartTime(c, date, is_from);\r\n}\r\n\r\n/**\r\n * Check that control value time is after the comparison date time\r\n * @param control Angular form control\r\n * @param date Date of the time to check\r\n * @param is_from Comparison date(ms from UTC epoch). Defaults to the current time\r\n */\r\nexport function validateStartTime(control: AbstractControl, date: number, is_from: number = dayjs().valueOf()) {\r\n    const now = dayjs(is_from);\r\n    const parts = control.value.split(':');\r\n    const date_obj = dayjs(date).hour(+parts[0]).minute(+parts[1]);\r\n    return date_obj.isBefore(now, 'm') ? { start: HAS_ERROR, message: 'Booking time needs to be made in the future' } : null;\r\n}\r\n\r\nexport function buildValidateDuration(min: number = 30, max: number = 240) {\r\n    return (c) => validateDuration(c, min, max);\r\n}\r\n\r\nexport function validateDuration(control: AbstractControl, min: number = 30, max: number = 240) {\r\n    if (control.value < (min || 30)) {\r\n        return { duration: HAS_ERROR, message: `Minimum booking duration is ${min} minute${min === 1 ? 's' : ''}` };\r\n    } else if (control.value > (max || 480)) {\r\n        return { length: HAS_ERROR, message: `Maximum booking duration is ${max} minute${max === 1 ? 's' : ''}` };\r\n    }\r\n    return null;\r\n}\r\n\r\nexport function buildValidateAttendees(host: User, min: number = 0) {\r\n    return (c) => validateAttendees(c, host, min);\r\n}\r\n\r\nexport function validateAttendees(control: AbstractControl, host: User, min: number = 0) {\r\n    if (!control || !(control.value instanceof Array)) {\r\n        return min > 0\r\n            ? { invalid: true, message: `Minimum of ${min} attendee${min === 1 ? ' is' : 's are'} required other than you` }\r\n            : null;\r\n    }\r\n    const list: User[] = control.value;\r\n    if (host) {\r\n        const result = list.find(a => a.email === host.email);\r\n        if (result) { list.splice(list.indexOf(result), 1); }\r\n    }\r\n    return list.length >= min ? null : {\r\n        count: true,\r\n        message: `Minimum of ${min} attendee${min === 1 ? ' is' : 's are'} required other than you`\r\n    };\r\n}\r\n","<div class=\"bootstrap\">\r\n    <div class=\"options\">\r\n        <div class=\"header fs-big\">\r\n            <h1>Booking Panel Setup</h1>\r\n            <div\r\n                class=\"toggle\"\r\n                feedback\r\n                center=\"true\"\r\n                *ngIf=\"system_list && system_list.length > 0\"\r\n                (tapped)=\"manual_input = !manual_input\"\r\n            >\r\n                <i class=\"material-icons\">{{ manual_input ? 'list' : 'code' }}</i>\r\n            </div>\r\n        </div>\r\n        <div class=\"body\" *ngIf=\"!loading\">\r\n            <ng-container *ngIf=\"manual_input; else list_desc\">\r\n                <p class=\"description\">\r\n                    Input the Engine System ID to bootstrap\r\n                </p>\r\n                <div class=\"content\">\r\n                    <div class=\"input\" [class.focus]=\"input_focus || system_id\">\r\n                        <input [(ngModel)]=\"system_id\" (focus)=\"input_focus = true\" (blur)=\"input_focus = false\" />\r\n                        <div class=\"placeholder\" [class.focus]=\"input_focus\">Engine System ID</div>\r\n                    </div>\r\n                </div>\r\n            </ng-container>\r\n            <ng-template #list_desc>\r\n                <p class=\"description\">\r\n                    Select the relevent system from the available dropdown\r\n                </p>\r\n                <div class=\"content\">\r\n                    <a-dropdown\r\n                        klass=\"fill\"\r\n                        [items]=\"system_list\"\r\n                        [(ngModel)]=\"selected_system\"\r\n                        [options]=\"{ can_filter: true }\"\r\n                        placeholder=\"Select system\"\r\n                    ></a-dropdown>\r\n                </div>\r\n            </ng-template>\r\n        </div>\r\n        <div class=\"body\" *ngIf=\"loading\">\r\n            <div class=\"info-block\">\r\n                <div class=\"icon\">\r\n                    <a-spinner circle-ring color=\"#000\"></a-spinner>\r\n                </div>\r\n                <div class=\"text\">\r\n                    Loading system data...\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"footer\" *ngIf=\"!loading\">\r\n            <button\r\n                widget\r\n                [disabled]=\"(manual_input && !system_id) || (!manual_input && (!selected_system || !selected_system.id))\"\r\n                (tapped)=\"bootstrap()\"\r\n            >\r\n                Submit\r\n            </button>\r\n        </div>\r\n    </div>\r\n</div>\r\n","\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { EngineSystem } from '@acaprojects/ts-composer';\r\n\r\nimport { ApplicationService } from '../../services/app.service';\r\nimport { BaseComponent } from '../../shared/base.component';\r\nimport { first } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'app-bootstrap',\r\n    templateUrl: './bootstrap.component.html',\r\n    styleUrls: ['./bootstrap.component.scss']\r\n})\r\nexport class BootstrapComponent extends BaseComponent implements OnInit {\r\n    /** Whether to show manual input for bootstrap ID */\r\n    public manual_input: boolean;\r\n    /** List of available systems */\r\n    public system_list: EngineSystem[] = [];\r\n    /** Whether application data is loading */\r\n    public loading: boolean;\r\n    /** ID of the system to bootstrap */\r\n    public system_id: string;\r\n    /** Selected system to bootstrap */\r\n    public selected_system: EngineSystem = null;\r\n    /** Whether input field is focused */\r\n    public input_focus: boolean;\r\n\r\n    constructor(private service: ApplicationService, private route: ActivatedRoute) {\r\n        super();\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n        this.loading = true;\r\n        this.service.Spaces.initialised.pipe(first(_ => _)).subscribe(() => {\r\n            this.subscription('route.query', this.route.queryParamMap.subscribe((params) => {\r\n                if (params.has('clear') && params.get('clear')) {\r\n                    this.clearBootstrap();\r\n                }\r\n                if (params.has('system_id') || params.has('sys_id')) {\r\n                    this.system_id = params.get('system_id') || params.get('sys_id');\r\n                    this.manual_input = true;\r\n                    this.bootstrap();\r\n                }\r\n            }));\r\n            this.subscription('system_list', this.service.Systems.listen('list', (systems) => {\r\n                this.system_list = systems || [];\r\n                this.manual_input = !this.system_list || this.system_list.length <= 0;\r\n            }));\r\n            this.loadList();\r\n            this.checkBootstrapped();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Setup the default system for the application to bind to\r\n     */\r\n    public bootstrap() {\r\n        if (this.manual_input && this.system_id) {\r\n            this.configure(this.system_id);\r\n        } else if (this.selected_system) {\r\n            this.configure(this.selected_system.id);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Grab the list of systems from the Systems Manager\r\n     * @param tries Number of previous attempts\r\n     */\r\n    private loadList(tries: number = 0): void {\r\n        this.system_list = this.service.Systems.list || [];\r\n        if ((!this.system_list || this.system_list.length <= 0) && tries < 10) {\r\n            this.timeout('load', () => this.loadList(++tries));\r\n            return;\r\n        }\r\n        if (!this.system_list || this.system_list.length <= 0) {\r\n            this.manual_input = true;\r\n        }\r\n        this.loading = false;\r\n    }\r\n\r\n    /**\r\n     * Check if the application has previously been bootstrapped\r\n     */\r\n    private checkBootstrapped(): void {\r\n        this.loading = true;\r\n        if (localStorage) {\r\n            const system_id = localStorage.getItem('ACA.PANEL.system') || localStorage.getItem('ACA.CONTROL.system');\r\n            if (system_id) {\r\n                this.service.navigate(['panel', system_id]);\r\n                return;\r\n            }\r\n        }\r\n        const user = this.service.Users.current;\r\n        if (user) {\r\n            const space = this.service.Spaces.item(user.email);\r\n            if (space) {\r\n                this.service.navigate(['panel', space.id]);\r\n                return;\r\n            }\r\n        }\r\n        this.loading = false;\r\n    }\r\n\r\n    /**\r\n     * Save the bootstrapped ID and redirect to the panel for that ID\r\n     * @param system_id System to bootstrap\r\n     */\r\n    private configure(system_id: string): void {\r\n        if (localStorage) {\r\n            localStorage.setItem('ACA.PANEL.system', system_id);\r\n        }\r\n        this.service.navigate(['panel', system_id]);\r\n    }\r\n\r\n    /**\r\n     * Remove any previously set bootstrapping details\r\n     */\r\n    private clearBootstrap() {\r\n        if (localStorage) {\r\n            localStorage.removeItem('ACA.PANEL.system');\r\n        }\r\n    }\r\n\r\n}\r\n\r\n","<div class=\"panel-array\">\r\n    <ng-container *ngIf=\"systems && systems.length > 0; else none\">\r\n        <div\r\n            class=\"panel-outlet\"\r\n            *ngFor=\"let id of systems | slice: 0:4; let i = index\"\r\n            [style.height]=\"systems.length >= 2 ? '50%' : '100%'\"\r\n        >\r\n            <app-booking-panel *ngIf=\"id; else empty_state\" [system_id]=\"id\" [show_time]=\"false\" [reverse]=\"i % 2 !== 0\"></app-booking-panel>\r\n        </div>\r\n    </ng-container>\r\n    <ng-template #none>\r\n        <div class=\"info-block\">\r\n            <div class=\"text\">No systems are set for displaying on the panel array</div>\r\n        </div>\r\n    </ng-template>\r\n</div>\r\n<ng-template #empty_state>\r\n    <div class=\"container\">\r\n        <div class=\"content center\">\r\n            <div class=\"logo\" *ngIf=\"logo\">\r\n                <img [src]=\"logo\"/>\r\n            </div>\r\n            <div class=\"time\">{{ time }}</div>\r\n        </div>\r\n    </div>\r\n</ng-template>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { BaseComponent } from '../../shared/base.component';\r\nimport { ApplicationService } from 'src/app/services/app.service';\r\n\r\nimport * as dayjs from 'dayjs';\r\n\r\n@Component({\r\n    selector: 'app-booking-panel-array',\r\n    templateUrl: './panel-array.component.html',\r\n    styleUrls: ['./panel-array.component.scss']\r\n})\r\nexport class BookingPanelArrayComponent extends BaseComponent implements OnInit {\r\n    /** List of systems to show panels for */\r\n    public systems: string[];\r\n    /** Application logo */\r\n    public logo: string;\r\n\r\n    /** Display value for the current time */\r\n    public get time(): string {\r\n        return dayjs().format('h:mm:ss A')\r\n    }\r\n\r\n    constructor(private route: ActivatedRoute, private _service: ApplicationService) {\r\n        super();\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n        this.subscription('app_ready', this._service.initialised.subscribe((is_ready) => {\r\n            if (is_ready) {\r\n                this.subscription('route.query', this.route.queryParamMap.subscribe((params) => {\r\n                    if (params.has('system_ids')) {\r\n                        this.systems = (params.get('system_ids') || '').split(',');\r\n                    }\r\n                }));\r\n                const logo = this._service.setting('app.logo');\r\n                this.logo = (logo ? logo.inverse : null) || '';\r\n                this.unsub('app_ready');\r\n            }\r\n        }));\r\n    }\r\n}\r\n","<div class=\"panel-select\" (window:mousedown)=\"reset()\" (window:touchstart)=\"reset()\">\r\n    <div class=\"panel-options\">\r\n        <ng-container *ngIf=\"systems && systems.length > 0; else none\">\r\n            <div class=\"item\" *ngFor=\"let id of systems | slice: 0:8; let i = index\" (tapped)=\"system_name[id] ? showPanel(id) : ''\">\r\n                <div class=\"bindings\" *ngIf=\"id\">\r\n                    <i binding [sys]=\"id\" mod=\"Bookings\" bind=\"room_name\" [(model)]=\"system_name[id]\"></i>\r\n                    <i binding [sys]=\"id\" mod=\"Bookings\" bind=\"icon\" [(model)]=\"system_icon[id]\"></i>\r\n                    <i binding [sys]=\"id\" mod=\"Bookings\" bind=\"today\" (modelChange)=\"updateStatus(id, $event)\"></i>\r\n                </div>\r\n                <div [class]=\"'icon' + (system_status[id] ? ' ' + system_status[id] : '')\">\r\n                    <img *ngIf=\"system_name[id]\" [src]=\"system_icon[id]\">\r\n                    <a-spinner *ngIf=\"!system_name[id]\" circle-ring color=\"#fff\"></a-spinner>\r\n                </div>\r\n                <div class=\"text\">{{ system_name[id] || id + ' connecting...' }}</div>\r\n            </div>\r\n        </ng-container>\r\n    </div>\r\n    <div class=\"panel-outlet\" *ngIf=\"active_system\">\r\n        <app-booking-panel [system_id]=\"active_system\"></app-booking-panel>\r\n        <div class=\"overlay\">\r\n            <button widget class=\"action close\" (tapped)=\"close()\" (contextmenu)=\"$event.preventDefault()\">\r\n                <div class=\"icon\">\r\n                    <i class=\"material-icons\">close</i>\r\n                </div>\r\n            </button>\r\n            <button widget class=\"action countdown\" (contextmenu)=\"$event.preventDefault()\">{{ countdown }}</button>\r\n        </div>\r\n    </div>\r\n    <ng-template #none>\r\n        <div class=\"info-block\">\r\n            <div class=\"text\">No systems are set for displaying on the panel select list</div>\r\n        </div>\r\n    </ng-template>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { BaseComponent } from '../../shared/base.component';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HashMap } from '../../shared/utilities/types.utilities';\r\nimport { Space } from '../../services/data/spaces/space.class';\r\nimport { ApplicationService } from '../../services/app.service';\r\n\r\n@Component({\r\n    selector: 'app-booking-panel-select',\r\n    templateUrl: './panel-select.component.html',\r\n    styleUrls: ['./panel-select.component.scss']\r\n})\r\nexport class BookingPanelSelectComponent extends BaseComponent implements OnInit {\r\n    /** List of systems to show panels for */\r\n    public systems: string[];\r\n    /** Names for the list of systems */\r\n    public system_name: HashMap<string> = {};\r\n    /** Icons for the list of systems */\r\n    public system_icon: HashMap<string> = {};\r\n    /** Status for the list of systems */\r\n    public system_status: HashMap<string> = {};\r\n    /** Active Panel system */\r\n    public active_system: string;\r\n    /** Countdown counter */\r\n    public countdown: number;\r\n\r\n    constructor(private route: ActivatedRoute, private service: ApplicationService) {\r\n        super();\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n        this.subscription('route.query', this.route.queryParamMap.subscribe((params) => {\r\n            if (params.has('system_ids')) {\r\n                this.systems = (params.get('system_ids') || '').split(',');\r\n            }\r\n        }));\r\n    }\r\n\r\n    /**\r\n     * Show booking panel for the given system ID\r\n     * @param id ID of the system to show\r\n     */\r\n    public showPanel(id: string) {\r\n        this.active_system = id;\r\n        this.reset();\r\n    }\r\n\r\n    /**\r\n     * Update the status value for the given system ID\r\n     * @param id ID of the system to update\r\n     * @param bookings List of current bookings for the system\r\n     */\r\n    public updateStatus(id: string, bookings: HashMap[]) {\r\n        const space = new Space(this.service.Spaces, { id, bookings });\r\n        this.system_status[id] = space.current ? 'available' : 'unavailable';\r\n    }\r\n\r\n    /**\r\n     * Close the modal\r\n     */\r\n    public close() {\r\n        this.active_system = null;\r\n        this.clearInterval('countdown');\r\n    }\r\n\r\n    /**\r\n     * User confirmation of the content of the modal\r\n     */\r\n    public reset() {\r\n        if (this.active_system) {\r\n            this.countdown = 30;\r\n            this.interval('countdown', () => this.tick(), 1000);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Decrement countdown and close if 0\r\n     */\r\n    public tick() {\r\n        if (this.countdown <= 0) {\r\n            this.close();\r\n        }\r\n        this.countdown--;\r\n    }\r\n}\r\n","<div class=\"booking-actions\">\r\n    <div class=\"actions\" *ngIf=\"space\">\r\n        <button widget class=\"end large action\" *ngIf=\"status === 'endable'\" (tapped)=\"confirmEnd()\" (contextmenu)=\"$event.preventDefault()\">\r\n            <div class=\"icon\">\r\n                <i class=\"material-icons\">event_busy</i>\r\n            </div>\r\n            <div class=\"text\">End</div>\r\n        </button>\r\n        <button widget class=\"start large action\" *ngIf=\"status === 'pending'\" (tapped)=\"startMeeting()\" (contextmenu)=\"$event.preventDefault()\">\r\n            <div class=\"icon\">\r\n                <i class=\"material-icons\">event_available</i>\r\n            </div>\r\n            <div class=\"text\">Start</div>\r\n        </button>\r\n        <button widget class=\"book large action\" *ngIf=\"!no_booking\" (tapped)=\"book()\" (contextmenu)=\"$event.preventDefault()\">\r\n            <div class=\"icon\">\r\n                <i class=\"material-icons\">add</i>\r\n            </div>\r\n            <div class=\"text\">Book</div>\r\n        </button>\r\n    </div>\r\n    <div class=\"bindings\" *ngIf=\"space\">\r\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"booking_disabled\" [(model)]=\"no_booking\"></i>\r\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"last_meeting_started\" [(model)]=\"last_started\"></i>\r\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"is_endable\" [(model)]=\"is_endable\"></i>\r\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"timeout\" [(model)]=\"pending_timeout\"></i>\r\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"cancel_timeout\" [(model)]=\"cancel_timeout\"></i>\r\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"ask_start\" [(model)]=\"ask_start\"></i>\r\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"ask_end\" [(model)]=\"ask_end\"></i>\r\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"default_title\" [(model)]=\"default_title\"></i>\r\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"min_duration\" [(model)]=\"min_duration\"></i>\r\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"max_duration\" [(model)]=\"max_duration\"></i>\r\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"business_start\" [(model)]=\"business_start\"></i>\r\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"business_end\" [(model)]=\"business_end\"></i>\r\n    </div>\r\n</div>\r\n","\r\nimport { Component, Input } from '@angular/core';\r\n\r\nimport { Space } from '../../../services/data/spaces/space.class';\r\nimport { BaseComponent } from '../../../shared/base.component';\r\nimport { ApplicationService } from '../../../services/app.service';\r\nimport { timeToDate } from '../../../shared/utilities/general.utilities';\r\n\r\nimport * as dayjs from 'dayjs';\r\n\r\nexport type SpaceStatus = 'pending' | 'available' | 'unavailable' | 'endable';\r\n\r\n@Component({\r\n    selector: 'panel-booking-actions',\r\n    templateUrl: './booking-actions.component.html',\r\n    styleUrls: ['./booking-actions.component.scss']\r\n})\r\nexport class PanelBookingActionsComponent extends BaseComponent {\r\n    /** Space with which to display bookings for */\r\n    @Input() public space: Space;\r\n    /** Whether booking is allowed */\r\n    public no_booking: boolean = false;\r\n    /** Whether the current booking is able to be ended */\r\n    public is_endable: number;\r\n    /** Number of seconds before a meeting can be started, being truthy enables start/stop and auto-cancellations */\r\n    public pending_timeout: number;\r\n    /** Number of seconds after the start of a meeting when it is auto-cancelled, overrides `timeout` value */\r\n    public cancel_timeout: number;\r\n    /** Timestamp of the last started meeting as ms since UTC epoch */\r\n    public last_started: number;\r\n    /** Whether to ask user to start the meeting */\r\n    public ask_start: boolean;\r\n    /** Whether to ask user to end the meeting */\r\n    public ask_end: boolean;\r\n    /** Time of the last automatic confirmation of start or end */\r\n    public last_confirm: number = 0;\r\n    /** Default title for bookings */\r\n    public default_title: string;\r\n    /** Maximum allowed booking duation */\r\n    public max_duration: number;\r\n    /** Minimum allowed booking duation */\r\n    public min_duration: number;\r\n    /** Start time of the business day with format `HH:mm` */\r\n    public business_start: string;\r\n    /** End time of the business day with format `HH:mm` */\r\n    public business_end: string;\r\n\r\n    /** Current status of the active system */\r\n    public get status(): SpaceStatus{\r\n        let status: SpaceStatus = 'available';\r\n            if (this.space && (this.space.current || this.space.next)) {\r\n                const booking = this.space.current || this.space.next;\r\n                status = this.space.current ? 'unavailable' : 'available';\r\n                if (this.pending_timeout) {\r\n                    const now = dayjs().startOf('m').second(1);\r\n                    const business_start = dayjs(timeToDate(this.business_start || '08:00'));\r\n                    const business_end = dayjs(timeToDate(this.business_end || '17:30'));\r\n                    // Check if within business hours before looking at pending logic\r\n                    if (now.isBefore(business_start, 'm') || now.isAfter(business_end, 'm')) {\r\n                        return status;\r\n                    }\r\n                    const date = dayjs(booking.date);\r\n                    if (this.last_started >= now.valueOf() || this.last_started >= date.valueOf()) {\r\n                        if (this.is_endable && this.space.current) {\r\n                            const end = date.add(booking.duration, 'm').startOf('m');\r\n                            const block_end = end.subtract(Math.max(this.is_endable, 300), 's');\r\n                            if (now.isAfter(block_end, 's') && now.isBefore(end, 'm')) {\r\n                                status = 'endable';\r\n                                if (this.ask_end && this.last_confirm < end.valueOf()) {\r\n                                    this.confirmEnd();\r\n                                    this.last_confirm = end.valueOf();\r\n                                }\r\n                            } else {\r\n                                status = 'unavailable';\r\n                            }\r\n                        } else {\r\n                            status = 'unavailable';\r\n                        }\r\n                    } else {\r\n                        const pending_start = date.startOf('m').subtract(this.pending_timeout, 's');\r\n                        const pending_end = date.startOf('m').add(this.cancel_timeout || this.pending_timeout, 's');\r\n                        if (now.isAfter(pending_start, 's') && now.isBefore(pending_end, 's')) {\r\n                            status = 'pending';\r\n                            if (this.ask_start && this.last_confirm < date.valueOf()) {\r\n                                this.confirmStart();\r\n                                this.last_confirm = date.valueOf();\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        return status;\r\n    }\r\n\r\n    constructor(private service: ApplicationService) {\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * Open modal to make a new booking\r\n     */\r\n    public book() {\r\n        this.service.Bookings.new({\r\n            space: this.space,\r\n            title: this.default_title,\r\n            max_duration: this.max_duration,\r\n            min_duration: this.min_duration\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Open confirmation modal for starting the meeting\r\n     */\r\n    public confirmStart() {\r\n        this.service.Overlay.open('confirm', {\r\n            config: 'modal',\r\n            data: {\r\n                title: 'Do you wish to start your meeting?',\r\n                body: `If you don't start your meeting it will be cancelled ${this.cancel_timeout / 60} minutes after the start time.`,\r\n                icon: { class: 'material-icons', value: 'play_arrow' }\r\n            }\r\n        }, _ => this.startMeeting());\r\n    }\r\n\r\n    /**\r\n     * Execute the logic on the engine driver to start the current or upcoming meeting\r\n     */\r\n    public startMeeting() {\r\n        if (this.space) {\r\n            const meeting = this.space.current || this.space.next;\r\n            const module = this.service.Systems.get(this.space.id, 'Bookings');\r\n            if (meeting && module) {\r\n                const date = dayjs(meeting.date);\r\n                module.exec('start_meeting', [meeting.date]).then(_ => {\r\n                    this.service.Analytics.event('Checkin', 'checked-in', `${this.space.id} at ${date.format('DD MMM YYYY, h:mm A Z')}`);\r\n                }, (e) => {\r\n                    this.service.notifyError(`Error starting meeting. ${e}`);\r\n                    this.service.Analytics.event('Checkin', 'checked-in-failed', `${this.space.id} at ${date.format('DD MMM YYYY, h:mm A Z')}`);\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Open confirmation modal for ending the meeting\r\n     */\r\n    public confirmEnd() {\r\n        this.service.Overlay.open('confirm', {\r\n            config: 'modal',\r\n            data: {\r\n                title: 'Are you sure want to end your meeting?',\r\n                body: 'Ending your meeting early will free up this room for others to use',\r\n                icon: { class: 'material-icons', value: 'stop' }\r\n            }\r\n        }, _ => this.endMeeting());\r\n    }\r\n\r\n    /**\r\n     * Execute end meeting logic on engine driver\r\n     * @param reason Reason for ending the meeting early\r\n     */\r\n    public endMeeting(reason: string = 'user_input') {\r\n        if (this.space) {\r\n            const meeting = this.space.current || this.space.next;\r\n            const module = this.service.Systems.get(this.space.id, 'Bookings');\r\n            if (meeting && module) {\r\n                const date = dayjs(meeting.date);\r\n                module.exec('cancel_meeting', [meeting.date, reason]).then(_ => {\r\n                    this.service.Analytics.event('Checkin', 'cancelled', `${this.space.id} at ${date.format('DD MMM YYYY, h:mm A Z')} | ${reason}`);\r\n                }, (e) => {\r\n                    this.service.notifyError(`Error starting meeting. ${e}`);\r\n                    this.service.Analytics.event('Checkin', 'cancel-failed', `${this.space.id} at ${date.format('DD MMM YYYY, h:mm A Z')} | ${reason}`);\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\n","<div class=\"custom-actions\">\r\n    <div class=\"actions\" *ngIf=\"space\">\r\n        <button widget class=\"action control\" *ngIf=\"can_control !== false && control_url\" (tapped)=\"openControl()\" (contextmenu)=\"$event.preventDefault()\">\r\n            <div class=\"icon\">\r\n                <i class=\"material-icons\">dvr</i>\r\n            </div>\r\n        </button>\r\n        <button widget class=\"action service\" *ngIf=\"catering\" (tapped)=\"confirmWaiterCall()\" (contextmenu)=\"$event.preventDefault()\">\r\n            <div class=\"icon\">\r\n                <i class=\"material-icons\">room_service</i>\r\n            </div>\r\n        </button>\r\n    </div>\r\n    <div class=\"bindings\" *ngIf=\"space\">\r\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"control_url\" [(model)]=\"control_url\"></i>\r\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"can_control\" [(model)]=\"can_control\"></i>\r\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"has_catering\" [(model)]=\"catering\"></i>\r\n    </div>\r\n</div>\r\n","import { Component, Input } from '@angular/core';\r\nimport { Space } from '../../../services/data/spaces/space.class';\r\nimport { ApplicationService } from '../../../services/app.service';\r\n\r\n@Component({\r\n    selector: 'panel-custom-actions',\r\n    templateUrl: './custom-actions.component.html',\r\n    styleUrls: ['./custom-actions.component.scss']\r\n})\r\nexport class PanelCustomActionsComponent {\r\n    /** Space with which to display bookings for */\r\n    @Input() public space: Space;\r\n    /** Control URL of the active space */\r\n    public control_url: string;\r\n    /** Whether the user is able to open the control URL */\r\n    public can_control: boolean;\r\n    /** Whether space has catering */\r\n    public catering: boolean;\r\n\r\n    constructor(private service: ApplicationService) {}\r\n\r\n    /**\r\n     * Open confirmation modal for ending the meeting\r\n     */\r\n    public confirmWaiterCall() {\r\n        this.service.Overlay.open('confirm', {\r\n            config: 'modal',\r\n            data: {\r\n                title: 'Call a waiter to your room?',\r\n                body: 'Call a waiter to your room to order catering',\r\n                icon: { class: 'material-icons', value: 'call' }\r\n            }\r\n        }, _ => this.callWaiter());\r\n    }\r\n\r\n    /**\r\n     * Execute call waiter logic on engine driver\r\n     */\r\n    public callWaiter() {\r\n        if (this.space) {\r\n            const module = this.service.Systems.get(this.space.id, 'Bookings');\r\n            if (module) {\r\n                module.exec('waiter_call', []).then(_ => {\r\n                    this.service.Analytics.event('Catering', 'waiter-call', (new Date).toISOString());\r\n                }, (e) => {\r\n                    this.service.Analytics.event('Catering', 'waiter-call-failed', (new Date).toISOString());\r\n                    this.service.notifyError(`Error calling waiter. ${e}`);\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Open modal to show embeded control URL\r\n     */\r\n    public openControl() {\r\n        this.service.Analytics.event('Control', 'open-view', (new Date).toISOString());\r\n        this.service.Overlay.open('embeded-control', {\r\n            config: 'modal',\r\n            data: {\r\n                control_url: this.control_url\r\n            }\r\n        });\r\n    }\r\n}\r\n","<div class=\"booking-panel\" [class.disabled]=\"interactive === false\" [class.reverse]=\"reverse || flip_status\" [class.no-time]=\"!show_time\">\r\n    <div [class]=\"'status' + (status && !hide_all ? ' ' + status : '')\">\r\n        <div class=\"time-display\" *ngIf=\"show_time\">{{ display_time }}</div>\r\n    </div>\r\n    <div class=\"body\">\r\n        <div class=\"details-display\">\r\n            <div class=\"content\">\r\n                <div class=\"title\" (tapped)=\"showTitle()\" [class.show]=\"show_title\">{{ space_name }}</div>\r\n                <div [class]=\"'status-text' + (status && !hide_all ? ' ' + status : '')\" >\r\n                    {{ (!hide_all ? status_display : null) || 'Not Bookable' }}\r\n                </div>\r\n                <div class=\"details\" *ngIf=\"!hide_all && show_details\">\r\n                    <panel-space-details [space]=\"space\"></panel-space-details>\r\n                </div>\r\n            </div>\r\n            <div class=\"overlay\" *ngIf=\"!hide_all && show_details\">\r\n                <panel-booking-actions [space]=\"space\"></panel-booking-actions>\r\n                <panel-custom-actions [space]=\"space\"></panel-custom-actions>\r\n            </div>\r\n        </div>\r\n        <div class=\"timeline\" *ngIf=\"show_details\">\r\n            <panel-timeline [space]=\"space\"></panel-timeline>\r\n        </div>\r\n    </div>\r\n    <div class=\"bindings\" *ngIf=\"system_id\">\r\n        <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"room_name\" [(model)]=\"space_name\"></i>\r\n        <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"touch_enabled\" [(model)]=\"interactive\"></i>\r\n        <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"today\" (modelChange)=\"updateBookings($event)\"></i>\r\n        <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"timeout\" [(model)]=\"pending_timeout\" (modelChange)=\"updateStatus()\"></i>\r\n        <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"cancel_timeout\" [(model)]=\"cancel_timeout\" (modelChange)=\"updateStatus()\"></i>\r\n        <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"last_meeting_started\" [(model)]=\"last_started\" (modelChange)=\"updateStatus()\"></i>\r\n        <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"hide_all\" [(model)]=\"hide_all\"></i>\r\n        <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"flip_status\" [(model)]=\"flip_status\"></i>\r\n        <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"can_cancel\" [(model)]=\"can_cancel\"></i>\r\n        <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"business_start\" [(model)]=\"business_start\"></i>\r\n        <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"business_end\" [(model)]=\"business_end\"></i>\r\n        <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"status_override\" [(model)]=\"status_overrides\"></i>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { ApplicationService } from '../../services/app.service';\r\nimport { BaseComponent } from '../../shared/base.component';\r\nimport { Space } from '../../services/data/spaces/space.class';\r\nimport { HashMap } from '../../shared/utilities/types.utilities';\r\nimport { timeToDate } from '../../shared/utilities/general.utilities';\r\n\r\nimport * as dayjs from 'dayjs';\r\n\r\n@Component({\r\n    selector: 'app-booking-panel',\r\n    templateUrl: './panel.component.html',\r\n    styleUrls: ['./panel.component.scss']\r\n})\r\nexport class BookingPanelComponent extends BaseComponent implements OnInit {\r\n    /** ID of the active system */\r\n    @Input() public system_id: string;\r\n    /** Whether the status is on the right side */\r\n    @Input() public reverse: boolean;\r\n    /** Whether to show the time at the bottom of the status */\r\n    @Input() public show_time = true;\r\n    /** Name of the connected system */\r\n    public space_name: string;\r\n    /** Space with which to display bookings for */\r\n    public space: Space;\r\n    /** Number of seconds before a meeting can be started, being truthy enables start/stop and auto-cancellations */\r\n    public pending_timeout: number;\r\n    /** Number of seconds after the start of a meeting when it is auto-cancelled, overrides `timeout` value */\r\n    public cancel_timeout: number;\r\n    /** Timestamp of the last started meeting as ms since UTC epoch */\r\n    public last_started: number;\r\n    /** Whether to hide booking related details */\r\n    public hide_all: boolean;\r\n    /** Whether user interaction is enabled for the panel */\r\n    public interactive = true;\r\n    /** Whether status display is on the right side of the UI */\r\n    public flip_status: boolean;\r\n    /** Whether bookings can be cancelled if they timeout */\r\n    public can_cancel: boolean;\r\n    /** Time of the last cancelled meeting in ms since UTC epoch */\r\n    private last_cancel: number;\r\n    /** Start time of the business day with format `HH:mm` */\r\n    public business_start: string;\r\n    /** End time of the business day with format `HH:mm` */\r\n    public business_end: string;\r\n    /** Whether to show full room name when it overflows */\r\n    public show_title: boolean;\r\n    /** Override mapping for status values */\r\n    public status_overrides: HashMap<string>;\r\n    /** Status of websocket */\r\n    public websocket_connected: boolean;\r\n\r\n    /** Current status of the active system */\r\n    private _status: 'pending' | 'available' | 'unavailable';\r\n\r\n    /** Get the display value for the status */\r\n    public get status_display(): string {\r\n        if (!this.websocket_connected && !this._service.setting('show_status_when_disconnected')) {\r\n            return ' ';\r\n        }\r\n        if (this.status_overrides && Object.keys(this.status_overrides).length === 1) {\r\n            this._status = this.space.current ? 'unavailable' : Object.keys(this.status_overrides)[0] as any;\r\n        }\r\n        const status = (!this.hide_all ? this._status : null) || 'not-bookable';\r\n        return (this.status_overrides || [])[status] || this._status;\r\n    }\r\n\r\n    /** Current status of the active system */\r\n    public get status(): 'pending' | 'available' | 'unavailable' | 'not-bookable' {\r\n        if (!this.websocket_connected && !this._service.setting('show_status_when_disconnected')) {\r\n            return 'not-bookable';\r\n        }\r\n        // Perform any status overrides\r\n        this.updateStatus();\r\n        if (\r\n            this.status_overrides &&\r\n            Object.keys(this.status_overrides).length === 1 &&\r\n            (!this.space.current || this._status !== 'unavailable')\r\n        ) {\r\n            this._status = Object.keys(this.status_overrides)[0] as any;\r\n        }\r\n        return this._status;\r\n    }\r\n    /** Whether booking details should be shown */\r\n    public get show_details(): boolean {\r\n        return this.websocket_connected || !!this._service.setting('show_status_when_disconnected');\r\n    }\r\n\r\n    /** Display string for the current time */\r\n    public get display_time(): string {\r\n        return dayjs().format('h:mm A');\r\n    }\r\n\r\n    constructor(public _service: ApplicationService, public _route: ActivatedRoute) {\r\n        super();\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n        this.subscription('app_ready', this._service.initialised.subscribe((is_ready) => {\r\n            if (is_ready) {\r\n                this.subscription(\r\n                    'route.params',\r\n                    this._route.paramMap.subscribe(params => {\r\n                        if (params.has('system_id')) {\r\n                            this.system_id = params.get('system_id');\r\n                            this._service.set('system', this.system_id);\r\n                        }\r\n                    })\r\n                );\r\n                this.timeout('websocket', () => {\r\n                    this._service.websocket.status(status => {\r\n                        this.websocket_connected = status;\r\n                    });\r\n                });\r\n                this.unsub('app_ready');\r\n            }\r\n        }));\r\n    }\r\n\r\n    /**\r\n     * Update the bookings for the active space\r\n     * @param bookings Array of raw booking data\r\n     */\r\n    public updateBookings(bookings: HashMap[]): void {\r\n        this.space = new Space(this._service.Spaces, {\r\n            id: this.system_id,\r\n            name: this.space_name,\r\n            bookings\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Update the current status of the active space\r\n     */\r\n    public updateStatus(): void {\r\n        if (this.hide_all) {\r\n            this._status = null;\r\n        } else {\r\n            if (this.space && (this.space.current || this.space.next)) {\r\n                const booking = this.space.current || this.space.next;\r\n                this._status = this.space.current ? 'unavailable' : 'available';\r\n                if (this.pending_timeout) {\r\n                    const now = dayjs();\r\n                    const date = dayjs(booking.date).startOf('m');\r\n                    if (this.last_started >= now.valueOf() || this.last_started >= date.valueOf()) {\r\n                        this._status = 'unavailable';\r\n                    } else {\r\n                        // Only meetings with durations less than 8 hours can be pending or cancelled\r\n                        const pending_start = date.subtract(this.pending_timeout, 's');\r\n                        const pending_end = date.add(this.cancel_timeout || this.pending_timeout, 's');\r\n                        const end = date.add(booking.duration, 'm');\r\n                        if (now.isAfter(pending_start, 's') && now.isBefore(pending_end, 's')) {\r\n                            this._status = 'pending';\r\n                        } else if (now.isAfter(pending_end, 's') && now.isBefore(end, 'm')) {\r\n                            this._status = 'pending';\r\n                            const business_start = dayjs(timeToDate(this.business_start || '08:00'));\r\n                            const business_end = dayjs(timeToDate(this.business_end || '17:30'));\r\n                            // Check if within business hours before cancelling the meeting\r\n                            if (now.isBefore(business_start, 'm') || now.isAfter(business_end, 'm')) {\r\n                                return;\r\n                            }\r\n                            this.endMeeting('timeout');\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                this._status = 'available';\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Show full room name if overflowing\r\n     */\r\n    public showTitle() {\r\n        this.show_title = true;\r\n        this.timeout('hide_title', () => (this.show_title = false), 3000);\r\n    }\r\n\r\n    /**\r\n     * Execute end meeting logic on engine driver\r\n     * @param reason Reason for ending the meeting early\r\n     */\r\n    private endMeeting(reason: string = 'user_input') {\r\n        if (this.space && this.can_cancel !== false) {\r\n            const meeting = this.space.current || this.space.next;\r\n            const module = this._service.Systems.get(this.space.id, 'Bookings');\r\n            if (meeting.duration >= 8 * 60 && reason === 'timeout') {\r\n                reason = 'hide multi-day';\r\n            }\r\n            if (meeting && module && meeting.date !== this.last_cancel) {\r\n                const date = dayjs(meeting.date);\r\n                module.exec('cancel_meeting', [meeting.date, reason]).then(\r\n                    _ => {\r\n                        this._service.Analytics.event(\r\n                            'Checkin',\r\n                            'cancelled',\r\n                            `${this.space.id} at ${date.format('DD MMM YYYY, h:mm A Z')} | ${reason}`\r\n                        );\r\n                        this.last_cancel = meeting.date;\r\n                    },\r\n                    e => {\r\n                        this._service.notifyError(`Error cancelling meeting. ${e}`);\r\n                        this._service.Analytics.event(\r\n                            'Checkin',\r\n                            'cancel-failed',\r\n                            `${this.space.id} at ${date.format('DD MMM YYYY, h:mm A Z')} | ${reason}`\r\n                        );\r\n                    }\r\n                );\r\n            }\r\n        }\r\n    }\r\n}\r\n","<div class=\"space-booking-details\">\r\n    <div class=\"details current\" *ngIf=\"space && space.current\">\r\n        <div class=\"time\" *ngIf=\"!hide_availability\">Booked until {{ space.current?.end_time }}</div>\r\n        <div class=\"title\" *ngIf=\"!hide_title && !hide_details\">{{ space.current?.title }}</div>\r\n        <div class=\"host\" *ngIf=\"!hide_user && !hide_details\">{{ space.current?.organiser?.name }}</div>\r\n    </div>\r\n    <div class=\"details next\" *ngIf=\"space && space.next\">\r\n        <div class=\"time\" *ngIf=\"!hide_availability\">Next meeting at {{ space.next?.start_time }}</div>\r\n        <div class=\"title\" *ngIf=\"!hide_title && !hide_details\">{{ space.next?.title }}</div>\r\n        <div class=\"host\" *ngIf=\"!hide_user && !hide_details\">{{ space.next?.organiser?.name }}</div>\r\n    </div>\r\n    <div class=\"details other\" *ngIf=\"space && space.current && space.next\">\r\n        <div class=\"time\" *ngIf=\"!hide_availability\">\r\n            Free {{ space.current ? 'at ' + space.current.end_time : '' }} {{ space.next ? 'until ' + space.next.start_time : '' }}\r\n        </div>\r\n    </div>\r\n    <div class=\"information\" *ngIf=\"title || description\">\r\n        <div class=\"title\">{{ title }}</div>\r\n        <div class=\"block\">\r\n            <div class=\"icon\" *ngIf=\"icon\">\r\n                <img [src]=\"icon\">\r\n            </div>\r\n            <div class=\"text\">{{ description }}</div>\r\n        </div>\r\n    </div>\r\n    <div class=\"bindings\" *ngIf=\"space\">\r\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"hide_details\" [(model)]=\"hide_details\"></i>\r\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"hide_title\" [(model)]=\"hide_title\"></i>\r\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"hide_availability\" [(model)]=\"hide_availability\"></i>\r\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"hide_user\" [(model)]=\"hide_user\"></i>\r\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"title\" [(model)]=\"title\"></i>\r\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"description\" [(model)]=\"description\"></i>\r\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"icon\" [(model)]=\"icon\"></i>\r\n    </div>\r\n</div>\r\n","\r\nimport { Component, Input } from '@angular/core';\r\n\r\nimport { Space } from '../../../services/data/spaces/space.class';\r\n\r\n@Component({\r\n    selector: 'panel-space-details',\r\n    templateUrl: './space-details.component.html',\r\n    styleUrls: ['./space-details.component.scss']\r\n})\r\nexport class PanelSpaceDetailsComponent {\r\n    /** Space with which to display bookings for */\r\n    @Input() public space: Space;\r\n    /** Secondary title for the space */\r\n    public title: string;\r\n    /** Description for the space */\r\n    public description: string;\r\n    /** Image that suppliments the description for the space */\r\n    public icon: { class?: string, value?: string, src?: string };\r\n\r\n    /** Whether to hide the booking timing details */\r\n    public hide_availability: boolean;\r\n    /** Whether to hide the current booking title */\r\n    public hide_title: boolean;\r\n    /** Whether to hide booking details(title and host) */\r\n    public hide_details: boolean;\r\n    /** Whether to hide booking host */\r\n    public hide_user: boolean;\r\n}\r\n\r\n","<div class=\"timeline\">\r\n    <div class=\"block-list\" *ngIf=\"time_blocks && time_blocks.length > 0\">\r\n        <div\r\n            class=\"block\"\r\n            *ngFor=\"let item of time_blocks\"\r\n            [class.show]=\"item.show || item.hour\"\r\n            [class.in-use]=\"item.in_use\"\r\n            (tapped)=\"!item.in_use && !no_bookings && !no_timeline_bookings ? book(item) : ''\"\r\n        >\r\n            <div class=\"hour\" *ngIf=\"item.hour\">{{ item.hour }}</div>\r\n            <div class=\"bar\" [class.hour]=\"item.hour\"></div>\r\n        </div>\r\n    </div>\r\n    <div class=\"overlay\">\r\n        <div class=\"expired\" [style.width]=\"((options?.start_offset || 120) / (options?.duration || 720)) * 100 + '%'\"></div>\r\n        <div class=\"current-block\" [style.left]=\"((options?.start_offset || 120) / (options?.duration || 720)) * 100 + '%'\">\r\n            <div class=\"bar\"></div>\r\n            <div class=\"triangle\"></div>\r\n            <div class=\"time-display\" *ngIf=\"display_time\">Time Now<br>{{ display_time }}</div>\r\n        </div>\r\n    </div>\r\n    <div class=\"bindings\" *ngIf=\"space\">\r\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"hide_availability\" [(model)]=\"hide_status\" (modelChange)=\"checkBookings()\"></i>\r\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"hide_all\" [(model)]=\"hide_all\" (modelChange)=\"checkBookings()\"></i>\r\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"booking_disabled\" [(model)]=\"no_bookings\"></i>\r\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"no_timeline_bookings\" [(model)]=\"no_timeline_bookings\"></i>\r\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"default_title\" [(model)]=\"default_title\"></i>\r\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"min_duration\" [(model)]=\"min_duration\"></i>\r\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"max_duration\" [(model)]=\"max_duration\"></i>\r\n    </div>\r\n</div>\r\n","\r\nimport { Component, OnInit, Input, Output, EventEmitter, SimpleChanges, OnChanges } from '@angular/core';\r\nimport { BaseComponent } from '../../../shared/base.component';\r\nimport { Space } from '../../../services/data/spaces/space.class';\r\n\r\nimport * as dayjs from 'dayjs';\r\nimport { BookingData } from '../../../overlays/booking-modal/booking-modal.component';\r\nimport { HashMap } from '../../../shared/utilities/types.utilities';\r\nimport { ApplicationService } from '../../../services/app.service';\r\n\r\nexport interface IPanelTimelineOptions {\r\n    /** Length of time in minutes to display on the timeline after the current time */\r\n    duration: number;\r\n    /** Time offset in minutes which is displayed before the current time marker */\r\n    start_offset: number;\r\n    /** Size of shown blocks in minutes */\r\n    block_size: number;\r\n}\r\n\r\ninterface ITimelineBlock {\r\n    /** Block time as ms since UTC epoch */\r\n    value: number;\r\n    /** Whether to show block divider */\r\n    show: boolean;\r\n    /** Hour of the day represented by this time block */\r\n    hour: number;\r\n    /** Whether block is in use or not */\r\n    in_use: boolean;\r\n}\r\n\r\n@Component({\r\n    selector: 'panel-timeline',\r\n    templateUrl: './timeline.component.html',\r\n    styleUrls: ['./timeline.component.scss']\r\n})\r\nexport class PanelTimelineComponent extends BaseComponent implements OnInit, OnChanges {\r\n    /** Space with which to display bookings for */\r\n    @Input() public space: Space;\r\n    /** Display options for the timeline */\r\n    @Input() public options: IPanelTimelineOptions;\r\n    /** Emitter for user events on the timeline */\r\n    @Output() public event = new EventEmitter();\r\n\r\n    /** List of display time block  */\r\n    public time_blocks: ITimelineBlock[] = [];\r\n    /** Whether to hide unavailable blocks on the UI */\r\n    public hide_status: boolean;\r\n    /** Whether to hide all booking data */\r\n    public hide_all: boolean;\r\n    /** Whether user is not allowed to make bookings */\r\n    public no_booking: boolean;\r\n    /** Whether user is not allowed to make bookings using the timeline */\r\n    public no_timeline_bookings: boolean;\r\n    /** Default title for bookings */\r\n    public default_title: string;\r\n    /** Maximum allowed booking duation */\r\n    public max_duration: number;\r\n    /** Minimum allowed booking duation */\r\n    public min_duration: number;\r\n\r\n    /** Display string for the current time */\r\n    public get display_time(): string {\r\n        return dayjs().format('h:mm A')\r\n    }\r\n\r\n    constructor(private service: ApplicationService) {\r\n        super();\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n        this.generateTimelineBlocks();\r\n        this.interval('update_blocks', () => this.generateTimelineBlocks(), 60 * 1000);\r\n    }\r\n\r\n    public ngOnChanges(changes: SimpleChanges): void {\r\n        this.generateTimelineBlocks();\r\n    }\r\n\r\n    /**\r\n     * Generate time blocks to display\r\n     */\r\n    private generateTimelineBlocks(): void {\r\n        let now = dayjs().startOf('m');\r\n        now = now.minute(Math.round(now.minute() / 5) * 5);\r\n        const start = now.subtract((this.options ? this.options.start_offset : null) || 120, 'm');\r\n        const end = start.add((this.options ? this.options.duration : null) || 720, 'm');\r\n        let date = dayjs(start);\r\n        delete this.time_blocks;\r\n        this.time_blocks = [];\r\n        while (date.isBefore(end, 'm')) {\r\n            this.time_blocks.push({\r\n                value: date.valueOf(),\r\n                show: (date.minute() % ((this.options ? this.options.block_size : null) || 30)) === 0,\r\n                hour: date.minute() === 0 ? (date.hour() % 12 === 0 ? 12 : date.hour() % 12) : null,\r\n                in_use: false\r\n            });\r\n            date = date.add(5, 'm');\r\n        }\r\n        this.checkBookings();\r\n    }\r\n\r\n    /**\r\n     * Update the statuses of time blocks based off space bookings\r\n     */\r\n    public checkBookings(): void {\r\n        if (this.space && this.space.todays_bookings) {\r\n            const block_start = dayjs().subtract((this.options ? this.options.start_offset : null) || 120, 'm');\r\n            const block_end = dayjs().add((this.options ? this.options.duration : null) || 720, 'm');\r\n            // Filter bookings for the shown times\r\n            const bookings = this.space.bookings.filter(i => {\r\n                const start = dayjs(i.date);\r\n                const end = start.add(i.duration, 'm');\r\n                return end.isAfter(block_start, 'm') && start.isBefore(block_end, 'm');\r\n            });\r\n            this.time_blocks.forEach(i => i.in_use = false);\r\n            if (!this.hide_status && !this.hide_all) {\r\n                for (const booking of bookings) {\r\n                    const start = dayjs(booking.date);\r\n                    const end = start.add(booking.duration, 'm');\r\n                    for (const block of this.time_blocks) {\r\n                        const block_time = dayjs(block.value);\r\n                        if (block_time.isSame(start, 'm') || (block_time.isAfter(start, 'm') && block_time.isBefore(end, 'm'))) {\r\n                            block.in_use = true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Open modal to make a new booking\r\n     */\r\n    public book(block: ITimelineBlock) {\r\n        this.service.Bookings.new({\r\n            space: this.space,\r\n            date: block.value,\r\n            title: this.default_title,\r\n            max_duration: this.max_duration,\r\n            min_duration: this.min_duration\r\n        });\r\n    }\r\n}\r\n\r\n","\r\n<div class=\"shell\">\r\n    <div class=\"view\">\r\n        <router-outlet></router-outlet>\r\n    </div>\r\n    <div class=\"bindings\" *ngIf=\"system_id\">\r\n        <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"room_name\" [(model)]=\"system_name\" (modelChange)=\"checkLoading()\"></i>\r\n        <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"reload\" (modelChange)=\"reloadAt($event)\"></i>\r\n    </div>\r\n    <div class=\"loading-block\" *ngIf=\"system_id && !system_name\">\r\n        <div class=\"info-block\">\r\n            <div class=\"title\">Connecting to system({{system_id}})...</div>\r\n            <div class=\"text\">Attempting to connect to engine server...</div>\r\n            <div class=\"text message\">{{info_messages[message_index]}}</div>\r\n            <div class=\"icon\">\r\n                <a-spinner ring-rotate color=\"#000\"></a-spinner>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"version\" *ngIf=\"show_version\" [class.loading]=\"system_id && !system_name\">\r\n        Version: {{ version }}<br>\r\n        Built: {{ build }}\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\n\r\nimport { BaseComponent } from '../shared/base.component';\r\nimport { ApplicationService } from '../services/app.service';\r\nimport { version, build } from '../shared/globals/application';\r\n\r\nimport * as dayjs from 'dayjs';\r\n\r\n@Component({\r\n    selector: 'app-shell-wrapper',\r\n    templateUrl: './shell.component.html',\r\n    styleUrls: ['./shell.component.scss']\r\n})\r\nexport class ShellWrapperComponent extends BaseComponent implements OnInit {\r\n    /** Whether application has system */\r\n    public has_system: boolean;\r\n    /** ID of the active system */\r\n    public system_id: string;\r\n    /** Name of the active system */\r\n    public system_name: string;\r\n    /** Name of the active page */\r\n    public page: string;\r\n    /** List of informational messages to display while connecting to the active system */\r\n    public info_messages: string[] = [\r\n        'If this message persists, check you network connection and then try reloading this page.',\r\n        'It seems to be taking a while. Make sure the selected system is valid.',\r\n        'Still nothing, huh. Are you authenticated? Do you have have a network connection?',\r\n        'Try reloading the page. If this persists contact your administrator.'\r\n    ];\r\n    /** Index of the info message being displayed */\r\n    public message_index: number = 0;\r\n\r\n    /** Current version of the application */\r\n    public get version(): string {\r\n        return version;\r\n    }\r\n\r\n    /** Current version of the application */\r\n    public get build(): string {\r\n        const now = dayjs();\r\n        const built = build.format('DD/MM/YY HH:mm');\r\n        return built;\r\n    }\r\n\r\n    public get show_version(): boolean {\r\n        return this._service.setting('app.show_version');\r\n    }\r\n\r\n    constructor(private _service: ApplicationService, private _router: Router) {\r\n        super();\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n        this.subscription('app_ready', this._service.initialised.subscribe((is_ready) => {\r\n            if (is_ready) {\r\n                // Listen for system changes\r\n                this.subscription('system', this._service.listen('system', (value) => this.system_id = value));\r\n                // Listen for routing events\r\n                this.page = this._router.url?.split('/')[1] || '';\r\n\r\n                this.subscription(\r\n                    'router.change',\r\n                    this._router.events.subscribe(event => {\r\n                        if (event instanceof NavigationEnd) {\r\n                            this.page = this._router.url.split('/')[1] || '';\r\n                        }\r\n                    })\r\n                );\r\n                this.unsub('app_ready');\r\n            }\r\n        }));\r\n    }\r\n\r\n    /**\r\n     * Check if the system data has loaded\r\n     * @param delay Delay before first loading message update\r\n     */\r\n    public checkLoading(delay: number = 3000) {\r\n        if (!this.system_name) {\r\n            this.message_index = 0;\r\n            this.timeout('update_msg', () => this.updateMessage(), delay);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Update the index of the info message displayed\r\n     */\r\n    private updateMessage(): void {\r\n        if (!this.system_id) { return; }\r\n        this.message_index++;\r\n        if (this.message_index === this.info_messages.length) {\r\n            this.message_index--;\r\n            return;\r\n        }\r\n        this.timeout('update_msg', () => this.updateMessage(), 3000);\r\n    }\r\n\r\n    /**\r\n     * Schedule a reload the UI for a future time\r\n     * @param time Time to reload the UI\r\n     */\r\n    public reloadAt(time: number): void {\r\n        if (time && typeof time === 'number') {\r\n            this.clearTimeout('reload_ui');\r\n            const now = dayjs().startOf('s');\r\n            const reload_at_time = dayjs((time || 0) * 1000).startOf('s');\r\n            const diff = reload_at_time.diff(now, 'ms');\r\n            if (diff > 100) {\r\n                this.timeout('reload_ui', () => location.reload(true), diff);\r\n            }\r\n        }\r\n        this.timeout('update_msg', () => this.updateMessage(), 3000);\r\n    }\r\n}\r\n","export const environment = {\r\n  production: true\r\n};\r\n","// IMPORTANT: THIS FILE IS AUTO GENERATED! DO NOT MANUALLY EDIT OR CHECKIN!\n/* tslint:disable */\nexport const VERSION = {\n    \"dirty\": true,\n    \"raw\": \"a01119b-dirty\",\n    \"hash\": \"a01119b\",\n    \"distance\": null,\n    \"tag\": null,\n    \"semver\": null,\n    \"suffix\": \"a01119b-dirty\",\n    \"semverString\": null,\n    \"version\": \"0.0.0\",\n    \"core_version\": \"1.0.0\",\n    \"time\": 1596546807556\n};\n/* tslint:enable */\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}