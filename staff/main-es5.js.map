{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/overlays/booking-rules-modal/booking-rules-modal.component.ts","webpack:///src/app/overlays/booking-rules-modal/booking-rules-modal.template.html","webpack:///src/app/overlays/confirm-modal/confirm-modal.component.ts","webpack:///src/app/overlays/confirm-modal/confirm-modal.component.html","webpack:///src/app/overlays/meeting-details-overlay/catering/catering.component.ts","webpack:///src/app/overlays/meeting-details-overlay/catering/catering.component.html","webpack:///src/app/overlays/meeting-details-overlay/display/display.component.ts","webpack:///src/app/overlays/meeting-details-overlay/display/display.component.html","webpack:///src/app/overlays/meeting-details-overlay/meeting-details-overlay.component.ts","webpack:///src/app/overlays/meeting-details-overlay/meeting-details-overlay.template.html","webpack:///src/app/overlays/meeting-details-overlay/space/space.component.ts","webpack:///src/app/overlays/meeting-details-overlay/space/space.component.html","webpack:///src/app/overlays/new-user-modal/new-user-modal.component.ts","webpack:///src/app/overlays/new-user-modal/new-user-modal.component.html","webpack:///src/app/overlays/overlays.module.ts","webpack:///src/app/overlays/recurrence-modal/recurrence-modal.component.ts","webpack:///src/app/overlays/recurrence-modal/recurrence-modal.component.html","webpack:///src/app/overlays/space-select-modal/space-select-modal.component.ts","webpack:///src/app/overlays/space-select-modal/space-select-modal.component.html","webpack:///src/app/overlays/time-extension/time-extension.component.ts","webpack:///src/app/overlays/time-extension/time-extension.component.html","webpack:///src/app/overlays/view-room-modal/view-room-modal.component.ts","webpack:///src/app/overlays/view-room-modal/view-room-modal.component.html","webpack:///src/app/services/app.service.ts","webpack:///src/app/services/data/base-api.class.ts","webpack:///src/app/services/data/base.service.ts","webpack:///src/app/services/data/bookings/booking.class.ts","webpack:///src/app/services/data/bookings/booking.utilities.ts","webpack:///src/app/services/data/bookings/bookings.service.ts","webpack:///src/app/services/data/catering/catering-category.class.ts","webpack:///src/app/services/data/catering/catering-item.class.ts","webpack:///src/app/services/data/catering/catering-menu.service.ts","webpack:///src/app/services/data/catering/catering-order.class.ts","webpack:///src/app/services/data/location/location.class.ts","webpack:///src/app/services/data/location/location.utilities.ts","webpack:///src/app/services/data/organisation/building.class.ts","webpack:///src/app/services/data/organisation/level.class.ts","webpack:///src/app/services/data/organisation/organisation.class.ts","webpack:///src/app/services/data/organisation/organisation.service.ts","webpack:///src/app/services/data/service-manager.class.ts","webpack:///src/app/services/data/spaces/space.class.ts","webpack:///src/app/services/data/spaces/space.utilities.ts","webpack:///src/app/services/data/spaces/spaces.service.ts","webpack:///src/app/services/data/users/user.class.ts","webpack:///src/app/services/data/users/user.utilities.ts","webpack:///src/app/services/data/users/users.service.ts","webpack:///src/app/services/hotkeys.service.ts","webpack:///src/app/services/settings.service.ts","webpack:///src/app/shared/base.class.ts","webpack:///src/app/shared/base.directive.ts","webpack:///src/app/shared/components/custom-fields/action-field/action-field.component.ts","webpack:///src/app/shared/components/custom-fields/action-field/action-field.component.html","webpack:///src/app/shared/components/custom-fields/counter/counter.component.ts","webpack:///src/app/shared/components/custom-fields/counter/counter.component.html","webpack:///src/app/shared/components/custom-fields/date-field/date-field.component.ts","webpack:///src/app/shared/components/custom-fields/date-field/date-field.component.html","webpack:///src/app/shared/components/custom-fields/duration-field/duration-field.component.ts","webpack:///src/app/shared/components/custom-fields/duration-field/duration-field.component.html","webpack:///src/app/shared/components/custom-fields/time-field/time-field.component.ts","webpack:///src/app/shared/components/custom-fields/time-field/time-field.component.html","webpack:///src/app/shared/components/custom-fields/user-list-field/user-list-field.component.ts","webpack:///src/app/shared/components/custom-fields/user-list-field/user-list-field.component.html","webpack:///src/app/shared/components/custom-fields/user-search-field/user-search-field.component.ts","webpack:///src/app/shared/components/custom-fields/user-search-field/user-search-field.component.html","webpack:///src/app/shared/components/feedback/feedback.component.ts","webpack:///src/app/shared/components/feedback/feedback.template.html","webpack:///src/app/shared/components/footer-menu/footer-menu.component.ts","webpack:///src/app/shared/components/footer-menu/footer-menu.component.html","webpack:///src/app/shared/components/forms/booking-form/booking-form.component.ts","webpack:///src/app/shared/components/forms/booking-form/booking-form.component.html","webpack:///src/app/shared/components/forms/user-form/user-form.component.ts","webpack:///src/app/shared/components/forms/user-form/user-form.component.html","webpack:///src/app/shared/components/icon/icon.component.ts","webpack:///src/app/shared/components/icon/icon.component.html","webpack:///src/app/shared/components/login/login.component.ts","webpack:///src/app/shared/components/login/login.component.html","webpack:///src/app/shared/components/map-controls/map-controls.component.ts","webpack:///src/app/shared/components/map-controls/map-controls.component.html","webpack:///src/app/shared/components/overlay-menu/overlay-menu.component.ts","webpack:///src/app/shared/components/overlay-menu/overlay-menu.component.html","webpack:///src/app/shared/components/popout-menu/popout-menu.component.ts","webpack:///src/app/shared/components/popout-menu/popout-menu.component.html","webpack:///src/app/shared/components/searchbar/searchbar.component.ts","webpack:///src/app/shared/components/searchbar/searchbar.component.html","webpack:///src/app/shared/components/topbar-header/topbar-header.component.ts","webpack:///src/app/shared/components/topbar-header/topbar-header.component.html","webpack:///src/app/shared/components/user-avatar/user-avatar.component.ts","webpack:///src/app/shared/components/user-avatar/user-avatar.component.html","webpack:///src/app/shared/globals/angular-animations.ts","webpack:///src/app/shared/mocks/api/bookings.mock.ts","webpack:///src/app/shared/mocks/api/buildings.mock.ts","webpack:///src/app/shared/mocks/api/catering-menu.mock.ts","webpack:///src/app/shared/mocks/api/common.mock.ts","webpack:///src/app/shared/mocks/api/locations.mock.ts","webpack:///src/app/shared/mocks/api/organisation.mock.ts","webpack:///src/app/shared/mocks/api/spaces.mock.ts","webpack:///src/app/shared/mocks/api/users.mock.ts","webpack:///src/app/shared/mocks/index.ts","webpack:///src/app/shared/mocks/systems.mock.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/shared/utilities/api.utilities.ts","webpack:///src/app/shared/utilities/formatting.utilities.ts","webpack:///src/app/shared/utilities/general.utilities.ts","webpack:///src/app/shared/utilities/validation.utilities.ts","webpack:///src/app/shell/bookings/bookings.component.ts","webpack:///src/app/shell/bookings/bookings.component.html","webpack:///src/app/shell/bookings/bookings.module.ts","webpack:///src/app/shell/bookings/overlays/booking-confirm/booking-confirm.component.ts","webpack:///src/app/shell/bookings/overlays/booking-confirm/booking-confirm.component.html","webpack:///src/app/shell/bookings/overlays/catering-confirm-modal/catering-confirm-modal.component.ts","webpack:///src/app/shell/bookings/overlays/catering-confirm-modal/catering-confirm-modal.component.html","webpack:///src/app/shell/bookings/overlays/catering-details-modal/catering-details-modal.component.ts","webpack:///src/app/shell/bookings/overlays/catering-details-modal/catering-details-modal.component.html","webpack:///src/app/shell/bookings/overlays/package-options-modal/package-options-modal.component.ts","webpack:///src/app/shell/bookings/overlays/package-options-modal/package-options-modal.component.html","webpack:///src/app/shell/bookings/overlays/recurrence-spaces-modal/recurrence-spaces-modal.component.ts","webpack:///src/app/shell/bookings/overlays/recurrence-spaces-modal/recurrence-spaces-modal.component.html","webpack:///src/app/shell/bookings/overlays/requirement-details-modal/requirement-details-modal.component.ts","webpack:///src/app/shell/bookings/overlays/requirement-details-modal/requirement-details-modal.component.html","webpack:///src/app/shell/bookings/space-flow/catering/catering.component.ts","webpack:///src/app/shell/bookings/space-flow/catering/catering.component.html","webpack:///src/app/shell/bookings/space-flow/catering/order-details/category/category.component.ts","webpack:///src/app/shell/bookings/space-flow/catering/order-details/category/category.component.html","webpack:///src/app/shell/bookings/space-flow/catering/order-details/item/item.component.ts","webpack:///src/app/shell/bookings/space-flow/catering/order-details/item/item.component.html","webpack:///src/app/shell/bookings/space-flow/catering/order-details/order-details.component.ts","webpack:///src/app/shell/bookings/space-flow/catering/order-details/order-details.component.html","webpack:///src/app/shell/bookings/space-flow/catering/order-list/item/item.component.ts","webpack:///src/app/shell/bookings/space-flow/catering/order-list/item/item.component.html","webpack:///src/app/shell/bookings/space-flow/catering/order-list/order-list.component.ts","webpack:///src/app/shell/bookings/space-flow/catering/order-list/order-list.component.html","webpack:///src/app/shell/bookings/space-flow/find-space/filters/filters.component.ts","webpack:///src/app/shell/bookings/space-flow/find-space/filters/filters.component.html","webpack:///src/app/shell/bookings/space-flow/find-space/find-space.component.ts","webpack:///src/app/shell/bookings/space-flow/find-space/find-space.component.html","webpack:///src/app/shell/bookings/space-flow/find-space/item/item.component.ts","webpack:///src/app/shell/bookings/space-flow/find-space/item/item.component.html","webpack:///src/app/shell/bookings/space-flow/form/form.component.ts","webpack:///src/app/shell/bookings/space-flow/form/form.component.html","webpack:///src/app/shell/bookings/space-flow/space-flow.component.ts","webpack:///src/app/shell/bookings/space-flow/space-flow.component.html","webpack:///src/app/shell/explore/explore.component.ts","webpack:///src/app/shell/explore/explore.component.html","webpack:///src/app/shell/explore/explore.module.ts","webpack:///src/app/shell/explore/map-legend/map-legend.component.ts","webpack:///src/app/shell/explore/map-legend/map-legend.component.html","webpack:///src/app/shell/explore/map-view/map-view.component.ts","webpack:///src/app/shell/explore/map-view/map-view.component.html","webpack:///src/app/shell/explore/overlays/booking-modal/booking-modal.component.ts","webpack:///src/app/shell/explore/overlays/booking-modal/booking-modal.component.html","webpack:///src/app/shell/explore/overlays/space-info/space-info.component.ts","webpack:///src/app/shell/explore/overlays/space-info/space-info.component.html","webpack:///src/app/shell/explore/search/search.component.ts","webpack:///src/app/shell/explore/search/search.component.html","webpack:///src/app/shell/explore/status-managers/desk-status.component.ts","webpack:///src/app/shell/explore/status-managers/space-status.component.ts","webpack:///src/app/shell/explore/timeline/timeline.component.ts","webpack:///src/app/shell/explore/timeline/timeline.component.html","webpack:///src/app/shell/explore/zoom-controls/zoom-controls.component.ts","webpack:///src/app/shell/explore/zoom-controls/zoom-controls.component.html","webpack:///src/app/shell/home/home.component.ts","webpack:///src/app/shell/home/home.component.html","webpack:///src/app/shell/schedule/event-list/event-list.component.ts","webpack:///src/app/shell/schedule/event-list/event-list.component.html","webpack:///src/app/shell/schedule/event-list/list-item/list-item.component.ts","webpack:///src/app/shell/schedule/event-list/list-item/list-item.component.html","webpack:///src/app/shell/schedule/schedule.component.ts","webpack:///src/app/shell/schedule/schedule.template.html","webpack:///src/app/shell/schedule/schedule.module.ts","webpack:///src/app/shell/schedule/schedule.routes.ts","webpack:///src/app/shell/schedule/view-event/event-details/event-details.component.ts","webpack:///src/app/shell/schedule/view-event/event-details/event-details.component.html","webpack:///src/app/shell/schedule/view-event/event-edit/event-edit.component.ts","webpack:///src/app/shell/schedule/view-event/event-edit/event-edit.component.html","webpack:///src/app/shell/schedule/view-event/view-event.component.ts","webpack:///src/app/shell/schedule/view-event/view-event.component.html","webpack:///src/app/shell/shell.component.ts","webpack:///src/app/shell/shell.component.html","webpack:///src/environments/environment.ts","webpack:///src/environments/version.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","ShellWrapperComponent","children","HomeComponent","loadChildren","m","BookingsModule","ExploreModule","ScheduleModule","redirectTo","AppRoutingModule","RouterModule","forRoot","useHash","NgModule","imports","AppComponent","_app","_org","_spaces","_bookings","detectIE","location","href","origin","pathname","Component","selector","templateUrl","styleUrls","encapsulation","ViewEncapsulation","None","AppModule","provide","MAT_LABEL_GLOBAL_OPTIONS","useValue","BrowserModule","BrowserAnimationsModule","ServiceWorkerModule","register","enabled","environment","production","HttpClientModule","FormsModule","ComposerModule","SharedOverlaysModule","SharedContentModule","declarations","providers","bootstrap","BookingRulesModalComponent","_data","event","EventEmitter","interval","_content_el","nativeElement","scrollTop","timeout","clearInterval","building","name","details","booking_details","rules","info","map_rules","other_rules","Object","reduce","a","v","push","title","contact","link","BaseDirective","MAT_DIALOG_DATA","Inject","Output","ViewChild","CONFIRM_METADATA","height","width","maxHeight","maxWidth","ConfirmModalComponent","_dialog","emit","reason","content","action","icon","MeetingDetailsCateringComponent","catering","filter","order","location_id","space","email","the_note","booking","notes","find","note","type","message","orders","length","charge_code","Input","MeetingDetailsDisplayComponent","_users","on_event","last_start","the_space","open","ViewRoomModalComponent","data","date","dayjs","end","add","duration","all_day","format","isSame","humaniseDuration","space_list","attendees","i","organiser","current","creator","formatRecurrence","recurrence","user","status","body","now","isBefore","subtract","attendee_statuses","approval_status","spaces","MeetingDetailsOverlayComponent","_dialog_ref","_service","_router","metadata","ref","date_string","has_recurrence","subscription","componentInstance","subscribe","deleteMeeting","close","unsub","deleteSeries","new_booking","duplicate","navigate","localStorage","setItem","JSON","stringify","loading","TimeExtensionModalComponent","afterClosed","form","generateBookingForm","RequirementDetailsModalComponent","controls","value","notes_field","codes_field","equipment_codes","head_counts_field","expected_attendees","updated_booking","Booking","room_ids","map","save","err","notifyError","editMeeting","delegate","as_delegate","room_id","notifySuccess","series_id","is_last","is_first","period","delegates","includes","start","isAfter","MeetingDetailsSpaceComponent","space_notes","NewUserModalComponent","User","generateUserForm","markAllAsTouched","valid","setValue","Math","floor","random","new_user","first_name","last_name","OVERLAYS","BookingConfirmComponent","RecurrenceModalComponent","CommonModule","ReactiveFormsModule","SpaceSelectModalComponent","RECURRENCE_METADATA","periods","disableClose","end_date","endOf","startOf","FormGroup","FormControl","valueOf","Validators","required","search$","Subject","selected_spaces","request_map","types","concat","search_results$","pipe","debounceTime","distinctUntilChanged","switchMap","_","zone_ids","active_building","active_type","available","join","catchError","of","list","selected","item","sort","b","update","buildings","level","building_id","space_types","next","unique","a_space","options","host","forEach","byRequest","space_a","space_b","bld","bld_b","localeCompare","sort_order","reverse","zone_id","a_has_zone","zones","indexOf","b_has_zone","multiple","MAX_EXTENSION","durations","checkAvailability","extension","notifyInfo","room","ignore","icaluid","hide_bookings","extended","block","toJSON","features","focus_feature","map_id","coordinates","MapPinComponent","back","fore","ApplicationService","_app_ref","_zone","_title","_cache","_settings","_hotkeys","_composer","_snackbar","_analytics","_route_trail","_subjects","_observers","set","isStable","first","run","_stable","log","setupCache","waitForSettings","key","get","on_action","snackbar_ref","panelClass","afterDismissed","dismiss","onAction","msg","console","debug","notify","error","warn","args","stream","force","BehaviorSubject","getValue","asObservable","initialised","init","setupComposer","_initialised","window","application","composer","state","settings","protocol","domain","hostname","port","url","use_domain","route","mock","config","scope","auth_uri","token_uri","redirect_uri","handle_login","local_login","setup","isEnabled","hash","activateUpdate","activated","reload","setInterval","checkForUpdate","bindings","app_name","title_suffix","setting","setTitle","getTitle","auth","api_endpoint","is_initialised","BaseClass","Injectable","providedIn","BaseDataClass","raw_data","event_subject","events","_server_names","toLowerCase","reject","promise","d","task_name","parameters","task","obj","_changes","_timers","_intervals","_subscriptions","new_key","substr","undefined","ServiceManager","serviceFor","BaseAPIService","_subscribers","_promises","_compare","_list_filter","_name","_api_route","load","engine","endpoint","predicate","query_params","update_list","cache","query","toQueryString","result","http","Array","process","results","new_item","updateList","form_data","post","analyticsEvent","method","post_data","_task","api_route","request","delay","stopPoll","sub","_poll","show","complete","put","removeItem","q","remove_ids","label","raw_item","old_list","compareFn","new_list","mixed_list","found","time_changed","_display","subject","time","start_epoch","Start","minute","ceil","end_epoch","End","diff","description","booking_type","visitors","_attendees","organizer","active_user","booked_by","location_name","breakdown","recurr","Date","getTime","seriesMasterId","equipment_code","checked_in","checkins","notify_users","author","space_ids","_space_list","space_service","Space","show_as","CateringOrder","edits","flatten","has_catering","unix","auto_approve","old_date","from_room","display","external","MINUTE","HOUR","DAY","WEEK","MONTH","DURATION_MAP","month","months","week","weeks","day","days","hour","hours","minutes","BOOKING_COUNT","BOOKING_DATE","setMockBookingStartDatetime","generateMockBooking","override","padZero","faker","commerce","productName","fill","generateMockUser","lorem","paragraph","address","city","getFreeBookingSlots","min_size","slots","bkn_start","bkn_end","abs","getNextFreeBookingSlot","second","use_fields","user_service","current_user","fields","booking_date","needs_space","setValidators","validateEndTime","disable","isFuture","updateValueAndValidity","list_length","valueChanges","expected","codes","new_expected","new_codes","simplified_fields","enable","control","rulesForSpace","space_rules_for_user","hide","match","hasOwnProperty","zone","rule_block","checkRules","recurr_end","conditions","ruleset","max_length","stringToMinutes","min_length","count","matches","counter","condition","groups","j","last_location","check","durationGreaterThanOrEqual","getMinLength","rule_list","values","min","min_block","el","duration_1","duration_2","str","parts","split","statusFromBookings","bookings","bookable","requestable","free_slots","bkn","declined","next_free_slot","slot","currently_free","time_until_next_block","free_tomorrow","free_today","available_until","timeFormatString","timePeriodsIntersect","start1","end1","start2","end2","day1","end_time1","day2","end_time2","BookingsService","setService","CateringCategory","items","CateringItem","must_select","order_anytime","anytime","can_order_anytime","_amount","instance_id","from_month","available_from","to_month","available_to","prior_notice","notice","unit_price","price","supplier_cost","minimum_quantity","max","maximum_quantity","parent_categories","category_ids","categories","image_path","catering_type","out_of_stock","amount","allergy","CateringMenuService","delivery_time","kitchen","pantry","symbol","with_changes","total","MapLocation","desk_id","x","normalise","x_max","y","service","Organisation","BuildingLevel","levelWithID","fixed","confidence","at_desk","empty","generateMockLocation","overrides","fixed_locations","maps","randomInt","Building","disc_info","discovery_info","extras","extra_id","extra_name","loan_items","levels","_roles","roles","_lockers","lockers","locker_structure","_systems","systems","_phone_numbers","phone_numbers","_location","longitude","latitude","catering_hours","searchables","neighbourhoods","lvl","lvl_features","feature","level_id","booking_rules","catering_restricted_from","currency","requires_equipment_code","requires_expected_attendees","timezone","holding_bay","visitor_space","getItemWithKeys","bld_id","level_name","lower_name","num","replace","toUpperCase","short_name","map_url","floor_type","OrganisationService","_organisation","ids","bld_list","_active_building","getItem","organisation","loadOrganisation","loadBuildings","loadLevels","loadSpaceTypes","tags","org_data","limit","bld_data","lvl_data","type_data","_service_list","index","findIndex","provider","provideFor","splice","OPTION_DEFAULTS","long_name","book_type","can_search","searchable","can_control","controlable","hourly_rate","cost_hour","capacity","recurr_available","occurence","was_available","support_url","image","raw_bookings","_extras","linked_spaces","linked_rooms","rm","rulesFor","bookingsFor","SPACE_COUNT","generateMockSpace","firstName","lastName","linked","USER_DOMAIN","business","availabilityOptionsToQuery","SpacesService","_org_service","respond","available_spaces","_desk_bookings","windows_id","visitor","phone","mobile","business_unit","department","organisation_id","organisation_name","staff_code","fmno","officeLocation","desk","l","USER_COUNT","USER_EMAILS","company","companyName","delegate_count","phoneNumber","avatar","UsersService","uhttp","token","expiry","client_id","Md5","hashStr","sessionStorage","go","headers","HttpHeaders","append","authorise","logout","tries","locate","loadDelegates","promises","all","INVALID_STANDALONE_KEYS","HotkeysService","keydown_states","keydown_observers","combo_end","registered_combos","addEventListener","mapKey","last_down","preventDefault","combo","combination","validCombination","last_key","updateCombinationEndList","presses","key_list","non_meta","SettingsService","api","local","session","_app_name","build","VERSION","built","core_version","version","loadFromFile","app","colors","shift","file","file_name","clearTimeout","fn","Function","setTimeout","Subscription","unsubscribe","destroy","Directive","ActionFieldComponent","show_tooltip","performAction","CounterComponent","step","ctrl_key","shift_key","new_value","_onChange","_onTouch","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","remove","DateFieldComponent","_from","position","offset","new_date","from","disabled","_trigger","closeMenu","openMenu","_to","menuOpen","MatMenuTrigger","openDatePicker","$event","stopPropagation","closeDatePicker","DurationFieldComponent","specialPreprops","duration_options","generateDurationOptions","changes","blocks","option","TimeFieldComponent","no_past_times","show_select","_time_options","generateAvailableTimes","select_field","focus","openedChange","datestamp","show_past","showSelect","UserListFieldComponent","slice","filterList","search_str","user_list","match_name","matchToHighlight","match_email","active_list","a_user","target","files","reader","FileReader","readAsText","evt","processCsvData","srcElement","csvToJson","addUser","template","downloadFile","addUsersFromFile","downloadCSVTemplate","UserSearchFieldComponent","resetSearchString","FeedbackComponent","updateRoute","document","NavigationEnd","current_page","FooterMenuComponent","tiles","BookingFormComponent","from_date","UserFormComponent","IconComponent","LoginComponent","username","password","logo","login","setErrors","MapControlsComponent","_route","levelChange","building_details","building_list","level_list","listen","queryParamMap","params","has","setBuilding","updateLevel","lvl_id","relativeTo","queryParamsHandling","queryParams","OverlayMenuComponent","showChange","copyright","year","delayedClose","cancelClose","PopoutMenuComponent","actions","SearchbarComponent","valueChange","autofocus","focusField","input_field","TopbarHeaderComponent","menuChange","menu","closeAll","closeModals","UserAvatarComponent","ANIMATION_SHOW_ENTER_LEAVE","trigger","transition","style","opacity","animate","ANIMATION_SHOW_CONTRACT_EXPAND","handlers","MOCK_BOOKINGS","rooms","MOCK_SPACES","MOCK_USERS","API","callback","route_params","MOCK_BUILDINGS","DOMAIN","is_before","number","MOCK_ORG","MOCK_MENU","menu_zone","MOCK_LOCATIONS","lvls","send_acceptance","space_data","Bookings","today","to","MOCK_CONTACTS","PREDEFINED_USERS","seed","createSystem","LETTERS","NUMBERS","SPACE_LIST","IMAGES","booking_bindings","touch_enabled","cancel_timeout","control_url","desk_bindings","system","DeskManagement","DeskBookings","room_name","$start_meeting","last_meeting_started","$cancel_meeting","$waiter_call","$book","$check_in","$check_out","COMPONENTS","ENTRY_COMPONENT","MATERIAL_MODULES","MatButtonModule","MatSnackBarModule","MatDialogModule","MatFormFieldModule","MatInputModule","MatProgressSpinnerModule","MatProgressBarModule","MatAutocompleteModule","MatSelectModule","MatChipsModule","MatRippleModule","MatMenuModule","MatCheckboxModule","MatTooltipModule","MatRadioModule","MatTabsModule","CDK_MODULES","ScrollingModule","APipesModule","AInteractiveMapModule","ADatePickerModule","ACustomEventsModule","EditorModule","formatAttendeesWithHost","formatAttendees","attendee_str","users","formatDate","formatTime","formatPeriodWithDuration","t","formatPeriod","timestamp","formatDuration","RECURRENCE_PERIODS","formatSpaces","isMobileDevice","r","navigator","userAgent","isMobileSafari","agent","isAndroidChrome","toString","array","pos","arr","short","h","filters","f","word","regex","RegExp","item_list","parse","match_count","match_index","field_list","matched","field","changed","tokens","k","timeToDate","is24HourTime","localeString","toLocaleTimeString","filename","contents","element","createElement","setAttribute","encodeURIComponent","appendChild","click","removeChild","csv","lines","line","part","jsonToCsv","json","valid_keys","ua","msie","parseInt","substring","trident","rv","edge","eventToPoint","MouseEvent","clientX","clientY","touches","an_array","stack","res","pop","isArray","HAS_ERROR","validateDate","is_from","buildValidateStartTime","c","validateStartTime","date_obj","buildValidateDuration","validateDuration","buildValidateAttendees","validateAttendees","invalid","date_control","end_time","BookingsComponent","paramMap","flow","NavigationStart","ROUTES","forChild","BookingSpaceFlowComponent","BookingSpaceFlowFormComponent","BookingFindSpaceComponent","BookingSpaceItemComponent","BookingSpaceFiltersComponent","BookingCateringComponent","BookingCateringOrderListComponent","BookingCateringOrderDetailsComponent","CateringOrderListItemComponent","CateringMenuCategoryComponent","BookingCateringConfirmModalComponent","CateringMenuItemComponent","PackageOptionsModalComponent","CateringDetailsModalComponent","RecurrenceSpacesModalComponent","checkSpaceAvailability","old_booking","success","date_value","duration_value","head_counts","needs_charge_code","active_space","note_list","generateFormFields","is_valid","new_notes","_scrollToBottom","scrollTo","top","scrollHeight","left","behavior","submit","checkItemRequirements","category","getActiveItems","a_package","needed","active","an_item","setAmount","occurrences","space_details","conflicts","updateOccurrences","replaced_by","occurrence","unshift","replaces","is_request","head_count","active_order","an_order","hasSelectionRequirements","getActiveList","updatePackageSelection","selectPackageOptions","confirmed_item","notifyWarn","cart_item","active_items","done","a_list","animations","_menu","category_list","available_times","initForm","loadMenu","start_date","generateStartAndEndTimes","building_time","toDate","space_email","as_dayjs","toLocalDate","possible_end","within_restricted_time","has_available_items","out_of_hours","form_controls","restricted","confirmOrder","edit","previous","locations","locationsChange","loadLocations","storeLocations","is_today","change$","recurrence_properties","recurr_period","onChange","select","conflict_list","ocurrence","can_return","container","scrollIntoView","inline","resetForm","flow_step","loadFormData","toNextFlowStep","toPreviousFlowStep","multiple_spaces","openEquipmentDetailsModal","confirmBooking","order_list","openCateringDetailsModal","markAsDirty","form_string","available_fields","saveFormData","dialog_ref","show_fields","ExploreComponent","MapViewComponent","ExploreSpaceStatusComponent","ExploreDeskStatusComponent","ZoomControlsComponent","ExploreSpaceInfoComponent","ExploreSearchComponent","ExploreMapLegendComponent","ExploreTimelineComponent","ExploreBookingModalComponent","legend_items","colours","show_legend","explore_settings","legend","show_group_names","show_legend_group_names","center","style_map","listeners","status_map","listener_map","feature_map","active_level","processFeatures","loadSpaceLocation","loadUserLocation","styles","desks","space_id","text","zoom","user_email","MapRadiusComponent","diameter","processStatuses","processListeners","is_now","updateRequirements","makeBooking","resolved","_position","processBookings","MAP_OVERLAY_DATA","MAP_LOCATION","search","result_list","selectOption","occupied","free","colour_map","loadDesks","desk_list","id_list","status_list","in_use","reserved","stroke","status_id","desk_management","system_id","active_bookings","loadSpaces","updateSpaceBookings","calculateStatus","clearSpaces","statuses","getStatus","datetime","bkn_data","show_declined","processSpaceBookings","showSpaceInfo","openBookingModal","BLOCK_SIZE","MINUTES_IN_DAY","_renderer","dateChange","generateBlocks","checkDate","current_time","is_hour","_start_position","_box","_container","getBoundingClientRect","onMove","y_change","time_change","round","changeDate","startMove","zoomChange","positionChange","min_zoom","max_zoom","zoomIn","zoomOut","reset","ScheduleEventListComponent","event_list","shown_offset","date_offset","at_top","updateEvents","scroll_viewport","elementScrolled","onScroll","event_promise","old_events","processEvents","date_str","date_events","order_id","filter_fn","new_items","old_items","show_calendar","range","getRenderedRange","dist","nearest","measureScrollOffset","scroll_to","date_picker_open","scrollToIndex","CdkVirtualScrollViewport","preventClickthrough","updateDate","ScheduleEventListItemComponent","hasBackdrop","closeOnNavigation","has_visitors","location_lower","ScheduleComponent","show_menu","page","loadEvents","saveEvents","ScheduleViewEventComponent","EventDetailsComponent","EventEditComponent","change","previousValue","dirty","Hotkeys","nextBooking","previousBooking","loadEvent","editing","loading_state","is_logged_in","mod","enableProdMode","platformBrowser","bootstrapModule"],"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ShellWrapperComponent } from './shell/shell.component';\nimport { HomeComponent } from './shell/home/home.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ShellWrapperComponent,\n        children: [\n            { path: 'home', component: HomeComponent },\n            {\n                path: 'book',\n                loadChildren: () =>\n                    import('./shell/bookings/bookings.module').then(m => m.BookingsModule)\n            },\n            {\n                path: 'explore',\n                loadChildren: () =>\n                    import('./shell/explore/explore.module').then(m => m.ExploreModule)\n            },\n            // {\n            //     path: 'control',\n            //     loadChildren: () =>\n            //         import('./shell/control/control.module').then(m => m.ControlModule)\n            // },\n            // {\n            //     path: 'directory',\n            //     loadChildren: () =>\n            //         import('./shell/directory/directory.module').then(m => m.DirectoryModule)\n            // },\n            {\n                path: 'schedule',\n                loadChildren: () =>\n                    import('./shell/schedule/schedule.module').then(m => m.ScheduleModule)\n            },\n            // {\n            //     path: 'help',\n            //     loadChildren: () => import('./shell/help/help.module').then(m => m.HelpModule)\n            // },\n            { path: '**', redirectTo: 'home' }\n        ]\n    },\n    { path: '**', redirectTo: 'home' }\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, { useHash: true })],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { detectIE } from './shared/utilities/general.utilities';\nimport { ApplicationService } from './services/app.service';\nimport { OrganisationService } from './services/data/organisation/organisation.service';\nimport { SpacesService } from './services/data/spaces/spaces.service';\nimport { BookingsService } from './services/data/bookings/bookings.service';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: [\n        './styles/app.component.scss',\n        './styles/custom-element.styles.scss',\n        './styles/native-element.styles.scss',\n    ],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class AppComponent {\n    constructor(\n        private _app: ApplicationService,\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _bookings: BookingsService\n    ) {\n        if (detectIE() && detectIE() < 12) {\n            location.href = `${location.origin}${location.pathname}assets/not-supported.html`;\n            return;\n        }\n    }\n}\n","<div class=\"app\">\n    <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { MAT_LABEL_GLOBAL_OPTIONS } from '@angular/material/core';\n\nimport './shared/mocks';\n\nimport { ComposerModule } from '@placeos/composer';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\n\nimport { SharedOverlaysModule } from './overlays/overlays.module';\nimport { SharedContentModule } from './shared/shared.module';\n\nimport { ShellWrapperComponent } from './shell/shell.component';\nimport { HomeComponent } from './shell/home/home.component';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        ShellWrapperComponent,\n        HomeComponent,\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        AppRoutingModule,\n        ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production }),\n        HttpClientModule,\n        FormsModule,\n        ComposerModule,\n        SharedOverlaysModule,\n        SharedContentModule\n    ],\n    providers: [\n        { provide: MAT_LABEL_GLOBAL_OPTIONS, useValue: {float: 'nevet'} }\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","\nimport { Component, Output, EventEmitter, Inject, ViewChild, ElementRef } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { DialogEvent, HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { Building, BookingRuleDetails } from 'src/app/services/data/organisation/building.class';\n\n\nexport interface BookingRulesModalData {\n    building: Building;\n}\n\n@Component({\n    selector: 'booking-rules-modal',\n    templateUrl: './booking-rules-modal.template.html',\n    styleUrls: ['./booking-rules-modal.styles.scss'],\n})\nexport class BookingRulesModalComponent extends BaseDirective {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    @ViewChild('content', { static: true }) private _content_el: ElementRef<HTMLElement>;\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: BookingRulesModalData) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.interval('scroll', () => {\n            if (this._content_el) this._content_el.nativeElement.scrollTop = 0;\n        }, 10);\n        this.timeout('scroll', () => this.clearInterval('scroll'), 201);\n    }\n\n    /** Name of the set building */\n    public get location(): string {\n        const building: Building = this._data.building || {} as any;\n        return building.name || '';\n    }\n\n    /** Booking rule details */\n    public get rules(): string[] {\n        const building: Building = this._data.building || {} as any;\n        const details: BookingRuleDetails = building.booking_details || {} as any;\n        return details.rules || [] as any;\n    }\n\n    /** Booking rule details */\n    public get info(): string {\n        const building: Building = this._data.building || {} as any;\n        const details: BookingRuleDetails = building.booking_details || {} as any;\n        return details.info || '';\n    }\n\n    /** Booking map rule details */\n    public get map_rules(): string[] {\n        const building: Building = this._data.building || {} as any;\n        const details: BookingRuleDetails = building.booking_details || {} as any;\n        return details.map_rules || [] as any;\n    }\n\n    /** Other special booking rules */\n    public get other_rules(): { title: string, rules: string[] }[] {\n        const building: Building = this._data.building || {} as any;\n        const details: BookingRuleDetails = building.booking_details || {} as any;\n        const rules: HashMap = (details as any).other_rules || {};\n        return Object.keys(rules).reduce((a, v) => { a.push({ title: v, rules: rules[v] || [] }); return a; }, []);\n    }\n\n    public get contact(): string {\n        const building: Building = this._data.building || {} as any;\n        const details: BookingRuleDetails = building.booking_details || {} as any;\n        return details.contact || '';\n    }\n\n    public get link(): { url?: string, name?: string } {\n        const building: Building = this._data.building || {} as any;\n        const details: BookingRuleDetails = building.booking_details || {} as any;\n        return details.link || {};\n    }\n}\n","<mat-dialog-content #content>\n    <main>\n        <div class=\"header\">Booking in {{location}}</div>\n        <div class=\"info\">{{ info || 'You may request restricted rooms but they will need to be approved by an admin' }}</div>\n        <div class=\"rules\">\n            <ul>\n                <li *ngFor=\"let item of rules\">{{item}}</li>\n            </ul>\n            <ng-container *ngIf=\"other_rules\">\n                <ng-container *ngFor=\"let ruleset of other_rules\">\n                    {{ ruleset.title }}\n                    <ul>\n                        <li *ngFor=\"let item of ruleset.rules\">{{item}}</li>\n                    </ul>\n                </ng-container>\n            </ng-container>\n            <ng-container>\n                When booking from Maps:\n                <ul *ngIf=\"!map_rules || map_rules.length <= 0; else rules_list\">\n                    <li>Rooms showing yellow are restricted and must be requested</li>\n                    <li>Rooms showing green are available to book for one hour</li>\n                    <li>Rooms showing red are booked</li>\n                    <li>Rooms showing grey are not bookable but may be used if they are empty</li>\n                </ul>\n                <ng-template #rules_list>\n                    <ul>\n                        <li *ngFor=\"let item of map_rules\">{{item}}</li>\n                    </ul>\n                </ng-template>\n            </ng-container>\n        </div>\n        <div class=\"contact\" *ngIf=\"contact\">\n            For more info email:<br><a [href]=\"'mailto:' + contact + '?subject=' + location + ' Booking Rules'\">{{contact}}</a>\n        </div>\n        <div class=\"contact\" *ngIf=\"link\">\n            <a [href]=\"link.url | safe:'url'\">{{link.name}}</a>\n        </div>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button mat-dialog-close>Ok</button>\n    </footer>\n</mat-dialog-actions>\n\n","import { Component, Output, EventEmitter, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { ApplicationIcon } from '../../shared/utilities/settings.interfaces';\nimport { DialogEvent } from '../../shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\nexport interface ConfirmModalData {\n    /** Title of the modal */\n    title: string;\n    /** Contents of the modal */\n    content: string;\n    /** Text displaed on the confirmation button */\n    action?: string;\n    /** Icon to display on the modal */\n    icon: ApplicationIcon;\n}\n\nexport const CONFIRM_METADATA = {\n    height: 'auto',\n    width: '24em',\n    maxHeight: 'calc(100vh - 2em)',\n    maxWidth: 'calc(100vw - 2em)'\n};\n\n@Component({\n    selector: 'confirm-modal',\n    templateUrl: './confirm-modal.component.html',\n    styleUrls: ['./confirm-modal.component.scss']\n})\nexport class ConfirmModalComponent extends BaseDirective {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Loading state */\n    public loading: string;\n\n    /** Title of the confirm modal */\n    public get title(): string {\n        return (this._data ? this._data.title : null) || 'Confirm';\n    }\n\n    /** Body of the confirm modal */\n    public get content(): string {\n        return (this._data ? this._data.content : null) || 'Are you sure?';\n    }\n\n    /** Display text on the confirm button */\n    public get action(): string {\n        return (this._data ? this._data.action : null) || 'Ok';\n    }\n\n    /** Display icon properties */\n    public get icon(): ApplicationIcon {\n        return (this._data ? this._data.icon : null) || null;\n    }\n\n    constructor(\n        private _dialog: MatDialogRef<ConfirmModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: ConfirmModalData\n    ) {\n        super();\n    }\n    /**\n     * User confirmation of the content of the modal\n     */\n    public accept() {\n        this.event.emit({ reason: 'done' });\n    }\n}\n","<header>\n    <h3 mat-dialog-title>{{ title || 'Confirm' }}</h3>\n</header>\n<mat-dialog-content>\n    <div class=\"body\" *ngIf=\"!loading; else load_state\">\n        <app-icon *ngIf=\"icon\" [icon]=\"icon\"></app-icon>\n        <div class=\"content\">\n            <p [innerHTML]=\"content || 'Are you sure?'\"></p>\n        </div>\n    </div>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading\">\n    <footer>\n        <button mat-button class=\"inverse\" mat-dialog-close i18n=\"Close confirm modal\">Cancel</button>\n        <button mat-button name=\"accept\" (click)=\"accept()\">{{ action || 'Ok' }}</button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </div>\n</ng-template>\n","import { Component, Input } from '@angular/core';\n\nimport { CateringOrder } from '../../../services/data/catering/catering-order.class';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\n\n@Component({\n    selector: 'meeting-details-catering',\n    templateUrl: './catering.component.html',\n    styleUrls: ['./catering.component.scss'],\n})\nexport class MeetingDetailsCateringComponent {\n    /** List of catering orders */\n    @Input() public catering: CateringOrder[];\n    /** Active space to display */\n    @Input() public space: Space;\n    /** Active space to display */\n    @Input() public booking: Booking;\n    /** Whether all orders should be shown */\n    public show_orders: boolean;\n\n    /** List of orders for the active space */\n    public get orders(): CateringOrder[] {\n        return (this.catering || []).filter((order) => order.location_id === this.space.email);\n    }\n\n    /** Charge code for orders in the active space */\n    public get notes(): string {\n        const the_note = this.booking.notes.find(\n            (note) => note.type === 'catering' && note.space === this.space.email\n        );\n        return the_note ? the_note.message : '<No notes>';\n    }\n\n    /** Charge code for orders in the active space */\n    public get charge_code(): string {\n        return this.orders.length > 0\n            ? this.orders[0].charge_code || '<No charge code>'\n            : '<No charge code>';\n    }\n}\n","<div class=\"catering-details\" *ngIf=\"catering && space\" [attr.space-id]=\"space.id\">\n    <div class=\"field multi\" name=\"orders\">\n        <label>Orders({{ orders.length || '0' }}):</label>\n        <div class=\"value\">\n            <div class=\"list\" [class.shown]=\"show_orders\">\n                <div\n                    class=\"list-item\"\n                    *ngFor=\"let order of orders\"\n                    [title]=\"\"\n                >\n                    <div class=\"name\">Deliver at {{ order.deliver_at_time }}</div>\n                    <div class=\"email\">{{ order.item_count }} item{{ order.item_count === 1 ? '' : 's' }}</div>\n                    <div class=\"details\">\n                        <div class=\"items\">\n                            <div class=\"item\" *ngFor=\"let item of order.items\">\n                                <div class=\"name\">{{ item.name }}</div>\n                                <div class=\"amount\">x{{ item.amount || '0' }}</div>\n                            </div>\n                        </div>\n                        <div class=\"total\"><span>Total:</span> {{ order.total / 100 | currency:order.symbol }}</div>\n                    </div>\n                </div>\n            </div>\n            <button\n                class=\"show\"\n                *ngIf=\"orders.length > 5\"\n                (click)=\"show_orders = !show_orders\"\n            >\n                {{ show_orders ? 'Hide' : 'Show' }} Orders\n            </button>\n        </div>\n    </div>\n    <div class=\"field\" name=\"requirements\">\n        <label>Requirements:</label>\n        <div class=\"value\">{{ notes }}</div>\n    </div>\n    <div class=\"field\" name=\"charge-code\">\n        <label>Charge Code:</label>\n        <div class=\"value\">{{ charge_code }}</div>\n    </div>\n</div>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { ViewRoomModalComponent } from '../../view-room-modal/view-room-modal.component';\nimport {\n    RECURRENCE_PERIODS,\n    formatRecurrence,\n} from '../../../shared/utilities/formatting.utilities';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { DialogEvent, HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { humaniseDuration } from 'src/app/shared/utilities/general.utilities';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { UsersService } from 'src/app/services/data/users/users.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'meeting-details-display',\n    templateUrl: './display.component.html',\n    styleUrls: ['./display.component.scss'],\n})\nexport class MeetingDetailsDisplayComponent extends BaseDirective {\n    @Input() event: Booking;\n    /** Emitter for events on the component */\n    @Output('event') on_event = new EventEmitter<DialogEvent>();\n    /** Toggle for activating checkin */\n    public checked_in: boolean;\n    /** Mapping of spaces to last checkin time */\n    public last_start: { [id: string]: number } = {};\n    /** Whether to show full locations list */\n    public show_locations: boolean;\n    /** Whether to show full attendee list */\n    public show_attendees: boolean;\n\n    /** Title of the displayed event */\n    public get title(): string {\n        return this.event.title || '';\n    }\n\n    /** Display string of when the event will occur */\n    public get when(): string {\n        const date = dayjs(this.event.date);\n        const end = date.add(this.event.duration || 60, 'm');\n        if (\n            (this.event.all_day && this.event.duration < 25 * 60) ||\n            this.event.duration === 24 * 60\n        ) {\n            return `${date.format('DD MMM YYYY')} - All Day`;\n        } else {\n            if (date.isSame(end, 'd')) {\n                return `${date.format('DD MMM YYYY, h:mm A')} - ${end.format('h:mm A')}`;\n            } else {\n                return `${date.format('DD MMM YYYY, h:mm A')} - ${end.format(\n                    'DD MMM YYYY, h:mm A'\n                )}`;\n            }\n        }\n    }\n\n    /** Whether booking has catering */\n    public get has_catering(): boolean {\n        return this.event && this.event.catering && this.event.catering.length >= 0;\n    }\n\n    /** Display string for the event's duration */\n    public get duration(): string {\n        if (!this.event) {\n            return 'Unable to determine';\n        }\n        return humaniseDuration(this.event.duration || 60);\n    }\n\n    /** List of spaces associated with the event */\n    public get spaces(): Space[] {\n        return this.event.space_list || (this.event.space ? [this.event.space] : []);\n    }\n\n    /** List of attendees associated with the event not including the host */\n    public get attendees(): User[] {\n        return this.event.attendees.filter((i) => i.email !== this.organiser.email) || [];\n    }\n\n    /** Host of the event */\n    public get organiser(): User {\n        return this.event.organiser || this._users.current;\n    }\n\n    /** Host of the event */\n    public get created_by(): User {\n        return this.event.creator || this._users.current;\n    }\n\n    /** Display string for the recurrence value of the booking */\n    public get recurrence(): string {\n        return formatRecurrence(this.event.recurrence);\n    }\n\n    /** Whether the user is allowed to edit the event */\n    public get can_edit(): boolean {\n        const organiser = this.organiser;\n        const user = this._users.current;\n        return organiser.email === user.email && this.status !== 'done';\n    }\n\n    /** Details about the event */\n    public get notes(): string {\n        return this.event.body || '';\n    }\n\n    /** Status of the event */\n    public get status(): 'future' | 'upcoming' | 'done' | 'started' | 'in_progress' {\n        if (this.event) {\n            const now = dayjs();\n            const date = dayjs(this.event.date);\n            if (now.isBefore(date.subtract(15, 'm'), 'm')) {\n                return 'future';\n            } else if (now.isBefore(date, 'm')) {\n                return 'upcoming';\n            } else if (now.isBefore(date.add(15, 'm'), 'm')) {\n                return 'started';\n            } else if (now.isBefore(date.add(this.event.duration, 'm'), 'm')) {\n                return 'in_progress';\n            }\n        }\n        return 'done';\n    }\n\n    /** Mapping of attendees and spaces to acceptance status */\n    public get status_map(): HashMap<'accepted' | 'tentative' | 'declined'> {\n        const attendee_statuses: HashMap<'accepted' | 'tentative' | 'declined'> = {};\n        for (const email in this.event.approval_status) {\n            if (email) {\n                switch (this.event.approval_status[email]) {\n                    case 'declined':\n                        attendee_statuses[email] = 'declined';\n                        break;\n                    case 'accepted':\n                        attendee_statuses[email] = 'accepted';\n                        break;\n                    default:\n                        attendee_statuses[email] = 'tentative';\n                        break;\n                }\n            }\n        }\n        return attendee_statuses;\n    }\n\n    /** Whether the user has checkin to all the spaces in the event */\n    public get is_checked_in(): boolean {\n        return this.spaces.reduce(\n            (a, v) => a && this.event.date <= (this.last_start[v.id] || 0),\n            true\n        );\n    }\n\n    /** Whether the spaces can be controlled */\n    public get can_control(): boolean {\n        return this.spaces.length > 0 && this.status !== 'future' && this.status !== 'done';\n    }\n\n    /** Whether the user is able to checkin to the event */\n    public get can_checkin(): boolean {\n        return this.spaces.length > 0 && (this.status === 'upcoming' || this.status === 'started');\n    }\n\n    constructor(\n        private _spaces: SpacesService,\n        private _users: UsersService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    /**\n     * Open the modal to show the location of a space\n     * @param space Space to show the location\n     */\n    public locate(space: Space) {\n        if (space) {\n            const the_space = this._spaces.find(space.id) || space;\n            this._dialog.open(ViewRoomModalComponent, {\n                width: 'auto',\n                height: 'auto',\n                maxWidth: '95vw',\n                maxHeight: '95vh',\n                data: { space: the_space },\n            });\n        }\n    }\n}\n","<div class=\"event-details\">\n    <div class=\"field\" name=\"title\">\n        <label>Title:</label>\n        <div class=\"value\">{{ title }}</div>\n    </div>\n    <div class=\"field\" name=\"when\">\n        <label>When:</label>\n        <div class=\"value\">{{ when }}</div>\n    </div>\n    <div\n        class=\"field\"\n        *ngIf=\"event.recurrence && event.recurrence.period !== 'none'\"\n        name=\"recurrence\"\n    >\n        <label>Reccurrence:</label>\n        <div class=\"value\">\n            {{ recurrence }}\n        </div>\n    </div>\n    <div class=\"field\" name=\"duration\">\n        <label>Duration:</label>\n        <div class=\"value\">{{ duration }}</div>\n    </div>\n    <div class=\"field multi\" name=\"location\">\n        <label>Locations({{ spaces.length || '0' }}):</label>\n        <div class=\"value\">\n            <div class=\"list\" [class.shown]=\"show_locations\">\n                <div\n                    class=\"list-item\"\n                    *ngFor=\"let item of spaces\"\n                    [title]=\"item?.name + ' - ' + (status_map[item?.email] || 'Approved')\"\n                >\n                    <div [class]=\"'status ' + status_map[item?.email]\">\n                        <div class=\"text\">{{ status_map[item?.email] }}</div>\n                    </div>\n                    <div class=\"text\">{{ item?.name }}</div>\n                    <button class=\"show\" *ngIf=\"item?.map_id\" (click)=\"locate(item)\">\n                        Map\n                    </button>\n                </div>\n                <div class=\"list-item\" *ngIf=\"!spaces.length\">No Location</div>\n            </div>\n            <button\n                class=\"show\"\n                *ngIf=\"spaces.length > 5\"\n                (click)=\"show_locations = !show_locations\"\n            >\n                {{ show_locations ? 'Hide' : 'Show' }} Locations\n            </button>\n        </div>\n    </div>\n    <div class=\"field\" name=\"host\">\n        <label>Host:</label>\n        <div class=\"value\">{{ organiser.name }}</div>\n    </div>\n    <div class=\"field\" name=\"host\" *ngIf=\"created_by && created_by.email !== organiser.email\">\n        <label>Booked by:</label>\n        <div class=\"value\">{{ created_by.name }}</div>\n    </div>\n    <div class=\"field multi\" name=\"attendees\">\n        <label>Attendees({{ attendees.length || '0' }}):</label>\n        <div class=\"value\">\n            <div class=\"list\" [class.shown]=\"show_attendees\">\n                <div\n                    class=\"list-item\"\n                    *ngFor=\"let item of attendees\"\n                    [title]=\"\n                        item?.name +\n                        ' - ' +\n                        (status_map[item?.email] || 'Accepted') +\n                        (item?.email ? '\\n' + item.email : '')\n                    \"\n                >\n                    <div [class]=\"'status ' + status_map[item?.email]\">\n                        <div class=\"text\">{{ status_map[item?.email] }}</div>\n                    </div>\n                    <div class=\"text\">\n                        <div class=\"name\">{{ item.name }}</div>\n                        <div class=\"email\" *ngIf=\"item.email\">\n                            <a [href]=\"'mailto:' + item.email + '?subject=' + event.title\">{{\n                                item.email\n                            }}</a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <button\n                class=\"show\"\n                *ngIf=\"attendees.length > 5\"\n                (click)=\"show_attendees = !show_attendees\"\n            >\n                {{ show_attendees ? 'Hide' : 'Show' }} Attendees\n            </button>\n        </div>\n    </div>\n    <div class=\"field\" name=\"notes\">\n        <label>Notes:</label>\n        <div class=\"value\" [innerHTML]=\"notes | sanitize\"></div>\n    </div>\n    <div class=\"field\" *ngIf=\"has_catering\" name=\"catering\">\n        <label>Catered:</label>\n        <div class=\"value\">{{ event.catering.length ? 'Yes' : 'No' }}</div>\n    </div>\n</div>\n","import { Component, OnDestroy, Output, EventEmitter, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport {\n    ConfirmModalComponent,\n    ConfirmModalData,\n    CONFIRM_METADATA,\n} from '../confirm-modal/confirm-modal.component';\nimport { TimeExtensionModalComponent } from '../time-extension/time-extension.component';\nimport {\n    RequirementDetailsModalComponent,\n    RequirementDetailsModalData,\n} from 'src/app/shell/bookings/overlays/requirement-details-modal/requirement-details-modal.component';\nimport { generateBookingForm } from 'src/app/services/data/bookings/booking.utilities';\n\nimport * as dayjs from 'dayjs';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\nexport interface MeetingDetailsModalData {\n    /** Meeting to display on the modal */\n    booking: Booking;\n    /** Whether local user is able act on behalf of the host */\n    as_delegate: boolean;\n    /** Email address of the associated delegate */\n    delegate: string;\n    /** Whether booking is the first in the list */\n    is_first: boolean;\n    /** Whether booking is the last in the list */\n    is_last: boolean;\n}\n\n/*istanbul ignore next */\n@Component({\n    selector: 'meeting-details-overlay',\n    templateUrl: './meeting-details-overlay.template.html',\n    styleUrls: ['./meeting-details-overlay.styles.scss'],\n})\nexport class MeetingDetailsOverlayComponent extends BaseDirective implements OnDestroy {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Display string of the loading state of the meeting */\n    public loading: string;\n    /** Whether booking is being edited */\n    public edit: boolean;\n\n    /** Active booking to display */\n    public get booking(): Booking {\n        return this._data.booking;\n    }\n\n    /** Whether booking is the first in the list */\n    public get is_last(): boolean {\n        return this._data.is_last;\n    }\n\n    /** Whether booking is the last in the list */\n    public get is_first(): boolean {\n        return this._data.is_first;\n    }\n\n    /** List of spaces associated with the event */\n    public get space_list(): Space[] {\n        return this.booking.space_list || (this.booking.space ? [this.booking.space] : []);\n    }\n\n    public get has_recurrence(): boolean {\n        return !!(this.booking.recurrence && this.booking.recurrence.period);\n    }\n\n    /** Whether user is able to edit the booking */\n    public get can_edit(): boolean {\n        const user = this._users.current;\n        return (\n            this.booking.organiser.email === user.email ||\n            (this._data.as_delegate && user.delegates.includes(this.booking.organiser.email))\n        );\n    }\n\n    /** Whether booking is in progress */\n    public get in_progress(): boolean {\n        if (!this.booking) {\n            return false;\n        }\n        const now = dayjs();\n        const start = dayjs(this.booking.date);\n        const end = start.add(this.booking.duration, 'm');\n        return now.isAfter(start, 's') && now.isBefore(end, 'm');\n    }\n\n    /** Whether booking has ended */\n    public get has_ended(): boolean {\n        if (!this.booking) {\n            return false;\n        }\n        const now = dayjs();\n        const start = dayjs(this.booking.date);\n        const end = start.add(this.booking.duration, 'm');\n        return now.isAfter(end, 's');\n    }\n\n    /** Whether booking has a space associated with it */\n    public get has_space(): boolean {\n        if (!this.space_list || !this.space_list.length) {\n            return false;\n        }\n        for (const space of this.space_list) {\n            if (space) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _dialog_ref: MatDialogRef<MeetingDetailsOverlayComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: MeetingDetailsModalData,\n        private _service: ApplicationService,\n        private _users: UsersService,\n        private _bookings: BookingsService,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    /**\n     * Show the next meeting in the list\n     */\n    public nextBooking() {\n        this.event.emit({ reason: 'action', metadata: 'next' });\n    }\n\n    /** Show the previous meeting in the list */\n    public previousBooking() {\n        this.event.emit({ reason: 'action', metadata: 'previous' });\n    }\n\n    /** Open confirmation modal for deleting the meeting */\n    public confirmDeleteMeeting(): void {\n        const ref = this._dialog.open<ConfirmModalComponent, ConfirmModalData>(\n            ConfirmModalComponent,\n            {\n                ...CONFIRM_METADATA,\n                data: {\n                    title: 'Delete meeting',\n                    icon: { type: 'icon', class: 'material-icons', content: 'delete' },\n                    content: `\n                        <p>Are you sure you want to delete this meeting on ${\n                            this.booking.date_string\n                        }${this.has_recurrence ? ' from your series' : ''}?</p>\n                        <p>All attendees will be notified.</p>\n                    `,\n                },\n            }\n        );\n        this.subscription(\n            'confirm',\n            ref.componentInstance.event.subscribe((event) => {\n                if (event.reason === 'done') {\n                    this.deleteMeeting();\n                    ref.close();\n                    this.unsub('confirm');\n                }\n            })\n        );\n    }\n\n    /** Open confirmation modal for deleting the series of bookings */\n    public confirmDeleteSeries(): void {\n        if (!this.booking.recurrence) {\n            return;\n        }\n        const ref = this._dialog.open<ConfirmModalComponent, ConfirmModalData>(\n            ConfirmModalComponent,\n            {\n                ...CONFIRM_METADATA,\n                data: {\n                    title: 'Delete series',\n                    icon: { type: 'icon', class: 'material-icons', content: 'delete' },\n                    content: `\n                        <p>All bookings in the series will be deleted. Are you sure you want to delete the series?</p>\n                        <p>All attendees will be notified.</p>\n                    `,\n                },\n            }\n        );\n        this.subscription(\n            'confirm',\n            ref.componentInstance.event.subscribe((event) => {\n                if (event.reason === 'done') {\n                    this.deleteSeries();\n                    ref.close();\n                    this.unsub('confirm');\n                }\n            })\n        );\n    }\n\n    /** Navigate the booking with the details of the current booking set */\n    public duplicateMeeting(): void {\n        const new_booking = this.booking.duplicate();\n        this._router.navigate(['/book']);\n        if (localStorage) {\n            localStorage.setItem('ACA_STAFF.booking_form_data', JSON.stringify(new_booking));\n        }\n        this._dialog_ref.close();\n    }\n\n    /** Open modal to extend the length of the meeting */\n    public extendMeeting() {\n        this.loading = 'Extending meeting...';\n        const ref = this._dialog.open(TimeExtensionModalComponent, {\n            ...CONFIRM_METADATA,\n            data: { booking: this.booking },\n        });\n        ref.afterClosed().subscribe(() => (this.loading = null));\n    }\n\n    public editMeetingRequirements() {\n        const form = generateBookingForm(this.booking, [\n            'space_list',\n            'notes',\n            'equipment_codes',\n            'expected_attendees',\n        ] as any);\n        const ref = this._dialog.open<\n            RequirementDetailsModalComponent,\n            RequirementDetailsModalData\n        >(RequirementDetailsModalComponent, {\n            maxWidth: '95vw',\n            width: '32em',\n            data: {\n                spaces: form.controls.space_list.value,\n                notes_field: form.controls.notes,\n                codes_field: form.controls.equipment_codes,\n                head_counts_field: form.controls.expected_attendees,\n            },\n        });\n        this.subscription(\n            'modal_events',\n            ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                if (event.reason === 'done') {\n                    this.loading = 'Updating space requirements...';\n                    const updated_booking = new Booking({\n                        ...this.booking,\n                        ...form.value,\n                        room_ids: form.value.space_list.map((space) => space.id),\n                    });\n                    updated_booking.save().then(\n                        (new_booking: Booking) => {\n                            this._data.booking = new_booking;\n                            this.loading = null;\n                        },\n                        (err) => {\n                            this.loading = null;\n                            this._service.notifyError(\n                                `Error updating space requirements. Error: ${err.message || err}`\n                            );\n                        }\n                    );\n                    ref.close();\n                }\n            })\n        );\n        ref.afterClosed().subscribe(() => this.unsub('modal_events'));\n    }\n\n    /**\n     * Open booking form to catering section\n     */\n    public editMeetingCatering() {\n        this.editMeeting(false);\n        this._router.navigate(['/book', 'space', 'catering']);\n        this._dialog_ref.close();\n    }\n\n    /**\n     * Open booking form to edit details\n     */\n    public editMeeting(navigate: boolean = true) {\n        if (localStorage) {\n            localStorage.setItem('ACA_STAFF.booking_form_data', JSON.stringify(this.booking));\n        }\n        if (navigate) {\n            this._router.navigate(['/book']);\n            this._dialog_ref.close();\n        }\n    }\n\n    /** Delete the meeting */\n    private deleteMeeting() {\n        this.loading = 'Deleting meeting...';\n        this._bookings\n            .delete(this.booking.id, {\n                delegate: this._data.as_delegate ? this._data.delegate : null,\n                room_id: this.booking.space?.id,\n            })\n            .then(\n                () => {\n                    this._service.notifySuccess('Successfully deleted meeting.');\n                    this.loading = null;\n                    this._dialog_ref.close();\n                },\n                (err) => {\n                    this.loading = null;\n                    this._service.notifyError(\n                        `Error deleting meeting. Error: ${err.message || err}`\n                    );\n                }\n            );\n    }\n\n    /** Delete series */\n    private deleteSeries() {\n        this.loading = 'Deleting series...';\n        this._bookings\n            .delete(this.booking.recurrence.series_id, {\n                delegate: this._data.as_delegate ? this._data.delegate : null,\n                room_id: this.booking.space?.id,\n            })\n            .then(\n                () => {\n                    this._service.notifySuccess('Successfully deleted series.');\n                    this.loading = null;\n                    this._dialog_ref.close();\n                },\n                (err) => {\n                    this.loading = null;\n                    this._service.notifyError(\n                        `Error deleting series. Error: ${err.message || err}`\n                    );\n                }\n            );\n    }\n}\n","<header class=\"custom\">\n    <div class=\"details\">\n        <!-- <button mat-icon-button [disabled]=\"is_first\" (click)=\"previousBooking()\">\n            <app-icon\n                [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_left' }\"\n            ></app-icon>\n        </button> -->\n        <div class=\"text\">{{ booking?.title || '&lt;No Title&gt;' }}</div>\n        <!-- <button mat-icon-button [disabled]=\"is_last\" (click)=\"nextBooking()\">\n            <app-icon\n                [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_right' }\"\n            ></app-icon>\n        </button> -->\n        <button mat-icon-button mat-dialog-close class=\"fixed\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </button>\n    </div>\n    <div class=\"actions\">\n        <button mat-button name=\"delete\" *ngIf=\"!has_ended\" (click)=\"confirmDeleteMeeting()\">\n            <div class=\"flex\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'delete' }\"></app-icon>\n                <div class=\"text\">\n                    {{ can_edit ? 'Delete' : 'Decline'}}\n                    <span *ngIf=\"has_recurrence\">Occurrence</span>\n                </div>\n            </div>\n        </button>\n        <button\n            mat-button\n            name=\"delete-recurr\"\n            *ngIf=\"has_recurrence\"\n            (click)=\"confirmDeleteSeries()\"\n        >\n            <div class=\"flex\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'delete' }\"></app-icon>\n                <div class=\"text\">{{ can_edit ? 'Delete' : 'Decline'}} Series</div>\n            </div>\n        </button>\n        <button mat-button name=\"duplicate\" *ngIf=\"can_edit\" (click)=\"duplicateMeeting()\">\n            <div class=\"flex\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'add' }\"></app-icon>\n                <div class=\"text\">Duplicate</div>\n            </div>\n        </button>\n        <button\n            mat-button\n            name=\"extend\"\n            *ngIf=\"in_progress && has_space && can_edit\"\n            (click)=\"extendMeeting()\"\n        >\n            <div class=\"flex\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'timelapse' }\"></app-icon>\n                <div class=\"text\">Extend</div>\n            </div>\n        </button>\n    </div>\n</header>\n<mat-dialog-content>\n    <main class=\"custom\" *ngIf=\"!loading; else load_state\">\n        <ng-container *ngIf=\"!edit; else edit_form\">\n            <div class=\"card\">\n                <div class=\"header\">Event Details</div>\n                <meeting-details-display [event]=\"booking\"></meeting-details-display>\n                <div class=\"flex\" *ngIf=\"!has_ended && !in_progress && can_edit\">\n                    <button mat-button (click)=\"editMeeting()\">Edit</button>\n                </div>\n            </div>\n            <ng-container *ngFor=\"let space of space_list\">\n                <div class=\"card\" *ngIf=\"space && space.id\">\n                    <div class=\"header\">Space Details</div>\n                    <meeting-details-space\n                        [booking]=\"booking\"\n                        [space]=\"space\"\n                    ></meeting-details-space>\n                    <div class=\"flex\" *ngIf=\"!has_ended && can_edit\">\n                        <button\n                            mat-button\n                            name=\"requirements\"\n                            (click)=\"editMeetingRequirements()\"\n                        >\n                            Edit Room Requirements\n                        </button>\n                    </div>\n                    <div class=\"header\">Catering Details</div>\n                    <meeting-details-catering\n                        [catering]=\"booking.catering\"\n                        [booking]=\"booking\"\n                        [space]=\"space\"\n                    ></meeting-details-catering>\n                    <div class=\"flex\" *ngIf=\"!has_ended && can_edit\">\n                        <button\n                            mat-button\n                            name=\"catering\"\n                            (click)=\"editMeetingCatering()\"\n                        >\n                            Edit Catering Orders\n                        </button>\n                    </div>\n                </div>\n            </ng-container>\n        </ng-container>\n    </main>\n</mat-dialog-content>\n<ng-template #edit_form>\n    <meeting-details-form></meeting-details-form>\n</ng-template>\n<ng-template #load_state>\n    <main class=\"custom\">\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </main>\n</ng-template>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { Space } from 'src/app/services/data/spaces/space.class';\n\n\n@Component({\n    selector: 'meeting-details-space',\n    templateUrl: './space.component.html',\n    styleUrls: ['./space.component.scss']\n})\nexport class MeetingDetailsSpaceComponent {\n    /** Active Space to display details for */\n    @Input() public space: Space;\n    /** Booking associated with the space */\n    @Input() public booking: Booking;\n\n    /** Latest equipment requirement notes for the active space */\n    public get notes(): string {\n        const space_notes = (this.booking.notes || []).filter(note => note.space === this.space.email);\n        return space_notes.length ? space_notes[space_notes.length - 1].message : '<No requirements>';\n    }\n\n    /** Latest equipment charge code for the active space */\n    public get charge_code(): string {\n        return (this.booking.equipment_codes || {})[this.space.email] || '<No charge code>';\n    }\n\n    /** Expected number of attendees for the active space */\n    public get expected_attendees(): number {\n        return (this.booking.expected_attendees || {})[this.space.email] || 0;\n    }\n}\n","<div class=\"space-details\" *ngIf=\"space\" [attr.space-id]=\"space.id\">\n    <div class=\"field\" name=\"space-name\">\n        <label>Space:</label>\n        <div class=\"value\">{{ space.name }}</div>\n    </div>\n    <div class=\"field\" name=\"requirements\">\n        <label>Requirements (Private Notes):</label>\n        <div class=\"value\">{{ notes }}</div>\n    </div>\n    <div class=\"field\" name=\"charge-code\">\n        <label>Charge Code:</label>\n        <div class=\"value\">{{ charge_code }}</div>\n    </div>\n    <div class=\"field\" name=\"expected-attendees\">\n        <label>Expected Attendees:</label>\n        <div class=\"value\">{{ expected_attendees }}</div>\n    </div>\n</div>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormGroup } from '@angular/forms';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { generateUserForm } from 'src/app/services/data/users/user.utilities';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { DialogEvent } from '../../shared/utilities/types.utilities';\n\n@Component({\n  selector: 'new-user-modal',\n  templateUrl: './new-user-modal.component.html',\n  styleUrls: ['./new-user-modal.component.scss']\n})\nexport class NewUserModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for the new user */\n    public form: FormGroup;\n    /** New user data store */\n    public user: User;\n    /** Whether user details are being saved */\n    public loading: boolean;\n\n    public ngOnInit(): void {\n        this.user = new User();\n        this.form = generateUserForm(this.user);\n    }\n\n    public saveChanges() {\n        this.form.markAllAsTouched();\n        if (this.form.valid) {\n            if (!this.form.controls.email.value) {\n                this.form.controls.email.setValue(`${Math.floor(Math.random() * 99999)}@guest.mckinsey.com`);\n            }\n            const new_user = new User({\n                ...this.form.value,\n                name: `${this.form.value.first_name} ${this.form.value.last_name}`,\n                type: 'external'\n            });\n            this.event.emit({ reason: 'done', metadata: new_user });\n        }\n    }\n\n}\n","<header>\n    <h3 mat-dialog-title>Add External Attendee</h3>\n    <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<div class=\"body\" *ngIf=\"!loading; else load_state\">\n    <user-form [form]=\"form\"></user-form>\n</div>\n<footer *ngIf=\"!loading\">\n    <button mat-button class=\"inverse\" mat-dialog-close>Cancel</button>\n    <button mat-button (click)=\"saveChanges()\">Save</button>\n</footer>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">\n                Saving attendee...\n            </div>\n        </div>\n    </div>\n</ng-template>\n\n","\nimport { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { SharedContentModule } from '../shared/shared.module';\n\nimport { ConfirmModalComponent } from './confirm-modal/confirm-modal.component';\nimport { ViewRoomModalComponent } from './view-room-modal/view-room-modal.component';\nimport { NewUserModalComponent } from './new-user-modal/new-user-modal.component';\nimport { BookingRulesModalComponent } from './booking-rules-modal/booking-rules-modal.component';\n\nimport { BookingConfirmComponent } from '../shell/bookings/overlays/booking-confirm/booking-confirm.component';\nimport { MeetingDetailsOverlayComponent } from './meeting-details-overlay/meeting-details-overlay.component';\nimport { MeetingDetailsCateringComponent } from './meeting-details-overlay/catering/catering.component';\nimport { MeetingDetailsDisplayComponent } from './meeting-details-overlay/display/display.component';\nimport { MeetingDetailsSpaceComponent } from './meeting-details-overlay/space/space.component';\nimport { TimeExtensionModalComponent } from './time-extension/time-extension.component';\nimport { SpaceSelectModalComponent } from './space-select-modal/space-select-modal.component';\nimport { RecurrenceModalComponent } from './recurrence-modal/recurrence-modal.component';\n\nconst OVERLAYS: Type<any>[] = [\n    ConfirmModalComponent,\n    ViewRoomModalComponent,\n    BookingConfirmComponent,\n    NewUserModalComponent,\n    BookingRulesModalComponent,\n    MeetingDetailsOverlayComponent,\n    TimeExtensionModalComponent,\n    RecurrenceModalComponent\n];\n\n@NgModule({\n    declarations: [\n        ...OVERLAYS,\n        MeetingDetailsCateringComponent,\n        MeetingDetailsDisplayComponent,\n        MeetingDetailsSpaceComponent,\n        SpaceSelectModalComponent\n    ],\n    imports: [\n        CommonModule,\n        SharedContentModule,\n        FormsModule,\n        ReactiveFormsModule,\n    ],\n    exports: [\n        ...OVERLAYS\n    ]\n})\nexport class SharedOverlaysModule {}\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\nimport { DialogEvent, Identity } from '../../shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { BookingRecurrenceDetails } from 'src/app/services/data/bookings/booking.interfaces';\nimport dayjs = require('dayjs');\n\nexport interface RecurrenceModalData {\n    /** Current recurrence details */\n    details: BookingRecurrenceDetails;\n    /** Currently set date for the booking */\n    date: number;\n}\n\nexport const RECURRENCE_METADATA = {\n    height: 'auto',\n    width: '24em',\n    maxHeight: 'calc(100vh - 2em)',\n    maxWidth: 'calc(100vw - 2em)',\n};\n\n@Component({\n    selector: 'recurrence-modal',\n    templateUrl: './recurrence-modal.component.html',\n    styleUrls: ['./recurrence-modal.component.scss'],\n})\nexport class RecurrenceModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for recurrence */\n    public form: FormGroup;\n    /** Loading state */\n    public loading: string;\n    /** Available recurrence periods */\n    public periods: Identity[] = [\n        { id: 'none', name: 'None' },\n        { id: 'daily', name: 'Daily' },\n        { id: 'weekly', name: 'Weekly' },\n        { id: 'biweekly', name: 'Biweekly' },\n        { id: 'monthly', name: 'Monthly' },\n    ];\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: RecurrenceModalData,\n        private _dialog_ref: MatDialogRef<RecurrenceModalComponent>\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._dialog_ref.disableClose = true;\n        const end_date = dayjs(this._data.details.end * 1000 || this._data.date)\n            .endOf('d')\n            .startOf('m');\n        this.form = new FormGroup({\n            period: new FormControl(this._data.details.period || 'none'),\n            end: new FormControl(end_date.valueOf(), [Validators.required]),\n        });\n    }\n\n    /**\n     * User confirmation of the content of the modal\n     */\n    public save() {\n        this.form.markAllAsTouched();\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            this.loading = 'Adding recurrence data to booking...';\n            const end = this.form.value.end;\n            this.event.emit({\n                reason: 'done',\n                metadata: {\n                    ...this._data.details,\n                    ...this.form.value,\n                    end: Math.floor(end / 1000),\n                },\n            });\n        }\n    }\n}\n","<header>\n    <div class=\"heading\" mat-dialog-title>Booking Recurrence</div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main *ngIf=\"!loading; else load_state\">\n        <form *ngIf=\"form\" [formGroup]=\"form\">\n            <div class=\"field\" *ngIf=\"form.controls.period && periods.length > 1\">\n                <label for=\"period\">Period: </label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select name=\"period\" formControlName=\"period\" placeholder=\"None\">\n                        <mat-option *ngFor=\"let type of periods\" [value]=\"type.id\">\n                            {{ type.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.end\">\n                <label\n                    for=\"end\"\n                    [class.error]=\"form.controls.end.errors && form.controls.end.touched\"\n                >\n                    End Date<span>*</span>:\n                </label>\n                <a-date-field name=\"end\" formControlName=\"end\"></a-date-field>\n                <div\n                    class=\"error-message\"\n                    *ngIf=\"form.controls.end.errors && form.controls.end.touched\"\n                >\n                    End date needs to be in the future\n                </div>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading\">\n    <footer>\n        <button mat-button (click)=\"save()\">Add to Booking</button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Observable, Subject, of } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, switchMap, catchError, map } from 'rxjs/operators';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { Space, SpaceBookingRuleOptions } from 'src/app/services/data/spaces/space.class';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { Identity, HashMap, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nexport interface SpaceSelectModalData {\n    /** List of selected spaces */\n    spaces: Space[];\n    /** Start time for availability of spaces */\n    date: number;\n    /** Duration of the availability block to look for */\n    duration: number;\n    /** Host of the booking being made */\n    host: User;\n    /** Whether multiple spaces can be selected */\n    multiple: boolean;\n    /** Force zone ids */\n    zone_ids?: string;\n}\n\n@Component({\n    selector: 'a-space-select-modal',\n    templateUrl: './space-select-modal.component.html',\n    styleUrls: ['./space-select-modal.component.scss']\n})\nexport class SpaceSelectModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether space list is being loaded */\n    public loading: boolean;\n    /** List of available spaces to select from */\n    public spaces: Space[] = [];\n    /** Active building to filter spaces on */\n    public active_building: Building;\n    /** Active building to filter spaces on */\n    public active_type: Identity;\n    /** List of items from an API search */\n    public search_results$: Observable<Space[]>;\n    /** Subject holding the value of the search */\n    public readonly search$ = new Subject<string>();\n    /** List of currently selected spaces */\n    public selected_spaces: Space[] = [];\n    /** Mapping as to whether a space is by request */\n    public request_map: HashMap<boolean> = {};\n    /** Whether selected list should be shown on mobile */\n    public show_list: boolean;\n\n    /** List of available buildings */\n    public types: Identity[] = [];\n\n    /** List of available buildings */\n    public get buildings(): Building[] {\n        return this._org.buildings;\n    }\n\n    /** Whether multiple spaces can be selected */\n    public get multiple(): boolean {\n        return !!this._data.multiple;\n    }\n\n    public get has_zone(): boolean {\n        return !!this._data.zone_ids;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        @Inject(MAT_DIALOG_DATA) private _data: SpaceSelectModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.selected_spaces = [].concat(this._data.spaces || []);\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(400),\n            distinctUntilChanged(),\n            switchMap(_ => {\n                this.loading = true;\n                const zone_ids: string[] = [];\n                /* istanbul ignore else */\n                if (this.active_building) {\n                    zone_ids.push(this.active_building.id);\n                }\n                /* istanbul ignore else */\n                if (this.active_type?.id) {\n                    zone_ids.push(`${this.active_type.id}`);\n                }\n                return this._spaces.available({\n                    zone_ids: this._data.zone_ids || zone_ids.join(','),\n                    date: this._data.date,\n                    duration: this._data.duration\n                });\n            }),\n            catchError(_ => of([])),\n            map((list: Space[]) => {\n                this.loading = false;\n                const selected = this.selected_spaces;\n                return list.filter((item: any) => !selected.find(space => space.id === item.id));\n            })\n        );\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe(list => {\n                this.spaces = list;\n                this.spaces.sort((a, b) => this.sort(a, b));\n                this.update();\n            })\n        );\n        this.active_building = this._data.spaces?.length ?\n            this._org.buildings.find(i => i.id === this._data.spaces[0].level.building_id) :\n            this._org.building;\n        this.types = [{ id: '', name: 'Any Space Type' } as any].concat(\n            this._org.space_types || []\n        );\n        this.active_type = this.types[0];\n        this.search$.next('');\n    }\n\n    /** Add space to selected list */\n    public addSpace(space: Space) {\n        this.selected_spaces.push(space);\n        this.selected_spaces = unique(this.selected_spaces, 'id');\n    }\n\n    /** Remove space from selected list */\n    public removeSpace(space: Space) {\n        this.selected_spaces = this.selected_spaces.filter(a_space => a_space.id !== space.id);\n    }\n\n    /** Emit current state of the selected list */\n    public save(list: Space[]) {\n        this.event.emit({ reason: 'done', metadata: list });\n    }\n\n    private update() {\n        const map = {};\n        const options: SpaceBookingRuleOptions = {\n            date: this._data.date,\n            duration: this._data.duration,\n            host: this._data.host\n        };\n        this.selected_spaces.forEach(space => (map[space.id] = space.byRequest(options)));\n        this.spaces.forEach(space => (map[space.id] = space.byRequest(options)));\n        this.request_map = map;\n    }\n\n    /**\n     * Compare two spaces to determine order\n     * @param space_a\n     * @param space_b\n     */\n    private sort(space_a: Space, space_b: Space) {\n        const bld = this._org.buildings.find(bld => bld.id === space_a.level.building_id);\n        const bld_b = this._org.buildings.find(bld => bld.id === space_b.level.building_id);\n        if (bld) {\n            if (bld !== bld_b) {\n                return (bld.name || '').localeCompare(bld_b.name || '');\n            }\n            const sort_order = (bld.sort_order ? [...bld.sort_order] : []).reverse();\n            for (const zone_id of sort_order) {\n                if (zone_id === '*') { continue; }\n                const a_has_zone = space_a.zones.indexOf(zone_id) >= 0;\n                const b_has_zone = space_b.zones.indexOf(zone_id) >= 0;\n                if (a_has_zone && !b_has_zone) {\n                    return 1;\n                } else if (b_has_zone && !a_has_zone) {\n                    return -1;\n                }\n            }\n        }\n        return (space_a.name || '').localeCompare(space_b.name || '');\n    }\n}\n","<header>\n    <div class=\"heading\">Select meeting space{{ multiple ? 's' : '' }}</div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main>\n        <div class=\"block available\">\n            <ng-container *ngIf=\"!has_zone\">\n                <mat-form-field appearance=\"outline\" *ngIf=\"buildings && buildings.length > 1\">\n                    <mat-select\n                        #select\n                        [(value)]=\"active_building\"\n                        (valueChange)=\"search$.next(active_building.id + '|' + active_type.id)\"\n                    >\n                        <mat-option *ngFor=\"let building of buildings\" [value]=\"building\">\n                            {{ building.code }} - {{ building.name\n                            }}{{ building.address ? ', ' + building.address : '' }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\" *ngIf=\"types && types.length > 1\">\n                    <mat-select\n                        #select\n                        [(value)]=\"active_type\"\n                        (valueChange)=\"search$.next(active_building.id + '|' + active_type.id)\"\n                    >\n                        <mat-option *ngFor=\"let type of types\" [value]=\"type\">\n                            {{ type?.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </ng-container>\n            <div class=\"list\">\n                <ng-container *ngIf=\"!loading; else load_state\">\n                    <ng-container *ngIf=\"spaces && spaces.length; else empty_state\">\n                        <div class=\"item\" *ngFor=\"let space of spaces\">\n                            <div class=\"details\">\n                                <div class=\"name\">{{ space.name }}</div>\n                                <div class=\"info\">{{ space.level.name }}</div>\n                            </div>\n                            <div class=\"capacity\">\n                                <app-icon\n                                    [icon]=\"{ type: 'icon', class: 'material-icons', content: 'account_circle' }\"\n                                ></app-icon>\n                                <div class=\"text\">{{ space.capacity || '0' }}</div>\n                            </div>\n                            <div class=\"actions\">\n                                <button\n                                    [class.request]=\"request_map[space.id]\"\n                                    mat-button\n                                    (click)=\"multiple ? addSpace(space) : save([space])\"\n                                >\n                                    {{ request_map[space.id] ? 'Request' : 'Select' }}\n                                </button>\n                            </div>\n                        </div>\n                    </ng-container>\n                </ng-container>\n            </div>\n        </div>\n        <div class=\"block selected\" *ngIf=\"multiple\" [class.show]=\"show_list\">\n            <h3>Selected spaces</h3>\n            <div class=\"list\">\n                <ng-container\n                    *ngIf=\"selected_spaces && selected_spaces.length; else empty_select_state\"\n                >\n                    <div class=\"item\" *ngFor=\"let space of selected_spaces\">\n                        <div\n                            class=\"icon\"\n                            [class.request]=\"request_map[space.id]\"\n                            [matTooltip]=\"\n                                request_map[space.id]\n                                    ? 'Bookings in this space need to be approved by a member of the concierge team'\n                                    : ''\n                            \"\n                        >\n                            <app-icon\n                                [icon]=\"{\n                                    class: 'material-icons',\n                                    content: request_map[space.id] ? 'warning' : 'done'\n                                }\"\n                            ></app-icon>\n                        </div>\n                        <div class=\"details\">\n                            <div class=\"name\">{{ space.name }}</div>\n                            <div class=\"info\">{{ space.level.name }}</div>\n                        </div>\n                        <div class=\"capacity\">\n                            <app-icon\n                                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'account_circle' }\"\n                            ></app-icon>\n                            <div class=\"text\">{{ space.capacity || '0' }}</div>\n                        </div>\n                        <div class=\"actions\">\n                            <button mat-icon-button (click)=\"removeSpace(space)\">\n                                <app-icon\n                                    [icon]=\"{ class: 'material-icons', content: 'close' }\"\n                                ></app-icon>\n                            </button>\n                        </div>\n                    </div>\n                </ng-container>\n            </div>\n            <footer>\n                <button mat-button (click)=\"save(this.selected_spaces)\">Add to booking</button>\n            </footer>\n            <button mat-icon-button [class.close]=\"true\" [class.mobile-only]=\"true\" (click)=\"show_list = false\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n            </button>\n            <div class=\"tag mobile-only\">\n                <button mat-icon-button (click)=\"show_list = true\">\n                    <app-icon [icon]=\"{ class: 'material-icons', content: 'list' }\"></app-icon>\n                </button>\n            </div>\n        </div>\n    </main>\n</mat-dialog-content>\n<ng-template #load_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <mat-spinner diameter=\"48\"></mat-spinner>\n        </div>\n        <div class=\"text\">Loading available spaces...</div>\n    </div>\n</ng-template>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">No available spaces</div>\n    </div>\n</ng-template>\n<ng-template #empty_select_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">No selected spaces</div>\n    </div>\n</ng-template>\n","import { Component, Output, EventEmitter, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { DialogEvent, Identity } from 'src/app/shared/utilities/types.utilities';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { humaniseDuration } from 'src/app/shared/utilities/general.utilities';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\n/** Maximum amount of time that the booking can be extended */\nconst MAX_EXTENSION = 60;\n\nexport interface TimeExtensionModalData {\n    booking: Booking;\n}\n\n@Component({\n    selector: 'time-extension',\n    templateUrl: './time-extension.component.html',\n    styleUrls: ['./time-extension.component.scss']\n})\nexport class TimeExtensionModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Duration options that the user can select */\n    public durations: Identity[] = [];\n    /** Display string for the loading state of the booking */\n    public loading: string;\n\n    public get booking(): Booking {\n        return this._data.booking;\n    }\n\n    constructor(\n        private _dialog: MatDialogRef<TimeExtensionModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: TimeExtensionModalData,\n        private _service: ApplicationService,\n        private _spaces: SpacesService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.checkAvailability(MAX_EXTENSION);\n    }\n\n    public checkAvailability(extension: number) {\n        if (extension <= 0) {\n            this._service.notifyInfo('Meeting is not available to be extended.');\n            this._dialog.close();\n            return;\n        }\n        this.loading = 'Checking availability of spaces...';\n        this._spaces.available({\n            room_ids: this.booking.space_list.map(room => room.id).join(','),\n            date: this.booking.date,\n            duration: this.booking.duration + extension,\n            ignore: this.booking.icaluid,\n            hide_bookings: true\n        }).then(\n            list => {\n                if (list.length >= this.booking.space_list.length) {\n                    this.durations = [];\n                    let extended = 15;\n                    while (extended <= extension) {\n                        this.durations.push({\n                            id: this.booking.duration + extended,\n                            name: ` Extend ${humaniseDuration(extended)}`\n                        });\n                        extended += 15;\n                    }\n                    this.loading = null;\n                } else {\n                    this.checkAvailability(extension - 15);\n                }\n            },\n            err => {\n                this._service.notifyError(`Error extending meeting. Error: ${err.message | err}`);\n                this._dialog.close();\n            }\n        );\n    }\n\n    /**\n     * Extend the meeting but the given duration\n     * @param block Duration block to update the meeting to\n     */\n    public extendMeeting(block: Identity) {\n        this.loading = 'Extending meeting...';\n        const new_booking = new Booking({ ...this.booking.toJSON(), duration: block.id });\n        new_booking.save().then(\n            (booking) => {\n                this.loading = null;\n                this._dialog.close();\n                this.event.emit({ reason: 'done', metadata: booking });\n            },\n            err => {\n                this._service.notifyError(`Error extending meeting. Error: ${err.message | err}`);\n            }\n        );\n    }\n}\n","<header>\n    <div class=\"text\">Extend meeting</div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{class:'material-icons', content: 'close'}\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main>\n        <ng-container *ngIf=\"!loading && durations; else loading_content\">\n            <button *ngFor=\"let item of durations\" mat-button name=\"action\" (click)=\"extendMeeting(item)\">\n                {{ item.name }}\n            </button>\n        </ng-container>\n    </main>\n</mat-dialog-content>\n<ng-template #loading_content>\n    <div class=\"info-block\">\n        <div class=\"icon\">\n            <mat-spinner *ngIf=\"loading\" diameter=\"32\"></mat-spinner>\n            <app-icon\n                *ngIf=\"!loading\"\n                [icon]=\"{class:'material-icons', content: 'event_busy'}\"\n            ></app-icon>\n        </div>\n        <div class=\"text\">\n            {{ loading || 'No available extensions' }}\n        </div>\n    </div>\n</ng-template>\n","import { Component, Output, EventEmitter, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { MapPinComponent } from '@acaprojects/ngx-interactive-map';\n\nimport { BaseDirective } from '../../shared/base.directive';\nimport { BuildingLevel } from '../../services/data/organisation/level.class';\nimport { Space } from '../../services/data/spaces/space.class';\nimport { MapFeature } from '@acaprojects/ngx-interactive-map/lib/helpers/map.interfaces';\nimport { Point } from 'src/app/shared/utilities/types.utilities';\n\n@Component({\n    selector: 'view-room-modal',\n    templateUrl: './view-room-modal.component.html',\n    styleUrls: ['./view-room-modal.component.scss'],\n})\nexport class ViewRoomModalComponent extends BaseDirective {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter();\n\n    public features: MapFeature[] = [];\n    /** Space to show the location of on the map */\n    public get space(): Space {\n        return this._data.space;\n    }\n\n    public get level(): BuildingLevel {\n        return this.space.level;\n    }\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: { space: Space }) {\n        super();\n        this.features = [this.focus_feature];\n    }\n\n    /** Point on map to focus on */\n    public get focus_feature(): MapFeature {\n        /* istanbul ignore else */\n        if (!this.space) {\n            return null;\n        }\n        return {\n            id: `area-${this.space.map_id}-status`,\n            coordinates: null,\n            content: MapPinComponent,\n            data: {\n                back: '#fff',\n                fore: '#d31145',\n            },\n        };\n    }\n\n    public get focus(): string | Point {\n        return this.focus_feature ? this.focus_feature.id : null;\n    }\n}\n","<header>\n    <h3 mat-dialog-title>Locate Space - <span>{{ space.name }}</span></h3>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <div class=\"body\" *ngIf=\"level\">\n        <a-map [src]=\"level?.map_url\" [features]=\"features\">\n            <mat-spinner diameter=\"64\"></mat-spinner>\n        </a-map>\n\n        <div class=\"level\">{{ level?.name }}</div>\n    </div>\n</mat-dialog-content>\n","import { Injectable, ApplicationRef, NgZone } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { SwUpdate } from '@angular/service-worker';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { first } from 'rxjs/operators';\n\nimport { ComposerService } from '@placeos/composer';\nimport { PlaceOSOptions } from '@placeos/ts-client';\nimport { HeapIoService } from '@acaprojects/ngx-heap-io';\n\nimport { Observable, BehaviorSubject, Subject, Subscription } from 'rxjs';\n\nimport { BaseClass } from '../shared/base.class';\nimport { ConsoleStream, SettingsService } from './settings.service';\nimport { ApplicationLoadingState } from '../shared/utilities/types.utilities';\n\nimport { HotkeysService } from './hotkeys.service';\nimport { ComposerSettings, ApplicationIcon } from '../shared/utilities/settings.interfaces';\nimport { BaseDataClass } from './data/base-api.class';\n\ndeclare global {\n    interface Window {\n        application: ApplicationService;\n        mock: {\n            enabled: boolean;\n            backend: any;\n        };\n    }\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ApplicationService extends BaseClass {\n    /** List of previous routes for return navigation */\n    private _route_trail: string[] = [];\n    /** Map of state variables for Service */\n    protected _subjects: {\n        [key: string]: BehaviorSubject<any> | Subject<any>;\n    } = {};\n    /** Map of observables for state variables */\n    protected _observers: { [key: string]: Observable<any> } = {};\n    /** Whether the application has stablised */\n    private _stable: boolean;\n\n    /** Whether the application has stablised */\n    public get is_stable(): boolean {\n        return this._stable || false;\n    }\n\n    constructor(\n        private _app_ref: ApplicationRef,\n        private _zone: NgZone,\n        private _title: Title,\n        private _cache: SwUpdate,\n        private _settings: SettingsService,\n        private _hotkeys: HotkeysService,\n        private _composer: ComposerService,\n        private _snackbar: MatSnackBar,\n        private _analytics: HeapIoService,\n    ) {\n        super();\n        this.set('system', null);\n        this.set('title', 'Home');\n        this.set('loading', {});\n        this._app_ref.isStable.pipe(first(_ => _)).subscribe(() => {\n            this._zone.run(() => {\n                this._stable = true;\n                this.log('APP', `Application has stablised.`);\n                this.setupCache();\n                this.waitForSettings();\n            });\n        });\n    }\n\n    public get Bindings() {\n        return this._composer.bindings;\n    }\n    /** Analytics service */\n    public get Analytics() {\n        return {};\n    }\n    /** Hotkeys service */\n    public get Hotkeys() {\n        return this._hotkeys;\n    }\n\n    /** Engine Composer service */\n    public get Composer() {\n        return this._composer;\n    }\n\n    /**\n     * Get a setting from the settings service\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        return this._settings.get(key);\n    }\n\n    /** Name of the application */\n    public get name() {\n        return this._settings.app_name;\n    }\n\n    /**\n     * Title of the page\n     */\n    public set title(value: string) {\n        const title_suffix = this.setting('app.title');\n        this.set('title', value);\n        this._title.setTitle(`${value ? value + ' | ' : ''}${title_suffix}`);\n    }\n\n    /**\n     * Title of the page\n     */\n    public get title(): string {\n        return this._title.getTitle();\n    }\n\n    /** Root API Endpoint */\n    public get endpoint() {\n        return `/api/staff/`;\n    }\n\n    /** Root API Endpoint for engine */\n    public get engine_endpoint() {\n        return this._composer.auth.api_endpoint + '/';\n    }\n\n    /** Whether settings has been loaded */\n    public get has_settings(): boolean {\n        return this._settings.is_initialised;\n    }\n\n    /**\n     * Create notification popup\n     * @param type CSS Class to add to the notification\n     * @param message Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     * @param icon Icon to render to the left of the notification message\n     */\n    public notify(\n        type: string,\n        message: string,\n        action: string = 'OK',\n        on_action?: () => void,\n        icon: ApplicationIcon = {\n            type: 'icon',\n            class: 'material-icons',\n            content: 'info'\n        }\n    ): void {\n        const snackbar_ref = this._snackbar.open(message, action, {\n            panelClass: [type],\n            duration: 5000\n        });\n        this.subscription(\n            'snackbar_close',\n            snackbar_ref.afterDismissed().subscribe(() => {\n                this.unsub('snackbar_close');\n                this.unsub('notify');\n            })\n        );\n        if (action) {\n            on_action = on_action || (() => snackbar_ref.dismiss());\n            this.subscription(\n                'notify',\n                snackbar_ref.onAction().subscribe(() => on_action())\n            );\n        }\n    }\n\n    /**\n     * Create success notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifySuccess(msg: string, action?: string, on_action?: () => void): void {\n        const icon: ApplicationIcon = {\n            type: 'icon',\n            class: 'material-icons',\n            content: 'done'\n        };\n        console.debug(msg);\n        this.notify('success', msg, action, on_action, icon);\n    }\n\n    /**\n     * Create error notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifyError(msg: string, action?: string, on_action?: () => void): void {\n        const icon: ApplicationIcon = {\n            type: 'icon',\n            class: 'material-icons',\n            content: 'error'\n        };\n        console.error(msg);\n        this.notify('error', msg, action, on_action, icon);\n    }\n\n    /**\n     * Create warning notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifyWarn(msg: string, action?: string, on_action?: () => void): void {\n        const icon: ApplicationIcon = {\n            type: 'icon',\n            class: 'material-icons',\n            content: 'warning'\n        };\n        console.warn(msg);\n        this.notify('warn', msg, action, on_action, icon);\n    }\n\n    /**\n     * Create info notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifyInfo(msg: string, action?: string, on_action?: () => void): void {\n        console.info(msg);\n        this.notify('info', msg, action, on_action);\n    }\n\n    /**\n     * Log data to the browser console\n     * @param type Type of message\n     * @param msg Message body\n     * @param args array of argments to log to the console\n     * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\n     * @param force Whether to force message to be emitted when debug is disabled\n     */\n    public log(\n        type: string,\n        msg: string,\n        args?: any,\n        stream: ConsoleStream = 'debug',\n        force: boolean = false\n    ): void {\n        this._settings.log(type, msg, args, stream, force);\n    }\n\n    /**\n     * Get the current value of the named property\n     * @param name Property name\n     */\n    public get<U = any>(name: string): U {\n        return this._subjects[name] && this._subjects[name] instanceof BehaviorSubject\n            ? (this._subjects[name] as BehaviorSubject<U>).getValue()\n            : null;\n    }\n\n    /**\n     * Listen to value change of the named property\n     * @param name Property name\n     * @param next Callback for value changes\n     */\n    public listen<U = any>(name: string, next: (_: U) => void): Subscription {\n        return this._observers[name] ? this._observers[name].subscribe(next) : null;\n    }\n\n    /**\n     * Update the value of the named property\n     * @param name Property name\n     * @param value New value\n     */\n    public set<U = any>(name: string, value: U): void {\n        if (!this._subjects[name]) {\n            this._subjects[name] = new BehaviorSubject<U>(value);\n            this._observers[name] = this._subjects[name].asObservable();\n        } else {\n            this._subjects[name].next(value);\n        }\n    }\n\n    /** Wait for settings to be initialised before setting up the application */\n    private waitForSettings() {\n        // Wait until the settings have loaded before initialising\n        this._settings.initialised.pipe(first(_ => _)).subscribe(() => this.init());\n    }\n\n    /**\n     * Initialise application services\n     */\n    private init(): void {\n        this.setupComposer();\n        // this.setupAnalytics();\n        this._composer.initialised.pipe(first(_ => _)).subscribe(() => {\n            this._initialised.next(true);\n        });\n        // Add service to window if in debug mode\n        if (window.debug) {\n            window.application = this;\n        }\n    }\n\n    /**\n     * Initialise the composer library comms\n     */\n    private setupComposer(): void {\n        this.log('SYSTEM', 'Setup up composer...');\n        const loading: ApplicationLoadingState = this.get('loading') || {};\n        loading.composer = {\n            message: 'Initialising service connection',\n            state: 'loading'\n        };\n        this.set('loading', loading);\n        // Get application settings\n        const settings: ComposerSettings = this._settings.get('composer') || {};\n        const protocol = settings.protocol || location.protocol;\n        const host = settings.domain || location.hostname;\n        const port = settings.port || location.port;\n        const url = settings.use_domain ? `${protocol}//${host}:${port}` : location.origin;\n        const route = settings.route || '';\n        const mock = this._settings.get('mock');\n        // Generate configuration object\n        const config: PlaceOSOptions = {\n            scope: 'public',\n            host: `${host}:${port}`,\n            auth_uri: `${url}/auth/oauth/authorize`,\n            token_uri: `${url}/auth/token`,\n            redirect_uri: `${location.origin}${route}/oauth-resp.html`,\n            handle_login: !settings.local_login,\n            mock\n        };\n        this._composer.setup(config);\n        loading.composer = {\n            message: 'Initialising service connection',\n            state: 'complete'\n        };\n        this.set('loading', loading);\n    }\n\n    /**\n     * Setup handler for cache change events\n     */\n    private setupCache() {\n        if (this._cache.isEnabled) {\n            this.subscription(\n                'cache_update',\n                this._cache.available.subscribe(event => {\n                    const current = `current version is ${event.current.hash}`;\n                    const available = `available version is ${event.available.hash}`;\n                    this.log('CACHE', `Update available: ${current} ${available}`);\n                    this.activateUpdate();\n                })\n            );\n            this.subscription(\n                'cache_activated',\n                this._cache.activated.subscribe(() => {\n                    this.log('CACHE', `Updates activated. Reloading...`);\n                    this.notifyInfo(\n                        'Newer version of the application is available',\n                        'Refresh',\n                        () => location.reload(true)\n                    );\n                })\n            );\n            setInterval(() => {\n                this.log('CACHE', `Checking for updates...`);\n                this._cache.checkForUpdate();\n            }, 5 * 60 * 1000);\n        }\n    }\n\n    /**\n     * Update the cache and reload the page\n     *\n     */\n    private activateUpdate() {\n        if (this._cache.isEnabled) {\n            this.log('CACHE', `Activating changes to the cache...`);\n            this._cache.activateUpdate().then(() => {\n                this.notifyInfo('Newer version of the application is available', 'Refresh', () =>\n                    location.reload(true)\n                );\n            });\n        }\n    }\n}\n","import { Subject, Observable } from 'rxjs';\n\nimport { BaseClass } from '../../shared/base.class';\nimport { HashMap } from '../../shared/utilities/types.utilities';\nimport { ServiceManager, ServiceLike } from './service-manager.class';\n\nexport type ApiEventType = 'value_change' | 'item_saved' | 'reset' | 'other';\n\nexport interface ApiEvent<T = HashMap> {\n    type: ApiEventType;\n    metadata: T;\n}\n\n\nexport class BaseDataClass extends BaseClass {\n    /** Subject for emitting events on the object */\n    protected readonly event_subject = new Subject<ApiEvent>();\n    /** Observable for events on this object */\n    public readonly events = this.event_subject.asObservable();\n    /** Unique Identifier of the object */\n    public readonly id: string;\n    /** Human readable name of the object */\n    public readonly name: string;\n    /** Email address associated with the object */\n    public readonly email: string;\n    /** Map of local property names to server ones */\n    protected _server_names: HashMap<string> = {};\n    /** Service for managing model on the server */\n    protected get _service(): ServiceLike {\n        return ServiceManager.serviceFor(BaseDataClass);\n    }\n\n    constructor(raw_data: HashMap) {\n        super();\n        this.id = raw_data.id || raw_data.zone_id || raw_data.email || '';\n        this.name = raw_data.name || '';\n        this.email = `${raw_data.email || ''}`.toLowerCase();\n    }\n\n    /**\n     * Save pending changes to server\n     */\n    public save(): Promise<BaseDataClass> {\n        if (this._service) {\n            const form = this.toJSON();\n            return new Promise((resolve, reject) => {\n                const promise = this.id\n                    ? this._service.update(this.id, form)\n                    : this._service.add(form);\n                promise.then(\n                    (d) => {\n                        this.event_subject.next({ type: 'item_saved',  metadata: d });\n                        resolve(d);\n                    },\n                    (_) => reject(_)\n                );\n            });\n        } else {\n            Promise.reject('No service to process request');\n        }\n    }\n\n    /**\n     * Delete this item from the server\n     */\n    public delete(): Promise<void> {\n        if (this.id) {\n            return this._service.delete(this.id);\n        }\n    }\n\n    /**\n     * Run task for this item on the service\n     * @param task_name Name of the task\n     * @param parameters Parameters to pass to the task request\n     */\n    public runTask(task_name: string, parameters: HashMap): Promise<void> {\n        if (this.id) {\n            return this._service.task(this.id, task_name, parameters);\n        }\n    }\n    /**\n     * Convert object into plain object\n     */\n    public toJSON(this: BaseDataClass): HashMap {\n        const obj: any = { ...this };\n        // Remove local private members\n        delete obj._service;\n        delete obj._changes;\n        delete obj.event_subject;\n        delete obj.events;\n        // Remove parent private members\n        delete obj._timers;\n        delete obj._intervals;\n        delete obj._subscriptions;\n        delete obj._server_names;\n        delete obj._initialised;\n        // Convert remaining members to be public\n        const keys = Object.keys(obj);\n        for (const key of keys) {\n            if (key[0] === '_') {\n                const new_key = this._server_names[key.substr(1)] || key.substr(1);\n                obj[new_key] = obj[key];\n                delete obj[key];\n            } else if (obj[key] === undefined) {\n                delete obj[key];\n            }\n        }\n        return obj;\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): BaseDataClass {\n        return new BaseDataClass(this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): BaseDataClass {\n        return new BaseDataClass({ ...this, id: null, email: null });\n    }\n}\n","import { ComposerService } from '@placeos/composer';\nimport { BehaviorSubject, Observable, Subscription, Subscriber, Subject } from 'rxjs';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDataClass } from './base-api.class';\nimport { BaseClass } from '../../shared/base.class';\nimport { ApplicationService } from '../app.service';\nimport { HashMap } from '../../shared/utilities/types.utilities';\nimport { toQueryString } from '../../shared/utilities/api.utilities';\n\nexport interface IEngineResponse {\n    results: HashMap[];\n    total: number;\n}\n\nexport class BaseAPIService<T extends {} = BaseDataClass> extends BaseClass {\n    /** Application service */\n    public parent: ApplicationService;\n    /** Display name of the service */\n    protected _name: string;\n    /** API Route of the service */\n    protected _api_route: string;\n    /** Map of state variables for Service */\n    protected _subjects: { [key: string]: BehaviorSubject<any> | Subject<any> } = {};\n    /** Map of observables for state variables */\n    protected _observers: { [key: string]: Observable<any> } = {};\n    /** Map of poll subscribers for API endpoints */\n    protected _subscribers: { [key: string]: Subscriber<any> } = {};\n    /** Map of promises for Service */\n    protected _promises: { [key: string]: Promise<any> } = {};\n    /** Comparison function for service items */\n    protected _compare: (a: T, b: T) => boolean = (a, b) =>\n        a === b || (a as any).id === (b as any).id;\n    /** Default filter function for list method */\n    protected _list_filter: (a: T) => boolean = (a) => !!a;\n\n    /** Http Client */\n    protected get http() {\n        return this._composer.http;\n    }\n\n    constructor(protected _composer: ComposerService) {\n        super();\n        this._name = 'Base';\n        this._api_route = 'base';\n        this.set('list', []);\n    }\n\n    /**\n     * Initailise service\n     */\n    public init() {\n        this.load().then(\n            (_) => this._initialised.next(true),\n            (err) => this.timeout('init', () => this.init(), 1000)\n        );\n    }\n\n    /**\n     * Get API route for the service\n     * @param engine Whether endpoint is using the application API or engine API\n     */\n    public route(engine: boolean = false) {\n        const endpoint = engine\n            ? this._composer.auth.api_endpoint\n            : '/api/staff';\n        return `${endpoint}/${this._api_route}`;\n    }\n    /** API Route of the service */\n    public get api_route() {\n        return this._api_route;\n    }\n\n    /**\n     * Get the current value of the named property\n     * @param name Property name\n     */\n    public get<U = any>(name: string): U {\n        if (!this._observers[name]) {\n            this.set<U>(name, null);\n        }\n        return (this._subjects[name] as BehaviorSubject<U>).getValue();\n    }\n\n    /**\n     * Listen to value change of the named property\n     * @param name Property name\n     * @param next Callback for value changes\n     */\n    public listen<U = any>(name: string): Observable<U> {\n        if (!this._observers[name]) {\n            this.set<U>(name, null);\n        }\n        return this._observers[name];\n    }\n\n    /**\n     * Update the value of the named property\n     * @param name Property name\n     * @param value New value\n     */\n    protected set<U = any>(name: string, value: U): void {\n        if (!this._subjects[name]) {\n            this._subjects[name] = new BehaviorSubject<U>(value);\n            this._observers[name] = this._subjects[name].asObservable();\n        } else {\n            this._subjects[name].next(value);\n        }\n    }\n\n    /**\n     * Get list of loaded items\n     * @param predicate Function for filtering the list\n     */\n    public filter(predicate: (a: T) => boolean = this._list_filter): T[] {\n        const list = this.get<T[]>('list') || [];\n        return list.filter(_ => predicate(_));\n    }\n\n    /**\n     * Get item with the given id from the loaded items\n     * @param id ID of the item\n     */\n    public find(id: string = ''): T {\n        const list = this.get('list') || [];\n        return list.find((i) => i.id === id || (i.email && i.email.toLowerCase() === id.toLowerCase()));\n    }\n\n    /**\n     * Query the index of the API route associated with this service\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public query(query_params: HashMap = { update_list: true }): Promise<T[]> {\n        let engine = false;\n        let cache = 1000;\n        /* istanbul ignore else */\n        if (query_params) {\n            engine = !!query_params.engine;\n            delete query_params.engine;\n            cache = query_params.cache || 1000;\n            delete query_params.cache;\n        }\n        const query = toQueryString(query_params);\n        const key = `query|${query}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise((resolve, reject) => {\n                const url = `${this.route(engine)}${query ? '?' + query : ''}`;\n                let result: T[] | HashMap[] = [];\n                this.http.get(url).subscribe(\n                    (d: IEngineResponse | HashMap[]) => {\n                        result =\n                            d && d instanceof Array\n                                ? d.map((i) => this.process(i))\n                                : d && !(d instanceof Array) && d.results\n                                ? (d.results as HashMap[])\n                                : [];\n                    },\n                    (e) => {\n                        reject(e);\n                        this._promises.new_item = null;\n                    },\n                    () => {\n                        if (\n                            (!query || (query_params && query_params.update_list)) &&\n                            result.length > 0 &&\n                            result[0] instanceof BaseDataClass\n                        ) {\n                            this.set('list', this.updateList(this.get('list'), result as T[]));\n                        }\n                        resolve(result);\n                        this.timeout(key, () => (this._promises[key] = null), cache);\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Query the API route for a sepecific item\n     * @param id ID of the item\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public show(id: string, query_params: HashMap = {}): Promise<T> {\n        let engine = false;\n        /* istanbul ignore else */\n        if (query_params) {\n            engine = !!query_params.engine;\n            delete query_params.engine;\n        }\n        const query = toQueryString(query_params);\n        const key = `show|${id}|${query}`;\n        /* istanbul ignore else */\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<T>((resolve, reject) => {\n                const url = `${this.route(engine)}/${id}${query ? '?' + query : ''}`;\n                let result: T = null;\n                this.http.get(url).subscribe(\n                    (d) => (result = this.process(d)),\n                    (e) => {\n                        reject(e);\n                        this._promises.new_item = null;\n                    },\n                    () => {\n                        resolve(result);\n                        this.timeout(key, () => (this._promises[key] = null), 1000);\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Make post request for a new item to the service\n     * @param form_data Data to post to the server\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public add(form_data: HashMap, query_params: HashMap = {}): Promise<T> {\n        /* istanbul ignore else */\n        if (!this._promises.new_item) {\n            this._promises.new_item = new Promise<T>((resolve, reject) => {\n                const query = toQueryString(query_params);\n                const url = `${this.route(query_params.engine)}${query ? '?' + query : ''}`;\n                let result: T = null;\n                this.http.post(url, form_data).subscribe(\n                    (d) => (result = this.process(d)),\n                    (e) => {\n                        reject(e);\n                        this.analyticsEvent(`create-${this._name.toLowerCase()}-failed`);\n                        this._promises.new_item = null;\n                    },\n                    () => {\n                        resolve(result);\n                        this.set('list', this.updateList(this.get('list'), [result]));\n                        this.analyticsEvent(`create-${this._name.toLowerCase()}-success`);\n                        this._promises.new_item = null;\n                    }\n                );\n            });\n        }\n        return this._promises.new_item;\n    }\n\n    /**\n     * Perform API task for the given item ID\n     * @param id ID of the item\n     * @param task_name Name of the task\n     * @param form_data Map of data to pass to the API\n     * @param method Verb to use for request\n     */\n    public task<U = any>(\n        id: string,\n        task_name: string,\n        form_data: HashMap = {},\n        method: 'post' | 'get' = 'post'\n    ): Promise<U> {\n        const query = toQueryString(form_data);\n        const key = `task|${id}|${task_name}|${query}`;\n        /* istanbul ignore else */\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<U>((resolve, reject) => {\n                const post_data = { ...form_data, id, _task: task_name };\n                const url = `${this.api_route}/${id}/${task_name}`;\n                let result: any;\n                const request =\n                    method === 'post'\n                        ? this.http.post(url, post_data)\n                        : this.http.get(`${url}${query ? '?' + query : ''}`);\n                request.subscribe(\n                    (d) => (result = d),\n                    (e) => {\n                        reject(e);\n                        this.analyticsEvent(\n                            `${this._name.toLowerCase()}-task-${task_name}-failed`,\n                            id\n                        );\n                        delete this._promises[key];\n                    },\n                    () => {\n                        resolve(result as U);\n                        this.analyticsEvent(\n                            `${this._name.toLowerCase()}-task-${task_name}-success`,\n                            id\n                        );\n                        this.timeout(key, () => delete this._promises[key], 1000);\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Setup a poller for an API endpoint\n     * @param id Show request ID. Leave blank to poll on the query endpoint\n     * @param query_params Map of query paramaters to add to the polled URL\n     * @param delay Delay between each poll event\n     */\n    public poll(\n        id?: string,\n        query_params: HashMap = {},\n        delay: number = 5000\n    ): Observable<T | T[]> {\n        const key = `poll|${id || ''}|${toQueryString(query_params) || ''}`;\n        this.stopPoll(id, query_params);\n        this._subjects[key] = new Subject<T | T[]>();\n        this._observers[key] = this._subjects[key].asObservable();\n        const sub = this._subjects[key];\n        const query = { ...(query_params || {}), _poll: true };\n        if (id) {\n            this.show(id, query).then(\n                (d) => sub.next(d),\n                (e) => sub.error(e)\n            );\n            this.interval(\n                key,\n                () => {\n                    this.show(id, query).then(\n                        (d) => sub.next(d),\n                        (e) => sub.error(e)\n                    );\n                },\n                delay\n            );\n        } else {\n            this.query(query).then(\n                (d) => sub.next(d),\n                (e) => sub.error(e)\n            );\n            this.interval(\n                key,\n                () => {\n                    this.query(query).then(\n                        (d) => sub.next(d),\n                        (e) => sub.error(e)\n                    );\n                },\n                delay\n            );\n        }\n        return this._observers[key];\n    }\n\n    /**\n     * Destroy poller\n     * @param id\n     * @param query_params\n     */\n    public stopPoll(id?: string, query_params: HashMap = {}) {\n        const key = `poll|${id || ''}|${toQueryString(query_params) || ''}`;\n        /* istanbul ignore else */\n        if (this._subjects[key]) {\n            this._subjects[key].complete();\n            this._subjects[key] = null;\n            this._observers[key] = null;\n        }\n    }\n\n    /**\n     * Make put request for changes to the item with the given id\n     * @param id ID of the item being updated\n     * @param form_data New values for the item\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public update(id: string, form_data: HashMap, query_params: HashMap = {}): Promise<T> {\n        const key = `update|${id}`;\n        /* istanbul ignore else */\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<T>((resolve, reject) => {\n                const query = toQueryString(query_params);\n                const url = `${this.route(query_params.engine)}/${id}${query ? '?' + query : ''}`;\n                let result: T = null;\n                this.http.put(url, form_data).subscribe(\n                    (d) => (result = this.process(d)),\n                    (e) => {\n                        reject(e);\n                        this.analyticsEvent(`update-${this._name.toLowerCase()}-failed`, id);\n                        this._promises[key] = null;\n                    },\n                    () => {\n                        resolve(result);\n                        this.set(\n                            'list',\n                            this.updateList(this.removeItem(this.get('list'), { id } as any), [\n                                result,\n                            ])\n                        );\n                        this.analyticsEvent(`update-${this._name.toLowerCase()}-success`, id);\n                        this._promises[key] = null;\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Make delete request for the given item\n     * @param id ID of item\n     */\n    public delete(id: string, q: HashMap = {}): Promise<void> {\n        const key = `delete|${id}`;\n        /* istanbul ignore else */\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<void>((resolve, reject) => {\n                const query = toQueryString(q);\n                const url = `${this.route()}/${id}${query ? '?' + query : ''}`;\n                this.http.delete(url).subscribe(\n                    (_) => null,\n                    (e) => {\n                        reject(e);\n                        this._promises[key] = null;\n                    },\n                    () => {\n                        this.set('list', this.removeItem(this.get('list'), { id } as any));\n                        this._promises[key] = null;\n                        resolve();\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Add new API item from another service or API class\n     * @param id ID of the item/or service adding the new item\n     * @param data Raw API data for the new item\n     * @param type Adder type\n     */\n    public addFrom(\n        id: string,\n        data: HashMap,\n        type: 'class' | 'service' | 'other' = 'other'\n    ): string {\n        const new_item = this.process(data);\n        this.set('list', this.updateList(this.get('list'), [new_item]));\n        return (new_item as any).id;\n    }\n\n    /**\n     * Remove items with the given IDs from the list\n     * @param id ID of the item/or service remove the list of items\n     * @param remove_ids List of item IDs to remove\n     * @param type Remover type\n     */\n    public removeFrom(\n        id: string,\n        remove_ids: string[],\n        type: 'class' | 'service' | 'other' = 'other'\n    ) {}\n\n    /**\n     * Load initial data for the service\n     */\n    protected async load(): Promise<void> {}\n\n    /**\n     * Post analytics event for this service\n     * @param action Name of the action to post\n     */\n    protected analyticsEvent(action: string, label?: string) {\n        // if (this.parent && this.parent.Analytics) {\n        //     this.parent.Analytics.track(this._name, { desc: `${this.parent.name.toLowerCase()}-${action}`, label });\n        // }\n    }\n\n    /**\n     * Convert raw API data into a valid API Object\n     * @param raw_item Raw API data\n     */\n    protected process(raw_item: HashMap): T {\n        return raw_item as T;\n    }\n\n    /**\n     * Update recorded list of items\n     * @param old_list Old list of items\n     * @param list List of updated items\n     * @param compareFn Function to compare items to remove duplicates\n     */\n    public updateList(\n        old_list: T[],\n        list: T[],\n        compareFn: (a: T, b: T) => boolean = this._compare\n    ): T[] {\n        /* istanbul ignore else */\n        if (!list || list.length === 0) {\n            return old_list;\n        }\n        const new_list: T[] = [];\n        const mixed_list = [...list, ...old_list];\n        /* istanbul ignore else */\n        if (!compareFn) {\n            compareFn = this._compare;\n        }\n        for (const item of mixed_list) {\n            const found = new_list.find((i) => compareFn(i, item));\n            /* istanbul ignore else */\n            if (!found) {\n                new_list.push(item);\n            }\n        }\n        return new_list;\n    }\n\n    /**\n     * Remove the given item from the given list\n     * @param list List of items\n     * @param item Item to remove\n     * @param compareFn Function to compare items\n     */\n    protected removeItem(list: T[], item: T, compareFn?: (a: T, b: T) => boolean) {\n        const new_list = [];\n        /* istanbul ignore else */\n        if (!compareFn) {\n            compareFn = this._compare;\n        }\n        list.forEach((i) => (compareFn(item, i) ? null : new_list.push(i)));\n        return new_list;\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\n\nimport { BookingNote, BookingRecurrenceDetails } from './booking.interfaces';\nimport { CateringOrder } from '../catering/catering-order.class';\nimport { User } from '../users/user.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\nimport { humaniseDuration, unique, flatten } from '../../../shared/utilities/general.utilities';\nimport { Space } from '../spaces/space.class';\nimport { ServiceManager } from '../service-manager.class';\n\nimport * as dayjs from 'dayjs';\n\nexport class Booking extends BaseDataClass {\n    /** Unique calendar event ID */\n    public readonly icaluid: string;\n    /** Subject or title of the booking */\n    public readonly title: string;\n    /** Unix timestamp of the booking start */\n    public readonly date: number;\n    /** Length of the booking in minutes */\n    public readonly duration: number;\n    /** Description or details of the booking */\n    public readonly body: string;\n    /** Type of booking */\n    public readonly class: string;\n    /** Whether the booking has catering associated with it */\n    public readonly has_catering: boolean;\n    /** List of catering orders for the booking */\n    public readonly catering: readonly CateringOrder[];\n    /** String location set in booking */\n    public readonly location_name: string;\n    /** Whether booking's duration covers all day */\n    public readonly all_day: boolean;\n    /** Details of the recurrence */\n    public readonly recurrence: BookingRecurrenceDetails;\n    /** Mapping of emails to approval statuses */\n    public readonly approval_status: HashMap<string>;\n    /** Host/Organiser of the booking */\n    public readonly organiser: User;\n    /** List of people invited to attend the booking */\n    public readonly attendees: User[];\n    /** Author of the booking */\n    public readonly creator: User;\n    /** List of notes associated with the booking */\n    public readonly notes: readonly BookingNote[];\n    /** Mapping of spaces to equipment charge codes */\n    public readonly equipment_codes: HashMap<string>;\n    /** Mapping of spaces to expected number of attendees */\n    public readonly expected_attendees: HashMap<number>;\n    /** Setup time before the meeting in minutes */\n    public readonly setup: number;\n    /** List of checked in attendees */\n    public readonly checked_in: string[];\n    /** Breakdown time after booking in minutes */\n    public readonly breakdown: number;\n    /** List of fields edited since creation */\n    public readonly edits: string[];\n    /** List of spaces associated with the booking */\n    public readonly space_list: Space[];\n    /** List of users to be notified on visitor arrivals */\n    public readonly notify_users: readonly string[];\n    /** Whether the time or duration has changed */\n    public time_changed = false;\n    /** Map of display strings */\n    private _display: HashMap<string> = {};\n    /** Service for managing Bookings */\n    protected get _service() {\n        return ServiceManager.serviceFor(Booking);\n    }\n\n    constructor(raw_data: HashMap = {}) {\n        super(raw_data);\n        this.icaluid = raw_data.icaluid || this.id || '';\n        this.title = raw_data.title || raw_data.subject || raw_data.Subject || '';\n        const time =\n            raw_data.date || raw_data.start_epoch * 1000 || raw_data.start * 1000 || raw_data.Start;\n        const start = dayjs(time).startOf('m');\n        this.date = !time\n            ? start.minute(Math.ceil(start.minute() / 5) * 5).valueOf()\n            : start.valueOf();\n        this.duration =\n            raw_data.duration ||\n            dayjs(raw_data.end_epoch * 1000 || raw_data.end * 1000 || raw_data.End).diff(\n                start,\n                'm'\n            ) ||\n            60;\n        this.body =\n            (typeof raw_data.body === 'string' ? raw_data.body : '') || raw_data.description;\n        this.class =\n            raw_data.booking_type ||\n            raw_data.class ||\n            (raw_data.visitors ? 'external' : null) ||\n            'internal';\n        this.attendees = (raw_data.attendees || raw_data._attendees || []).map((i) => new User(i));\n        this.organiser =\n            (raw_data.organizer || raw_data.organiser\n                ? new User(raw_data.organizer || raw_data.organiser)\n                : User.active_user) || new User();\n        this.creator =\n            raw_data.booked_by || raw_data.creator\n                ? new User(raw_data.booked_by || raw_data.creator)\n                : this.organiser;\n        this.location_name = raw_data.location_name || '';\n        this.all_day = !!(raw_data.all_day || this.duration > 23 * 60);\n        this.setup = raw_data.setup || 0;\n        this.breakdown = raw_data.breakdown || 0;\n        this.recurrence = raw_data.recurrence || raw_data.recurr || {};\n        if (this.recurrence.end && this.recurrence.end < new Date().getTime()) {\n            (this as any).recurrence = {\n                ...this.recurrence,\n                start: this.recurrence.start,\n                end: this.recurrence.end,\n            };\n        }\n        this.recurrence = {\n            ...this.recurrence,\n            series_id: raw_data.seriesMasterId,\n        };\n        this.notes = raw_data.notes || [];\n        this.equipment_codes = raw_data.equipment_codes || raw_data.equipment_code || {};\n        this.expected_attendees = raw_data.expected_attendees || {};\n        this.approval_status = raw_data.approval_status || raw_data.status || {};\n        this.checked_in = raw_data.checked_in || raw_data.checkins || [];\n        this.notify_users = raw_data.notify_users || [];\n        if (raw_data.description && !this.notes.find((i) => i.type === 'description')) {\n            this.notes = [\n                ...this.notes,\n                {\n                    type: 'description',\n                    date: -1,\n                    message: raw_data.description,\n                    author: this.organiser.email,\n                },\n            ];\n        }\n        this._display = {\n            date: start.format('DD MMM YYYY'),\n            time: `${start.format('h:mma')} - ${dayjs(start)\n                .add(this.duration, 'm')\n                .format('h:mma')}`,\n            start: start.format('h:mma'),\n            end: dayjs(start).add(this.duration, 'm').format('h:mma'),\n            duration: humaniseDuration(this.duration),\n        };\n        const space_ids = unique(\n            raw_data.room_ids || raw_data.room_id || raw_data._space_list || []\n        );\n        const space_service = ServiceManager.serviceFor(Space);\n        if (space_service) {\n            this.space_list = space_ids.map((id) => {\n                return space_service.find(id) || new Space({ id, name: id, email: id });\n            });\n        } else {\n            this.space_list = space_ids.map((id) => new Space({ id, name: id, email: id }));\n        }\n        if (raw_data.show_as && raw_data.show_as === 'cancelled') {\n            this.space_list.forEach((space) => (this.approval_status[space.email] = 'declined'));\n        }\n        this.catering = (raw_data.catering instanceof Array ? raw_data.catering : []).map(\n            (i) => new CateringOrder(i)\n        );\n        this.edits =\n            raw_data.edits instanceof Array\n                ? raw_data.edits\n                : unique(flatten(Object.keys(raw_data.edits || {}).map((i) => raw_data.edits[i])));\n        this.has_catering = !!(raw_data.has_catering || (this.catering && this.catering.length));\n    }\n\n    /** Whether booking has been declined */\n    public get declined(): boolean {\n        if (this.location_name.toLowerCase().includes('decline')) {\n            return true;\n        }\n        for (const space of this.space_list) {\n            if ((this.approval_status[space.email] || '').indexOf('decline') >= 0) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /** Whether booking has been approved */\n    public get approved(): boolean {\n        for (const space of this.space_list) {\n            if (\n                this.approval_status[space.email] &&\n                (this.approval_status[space.email].indexOf('tentative') >= 0 ||\n                    this.approval_status[space.email].indexOf('decline') >= 0)\n            ) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /** Whether booking is tentative */\n    public get tentative(): boolean {\n        for (const space of this.space_list) {\n            if (\n                this.approval_status[space.email] &&\n                this.approval_status[space.email].indexOf('tentative') >= 0\n            ) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /** Whether booking contains external visitors in the attendee list */\n    public get has_visitors(): boolean {\n        return this.attendees.reduce((a, v) => a || v.external, false);\n    }\n\n    /** Status of the booking */\n    public get status(): 'future' | 'upcoming' | 'done' | 'started' | 'in_progress' {\n        const now = dayjs();\n        const date = dayjs(this.date);\n        if (now.isBefore(date.subtract(15, 'm'), 'm')) {\n            return 'future';\n        } else if (now.isBefore(date, 'm')) {\n            return 'upcoming';\n        } else if (now.isBefore(date.add(15, 'm'), 'm')) {\n            return 'started';\n        } else if (now.isBefore(date.add(this.duration, 'm'), 'm')) {\n            return 'in_progress';\n        }\n        return 'done';\n    }\n\n    /** Description of the booking purpose */\n    public get description(): string {\n        const note = (this.notes || []).find((i) => i.type === 'description');\n        return note ? note.message : '';\n    }\n\n    /** Get the first space from the space list */\n    public get space(): Space {\n        return this.space_list[0] || ({ level: { name: '<No Location>' } } as any);\n    }\n\n    /** Display value for the date */\n    public get date_string(): string {\n        return this._display.date;\n    }\n    /** Display valuie for the start and end times of the booking */\n    public get time_period(): string {\n        return this._display.time;\n    }\n    /** Display value for the start time of the booking */\n    public get start_time(): string {\n        return this._display.start;\n    }\n    /** Display value for the end time of the booking */\n    public get end_time(): string {\n        return this._display.end;\n    }\n    /** Display value for the duration of the booking */\n    public get length_string(): string {\n        return this._display.duration;\n    }\n    /** Display value for the location of the booking */\n    public get location(): string {\n        return (\n            this.space_list.map((space) => space.name).join(', ') ||\n            'No location set'\n        );\n    }\n    /** Display value for the level of the first space in the booking */\n    public get level(): string {\n        return this.space.level.name;\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): Booking {\n        return new Booking(this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): Booking {\n        return new Booking({\n            ...this.toJSON(),\n            id: null,\n            email: null,\n            icaluid: null,\n        });\n    }\n\n    /**\n     * Convert object into plain object\n     */\n    public toJSON(this: Booking): HashMap {\n        const data = super.toJSON();\n        const date = dayjs(data.date);\n        data.start = data.all_day ? date.startOf('d').unix() : date.unix();\n        data.end = date.add(data.duration || 60, 'm').unix();\n        data.auto_approve = data.space_list.map((space) => {\n            return !this.id || this.time_changed || !this.approval_status[space.email]\n                ? !space ||\n                      (space instanceof Space &&\n                          !space.byRequest({\n                              date: data.date,\n                              duration: data.duration,\n                              host: data.organiser,\n                          }))\n                : (this.approval_status[space.email] || '').indexOf('tentative') < 0;\n        });\n        if (data.body && !data.notes.find((note) => note.message === data.body)) {\n            data.notes = data.notes.filter((note) => note.type !== 'description');\n            data.notes.push({\n                type: 'description',\n                message: data.body,\n                author: this.creator.email,\n                date: dayjs().valueOf(),\n            } as BookingNote);\n            data.notes.sort((a, b) => b.date - a.date);\n        }\n        data.organiser = data.organiser.toJSON();\n        data.creator = data.creator.toJSON();\n        data.attendees = unique(\n            [data.organiser].concat(data.attendees.map((i) => i.toJSON())),\n            'email'\n        );\n        data.notify_users = [data.organiser.email];\n        data.room_ids = data.space_list.map((space) => space.email);\n        data.catering = data.catering.filter((order) => data.room_ids.includes(order.location_id));\n        data.old_date = this.date;\n        if (data.id) {\n            data.from_room = this.space ? this.space.email : '';\n        }\n        data.description = data.body;\n        data.recurr = data.recurrence;\n        data.booking_type = data.class || data.booking_type;\n        if (data.all_day) {\n            data.all_day = date.format('YYYY-MM-DD');\n        }\n        delete data.class;\n        delete data.body;\n        delete data.type;\n        delete data.recurrence;\n        delete data.space_list;\n        delete data.date;\n        delete data.duration;\n        delete data.display;\n        delete data.email;\n        delete data.name;\n        return data;\n    }\n}\n","import { FormGroup, FormControl, Validators, AbstractControl } from '@angular/forms';\nimport { Subscription } from 'rxjs';\n\nimport {\n    padZero,\n    humaniseDuration,\n    timeFormatString,\n} from '../../../shared/utilities/general.utilities';\n\nimport { generateMockUser } from '../users/user.utilities';\nimport { Booking } from './booking.class';\nimport { User } from '../users/user.class';\nimport { Space } from '../spaces/space.class';\nimport { CateringOrder } from '../catering/catering-order.class';\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { AvailableBookingFields } from 'src/app/shared/utilities/settings.interfaces';\nimport { BookingRule, SpaceCheckOptions, SpaceRules, SpaceRuleOptions } from './booking.interfaces';\nimport { validateEndTime } from 'src/app/shared/utilities/validation.utilities';\n\nimport * as faker from 'faker';\nimport * as dayjs from 'dayjs';\nimport { ServiceManager } from '../service-manager.class';\n\nconst MINUTE = 1;\nconst HOUR = 60;\nconst DAY = 24 * HOUR;\nconst WEEK = 7 * DAY;\nconst MONTH = 30 * DAY;\n\nconst DURATION_MAP: { [duration: string]: number } = {\n    month: MONTH,\n    months: MONTH,\n    week: WEEK,\n    weeks: WEEK,\n    day: DAY,\n    days: DAY,\n    hour: HOUR,\n    hours: HOUR,\n    minute: MINUTE,\n    minutes: MINUTE,\n};\n\nlet BOOKING_COUNT = 0;\nlet BOOKING_DATE = dayjs().hour(6).minute(0).subtract(1, 'd').startOf('m');\n\n/**\n * Set the initial time used for generating mock bookings\n * @param time New initial time as ms from UTC epoch\n */\nexport function setMockBookingStartDatetime(time: number) {\n    BOOKING_DATE = dayjs(time).startOf('m');\n}\n\n/**\n * Create mock raw API data for a booking\n * @param override Overrides the properties of the generated booking with it's own\n */\nexport function generateMockBooking(override: HashMap = {}) {\n    const id = `booking-${BOOKING_COUNT++}`;\n    BOOKING_DATE = BOOKING_DATE.add(30, 'm');\n    const start = BOOKING_DATE.valueOf();\n    const duration = ((BOOKING_COUNT % 4) + 2) * 15;\n    BOOKING_DATE = BOOKING_DATE.add(60, 'm');\n    return {\n        id,\n        icaluid: padZero(Math.floor(Math.random() * 99999999), 8),\n        title: `${faker.commerce.productName()} Meeting`,\n        attendees: Array(Math.floor(Math.random() * 5 + 2))\n            .fill(0)\n            .map((i) => generateMockUser()),\n        organiser: generateMockUser(),\n        start_epoch: dayjs(start).unix(),\n        end_epoch: dayjs(start).add(duration, 'm').unix(),\n        description: faker.lorem.paragraph(),\n        notes: [{ type: 'other', message: faker.lorem.paragraph() }],\n        location: faker.address.city(),\n        has_catering: Math.floor(Math.random() * 34567) % 3 === 0,\n        catering: [],\n        room_ids: [],\n        ...override,\n    };\n}\n\nexport interface IBookingSlot {\n    start: number;\n    end: number;\n}\n\n/**\n * Generate a list of free time slots between the given bookings\n * @param list List of bookings to find slots between\n * @param min_size Minimum length of a free slot in minutes\n */\nexport function getFreeBookingSlots(list: Booking[], min_size: number = 30): IBookingSlot[] {\n    /* istanbul ignore else */\n    if (!list) {\n        return [\n            {\n                start: 0,\n                end: dayjs().startOf('m').valueOf() * 10,\n            },\n        ];\n    }\n    const slots: IBookingSlot[] = [];\n    let start = dayjs(0);\n    list.sort((a, b) => a.date - b.date);\n    for (const booking of list) {\n        const bkn_start = dayjs(booking.date);\n        const bkn_end = bkn_start.add(booking.duration, 'm');\n        if (bkn_start.isAfter(start)) {\n            const diff = Math.abs(bkn_start.diff(start, 'm'));\n            /* istanbul ignore else */\n            if (diff >= min_size) {\n                slots.push({ start: start.valueOf(), end: bkn_start.valueOf() });\n            }\n            start = bkn_end;\n        } else if (start.startOf('m').valueOf() === bkn_start.startOf('m').valueOf()) {\n            start = bkn_end;\n        }\n    }\n    slots.push({\n        start: start.valueOf(),\n        end: dayjs().startOf('m').valueOf() * 10,\n    });\n    return slots;\n}\n\n/**\n * Get the next free time slot from the given bookings\n * @param list List of bookings to find the next slot\n * @param date Date to find next slot after in ms since UTC epoch\n * @param min_size Minimum length of the free slot in minutes\n */\nexport function getNextFreeBookingSlot(\n    list: Booking[],\n    date: number = dayjs().valueOf(),\n    min_size: number = 30\n): IBookingSlot {\n    const slots = getFreeBookingSlots(list, min_size);\n    const time = dayjs(date).startOf('m').second(1);\n    for (const block of slots) {\n        const start = dayjs(block.start).startOf('m');\n        const end = dayjs(block.end).startOf('m');\n        if (start.isAfter(time, 's')) {\n            return block;\n        } else if (time.isBefore(end, 's')) {\n            const duration = end.diff(time, 'm');\n            /* istanbul ignore else */\n            if (duration >= min_size) {\n                return block;\n            }\n        }\n    }\n    return slots[slots.length - 1];\n}\n\n/**\n * Generate form fields for the given booking\n * @param booking Booking to generate form for\n * @param current_user Current user of the system to default as the host\n */\nexport function generateBookingForm(\n    booking: Booking,\n    use_fields: AvailableBookingFields[]\n): FormGroup {\n    if (!booking) {\n        throw Error('No booking passed');\n    }\n    const user_service = ServiceManager.serviceFor(User);\n    const current_user =\n        user_service.current ||\n        new User({ id: 'local-user', name: 'Local User', email: 'local@place.tech' });\n    const fields: HashMap<FormControl> = {\n        id: new FormControl(booking.id || ''),\n        space_list: new FormControl(booking.space_list, []),\n        date: new FormControl(booking.date, [Validators.required]),\n        duration: new FormControl(booking.duration),\n        organiser: new FormControl(booking.organiser || current_user, [Validators.required]),\n        attendees: new FormControl(booking.attendees, []),\n        title: new FormControl(booking.title || '', [Validators.required]),\n        booking_type: new FormControl(booking.class),\n        body: new FormControl(booking.body),\n        notes: new FormControl(booking.notes),\n        equipment_codes: new FormControl(booking.equipment_codes),\n        expected_attendees: new FormControl(booking.expected_attendees),\n        catering: new FormControl(\n            booking.catering.map(\n                (order) => new CateringOrder({ ...order, booking_date: booking.date })\n            )\n        ),\n        recurrence: new FormControl(booking.recurrence),\n        all_day: new FormControl(!!booking.all_day),\n        has_catering: new FormControl(!!booking.has_catering),\n        needs_space: new FormControl(true),\n    };\n    fields.duration.setValidators([Validators.required, validateEndTime(fields.date)]);\n    /* istanbul ignore else */\n    if (booking.id) {\n        fields.organiser.disable();\n        /* istanbul ignore else */\n        if (dayjs(booking.date).isBefore(dayjs(), 'm')) {\n            fields.date.disable();\n        }\n    } else {\n        fields.date.setValidators([Validators.required, isFuture]);\n        fields.date.updateValueAndValidity();\n    }\n    let list_length = -1;\n    fields.space_list.valueChanges.subscribe((list) => {\n        if (list && list.length > list_length && list_length === 0) {\n            const expected = fields.expected_attendees.value || {};\n            const codes = fields.equipment_codes.value || {};\n            if (Object.keys(expected).length >= 0 || Object.keys(codes).length >= 0) {\n                const key = Object.keys(expected)[0] || Object.keys(codes)[0];\n                const new_expected = {};\n                const new_codes = {};\n                const notes = fields.notes.value;\n                notes.forEach((note) => (note.space === key ? (note.space = list[0].email) : ''));\n                new_expected[list[0].email] = expected[key];\n                new_codes[list[0].email] = codes[key];\n                fields.expected_attendees.setValue(new_expected);\n                fields.equipment_codes.setValue(new_codes);\n            }\n        }\n        list_length = list.length;\n    });\n    fields.date.valueChanges.subscribe((_) => {\n        fields.duration.updateValueAndValidity();\n    });\n    const simplified_fields: HashMap<FormControl> = [\n        'id',\n        'space_list',\n        'space_ids',\n        'notes',\n        'booking_type',\n        'equipment_codes',\n        'expected_attendees',\n        ...use_fields,\n    ].reduce((map, key) => {\n        /* istanbul ignore else */\n        if (fields[key]) {\n            map[key] = fields[key];\n        }\n        return map;\n    }, {});\n    if (simplified_fields.all_day) {\n        simplified_fields.all_day.valueChanges.subscribe((value) => {\n            if (value) {\n                simplified_fields.date.setValidators([Validators.required]);\n                simplified_fields.date.updateValueAndValidity();\n                simplified_fields.duration.disable();\n            } else {\n                simplified_fields.date.setValidators([Validators.required, isFuture]);\n                simplified_fields.date.updateValueAndValidity();\n                simplified_fields.duration.enable();\n            }\n        });\n    }\n    // Generate form group for booking item\n    const form = new FormGroup(simplified_fields);\n    return form;\n}\n/**\n * Validate whether date is in the future\n * @param control Control to check value\n */\nexport function isFuture(control: AbstractControl) {\n    const now = dayjs().startOf('m');\n    const date = dayjs(control.value);\n    return date.isBefore(now.subtract(5, 'm'), 's')\n        ? { date: 'Date needs to be in the future' }\n        : null;\n}\n\n/**\n * Get booking rules for the given user and space\n * @param user User to determine applicable rules\n * @param space Space to get rules for\n * @param time Booking start time in ms since UTC epoch\n * @param rules List of booking rules for the building\n */\nexport function rulesForSpace(options: SpaceRuleOptions): SpaceRules {\n    if (!options) {\n        throw Error('Options are needed to check for rule matches');\n    }\n    const space_rules_for_user: SpaceRules = {\n        auto_approve: true,\n        hide: true,\n    };\n    let match = false;\n    /* istanbul ignore else */\n    if (options.space) {\n        for (const type in options.rules) {\n            if (\n                options.rules.hasOwnProperty(type) &&\n                options.rules[type] instanceof Array &&\n                options.space.zones.find((zone) => zone === type)\n            ) {\n                for (const rule_block of options.rules[type]) {\n                    /* istanbul ignore else */\n                    if (\n                        checkRules({\n                            user: options.user,\n                            space: options.space,\n                            time: options.time,\n                            recurr_end: options.recurr_end,\n                            duration: options.duration,\n                            rules: rule_block.conditions,\n                        })\n                    ) {\n                        const ruleset = rule_block.rules;\n                        const conditions = rule_block.conditions;\n                        space_rules_for_user.hide = false;\n                        /* istanbul ignore else */\n                        if (conditions.max_length) {\n                            space_rules_for_user.max_length = stringToMinutes(\n                                conditions.max_length as string\n                            );\n                        }\n                        /* istanbul ignore else */\n                        if (conditions.min_length) {\n                            space_rules_for_user.min_length = stringToMinutes(\n                                conditions.min_length as string\n                            );\n                        }\n                        // NOTE: use max_length in conditions instead of book_length in rules\n                        // if (ruleset.book_length) {\n                        //     space_rules_for_user.max_length = stringToMinutes(ruleset.book_length as string);\n                        // }\n                        /* istanbul ignore else */\n                        if (ruleset.auto_approve !== undefined) {\n                            space_rules_for_user.auto_approve = ruleset.auto_approve;\n                        }\n                        match = true;\n                        break;\n                    }\n                }\n            }\n            /* istanbul ignore else */\n            if (!space_rules_for_user.hide) {\n                break;\n            }\n        }\n    }\n    if (!match) {\n        space_rules_for_user.hide = true;\n    }\n    return space_rules_for_user;\n}\n\n/**\n * Check if user matches the given ruleset\n * @param user User to determine applicable rules\n * @param space Space to get rules for\n * @param time Booking start time in ms since UTC epoch\n * @param rules List of booking rules for the building\n */\nfunction checkRules(options: SpaceCheckOptions): boolean {\n    /* istanbul ignore else */\n    if (options.rules) {\n        const time = dayjs(options.time);\n        const recurr = options.recurr_end ? dayjs(options.recurr_end) : dayjs();\n        const count = Object.keys(options.rules).length;\n        let matches = 0;\n        for (const key of Object.keys(options.rules)) {\n            let counter = 0;\n            const condition: string[] =\n                options.rules[key] instanceof Array\n                    ? (options.rules[key] as [])\n                    : [options.rules[key] as string];\n            switch (key) {\n                case 'groups':\n                    /* istanbul ignore else */\n                    if (options.user && options.user.groups) {\n                        counter = 0;\n                        condition.forEach((i) =>\n                            options.user.groups.find((j) => j === i) ? counter++ : null\n                        );\n                        /* istanbul ignore else */\n                        if (counter > 0) {\n                            matches++;\n                        }\n                    }\n                    break;\n                case 'locations':\n                    /* istanbul ignore else */\n                    if (options.user && options.user.location) {\n                        counter = 0;\n                        condition.forEach((i) =>\n                            (options.user.last_location.name || '').indexOf(i) >= 0\n                                ? counter++\n                                : null\n                        );\n                        /* istanbul ignore else */\n                        if (counter >= options.rules[key].length) {\n                            matches++;\n                        }\n                    }\n                    break;\n                case 'is_before':\n                    /* istanbul ignore else */\n                    if (options.time) {\n                        const duration = stringToMinutes(condition[0]);\n                        const check = dayjs().add(duration, 'm');\n                        let match = time.isBefore(check, 'm');\n                        /* istanbul ignore else */\n                        if (recurr) {\n                            match = match && recurr.isBefore(check, 'm');\n                        }\n                        matches += match ? 1 : 0;\n                    }\n                    break;\n                case 'is_after':\n                    /* istanbul ignore else */\n                    if (options.time) {\n                        const duration = stringToMinutes(condition[0]);\n                        const check = dayjs().add(duration, 'm');\n                        time.isAfter(check, 'm') ? matches++ : '';\n                    }\n                    break;\n                case 'min_length':\n                    /* istanbul ignore else */\n                    if (options.duration) {\n                        durationGreaterThanOrEqual(options.duration, condition[0]) ? matches++ : '';\n                    }\n                    break;\n                case 'max_length':\n                    /* istanbul ignore else */\n                    if (options.duration) {\n                        durationGreaterThanOrEqual(condition[0], options.duration) ? matches++ : '';\n                    }\n                    break;\n            }\n        }\n        return matches >= count;\n    }\n    return false;\n}\n\n/**\n * Get minimum duration from ruleset in minutes\n * Default to 5min\n */\nexport function getMinLength(rule_list: HashMap<BookingRule[]>): number {\n    return Object.values(rule_list).reduce((min, block) => {\n        const min_block = block.reduce((min_length, el) => {\n            if (el.conditions.min_length && stringToMinutes(el.conditions.min_length) > min) {\n                return stringToMinutes(el.conditions.min_length);\n            } else {\n                return min_length;\n            }\n        }, 5);\n        if (min_block > min) {\n            return min_block;\n        } else {\n            return min;\n        }\n    }, 5) as number;\n}\n\n/**\n * Whether the first input is greater than the last. Converts duration strings into minutes\n * @param duration_1 First input can be a number in minutes or a duration string e.g. `1 hour`\n * @param duration_2 Second input can be a number in minutes or a duration string e.g. `30 minutes`\n */\nexport function durationGreaterThanOrEqual(\n    duration_1: string | number,\n    duration_2: string | number\n) {\n    const first: number = typeof duration_1 === 'string' ? stringToMinutes(duration_1) : duration_1;\n    const second: number =\n        typeof duration_2 === 'string' ? stringToMinutes(duration_2) : duration_2;\n    return first >= second;\n}\n\n/**\n * Conver time string into minutes\n * @param str timestring e.g. `'1 day'`, `'15 minutes'`, `'2 weeks'`\n */\nexport function stringToMinutes(str: string): number {\n    const parts = str.split(' ');\n    return +parts[0] * DURATION_MAP[parts[1]];\n}\n\n/**\n * Get current status within bookings\n * @param bookings List of bookings\n * @param host Host of the new event\n * @param date Datetime of the new event\n */\nexport function statusFromBookings(\n    bookings: Booking[] = [],\n    bookable: boolean = true,\n    requestable: boolean = false,\n    date: number = dayjs().valueOf()\n) {\n    const free_slots = getFreeBookingSlots(bookings.filter(bkn => !bkn.declined));\n    const now = dayjs(date);\n    const next_free_slot = free_slots.find((slot) => {\n        const start = dayjs(slot.start);\n        const end = dayjs(slot.end);\n        return start.isAfter(now) || (now.isAfter(start, 's') && now.isBefore(end, 'm'));\n    });\n    const start = dayjs(next_free_slot.start);\n    const end = dayjs(next_free_slot.end);\n    const currently_free = now.isAfter(start, 's') && now.isBefore(end, 'm');\n    const time_until_next_block = humaniseDuration(\n        currently_free ? end.diff(now, 'm') : start.diff(now, 'm'),\n        true\n    );\n    const free_tomorrow = !currently_free && !start.isSame(now, 'd');\n    const free_today = currently_free && !end.isSame(now, 'd');\n    return {\n        status: !bookable\n            ? 'Not Bookable'\n            : currently_free\n                ? requestable\n                    ? 'Available by Request'\n                    : 'Available'\n                : 'Meeting in Progress',\n        available_until: free_today\n            ? 'No meetings today'\n            : currently_free\n                ? `Free until ${end.format(timeFormatString())}(${time_until_next_block})`\n                : free_tomorrow\n                    ? 'Unavailable today'\n                    : `Free at ${start.format(timeFormatString())}(${time_until_next_block})`,\n    };\n}\n\nexport function timePeriodsIntersect(start1: number, end1: number, start2: number, end2: number) {\n    const day1 = dayjs(start1);\n    const end_time1 = dayjs(end1);\n    const day2 = dayjs(start2);\n    const end_time2 = dayjs(end2);\n    return (day1.isAfter(day2, 'm') && day1.isBefore(end_time2)) || (end_time1.isAfter(day2, 'm') && end_time1.isBefore(end_time2)) ||\n    (day2.isAfter(day1, 'm') && day2.isBefore(end_time1)) || (end_time2.isAfter(day1, 'm') && end_time2.isBefore(end_time1))\n}\n","\nimport { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\n\nimport { BaseAPIService } from '../base.service';\nimport { Booking } from './booking.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\nimport { ServiceManager } from '../service-manager.class';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class BookingsService extends BaseAPIService<Booking> {\n    constructor(protected _composer: ComposerService) {\n        super(_composer);\n        ServiceManager.setService(Booking, this);\n        this._name = 'Bookings';\n        this._api_route = 'bookings';\n        this._compare = (a, b) => !(a.id || '').localeCompare(b.id) || !(a.icaluid || '').localeCompare(b.icaluid);\n    }\n\n    /**\n     * Save changes to the booking\n     * @param booking Booking update or add to the database\n     */\n    public save(booking: Booking): Promise<Booking> {\n        return booking.id ? this.update(booking.id, booking.toJSON()) : this.add(booking.toJSON());\n    }\n\n    public accept(id: string, fields?: HashMap) {\n        return this.task(id, 'accept', fields);\n    }\n\n    public decline(id: string, fields?: HashMap) {\n        return this.task(id, 'concierge_decline', fields);\n    }\n\n    protected process(raw_data: HashMap): Booking {\n        return new Booking(raw_data);\n    }\n}\n","import { CateringItem } from \"./catering-item.class\";\nimport { HashMap } from \"../../../shared/utilities/types.utilities\";\n\nexport class CateringCategory extends CateringItem {\n    /** List of items associated with the category */\n    public readonly items: readonly CateringItem[];\n    /** Whether child items are part of a package */\n    public readonly package: boolean;\n    /** List of zone ids associated with the category */\n    public readonly zones: readonly string[];\n\n    public get can_order_anytime(): boolean {\n        return (\n            this.order_anytime ||\n            this.items.reduce(\n                (anytime, item) => anytime || item.can_order_anytime,\n                false\n            )\n        );\n    }\n\n    constructor(data: HashMap) {\n        super(data);\n        this.items = (data.items || []).map(item =>\n            item.items ? new CateringCategory(item) : new CateringItem(item)\n        );\n        this.package = data.package === 'true' || data.package === true;\n        this.zones = data.zones && data.zones.length ? [ ...data.zones ] : [];\n        (this as any).must_select = this.must_select || this.items.length;\n        (this as any).order_anytime = !!data.order_anytime && this.package;\n    }\n\n    /**\n     * Convert class object into plain object\n     */\n    public toJSON(this: CateringItem): HashMap {\n        const obj = super.toJSON();\n        obj.items = obj.items.map((item: CateringItem) => item.toJSON());\n        obj.order_anytime = !!obj.order_anytime && obj.package;\n        return obj;\n    }\n}\n","import { HashMap } from \"../../../shared/utilities/types.utilities\";\n\nexport interface CateringAvailability {\n    /** Month of the year that the item starts being available */\n    readonly from_month: number;\n    /** Month of the year that the item ends being available */\n    readonly to_month: number;\n}\n\nexport class CateringItem {\n    /** Unique ID of the catering item */\n    public readonly id: string;\n    /** Display name of the catering item */\n    public readonly name: string;\n    /** Description of the item */\n    public readonly description: string;\n    /** URL to the image associated with the item */\n    public readonly image_path: string;\n    /** Type of catering item */\n    public readonly catering_type: string;\n    /** Availability of the item */\n    public readonly available: CateringAvailability;\n    /** Time in hours that is needed to prepare the item beforehand */\n    public readonly prior_notice: number;\n    /** Cost of the item without decimals */\n    public readonly unit_price: number;\n    /** Cost of the item without decimals */\n    public readonly supplier_cost: number;\n    /** Minimum number this item allowed in an order */\n    public readonly minimum_quantity: number;\n    /** Maximum number this item allowed in an order */\n    public readonly maximum_quantity: number;\n    /** List of categories that the item is contained in */\n    public readonly parent_categories: readonly string[];\n    /** Allegen information associated with the item */\n    public readonly allergy: string;\n    /** Whether the supply of this item has run out */\n    public readonly out_of_stock: boolean;\n    /** Whether item can be ordered within the time limit set by the building */\n    public readonly order_anytime: boolean;\n    /** Number of child items that must be selected as part of the package */\n    public readonly must_select: number;\n    /** Number of this item in the assoicated order */\n    private _amount = 0;\n    /** Unique ID of the catering item */\n    private instance_id: string;\n\n\n    public get can_order_anytime(): boolean {\n        return this.order_anytime;\n    }\n\n    /** Number of this item in the assoicated order */\n    public get amount(): number {\n        return this._amount || 0;\n    }\n\n    /** Total cost of the amount of items set */\n    public get total(): number {\n        return (this._amount * this.unit_price) || 0;\n    }\n\n    constructor(data: HashMap) {\n        this.instance_id = `item-${Math.floor(Math.random() * 999_999_999)}`\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.available = {\n            from_month: (data.available ? data.available.from_month : data.available_from) || -1,\n            to_month: (data.available ? data.available.to_month : data.available_to) || -1,\n        };\n        this.description = data.description || '';\n        this.prior_notice = data.prior_notice || data.notice;\n        this.unit_price = data.unit_price || data.price || 0;\n        this.supplier_cost = data.supplier_cost;\n        this.minimum_quantity = Math.max(0, data.minimum_quantity || 0);\n        this.maximum_quantity = Math.max(1, data.maximum_quantity || 999);\n        this.parent_categories = data.category_ids || data.parent_categories || data.categories;\n        this.order_anytime = !!data.order_anytime;\n        this.image_path = data.image_path || '';\n        this.catering_type = data.catering_type;\n        this.must_select = data.must_select || 0;\n        this.out_of_stock = !!data.out_of_stock || data.hide;\n        this._amount = data._amount || data.amount || 0;\n        this.allergy = data.allergy;\n    }\n\n    public setAmount(amount: number = 0): void {\n        if (amount <= this._amount) {\n            if (amount < this.minimum_quantity) {\n                amount = 0;\n            }\n        } else {\n            if (amount < this.minimum_quantity) {\n                amount = this.minimum_quantity;\n            }\n        }\n        this._amount = Math.max(0, Math.min(this.maximum_quantity, amount));\n    }\n\n    /**\n     * Increase amount of the item the order\n     * @param amount Amount to increase by\n     */\n    public addToOrder(amount: number = 1) {\n        amount = Math.max(1, amount);\n        this._amount += amount;\n        if (this._amount < 0) {\n            this._amount = 0;\n        } else if (this._amount < this.minimum_quantity) {\n            this._amount = this.minimum_quantity;\n        } else if (this._amount > this.maximum_quantity) {\n            this._amount = this.maximum_quantity;\n        }\n    }\n\n    /**\n     * Decrease amount of the item the order\n     * @param amount Amount to decrease by\n     */\n    public removeFromOrder(amount: number = 1) {\n        amount = Math.max(1, amount);\n        this._amount -= amount;\n        if (this._amount < 0) {\n            this._amount = 0;\n        } else if (this._amount < this.minimum_quantity) {\n            this._amount = 0;\n        }\n    }\n\n    /**\n     * Convert class object into plain object\n     */\n    public toJSON(this: CateringItem): HashMap {\n        const obj: any = { ...this };\n        // Remove local private members\n        delete obj._changes;\n        delete obj._server_names;\n        // Convert remaining members to be public\n        obj.price = obj.unit_price;\n        obj.hide = obj.out_of_stock;\n        obj.categories = obj.parent_categories;\n        const keys = Object.keys(obj);\n        for (const key of keys) {\n            if (key[0] === '_') {\n                const new_key = key.substr(1);\n                obj[new_key] = obj[key];\n                delete obj[key];\n            } else if (obj[key] === undefined) {\n                delete obj[key];\n            }\n        }\n        return obj;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringCategory } from './catering-category.class';\nimport { BaseAPIService } from '../base.service';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CateringMenuService extends BaseAPIService<CateringItem | CateringCategory> {\n    constructor(protected _composer: ComposerService) {\n        super(_composer);\n        this._name = 'Catering Menu';\n        this._api_route = 'menu';\n    }\n\n    /**\n     * Convert user data to local format\n     * @param user User data\n     */\n    protected processItem(item: HashMap) {\n        return item.items ? new CateringCategory(item) : new CateringItem(item);\n    }\n}\n","import { CateringItem } from './catering-item.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\n\nimport { CateringCategory } from './catering-category.class';\nimport { Booking } from '../bookings/booking.class';\n\nimport * as dayjs from 'dayjs';\n\nexport type CateringOrderMutableProperties =\n    | 'items'\n    | 'location_id'\n    | 'location'\n    | 'delivery_time'\n    | 'charge_code'\n    | 'notes'\n    | 'status';\n\nexport type CateringOrderStatus = 'accepted' | 'preparing' | 'ready' | 'delivered' | 'cancelled';\n\nexport class CateringOrder {\n    /** Booking associated with the order */\n    public booking: Booking;\n    /** Whether the order status change is loading */\n    public loading: boolean;\n    /** Unique ID for the catering order */\n    readonly id: string;\n    /** Unique ID for the catering order */\n    readonly booking_id: string;\n    /** Number of minutes after the start of the associated meeting to delivery the order */\n    readonly booking_date: number = dayjs()\n        .startOf('m')\n        .valueOf();\n    /** Number of minutes after the start of the associated meeting to delivery the order */\n    readonly delivery_time: number = 0;\n    /** ID of the location to deliver the items to */\n    readonly location_id: string = '';\n    /** Display text for the location to deliver the items to */\n    readonly location: string = '';\n    /** Status of the catering order */\n    readonly status: CateringOrderStatus;\n    /** Whether items in the order need to be prepared in the kitchen */\n    readonly kitchen: boolean;\n    /** Whether items in the order are in the pantry */\n    readonly pantry: boolean;\n    /** List of items */\n    readonly items: readonly (CateringItem | CateringCategory)[] = [];\n    /** Creation time of the order */\n    readonly created_at: number;\n    /** Charge code associated with the order */\n    readonly charge_code: string;\n    /** Notes associated with the order */\n    readonly notes: string;\n    /** Mapping of properties to their changes */\n    private _changes: HashMap = {};\n    /** Map of local property names to server ones */\n    protected _server_names: HashMap<string> = {};\n    /** Currency code for the location of the order */\n    public symbol: string;\n    /** Whether the is an error with the order */\n    public error: boolean;\n\n    constructor(data: HashMap) {\n        this.id = data.id || `order-${Math.floor(Math.random() * 999_999_999)}`;\n        this.booking = data.booking;\n        this.delivery_time = typeof data.delivery_time === 'number' ? data.delivery_time : 0;\n        this.booking_date = data.booking_date;\n        this.location_id = data.location_id || data.location || (data.space ? data.space.id : '') || '';\n        this.location = data.location || (data.space ? data.space.name : '') || '';\n        this.status = data.status || 'accepted';\n        this.charge_code = data.charge_code || data.code;\n        this.notes = data.notes;\n        this.kitchen = data.kitchen instanceof Array ? !!data.kitchen.length : data.kitchen;\n        this.pantry = data.pantry instanceof Array ? !!data.pantry.length : data.pantry;\n        this.symbol = data.symbol || 'USD';\n        this.items = (data.items || [])\n            .map(item => (item.items ? new CateringCategory(item) : new CateringItem(item)))\n            .filter(item => !!item.amount);\n    }\n\n    /** Mapping of properties to their changes */\n    public get changes(): HashMap<any> {\n        return { ...this._changes } || {};\n    }\n\n    /** Display string for the types of items in the order */\n    public get type(): string {\n        let type = '';\n        /* istanbul ignore else */\n        if (this.kitchen) type += 'Kitchen';\n        /* istanbul ignore else */\n        if (this.pantry) {\n            /* istanbul ignore else */\n            if (type) type += ' + ';\n            type += 'Pantry';\n        }\n        return type;\n    }\n\n    /** Total cost of the order */\n    public get total(): number {\n        return this.items.reduce((total, item) => total + (item.total || 0), 0);\n    }\n\n    /** Total number of items in the order */\n    public get item_count(): number {\n        return this.items.reduce((total, item) => total + (item.amount || 0), 0);\n    }\n\n    /** Display string for the delivery time of the order */\n    public get deliver_at_time(): string {\n        const date = this.booking ? this.booking.date : this.booking_date;\n        return dayjs(date)\n            .add(this.delivery_time, 'm')\n            .format('h:mm A');\n    }\n\n    /** Display string for the delivery date of the order */\n    public get deliver_on_date(): string {\n        const date = this.booking ? this.booking.date : this.booking_date;\n        return dayjs(date)\n            .add(this.delivery_time, 'm')\n            .format('DD MMM YYYY');\n    }\n\n    /** Whether there are any pending changes to be saved */\n    public get has_changes(): boolean {\n        return !!Object.keys(this._changes).length;\n    }\n\n    /**\n     * Store pending changes for the given property\n     * @param name Property to update value\n     * @param value New value to save for property\n     */\n    public storePendingChanges(name: CateringOrderMutableProperties, value: any): void {\n        this._changes[name] = value;\n    }\n\n    /** Clear any changes waiting to be saved */\n    public clearPendingChanges() {\n        delete this._changes;\n        this._changes = {};\n    }\n\n    /**\n     * Convert class object into plain object\n     */\n    public toJSON(this: CateringOrder, with_changes: boolean = true): HashMap {\n        const obj: any = { ...this };\n        // Remove local private members\n        delete obj._changes;\n        delete obj._server_names;\n        // Remove local public members\n        delete obj.booking;\n        delete obj.loading;\n\n        // Convert remaining members to be public\n        const keys = Object.keys(obj);\n        for (const key of keys) {\n            if (key[0] === '_') {\n                const new_key = this._server_names[key.substr(1)] || key.substr(1);\n                obj[new_key] = obj[key];\n                delete obj[key];\n            } else if (obj[key] === undefined) {\n                delete obj[key];\n            }\n        }\n        obj.items = obj.items.map((item: CateringItem) => item.toJSON());\n        return with_changes ? { ...obj, ...this._changes } : obj;\n    }\n}\n","import { HashMap } from 'src/app/shared/utilities/types.utilities';\n\nimport { BuildingLevel } from '../organisation/level.class';\nimport { Organisation } from '../organisation/organisation.class';\nimport { ServiceManager } from '../service-manager.class';\n\nexport class MapLocation {\n    /** ID of the element on the associated map */\n    public readonly id?: string;\n    /** Name of the location */\n    public readonly name?: string;\n    /** X coordinate of the location */\n    public readonly x?: number;\n    /** Y coordinate of the location */\n    public readonly y?: number;\n    /** Level details for the location */\n    public readonly level: BuildingLevel;\n    /** Whether the position is fixed */\n    public readonly fixed: boolean;\n    /** Accuracy of the location when not fixed */\n    public readonly confidence?: number;\n    /** Whether location is at a desk */\n    public readonly at_desk?: boolean;\n    /** Whether location is set */\n    public readonly empty: boolean;\n    /** Service for managing buildings */\n    protected get _service() {\n        return ServiceManager.serviceFor(MapLocation);\n    }\n\n    /** Display string for the building and level of the location */\n    public get display(): string {\n        const service = ServiceManager.serviceFor(Organisation);\n        if (!service) {\n            return this.level.name;\n        }\n        const bld = service.buildings.find((bld) => bld.id === this.level.building_id);\n        return bld ? `${bld.name}, ${this.level.name}` : this.level.name;\n    }\n\n    /** Whether location is in a different building from the active one */\n    public get in_another_building(): boolean {\n        const service = ServiceManager.serviceFor(Organisation);\n        return service && service.building.id !== this.level.building_id;\n    }\n\n    constructor(raw_data: HashMap) {\n        this.id = raw_data.id || raw_data.map_id || raw_data.desk_id;\n        this.name = raw_data.name || '';\n        this.x = raw_data.x\n            ? Math.floor(this.normalise(raw_data.x, raw_data.x_max || 10000) * 10000)\n            : null;\n        this.y = raw_data.y\n            ? Math.floor(this.normalise(raw_data.y, raw_data.x_max || 10000) * 10000)\n            : null;\n        const service = ServiceManager.serviceFor(Organisation);\n        this.level =\n            raw_data.level instanceof BuildingLevel\n                ? raw_data.level\n                : service\n                ? service.levelWithID(raw_data.level)\n                : new BuildingLevel(raw_data.level);\n        this.fixed = this.x === null && this.y === null;\n        this.confidence = Math.max(5, Math.min(15, raw_data.confidence || 0));\n        this.at_desk = this.id && this.id.indexOf('area-') === 0;\n        this.empty = !(this.name && this.level && (this.id || this.x || this.y));\n    }\n\n    /** Normalise the given value within the max */\n    private normalise(value: number, max: number): number {\n        return value / (max * 1.0);\n    }\n}\n","import { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { randomInt } from 'src/app/shared/utilities/general.utilities';\n\nexport function generateMockLocation(overrides: HashMap, fixed_locations: string[], maps: string[]): HashMap {\n    const fixed = randomInt(999_999_999) % 2 === 0;\n    if (fixed && (!overrides || overrides.fixed)) {\n        return {\n            map_id: fixed_locations[randomInt(fixed_locations.length)],\n            level: maps[randomInt(maps.length)],\n            ...overrides\n        }\n    } else {\n        return {\n            x: randomInt(900, 100),\n            x_max: 1000,\n            y: randomInt(500, 100),\n            level: maps[randomInt(maps.length)],\n            confidence: randomInt(30),\n            ...overrides\n        }\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport { HashMap, Identity } from '../../../shared/utilities/types.utilities';\nimport { getItemWithKeys } from '../../../shared/utilities/general.utilities';\nimport { BuildingLevel } from './level.class';\nimport { BookingRule } from '../bookings/booking.interfaces';\nimport { ServiceManager } from '../service-manager.class';\n\nexport interface IBuildingRoleUser {\n    name: string;\n    email: string;\n    phone: string;\n}\n\nexport interface LockerMap {\n    [zone: string]: {\n        [area: string]: {\n            [type: string]: (string | boolean)[][];\n        };\n    };\n}\n\nexport interface ICoordinates {\n    longitude: number;\n    latitude: number;\n}\n\nexport interface LevelFeature {\n    id: string;\n    level_id: string;\n    name: string;\n}\n\nexport interface BookingRuleDetails {\n    /** List of booking rules details for the building */\n    readonly rules: readonly string[];\n    /** Custom booking rules for the map */\n    readonly map_rules?: readonly string[];\n    /** Contact email address for the building */\n    readonly contact?: string;\n    /** Information string to display before the rule listings */\n    readonly info?: string;\n    /** Link for more details */\n    readonly link?: { url?: string, name?: string };\n}\n\nexport class Building extends BaseDataClass {\n    /** Service for managing buildings */\n    protected get _service() {\n        return ServiceManager.serviceFor(Building);\n    }\n    /** Engine Zone ID for the building */\n    public readonly zone_id: string;\n    /** Organisation Code for the building */\n    public readonly code: string;\n    /** Geographical address of the building */\n    public readonly address: string;\n    /** Details about the booking rules for the building */\n    public readonly booking_details: BookingRuleDetails;\n    /** Details about the booking rules for the building */\n    public readonly booking_rules: HashMap<readonly BookingRule[]>;\n    /** Number of hour before a booking catering is restricted */\n    public readonly catering_restricted_from: number;\n    /** Currency code for the country assoicated with the building */\n    public readonly currency: string;\n    /** Map of fields that are required on the form */\n    public readonly required: HashMap<boolean>;\n    /** IANA timezone database string for the location the building resides  */\n    public readonly timezone: string;\n    /** Whether catering is available in this building */\n    public readonly has_catering: boolean;\n    /** ID of the system used for the holding bay */\n    public readonly holding_bay: string;\n    /** ID of the system used for standalone visitors bookings */\n    public readonly visitor_space: string;\n    /** List of zones to determine sort order spaces */\n    public readonly sort_order: readonly string[];\n    /** Searchable map features */\n    public readonly searchables: readonly LevelFeature[];\n    /** List of available extras for the building */\n    public readonly extras: readonly Identity[];\n    /** List of available extra equipment for loan at the building */\n    public readonly loan_items: readonly Identity[];\n    /** List of available levels for the building */\n    public readonly levels: readonly BuildingLevel[];\n\n    public readonly catering_hours: { readonly start: number, readonly end: number };\n    /** Map of custom settings for the building */\n    private _settings: HashMap;\n    /** Map of roles and list of the associated users */\n    private _roles: HashMap<IBuildingRoleUser[]>;\n    /** Map of the locker ID arrays */\n    private _lockers: LockerMap;\n    /** Map of important system ids for the building */\n    private _systems: HashMap<string>;\n    /** Map of important phone numbers for the building */\n    private _phone_numbers: HashMap<string>;\n    /** Globe coordiates for the build */\n    private _location: ICoordinates;\n    /** List of zones associated with the building */\n    public readonly zones: readonly string[];\n\n    constructor(raw_data: HashMap) {\n        super(raw_data);\n        const settings = raw_data.settings || {};\n        const disc_info = settings.discovery_info || settings;\n        this.zone_id = raw_data.zone_id || raw_data.zone;\n        this.extras = (raw_data.extras || disc_info.extras || []).map(i => ({ id: i.extra_id || i.id, name: i.extra_name || i.name }));\n        this.loan_items = (raw_data.loan_items || disc_info.loan_items  || []).map(i => ({ id: i.extra_id || i.id, name: i.extra_name || i.name }));\n        this.levels = (raw_data.levels || disc_info.levels  || []).map(i => new BuildingLevel({ ...i, building_id: this.id }));\n        this._roles = raw_data.roles || disc_info.roles || {};\n        this._lockers = raw_data.lockers || raw_data.locker_structure || disc_info.locker_structure || {};\n        this._systems = raw_data.systems || disc_info.systems || {};\n        this._settings = settings;\n        this._phone_numbers = raw_data.phone_numbers || disc_info.phone_numbers || {};\n        this._location = raw_data.location || disc_info.location || { longitude: null, latitude: null };\n        this.catering_hours = raw_data.catering_hours || disc_info.catering_hours || settings.catering_hours || { start: 7, end: 20 };\n        const searchables = [];\n        if (raw_data.neighbourhoods) {\n            for (const lvl in raw_data.neighbourhoods) {\n                if (raw_data.neighbourhoods.hasOwnProperty(lvl)) {\n                    const lvl_features = raw_data.neighbourhoods[lvl] || {};\n                    for (const feature in lvl_features) {\n                        if (lvl_features.hasOwnProperty(feature)) {\n                            searchables.push({\n                                id: lvl_features[feature],\n                                name: feature,\n                                level_id: lvl\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        this.searchables = searchables;\n        this.code = raw_data.code || disc_info.code || settings.code || '';\n        this.address = raw_data.address || disc_info.address || settings.address || '';\n        this.booking_details = raw_data.booking_details || disc_info.booking_details || settings.booking_details || null;\n        this.booking_rules = raw_data.booking_rules || disc_info.booking_rules || settings.booking_rules || {};\n        this.catering_restricted_from = raw_data.catering_restricted_from || disc_info.catering_restricted_from || settings.catering_restricted_from || 0;\n        this.currency = raw_data.currency || disc_info.currency || settings.currency || 'USD';\n        this.required = raw_data.required || disc_info.required || settings.required || {};\n        if (disc_info.requires_equipment_code) {\n            this.required.equipment_code = true;\n        }\n        if (disc_info.requires_expected_attendees) {\n            this.required.expected_attendees = true;\n        }\n        this.timezone = raw_data.timezone || disc_info.timezone || settings.timezone || '';\n        this.has_catering = raw_data.has_catering || disc_info.has_catering || settings.has_catering || false;\n        this.holding_bay = raw_data.holding_bay || disc_info.holding_bay || settings.holding_bay || '';\n        this.visitor_space = raw_data.visitor_space || disc_info.visitor_space || settings.visitor_space || '';\n        this.sort_order = raw_data.sort_order || disc_info.sort_order || settings.sort_order || [];\n    }\n\n    /**\n     * Get a custom building setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        const keys = key.split('.');\n        const value = getItemWithKeys(keys, this._settings);\n        return value;\n    }\n\n    /**\n     * Get list of users with the associated role\n     * @param name Role to find users for\n     */\n    public role(name: string): IBuildingRoleUser[] {\n        return [...(this._roles[name] || [])];\n    }\n    /**\n     * Get list of the names of available user role lists\n     */\n    public get role_names(): string[] {\n        return Object.keys(this._roles).filter(i => this._roles.hasOwnProperty(i));\n    }\n    /** Map of the locker ID arrays */\n    public get lockers(): LockerMap {\n        return { ...(this._lockers || {}) };\n    }\n    /** Map of important system ids for the building */\n    public get systems(): HashMap<string> {\n        return { ...(this._systems || {}) };\n    }\n    /** Map of important phone numbers for the building */\n    public get phone_numbers(): HashMap<string> {\n        return { ...(this._phone_numbers || {}) };\n    }\n    /** Real coordinates */\n    public get location(): ICoordinates {\n        return { ...this._location };\n    }\n\n    /**\n     * Get search map feature for the given level ID\n     * @param level_id ID of level to grab features for\n     */\n    public featuresForLevel(level_id: string): LevelFeature[] {\n        return (this.searchables || []).filter(i => i.level_id === level_id);\n    }\n\n    /**\n     * Building objects are readonly and cannot be changed\n     */\n    public async save(): Promise<Building> {\n        throw new Error('Building objects are readonly and cannot be changed');\n    }\n\n    /**\n     * Building objects are readonly and cannot be deleted\n     */\n    public async delete(): Promise<void> {\n        throw new Error('Building objects are readonly and cannot be deleted');\n    }\n}\n","import { HashMap } from 'src/app/shared/utilities/types.utilities';\n\n/** Building Level data */\nexport class BuildingLevel {\n    /** ID of the building level zone */\n    readonly id: string;\n    /** ID of the building zone associated with the level */\n    readonly building_id: string;\n    /** Name of the level */\n    readonly name: string;\n    /** Number or short identifier of the level */\n    readonly short_name: string;\n    /** Map URL for the level */\n    readonly map_url: string;\n    /** Usage type for the level */\n    readonly type: 'staff' | 'client' | 'any';\n    /** Setting for the level */\n    readonly settings: HashMap;\n\n    constructor(_data: HashMap = {}) {\n        this.id = _data.id || _data.level_id || '';\n        this.building_id = _data.bld_id || _data.building_id || '';\n        this.name = _data.name || _data.level_name || '';\n        const lower_name = this.name.toLowerCase();\n        const num = lower_name.indexOf('level') >= 0 ? lower_name.replace(/ ?level ?/gi, '') : lower_name.substr(0, 1).toUpperCase();\n        this.short_name = _data.short_name || num || '';\n        this.map_url = _data.map_url || '';\n        this.type = _data.type || _data.floor_type || 'any';\n        this.settings = _data.settings;\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\nimport { getItemWithKeys } from '../../../shared/utilities/general.utilities';\nimport { BaseAPIService } from '../base.service';\nimport { ServiceManager } from '../service-manager.class';\nimport { OrganisationService } from './organisation.service';\n\nexport class Organisation extends BaseDataClass {\n    /** Service for managing organisations */\n    protected get _service() {\n        return ServiceManager.serviceFor(Organisation);\n    }\n    /** Map of custom settings for the building */\n    private _settings: HashMap;\n\n    constructor(raw_data: HashMap) {\n        super(raw_data);\n        this._settings = raw_data.settings || {};\n    }\n\n    /**\n     * Get a custom building setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        const keys = key.split('.');\n        const value = getItemWithKeys(keys, this._settings);\n        return value;\n    }\n\n    /**\n     * Building objects are readonly and cannot be changed\n     */\n    public async save(): Promise<Organisation> {\n        throw new Error('Organisation objects are readonly and cannot be changed');\n    }\n\n    /**\n     * Building objects are readonly and cannot be deleted\n     */\n    public async delete(): Promise<void> {\n        throw new Error('Organisation objects are readonly and cannot be deleted');\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { ComposerService } from '@placeos/composer';\n\nimport { BaseAPIService } from '../base.service';\nimport { Organisation } from './organisation.class';\nimport { Building } from './building.class';\nimport {\n    HashMap,\n    ApplicationLoadingState,\n    Identity,\n} from '../../../shared/utilities/types.utilities';\nimport { BuildingLevel } from './level.class';\nimport { User } from '../users/user.class';\nimport { first } from 'rxjs/operators';\nimport { ApplicationService } from '../../app.service';\nimport { ServiceManager } from '../service-manager.class';\nimport { UsersService } from '../users/users.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class OrganisationService extends BaseAPIService {\n    /** Organisation data for the application */\n    private _organisation: Organisation;\n    /** Actively displayed building */\n    private _active_building: string;\n\n    constructor(\n        protected _composer: ComposerService,\n        private _service: ApplicationService,\n        private _users: UsersService\n    ) {\n        super(_composer);\n        ServiceManager.setService(Organisation, this);\n        ServiceManager.setService(Building, this);\n        this._name = 'Organisation';\n        this._api_route = 'zones';\n        this.set('buildings', []);\n        this.set('active_building', null);\n        this._users.initialised.pipe(first((_) => _)).subscribe(() => this.init());\n    }\n\n    /**\n     * Add is not available on organisation service\n     */\n    public async add(form_data: HashMap, query_params?: HashMap): Promise<Organisation> {\n        throw new Error('Add is not available on the organisation service');\n    }\n\n    /**\n     * Update is not available on organisation service\n     */\n    public async update(\n        id: string,\n        form_data: HashMap,\n        query_params?: HashMap\n    ): Promise<Organisation> {\n        throw new Error('Update is not available on the organisation service');\n    }\n\n    /**\n     * Delete is not available on organisation service\n     */\n    public async delete(id: string): Promise<void> {\n        throw new Error('Delete is not available on the organisation service');\n    }\n\n    /**\n     * Get list of levels for the given building ID\n     * @param bld_id Building ID\n     */\n    public levels(bld_id: string): readonly BuildingLevel[] {\n        return (this.buildings.find((i) => i.id === bld_id) || ({} as Building)).levels;\n    }\n\n    /**\n     * Get a setting from the organisation or active building\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string) {\n        return this.building.setting(key) || this._organisation.setting(key);\n    }\n\n    /** Active building */\n    public get building(): Building {\n        return this.buildings.find((i) => i.id === this._active_building);\n    }\n\n    /** List of types of spaces */\n    public get space_types(): Identity[] {\n        return this.get('space_types') || [];\n    }\n\n    public set building(bld: Building) {\n        if (bld instanceof Building) {\n            this._active_building = bld.id;\n        } else {\n            this._active_building = bld;\n        }\n        this.set('active_building', this.building);\n    }\n\n    /** List of buildings for the organisation */\n    public get buildings(): Building[] {\n        return this.get<Building[]>('buildings') || [];\n    }\n\n    /**\n     * Get list of available equipment\n     * @param id ID of the building to get the list from. i.e. Defaults to the active building\n     */\n    public getExtras(id: string, bld_id?: string) {\n        const bld = this.buildings.find((i) => i.id === bld_id) || this.building;\n        if (bld && id) {\n            return bld.extras.filter((i) => `${i.id}`.indexOf(id) >= 0);\n        }\n        return [];\n    }\n\n    /**\n     * Get the first level matching the list of given IDs\n     * @param ids List of ID to search with\n     */\n    public levelWithID(ids: string | string[]): BuildingLevel {\n        const list = ids instanceof Array ? ids : [ids];\n        const bld_list = this.buildings;\n        for (const id of list) {\n            for (const bld of bld_list) {\n                for (const lvl of bld.levels) {\n                    if (lvl.id === id) {\n                        return lvl;\n                    }\n                }\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Initialise service data\n     */\n    protected async load(): Promise<void> {\n        /* istanbul ignore else */\n        if (localStorage) {\n            this._active_building = localStorage.getItem(`${this._service.name}.building`);\n        }\n        const loading: ApplicationLoadingState = this._service.get('loading') || {};\n        loading.organisation = { message: 'Loading organisation data', state: 'loading' };\n        await this.loadOrganisation();\n        loading.organisation = { message: 'Loading organisation data', state: 'complete' };\n        loading.buildings = { message: 'Loading building data', state: 'loading' };\n        this._service.set('loading', loading);\n        await this.loadBuildings();\n        loading.buildings = { message: 'Loading building data', state: 'complete' };\n        loading.levels = { message: 'Loading building floor data', state: 'loading' };\n        this._service.set('loading', loading);\n        await this.loadLevels();\n        loading.levels = { message: 'Loading building floor data', state: 'complete' };\n        this._service.set('loading', loading);\n        loading.space_types = { message: 'Loading space type data', state: 'loading' };\n        this._service.set('loading', loading);\n        await this.loadSpaceTypes();\n        loading.space_types = { message: 'Loading space type data', state: 'complete' };\n        this._service.set('loading', loading);\n        const user = this._users.current;\n        if (user) {\n            const building = this.buildings.find((bld) => bld.code === user.location);\n            if (building) {\n                this._active_building = building.id;\n                this.set('active_building', building);\n            } else {\n                this._active_building = this.building.id;\n                this.set('active_building', this.building);\n            }\n        }\n    }\n\n    /**\n     * Load organisation data for application\n     */\n    public async loadOrganisation(): Promise<void> {\n        const org_data = await this.query({ tags: 'org', engine: true });\n        this._organisation = new Organisation(org_data[0]);\n        this.set('organisation', this._organisation);\n    }\n\n    /**\n     * Load building data for the organisation\n     */\n    public async loadBuildings(): Promise<void> {\n        const bld_data = await this.query({ tags: 'building', engine: true, limit: 500 });\n        const buildings = (bld_data as HashMap[]).map((i) => new Building(i));\n        this.set('buildings', buildings);\n        /* istanbul ignore else */\n        if (!this._active_building && buildings && buildings.length > 0) {\n            this._active_building = buildings[0].id;\n        }\n    }\n\n    /**\n     * Load level data for the buildings\n     */\n    public async loadLevels(): Promise<void> {\n        const lvl_data = await this.query({ tags: 'level', engine: true });\n        const levels = (lvl_data as HashMap[]).map((i) => new BuildingLevel(i));\n        this.set('levels', levels);\n    }\n\n    /**\n     * Load space type data for the buildings\n     */\n    public async loadSpaceTypes(): Promise<void> {\n        const type_data = await this.query({ tags: 'room', engine: true });\n        const types = (type_data as HashMap[]).map((i) => ({ id: i.id, name: i.name }));\n        this.set('space_types', types);\n    }\n}\n","import { Type } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { BaseDataClass } from './base-api.class';\n\n\nexport interface ServiceLike<T = BaseDataClass> extends HashMap {\n    parent: any;\n    add: (_: HashMap) => Promise<T>;\n    update: (id: string, _: HashMap) => Promise<T>;\n    delete: (id: string, params?: HashMap) => Promise<void>;\n    task: (id: string, name: string, data: HashMap) => Promise<void>;\n    listen: <U = any>(prop: string) => Observable<U>;\n}\nexport interface ServiceProvider<T extends ServiceLike> {\n    provideFor: Type<any>;\n    useValue: T;\n}\n\nexport class ServiceManager {\n    /** Map of available services for child classes */\n    private static _service_list: ServiceProvider<any>[] = [];\n    /** Set the services used to handle data model requests */\n    public static setService(type: Type<any>, service: ServiceLike): void {\n        if (window.debug) {\n            (window as any).ServiceManager = this._service_list;\n        }\n        const index = ServiceManager._service_list.findIndex(provider => provider.provideFor === type);\n        if (index >= 0) {\n            ServiceManager._service_list.splice(index, 1, { provideFor: type, useValue: service });\n        } else {\n            ServiceManager._service_list.push({ provideFor: type, useValue: service });\n        }\n    }\n    /** Get the services used to handle data model requests */\n    public static serviceFor(type: Type<any>): ServiceLike<any> {\n        const provider = ServiceManager._service_list.find(provider => provider.provideFor === type) || { useValue: null };\n        return provider.useValue;\n    }\n\n    constructor() {\n        throw new Error('ServiceMananger is static class');\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport { HashMap, Identity } from '../../../shared/utilities/types.utilities';\nimport { Booking } from '../bookings/booking.class';\nimport { BuildingLevel } from '../organisation/level.class';\nimport { SpaceRules } from '../bookings/booking.interfaces';\nimport { rulesForSpace } from '../bookings/booking.utilities';\nimport { User } from '../users/user.class';\n\nimport * as dayjs from 'dayjs';\nimport { Building } from '../organisation/building.class';\nimport { Organisation } from '../organisation/organisation.class';\nimport { ServiceManager } from '../service-manager.class';\n\nexport interface ISpaceAvailabilityOptions {\n    /** Start date and time of the availability block */\n    date?: number;\n    /** Length of the availability block */\n    duration: number;\n    /**  */\n    id?: string;\n    /** List of spaces to look at the availability for */\n    room_ids?: string;\n    /** Whether the spaces looked at should be bookable */\n    bookable?: boolean;\n    /** List of spaces or zones to ignore */\n    ignore?: string;\n    /** List of zones to look at the availability for */\n    zone_ids?: string;\n    /** Whether space bookings should not be returned */\n    hide_bookings?: boolean;\n\n    clear?: boolean;\n}\n\nexport interface SpaceBookingRuleOptions {\n    date: number;\n    duration: number;\n    host: User;\n}\n\nconst OPTION_DEFAULTS: ISpaceAvailabilityOptions = {\n    duration: 60,\n};\n\nexport interface RecurrenceAvailability {\n    /** Unix epoch in seconds */\n    readonly date: number;\n    /** Whetehr space is available at this time */\n    readonly available: boolean;\n}\n\nexport class Space extends BaseDataClass {\n    /** Extends name for the space */\n    public readonly long_name: string;\n    /** CSS selector for the location of the space of the level's map */\n    public readonly map_id: string;\n    /** Type of space */\n    public readonly type: string;\n    /** Whether user can search for this space */\n    public readonly can_search: boolean;\n    /** Whether user can open the control URL if available */\n    public readonly can_control: boolean;\n    /** Hourly cost for using the space */\n    public readonly hourly_rate: number;\n    /** Whether space can be booked by users */\n    public readonly bookable: boolean;\n    /** People capacity of the space */\n    public readonly capacity: number;\n    /** Index to force order when sorting multiple spaces */\n    public readonly sort_priority: number;\n    /** Setup time for bookings in this space */\n    public readonly setup: number;\n    /** Breakdown time for bookings in this space */\n    public readonly breakdown: number;\n    /** Last returned availability result */\n    public readonly was_available: boolean;\n    /** URL for the control interface of the space */\n    public readonly support_url: boolean;\n    /** Display image for the space */\n    public readonly image: string;\n    /** List of recurrence occurrence availability details */\n    public readonly recurr_available: readonly RecurrenceAvailability[];\n    /** Engine zones associated with the space */\n    public readonly zones: readonly string[];\n    /** Bookings associated with the space */\n    public bookings: readonly Booking[];\n    /** List of ids for linked spaces */\n    public linked_spaces: readonly string[];\n    /** Service for managing spaces */\n    protected get _service() {\n        return ServiceManager.serviceFor(Building);\n    }\n    /** List of equipment available in the space */\n    private _extras: Identity[];\n\n    constructor(raw_data: HashMap = {}) {\n        super(raw_data);\n        const settings = raw_data.settings || {};\n\n        this.long_name = settings.long_name || raw_data.long_name;\n        this.map_id = settings.map_id || raw_data.map_id || '';\n        this.type =\n            settings.book_type ||\n            (this.level.settings || {}).book_type ||\n            raw_data.book_type ||\n            raw_data.type ||\n            'book';\n        this.can_search =\n            settings.searchable || raw_data.searchable || raw_data.can_search || false;\n        this.can_control =\n            settings.controlable || raw_data.controlable || raw_data.can_control || false;\n        this.hourly_rate = settings.cost_hour || raw_data.cost_hour || raw_data.hourly_rate || 0;\n        this.bookable = settings.bookable || raw_data.bookable || false;\n        this.setup = (settings.setup || 0) / 60 || raw_data.setup || 0;\n        this.breakdown = (settings.breakdown || 0) / 60 || raw_data.breakdown || 0;\n        this.capacity = raw_data.capacity || 0;\n        this.recurr_available = raw_data.recurr_available || settings.recurr_available || [];\n        const available = !!this.recurr_available.find((occurence) => !!occurence.available);\n        this.was_available =\n            settings.available ||\n            raw_data.available ||\n            available ||\n            false;\n        this.support_url = raw_data.support_url;\n        this.image = raw_data.image || '';\n\n        this.zones = raw_data.zones instanceof Array ? raw_data.zones : [];\n        const raw_bookings = settings.bookings || raw_data.bookings || [];\n        this.bookings = raw_bookings.map((bkn) => new Booking(bkn));\n        this._extras = [];\n        this.linked_spaces =\n            settings.linked_rooms || raw_data.linked_rooms || raw_data.linked_spaces || [];\n    }\n\n    /** Whether the space has a booking in progress */\n    public get in_use(): boolean {\n        return !!this.current;\n    }\n\n    /** Get any current in progress meeting */\n    public get current(): Booking {\n        const bookings = this.bookings;\n        for (const bkn of bookings) {\n            const status = bkn.status;\n            if (status === 'in_progress' || status === 'started') {\n                return bkn;\n            }\n        }\n        return null;\n    }\n\n    /** Get the next upcoming meeting */\n    public get next(): Booking {\n        const now = dayjs().valueOf();\n        const bookings = this.bookings;\n        for (const bkn of bookings) {\n            if (bkn.date > now) {\n                return bkn;\n            }\n        }\n        return null;\n    }\n\n    /** List of bookings for today */\n    public get todays_bookings(): readonly Booking[] {\n        return this.bookingsFor(dayjs().valueOf());\n    }\n\n    /** Level in which the space is associated */\n    public get level(): BuildingLevel {\n        const service = ServiceManager.serviceFor(Organisation);\n        return (service ? service.levelWithID(this.zones as any) : null) || new BuildingLevel({});\n    }\n\n    /**\n     * Get bookings for space\n     * @param date Date to filter bookings on\n     */\n    public bookingsFor(date?: number): readonly Booking[] {\n        if (date) {\n            const day = dayjs(date);\n            return this.bookings.filter((i) => {\n                const start = dayjs(i.date);\n                return start.isSame(day, 'd');\n            });\n        } else {\n            return this.bookings;\n        }\n    }\n\n    /**\n     * Whether the space is available.\n     */\n    public isAvailable(options?: ISpaceAvailabilityOptions): Promise<boolean> {\n        options = options\n            ? { ...OPTION_DEFAULTS, ...options, room_ids: this.id }\n            : { ...OPTION_DEFAULTS, room_ids: this.id };\n        return new Promise((resolve) => {\n            (this._service as any).available(options).then(\n                (list: Space[]) => {\n                    for (const rm of list) {\n                        if (rm.id === this.id) {\n                            return resolve(true);\n                        }\n                    }\n                    resolve(false);\n                },\n                () => resolve(false)\n            );\n        });\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): Space {\n        return new Space(this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): Space {\n        return new Space({ ...this, id: null, email: null, bookings: [] });\n    }\n\n    /**\n     * Generate the booking rules for space with given options\n     * @param options Conditions for generating the space rules\n     */\n    public rulesFor(options: SpaceBookingRuleOptions): SpaceRules {\n        const service = ServiceManager.serviceFor(Building);\n        if (!service || !this.level) {\n            return { auto_approve: true, hide: false };\n        }\n        const building = service.buildings.find((bld) => bld.id === this.level.building_id);\n        if (!building) {\n            return { auto_approve: true, hide: false };\n        }\n        const { date, duration, host } = options;\n        const rules: SpaceRules = rulesForSpace({\n            time: date,\n            duration,\n            space: this,\n            user: host,\n            rules: building.booking_rules,\n        });\n        return rules;\n    }\n\n    /**\n     * Whether space can only be booked by request\n     * @param options Conditions for checking the space rules\n     */\n    public byRequest(options: SpaceBookingRuleOptions) {\n        const rules = this.rulesFor(options);\n        return !rules.auto_approve;\n    }\n}\n","import { HashMap } from '../../../shared/utilities/types.utilities';\nimport { generateMockBooking } from '../bookings/booking.utilities';\nimport { USER_DOMAIN } from '../users/user.utilities';\nimport { ISpaceAvailabilityOptions } from './space.class';\n\nimport * as faker from 'faker';\nimport * as dayjs from 'dayjs';\n\nlet SPACE_COUNT: number = 0;\n\nexport function generateMockSpace(overrides: HashMap = {}): HashMap {\n    const id = `space-${SPACE_COUNT++}`;\n    const name = `${faker.name.firstName()} ${faker.name.lastName()} Space`;\n    const linked = Math.floor(Math.random() * 99999) % 2 === 0 && SPACE_COUNT > 1;\n    return {\n        id,\n        name,\n        long_name: `${name} with an long name`,\n        map_id: `${SPACE_COUNT}`,\n        capacity: Math.floor(Math.random() * 20 + 1) * 2,\n        email: `${name.toLowerCase().split(' ').join('.')}@${USER_DOMAIN}`,\n        type: faker.commerce.productName(),\n        searchable: Math.floor(Math.random() * 99999) % 2 === 0,\n        controlable: Math.floor(Math.random() * 99999) % 2 === 0,\n        bookable: Math.floor(Math.random() * 99999) % 2 === 0,\n        cost_hour: Math.floor(Math.random() * 300) * 100,\n        setup: Math.floor(Math.random() * 6) * 5,\n        breakdown: Math.floor(Math.random() * 6) * 5,\n        zones: ['zone_lvl-0'],\n        support_url: `/control/#/${id}`,\n        bookings: Array(10).fill(0).map(i => generateMockBooking()),\n        linked_rooms: linked ? [`space-${Math.floor(Math.random() * (SPACE_COUNT - 1))}`] : [],\n        image: faker.image.business(),\n        ...overrides\n    };\n}\n\nexport function availabilityOptionsToQuery(options: ISpaceAvailabilityOptions): HashMap {\n    let query: HashMap = {};\n    if (options) {\n        query = { ...options };\n        if (options.date) {\n            const date = dayjs(options.date).startOf('m');\n            query.available_from = date.unix();\n            query.available_to = date.add(options.duration || 60, 'm').unix();\n            delete query.date;\n            delete query.duration;\n        }\n    }\n    return query;\n}\n","import { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\nimport { first } from 'rxjs/operators';\n\nimport { BaseAPIService } from '../base.service';\nimport { Space, ISpaceAvailabilityOptions } from './space.class';\nimport { HashMap, ApplicationLoadingState } from '../../../shared/utilities/types.utilities';\nimport { availabilityOptionsToQuery } from './space.utilities';\nimport { OrganisationService } from '../organisation/organisation.service';\nimport { ServiceManager } from '../service-manager.class';\nimport { ApplicationService } from '../../app.service';\n\nimport * as dayjs from 'dayjs';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SpacesService extends BaseAPIService<Space> {\n    constructor(\n        protected _composer: ComposerService,\n        private _org_service: OrganisationService,\n        private _app: ApplicationService\n    ) {\n        super(_composer);\n        ServiceManager.setService(Space, this);\n        this._name = 'Space';\n        this._api_route = 'rooms';\n        this._compare = (a, b) => !a.id.localeCompare(b.id) || !a.email.localeCompare(b.email);\n        this._list_filter = (a: Space) => {\n            const bld = this._org_service.building;\n            return a.level.building_id === bld.id;\n        };\n        this._org_service.initialised.pipe(first((_) => _)).subscribe(() => this.init());\n    }\n\n    /**\n     * Get available spaces\n     * @param options\n     */\n    public available(options: ISpaceAvailabilityOptions): Promise<Space[]> {\n        if (!options) {\n            throw new Error('Space avilability requires request options');\n        }\n        if (!options.date) {\n            options.date = dayjs().startOf('m').valueOf();\n        }\n        const key = `available|${options.id ? options.id : ''}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise((resolve, reject) => {\n                const respond = (list: Space[]) => {\n                    const available_spaces = list.filter((i) => {\n                        const linked = list.filter((j) => i.linked_spaces.indexOf(j.id) >= 0);\n                        return (\n                            i.was_available && linked.reduce((a, v) => a && v.was_available, true)\n                        );\n                    });\n                    delete this._promises[key];\n                    resolve(available_spaces);\n                };\n                const error = (e) => {\n                    reject(e);\n                    delete this._promises[key];\n                };\n                const query = availabilityOptionsToQuery(options);\n                if (options.id) {\n                    this.show(options.id, query).then((i) => respond([i]), error);\n                } else {\n                    this.query(query).then(respond, error);\n                }\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Load initial data for the service\n     */\n    protected async load(): Promise<void> {\n        const loading: ApplicationLoadingState = this._app.get('loading') || {};\n        if (!loading.spaces) {\n            loading.spaces = { message: 'Loading space data', state: 'loading' };\n            this._app.set('loading', loading);\n        }\n        await this.query().catch(() => {\n            loading.spaces = { message: 'Loading space data', state: 'failed' };\n            this._app.set('loading', loading);\n        });\n        loading.spaces = { message: 'Loading space data', state: 'complete' };\n        this._app.set('loading', loading);\n    }\n\n    /**\n     * Convert raw data into API object\n     * @param raw_data Raw API data\n     */\n    protected process(raw_data: HashMap): Space {\n        return new Space(raw_data);\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport { HashMap, Identity } from '../../../shared/utilities/types.utilities';\nimport { MapLocation } from '../location/location.class';\nimport { ServiceManager } from '../service-manager.class';\n\nexport class User extends BaseDataClass {\n    /** Currently logged in user */\n    public static get active_user(): User {\n        const service = ServiceManager.serviceFor(User);\n        return service ? service.current : null;\n    }\n    /** First name of the user */\n    public readonly first_name: string;\n    /** Last name of the user */\n    public readonly last_name: string;\n    /** Windows user ID */\n    public readonly windows_id: string;\n    /** Type of user */\n    public readonly type: 'partner' | 'external' | 'internal';\n    /** Contact phone number of the user */\n    public readonly phone: string;\n    /** Organisational department the user is part of */\n    public readonly business_unit: string;\n    /** Whether user is external from the application's organisation */\n    public readonly external: boolean;\n    /** Organisational Identifier for the user */\n    public readonly staff_code: string;\n    /** Basic location descriptor for the user */\n    public readonly location: string;\n    /** List of users that this user can act on behalf */\n    public readonly delegates: readonly string[];\n    /** URL of the user's avatar image */\n    public readonly image: string;\n    /** List of user groups associated with this user */\n    public readonly groups: readonly string[];\n    /** Organisation the user is associated with */\n    private _organisation: Identity;\n\n    /** Map location of the user */\n    private _location: MapLocation;\n    /** List of desk bookings */\n    private _desk_bookings: HashMap = {};\n\n    constructor(raw_data: HashMap = {}) {\n        super(raw_data);\n        this.first_name = raw_data.first_name || '';\n        this.last_name = raw_data.last_name || '';\n        this.windows_id = raw_data.email || '';\n        this.type = raw_data.visitor ? 'external' : raw_data.type || 'internal';\n        this.phone = raw_data.phone || raw_data.mobile || '';\n        this.business_unit = raw_data.business_unit || raw_data.department || '';\n        this._organisation = raw_data.organisation || {\n            id: raw_data.organisation_id,\n            name: raw_data.organisation_name\n        };\n        this.external = this.type === 'external';\n        this._location = null;\n        this.image = raw_data.image || '';\n        this.staff_code = raw_data.staff_code || raw_data.fmno || '';\n        this.delegates = raw_data.delegates || [];\n        this._location = new MapLocation(\n            raw_data.location && raw_data.location instanceof Object\n                ? raw_data.location\n                : { name: raw_data.location }\n        );\n        this.groups = raw_data.groups || [];\n        this.location = raw_data.location || raw_data.officeLocation || '';\n    }\n\n    /** Organisation the user is associated with */\n    public get organisation() {\n        return this._organisation;\n    }\n\n    /** Map location of the user */\n    public get last_location(): MapLocation {\n        return new MapLocation(this._location || {})\n    }\n\n    /**\n     * Ask the server for the users current location\n     */\n    public locate(): Promise<MapLocation> {\n        const service: any = ServiceManager.serviceFor(MapLocation);\n        return new Promise((resolve, reject) => {\n            if (service) {\n                service.show(this.id, { desk: this.email }).then(\n                    l => {\n                        this._location = l;\n                        resolve(l);\n                    },\n                    e => reject(e)\n                );\n            } else {\n                resolve(null);\n            }\n        });\n    }\n\n    /**\n     * Whether user is available during the given period\n     * @param start Start time as a unix timestamp with milliseconds\n     * @param end End time as a unix timestamp with milliseconds\n     */\n    public available(start?: number, end?: number): Promise<boolean> {\n        return new Promise<boolean>(resolve => {\n            this._service.query({ email: this.email, start, end }).then(\n                l => resolve(l && l.length > 0),\n                _ => resolve(false)\n            );\n        });\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): User {\n        return new User(this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): User {\n        return new User({ ...this, id: null, email: null });\n    }\n\n    /**\n     * Convert object into plain object\n     */\n    public toJSON(this: User): HashMap {\n        const data = super.toJSON();\n        delete data.location;\n        return data;\n    }\n}\n","import { HashMap } from '../../../shared/utilities/types.utilities';\n\nimport * as faker from 'faker';\nimport { padZero, unique } from '../../../shared/utilities/general.utilities';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { User } from './user.class';\nimport { Subscription } from 'rxjs';\n\nlet USER_COUNT = 0;\n\nexport let USER_DOMAIN = 'acaprojects.com';\n\nconst USER_EMAILS: string[] = [];\n\n/**\n * Generate raw mock data for a user\n * @param id Forced ID for the mock\n * @param name Forced name for the user\n * @param external Whether user is external of the organisation\n */\nexport function generateMockUser(override: HashMap = {}): HashMap {\n    const id = `user-${USER_COUNT++}`;\n    const name = `${faker.name.firstName()} ${faker.name.lastName()}`;\n    const external = override.external || !((Math.random() * 99999) % 2);\n    const organisation = external ? faker.company.companyName() : USER_DOMAIN.split('.')[0];\n    let delegates: string[] = [];\n    const delegate_count = Math.min(Math.random() * 4 + 1, USER_EMAILS.length);\n    for (let i = 0; i < delegate_count; i++) {\n        delegates.push(USER_EMAILS[Math.floor(Math.random() * USER_EMAILS.length)]);\n    }\n    delegates = unique(delegates);\n    const email = `${name\n        .split(' ')\n        .join('.')\n        .toLowerCase()}@${external ? 'not-' : ''}${USER_DOMAIN}`;\n    USER_EMAILS.push(email);\n    return {\n        id,\n        name,\n        first_name: name.split(' ')[0],\n        last_name: name.split(' ')[1],\n        email,\n        phone: faker.phone.phoneNumber(),\n        visitor: external,\n        organisation: {\n            id: organisation\n                .split(' ')\n                .join('.')\n                .toLowerCase(),\n            name: organisation\n        },\n        department: faker.commerce.department(),\n        staff_code: padZero(Math.floor(Math.random() * 99999), 5),\n        delegates,\n        image: faker.image.avatar(),\n        ...override\n    };\n}\n\n/**\n * Generate form fields for the given user\n * @param user User to generate form for\n */\nexport function generateUserForm(user: User): FormGroup {\n    if (!user) {\n        throw Error('No user passed');\n    }\n    const fields: HashMap<FormControl> = {\n        id: new FormControl(user.id || ''),\n        name: new FormControl(user.name || ''),\n        first_name: new FormControl(user.first_name || ''),\n        last_name: new FormControl(user.last_name || ''),\n        email: new FormControl(user.email || '', [Validators.email])\n    };\n    // Generate form group for booking item\n    const form = new FormGroup(fields);\n    return form;\n}\n","import { Injectable } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { ComposerService } from '@placeos/composer';\nimport { first } from 'rxjs/operators';\n\nimport { Md5 } from 'ts-md5/dist/md5';\n\nimport { BaseAPIService } from '../base.service';\nimport { User } from './user.class';\nimport { HashMap, ApplicationLoadingState } from '../../../shared/utilities/types.utilities';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\n\nimport * as dayjs from 'dayjs';\nimport { ApplicationService } from '../../app.service';\nimport { ServiceManager } from '../service-manager.class';\n\nexport interface ILoginOptions {\n    /** URL to post login request to */\n    url?: string;\n    /** Whether form data is passed in the body of the request */\n    form?: boolean;\n    /** Custom headers to pass into the post request */\n    headers?: HashMap<string>;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class UsersService extends BaseAPIService<User> {\n    constructor(\n        protected _composer: ComposerService,\n        protected uhttp: HttpClient,\n        protected location: Location,\n        private _service: ApplicationService\n    ) {\n        super(_composer);\n        ServiceManager.setService(User, this);\n        this._name = 'Users';\n        this._api_route = 'users';\n        this._compare = (a, b) => !a.id.localeCompare(b.id) || !a.email.localeCompare(b.email);\n        this.set('current_user', new User({ id: 'local_user', name: 'Local User' }));\n        this._composer.initialised.pipe(first((_) => _)).subscribe(() => this.init());\n    }\n\n    /** Currently logged in user */\n    public get current(): User {\n        return this.get('current_user');\n    }\n\n    /** Whether the user has properly logged in */\n    public get is_logged_in(): boolean {\n        return this.current && this.current.id !== 'local_user';\n    }\n\n    /** istanbul ignore function */\n    /**\n     * Sets the access token and expiry for the user\n     * @param token OAuth bearer token\n     * @param expiry Expiry epoch timestamp in ms\n     * @param reload Whether to reload the page after setting tokens\n     */\n    public setToken(token: string, expiry?: number, reload: boolean = true) {\n        if (!expiry) {\n            expiry = dayjs().add(7, 'd').endOf('d').valueOf();\n        }\n        const path = `${location.origin}${\n            this._service.setting('composer.route') || ''\n        }/oauth-resp.html`;\n        const client_id = Md5.hashStr(path);\n        if (sessionStorage) {\n            sessionStorage.setItem(`${client_id}_access_token`, token);\n            sessionStorage.setItem(`${client_id}_expires_at`, `${expiry}`);\n        }\n        if (localStorage) {\n            localStorage.setItem(`${client_id}_access_token`, token);\n            localStorage.setItem(`${client_id}_expires_at`, `${expiry}`);\n        }\n        if (reload) {\n            this.location.go(this.location.path());\n        }\n        return path;\n    }\n\n    /**\n     * Post login request to the API\n     * @param query_params Key value pairs to pass into\n     * @param options Options for the login request\n     */\n    public login(query_params: HashMap, options: ILoginOptions = {}): Promise<void> {\n        if (!this._promises['login']) {\n            this._promises['login'] = new Promise<void>((resolve, reject) => {\n                this.set('status', 'loading');\n                let headers = new HttpHeaders();\n                if (!options || options.form !== false) {\n                    headers = headers.append('Content-Type', 'application/x-www-form-urlencoded');\n                }\n                const url = (options ? options.url : '') || '/auth/signin';\n                this.uhttp.post(url, query_params, { headers }).subscribe(\n                    (_) => null,\n                    (e) => reject(e),\n                    () => {\n                        this._composer.auth.authorise();\n                        resolve();\n                    }\n                );\n            });\n        }\n        return this._promises['login'];\n    }\n\n    /**\n     * Logout of user and redirect to logout URL\n     */\n    public logout() {\n        this._composer.auth.logout();\n    }\n\n    /**\n     * Load initial data for the service\n     */\n    protected load(tries: number = 0): Promise<void> {\n        const loading: ApplicationLoadingState = this._service.get('loading') || {};\n        if (!loading.user) {\n            loading.user = { message: 'Loading user credentials', state: 'loading' };\n            this._service.set('loading', loading);\n        }\n        this.set('status', 'loading');\n        return new Promise<void>((resolve) => {\n            if (tries > 4) {\n                this.set('status', 'invalid');\n                loading.user = { message: 'Loading user credentials', state: 'failed' };\n                this._service.set('loading', loading);\n                return resolve();\n            }\n            this.show('current').then(\n                (current_user) => {\n                    this.set('status', 'available');\n                    this.set('current_user', current_user);\n                    if (this._service && this._service.setting('app.user.grab_api_details')) {\n                        this.show(current_user.email).then(\n                            (user) => {\n                                this.set('current_user', user);\n                                if (this._service.setting('app.user.update_location')) {\n                                    this.interval('location', () => user.locate(), 5000);\n                                }\n                                this.loadDelegates();\n                                resolve();\n                                loading.user = {\n                                    message: 'Loading user credentials',\n                                    state: 'complete',\n                                };\n                                this._service.set('loading', loading);\n                            },\n                            () =>\n                                this.timeout('load', () => this.load(++tries).then(() => resolve()))\n                        );\n                    } else {\n                        if (this._service.setting('app.user.update_location')) {\n                            this.interval('location', () => current_user.locate(), 5000);\n                        }\n                        this.loadDelegates();\n                        resolve();\n                        loading.user = { message: 'Loading user credentials', state: 'complete' };\n                        this._service.set('loading', loading);\n                    }\n                },\n                () => this.timeout('load', () => this.load(++tries).then(() => resolve()))\n            );\n        });\n    }\n\n    private async loadDelegates() {\n        const delegates = this.current.delegates;\n        if (!delegates || !delegates.length) {\n            return [];\n        }\n        const promises: Promise<User>[] = [];\n        for (const email of delegates) {\n            promises.push(this.show(email));\n        }\n        const list = await Promise.all(promises);\n        this.set('delegates', list);\n        this.set('list', unique((this.get('list') || []).concat(list)));\n        return list;\n    }\n\n    /**\n     * Convert raw API data into a valid User Object\n     * @param raw_item Raw API data\n     */\n    protected process(raw_data: any): User {\n        return new User(raw_data);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\n\nimport { HashMap } from '../shared/utilities/types.utilities';\nimport { unique } from '../shared/utilities/general.utilities';\n\n/** List of keys that cannot be in a combination by themselves or with each other */\nconst INVALID_STANDALONE_KEYS: string[] = ['control', 'shift', 'alt', 'meta', 'os'];\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HotkeysService {\n    /** Map of subjects which store press states of keys */\n    private keydown_states: HashMap<BehaviorSubject<number>> = {};\n    /** Map of obserers for key state subjects */\n    private keydown_observers: HashMap<Observable<number>> = {};\n    /** List of keys at the end of a combination */\n    private combo_end: string[] = [];\n    /** List of registered hotkey combinations */\n    private registered_combos: string[][] = [];\n    /** Counter for the number of keydown events. Used for checking order of key presses */\n    private counter: number = 0;\n    /** Last key code to be pressed */\n    private last_down: string;\n\n    constructor() {\n        window.addEventListener('keydown', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            /* istanbul ignore else */\n            if (this.last_down !== code) {\n                /* istanbul ignore else */\n                if (!this.keydown_states[code]) {\n                    this.keydown_states[code] = new BehaviorSubject(null);\n                    this.keydown_observers[code] = this.keydown_states[code].asObservable();\n                }\n                this.keydown_states[code].next(++this.counter);\n                /* istanbul ignore else */\n                if (this.combo_end.indexOf(code) >= 0) {\n                    event.preventDefault();\n                }\n                this.last_down = code;\n            }\n        });\n\n        window.addEventListener('keyup', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            /* istanbul ignore else */\n            if (this.keydown_states[code]) {\n                this.keydown_states[code].next(null);\n            }\n            /* istanbul ignore else */\n            if (this.last_down === code) {\n                this.last_down = null;\n            }\n        });\n    }\n\n    /**\n     * Listen to the given key combination\n     * @param combo Array of key codes to listen to or a hotkey string e.g. `Alt+Shift+KeyK`\n     * @param next Callback for combination presses\n     */\n    public listen(combo: string | string[], next: () => void): Subscription {\n        combo = (combo instanceof Array ? combo : combo.split('+'));\n        const combination: string[] = combo.map(i => this.mapKey(i.toLowerCase()));\n        /* istanbul ignore else */\n        if (combination.length > 0 && this.validCombination(combination)) {\n            this.registered_combos.push(combination);\n            const last_key = combination[combination.length - 1];\n            /* istanbul ignore else */\n            if (!this.keydown_states[last_key]) {\n                this.keydown_states[last_key] = new BehaviorSubject(null);\n                this.keydown_observers[last_key] = this.keydown_states[last_key].asObservable();\n            }\n            this.updateCombinationEndList();\n            return this.keydown_observers[last_key].subscribe((count) => {\n                /* istanbul ignore else */\n                if (count) {\n                    const presses: number[] = [];\n                    /* istanbul ignore else */\n                    if (combination.length > 0) {\n                        // Check that keys are pressed\n                        for (const key of combination) {\n                            const state = this.keydown_states[key];\n                            presses.push(state ? state.getValue() || -1 : -1);\n                        }\n                        // Check that keys are pressed in the correct order\n                        for (let i = 0; i < combination.length - 1; i++) {\n                            if (presses[i] > presses[i + 1]) { return; }\n                        }\n                    }\n                    const total = presses.reduce((a, v) => a + (v > 0 ? 1 : -1), 0);\n                    /* istanbul ignore else */\n                    if (total >= combination.length) {\n                        next();\n                    }\n                }\n            });\n        }\n        return null;\n    }\n\n    /**\n     * Map key codes with multiple versions to simple form\n     * @param code Code to transform\n     */\n    private mapKey(code: string): string {\n        /* istanbul ignore else */\n        if (code.indexOf('alt') >= 0 || code.indexOf('shift') >= 0 || code.indexOf('control') >= 0) {\n            return code.replace('left', '').replace('right', '');\n        }\n        return code;\n    }\n\n    /**\n     * Update the list of the last keys in combinations to allow for prevent default actions on pre-existing hotkeys\n     */\n    private updateCombinationEndList(): void {\n        const key_list = [];\n        for (const combo of this.registered_combos) {\n            this.combo_end.push(combo[combo.length - 1]);\n        }\n        this.combo_end = unique(key_list);\n    }\n\n    /**\n     * Checks if the given hotkey combination is allowed and valid\n     * @param combo Array of key codes\n     */\n    private validCombination(combo: string[]): boolean {\n        let non_meta = 0;\n        for (const key of combo) {\n            /* istanbul ignore else */\n            if (INVALID_STANDALONE_KEYS.indexOf(key) < 0) {\n                non_meta++;\n            }\n        }\n        return non_meta > 0;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { HashMap } from '../shared/utilities/types.utilities';\nimport { getItemWithKeys } from '../shared/utilities/general.utilities';\nimport { BaseClass } from '../shared/base.class';\nimport { VERSION } from 'src/environments/version';\n\nimport * as dayjs from 'dayjs';\n\ninterface SettingsMap {\n    api: HashMap;\n    local: HashMap;\n    session: HashMap;\n    [block: string]: HashMap;\n}\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n    }\n}\n\nexport type ConsoleStream = 'debug' | 'warn' | 'log' | 'error';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SettingsService extends BaseClass {\n\n    /** Map of settings */\n    private _settings: SettingsMap = { api: {}, local: {}, session: {} };\n    /** Store for promises */\n    private _promises: { [name: string]: Promise<any> } = {};\n    /** Name of the application */\n    private _app_name = 'PlaceOS';\n\n    constructor(private http: HttpClient) {\n        super();\n        const now = dayjs();\n        const build = dayjs(VERSION.time);\n        const built = now.isSame(build, 'd') ? `Today at ${build.format('h:mmA')}` : build.format('D MMM YYYY, h:mmA');\n        this.log('CORE', `${VERSION.core_version}`, null, 'debug', true);\n        this.log('APP', `${VERSION.version} - ${VERSION.hash} | Built: ${built}`, null, 'debug', true);\n        this.init();\n    }\n\n    /**\n     * Initialise the settings\n     */\n    public async init() {\n        await this.loadFromFile('api');\n        if (this._settings.api.debug) {\n            window.debug = true;\n        }\n        if (this._settings.api.app && this._settings.api.app.name) {\n            this._app_name = this._settings.api.app.name;\n        }\n        this.log('Settings', 'Successfully loaded settings');\n        this._initialised.next(true);\n    }\n\n    /** Whether settings service has initialised */\n    public get app_name() { return this._app_name; }\n\n    /**\n     * Log data to the browser console\n     * @param type Type of message\n     * @param msg Message body\n     * @param args array of argments to log to the console\n     * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\n     * @param force Whether to force message to be emitted when debug is disabled\n     */\n    public log(type: string, msg: string, args?: any, stream: ConsoleStream = 'debug', force: boolean = false) {\n        if (window.debug || force) {\n            const colors: string[] = ['color: #E91E63', 'color: #3F51B5', 'color: default'];\n            if (args) {\n                console[stream](`%c[${this.app_name}]%c[${type}] %c${msg}`, ...colors, args);\n            } else {\n                console[stream](`%c[${this.app_name}]%c[${type}] %c${msg}`, ...colors);\n            }\n        }\n    }\n\n    /**\n     * Get a setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public get(key: string): any {\n        const keys = key.split('.');\n        let value = null;\n        if (keys[0] === 'session') {\n            keys.shift();\n            value = getItemWithKeys(keys, this._settings.session);\n        } else if (keys[0] === 'local') {\n            keys.shift();\n            value = getItemWithKeys(keys, this._settings.local);\n        } else {\n            value = getItemWithKeys(keys, this._settings.api) ||\n                getItemWithKeys(keys, this._settings.session) ||\n                getItemWithKeys(keys, this._settings.local);\n        }\n        return value;\n    }\n\n    /**\n     * Load setting data from a file\n     * @param name Namespace to add file data to\n     * @param file URL to file to load setting data from\n     */\n    private async loadFromFile(name: string, file: string = 'assets/settings.json', tries: number = 0) {\n        if (file !== 'assets/settings.json' && tries > 5) {\n            return Promise.resolve();\n        }\n        const file_name = file.split('/')[file.split('/').length - 1];\n        // Check if data has been loaded into the global space\n        if (window[file_name] instanceof Object) {\n            this._settings[name] = { ...(this._settings[name] || {}), ...window[file_name] };\n            return Promise.resolve();\n        }\n        const key = `load|${name}|${file}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<void>((resolve, reject) => {\n                this.http.get(file).subscribe(\n                    (data) => {\n                        this._settings[name] = { ...(this._settings[name] || {}), ...(data || {}) };\n                    }, (e) => {\n                        this.log('Settings', `Failed to load settings from \"${file}\"`);\n                        this._promises[key] = null;\n                        this.timeout(`load_${file_name}`, () => {\n                            this.loadFromFile(name, file, ++tries).then(() => resolve());\n                        })\n                    }, () => resolve()\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n}\n","import { Subscription, BehaviorSubject } from \"rxjs\";\n\nexport class BaseClass {\n    /** Store for named timers */\n    protected _timers: { [name: string]: number } = {};\n    /** Store for named intervals */\n    protected _intervals: { [name: string]: number } = {};\n    /** Store for named subscription unsub callbacks */\n    protected _subscriptions: { [name: string]: (Subscription | (() => void)) } = {};\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n\n    /** Observable of the initialised state of the object */\n    public get initialised(): BehaviorSubject<boolean> {\n        return this._initialised;\n    }\n    /** Whether the object has been initialised */\n    public get is_initialised(): boolean {\n        return this._initialised.getValue();\n    }\n\n    protected destroy() {\n        for (const key in this._timers) {\n            if (this._timers.hasOwnProperty(key)) {\n                this.clearTimeout(key);\n            }\n        }\n        for (const key in this._intervals) {\n            if (this._intervals.hasOwnProperty(key)) {\n                this.clearInterval(key);\n            }\n        }\n        for (const key in this._subscriptions) {\n            if (this._subscriptions.hasOwnProperty(key)) {\n                this.unsub(key);\n            }\n        }\n    }\n\n    /**\n     * Creates a named timer\n     * @param name Name of the timer\n     * @param fn Callback function for the timer\n     * @param delay Callback delay\n     */\n    protected timeout(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearTimeout(name);\n            this._timers[name] = <any>setTimeout(() => {\n                fn();\n                this._timers[name] = null;\n            }, delay);\n        } else {\n            throw new Error(\n                name ? 'Cannot create named timeout without a name' : 'Cannot create a timeout without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named timer\n     * @param name Timer name\n     */\n    protected clearTimeout(name: string) {\n        if (this._timers[name]) {\n            clearTimeout(this._timers[name]);\n            this._timers[name] = null;\n        }\n    }\n\n    /**\n     * Creates a named interval\n     * @param name Name of the interval\n     * @param fn Callback function for the interval\n     * @param delay Callback delay\n     */\n    protected interval(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearInterval(name);\n            this._intervals[name] = <any>setInterval(() => fn(), delay);\n        } else {\n            throw new Error(\n                name ? 'Cannot create named interval without a name' : 'Cannot create a interval without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named interval\n     * @param name Timer name\n     */\n    protected clearInterval(name: string) {\n        if (this._intervals[name]) {\n            clearInterval(this._intervals[name]);\n            this._intervals[name] = null;\n        }\n    }\n\n    /**\n     * Store named subscription\n     * @param name Name of the subscription\n     * @param unsub Unsubscribe callback or Subscription object\n     */\n    protected subscription(name: string, unsub: Subscription | (() => void)) {\n        this.unsub(name);\n        this._subscriptions[name] = unsub\n    }\n\n    /**\n     * Call unsubscribe callback with the given name\n     * @param name\n     */\n    protected unsub(name: string) {\n        if (this._subscriptions && this._subscriptions[name]) {\n            this._subscriptions[name] instanceof Subscription\n                ? (this._subscriptions[name] as Subscription).unsubscribe()\n                : (this._subscriptions[name] as any)();\n            this._subscriptions[name] = null;\n        }\n    }\n}\n","\nimport { Directive, OnDestroy } from '@angular/core';\nimport { BaseClass } from './base.class';\n\n@Directive({\n    selector: 'a-very-basic-component-base-that-should-not-be-used'\n})\nexport class BaseDirective extends BaseClass implements OnDestroy {\n    public ngOnDestroy(): void {\n        this.destroy();\n    }\n}\n\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\n@Component({\n  selector: 'an-action-field',\n  templateUrl: './action-field.component.html',\n  styleUrls: ['./action-field.component.scss']\n})\nexport class ActionFieldComponent extends BaseDirective {\n    /** Name of the field */\n    @Input() public name: string;\n    /** Value to display on the field */\n    @Input() public placeholder: string;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Emitter for user interaction events */\n    @Output('onAction') public on_action = new EventEmitter();\n    /** Whether to show tooltip */\n    public show_tooltip = false;\n\n    /**\n     * Emit that the user has performed an action on the field\n     */\n    public performAction() {\n        this.show_tooltip = !this.show_tooltip;\n        this.on_action.emit();\n    }\n}\n","<div\n    class=\"action-field\"\n    role=\"button\"\n    [attr.disabled]=\"disabled\"\n    form-field\n    tabindex=\"0\"\n    (keydown.enter)=\"performAction()\"\n    (click)=\"performAction()\"\n>\n    <div class=\"display\">{{ placeholder }}</div>\n    <div class=\"icon\">\n        <app-icon\n            [icon]=\"{\n                type: 'icon',\n                class: 'material-icons',\n                content: show_tooltip ? 'arrow_drop_up' : 'arrow_drop_down'\n            }\"\n        ></app-icon>\n    </div>\n</div>\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n  selector: 'a-counter',\n  templateUrl: './counter.component.html',\n  styleUrls: ['./counter.component.scss'],\n  providers: [\n      {\n          provide: NG_VALUE_ACCESSOR,\n          /* istanbul ignore next */\n          useExisting: forwardRef(() => CounterComponent),\n          multi: true\n      }\n  ]\n})\nexport class CounterComponent implements ControlValueAccessor {\n    /** Size of a single step */\n    @Input() public step: number = 1;\n    /** Maximum amount for the counter */\n    @Input() public max: number = 10;\n    /** Minimum amount for the counter */\n    @Input() public min: number = 0;\n    /** Current value of the counter */\n    public value: number;\n    /** Whether shift key is being held by the user */\n    public shift_key: boolean;\n    /** Whether control key is being held by the user */\n    public ctrl_key: boolean;\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /**\n     * Add the `step` to the current value\n     */\n    public add() {\n        if (!this.value) { this.value = this.min || 0 }\n        const step = this.ctrl_key ? 100 : this.shift_key ? 10 : this.step || 1;\n        this.value += step;\n        if (this.value > this.max) {\n            this.value = this.max || 10;\n        }\n        this.setValue(this.value);\n    }\n\n    /** Remove the `step` from the current value */\n    public remove() {\n        if (!this.value) { this.value = this.min || 0 }\n        const step = this.ctrl_key ? 100 : this.shift_key ? 10 : this.step || 1;\n        this.value -= step;\n        if (this.value < this.min) {\n            this.value = this.min || 0;\n        }\n        this.setValue(this.value);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.value = value;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n}\n","<div\n    class=\"counter\"\n    (window:keydown.shift)=\"shift_key = true\"\n    (window:keydown.control)=\"ctrl_key = true\"\n    (window:keydown.meta)=\"ctrl_key = true\"\n    (window:keyup.shift)=\"shift_key = false\"\n    (window:keyup.control)=\"ctrl_key = false\"\n    (window:keyup.meta)=\"ctrl_key = false\"\n>\n    <button mat-icon-button name=\"remove\" [disabled]=\"!value || value === min\" (click)=\"remove()\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'remove' }\"></app-icon>\n    </button>\n    <div class=\"value\">\n        {{ value || '0' }}\n    </div>\n    <button mat-icon-button name=\"add\" [disabled]=\"value === max\" (click)=\"add()\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'add' }\"></app-icon>\n    </button>\n</div>\n","import { Component, OnInit, forwardRef, Input, ViewChild } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\nimport * as dayjs from 'dayjs';\nimport { MatMenuTrigger } from '@angular/material/menu';\n\n@Component({\n    selector: 'a-date-field',\n    templateUrl: './date-field.component.html',\n    styleUrls: ['./date-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateFieldComponent),\n            multi: true\n        }\n    ]\n})\nexport class DateFieldComponent extends BaseDirective implements OnInit, ControlValueAccessor {\n    /** Earliest date available the user is allowed to pick */\n    @Input('from') public _from: number = dayjs().valueOf();\n    /** Latest date available the user is allowed to pick */\n    @Input('to') public _to: number;\n    /** Position of the tooltip */\n    @Input() public position: 'right' | 'left' = 'right';\n    /** Offset of the tooltip */\n    @Input() public offset: 'top' | 'bottom' = 'bottom';\n    /** Whether form control is disabled */\n    @Input() public disabled: boolean;\n    /** Whether to show the calendar tooltip */\n    public show_tooltip: boolean;\n    /** Currently selected date */\n    public date: number;\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    @ViewChild(MatMenuTrigger, { static: true }) private _trigger: MatMenuTrigger;\n\n    /** First allowed date on the calendar */\n    public get from(): number {\n        return this._from || dayjs().startOf('d').valueOf();\n    }\n    /** Current date value */\n    public get until(): number {\n        return this._to || dayjs().endOf('d').add(1, 'y').valueOf();\n    }\n    /** Display value for the current date */\n    public get date_string(): string {\n        return dayjs(this.date).format('DD MMM YYYY');\n    }\n\n    /** Whether date picker is open */\n    public get is_open(): boolean {\n        return this._trigger.menuOpen;\n    }\n\n    public ngOnInit() {\n        this.date = dayjs().valueOf();\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number) {\n        // Keep hours and minutes of the old date\n        const old_date = dayjs(this.date);\n        let new_date = dayjs(new_value)\n            .hour(old_date.hour())\n            .minute(old_date.minute())\n            .valueOf();\n        // Check that new date is before from\n        if (new_date < this.from) {\n            new_date = this.from;\n        }\n        this.date = new_date;\n        if (this._onChange) {\n            this._onChange(new_date);\n        }\n        this.show_tooltip = false;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value;\n        this.show_tooltip = false;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /** Set the state of the tooltip to closed after delay */\n    public closeDatePicker() {\n        this._trigger.closeMenu();\n    }\n\n    /** Set the state of the tooltip to closed after delay */\n    public openDatePicker() {\n        this._trigger.openMenu();\n    }\n}\n","<div\n    class=\"date-field\"\n    role=\"button\"\n    form-field\n    tabindex=\"0\"\n    [class.active]=\"is_open\"\n    [attr.disabled]=\"disabled\"\n    (keydown.enter)=\"openDatePicker()\"\n    [matMenuTriggerFor]=\"appMenu\"\n>\n    <div class=\"display\">{{ date_string }}</div>\n    <div class=\"icon\">\n        <app-icon\n            [icon]=\"{\n                type: 'icon',\n                class: 'material-icons',\n                content: is_open ? 'arrow_drop_up' : 'arrow_drop_down'\n            }\"\n        ></app-icon>\n    </div>\n</div>\n<mat-menu #appMenu=\"matMenu\">\n    <div mat-menu-item class=\"date-picker\" (click)=\"$event.stopPropagation()\">\n        <a-date-picker\n            [ngModel]=\"date\"\n            [options]=\"{ from: from, to: until }\"\n            (ngModelChange)=\"setValue($event); closeDatePicker()\"\n        ></a-date-picker>\n    </div>\n</mat-menu>\n","import { Component, OnInit, forwardRef, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { humaniseDuration, timeFormatString } from 'src/app/shared/utilities/general.utilities';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-duration-field',\n    templateUrl: './duration-field.component.html',\n    styleUrls: ['./duration-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DurationFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DurationFieldComponent extends BaseDirective\n    implements OnInit, OnChanges, ControlValueAccessor {\n    /** Maximum duration option available */\n    @Input() public max: number = 240;\n    /** Minimum duration option available */\n    @Input() public min: number = 15;\n    /** Step value between options */\n    @Input() public step: number = 15;\n    /** Reference time for displaying next to durations */\n    @Input() public time: number;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Special case prepopulation i.e. out of step options */\n    @Input() public specialPreprops: Array<number> = [];\n\n    public duration: number = 60;\n    /** List of available duration options */\n    public duration_options: Identity[];\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    public ngOnInit(): void {\n        this.duration_options = this.generateDurationOptions(this.max, this.min, this.step);\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.max || changes.min || changes.step || changes.time) {\n            this.duration_options = this.generateDurationOptions(this.max, this.min, this.step);\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.duration = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(+new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.duration = value;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    private generateDurationOptions(max: number, min: number, step: number): Identity[] {\n        const blocks: Identity[] = [];\n        let time = min;\n        let date = this.time ? dayjs(this.time) : null;\n\n        // Add special case for 10min duration/prepropulation\n        for(const option of this.specialPreprops){\n            blocks.push({\n                id: option,\n                name: date\n                    ? `${date.add(option, 'm').format(timeFormatString())} (${humaniseDuration(option)})`\n                    : `${humaniseDuration(option)}`,\n            });\n        }\n\n\n\n        while (time <= max) {\n            blocks.push({\n                id: time,\n                name: date\n                    ? `${date.add(time, 'm').format(timeFormatString())} (${humaniseDuration(time)})`\n                    : `${humaniseDuration(time)}`,\n            });\n            time += step;\n        }\n        blocks.push({ id: 7 * 24 * 60, name: '1 week' });\n        return blocks;\n    }\n}\n","<div class=\"duration-field\" [attr.disabled]=\"disabled\">\n    <mat-form-field appearance=\"outline\">\n        <mat-select #select [value]=\"duration\" [disabled]=\"disabled\" (valueChange)=\"setValue($event)\">\n            <mat-option *ngFor=\"let option of duration_options\" [value]=\"option.id\">\n                {{ option.name }}\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n</div>\n","import { Component, forwardRef, Input, ViewChild, OnInit, SimpleChanges, OnChanges } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { MatSelect } from '@angular/material/select';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { timeFormatString } from 'src/app/shared/utilities/general.utilities';\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-time-field',\n    templateUrl: './time-field.component.html',\n    styleUrls: ['./time-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => TimeFieldComponent),\n            multi: true\n        }\n    ]\n})\nexport class TimeFieldComponent extends BaseDirective implements OnInit, OnChanges, ControlValueAccessor {\n    /** Time step between each allowed time option */\n    @Input() public step: number = 15;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Whether past times are allowed */\n    @Input() public no_past_times: boolean = true;\n    /** String representing the currently set time */\n    public date: number = dayjs().valueOf();\n    /** String representing the currently set time */\n    public time: string = dayjs().format('HH:mm');\n    /** Available time blocks for the selected date */\n    public _time_options: Identity[];\n    /** Whether select field should be shown */\n    public show_select: boolean;\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /** Select field for selecting the time */\n    @ViewChild('select') private select_field: MatSelect;\n\n    public ngOnInit(): void {\n        this.show_select = true;\n        this._time_options = this.generateAvailableTimes(this.date, !this.no_past_times, this.step);\n        this.timeout('hide', () => this.show_select = false);\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.no_past_times || changes.step) {\n            this._time_options = this.generateAvailableTimes(this.date, !this.no_past_times, this.step);\n        }\n    }\n\n    /** Available time blocks for the selected date */\n    public get time_options() {\n        const time = (this.time || '00:00').split(':');\n        const date = dayjs(this.date).hour(+time[0]).minute(+time[1]);\n        if (date.minute() % 15 !== 0 && !this._time_options.find(time => time.id === date.format('HH:mm'))) {\n            this._time_options.push({\n                name: `${date.format(timeFormatString())}`,\n                id: date.format('HH:mm')\n            });\n            this._time_options.sort((a, b) => `${a.id}`.localeCompare(`${b.id}`));\n        }\n        return this._time_options;\n    }\n\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        this.time = new_value;\n        if (this._onChange) {\n            const time = (this.time || '00:00').split(':');\n            const date = dayjs(this.date).hour(+time[0]).minute(+time[1]).startOf('m');\n            this._onChange(date.valueOf());\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value;\n        let date = dayjs(this.date).startOf('m');\n        date = date.minute(Math.ceil(date.minute() / 5) * 5);\n        this.time = date.format('HH:mm');\n        this._time_options = this.generateAvailableTimes(this.date, !this.no_past_times, this.step);\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    /**\n     * Show select field for time options\n     */\n    public showSelect() {\n        this.show_select = true;\n        this.timeout('on_shown', () => {\n            if (this.select_field) {\n                this.select_field.focus();\n                this.select_field.open();\n                this.subscription('listen_close', this.select_field.openedChange.subscribe((state) => {\n                    if (!state) {\n                        this.show_select = false;\n                    }\n                }));\n            }\n        })\n    }\n\n    /**\n     * Generate a list of time options for the given date\n     * @param datestamp Date to generate options for\n     * @param show_past Whether past times should be options\n     */\n    private generateAvailableTimes(datestamp: number, show_past: boolean, step: number = 15): Identity[] {\n        const now = dayjs();\n        let date = dayjs(datestamp);\n        const blocks = [];\n        if (show_past || date.isAfter(now, 'd')) {\n            date = date.startOf('d');\n        } else if (date.isAfter(now, 'm')) {\n            date = now;\n        }\n        date = date.minute(Math.ceil(date.minute() / step) * step);\n        const end = date.endOf('d');\n        // Add options for the rest of the day\n        while (date.isBefore(end, 'm')) {\n            blocks.push({\n                name: `${date.format(timeFormatString())}`,\n                id: date.format('HH:mm')\n            });\n            date = date.add(step, 'm');\n        }\n        return blocks;\n    }\n}\n","<div\n    class=\"time-field\"\n    role=\"button\"\n    [style.display]=\"show_select ? 'none' : ''\"\n    [attr.disabled]=\"disabled\"\n    form-field\n    tabindex=\"0\"\n    (keydown.enter)=\"showSelect()\"\n>\n    <div class=\"display\">\n        <input\n            matInput\n            type=\"time\"\n            [disabled]=\"disabled\"\n            [ngModel]=\"time\"\n            (ngModelChange)=\"setValue($event)\"\n        />\n    </div>\n    <div class=\"icon\" (click)=\"showSelect()\">\n        <app-icon\n            [icon]=\"{\n                type: 'icon',\n                class: 'material-icons',\n                content: show_select ? 'arrow_drop_up' : 'arrow_drop_down'\n            }\"\n        ></app-icon>\n    </div>\n</div>\n<mat-form-field appearance=\"outline\" *ngIf=\"show_select\">\n    <mat-select #select [value]=\"time\" [disabled]=\"disabled\" (valueChange)=\"setValue($event)\">\n        <mat-option *ngFor=\"let option of time_options\" [value]=\"option.id\">\n            {{ option.name }}\n        </mat-option>\n    </mat-select>\n</mat-form-field>\n","import { Component, OnInit, forwardRef, Output, EventEmitter, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subject, Observable, of } from 'rxjs';\nimport { switchMap, debounceTime, distinctUntilChanged, map, catchError } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport {\n    filterList,\n    matchToHighlight,\n    downloadFile,\n    csvToJson,\n} from 'src/app/shared/utilities/general.utilities';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: 'a-user-list-field',\n    templateUrl: './user-list-field.component.html',\n    styleUrls: ['./user-list-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UserListFieldComponent extends BaseDirective implements OnInit, ControlValueAccessor {\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Number of characters needed before a search will start */\n    @Input() public limit: number = 3;\n    /** Emitter for action to make a new user */\n    @Output('newUser') public new_user = new EventEmitter<void>();\n\n    /** User list to display */\n    public user_list: User[];\n    /** List of active selected users on the list */\n    public active_list: User[];\n    /** Whether user list is loading */\n    public loading: boolean;\n    /** String  */\n    public search_str: string;\n    /** List of users from an API search */\n    public search_results$: Observable<User[]>;\n    /** Subject holding the value of the search */\n    public search$ = new Subject<string>();\n\n    /** Form control on change handler */\n    private _onChange: (_: User[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User[]) => void;\n\n    constructor(private _service: ApplicationService, private _users: UsersService) {\n        super();\n    }\n\n    ngOnInit() {\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(400),\n            distinctUntilChanged(),\n            switchMap((query) => {\n                this.loading = true;\n                return query.length >= this.limit\n                    ? this._users.query({\n                          q: query.slice(0, Math.max(this.limit, 3)),\n                          cache: 60 * 1000,\n                      })\n                    : Promise.resolve([]);\n            }),\n            catchError((_) => of([])),\n            map((list: User[]) => {\n                this.loading = false;\n                return filterList(this.search_str, list, ['name', 'email']);\n            })\n        );\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe((list) => {\n                this.user_list = list;\n                this.user_list.forEach((i: any) => {\n                    i.match_name = matchToHighlight(i.match_name);\n                    i.match_email = matchToHighlight(i.match_email);\n                    return i;\n                });\n            })\n        );\n    }\n\n    /**\n     * Add user to the user list\n     * @param user\n     */\n    public addUser(user: User) {\n        /* istanbul ignore else */\n        if (!this.active_list) {\n            this.active_list = [];\n        }\n        const index = this.active_list.findIndex((a_user) => a_user.id === user.id);\n        /* istanbul ignore else */\n        if (index < 0) {\n            this.active_list = [...this.active_list, user];\n        }\n        this.setValue(this.active_list);\n        this.search_str = '';\n    }\n\n    /**\n     * Remove user from the user list\n     * @param user\n     */\n    public removeUser(user: User) {\n        this.active_list = this.active_list.filter((a_user) => a_user.id !== user.id);\n        this.setValue(this.active_list);\n    }\n\n    /**\n     * Load CSV file and populate the user list with the contents\n     * @param event File input field event\n     */\n    public addUsersFromFile(event) {\n        /* istanbul ignore else */\n        if (event.target) {\n            const file = event.target.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    this.processCsvData((evt.srcElement as any).result);\n                    event.target.value = '';\n                });\n                reader.addEventListener('error', (_) =>\n                    this._service.notifyError('Error reading file.')\n                );\n            }\n        }\n    }\n\n    /**\n     * Process raw CSV data and save user data to attendee list\n     * @param data CSV data\n     */\n    private processCsvData(data: string) {\n        const list = csvToJson(data) || [];\n        const id = this._users.current.staff_code;\n        list.forEach((el) => {\n            el.name = el.name || `${el.first_name} ${el.last_name}`;\n            const display = (el.name || `${Math.floor(Math.random() * 9999_9999)}`)\n                .split(' ')\n                .join('_')\n                .toLowerCase();\n            /* istanbul ignore else */\n            if (!el.email) {\n                el.email = `${display}+${id}@guest.mckinsey.com`;\n            }\n            el.type = 'external';\n            this.addUser(new User(el));\n        });\n    }\n\n    /* istanbul ignore next */\n    /** Download template CSV file */\n    public downloadCSVTemplate() {\n        const template = `Organisation Name,First Name,Last Name,Email,Phone\\nFake Org,John,Smith,john.smith@example.com,01234567898`;\n        downloadFile('template.csv', template);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User[]): void {\n        this.active_list = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User[]) {\n        this.active_list = value;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User[]) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User[]) => void): void {\n        this._onTouch = fn;\n    }\n}\n","<div class=\"user-list-field\" form-field [attr.disabled]=\"disabled\">\n    <mat-form-field appearance=\"outline\">\n        <input\n            matInput\n            name=\"user-search\"\n            type=\"text\"\n            [(ngModel)]=\"search_str\"\n            (ngModelChange)=\"search$.next($event)\"\n            [disabled]=\"disabled\"\n            placeholder=\"Search for user...\"\n            i18n-placeholder\n            [matAutocomplete]=\"auto\"\n        />\n        <div class=\"prefix\" matPrefix>\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'search' }\"\n            ></app-icon>\n        </div>\n        <div class=\"suffix\" matSuffix *ngIf=\"loading\">\n            <mat-spinner diameter=\"16\"></mat-spinner>\n        </div>\n    </mat-form-field>\n    <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"addUser($event.option.value)\">\n        <mat-option *ngFor=\"let option of user_list\" [value]=\"option\">\n            <div class=\"name\">{{ option.name }}</div>\n            <div class=\"email\">{{ option.email }}</div>\n        </mat-option>\n    </mat-autocomplete>\n    <div class=\"actions\">\n        <button type=\"button\" name=\"new-contact\" matRipple (click)=\"new_user.emit()\" i18n=\"Add new external attendee\">\n            Add External\n        </button>\n        <button type=\"button\" name=\"upload-csv\" matRipple i18n=\"Upload attendee list from CSV file\">\n            Upload CSV\n            <input type=\"file\" (change)=\"addUsersFromFile($event)\" />\n        </button>\n        <button type=\"button\" name=\"download-template\" matRipple (click)=\"downloadCSVTemplate()\" i18n=\"Download template CSV file\">\n            CSV Template\n        </button>\n    </div>\n    <div class=\"user-list\">\n        <mat-chip-list\n            aria-label=\"User List\"\n            *ngIf=\"active_list && active_list.length; else empty_state\"\n        >\n            <mat-chip\n                *ngFor=\"let user of active_list\"\n                [id]=\"user.email\"\n                [color]=\"user.external ? 'accent' : 'primary'\"\n                [removable]=\"true\"\n                (removed)=\"removeUser(user)\"\n            >\n                {{ user.name }}\n                <app-icon\n                    matChipRemove\n                    [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"\n                ></app-icon>\n            </mat-chip>\n        </mat-chip-list>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div i18n=\"Attendee empty state\">No attendees</div>\n</ng-template>\n","import { Component, OnInit, forwardRef, Input } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { Subject, Observable, of } from 'rxjs';\nimport { switchMap, debounceTime, distinctUntilChanged, map, catchError } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { filterList, matchToHighlight } from 'src/app/shared/utilities/general.utilities';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: 'a-user-search-field',\n    templateUrl: './user-search-field.component.html',\n    styleUrls: ['./user-search-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserSearchFieldComponent),\n            multi: true\n        }\n    ]\n})\nexport class UserSearchFieldComponent extends BaseDirective implements OnInit, ControlValueAccessor {\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Limit available options to these */\n    @Input() public options: User[];\n    /** Currently selected user */\n    public active_user: User;\n    /** User list to display */\n    public user_list: User[];\n    /** Whether user list is loading */\n    public loading: boolean;\n    /** Current display value of the search input field  */\n    public search_str: string;\n    /** List of users from an API search */\n    public search_results$: Observable<User[]>;\n    /** Subject holding the value of the search */\n    public search$ = new Subject<string>();\n\n    /** Form control on change handler */\n    private _onChange: (_: User) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User) => void;\n\n    constructor(private _users: UsersService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(400),\n            distinctUntilChanged(),\n            switchMap(query => {\n                this.loading = true;\n                return this.options && this.options.length > 0\n                    ? Promise.resolve(this.options)\n                    : query.length >= 3\n                        ? (this._users.query({ q: query.slice(0, 3), cache: 60 * 1000 }) as Promise<User[]>)\n                        : Promise.resolve([]);\n            }),\n            catchError((err) => of([])),\n            map((list: User[]) => {\n                this.loading = false;\n                return filterList(this.search_str, list, ['name', 'email']);\n            })\n        );\n        // Process API results\n        this.subscription('search_results', this.search_results$.subscribe(list => {\n            this.user_list = list;\n            this.user_list.forEach((i: any) => {\n                i.match_name = matchToHighlight(i.match_name);\n                i.match_email = matchToHighlight(i.match_email);\n                return i;\n            });\n        }));\n    }\n\n    /**\n     * Reset the search string back to the name of the active user\n     */\n    public resetSearchString() {\n        if (this.active_user) {\n            this.search_str = this.active_user.name;\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User): void {\n        this.active_user = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n        this.resetSearchString();\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User) {\n        this.active_user = value;\n        this.resetSearchString();\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User) => void): void {\n        this._onTouch = fn;\n    }\n}\n","<div class=\"user-search-field\" form-field>\n    <mat-form-field appearance=\"outline\">\n        <input\n            matInput\n            name=\"user-search\"\n            [(ngModel)]=\"search_str\"\n            (ngModelChange)=\"search$.next($event)\"\n            [disabled]=\"disabled\"\n            placeholder=\"Search for user...\"\n            i18n-placeholder\n            [matAutocomplete]=\"auto\"\n            (blur)=\"resetSearchString()\"\n        />\n        <div class=\"prefix\" matPrefix>\n            <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'search' }\"></app-icon>\n        </div>\n        <div class=\"suffix\" matSuffix *ngIf=\"loading\">\n            <mat-spinner diameter=\"16\"></mat-spinner>\n        </div>\n    </mat-form-field>\n    <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"setValue($event.option.value)\">\n        <mat-option *ngFor=\"let option of user_list\" [value]=\"option\">\n            <div class=\"name\">{{ option.name }}</div>\n            <div class=\"email\">{{ option.email }}</div>\n        </mat-option>\n    </mat-autocomplete>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\n\nimport { BaseDirective } from '../../base.directive';\n\n@Component({\n    selector: 'feedback',\n    templateUrl: './feedback.template.html',\n    styleUrls: ['./feedback.styles.scss']\n})\nexport class FeedbackComponent extends BaseDirective implements OnInit {\n    /** Name of the currently active page */\n    public current_page: string;\n\n    constructor(private _router: Router) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.timeout('Getting Title', () => this.updateRoute(document.title));\n        this._router.events.subscribe((event: NavigationEnd) => {\n            /* istanbul ignore else */\n            if (event instanceof NavigationEnd) {\n                this.timeout('Getting Title', () => this.updateRoute(document.title));\n            }\n        });\n    }\n\n    public updateRoute(location) {\n        location = location.substr(0, location.indexOf(' |'));\n        this.current_page = location;\n    }\n}\n","<a [href]=\"'mailto:converge_feedback@mckinsey.com?subject=Feedback for page: ' + current_page\">\n    <div class=\"feedback-button\">\n        <span class=\"text\" i18n>Feedback</span>\n        <span class=\"icon\">\n            <app-icon [icon]=\"{class:'material-icons', content: 'feedback'}\"></app-icon>\n        </span>\n    </div>\n</a>\n","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from '../../base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { ApplicationLink } from '../../utilities/settings.interfaces';\n\n@Component({\n    selector: 'a-footer-menu',\n    templateUrl: './footer-menu.component.html',\n    styleUrls: ['./footer-menu.component.scss']\n})\nexport class FooterMenuComponent extends BaseDirective implements OnInit {\n\n    /** Tiles to display on the home page */\n    public tiles: ApplicationLink[] = [];\n\n    constructor(private _service: ApplicationService) {\n        super();\n    }\n\n    /** Angular Component initialisation lifecycle hook */\n    public ngOnInit(): void {\n        this._service.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.tiles = this._service.setting('app.home.tiles') || [];\n        });\n    }\n}\n","<div class=\"footer-menu\" *ngIf=\"tiles && tiles.length\">\n    <ng-container *ngFor=\"let item of tiles\">\n        <a *ngIf=\"item.route\" [routerLink]=\"[item.route]\" routerLinkActive=\"active\">\n            <div class=\"tile\">\n                <div class=\"icon\">\n                    <app-icon [icon]=\"item.icon\"></app-icon>\n                </div>\n                <div class=\"text\">{{ item.name }}</div>\n            </div>\n        </a>\n        <a *ngIf=\"!item.route\" [href]=\"item.link | safe: 'url'\">\n            <div class=\"tile\">\n                <div class=\"icon\">\n                    <app-icon [icon]=\"item.icon\"></app-icon>\n                </div>\n                <div class=\"text\">{{ item.name }}</div>\n            </div>\n        </a>\n    </ng-container>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from '../../../base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { NewUserModalComponent } from 'src/app/overlays/new-user-modal/new-user-modal.component';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\nimport { User } from 'src/app/services/data/users/user.class';\nimport {\n    SpaceSelectModalComponent,\n    SpaceSelectModalData,\n} from 'src/app/overlays/space-select-modal/space-select-modal.component';\nimport {\n    RecurrenceModalData,\n    RecurrenceModalComponent,\n} from 'src/app/overlays/recurrence-modal/recurrence-modal.component';\nimport { UsersService } from 'src/app/services/data/users/users.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nimport * as dayjs from 'dayjs';\nimport { formatRecurrence } from 'src/app/shared/utilities/formatting.utilities';\n\n@Component({\n    selector: 'a-booking-form',\n    templateUrl: './booking-form.component.html',\n    styleUrls: ['./booking-form.component.scss'],\n})\nexport class BookingFormComponent extends BaseDirective {\n    /** Form fields for booking */\n    @Input() public form: FormGroup;\n    /** List of available users to host bookings */\n    public user_list: User[] = [];\n    /** From date input for date field */\n    public from_date: number = dayjs().minute(Math.ceil(dayjs().minute() / 5) * 5).valueOf();\n\n    constructor(\n        private _service: ApplicationService,\n        private _users: UsersService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._users.initialised.pipe(first((_) => _)).subscribe(() => {\n            const user: User = this._users.current;\n            const delegates = user.delegates.map(\n                (email) => this._users.find(email) || new User({ email, name: email.split('@')[0] })\n            );\n            this.user_list = [user].concat(delegates);\n        });\n    }\n\n    /** Display string for the recurrence value of the booking */\n    public get recurrence(): string {\n        const recurrence = this.form.controls.recurrence\n            ? this.form.controls.recurrence.value\n            : null;\n        return formatRecurrence(recurrence);\n    }\n\n    /** Whether notes and description should use the HTML editor */\n    public get use_html(): boolean {\n        return this._service.setting('app.booking.html_body') || false;\n    }\n\n    /** List of available types for bookings */\n    public get booking_types(): Identity[] {\n        return this._service.setting('app.booking.booking_types') || [];\n    }\n\n    /** Display string for the list of active spaces */\n    public get spaces(): string {\n        const spaces = this.form.controls.space_list.value;\n        return spaces.length === 1\n            ? spaces[0].name\n            : spaces.length > 1\n            ? `${spaces.length} spaces selected`\n            : 'No Spaces selected';\n    }\n\n    /**\n     * Open modal to change the space details for the booking\n     */\n    public openSpacesModal(): void {\n        const ref = this._dialog.open<SpaceSelectModalComponent, SpaceSelectModalData>(\n            SpaceSelectModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                maxWidth: '95vw',\n                data: {\n                    spaces: this.form.controls.space_list.value,\n                    date: this.form.controls.date.value,\n                    duration: this.form.controls.duration.value,\n                    host: this.form.controls.organiser.value,\n                    multiple: true,\n                },\n            }\n        );\n        this.subscription(\n            'new_spaces',\n            ref.componentInstance.event.subscribe((event) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    let space_list = this.form.controls.space_list.value;\n                    space_list = event.metadata;\n                    this.form.controls.space_list.setValue(unique(space_list, 'id'));\n                    ref.close();\n                    this.unsub('new_spaces');\n                }\n            })\n        );\n    }\n\n    /**\n     * Open modal to change the recurrence details for the booking\n     */\n    public openRecurrenceModal() {\n        const ref = this._dialog.open<RecurrenceModalComponent, RecurrenceModalData>(\n            RecurrenceModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                maxWidth: '95vw',\n                data: {\n                    details: this.form.controls.recurrence.value,\n                    date: this.form.controls.date.value,\n                },\n            }\n        );\n        this.subscription(\n            'recurrence',\n            ref.componentInstance.event.subscribe((event) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    this.form.controls.recurrence.setValue(\n                        event.metadata && event.metadata.period !== 'none' ? event.metadata : {}\n                    );\n                    ref.close();\n                    this.unsub('recurrence');\n                }\n            })\n        );\n    }\n\n    /**\n     * Open modal to change the recurrence details for the booking\n     */\n    public openNewUserModal() {\n        const ref = this._dialog.open<NewUserModalComponent>(NewUserModalComponent, {\n            width: 'auto',\n            height: 'auto',\n        });\n        this.subscription(\n            'new_user',\n            ref.componentInstance.event.subscribe((event) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    const attendees = this.form.controls.attendees.value;\n                    attendees.push(event.metadata);\n                    this.form.controls.attendees.setValue(unique(attendees, 'email'));\n                    ref.close();\n                    this.unsub('new_user');\n                }\n            })\n        );\n    }\n}\n","<div class=\"booking-form\" *ngIf=\"form\" [formGroup]=\"form\">\n    <div\n        class=\"field\"\n        *ngIf=\"form.controls.id && form.controls.id.value && form.controls.space_list\"\n    >\n        <label for=\"spaces\" i18n=\"Booking form spaces label\">Spaces: </label>\n        <an-action-field\n            name=\"spaces\"\n            [placeholder]=\"spaces\"\n            (onAction)=\"openSpacesModal()\"\n        ></an-action-field>\n    </div>\n    <div class=\"field\" name=\"title\" *ngIf=\"form.controls.title\">\n        <label\n            for=\"title\"\n            [class.error]=\"form.controls.title.invalid && form.controls.title.touched\"\n            i18n=\"Booking form title label\"\n        >\n            Title<span>*</span>:\n        </label>\n        <mat-form-field appearance=\"outline\">\n            <input matInput name=\"title\" placeholder=\"Meeting Title\" i18n-placeholder formControlName=\"title\" />\n\n            <mat-error *ngIf=\"form.controls.title.invalid\" i18n=\"Booking form title error\"\n                >Title is required</mat-error\n            >\n        </mat-form-field>\n    </div>\n    <div class=\"group date\">\n        <div class=\"field\" name=\"date\" *ngIf=\"form.controls.date\">\n            <label for=\"date\" i18n=\"Booking form date label\">Date: </label>\n            <a-date-field [from]=\"from_date\" name=\"date\" formControlName=\"date\"></a-date-field>\n        </div>\n        <div class=\"field\" name=\"recurrence\" *ngIf=\"form.controls.recurrence\">\n            <label for=\"recurrence\" i18n=\"Booking form recurrence label\">Recurrence: </label>\n            <an-action-field\n                name=\"recurrence\"\n                [placeholder]=\"recurrence\"\n                (onAction)=\"openRecurrenceModal()\"\n            ></an-action-field>\n        </div>\n    </div>\n    <div class=\"group time\">\n        <div class=\"field\" name=\"start-time\" *ngIf=\"form.controls.date\">\n            <label for=\"start-time\" i18n=\"Booking form start time label\">Start Time: </label>\n            <a-time-field\n                name=\"start-time\"\n                [disabled]=\"form.controls.all_day?.value\"\n                [ngModel]=\"form.controls.date.value\"\n                (ngModelChange)=\"form.controls.date.setValue($event)\"\n                [ngModelOptions]=\"{ standalone: true }\"\n            ></a-time-field>\n            <div class=\"error info\" *ngIf=\"form.controls.date.touched && form.controls.date.invalid\">\n                Date and time must be in the future\n            </div>\n        </div>\n        <div class=\"field\" name=\"duration\" *ngIf=\"form.controls.duration\">\n            <div class=\"label-group\">\n                <label for=\"duration\" i18n=\"Booking form duration label\">Duration: </label>\n                <mat-checkbox\n                    formControlName=\"all_day\"\n                    *ngIf=\"form.controls.all_day\"\n                    i18n=\"Booking form all day label\"\n                    >All day booking</mat-checkbox\n                >\n            </div>\n            <a-duration-field\n                name=\"duration\"\n                [max]=\"720\"\n                [time]=\"form.controls.date?.value\"\n                formControlName=\"duration\"\n                [specialPreprops]=\"[10]\"\n            ></a-duration-field>\n            <div class=\"error info\" *ngIf=\"form.controls.duration.touched && form.controls.duration.invalid\">\n                Duration is invalid. End time must be in the future\n            </div>\n        </div>\n    </div>\n    <div class=\"field\" name=\"organiser\" *ngIf=\"form.controls.organiser\">\n        <label for=\"organiser\" i18n=\"Booking form organiser label\">Host: </label>\n        <mat-form-field appearance=\"outline\">\n            <mat-select\n                name=\"organiser\"\n                formControlName=\"organiser\"\n                [placeholder]=\"form.controls.organiser.value.name || form.controls.organiser.value.email\"\n            >\n                <mat-option *ngFor=\"let user of user_list\" [value]=\"user\">\n                    {{ user.name || user.email }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    </div>\n    <div class=\"field\" name=\"attendees\" *ngIf=\"form.controls.attendees\">\n        <label for=\"attendees\" i18n=\"Booking form attendees label\">Attendees: </label>\n        <a-user-list-field\n            name=\"attendees\"\n            formControlName=\"attendees\"\n            (newUser)=\"openNewUserModal()\"\n        ></a-user-list-field>\n    </div>\n    <div class=\"field\" name=\"booking-type\" *ngIf=\"form.controls.booking_type && booking_types.length > 1\">\n        <label for=\"booking-type\" i18n=\"Booking form booking type label\">Booking Type: </label>\n        <mat-form-field appearance=\"outline\">\n            <mat-select name=\"booking-type\" formControlName=\"booking_type\">\n                <mat-option *ngFor=\"let type of booking_types\" [value]=\"type.id\">\n                    {{ type.name }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    </div>\n    <div class=\"field\" name=\"need-space\" *ngIf=\"form.controls.needs_space\">\n        <mat-checkbox formControlName=\"needs_space\" i18n=\"Booking form need space label\"\n            >Need a meeting space?</mat-checkbox\n        >\n    </div>\n    <div class=\"field\" name=\"has-catering\" *ngIf=\"form.controls.has_catering\">\n        <mat-checkbox\n            [disabled]=\"!form.controls.needs_space.value\"\n            formControlName=\"has_catering\"\n            i18n=\"Booking form need catering label\"\n        >\n            Need catering?\n        </mat-checkbox>\n    </div>\n    <div class=\"field\" name=\"body\" *ngIf=\"form.controls.body\">\n        <label for=\"body\" i18n=\"Booking form notes label\">Notes: </label>\n        <mat-form-field name=\"body\" appearance=\"outline\" *ngIf=\"!use_html; else html_editor\">\n            <textarea\n                matInput\n                name=\"description\"\n                placeholder=\"Meeting Description\"\n                i18n-placeholder\n                formControlName=\"body\"\n            ></textarea>\n        </mat-form-field>\n        <ng-template #html_editor>\n            <editor formControlName=\"body\"></editor>\n        </ng-template>\n    </div>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'user-form',\n  templateUrl: './user-form.component.html',\n  styleUrls: ['./user-form.component.scss']\n})\nexport class UserFormComponent {\n    /** Group of form fields used for creating the system */\n    @Input() public form: FormGroup;\n}\n","<div class=\"user form\" *ngIf=\"form\">\n    <form [formGroup]=\"form\">\n        <div class=\"field\" *ngIf=\"form.controls.name\">\n            <label\n                for=\"first-name\"\n                [class.error]=\"form.controls.name.invalid && form.controls.name.touched\"\n                i18n=\"User form first name label\"\n                >First Name:</label\n            >\n            <mat-form-field appearance=\"outline\">\n                <input\n                    matInput\n                    name=\"first-name\"\n                    placeholder=\"First name\"\n                    i18n-placeholder\n                    formControlName=\"first_name\"\n                />\n                <mat-error i18n=\"User form first name error\">First name is required</mat-error>\n            </mat-form-field>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.name\">\n            <label\n                for=\"system-name\"\n                [class.error]=\"form.controls.name.invalid && form.controls.name.touched\"\n                i18n=\"User form last name label\"\n                >Last Name:</label\n            >\n            <mat-form-field appearance=\"outline\">\n                <input\n                    matInput\n                    name=\"last-name\"\n                    placeholder=\"Last name\"\n                    i18n-placeholder\n                    formControlName=\"last_name\"\n                />\n                <mat-error i18n=\"User form last name error\">Last name is required</mat-error>\n            </mat-form-field>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.email\">\n            <label\n                for=\"email\"\n                [class.error]=\"form.controls.email.invalid && form.controls.email.touched\"\n                i18n=\"User form email label\"\n                >Email:</label\n            >\n            <mat-form-field appearance=\"outline\">\n                <input matInput name=\"email\" placeholder=\"Email Address\" i18n-placeholder formControlName=\"email\" />\n                <mat-error i18n=\"User form email error\">A valid email is required</mat-error>\n            </mat-form-field>\n        </div>\n    </form>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from '../../utilities/settings.interfaces';\nimport { BaseDirective } from '../../base.directive';\n\n@Component({\n    selector: 'app-icon',\n    templateUrl: './icon.component.html',\n    styleUrls: ['./icon.component.scss']\n})\nexport class IconComponent extends BaseDirective {\n    @Input() public icon: ApplicationIcon;\n}\n","<div class=\"app-icon\" *ngIf=\"icon\">\n    <i *ngIf=\"icon.type !== 'img'\" [class]=\"icon.class\">{{ icon.content }}</i>\n    <img *ngIf=\"icon.type === 'img'\" [src]=\"icon.src | safe:'resource'\" />\n</div>","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from '../../base.directive';\nimport { ApplicationIcon } from '../../utilities/settings.interfaces';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent extends BaseDirective implements OnInit {\n    /** Logo of the application organisation */\n    public logo: ApplicationIcon;\n    /** Whether the user credentials are being checked */\n    public loading: boolean;\n    /** Form fields for the login form */\n    public form: FormGroup;\n\n    constructor(private _service: ApplicationService, private _users: UsersService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.loading = true;\n        this.form = new FormGroup({\n            username: new FormControl('', [Validators.required]),\n            password: new FormControl('', [Validators.required]),\n        });\n        this._service.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.loading = false;\n            this.logo = this._service.setting('app.logo_light') || { type: 'icon' };\n        });\n    }\n\n    /** Perform user login */\n    public login() {\n        this.loading = true;\n        const form = this.form.value;\n        this._users.login({\n            username: form.username,\n            password: form.password\n        }, { form: true }).then(() => {\n            this.loading = false;\n        }, () => {\n            this.loading = false;\n            this.form.controls.password.setErrors({ check: true });\n        });\n    }\n\n}\n","<div class=\"login\">\n    <div class=\"login-form\">\n        <form [formGroup]=\"form\">\n            <div class=\"header\" [style.background-color]=\"logo?.background\">\n                <div class=\"logo\">\n                    <i *ngIf=\"logo?.type === 'icon'\" [class]=\"logo.class\">{{ logo.content }}</i>\n                    <img *ngIf=\"logo?.type === 'img'\" [src]=\"logo.src | safe: 'resource'\" />\n                </div>\n            </div>\n            <div class=\"body\">\n                <ng-container *ngIf=\"!loading; else loading_state\">\n                    <div class=\"field\">\n                        <label\n                            for=\"username\"\n                            [class.error]=\"\n                                form.controls.username.invalid && form.controls.username.touched\n                            \"\n                            i18n=\"Login form username label\"\n                        >\n                            Username:\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"username\"\n                                placeholder=\"Username/Email\"\n                                i18n-placeholder\n                                formControlName=\"username\"\n                            />\n                            <mat-error i18n=\"Login form username error\"\n                                >Username is required</mat-error\n                            >\n                        </mat-form-field>\n                    </div>\n                    <div class=\"field\">\n                        <label\n                            for=\"password\"\n                            [class.error]=\"\n                                form.controls.password.invalid && form.controls.password.touched\n                            \"\n                            i18n=\"Login form password label\"\n                        >\n                            Password:\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"password\"\n                                placeholder=\"Password\"\n                                i18n-placeholder\n                                formControlName=\"password\"\n                                (keyup.enter)=\"login()\"\n                            />\n                            <mat-error i18n=\"Login form password error\"\n                                >Invalid username or password</mat-error\n                            >\n                        </mat-form-field>\n                    </div>\n                </ng-container>\n            </div>\n            <div class=\"footer\" *ngIf=\"!loading\">\n                <button mat-button (click)=\"login()\" i18n=\"Login action\">Login</button>\n            </div>\n        </form>\n    </div>\n</div>\n<ng-template #loading_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <mat-spinner diameter=\"64\"></mat-spinner>\n        </div>\n        <div class=\"text\" i18n=\"Checking login status\">Checking user credentials...</div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { BuildingLevel } from 'src/app/services/data/organisation/level.class';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\n@Component({\n    selector: 'a-map-controls',\n    templateUrl: './map-controls.component.html',\n    styleUrls: ['./map-controls.component.scss']\n})\nexport class MapControlsComponent extends BaseDirective implements OnInit {\n    /** ID of the active building */\n    @Input() public building: string;\n    /** ID of the active level */\n    @Input() public level: string;\n    /** Emitter for changes to the active level */\n    @Output() public levelChange = new EventEmitter<string>();\n    /** Details of the active building */\n    public building_details: Building = this._org.building;\n    /** List of available buildings */\n    public building_list: Building[] = [];\n    /** List of available levels */\n    public level_list: readonly BuildingLevel[] = [];\n\n    public get can_select_building(): boolean {\n        return !!this._service.setting('app.explore.can_select_building');\n    }\n\n    constructor(\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _service: ApplicationService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._org.listen('buildings').pipe(first(_ => !!_ && !!_.length)).subscribe(() => {\n            this.subscription(\n                'route.query',\n                this._route.queryParamMap.subscribe(params => {\n                    /* istanbul ignore else */\n                    if (params.has('level')) {\n                        const level_id = params.get('level');\n                        const level = this._org.levelWithID(level_id);\n                        this.level = level.id;\n                        this.setBuilding(level.building_id);\n                        this.levelChange.emit(this.level);\n                        this.clearTimeout('check_building');\n                    }\n                })\n            );\n            this.building_list = this._org.buildings;\n            this.timeout('check_building', () => {\n                /* istanbul ignore else */\n                if (!this.building) {\n                    this.setBuilding(this._org.building.id);\n                }\n                this.levelChange.emit(this.level);\n            });\n        });\n    }\n\n    public setBuilding(bld_id: string) {\n        const building = this._org.buildings.find(bld => bld.id === bld_id);\n        /* istanbul ignore else */\n        if (building) {\n            this.building_details = building;\n            this.building = bld_id;\n            this.level_list = building.levels;\n            /* istanbul ignore else */\n            if (this.level_list.length && !this.level_list.find(lvl => lvl.id === this.level)) {\n                this.updateLevel(this.level_list[0].id);\n            }\n        }\n    }\n\n    public updateLevel(lvl_id: string) {\n        this.level = lvl_id;\n        this.levelChange.emit(this.level);\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParamsHandling: 'merge',\n            queryParams: { level: lvl_id }\n        });\n    }\n}\n","<div class=\"map-controls\">\n    <mat-form-field\n        class=\"map\"\n        appearance=\"outline\"\n        *ngIf=\"can_select_building && building_list.length > 1\"\n    >\n        <mat-select name=\"building\" [value]=\"building\" (valueChange)=\"setBuilding($event)\">\n            <mat-select-trigger> {{ building_details.code }} - {{ building_details.name }} </mat-select-trigger>\n            <mat-option *ngFor=\"let bld of building_list\" [value]=\"bld.id\">\n                <div class=\"building-name\">\n                    <div class=\"code\">{{ bld.code }}</div>\n                    <div class=\"name\">{{ bld.name }}</div>\n                    <div class=\"address\">{{ bld.address }}</div>\n                </div>\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n    <mat-form-field class=\"map\" appearance=\"outline\">\n        <mat-select name=\"level\" [(value)]=\"level\" (valueChange)=\"updateLevel($event)\">\n            <mat-option *ngFor=\"let level of level_list\" [value]=\"level.id\">\n                {{ level.name }}\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from '../../base.directive';\nimport { OverlayMenuSettings, ApplicationLink } from '../../utilities/settings.interfaces';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-overlay-menu',\n    templateUrl: './overlay-menu.component.html',\n    styleUrls: ['./overlay-menu.component.scss']\n})\nexport class OverlayMenuComponent extends BaseDirective {\n    /** Whether to show the menu */\n    @Input() public show: boolean;\n    /** Emitter for changes to show */\n    @Output() public showChange = new EventEmitter<boolean>();\n\n    /** List of links to display on the menu */\n    public get menu_items(): ApplicationLink[] {\n        const settings = this._service.setting('app.general.menu') || { items: [] };\n        return settings.items || [];\n    }\n\n    /** Copyright details for the application */\n    public get copyright(): string {\n        return (this._service.setting('app.general.menu') || {}).copyright || '';\n    }\n\n    public get settings() {\n        const settings = this._service.setting('app.general.menu') || { position: '' };\n        return settings;\n    }\n\n    constructor(private _service: ApplicationService) {\n        super();\n    }\n\n    /** Current year to display for copyright */\n    public get year(): number {\n        return dayjs().year();\n    }\n\n    /** Close the overlay menu */\n    public close() {\n        this.show = false;\n        this.showChange.emit(this.show);\n    }\n\n    public delayedClose() {\n        this.timeout('close', () => this.close(), 50);\n    }\n\n    public cancelClose() {\n        this.timeout('cancel_close', () => this.clearTimeout('close'), 10);\n    }\n}\n","<div\n    class=\"overlay-menu\"\n    [class.left]=\"settings?.position === 'left'\"\n    [class.middle]=\"settings?.position === 'middle'\"\n    [class.show]=\"show\"\n    (click)=\"delayedClose()\"\n>\n    <div class=\"menu\" (click)=\"cancelClose()\">\n        <div class=\"header\">\n            <div class=\"location\"></div>\n            <button mat-icon-button (click)=\"close()\">\n                <app-icon\n                    [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"\n                ></app-icon>\n            </button>\n        </div>\n        <div class=\"body\">\n            <ul>\n                <ng-container *ngFor=\"let item of menu_items\">\n                    <ng-container *ngIf=\"item.route; else external_link\">\n                        <a\n                            [routerLink]=\"[item.route]\"\n                            routerLinkActive=\"active\"\n                            [queryParams]=\"item.query_params\"\n                        >\n                            <li>\n                                <div class=\"text\">{{ item.name }}</div>\n                                <app-icon\n                                    [icon]=\"{\n                                        type: 'icon',\n                                        class: 'material-icons',\n                                        content: 'keyboard_arrow_right'\n                                    }\"\n                                ></app-icon>\n                            </li>\n                        </a>\n                        <ng-container *ngIf=\"item.children && item.children.length\">\n                            <a\n                                *ngFor=\"let sub_item of item.children\"\n                                class=\"sub-link\"\n                                [routerLink]=\"[sub_item.route]\"\n                                routerLinkActive=\"active\"\n                                [queryParams]=\"sub_item.query_params\"\n                            >\n                                <li>\n                                    <div class=\"text\">{{ sub_item.name }}</div>\n                                    <app-icon\n                                        [icon]=\"{\n                                            type: 'icon',\n                                            class: 'material-icons',\n                                            content: 'keyboard_arrow_right'\n                                        }\"\n                                    ></app-icon>\n                                </li>\n                            </a>\n                        </ng-container>\n                    </ng-container>\n                    <ng-template #external_link>\n                        <a [href]=\"item.link | safe: 'url'\">\n                            <li>\n                                <div class=\"text\">{{ item.name }}</div>\n                                <app-icon\n                                    [icon]=\"{\n                                        type: 'icon',\n                                        class: 'material-icons',\n                                        content: 'exit_to_app'\n                                    }\"\n                                ></app-icon>\n                            </li>\n                        </a>\n                    </ng-template>\n                </ng-container>\n            </ul>\n        </div>\n        <div class=\"footer\" *ngIf=\"copyright\" i18n=\"Copyright\">\n            Copyright &copy; {{ year }} {{ copyright }}\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, Input, ContentChildren, Output, EventEmitter } from '@angular/core';\nimport { ApplicationIcon } from '../../utilities/settings.interfaces';\nimport { BaseDirective } from '../../base.directive';\n\nexport interface PopoutAction extends ApplicationIcon {\n    /** ID of the action */\n    id: string;\n}\n\n@Component({\n    selector: 'a-popout-menu',\n    templateUrl: './popout-menu.component.html',\n    styleUrls: ['./popout-menu.component.scss']\n})\nexport class PopoutMenuComponent extends BaseDirective {\n    /** List of available actions */\n    @Input() public actions: PopoutAction[] = [];\n    /** Emitter for user actions */\n    @Output() public action = new EventEmitter<string>();\n    /** Whether actions should show */\n    public show: boolean;\n\n    public close() {\n        this.timeout('close', () => {\n            this.show = false;\n        });\n    }\n}\n","<button\n    mat-icon-button\n    [class.small]=\"true\"\n    name=\"action\"\n    *ngFor=\"let item of actions; let i = index\"\n    [style.top]=\"show ? (-110 * i - 60) + '%' : ''\"\n    (click)=\"action.emit(item.id); show = false\"\n>\n    <app-icon [icon]=\"item\"></app-icon>\n</button>\n<button mat-icon-button name=\"menu\" [class.show]=\"show\" (click)=\"show = !show\" (window:click)=\"show ? close() : ''\">\n    <app-icon [icon]=\"{ class: 'material-icons', content: show ? 'add' : 'more_vert' }\"></app-icon>\n</button>\n","import { Component, OnInit, Input, EventEmitter, Output, ViewChild, ElementRef, SimpleChanges, OnChanges } from '@angular/core';\nimport { BaseDirective } from '../../base.directive';\n\n@Component({\n    selector: 'a-searchbar',\n    templateUrl: './searchbar.component.html',\n    styleUrls: ['./searchbar.component.scss']\n})\nexport class SearchbarComponent extends BaseDirective implements OnChanges {\n    /** Current contents of the searchbar input */\n    @Input('value') public value: string;\n    /** Current contents of the searchbar input */\n    @Input() public placeholder: string;\n    /** Whether external changes are being processed */\n    @Input() public loading: boolean;\n    /** Whether external changes are being processed */\n    @Input() public autofocus: boolean;\n    /** Emitter for changes to the searchbar value */\n    @Output() public valueChange = new EventEmitter<string>();\n    /** Input field reference */\n    @ViewChild('input', { static: true }) private input_field: ElementRef<HTMLInputElement>;\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.autofocus && this.autofocus) {\n            this.focusField()\n        }\n    }\n\n    public focusField() {\n        /* istanbul ignore else */\n        if (this.input_field && this.input_field.nativeElement) {\n            this.input_field.nativeElement.focus();\n        }\n    }\n}\n","<div class=\"searchbar\" tabindex=\"0\" (focus)=\"focusField()\" (click)=\"focusField()\">\n    <div class=\"prefix\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'search' }\"></app-icon>\n    </div>\n    <div class=\"input\">\n        <input #input\n            type=\"text\"\n            [(ngModel)]=\"value\"\n            (ngModelChange)=\"valueChange.emit($event)\"\n            [placeholder]=\"placeholder || 'Search...'\"\n            i18n-placeholder\n        />\n    </div>\n    <div class=\"suffix\" *ngIf=\"loading\">\n        <mat-spinner diameter=\"32\"></mat-spinner>\n    </div>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from '../../base.directive';\nimport { ApplicationIcon } from '../../utilities/settings.interfaces';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n    selector: 'a-topbar-header',\n    templateUrl: './topbar-header.component.html',\n    styleUrls: ['./topbar-header.component.scss']\n})\nexport class TopbarHeaderComponent extends BaseDirective implements OnInit {\n    /** Logo of the application organisation */\n    public logo: ApplicationIcon;\n    /** Whether to show menu */\n    @Input() public menu: boolean;\n    /** Name of the page being rendered */\n    @Input() public page: string;\n    /** Emiiter for changes to menu state */\n    @Output() public menuChange = new EventEmitter<boolean>();\n    /** Whether to reverse the side of the menu icon */\n    public reverse: boolean;\n    /** Current page title */\n    public title: string;\n\n    constructor(private _service: ApplicationService, private _dialog: MatDialog) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.logo = this._service.setting('app.logo_light') || { type: 'icon' };\n            this.reverse = this._service.setting('app.general.menu.position') === 'left';\n            this.title = this._service.get('title');\n            this.subscription('title', () =>\n                this._service.listen('title', value => (this.title = value))\n            );\n        });\n    }\n\n    /** Set menu state to `true` */\n    public showMenu() {\n        this.menu = true;\n        this.menuChange.emit(this.menu);\n    }\n\n    public closeModals() {\n        this._dialog.closeAll();\n    }\n}\n","<div [class]=\"'topbar-header ' + page + (reverse ? ' reverse' : '')\">\n    <div class=\"block home\">\n        <a [routerLink]=\"['/home']\" (click)=\"closeModals()\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'home' }\"></app-icon>\n        </a>\n    </div>\n    <div class=\"block icon\">\n        <div class=\"text\">Converge |</div>\n        <div class=\"logo\" *ngIf=\"logo\">\n            <i *ngIf=\"logo.type === 'icon'\" [class]=\"logo.class\">{{ logo.content }}</i>\n            <img *ngIf=\"logo.type === 'img'\" [src]=\"logo.src | safe: 'resource'\" />\n        </div>\n    </div>\n    <div class=\"block title\">\n        <div class=\"title\">Converge | {{ title }}</div>\n    </div>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { User } from 'src/app/services/data/users/user.class';\n\n@Component({\n    selector: 'a-user-avatar',\n    templateUrl: './user-avatar.component.html',\n    styleUrls: ['./user-avatar.component.scss']\n})\nexport class UserAvatarComponent {\n    /** User to display avatar for */\n    @Input() public user: User;\n\n    public get initials(): string {\n        if (!this.user) {\n            return 'NA';\n        }\n        const parts = this.user.name.split(' ');\n        return parts.length > 1\n            ? `${parts[0][0]}${parts[parts.length - 1][0]}`\n            : this.user.name.slice(0, 2);\n    }\n}\n","<div class=\"user-avatar\" *ngIf=\"user\" [attr.user-id]=\"user.id\">\n    <div class=\"initials\" *ngIf=\"!user.image; else image_state\">{{ initials }}</div>\n</div>\n<ng-template #image_state>\n    <img [src]=\"user.image | safe: 'resource'\" />\n</ng-template>\n","import { trigger, transition, style, animate, state } from '@angular/animations';\n\nexport const ANIMATION_SHOW_ENTER_LEAVE = trigger('show', [\n    transition(':enter', [\n        style({ opacity: 0, height: 0 }),\n        animate(300, style({ opacity: 1, height: '*' }))\n    ]),\n    transition(':leave', [\n        style({ opacity: 1, height: '*' }),\n        animate(300, style({ opacity: 0, height: 0 }))\n    ])\n]);\n\nexport const ANIMATION_SHOW_CONTRACT_EXPAND = trigger('show', [\n    state('show', style({ opacity: 1, height: '*' })),\n    state('hide', style({ opacity: 0, height: 0 })),\n    transition('show <=> hide', animate('200ms ease-in'))\n]);\n","import { MockHttpRequestHandler } from '@placeos/ts-client';\n\nimport { generateMockBooking } from 'src/app/services/data/bookings/booking.utilities';\nimport { randomInt, unique } from '../../utilities/general.utilities';\nimport { MOCK_SPACES } from './spaces.mock';\nimport { MOCK_USERS } from './users.mock';\nimport { API } from './common.mock';\n\nimport * as dayjs from 'dayjs';\n\nwindow.control = window.control || {};\nwindow.control.systems = window.control.systems || {};\nwindow.control.handlers = window.control.handlers || [];\n\nexport const MOCK_BOOKINGS = Array(200)\n    .fill(0)\n    .map((i) => {\n        const rooms = unique(\n            Array(randomInt(4))\n                .fill(0)\n                .map((i) => MOCK_SPACES[Math.floor(Math.random() * MOCK_SPACES.length)]),\n            'id'\n        );\n        // Set the organiser with the generated user list\n        const organiser =\n            randomInt(9999) % 10 === 0\n                ? MOCK_USERS[MOCK_USERS.length - 1]\n                : MOCK_USERS[randomInt(MOCK_USERS.length)];\n        // Set the attendees with the generated user list\n        const attendees = unique(\n            Array(randomInt(20))\n                .fill(0)\n                .map((i) => MOCK_USERS[randomInt(MOCK_USERS.length)]),\n            'email'\n        );\n        return generateMockBooking({\n            organiser,\n            attendees,\n            room_ids: rooms.map((i) => i.email),\n        });\n    });\n\nMOCK_SPACES.forEach(\n    (i) => (i.bookings = MOCK_BOOKINGS.filter((j) => j.room_ids.indexOf(i.email) >= 0))\n);\n\n// Handler for bookings index\nwindow.control.handlers.push({\n    path: `${API}/bookings`,\n    metadata: MOCK_BOOKINGS,\n    method: 'GET',\n    callback: (event) => {\n        const user = MOCK_USERS[MOCK_USERS.length - 1];\n        console.log('User:', user.email);\n        let data = !event.query_params.email\n            ? MOCK_BOOKINGS.filter(\n                  (i) =>\n                      i.organiser.email === user.email ||\n                      i.organiser === user.email ||\n                      i.attendees.reduce((a, v) => a || v.email === user.email, false)\n              )\n            : MOCK_BOOKINGS.filter(\n                  (i) =>\n                      i.organiser.email === event.query_params.email ||\n                      (i.organiser as any) === event.query_params.email ||\n                      i.attendees.reduce((a, v) => a || v.email === event.query_params.email, false)\n              );\n        console.log('Data:', data);\n        // Filter bookings between a given period\n        // if (event.query_params.from) {\n        //     const start = dayjs(+event.query_params.from * 1000);\n        //     const end = event.query_params.to\n        //         ? dayjs(+event.query_params.to * 1000).endOf('m')\n        //         : start.endOf('d');\n        //     data = data.filter((i: any) => {\n        //         const bkn_start = dayjs(i.start_epoch * 1000 || i.start * 1000)\n        //             .startOf('m')\n        //             .second(1);\n        //         const bkn_end = dayjs(i.end_epoch * 1000 || i.end * 1000);\n        //         return (\n        //             (bkn_start.isAfter(start, 's') && bkn_start.isBefore(end, 'm')) ||\n        //             (bkn_end.isAfter(start, 'm') && bkn_end.isBefore(end, 's'))\n        //         );\n        //     });\n        // }\n        return data;\n    },\n} as MockHttpRequestHandler);\n\n// Handler for bookings show\nwindow.control.handlers.push({\n    path: `${API}/bookings/:id`,\n    metadata: MOCK_BOOKINGS,\n    method: 'GET',\n    callback: (event) => {\n        if (event.route_params.id) {\n            const booking = MOCK_BOOKINGS.find(\n                (i) => i.id === event.route_params.id || i.icaluid === event.route_params.id\n            );\n            if (booking) {\n                return booking;\n            } else {\n                throw { status: 404, message: 'Booking not found.' };\n            }\n        } else {\n            throw { status: 400, message: 'Invalid booking ID' };\n        }\n    },\n} as MockHttpRequestHandler);\n\n// Handler for new bookings\nwindow.control.handlers.push({\n    path: `${API}/bookings`,\n    metadata: MOCK_BOOKINGS,\n    method: 'POST',\n    callback: (event) => {\n        if (event.body) {\n            event.body.id = `bkn-${randomInt(9_999_999)}`;\n            event.body.icaluid = `ical-${event.body.id}`;\n            event.body.approval_status = {};\n            for (let i = 0; i < event.body.room_ids.length; i++) {\n                event.body.approval_status[event.body.room_ids[i]] = event.body.auto_approve[i]\n                    ? 'approved'\n                    : 'tentative';\n            }\n            MOCK_BOOKINGS.push(event.body);\n            MOCK_SPACES.forEach(\n                (space) =>\n                    (space.bookings = MOCK_BOOKINGS.filter(\n                        (booking) => booking.room_ids.indexOf(space.email) >= 0\n                    ))\n            );\n            return event.body;\n        } else {\n            throw { status: 500, message: 'Invalid booking data' };\n        }\n    },\n} as MockHttpRequestHandler);\n\n// Handler for updating existing bookings\nwindow.control.handlers.push({\n    path: `${API}/bookings/:id`,\n    metadata: MOCK_BOOKINGS,\n    method: 'PUT',\n    callback: (event) => {\n        if (event.route_params.id) {\n            const index = MOCK_BOOKINGS.findIndex(\n                (i) => i.id === event.route_params.id || i.icaluid === event.route_params.id\n            );\n            if (index >= 0) {\n                event.body.approval_status = {};\n                for (let i = 0; i < event.body.room_ids.length; i++) {\n                    event.body.approval_status[event.body.room_ids[i]] = event.body.auto_approve[i]\n                        ? 'approved'\n                        : 'tentative';\n                }\n                MOCK_BOOKINGS[index] = event.body;\n                MOCK_SPACES.forEach(\n                    (i) =>\n                        (i.bookings = MOCK_BOOKINGS.filter((j) => j.room_ids.indexOf(i.email) >= 0))\n                );\n                return event.body;\n            } else {\n                throw { status: 404, message: 'Booking not found' };\n            }\n        } else throw { status: 500, message: 'Invalid booking ID' };\n    },\n} as MockHttpRequestHandler);\n\n// Handler for deleting exisiting bookings\nwindow.control.handlers.push({\n    path: `${API}/bookings/:id`,\n    metadata: MOCK_BOOKINGS,\n    method: 'DELETE',\n    callback: (event) => {\n        if (event.route_params.id) {\n            const index = MOCK_BOOKINGS.findIndex(\n                (i) => i.id === event.route_params.id || i.icaluid === event.route_params.id\n            );\n            if (index >= 0) {\n                MOCK_BOOKINGS.splice(index, 1);\n                MOCK_SPACES.forEach(\n                    (i) =>\n                        (i.bookings = MOCK_BOOKINGS.filter((j) => j.room_ids.indexOf(i.email) >= 0))\n                );\n            } else {\n                throw { status: 404, message: 'Booking not found' };\n            }\n        } else throw { status: 500, message: 'Invalid booking ID' };\n    },\n} as MockHttpRequestHandler);\n","import { MockHttpRequestHandler } from '@placeos/ts-client';\n\nimport { MOCK_ORG } from './organisation.mock';\nimport { DOMAIN } from './common.mock';\n\nwindow.control = window.control || {};\nwindow.control.systems = window.control.systems || {};\nwindow.control.handlers = window.control.handlers || [];\n\nexport const MOCK_BUILDINGS = [\n    {\n        id: 'zone_bld-01',\n        zone_id: 'zone_bld-01',\n        name: 'Sydney',\n        settings: {\n            discovery_info: {\n                timezone: 'Australia/Sydney',\n                neighbourhoods: {\n                    'zone_lvl-01': {\n                        'Test Searchable': 'Device_Bench',\n                    },\n                },\n                required: {\n                    expected_attendees: true\n                },\n                visitor_space: `sydney-01.02@${DOMAIN}`,\n                booking_rules: {\n                    'zone_lvl-33': [\n                        {\n                            conditions: {\n                                is_before: '60 days',\n                                max_length: '1 week',\n                            },\n                            rules: {\n                                auto_approve: false,\n                            },\n                        },\n                    ],\n                    'zone_lvl-35': [\n                        {\n                            conditions: {},\n                            rules: {\n                                auto_approve: false,\n                            },\n                        },\n                    ],\n                    'zone_lvl-36': [\n                        {\n                            conditions: {},\n                            rules: {\n                                auto_approve: true,\n                            },\n                        },\n                    ],\n                },\n                levels: [\n                    {\n                        level_id: 'zone_lvl-33',\n                        level_name: 'Level 33',\n                        number: 1,\n                        map_url: 'assets/maps/sydney/level_33.svg',\n                        floor_type: 'staff',\n                    },\n                    {\n                        level_id: 'zone_lvl-35',\n                        level_name: 'Level 35',\n                        number: 2,\n                        map_url: 'assets/maps/sydney/level_35.svg',\n                        floor_type: 'client',\n                    },\n                    {\n                        level_id: 'zone_lvl-36',\n                        level_name: 'Level 36',\n                        number: 2,\n                        map_url: 'assets/maps/sydney/level_36.svg',\n                        floor_type: 'client',\n                    },\n                ],\n            },\n        },\n    },\n    {\n        id: 'zone_bld-02',\n        zone_id: 'zone_bld-02',\n        name: 'London Post',\n        settings: {\n            discovery_info: {\n                timezone: 'Europe/London',\n                visitor_space: `london-01.02@${DOMAIN}`,\n                required: {\n                    equipment_code: true,\n                    expected_attendees: true\n                },\n                levels: [\n                    {\n                        level_id: 'zone_lvl-06',\n                        level_name: 'Level 6',\n                        number: 1,\n                        map_url: 'assets/maps/london/level_06.svg',\n                        floor_type: 'staff',\n                    },\n                    {\n                        level_id: 'zone_lvl-07',\n                        level_name: 'Level 7',\n                        number: 1,\n                        map_url: 'assets/maps/london/level_07.svg',\n                        floor_type: 'staff',\n                    },\n                    {\n                        level_id: 'zone_lvl-8',\n                        level_name: 'Level 8',\n                        number: 1,\n                        map_url: 'assets/maps/london/level_08.svg',\n                        floor_type: 'staff',\n                    },\n                    {\n                        level_id: 'zone_lvl-09',\n                        level_name: 'Level 9',\n                        number: 1,\n                        map_url: 'assets/maps/london/level_09.svg',\n                        floor_type: 'staff',\n                    },\n                    {\n                        level_id: 'zone_lvl-10',\n                        level_name: 'Level 10',\n                        number: 1,\n                        map_url: 'assets/maps/london/level_10.svg',\n                        floor_type: 'staff',\n                    },\n                    {\n                        level_id: 'zone_lvl-11',\n                        level_name: 'Level 11',\n                        number: 11,\n                        map_url: 'assets/maps/london/level_11.svg',\n                        floor_type: 'client',\n                    },\n                ],\n            },\n        },\n    },\n];\n\nMOCK_BUILDINGS.push({ ...MOCK_BUILDINGS[0], name: 'London' });\n\nMOCK_ORG[0].discovery_info.buildings = MOCK_BUILDINGS;\n\nsetTimeout(() => {\n    window.control.handlers.push({\n        path: '/api/engine/v2/zones',\n        metadata: MOCK_BUILDINGS,\n        callback: (event) => {\n            if (event.query_params.tags === 'building') {\n                return { total: MOCK_BUILDINGS.length, results: MOCK_BUILDINGS };\n            } else if (event.query_params.tags === 'org') {\n                return { total: MOCK_ORG.length, results: MOCK_ORG };\n            } else if (event.query_params.tags === 'level') {\n                return { total: 0, results: [] };\n            }\n        },\n    } as MockHttpRequestHandler);\n});\n","import { MockHttpRequestHandler } from '@placeos/ts-client';\nimport { API } from './common.mock';\nimport { MOCK_SPACES } from './spaces.mock';\n\nconst MOCK_MENU = {\n    'zone_bld-01': [\n        {\n            id: 'snacks',\n            name: 'Snacks',\n            items: [\n                { id: 'pretzels', name: 'Pretzels', price: 200 },\n                { id: 'cashews', name: 'Cashew', price: 400 },\n                { id: 'almonds', name: 'Almonds', price: 200 },\n                {\n                    id: 'chips',\n                    name: 'Chips',\n                    description: 'Pick 1',\n                    must_select: 1,\n                    package: true,\n                    price: 1000,\n                    items: [\n                        { id: 'cheezels', name: 'Cheezels' },\n                        { id: 'smiths_orginal', name: 'Smiths Orginal' },\n                        { id: 'smiths_chicken', name: 'Smiths Chicken' },\n                        { id: 'layz_orginal', name: 'Layz Orginal' },\n                    ],\n                },\n            ],\n        },\n        {\n            id: 'refresh',\n            name: 'Refreshments',\n            items: [\n                {\n                    id: 'drinks',\n                    name: 'Drink Package',\n                    description: 'Pick 3 types of drinks',\n                    must_select: 3,\n                    package: true,\n                    price: 1000,\n                    items: [\n                        { id: 'pepsi', name: 'Pepsi' },\n                        { id: 'solo', name: 'Solo' },\n                        { id: 'fanta', name: 'Fanta' },\n                        { id: 'coke_zero', name: 'Coke Zero' },\n                    ],\n                },\n                { id: 'pepsi', name: 'Pepsi', price: 80 },\n                { id: 'solo', name: 'Solo', price: 80 },\n                { id: 'fanta', name: 'Fanta', price: 80 },\n                { id: 'coke_zero', name: 'Coke Zero', price: 80 },\n            ],\n        },\n    ],\n    'zone_bld-02': [\n        {\n            id: 'snacks',\n            name: 'Snacks',\n            items: [\n                { id: 'pretzels', name: 'Pretzels', price: 200 },\n                { id: 'cashews', name: 'Cashew', price: 400 },\n                { id: 'almonds', name: 'Almonds', price: 200 },\n                {\n                    id: 'chips',\n                    name: 'Chips',\n                    description: 'Pick 1',\n                    must_select: 1,\n                    package: true,\n                    price: 1000,\n                    items: [\n                        { id: 'cheezels', name: 'Cheezels' },\n                        { id: 'smiths_orginal', name: 'Smiths Orginal' },\n                        { id: 'smiths_chicken', name: 'Smiths Chicken' },\n                        { id: 'layz_orginal', name: 'Layz Orginal' },\n                    ],\n                },\n            ],\n        },\n        {\n            id: 'refresh',\n            name: 'Refreshments',\n            items: [\n                { id: 'pepsi', name: 'Pepsi', price: 80 },\n                { id: 'solo', name: 'Solo', price: 80 },\n                { id: 'fanta', name: 'Fanta', price: 80 },\n                { id: 'coke_zero', name: 'Coke Zero', price: 80 },\n                {\n                    id: 'drinks',\n                    name: 'Drink Package',\n                    description: 'Pick 3 types of drinks',\n                    must_select: 3,\n                    package: true,\n                    price: 1000,\n                    items: [\n                        { id: 'pepsi', name: 'Pepsi' },\n                        { id: 'solo', name: 'Solo' },\n                        { id: 'fanta', name: 'Fanta' },\n                        { id: 'coke_zero', name: 'Coke Zero' },\n                    ],\n                },\n            ],\n        },\n        {\n            id: 'dinner',\n            name: 'Dinner',\n            items: [\n                {\n                    id: 'Schnitzel',\n                    name: 'Chicken Schnitzel',\n                    description: 'With a side of chips or salad',\n                    price: 1200,\n                    must_select: 1,\n                    items: [\n                        { item: 'chips', name: 'Chips' },\n                        { item: 'salad', name: 'Salad' },\n                    ],\n                },\n            ],\n        },\n    ],\n};\n\n// Handler for bookings show\nwindow.control.handlers.push({\n    path: `${API}/menu`,\n    metadata: [],\n    method: 'GET',\n    callback: (event) => {\n        if (event.query_params.room_id) {\n            const space = MOCK_SPACES.find(space => space.id == event.query_params.room_id);\n            if (space) {\n                const menu_zone = Object.keys(MOCK_MENU).find(key => space.zones.includes(key));\n                if (menu_zone) {\n                    return MOCK_MENU[menu_zone];\n                }\n            }\n        }\n        throw { status: 400, message: 'Invalid room ID' };\n    },\n} as MockHttpRequestHandler);\n","\n/** Domain of the organisation */\nexport const DOMAIN = 'acaprojects.com';\n/** Endpoint where the staff API is located */\nexport const API = '/api/staff';\n","import { MockHttpRequestHandler } from '@placeos/ts-client';\n\nimport { MOCK_USERS } from \"./users.mock\";\nimport { MOCK_SPACES } from './spaces.mock';\nimport { MOCK_BUILDINGS } from './buildings.mock';\nimport { randomInt } from '../../utilities/general.utilities';\nimport { generateMockLocation } from 'src/app/services/data/location/location.utilities';\n\nexport const MOCK_LOCATIONS: any[] = [];\n\nconst spaces = MOCK_SPACES.map(space => space.map_id);\nconst levels = MOCK_BUILDINGS.reduce((lvls, bld) => {\n    bld.settings.discovery_info.levels.forEach(lvl => lvls.push(lvl.level_id));\n    return lvls;\n}, []);\n\nfor (const user of MOCK_USERS) {\n    if (user.location || randomInt(99999) % 2 === 0) {\n        user.location = generateMockLocation(null, spaces, levels);\n        MOCK_LOCATIONS.push(user.location);\n    }\n}\n\nsetTimeout(() => {\n    window.control.handlers.push({\n        path: '/api/staff/people/:email',\n        metadata: MOCK_LOCATIONS,\n        callback: (event) => {\n            if (event.route_params.email) {\n                const user = MOCK_USERS.find(user => user.email === event.route_params.email || user.id === event.route_params.email);\n                if (user) {\n                    return user.location;\n                }\n            }\n            throw { status: 404, message: `Unable to locate user with email ${event.route_params.email}` };\n        }\n    } as MockHttpRequestHandler);\n});\n\n\n","export const MOCK_ORG = [\n    {\n        send_acceptance: true,\n        discovery_info: {\n            buildings: []\n        }\n    }\n];\n","import { generateMockSpace } from 'src/app/services/data/spaces/space.utilities';\nimport { API } from './common.mock';\nimport { MockHttpRequestHandler } from '@placeos/ts-client';\n\nimport * as dayjs from 'dayjs';\n\nwindow.control = window.control || {};\nwindow.control.systems = window.control.systems || {};\nwindow.control.handlers = window.control.handlers || [];\n\nexport const MOCK_SPACES = [\n    { id: '35.06', name: 'SYD-35-Durack-internal-05-DV', zones: ['zone_bld-01', 'zone_lvl-35'], bookable: true },\n    { id: '36.08', name: 'SYD-36-Trickett-internal-05-DV', zones: ['zone_bld-01', 'zone_lvl-36'], bookable: true },\n    { id: '33.02', name: 'SYD-33West-Wedding Cake-10V', zones: ['zone_bld-01', 'zone_lvl-33'], bookable: false },\n    { id: '33.03', name: 'SYD-33West-Pinchgut-05DV', zones: ['zone_bld-01', 'zone_lvl-33'], bookable: true },\n    { id: '10.02', name: 'LON-10-10_02_Village_green', zones: ['zone_bld-01', 'zone_lvl-10'] },\n    { id: '10.47', name: 'LON-10-EC10_10_47_Gallery', zones: ['zone_bld-01', 'zone_lvl-10'] },\n    { id: '11.07', name: 'LON-11-EC11_11_07_Client', zones: ['zone_bld-01', 'zone_lvl-11'] },\n    { id: '11.10', name: 'LON-11-EC11_11_10_Client', zones: ['zone_bld-01', 'zone_lvl-11'] }\n].map((space_data: any) => {\n    const space = generateMockSpace({\n        ...space_data,\n        map_id: `${space_data.id}`,\n        id: `sys_rm-${space_data.id}`,\n        name: `${space_data.name}`\n    });\n    window.control.systems[space.id] = {\n        Bookings: [\n            {\n                today: space.bookings\n            }\n        ]\n    };\n    return space;\n});\n\n// Add handler for users index\nwindow.control.handlers.push({\n    path: `${API}/rooms`,\n    metadata: MOCK_SPACES,\n    callback: event => {\n        let results = MOCK_SPACES;\n        if (event.query_params.q) {\n            const query = event.query_params.q.toLowerCase();\n            results = results.filter(\n                i =>\n                    (i.id || '').toLowerCase().indexOf(query) >= 0 ||\n                    (i.name || '').toLowerCase().indexOf(query) >= 0 ||\n                    (i.email || '').toLowerCase().indexOf(query) >= 0\n            );\n        }\n        // Remove rooms without given zones from results\n        if (event.query_params.zone_ids) {\n            const zone_ids = event.query_params.zone_ids.split(',');\n            results = results.filter(i => {\n                let count = 0;\n                for (const zone of zone_ids) {\n                    if (i.zones.indexOf(zone) >= 0) {\n                        count++;\n                    }\n                }\n                return count >= zone_ids.length;\n            });\n        }\n        // Remove rooms without given ids from results\n        if (event.query_params.room_ids) {\n            const room_ids = event.query_params.room_ids.split(',');\n            results = results.filter(i => room_ids.indexOf(i.id) >= 0);\n        }\n        // Update availability status of each room results\n        if (event.query_params.available_from) {\n            const from = dayjs(+event.query_params.available_from * 1000);\n            const to = dayjs(+event.query_params.available_to * 1000);\n            results.forEach(space => {\n                for (const booking of space.bookings) {\n                    const start = dayjs(booking.start_epoch * 1000);\n                    const end = dayjs(booking.end_epoch * 1000);\n                    if (\n                        (from.isAfter(start, 'm') && from.isBefore(end, 'm')) ||\n                        (to.isAfter(start, 'm') && to.isBefore(end, 'm')) ||\n                        (start.isAfter(from, 'm') && start.isBefore(to, 'm'))\n                    ) {\n                        space.settings = { available: false };\n                    } else {\n                        space.settings = { available: true };\n                    }\n                }\n            });\n        }\n        return results;\n    }\n} as MockHttpRequestHandler);\n","\nimport { MockHttpRequestHandler } from '@placeos/ts-client';\n\nimport { generateMockUser } from 'src/app/services/data/users/user.utilities';\nimport { API } from './common.mock';\n\nwindow.control = window.control || {};\nwindow.control.systems = window.control.systems || {};\nwindow.control.handlers = window.control.handlers || [];\n\nexport const MOCK_USERS = Array(Math.floor(Math.random() * 300 + 100)).fill(0)\n    .map(i => generateMockUser());\nexport const MOCK_CONTACTS = Array(Math.floor(Math.random() * 300 + 100)).fill(0)\n    .map(i => generateMockUser({ external: true }));\n\nexport const PREDEFINED_USERS = [\n    'Jonathan McFarlane',\n    'Stephen Von Takach',\n    'Alex Sorafumo',\n    'Candy Russo',\n    'Cristina Boston',\n    'Eugene Murphy',\n    'Ben Hoad',\n    'Kim Burgess',\n    'Desk Test',\n    'Space Test',\n    'Wireless Test',\n    'Zo-Kalar'\n];\n\n// Add predefined user to user list\nfor (const user of PREDEFINED_USERS) {\n    const id = user.split(' ').join('.').toLowerCase();\n    const new_user = generateMockUser({ id, name: user });\n    new_user.location = true;\n    MOCK_USERS.push(new_user);\n}\n\n// Add handler for users index\nwindow.control.handlers.push({\n    path: `${API}/users`,\n    metadata: MOCK_USERS,\n    callback: (event) => {\n        if (event.query_params.q) {\n            const query = event.query_params.q.toLowerCase();\n            return MOCK_USERS.filter(i =>\n                (i.id || '').toLowerCase().indexOf(query) >= 0 ||\n                (i.name || '').toLowerCase().indexOf(query) >= 0 ||\n                (i.email || '').toLowerCase().indexOf(query) >= 0\n            );\n        }\n        return MOCK_USERS;\n    }\n} as MockHttpRequestHandler);\n\n// Add handler for users show\nwindow.control.handlers.push({\n    path: `${API}/users/:id`,\n    metadata: MOCK_USERS,\n    callback: (event) => {\n        const user = MOCK_USERS.find(i => i.id === event.route_params.id || i.name === event.route_params.id || i.email === event.route_params.id);\n        if (user) {\n            return user;\n        } else if (event.route_params.id === 'current') {\n            return MOCK_USERS[MOCK_USERS.length - 1];\n        }\n        throw { status: 404, message: 'User not found' };\n    }\n} as MockHttpRequestHandler);\n\n// Add handler for contacts index\nwindow.control.handlers.push({\n    path: `${API}/contacts`,\n    metadata: MOCK_CONTACTS,\n    callback: (event) => {\n        if (event.query_params.q) {\n            const query = event.query_params.q.toLowerCase();\n            return MOCK_CONTACTS.filter(i =>\n                (i.id || '').toLowerCase().indexOf(query) >= 0 ||\n                (i.name || '').toLowerCase().indexOf(query) >= 0 ||\n                (i.email || '').toLowerCase().indexOf(query) >= 0\n            );\n        }\n        return MOCK_USERS;\n    }\n} as MockHttpRequestHandler);\n\n// Add handler for contacts show\nwindow.control.handlers.push({\n    path: `${API}/contacts/:id`,\n    metadata: MOCK_USERS,\n    callback: (event) => {\n        const user = MOCK_USERS.find(i => i.id === event.route_params.id || i.name === event.route_params.id);\n        if (user) {\n            return user;\n        }\n        throw { status: 404, message: 'User not found' };\n    }\n} as MockHttpRequestHandler);\n\n\n","\nimport { createSystem } from './systems.mock';\n\nimport './api/organisation.mock';\nimport './api/buildings.mock';\nimport './api/users.mock';\nimport './api/spaces.mock';\nimport './api/bookings.mock';\nimport './api/locations.mock';\nimport './api/catering-menu.mock';\n\nimport * as faker from 'faker';\n\nfaker.seed(2560);\n\nwindow.control = window.control || {};\nwindow.control.systems = {\n    ...window.control.systems,\n    ['sys-B0']: createSystem('sys-B0')\n} || {};\nwindow.control.handlers = window.control.handlers || [];\n","\n\nimport { generateMockSpace } from \"../../services/data/spaces/space.utilities\";\nimport { setMockBookingStartDatetime } from \"../../services/data/bookings/booking.utilities\";\n\nimport * as dayjs from 'dayjs';\n\nexport interface IBookingPanelBindings {\n    /** Whether user input is enabled */\n    touch_enabled: boolean;\n    /** Number of seconds before a meeting can be started, being truthy enables start/stop and auto-cancellations */\n    timeout?: number;\n    /** Number of seconds after the start of a meeting when it is auto-cancelled, overrides `timeout` value */\n    cancel_timeout?: number;\n    /** Whether to display hearing assistance UI elements */\n    has_accessability?: boolean;\n    /** URL to embed into the control modal when opened */\n    control_url?: string;\n    /** Whether to display catering UI elements */\n    has_catering?: boolean;\n    /** Whether to hide booking details(title and host) */\n    hide_details?: boolean;\n    /** Whether to hide the title of the displayed bookings */\n    hide_title?: boolean;\n    /** Whether to hide user(host) details */\n    hide_user?: boolean;\n    /** Whether to hide timeline availability */\n    hide_availability?: boolean;\n    /** Whether to disable booking from the UI */\n    booking_disabled?: boolean;\n    /** Whether booking future meetings are allowed */\n    no_timeline_bookings?: boolean;\n    /** Time before the booking end with which the current booking is endable in ms from UTC epoch */\n    is_endable?: number;\n    /** Whether to automatically ask user starting the current meeting */\n    ask_start?: boolean;\n    /** Whether to automatically ask user about ending the active meeting */\n    ask_end?: boolean;\n    /** Default meeting title if the displayed meeting doesn't have one */\n    default_title?: string;\n    /** Hide all meeting related details */\n    hide_all?: boolean;\n    /** Title of the active space */\n    title?: string;\n    /** Description of the active space */\n    description?: string;\n    /** URL of an icon image to display on the UI */\n    icon?: string;\n    /** Whether the space status is displayed on the right */\n    flip_status?: boolean;\n    /** Whether bookings can be automatically cancelled once they expire */\n    can_cancel?: boolean;\n    /** Minimum bookable duration in minutes */\n    min_duration?: number;\n    /** Maximum bookable duration in minutes */\n    max_duration?: number;\n    /** Start time of the business day with format `HH:mm` */\n    business_start?: string;\n    /** End time of the business day with format `HH:mm` */\n    business_end?: string;\n\n}\n\nconst LETTERS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('');\nconst NUMBERS = '0123456789'.split('');\n\nlet index = 0;\n\nconst SPACE_LIST: any[] = [];\n\nconst IMAGES: string[] = ['large_down', 'large_up', 'small_down', 'small_up'];\n\n/**\n * Create mock engine booking module with appropriate bookings and space data\n */\nexport function createSystem(id?: string) {\n    id = id || `sys-${LETTERS[Math.floor(index / NUMBERS.length)]}${NUMBERS[(index++) % NUMBERS.length]}`;\n    setMockBookingStartDatetime(dayjs().minute(-50).valueOf());\n    const space = generateMockSpace({ id });\n    SPACE_LIST.push(space);\n\n    const booking_bindings: IBookingPanelBindings = {\n        touch_enabled: true,\n        timeout: 300,\n        cancel_timeout: 600,\n        has_catering: true,\n        control_url: 'https://aca.im/demo/aca/control/',\n        icon: `/assets/img/${IMAGES[Math.floor(Math.random() * IMAGES.length)]}.png`\n    };\n\n    const today = dayjs();\n    const desk_bindings = {\n        'zone_lvl-01:bookings': {\n            'SYD.1.09.E': {\n                [today.format('YYYY-MM-DD')]: {\n                    // 'first@acaprojects.com': {\n                    'zo-kalar@acaprojects.com': {\n                        start: today.subtract(1, 'h').unix(),\n                        end: today.add(1, 'h').unix(),\n                        checked_in: true\n                    }\n                },\n                [today.add(1, 'd').format('YYYY-MM-DD')]: {\n                    'second@acaprojects.com': {\n                        start: today.add(1, 'd').subtract(1, 'h').unix(),\n                        end: today.add(1, 'd').add(1, 'h').unix()\n                    }\n                }\n            },\n            'SYD.1.09.F': {},\n            'SYD.1.09.G': {}\n        },\n        'zone_lvl-02:bookings': {\n            'SYD.2.01.A': {\n                [today.format('YYYY-MM-DD')]: {\n                    'first@acaprojects.com': {\n                        start: today.subtract(1, 'h').unix(),\n                        end: today.add(1, 'h').unix(),\n                        checked_in: true\n                    }\n                },\n                [today.add(1, 'd').format('YYYY-MM-DD')]: {\n                    'second@acaprojects.com': {\n                        start: today.add(1, 'd').subtract(1, 'h').unix(),\n                        end: today.add(1, 'd').add(1, 'h').unix()\n                    }\n                }\n            },\n            'SYD.2.01.B': {},\n            'SYD.2.01.C': {}\n        }\n    };\n\n    const system = {\n        id, name: space.name,\n        Bookings: [],\n        DeskManagement: [{\n            'zone_lvl-01:desk_ids': ['SYD.1.09.E', 'SYD.1.09.F', 'SYD.1.09.G']\n        }],\n        DeskBookings: []\n    };\n    system.Bookings.push({\n        ...booking_bindings,\n        room_name: space.name,\n        today: space.bookings,\n        $start_meeting: (time: number) => {\n            system.Bookings[0].last_meeting_started = time;\n        },\n        $cancel_meeting: (time: number, reason: string) => {\n            const list = system.Bookings[0].today;\n            system.Bookings[0].today = list.filter(i => i.date !== time);\n        },\n        $waiter_call: () => {\n            console.log(`[MOCK][${id}] Waiter called...`);\n        }\n    });\n    system.DeskBookings.push({\n        ...desk_bindings,\n        $book: (email: string, desk: string, date: number) => {\n            console.log('[MOCK] Book called');\n        },\n        $check_in: (email: string, desk: string) => {\n            system.DeskBookings[0]['zone_lvl-01:bookings'][desk][dayjs().format('YYYY-MM-DD')][email].checked_in = true;\n        },\n        $check_out: (email: string, desk: string) => {\n            console.log(`[MOCK]Check out called`);\n        },\n    });\n    return system;\n}\n","\nimport { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { EditorModule } from '@tinymce/tinymce-angular';\nimport { ComposerModule } from '@placeos/composer';\n\nimport { ScrollingModule } from '@angular/cdk/scrolling';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatTabsModule } from '@angular/material/tabs';\n\nimport { APipesModule } from '@acaprojects/ngx-pipes';\nimport { AInteractiveMapModule } from '@acaprojects/ngx-interactive-map';\nimport { ACustomEventsModule } from '@acaprojects/ngx-custom-events';\nimport { ADatePickerModule } from '@acaprojects/ngx-date-picker';\n\nimport { BaseDirective } from './base.directive';\nimport { LoginComponent } from './components/login/login.component';\nimport { IconComponent } from './components/icon/icon.component';\nimport { TopbarHeaderComponent } from './components/topbar-header/topbar-header.component';\nimport { OverlayMenuComponent } from './components/overlay-menu/overlay-menu.component';\nimport { FooterMenuComponent } from './components/footer-menu/footer-menu.component';\nimport { SearchbarComponent } from './components/searchbar/searchbar.component';\nimport { UserAvatarComponent } from './components/user-avatar/user-avatar.component';\nimport { MapControlsComponent } from './components/map-controls/map-controls.component';\nimport { PopoutMenuComponent } from './components/popout-menu/popout-menu.component';\nimport { FeedbackComponent } from './components/feedback/feedback.component'\n\nimport { UserFormComponent } from './components/forms/user-form/user-form.component';\nimport { BookingFormComponent } from './components/forms/booking-form/booking-form.component';\n\nimport { UserSearchFieldComponent } from './components/custom-fields/user-search-field/user-search-field.component';\nimport { TimeFieldComponent } from './components/custom-fields/time-field/time-field.component';\nimport { DurationFieldComponent } from './components/custom-fields/duration-field/duration-field.component';\nimport { DateFieldComponent } from './components/custom-fields/date-field/date-field.component';\nimport { ActionFieldComponent } from './components/custom-fields/action-field/action-field.component';\nimport { UserListFieldComponent } from './components/custom-fields/user-list-field/user-list-field.component';\nimport { CounterComponent } from './components/custom-fields/counter/counter.component';\n\nconst COMPONENTS: Type<any>[] = [\n    BaseDirective,\n    LoginComponent,\n    IconComponent,\n    TopbarHeaderComponent,\n    OverlayMenuComponent,\n    FooterMenuComponent,\n    SearchbarComponent,\n    UserAvatarComponent,\n\n    UserFormComponent,\n    BookingFormComponent,\n\n    MapControlsComponent,\n    PopoutMenuComponent,\n    FeedbackComponent\n];\n\nconst ENTRY_COMPONENT: Type<any>[] = [\n    DateFieldComponent,\n    ActionFieldComponent,\n    TimeFieldComponent,\n    DurationFieldComponent,\n    UserSearchFieldComponent,\n    UserListFieldComponent,\n    CounterComponent,\n];\n\nconst MATERIAL_MODULES: any[] = [\n    MatButtonModule,\n    MatSnackBarModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatChipsModule,\n    MatRippleModule,\n    MatMenuModule,\n    MatCheckboxModule,\n    MatTooltipModule,\n    MatRadioModule,\n    MatTabsModule\n];\n\nconst CDK_MODULES: any[] = [\n    ScrollingModule\n];\n\n@NgModule({\n    declarations: [\n        ...COMPONENTS,\n        ...ENTRY_COMPONENT,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        APipesModule,\n        AInteractiveMapModule,\n        ADatePickerModule,\n        ACustomEventsModule,\n        RouterModule,\n        EditorModule,\n        ComposerModule,\n        ...MATERIAL_MODULES,\n        ...CDK_MODULES\n    ],\n    exports: [\n        APipesModule,\n        AInteractiveMapModule,\n        ACustomEventsModule,\n        ADatePickerModule,\n        ...COMPONENTS,\n        ...ENTRY_COMPONENT,\n        ...MATERIAL_MODULES,\n        ...CDK_MODULES\n    ]\n})\nexport class SharedContentModule {}\n","import { HashMap } from \"./types.utilities\";\n\n/**\n * Convert map into a query string\n * @param map Key value pairs to convert\n */\nexport function toQueryString(map: HashMap) {\n    let str = '';\n    if (map) {\n        for (const key in map) {\n            if (map.hasOwnProperty(key) && map[key] !== undefined && map[key] !== null) {\n                str += `${(str ? '&' : '')}${key}=${map[key]}`;\n            }\n        }\n    }\n    return str;\n}\n","\nimport { humaniseDuration } from './general.utilities';\n\nimport { User } from '../../services/data/users/user.class';\nimport { Space } from '../../services/data/spaces/space.class';\n\nimport * as dayjs from 'dayjs';\n\n// attendees: FormFormatters.attendees(user),\n// date: FormFormatters.date,\n// room: FormFormatters.space,\n// recurrence: FormFormatters.recurrence\n\n/**\n * Get function to create formatted string for a list of users with a host\n * @param host Host user\n */\nexport function formatAttendeesWithHost(host: User): (_: User[]) => string {\n    return (l) => formatAttendees(l, host);\n}\n\n/**\n * Create formatted string from a list of users\n * @param list List of users\n * @param host Owner of the list of users\n */\nexport function formatAttendees(list: User[], host?: User) {\n    let attendee_str: string = '';\n    if (list && list.length > 0) {\n        const users = [...list];\n        if (host) {\n            const result = users.find(a => a.email === host.email);\n            if (result) {\n                users.splice(users.indexOf(result), 1);\n            }\n        }\n        const length = users.length + (host ? 1 : 0);\n        attendee_str = `${length} Attendee${length === 1 ? '' : 's'}; ${host ? host.name : ''}`;\n        for (const item of users) {\n            if (attendee_str) {\n                attendee_str += ', ';\n            }\n            attendee_str += item.name;\n        }\n        attendee_str = attendee_str.replace('; ,', ';');\n    }\n    return attendee_str;\n}\n\n/**\n * Create date formatted string for given date\n * @param date Date to format\n */\nexport function formatDate(date: number) {\n    return dayjs(date).format('DD MMMM YYYY');\n}\n\n/**\n * Create time formatted string for given date\n * @param date Date to format\n */\nexport function formatTime(date: number) {\n    return dayjs(date).format('h:mm A');\n}\n\n/**\n * Create formatted string for a period of given duration\n * @param duration Period duration in minutes\n */\nexport function formatPeriodWithDuration(duration: number) {\n    return (t) => formatPeriod(t, duration);\n}\n\n/**\n * Create formatted string for a period of given duration\n * @param timestamp Start hours and minutes of the period in the format `HH:mm`\n * @param duration Period duration in minutes\n */\nexport function formatPeriod(timestamp: string, duration: number = 60) {\n    const parts = timestamp.split(':');\n    const date = dayjs().hour(+parts[0]).minute(+parts[1]);\n    return `${date.format('h:mm A')} - ${date.add(duration, 'm').format('h:mm A')} (${humaniseDuration(duration)})`;\n}\n\n/**\n * Create formatted human readable string for a given duration\n * @param duration Duration in minutes\n */\nexport function formatDuration(duration: number) {\n    return humaniseDuration(duration);\n}\n\n/** Human readable names of applicable recurrence periods */\nexport const RECURRENCE_PERIODS: string[] = ['None', 'Daily', 'Weekly', 'Monthly', 'Yearly'];\n\n/**\n * Create human readable string for recurrence metadata\n * @param value\n */\nexport function formatRecurrence(value: { period: string | number, end: number }) {\n    if (!value || !value.period || value.period as any >= RECURRENCE_PERIODS.length) {\n        return 'No recurrence';\n    }\n    let period = typeof value.period === 'string' ? value.period : RECURRENCE_PERIODS[value.period];\n    period = `${period[0].toUpperCase()}${period.substr(1)}`;\n    const end = value.end ? `until ${dayjs(value.end * 1000).format('DD MMM YYYY')}` : 'forever';\n    return `${period} ${end}`;\n}\n\n/**\n * Create human readable string for a room or list of rooms\n * @param list List of spaces/rooms\n */\nexport function formatSpaces(list: Space | Space[]) {\n    if (!list || (list instanceof Array && list.length <= 0)) {\n        return 'No selected space';\n    }\n    if (list instanceof Array) {\n        return list.length === 1 ? list[0].name : `${list.length} Space${list.length !== 1 ? 's' : ''}`;\n    } else {\n        const capacity = list.capacity ? '(' + list.capacity + ' ' + (list.capacity === 1 ? 'person' : 'people') + ')' : '';\n        return `${list.name} ${capacity}`;\n    }\n}\n","import { HashMap, Point } from './types.utilities';\n\nimport * as dayjs from 'dayjs';\n\nexport function getItemWithKeys(keys: string[], map: HashMap) {\n    const key = keys.shift();\n    if (map[key]) {\n        return keys.length > 0 ? getItemWithKeys(keys, map[key]) : map[key];\n    }\n    return null;\n}\n\n/* istanbul ignore next */\n/**\n * Checks whether the platform is a mobile device.\n */\nexport function isMobileDevice(): boolean {\n    const r = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i;\n    return !!navigator.userAgent.match(r);\n}\n\n/* istanbul ignore next */\n/**\n * Checks whether the browser is Mobile Safari.\n */\nexport function isMobileSafari(): boolean {\n    const agent = navigator.userAgent;\n    return !!(\n        agent.match(/iPhone|iPad|iPod/) &&\n        agent.match(/AppleWebKit/) &&\n        !agent.match('CriOS')\n    );\n}\n\n/* istanbul ignore next */\n/**\n * Checks whether the browser is Android Chrome.\n */\nexport function isAndroidChrome(): boolean {\n    const agent = navigator.userAgent;\n    return !!(agent.match(/Android/) && agent.match(/Chrome/));\n}\n\n/**\n * Generate string representation of a number with zeros padding the length\n * @param value Number to pad with zeros\n * @param length Length of the resulting string\n */\nexport function padZero(value: number, length: number): string {\n    let str = value.toString();\n    while (str.length < length) {\n        str = '0' + str;\n    }\n    return str;\n}\n\n/**\n * Remove duplicates from the given array\n * @param array List of items to remove duplicates from\n * @param key Key on array objects to compare for uniqueness\n */\nexport function unique(array: any[], key: string = '') {\n    return array.filter(\n        (el, pos, arr) =>\n            el &&\n            arr.indexOf(\n                key ? arr.find((i) => i && i[key] === el[key]) : arr.find((i) => i === el)\n            ) === pos\n    );\n}\n\n/**\n * Convert duration to human readable string\n * @param duration Duration in minutes\n * @param short Whether to use short form of duration words e.g. hours as h\n */\nexport function humaniseDuration(duration: number, short: boolean = false) {\n    if (!duration || duration < 0) {\n        return '';\n    }\n    const h = Math.floor(duration / 60);\n    let d = `${h >= 1 ? h + (short ? 'h' : ' hour' + (h === 1 ? '' : 's')) : ''}`;\n    if (duration % 60 !== 0) {\n        if (d) {\n            d += short ? ' ' : ', ';\n        }\n        const m = duration % 60;\n        d += `${m >= 1 ? m + (short ? 'm' : ' minute' + (m === 1 ? '' : 's')) : ''}`;\n    }\n    return d;\n}\n\n/**\n * Get a filtered list of items\n * @param filter Value to filter on\n * @param items List of results to filter\n * @param fields Fields to check for matches on each item\n */\nexport function filterList<T = HashMap>(\n    filter: string,\n    items?: T[],\n    fields: string[] = ['id']\n): T[] {\n    let results: any[];\n    // Tokenise filter string\n    const filters = (filter || '').toLowerCase().split(' ');\n    const list = {};\n    for (const f of filters) {\n        /* istanbul ignore else */\n        if (f) {\n            /* istanbul ignore else */\n            if (!list[f]) {\n                list[f] = 0;\n            }\n            list[f]++;\n        }\n    }\n    // Group similar tokens\n    const parts = [];\n    for (const f in list) {\n        /* istanbul ignore else */\n        if (list.hasOwnProperty(f)) {\n            parts.push({ word: f, count: list[f], regex: new RegExp(f, 'gi') });\n        }\n    }\n    parts.sort((a, b) => b.word.length - a.word.length || a.word.localeCompare(b.word));\n    const item_list = JSON.parse(JSON.stringify(items || []));\n    /* istanbul ignore else */\n    if (filter) {\n        results = item_list.filter((item) => {\n            let match_count = 0;\n            item.match_index = 65535;\n            item.match = '';\n            const field_list = {};\n            // Initialise field match variables\n            for (const f of fields) {\n                field_list[f] = {\n                    value: (item[f] || '').toLowerCase(),\n                    index: 65536,\n                    matched: 0,\n                };\n            }\n            // Search for matches with the tokenised filter string\n            for (const i of parts) {\n                /* istanbul ignore else */\n                if (i.word) {\n                    // Check fields for matches\n                    for (const f of fields) {\n                        const field = field_list[f];\n                        const index = field.value.indexOf(i.word);\n                        field.index = index < field.index ? index : field.index;\n                        field.matches = (field.value.match(i.regex) || []).length;\n                        field.value = field.value.replace(i.regex, ' ');\n                    }\n                    // Update token match count\n                    for (const f of fields) {\n                        const field = field_list[f];\n                        /* istanbul ignore else */\n                        if (field.matches >= i.count) {\n                            match_count++;\n                            // Update field matches\n                            let changed = 0;\n                            const tokens = (item[`match_${f}`] || item[f] || '').split(' ');\n                            for (const k of tokens) {\n                                /* istanbul ignore else */\n                                if (changed >= i.count) {\n                                    break;\n                                }\n                                /* istanbul ignore else */\n                                if (k.toLowerCase().indexOf(i.word) >= 0 && k.indexOf('`') < 0) {\n                                    tokens[tokens.indexOf(k)] = k.replace(i.regex, '`$&`');\n                                    changed++;\n                                }\n                            }\n                            item[`match_${f}`] = tokens.join(' ');\n                            break;\n                        }\n                    }\n                }\n            }\n            // Get field with the most relevent match\n            for (const f of fields) {\n                const field = field_list[f];\n                /* istanbul ignore else */\n                if (field.index < item.match_index && field.index >= 0) {\n                    item.match_index = field.index;\n                    item.match = f;\n                }\n            }\n            return item.match_index >= 0 && item.match && match_count >= parts.length;\n        });\n    } else {\n        results = item_list;\n    }\n    // Sort by order of relevence then name\n    results.sort((a, b) => {\n        const diff = a.match_index - b.match_index;\n        return diff === 0 ? a.name.localeCompare(b.name) : diff;\n    });\n    return results;\n}\n\n/**\n * Convert a match string from `filterList` to renderable HTML\n * @param str Match string to change\n */\nexport function matchToHighlight(str: string): string {\n    /* istanbul ignore else */\n    if (str) {\n        str = str.replace(/\\`[a-zA-Z0-9\\@\\.\\_]*\\`/g, '<span class=\"highlight\">$&</span>');\n        str = str.replace(/\\`/g, '');\n    }\n    return str;\n}\n\n/**\n * Convert time string to ms from UTC epoch for today\n * @param time Time string in the format `HH:mm`\n */\nexport function timeToDate(time: string): number {\n    const parts = time.split(':');\n    const date = dayjs()\n        .hour(+parts[0])\n        .minute(+parts[1])\n        .startOf('m');\n    return date.valueOf();\n}\n\n/**\n * Generate a random number\n * @param ceil Biggest value to generate not inclusive\n * @param floor Smallest value to generate. Defaults to 0\n */\nexport function randomInt(ceil: number, floor: number = 0) {\n    return Math.floor(Math.random() * (ceil - floor)) + floor;\n}\n\n/** Get time format string for locale */\nexport function timeFormatString(): string {\n    return is24HourTime() ? 'HH:mm' : 'h:mm A';\n}\n\n/** Whether locale string is displayed in 24 hour time */\nexport function is24HourTime(): boolean {\n    const date = new Date();\n    const localeString = date.toLocaleTimeString();\n    return localeString.indexOf('AM') < 0 && localeString.indexOf('PM') < 0;\n}\n\n/**\n * Downloads a file to the users computer with the given filename and contents\n * @param filename Name of the file to download\n * @param contents Contents of the file to download\n */\nexport function downloadFile(filename: string, contents: string) {\n    const element = document.createElement('a');\n    element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(contents));\n    element.setAttribute('download', filename);\n\n    element.style.display = 'none';\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n}\n\n/**\n * Parse raw CSV data into a JSON object\n * @param csv CSV data to parse\n */\nexport function csvToJson(csv: string) {\n    const lines = csv.split('\\n');\n    let fields = lines.splice(0, 1)[0].split(',');\n    fields = fields.map((v) => v.replace('\\r', ''));\n    const list: any[] = [];\n    for (const line of lines) {\n        let parts = line.split(',');\n        parts = parts.map((v) => v.replace('\\r', ''));\n        /* istanbul ignore else */\n        if (parts.length >= fields.length) {\n            const item: any = {};\n            for (let i = 0; i <= parts.length; i++) {\n                let part = null;\n                part = parts[i];\n                /* istanbul ignore else */\n                if (part !== undefined) {\n                    item[(fields[i] || '').split(' ').join('_').toLowerCase()] = part;\n                }\n            }\n            list.push(item);\n        }\n    }\n\n    return list;\n}\n\n/**\n * Convert javascript array to CSV string\n * @param json Javascript array to convert\n */\nexport function jsonToCsv(json: HashMap[]) {\n    /* istanbul ignore else */\n    if (json instanceof Array && json.length > 0) {\n        const keys = Object.keys(json[0]);\n        const valid_keys = keys.filter((key) => json[0].hasOwnProperty(key));\n        return `${valid_keys.join(',')}\\n${json\n            .map((item) => valid_keys.map((key) => item[key]).join(','))\n            .join('\\n')}`;\n    }\n    return '';\n}\n\n/* istanbul ignore next */\n/**\n * detect IE\n * returns version of IE or false, if browser is not Internet Explorer\n */\nexport function detectIE() {\n    var ua = window.navigator.userAgent;\n\n    var msie = ua.indexOf('MSIE ');\n    if (msie > 0) {\n        // IE 10 or older => return version number\n        return parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\n    }\n\n    var trident = ua.indexOf('Trident/');\n    if (trident > 0) {\n        // IE 11 => return version number\n        var rv = ua.indexOf('rv:');\n        return parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);\n    }\n\n    var edge = ua.indexOf('Edge/');\n    if (edge > 0) {\n        // Edge (IE 12+) => return version number\n        return parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);\n    }\n\n    // other browser\n    return false;\n}\n\n/**\n * Grab point details from mouse or touch event\n * @param event Event to grab details from\n */\nexport function eventToPoint(event: MouseEvent | TouchEvent): Point {\n    if (!event) {\n        return { x: -1, y: -1 };\n    }\n    if (event instanceof MouseEvent) {\n        return { x: event.clientX, y: event.clientY };\n    } else {\n        return event.touches && event.touches.length > 0\n            ? { x: event.touches[0].clientX, y: event.touches[0].clientY }\n            : { x: -1, y: -1 };\n    }\n}\n\n/**\n * Flatten nested array\n * @param an_array Array to flatten\n */\nexport function flatten<T = any>(an_array: T[]) {\n    const stack = [...an_array];\n    const res = [];\n    while (stack.length) {\n        // pop value from stack\n        const next = stack.pop();\n        if (Array.isArray(next)) {\n            // push back array items, won't modify the original input\n            stack.push(...next);\n        } else {\n            res.push(next);\n        }\n    }\n    // reverse to restore input order\n    return res.reverse();\n}\n","import { AbstractControl } from '@angular/forms';\n\nimport { User } from '../../services/data/users/user.class';\n\nimport * as dayjs from 'dayjs';\n\nconst HAS_ERROR = true;\n\n/**\n * Check that control value is a date that is the same or after from date\n * @param control Angular form control\n * @param is_from Comparison date(ms from UTC epoch). Defaults to the current time\n */\nexport function validateDate(control: AbstractControl, is_from: number = dayjs().valueOf()) {\n    const from = dayjs(is_from);\n    const date = dayjs(control.value || undefined);\n    return date.isBefore(from, 'd') ? { date: HAS_ERROR, message: 'Booking needs to be made in the future' } : null;\n}\n\n/**\n * Build start time validation function\n * @param date Date of the time to check\n * @param is_from Comparison date(ms from UTC epoch). Defaults to the current time\n */\nexport function buildValidateStartTime(date: number, is_from: number = dayjs().valueOf()) {\n    return (c) => validateStartTime(c, date, is_from);\n}\n\n/**\n * Check that control value time is after the comparison date time\n * @param control Angular form control\n * @param date Date of the time to check\n * @param is_from Comparison date(ms from UTC epoch). Defaults to the current time\n */\nexport function validateStartTime(control: AbstractControl, date: number, is_from: number = dayjs().valueOf()) {\n    const now = dayjs(is_from);\n    const parts = control.value.split(':');\n    const date_obj = dayjs(date).hour(+parts[0]).minute(+parts[1]);\n    return date_obj.isBefore(now, 'm') ? { start: HAS_ERROR, message: 'Booking time needs to be made in the future' } : null;\n}\n\nexport function buildValidateDuration(min: number = 30, max: number = 240) {\n    return (c) => validateDuration(c, min, max);\n}\n\nexport function validateDuration(control: AbstractControl, min: number = 30, max: number = 240) {\n    if (control.value < (min || 30)) {\n        return { duration: HAS_ERROR, message: `Minimum booking duration is ${min} minute${min === 1 ? 's' : ''}` };\n    } else if (control.value > (max || 480)) {\n        return { length: HAS_ERROR, message: `Maximum booking duration is ${max} minute${max === 1 ? 's' : ''}` };\n    }\n    return null;\n}\n\nexport function buildValidateAttendees(host: User, min: number = 0) {\n    return (c) => validateAttendees(c, host, min);\n}\n\nexport function validateAttendees(control: AbstractControl, host: User, min: number = 0) {\n    if (!control || !(control.value instanceof Array)) {\n        return min > 0\n            ? { invalid: true, message: `Minimum of ${min} attendee${min === 1 ? ' is' : 's are'} required other than you` }\n            : null;\n    }\n    const list: User[] = control.value;\n    if (host) {\n        const result = list.find(a => a.email === host.email);\n        if (result) { list.splice(list.indexOf(result), 1); }\n    }\n    return list.length >= min ? null : {\n        count: true,\n        message: `Minimum of ${min} attendee${min === 1 ? ' is' : 's are'} required other than you`\n    };\n}\n\nexport function validateEndTime(date_control: AbstractControl) {\n    return (control: AbstractControl) => {\n        const date = dayjs(date_control ? date_control.value : undefined).add(control.value || 60, 'm');\n        return date.isBefore(dayjs(), 'm') ? { end_time: true } : null;\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router, NavigationEnd, NavigationStart } from '@angular/router';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\n\nexport interface BookingFlowEvent {\n    /** Type of flow event */\n    type: 'previous' | 'next' | 'reset' | 'close' | 'error';\n    /** Step which the event was emitted from */\n    step: string;\n    /** Additional metadata for the event */\n    metadata?: HashMap;\n}\n\n@Component({\n    selector: 'app-bookings',\n    templateUrl: './bookings.component.html',\n    styleUrls: ['./bookings.component.scss'],\n})\nexport class BookingsComponent extends BaseDirective implements OnInit {\n    /** Booking flow */\n    public flow: 'spaces' | 'desks';\n    /** Whether to show the overlay menu */\n    public show_menu: boolean;\n\n    constructor(\n        private _service: ApplicationService,\n        private _route: ActivatedRoute,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.title = 'Book';\n        this.subscription(\n            'route.params',\n            this._route.paramMap.subscribe((params) => {\n                /* istanbul ignore else */\n                if (params.has('flow')) {\n                    this.flow = params.get('flow') as any;\n                }\n            })\n        );\n        this.subscription(\n            'router.events',\n            this._router.events.subscribe((event) => {\n                /* istanbul ignore else */\n                if (event instanceof NavigationStart) {\n                    /* istanbul ignore else */\n                    if (event.url.indexOf('book') < 0) {\n                        localStorage.removeItem('ACA_STAFF.booking_form_data');\n                    }\n                }\n            })\n        );\n    }\n}\n","<div class=\"booking page\">\n    <header class=\"header\">\n        <a-topbar-header [(menu)]=\"show_menu\"></a-topbar-header>\n    </header>\n    <main class=\"body\">\n        <ng-container [ngSwitch]=\"flow\">\n            <booking-desk-flow *ngSwitchCase=\"'desks'\"></booking-desk-flow>\n            <booking-space-flow *ngSwitchDefault></booking-space-flow>\n        </ng-container>\n    </main>\n    <footer class=\"footer\">\n        <a-footer-menu></a-footer-menu>\n    </footer>\n</div>\n<!-- <a-overlay-menu [(show)]=\"show_menu\"></a-overlay-menu> -->\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Route } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ComposerModule } from '@placeos/composer';\n\nimport { BookingsComponent } from './bookings.component';\nimport { SharedContentModule } from 'src/app/shared/shared.module';\nimport { BookingSpaceFlowComponent } from './space-flow/space-flow.component';\nimport { BookingSpaceFlowFormComponent } from './space-flow/form/form.component';\nimport { BookingFindSpaceComponent } from './space-flow/find-space/find-space.component';\nimport { BookingSpaceItemComponent } from './space-flow/find-space/item/item.component';\nimport { BookingSpaceFiltersComponent } from './space-flow/find-space/filters/filters.component';\nimport { BookingCateringComponent } from './space-flow/catering/catering.component';\nimport { BookingCateringOrderListComponent } from './space-flow/catering/order-list/order-list.component';\nimport { BookingCateringOrderDetailsComponent } from './space-flow/catering/order-details/order-details.component';\nimport { CateringOrderListItemComponent } from './space-flow/catering/order-list/item/item.component';\nimport { CateringMenuCategoryComponent } from './space-flow/catering/order-details/category/category.component';\nimport { BookingCateringConfirmModalComponent } from './overlays/catering-confirm-modal/catering-confirm-modal.component';\nimport { CateringMenuItemComponent } from './space-flow/catering/order-details/item/item.component';\nimport { PackageOptionsModalComponent } from './overlays/package-options-modal/package-options-modal.component';\nimport { RequirementDetailsModalComponent } from './overlays/requirement-details-modal/requirement-details-modal.component';\nimport { CateringDetailsModalComponent } from './overlays/catering-details-modal/catering-details-modal.component';\nimport { RecurrenceSpacesModalComponent } from './overlays/recurrence-spaces-modal/recurrence-spaces-modal.component';\n\nconst ROUTES: Route[] = [\n    { path: ':flow', component: BookingsComponent },\n    { path: ':flow/:step', component: BookingsComponent },\n    { path: '', redirectTo: 'spaces' }\n];\n\n@NgModule({\n    declarations: [\n        BookingsComponent,\n        BookingSpaceFlowComponent,\n        BookingSpaceFlowFormComponent,\n        BookingFindSpaceComponent,\n        BookingSpaceItemComponent,\n        BookingSpaceFiltersComponent,\n        BookingCateringComponent,\n        BookingCateringOrderListComponent,\n        BookingCateringOrderDetailsComponent,\n        CateringOrderListItemComponent,\n        CateringMenuCategoryComponent,\n        BookingCateringConfirmModalComponent,\n        CateringMenuItemComponent,\n        PackageOptionsModalComponent,\n        RequirementDetailsModalComponent,\n        CateringDetailsModalComponent,\n        RecurrenceSpacesModalComponent,\n    ],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(ROUTES),\n        SharedContentModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ComposerModule\n    ]\n})\nexport class BookingsModule {}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { humaniseDuration } from 'src/app/shared/utilities/general.utilities';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { UsersService } from 'src/app/services/data/users/users.service';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nimport * as dayjs from 'dayjs';\nimport { formatRecurrence } from 'src/app/shared/utilities/formatting.utilities';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\n\nexport interface BookingConfirmModalData {\n    old_booking: Booking;\n    booking: Booking;\n}\n\n@Component({\n    selector: 'a-booking-confirm-modal',\n    templateUrl: './booking-confirm.component.html',\n    styleUrls: ['./booking-confirm.component.scss'],\n})\nexport class BookingConfirmComponent extends BaseDirective {\n    /** Emitter for user actions on the modal */\n    @Output() public event = new EventEmitter();\n    /** Display string for changes are being processed */\n    public loading: string;\n    /** Whether space availability is being checked */\n    public checking_available: boolean;\n    /** Whether to show all attendees */\n    public show_attendees: boolean;\n    /** Whether to show all attendees */\n    public show_locations: boolean;\n    /** Whether to show all catering orders */\n    public show_orders: boolean;\n    /** Whether booking has succeeded */\n    public success: boolean;\n\n    /** Whether booking needs to be accepted */\n    public get is_request(): boolean {\n        const options = {\n            date: this.booking.date,\n            duration: this.booking.duration,\n            host: this.organiser,\n        };\n        return this.spaces.reduce((request, space) => request || space.byRequest(options), false);\n    }\n\n    /** Booking to confirm changes to */\n    public get old_booking(): Booking {\n        return this._data.old_booking;\n    }\n\n    /** Booking to confirm changes to */\n    public get booking(): Booking {\n        return this._data.booking;\n    }\n\n    /** Active user */\n    public get user(): User {\n        return this._users.current;\n    }\n\n    /** Title of the displayed event */\n    public get title(): string {\n        return this.booking.title;\n    }\n\n    /** Display string of when the event will occur */\n    public get when(): string {\n        const date_value = this.booking.date;\n        const duration_value = this.booking.duration;\n        const all_day = this.booking.all_day;\n        const date = dayjs(date_value);\n        const end = date.add(duration_value, 'm');\n        if (all_day || duration_value > 23 * 60) {\n            return `${date.format('DD MMM YYYY')} - All Day`;\n        } else {\n            if (date.isSame(end, 'd')) {\n                return `${date.format('DD MMM YYYY, h:mm A')} - ${end.format('h:mm A')}`;\n            } else {\n                return `${date.format('DD MMM YYYY, h:mm A')} - ${end.format(\n                    'DD MMM YYYY, h:mm A'\n                )}`;\n            }\n        }\n    }\n\n    /** Display string for the recurrence value of the booking */\n    public get recurrence(): string {\n        return formatRecurrence(this.booking.recurrence);\n    }\n\n    /** Display string for the event's duration */\n    public get duration(): string {\n        const duration_value = this.booking.duration;\n        return this.booking.all_day ? 'All Day' : humaniseDuration(duration_value);\n    }\n\n    /** List of spaces associated with the event */\n    public get spaces(): Space[] {\n        return this.booking.space_list;\n    }\n\n    /** List of attendees associated with the event not including the host */\n    public get attendees(): User[] {\n        const attendees = this.booking.attendees;\n        return attendees.filter((i) => i.email !== this.organiser.email);\n    }\n\n    /** Host of the event */\n    public get organiser(): User {\n        return this.booking.organiser || this._users.current;\n    }\n\n    /** Host of the event */\n    public get equipment_codes(): HashMap<string> {\n        return this.booking.equipment_codes || {};\n    }\n\n    /** Host of the event */\n    public get catering_codes(): HashMap<string> {\n        const catering = this.catering;\n        const codes = {};\n        for (const order of this.catering) {\n            codes[order.location_id] = order.charge_code;\n        }\n        return codes;\n    }\n\n    /** Host of the event */\n    public get equipment_notes(): HashMap<string> {\n        return this.booking.notes\n            .filter((note) => note.type === 'equipment')\n            .reduce((map, notes) => {\n                map[notes.space] = notes.message;\n                return map;\n            }, {});\n    }\n\n    /** Details about the event */\n    public get notes(): string {\n        return this.booking.body;\n    }\n\n    /** List of catering orders in the booking */\n    public get catering(): CateringOrder[] {\n        return (this.booking.catering || []).map((order) => {\n            const space: any = this.spaces.find(\n                (a_space) => a_space.email === order.location_id\n            ) || {\n                level: {},\n            };\n            const building: any =\n                this._org.buildings.find((bld) => bld.id === space.level.building_id) || {};\n            return new CateringOrder({ ...order, location: space.name, symbol: building.currency });\n        });\n    }\n\n    /** Map of changes to the booking */\n    public get changes(): HashMap<boolean> {\n        return {};\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _users: UsersService,\n        private _org: OrganisationService,\n        private _bookings: BookingsService,\n        private _spaces: SpacesService,\n        private _router: Router,\n        private _dialog_ref: MatDialogRef<BookingConfirmComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: BookingConfirmModalData\n    ) {\n        super();\n    }\n\n    /**\n     * Save booking changes\n     */\n    public saveChanges() {\n        this.loading = 'Checking availability of selected spaces';\n        this._dialog_ref.disableClose = true;\n        this.checkSpaceAvailability().then(\n            () => {\n                this.loading = 'Processing booking request...';\n                this.booking.time_changed =\n                    this.old_booking &&\n                    (this.old_booking.date !== this.booking.date ||\n                        this.old_booking.duration !== this.booking.duration);\n                this._bookings.save(this.booking).then(\n                    () => {\n                        this.loading = null;\n                        this.success = true;\n                        this._dialog_ref.disableClose = false;\n                        localStorage.removeItem('ACA_STAFF.booking_form_data');\n                        this.event.emit({ reason: 'done' });\n                        this._service.notifySuccess(\n                            `Successfully ${this.booking.id ? 'updated' : 'created'} booking`\n                        );\n                    },\n                    (err) => {\n                        this.loading = null;\n                        this._dialog_ref.disableClose = false;\n                        this._service.notifyError(\n                            `Error ${this.booking.id ? 'updating' : 'creating'} booking: ${err}`\n                        );\n                    }\n                );\n            },\n            (err) => {\n                this.loading = null;\n                this._dialog_ref.disableClose = false;\n                this._service.notifyError(`Error checking space availability: ${err}`);\n            }\n        );\n    }\n\n    public newBooking() {\n        localStorage.removeItem('ACA_STAFF.booking_form_data');\n        this._router.navigate(['/book', 'spaces']);\n        this._dialog_ref.close();\n    }\n\n    public toSchedule() {\n        localStorage.removeItem('ACA_STAFF.booking_form_data');\n        this._router.navigate(['/schedule']);\n        this._dialog_ref.close();\n    }\n\n    /**\n     * Check whether the selected spaces are available for the selected time period\n     */\n    public checkSpaceAvailability(): Promise<void> {\n        const spaces: Space[] = this.spaces;\n        if (\n            (this.booking.id && !this.changes.date && !this.changes.duration) ||\n            (spaces && spaces.length <= 0)\n        ) {\n            return Promise.resolve();\n        }\n        return new Promise((resolve, reject) => {\n            const all_day = this.booking.all_day;\n            this._spaces\n                .available({\n                    room_ids: spaces.map((space) => space.id).join(','),\n                    date: all_day\n                        ? dayjs(this.booking.date).startOf('d').valueOf()\n                        : this.booking.date,\n                    duration: all_day ? 24 * 60 : this.booking.duration,\n                })\n                .then(\n                    (space_list) => {\n                        console.log('Spaces:', space_list);\n                        for (const space of space_list) {\n                            if (!space.was_available) {\n                                return reject(\n                                    `${space.name} is not available at the select time period.`\n                                );\n                            }\n                        }\n                        if (space_list.length < spaces.length) {\n                            return reject(\n                                `${spaces[0].name} is not available at the select time period.`\n                            );\n                        }\n                        resolve();\n                    },\n                    (err) => reject(err)\n                );\n        });\n    }\n}\n","<mat-dialog-content *ngIf=\"!loading; else load_state\">\n    <main>\n        <button name=\"close\" mat-icon-button mat-dialog-close>\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"\n            ></app-icon>\n        </button>\n        <div class=\"details\">\n            <img\n                [src]=\"\n                    success\n                        ? is_request\n                            ? 'assets/img/requested.svg'\n                            : 'assets/img/confirmed.svg'\n                        : 'assets/img/edit.svg'\n                \"\n            />\n            <div class=\"text\">\n                Booking Details\n                <span *ngIf=\"success && !is_request\">Confirmed!</span>\n                <span class=\"request\" *ngIf=\"success && is_request\">Requested!</span>\n            </div>\n            <div class=\"info\" *ngIf=\"success && is_request\">Please await confirmation of room</div>\n        </div>\n        <div class=\"field\" name=\"title\">\n            <label>Title<span *ngIf=\"changes.title\">*</span>:</label>\n            <div class=\"value\">{{ title || 'No title' }}</div>\n        </div>\n        <div class=\"field\" name=\"when\">\n            <label>When<span *ngIf=\"changes.date\">*</span>:</label>\n            <div class=\"value\">{{ when }}</div>\n        </div>\n        <div class=\"field\" name=\"when\">\n            <label>Recurrence<span *ngIf=\"changes.recurrence\">*</span>:</label>\n            <div class=\"value\">{{ recurrence }}</div>\n        </div>\n        <div class=\"field\" name=\"duration\">\n            <label>Duration<span *ngIf=\"changes.duration\">*</span>:</label>\n            <div class=\"value\">{{ duration }}</div>\n        </div>\n        <div class=\"field multi\" name=\"location\">\n            <label\n                >Locations({{ spaces.length || '0' }})<span *ngIf=\"changes.location\">*</span\n                >:</label\n            >\n            <div class=\"value\">\n                <div class=\"list\" [class.shown]=\"show_locations\">\n                    <div class=\"list-item\" *ngFor=\"let item of spaces\" [title]=\"item?.name\">\n                        <div class=\"text\">{{ item?.name }}</div>\n                        <div\n                            class=\"tooltip\"\n                            *ngIf=\"equipment_notes[item.email]\"\n                            [matTooltip]=\"equipment_notes[item.email]\"\n                        >\n                            Notes\n                        </div>\n                        <div\n                            class=\"tooltip\"\n                            *ngIf=\"equipment_codes[item.email]\"\n                            [matTooltip]=\"\n                                (equipment_codes[item.email]\n                                    ? 'Equipment ~ ' + equipment_codes[item.email]\n                                    : '') +\n                                (catering_codes[item.email] && equipment_codes[item.email]\n                                    ? '\\n'\n                                    : '') +\n                                (catering_codes[item.email]\n                                    ? 'Catering ~ ' + catering_codes[item.email]\n                                    : '')\n                            \"\n                        >\n                            Code\n                        </div>\n                    </div>\n                    <div class=\"list-item\" *ngIf=\"!spaces.length\">No Locations</div>\n                </div>\n                <button\n                    class=\"show\"\n                    *ngIf=\"spaces.length > 5\"\n                    (click)=\"show_locations = !show_locations\"\n                >\n                    {{ show_locations ? 'Hide' : 'Show' }} Locations\n                </button>\n            </div>\n        </div>\n        <div class=\"field\" name=\"host\">\n            <label>Host<span *ngIf=\"changes.organiser\">*</span>:</label>\n            <div class=\"value\">{{ organiser?.name || organiser?.email }}</div>\n        </div>\n        <div class=\"field\" name=\"host\" *ngIf=\"organiser && organiser.email !== user.email\">\n            <label>Booked by<span *ngIf=\"changes.organiser\">*</span>:</label>\n            <div class=\"value\">{{ user?.name || user?.email }}</div>\n        </div>\n        <div class=\"field\" name=\"attendees\">\n            <label\n                >Attendees({{ attendees.length || '0' }})<span *ngIf=\"changes.attendees\">*</span\n                >:</label\n            >\n            <div class=\"value\">\n                <span *ngIf=\"!attendees || !attendees.length\">&lt;No Attendees&gt;</span>\n                <div class=\"list\" [class.shown]=\"show_attendees\">\n                    <div\n                        class=\"list-item\"\n                        *ngFor=\"let item of attendees\"\n                        [title]=\"item?.name + (item?.email ? '\\n' + item.email : '')\"\n                    >\n                        <div class=\"text\">\n                            <div class=\"name\">{{ item.name }}</div>\n                            <div class=\"email\" *ngIf=\"item.email\">\n                                <a [href]=\"'mailto:' + item.email + '?subject=' + booking.title\">{{\n                                    item.email\n                                }}</a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <button\n                    class=\"show\"\n                    *ngIf=\"attendees.length > 5\"\n                    (click)=\"show_attendees = !show_attendees\"\n                >\n                    {{ show_attendees ? 'Hide' : 'Show' }} Attendees\n                </button>\n            </div>\n        </div>\n        <div class=\"field\" name=\"notes\">\n            <label>Notes<span *ngIf=\"changes.body\">*</span>:</label>\n            <div class=\"value\" [innerHTML]=\"notes || 'No notes'\"></div>\n        </div>\n        <div class=\"field\" name=\"catering\">\n            <label\n                >Catering Orders({{ catering.length || '0' }})<span *ngIf=\"changes.catering\">*</span\n                >:</label\n            >\n            <div class=\"value\">\n                <div class=\"list\" [class.shown]=\"show_orders\">\n                    <div class=\"list-item\" *ngFor=\"let order of catering\">\n                        <div class=\"text\">\n                            <div class=\"name\">{{ order.location || '&lt;Removed&gt;' }}</div>\n                            <div class=\"email\">\n                                {{ order.item_count }} item{{ order.item_count === 1 ? '' : '' }} |\n                                {{ order.total / 100 | currency: order.symbol }}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <button\n                    class=\"show\"\n                    *ngIf=\"attendees.length > 5\"\n                    (click)=\"show_orders = !show_orders\"\n                >\n                    {{ show_orders ? 'Hide' : 'Show' }} Catering orders\n                </button>\n            </div>\n        </div>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading\">\n    <footer>\n        <ng-container *ngIf=\"!success; else success_actions\">\n            <button mat-button class=\"inverse\" mat-dialog-close>Edit</button>\n            <button mat-button name=\"save\" (click)=\"saveChanges()\">Save</button>\n        </ng-container>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <main>\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">\n                {{ loading }}\n            </div>\n        </div>\n    </main>\n</ng-template>\n<ng-template #success_actions>\n    <button mat-button class=\"inverse\" name=\"new\" (click)=\"newBooking()\">New Booking</button>\n    <a button mat-button mat-dialog-close (click)=\"toSchedule()\">My Day</a>\n</ng-template>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { FormGroup, FormControl } from '@angular/forms';\n\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\nimport * as dayjs from 'dayjs';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nexport interface CateringConfirmModalData {\n    all_day: boolean;\n    form: FormGroup;\n    date: number;\n}\n\n@Component({\n    selector: 'a-catering-confirm-modal',\n    templateUrl: './catering-confirm-modal.component.html',\n    styleUrls: ['./catering-confirm-modal.component.scss'],\n})\nexport class BookingCateringConfirmModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user actions on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of selected items for the order */\n    public item_list: CateringItem[] = [];\n\n    /** Space selected for delivery */\n    public get space(): Space {\n        return this._spaces.find(this._data.form?.controls?.location_id?.value);\n    }\n    /** Delivery time for the order */\n    public get delivery_time(): string {\n        let date = dayjs(this._data.date);\n        if (this._data.all_day) {\n            date = date.startOf('d');\n        }\n        if (this._data.form && this._data.form.controls.delivery_time) {\n            date = date.add(this._data.form.controls.delivery_time.value, 'm');\n        }\n        return date.format('h:mm A');\n    }\n\n    /** Form field for order items */\n    public get item_field(): FormControl {\n        return this._data.form.controls.items as any;\n    }\n\n    /** Total cost of the order */\n    public get order_cost(): number {\n        return this.item_list.reduce((amount, item) => amount + item.amount * item.unit_price, 0);\n    }\n\n    /** Currency symbol for the selected space */\n    public get symbol(): string {\n        /* istanbul ignore else */\n        if (!this.space || !this.space.level) {\n            return 'USD';\n        }\n        const building = this._org.buildings.find(\n            (bld) => bld.id === this.space.level.building_id\n        ) || { currency: 'USD' };\n        return building.currency;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _dialog_ref: MatDialogRef<BookingCateringConfirmModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringConfirmModalData\n    ) {\n        super();\n        if (!this._data.form) {\n            this._service.notifyError('No form data for order');\n            this._dialog_ref.close();\n        }\n    }\n\n    public ngOnInit(): void {\n        /* istanbul ignore else */\n        if (this._data.form.controls.items) {\n            this.subscription(\n                'item_list',\n                this._data.form.controls.items.valueChanges.subscribe((items) => {\n                    /* istanbul ignore else */\n                    if (!items || items.length <= 0) {\n                        this._dialog_ref.close();\n                    }\n                })\n            );\n        }\n        this.item_list = this._data.form.controls.items.value.map((item) => new CateringItem(item));\n    }\n}\n","<header>\n    <div class=\"heading\" i18n=\"Catering confirm order header\">Confirm Catering Order</div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main>\n        <div class=\"details\">\n            Delivering to <span>{{ space?.name || '&lt;Unset&gt;' }}</span> at <span>{{ delivery_time }}</span>\n        </div>\n        <div class=\"list\">\n            <a-catering-order-item\n                *ngFor=\"let item of item_list\"\n                [field]=\"item_field\"\n                [subitem]=\"true\"\n                [item]=\"item\"\n                [symbol]=\"symbol\"\n            ></a-catering-order-item>\n        </div>\n        <div class=\"total\">\n            <label>Order Total:</label>\n            <div class=\"value\">{{ order_cost / 100 | currency:symbol }}</div>\n        </div>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button (click)=\"event.emit({ reason: 'done' })\" i18n=\"Catering confirm save action\">Save Order</button>\n    </footer>\n</mat-dialog-actions>\n","import {\n    Component,\n    OnInit,\n    Inject,\n    Output,\n    EventEmitter,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { FormGroup, AbstractControl, FormControl } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { HashMap, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { BookingNote } from 'src/app/services/data/bookings/booking.interfaces';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\n\nimport * as dayjs from 'dayjs';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\nexport interface CateringDetailsModalData {\n    spaces: Space[];\n    notes_field: AbstractControl;\n    catering: AbstractControl;\n}\n\n@Component({\n    selector: 'a-catering-details-modal',\n    templateUrl: './catering-details-modal.component.html',\n    styleUrls: ['./catering-details-modal.component.scss'],\n})\nexport class CateringDetailsModalComponent implements OnInit {\n    /** Emitter for modal events */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Mapping of spaces to notes */\n    public notes: HashMap<string> = {};\n    /** Mapping of spaces to cost codes */\n    public codes: HashMap<string> = {};\n    /** Mapping of spaces to estimated head count */\n    public head_counts: HashMap<string> = {};\n    /** Mapping of spaces to form fields */\n    public form: HashMap<FormGroup> = {};\n    /** Map of spaces to whether they need a charge code */\n    public needs_charge_code: HashMap<boolean> = {};\n    /** Index of the active space */\n    public active_space: number = 0;\n\n    @ViewChild('content', { static: true }) private _content_el: ElementRef<HTMLElement>;\n\n    /** List of selected spaces */\n    public get space_list(): Space[] {\n        return (this._data.spaces || []).filter((space) =>\n            this._data.catering.value.find((order) => order.location_id === space.email)\n        );\n    }\n\n    public get active_form(): FormGroup {\n        return this.form[this.space_list[this.active_space].email];\n    }\n\n    /** Whether form fields are valid */\n    public get is_valid(): boolean {\n        return this.space_list.reduce(\n            (valid, space) => valid && this.form[space.email].valid,\n            true\n        );\n    }\n\n    constructor(\n        private _users: UsersService,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringDetailsModalData\n    ) {}\n\n    public ngOnInit(): void {\n        const note_list = this._data.notes_field.value.filter(\n            (note: BookingNote) => note.type === 'catering'\n        );\n        this.notes = note_list.reduce((map, note) => {\n            map[note.space] = note.message;\n            return map;\n        }, {});\n        this.codes = this._data.catering.value.reduce((map, order: CateringOrder) => {\n            map[order.location_id] = order.charge_code;\n            return map;\n        }, {});\n        this.generateFormFields();\n    }\n\n    public submit(): void {\n        this.space_list.forEach((space) => this.form[space.email].markAllAsTouched());\n        /* istanbul ignore else */\n        if (this.is_valid) {\n            // Update notes\n            const notes = this._data.notes_field.value.filter(\n                (note: BookingNote) => note.type !== 'catering'\n            );\n            const new_notes = this.space_list.map(\n                (space) =>\n                    ({\n                        author: this._users.current.name,\n                        type: 'catering',\n                        message: this.form[space.email].controls.notes.value,\n                        space: space.email,\n                        date: dayjs().valueOf(),\n                    } as BookingNote)\n            );\n            this._data.notes_field.setValue(notes.concat(new_notes).filter((note) => note.message));\n            const orders = this._data.catering.value.map(\n                (order) =>\n                    new CateringOrder({\n                        ...order,\n                        charge_code: this.form[order.location_id]\n                            ? this.form[order.location_id].controls.code.value\n                            : '',\n                    })\n            );\n            this._data.catering.setValue(orders);\n            this.event.emit({ reason: 'done' });\n        } else {\n            this._scrollToBottom();\n        }\n    }\n\n    /** Generate form fields for each space */\n    private generateFormFields(): void {\n        for (const space of this.space_list) {\n            this.form[space.email] = new FormGroup({\n                notes: new FormControl(this.notes[space.email] || ''),\n                code: new FormControl(this.codes[space.email] || ''),\n            });\n        }\n    }\n\n    /** Scroll the content container to the bottom */\n    private _scrollToBottom(): void {\n        this._content_el.nativeElement.scrollTo({\n            top: this._content_el.nativeElement.scrollHeight,\n            left: 0,\n            behavior: 'smooth',\n        });\n    }\n}\n","<div class=\"header\">\n    <div class=\"tabs\">\n        <mat-tab-group [(selectedIndex)]=\"active_space\">\n            <mat-tab\n                *ngFor=\"let space of space_list\"\n                [label]=\"space.name + (form[space.email].invalid && form[space.email].touched ? '*' : '')\"\n            ></mat-tab>\n        </mat-tab-group>\n    </div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</div>\n<mat-dialog-content>\n    <main>\n        <div class=\"details\">\n            <img src=\"assets/img/food-notes.svg\" />\n            <div class=\"text\">Please specify any allergies or gluten intolerances</div>\n        </div>\n        <form *ngIf=\"space_list[active_space] && active_form\" [formGroup]=\"active_form\">\n            <div class=\"field\">\n                <label for=\"equipment-notes\" i18n=\"Catering details equipment notes label\">\n                    (eg - allergies, in tolerances, no ice in drinks etc) Additional requests are\n                    handled in confidence.\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"equipment-notes\"\n                        formControlName=\"notes\"\n                        placeholder=\"Add notes here...\"\n                        i18n-placeholder\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label\n                    for=\"charge-code\"\n                    [class.error]=\"\n                        active_form.controls.code.touched && active_form.controls.code.invalid\n                    \"\n                    i18n=\"Catering details charge code label\"\n                >\n                    Charge Code<span *ngIf=\"needs_charge_code[space_list[active_space].email]\">*</span>\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"charge-code\"\n                        formControlName=\"code\"\n                        placeholder=\"Charge Code\"\n                        i18n-placeholder\n                    />\n                    <mat-error i18n=\"Catering details charge code error\">\n                        Charge Code is required\n                    </mat-error>\n                    <mat-hint i18n=\"Catering details charge code hint\">\n                        <span>Note:</span> Your booking will be confirmed before you are charged.\n                    </mat-hint>\n                </mat-form-field>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button (click)=\"submit()\" i18n=\"Catering details save action\">\n            Add to booking\n        </button>\n    </footer>\n</mat-dialog-actions>\n","import { Component, Output, EventEmitter, Inject } from '@angular/core';\n\nimport { DialogEvent, HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\n\nexport interface PackageOptionsModalData {\n    item: CateringCategory;\n}\n\nexport function checkItemRequirements(category: CateringCategory): boolean {\n    const items = category.items || [];\n    return category.must_select >= items.length\n        ? items.reduce((valid, item) => valid && checkItemRequirements(item as any), true)\n        : items.reduce((amount, item) => amount + (item.amount ? 1 : 0), 0) ===\n              category.must_select;\n}\n\nexport function getActiveItems(category: CateringCategory): HashMap<string> {\n    let map = {};\n    if (category.items) {\n        const item = category.items.find(item  => item.amount > 0);\n        if (item) {\n            map[category.id] = item.id;\n        }\n        category.items.forEach(item => map = { ...map, ...getActiveItems(item as any) })\n    }\n    return map;\n}\n\n@Component({\n    selector: 'a-package-options-modal',\n    templateUrl: './package-options-modal.component.html',\n    styleUrls: ['./package-options-modal.component.scss']\n})\nexport class PackageOptionsModalComponent {\n    /** Emitter for user actions on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    /** Item to select options for */\n    public get item(): CateringCategory {\n        return this._data.item;\n    }\n\n    /** Whether package requirements have been met */\n    public get requirements_met(): boolean {\n        return checkItemRequirements(this.item);\n    }\n\n    public get active_items(): HashMap<string> {\n        return getActiveItems(this.item);\n    }\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: PackageOptionsModalData) {}\n\n    /**\n     * Update the list of selected items\n     */\n    public updateAmount(a_package: CateringCategory, option: CateringItem, state: boolean) {\n        if (state) {\n            const needed = a_package.must_select;\n            const active = a_package.items.filter(an_item => an_item.amount > 0).length;\n            if (active >= needed) {\n                const item = a_package.items.find(an_item => an_item.amount > 0);\n                item.setAmount(0);\n            }\n            option.setAmount(1);\n        } else {\n            option.setAmount(0);\n        }\n    }\n}\n","<header>\n    <h3 i18n=\"Catering package options header\">Package Options</h3>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main>\n        <ng-container *ngTemplateOutlet=\"item_display; context: { package: item }\"></ng-container>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button [disabled]=\"!requirements_met\" (click)=\"event.emit({ reason: 'done' })\" i18n=\"Catering package options save action\">\n            Confirm Options\n        </button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #item_display let-package=\"package\">\n    <ng-container *ngIf=\"package.items && package.items.length\">\n        <mat-radio-group [ngModel]=\"active_items[package.id]\">\n            <div class=\"item\" *ngFor=\"let option of package.items\" [attr.to-select]=\"option.must_select\">\n            <ng-container\n                *ngIf=\"\n                    package.must_select &&\n                    package.must_select < package.items.length &&\n                    !option.must_select\n                \"\n            >\n                <mat-checkbox\n                    *ngIf=\"package.must_select > 1\"\n                    [checked]=\"!!option.amount\"\n                    (change)=\"updateAmount(package, option, $event.checked)\"\n                >\n                    {{ option.name }}\n                </mat-checkbox>\n                <mat-radio-button\n                    *ngIf=\"package.must_select === 1\"\n                    [value]=\"option.id\"\n                    (change)=\"updateAmount(package, option, true)\"\n                >\n                    {{ option.name }}\n                </mat-radio-button>\n            </ng-container>\n            <ng-container *ngIf=\"package.must_select >= package.items.length || option.must_select\">\n                {{ option.name }}\n            </ng-container>\n            <ng-container\n                *ngTemplateOutlet=\"item_display; context: { package: option }\"\n            ></ng-container>\n        </div>\n    </mat-radio-group>\n    </ng-container>\n</ng-template>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialog } from '@angular/material/dialog';\n\nimport { Space, RecurrenceAvailability } from 'src/app/services/data/spaces/space.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { SpaceSelectModalComponent, SpaceSelectModalData } from 'src/app/overlays/space-select-modal/space-select-modal.component';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\nimport { BookingRecurrenceSpaceDetails } from 'src/app/services/data/bookings/booking.interfaces';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\n\nimport * as dayjs from 'dayjs';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nexport interface RecurrenceSpacesModalData {\n    /** Space that has recurrence unavailability */\n    space: Space;\n    /** Duration of the booking */\n    duration: number;\n    /** Duration of the booking */\n    host: User;\n    /** List of current conflict matchups */\n    conflicts: BookingRecurrenceSpaceDetails[];\n}\n\nexport interface OccurrenceDetails extends RecurrenceAvailability {\n    /** Display string for the occurence datetime */\n    date_string: string;\n    /** Name of the space that replaces the space on this occurrence */\n    replaced_by: string;\n    /** Whether space needs to be requested */\n    is_request: boolean;\n}\n\n@Component({\n    selector: 'a-recurrence-spaces-modal',\n    templateUrl: './recurrence-spaces-modal.component.html',\n    styleUrls: ['./recurrence-spaces-modal.component.scss']\n})\nexport class RecurrenceSpacesModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for modal events */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of occurence details for space booking */\n    public occurrences: OccurrenceDetails[] = [];\n    /** List of space details for occurrences */\n    public space_details: BookingRecurrenceSpaceDetails[] = [];\n\n    /** Space to setup recurrence for */\n    public get space(): Space {\n        return this._data.space;\n    }\n\n    /** Whether all occurences have a valid space */\n    public get occurrences_valid(): boolean {\n        return this.occurrences.reduce((valid, event) => valid && (event.available || !!event.replaced_by), true);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: RecurrenceSpacesModalData,\n        private _dialog: MatDialog,\n        private _spaces: SpacesService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.space_details = [].concat(this._data.conflicts || []);\n        this.updateOccurrences();\n    }\n\n    public save() {\n        this.event.emit({\n            reason: 'done',\n            metadata: this.occurrences\n                .filter(i => i.replaced_by)\n                .map(i => this.space_details.find(j => j.date === i.date))\n        });\n    }\n\n    public selectSpace(occurrence: OccurrenceDetails) {\n        const ref = this._dialog.open<SpaceSelectModalComponent, SpaceSelectModalData>(\n            SpaceSelectModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                maxWidth: '95vw',\n                data: {\n                    spaces: [],\n                    zone_ids: this.space.level.building_id,\n                    date: occurrence.date * 1000,\n                    duration: this._data.duration,\n                    host: this._data.host,\n                    multiple: false\n                }\n            }\n        );\n        this.subscription(\n            'new_spaces',\n            ref.componentInstance.event.subscribe(event => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    const space = event.metadata[0];\n                    /* istanbul ignore else */\n                    if (space) {\n                        this.space_details.unshift({\n                            date: occurrence.date,\n                            space: space.email,\n                            replaces: this.space.email\n                        });\n                        this.space_details = unique(this.space_details, 'date');\n                    }\n                    this.updateOccurrences();\n                    ref.close();\n                    this.unsub('new_spaces');\n                }\n            })\n        );\n    }\n\n    private updateOccurrences() {\n        this.occurrences = this._data.space.recurr_available.map(event => {\n            const space_details = this.space_details.find(details => details.date === event.date && details.replaces === this.space.email);\n            const email = (space_details || {}).space;\n            const space = this._spaces.find(email) ||\n                {\n                    email,\n                    name: email,\n                    byRequest: () => this.space.byRequest({\n                        date: event.date * 1000,\n                        duration: this._data.duration,\n                        host: this._data.host\n                    })\n                };\n            return {\n                ...event,\n                date_string: dayjs(event.date * 1000).format('dddd, DD MMMM YYYY'),\n                replaced_by: space.name,\n                is_request: space.byRequest({\n                    date: event.date * 1000,\n                    duration: this._data.duration,\n                    host: this._data.host\n                })\n            };\n        });\n    }\n}\n","<header>\n    <div class=\"heading\" i18n=\"Space recurrence header\">Recurrence - {{ space.name }}</div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main>\n        <div class=\"info\" i18n=\"Space recurrence information\">\n            * Select individual dates to update selected space\n        </div>\n        <div class=\"item\" *ngFor=\"let item of occurrences\">\n            <div class=\"date\">{{ item.date_string }}</div>\n            <div class=\"action\">\n                <button\n                    [title]=\"item.replaced_by || (item.available ? space.name : 'Room Name')\"\n                    mat-button\n                    [class.request]=\"item.is_request\"\n                    [class.inverse]=\"!item.available && !item.replaced_by\"\n                    (click)=\"selectSpace(item)\"\n                >\n                    <div class=\"content\">\n                        {{ item.replaced_by || (item.available ? space.name : 'Find Room') }}\n                    </div>\n                </button>\n            </div>\n        </div>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button\n            mat-button\n            [disabled]=\"!occurrences_valid\"\n            (click)=\"save()\"\n            i18n=\"Space recurrence save action\"\n        >\n            Add to Booking\n        </button>\n    </footer>\n</mat-dialog-actions>\n","import { Component, OnInit, Inject, Output, EventEmitter, ViewChild, ElementRef } from '@angular/core';\nimport { FormGroup, Validators, AbstractControl, FormControl } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { HashMap, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { BookingNote } from 'src/app/services/data/bookings/booking.interfaces';\nimport { ApplicationService } from 'src/app/services/app.service';\n\nimport * as dayjs from 'dayjs';\nimport { UsersService } from 'src/app/services/data/users/users.service';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\nexport interface RequirementDetailsModalData {\n    spaces: Space[];\n    notes_field: AbstractControl;\n    codes_field: AbstractControl;\n    head_counts_field: AbstractControl;\n    standalone?: boolean;\n    recurrence?: boolean;\n}\n\n@Component({\n    selector: 'a-requirement-details-modal',\n    templateUrl: './requirement-details-modal.component.html',\n    styleUrls: ['./requirement-details-modal.component.scss']\n})\nexport class RequirementDetailsModalComponent implements OnInit {\n    /** Emitter for modal events */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Mapping of spaces to notes */\n    public notes: HashMap<string> = {};\n    /** Mapping of spaces to cost codes */\n    public codes: HashMap<string> = {};\n    /** Mapping of spaces to estimated head count */\n    public head_counts: HashMap<string> = {};\n    /** Mapping of spaces to form fields */\n    public form: HashMap<FormGroup> = {};\n    /** Map of spaces to whether they need a charge code */\n    public needs_charge_code: HashMap<boolean> = {};\n    /** Index of the active space */\n    public active_space: number = 0;\n\n    @ViewChild('content', { static: true }) private _content_el: ElementRef<HTMLElement>;\n\n    /** List of selected spaces */\n    public get space_list(): Space[] {\n        return this._data.spaces;\n    }\n\n    public get has_recurrence(): boolean {\n        return this._data.recurrence;\n    }\n\n    public get active_form(): FormGroup {\n        return this.form[this.space_list[this.active_space].email];\n    }\n\n    /** Whether form fields are valid */\n    public get is_valid(): boolean {\n        return this.space_list.reduce((valid, space) => valid && this.form[space.email].valid, true);\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _users: UsersService,\n        @Inject(MAT_DIALOG_DATA) private _data: RequirementDetailsModalData\n    ) {}\n\n    public ngOnInit(): void {\n        const note_list = this._data.notes_field.value\n            .filter((note: BookingNote) => note.type === 'equipment');\n        this.notes = note_list.reduce((map, note) => {\n            map[note.space] = note.message;\n            return map;\n        }, {});\n        this.codes = { ...this._data.codes_field.value };\n        this.head_counts = { ...this._data.head_counts_field.value };\n        this.generateFormFields();\n    }\n\n    public submit(): void {\n        this.space_list.forEach(space => this.form[space.email].markAllAsTouched());\n        /* istanbul ignore else */\n        if (this.is_valid) {\n            // Update notes\n            const notes = this._data.notes_field.value\n                .filter((note: BookingNote) => note.type !== 'equipment');\n            const new_notes = this.space_list.map(space => ({\n                author: this._users.current.name,\n                type: 'equipment',\n                message: this.form[space.email].controls.notes.value,\n                space: space.email,\n                date: dayjs().valueOf()\n            } as BookingNote));\n            this._data.notes_field.setValue(notes.concat(new_notes).filter(note => note.message));\n            this._data.codes_field.setValue(this.space_list.reduce((map, space) => {\n                map[space.email] = this.form[space.email].controls.code.value;\n                return map;\n            }, {}));\n            this._data.head_counts_field.setValue(this.space_list.reduce((map, space) => {\n                map[space.email] = this.form[space.email].controls.head_count.value;\n                return map;\n            }, {}));\n            this.event.emit({ reason: 'done' });\n        } else {\n            console.log('Scroll:', this._content_el.nativeElement, this._content_el.nativeElement.scrollHeight);\n            this._content_el.nativeElement.scrollTo({\n                top: this._content_el.nativeElement.scrollHeight,\n                left: 0,\n                behavior: 'smooth'\n            });\n        }\n    }\n\n    /** Generate form fields for each space */\n    private generateFormFields(): void {\n        for (const space of this.space_list) {\n            const building = this._org.buildings.find(\n                bld => bld.id === space.level.building_id\n            );\n            this.needs_charge_code[space.email] = building?.required?.equipment_code || false;\n            this.form[space.email] = new FormGroup({\n                notes: new FormControl(this.notes[space.email] || ''),\n                code: new FormControl(\n                    this.codes[space.email] || '',\n                    this.needs_charge_code[space.email] ? [Validators.required] : []\n                ),\n                head_count: new FormControl(this.head_counts[space.email] || '', [Validators.required])\n            });\n        }\n    }\n}\n","<div class=\"header\">\n    <div class=\"tabs\">\n        <mat-tab-group [(selectedIndex)]=\"active_space\">\n            <mat-tab\n                *ngFor=\"let space of space_list\"\n                [label]=\"\n                    space.name + (form[space.email].invalid && form[space.email].touched ? '*' : '')\n                \"\n            ></mat-tab>\n        </mat-tab-group>\n    </div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</div>\n<mat-dialog-content #content>\n    <main>\n        <div class=\"details\">\n            <img src=\"assets/img/equipment.svg\" />\n            <div class=\"text\" i18n=\"Booking equipment information\">\n                {{\n                    has_recurrence\n                        ? 'To update headcount information, add equipment or catering, please edit individual meeting occurences in My Day'\n                        : \"Would you like to add equipment to your booking's spaces?\"\n                }}\n            </div>\n        </div>\n        <form *ngIf=\"space_list[active_space] && active_form\" [formGroup]=\"active_form\">\n            <div class=\"field\" *ngIf=\"!has_recurrence\">\n                <label for=\"equipment-notes\" i18n=\"Booking equipment notes label\">\n                    (eg - particular room configurations or specific equipment etc) Additional\n                    requests are handled in confidence\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"equipment-notes\"\n                        formControlName=\"notes\"\n                        placeholder=\"Add notes here...\"\n                        i18n-placeholder\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"fieldset\">\n                <div\n                    class=\"field\"\n                    *ngIf=\"!has_recurrence || needs_charge_code[space_list[active_space].email]\"\n                >\n                    <label\n                        for=\"charge-code\"\n                        [class.error]=\"\n                            active_form.controls.code.touched && active_form.controls.code.invalid\n                        \"\n                        i18n=\"Booking equipment charge code label\"\n                    >\n                        Charge Code<span *ngIf=\"needs_charge_code[space_list[active_space].email]\"\n                            >*</span\n                        >\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"charge-code\"\n                            formControlName=\"code\"\n                            placeholder=\"Charge Code\"\n                            i18n-placeholder\n                        />\n                        <mat-hint i18n=\"Booking equipment charge code hint\">\n                            <span>Note:</span> Your booking will be confirmed before you are\n                            charged.\n                        </mat-hint>\n                        <mat-error i18n=\"Booking equipment charge code error\">\n                            Charge Code is required\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"field\">\n                    <label\n                        for=\"head-count\"\n                        [class.error]=\"\n                            active_form.controls.head_count.touched &&\n                            active_form.controls.head_count.invalid\n                        \"\n                        i18n=\"Booking equipment headcount label\"\n                    >\n                        Headcount Estimate<span>*</span>\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"head-count\"\n                            formControlName=\"head_count\"\n                            type=\"number\"\n                            placeholder=\"e.g. 12\"\n                            i18n-placeholder\n                        />\n                        <mat-hint i18n=\"Booking equipment headcount hint\">\n                            <span>Note:</span> This estimate is used to calculate catering and/or\n                            assign rooms. Please keep updated of any changes.\n                        </mat-hint>\n                        <mat-error i18n=\"Booking equipment headcount error\">\n                            Headcount Estimate is required\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button (click)=\"submit()\">Add to booking</button>\n    </footer>\n</mat-dialog-actions>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { BookingFlowEvent } from '../../bookings.component';\nimport { CateringOrder } from '../../../../services/data/catering/catering-order.class';\nimport { Space } from 'src/app/services/data/spaces/space.class';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'booking-catering',\n    templateUrl: './catering.component.html',\n    styleUrls: ['./catering.component.scss'],\n})\nexport class BookingCateringComponent {\n    /** Form fields for the booking */\n    @Input() public form: FormGroup;\n    /** Emitter for flow update events */\n    @Output() public event = new EventEmitter<BookingFlowEvent>();\n    /** Active order to display details for */\n    public active_order: CateringOrder;\n\n    /** Field for storing catering details */\n    public get catering_field() {\n        return this.form && this.form.controls.catering ? this.form.controls.catering : null;\n    }\n\n    /** List of spaces selected for the booking */\n    public get space_list(): Space[] {\n        return this.form && this.form.controls.space_list\n            ? this.form.controls.space_list.value\n            : [];\n    }\n\n    /** Date of the booking */\n    public get date(): number {\n        return this.form && this.form.controls.date\n            ? this.form.controls.date.value\n            : dayjs().startOf('m').valueOf();\n    }\n\n    /** Duration of the booking */\n    public get duration(): number {\n        return this.form && this.form.controls.duration ? this.form.controls.duration.value : 60;\n    }\n\n    /** Whether booking is all day */\n    public get all_day(): boolean {\n        return this.form && this.form.controls.all_day && this.form.controls.all_day.value;\n    }\n\n    /** Create a new catering order */\n    public newOrder(): void {\n        const order = new CateringOrder({});\n        this.active_order = order;\n    }\n\n    /** Handle changes to catering order */\n    public handleOrderEvent(order: CateringOrder) {\n        /* istanbul ignore else */\n        if (order) {\n            const orders = this.form.controls.catering.value;\n            const index = orders.findIndex((an_order) => order.id === an_order.id);\n            if (index < 0) {\n                orders.push(order);\n            } else {\n                orders.splice(index, 1, order);\n            }\n            this.form.controls.catering.setValue(orders);\n        }\n        this.active_order = null;\n    }\n}\n","<div class=\"catering\">\n    <ng-container *ngIf=\"!active_order; else order_display\">\n        <a-catering-order-list\n            [space_list]=\"space_list\"\n            [catering]=\"catering_field\"\n            [date]=\"date\"\n            [all_day]=\"all_day\"\n            (order)=\"$event ? (active_order = $event) : newOrder()\"\n            (event)=\"event.emit($event)\"\n        ></a-catering-order-list>\n    </ng-container>\n</div>\n<ng-template #order_display>\n    <a-catering-order-details\n        [space_list]=\"space_list\"\n        [order]=\"active_order\"\n        [date]=\"date\"\n        [duration]=\"duration\"\n        [all_day]=\"all_day\"\n        (event)=\"$event ? handleOrderEvent($event) : active_order = null\"\n    ></a-catering-order-details>\n</ng-template>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\n\n@Component({\n    selector: 'a-category-display',\n    templateUrl: './category.component.html',\n    styleUrls: ['./category.component.scss']\n})\nexport class CateringMenuCategoryComponent implements OnInit {\n    /** Category to display details for */\n    @Input() public category: CateringCategory;\n    /** Form control for the list of order items */\n    @Input() public items: FormControl;\n    /** Currency symbol for the active space */\n    @Input() public symbol: string;\n    /** Whether item should be disabled if not available anytime */\n    @Input() public disabled: boolean;\n    /** Emitter for close events */\n    @Output() public close = new EventEmitter<void>();\n\n    constructor() {}\n\n    ngOnInit(): void {}\n}\n","\n<div class=\"header\">\n    <div class=\"content\">\n        <button mat-icon-button name=\"to-categories\" (click)=\"close.emit()\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'arrow_back' }\"></app-icon>\n        </button>\n        <div class=\"name\">{{ category?.name }}</div>\n    </div>\n</div>\n<ng-container *ngIf=\"category.items && category.items.length; else empty_state\">\n    <div class=\"item\" *ngFor=\"let item of category.items\">\n        <a-catering-order-item [disabled]=\"disabled\" [symbol]=\"symbol\" [item]=\"item\" [field]=\"items\"></a-catering-order-item>\n    </div>\n</ng-container>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\" i18n=\"Catering category empty label\">Category contains no available items</div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { FormControl } from '@angular/forms';\n\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { ANIMATION_SHOW_CONTRACT_EXPAND } from 'src/app/shared/globals/angular-animations';\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { PackageOptionsModalComponent } from 'src/app/shell/bookings/overlays/package-options-modal/package-options-modal.component';\n\nfunction hasSelectionRequirements(category: CateringCategory) {\n    return (\n        category.must_select < category.items.length ||\n        (category.must_select === category.items.length &&\n            category.items.find((item: any) => item.items && item.must_select < item.items.length))\n    );\n}\n\nfunction getActiveList(category: CateringCategory) {\n    const items = category.items || [];\n    let list = items.filter((item) => item.amount > 0).map((item) => item.id);\n    for (const item of items) {\n        if ((item as any).items && (item as any).items.length) {\n            list = list.concat(getActiveList(item as any));\n        }\n    }\n    return list;\n}\n\n@Component({\n    selector: 'a-catering-order-item',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss'],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class CateringMenuItemComponent extends BaseDirective implements OnChanges {\n    /** Whether item is a child of another */\n    @Input() public subitem: boolean;\n    /** Item to display */\n    @Input() public item: CateringCategory;\n    /** Field for storing items */\n    @Input() public field: FormControl;\n    /** Current symbol for the selected space */\n    @Input() public symbol: string;\n    /** Whether item should be disabled if not available anytime */\n    @Input() public disabled: boolean;\n    /** Whether to show children items */\n    public show_children: boolean;\n\n    /** List of contents of the package */\n    public get contents(): string {\n        return this.item.items\n            ? this.item.items.reduce((list, item) => {\n                  /* istanbul ignore else */\n                  if (list) {\n                      list += '\\n\\n';\n                  }\n                  return (list += `${item.name}${\n                      (item as any).items\n                          ? (item as any).items.reduce(\n                                (a_list, an_item) =>\n                                    (a_list += `\\n ${an_item.amount ? '✓' : '•'} ${an_item.name} `),\n                                ''\n                            )\n                          : ''\n                  } ${item.amount ? '✓' : ''}`);\n              }, '')\n            : '';\n    }\n\n    constructor(private _service: ApplicationService, private _dialog: MatDialog) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.field && this.field) {\n            const list = this.field.value;\n            const item = list.find((an_item) => an_item.id === this.item.id);\n            this.item.setAmount(item ? item.amount : 0);\n            this.subscription(\n                'field_change',\n                this.field.valueChanges.subscribe((list) => {\n                    const item = list.find((an_item) => an_item.id === this.item.id);\n                    this.item.setAmount(item ? item.amount : 0);\n                    this.updatePackageSelection();\n                })\n            );\n        }\n    }\n\n    /**\n     * Update the amount of the item in the order\n     * @param value New amount\n     */\n    public updateAmount(value: number) {\n        /* istanbul ignore else */\n        if (this.field) {\n            const list: CateringItem[] = this.field.value;\n            const item = list.find((an_item) => an_item.id === this.item.id);\n            if (item) {\n                this.item.setAmount(value);\n                item.setAmount(value);\n            } else {\n                const amount = this.item.amount;\n                this.item.setAmount(value);\n                if (\n                    this.item.package &&\n                    amount < value &&\n                    this.item.items &&\n                    this.item.items.length &&\n                    hasSelectionRequirements(this.item)\n                ) {\n                    this.selectPackageOptions().then(\n                        (confirmed_item) => {\n                            list.push(new CateringCategory(confirmed_item));\n                            this.field.setValue(list.filter((an_item) => an_item.amount));\n                        },\n                        () => {\n                            this.item.setAmount(999);\n                            this.timeout('amount', () => this.item.setAmount(0), 5);\n                            this._service.notifyWarn(\n                                'Package options not selected. Item removed from order'\n                            );\n                        }\n                    );\n                } else {\n                    list.push(new CateringItem(this.item));\n                }\n            }\n            this.field.setValue(list.filter((an_item) => an_item.amount));\n        }\n    }\n\n    public updatePackageSelection() {\n        const cart_item = this.field.value.find((item) => item.id === this.item.id);\n        if (cart_item) {\n            const active_items = getActiveList(cart_item);\n            this.timeout(\n                'update_package',\n                () => {\n                    this.item.items.forEach((item) => {\n                        item.setAmount(active_items.includes(item.id) ? 1 : 0);\n                        if ((item as any).items) {\n                            (item as any).items.forEach((item) => {\n                                item.setAmount(active_items.includes(item.id) ? 1 : 0);\n                            });\n                        }\n                    });\n                },\n                5\n            );\n        }\n    }\n\n    /** Reselect package options */\n    public updatePackageOptions(): void {\n        this.selectPackageOptions().then(\n            () => null,\n            () => null\n        );\n    }\n\n    /**\n     * Open modal for user to select package options\n     */\n    private selectPackageOptions(): Promise<CateringCategory> {\n        return new Promise((resolve, reject) => {\n            const ref = this._dialog.open(PackageOptionsModalComponent, {\n                maxWidth: '95vw',\n                data: {\n                    item: new CateringCategory(this.item),\n                },\n            });\n            let done = false;\n            ref.componentInstance.event.subscribe((event) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    done = true;\n                    resolve(ref.componentInstance.item);\n                    ref.close();\n                }\n            });\n            ref.afterClosed().subscribe(() => {\n                /* istanbul ignore else */\n                if (!done) {\n                    reject();\n                }\n            });\n        });\n    }\n}\n","<div\n    class=\"catering-item\"\n    *ngIf=\"item\"\n    [class.subitem]=\"subitem\"\n    [class.package]=\"item.package\"\n    [attr.disabled]=\"disabled && !item.can_order_anytime\"\n>\n    <div\n        class=\"image\"\n        *ngIf=\"!subitem\"\n        [style.background-image]=\"'url(' + item.image_path + ')'\"\n    ></div>\n    <div class=\"details\">\n        <div class=\"name\">{{ item.name }}</div>\n        <div class=\"description\">{{ item.package ? '[Package] ' : '' }}{{ item.description }}</div>\n        <div class=\"options\">\n            <div class=\"option price mobile-only\" *ngIf=\"item.unit_price\">\n                {{ item.unit_price / 100 | currency: symbol }}\n            </div>\n            <div\n                class=\"option\"\n                *ngIf=\"item.package && item.items.length && !item.must_select\"\n                [matTooltip]=\"contents\"\n                i18n=\"Catering order item available options label\"\n            >\n                { item.items.length, plural, =1 { Contains {{ item.items.length }} item } other {\n                Contains {{ item.items.length }} items } }\n            </div>\n            <div\n                class=\"option\"\n                *ngIf=\"item.package && item.must_select && item.amount > 0\"\n                [matTooltip]=\"contents\"\n            >\n                {{ item.must_select }}\n                <span class=\"not-mobile\" i18n=\"Catering order item selected options label\">\n                    Selected\n                </span>\n            </div>\n            <button\n                mat-button\n                *ngIf=\"item.package && item.must_select && item.amount > 0\"\n                (click)=\"updatePackageOptions()\"\n                i18n=\"Catering order item options change action\"\n            >\n                Customise\n            </button>\n        </div>\n    </div>\n    <div class=\"option price not-mobile\" *ngIf=\"item.unit_price\">\n        {{ item.unit_price / 100 | currency: symbol }}\n    </div>\n    <a-counter\n        *ngIf=\"!item.items || item.package\"\n        [max]=\"item.maximum_quantity\"\n        [ngModel]=\"item.amount\"\n        (ngModelChange)=\"updateAmount($event)\"\n    ></a-counter>\n    <button\n        mat-icon-button\n        *ngIf=\"item.items && item.items.length && !item.package\"\n        (click)=\"show_children = !show_children\"\n    >\n        <app-icon\n            [icon]=\"{\n                class: 'material-icons',\n                content: show_children ? 'keyboard_arrow_up' : 'keyboard_arrow_down'\n            }\"\n        ></app-icon>\n    </button>\n</div>\n<div class=\"children\" [@show]=\"show_children ? 'show' : 'hide'\">\n    <a-catering-order-item\n        *ngFor=\"let sub_item of item.items\"\n        [subitem]=\"true\"\n        [symbol]=\"symbol\"\n        [item]=\"sub_item\"\n        [field]=\"field\"\n    ></a-catering-order-item>\n</div>\n","import { Component, OnInit, Input, SimpleChanges, Output, EventEmitter } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { FormGroup, FormControl } from '@angular/forms';\n\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { Identity, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { CateringMenuService } from 'src/app/services/data/catering/catering-menu.service';\n\nimport * as dayjs from 'dayjs';\nimport spacetime from 'spacetime';\nimport {\n    BookingCateringConfirmModalComponent,\n    CateringConfirmModalData,\n} from '../../../overlays/catering-confirm-modal/catering-confirm-modal.component';\n\n@Component({\n    selector: 'a-catering-order-details',\n    templateUrl: './order-details.component.html',\n    styleUrls: ['./order-details.component.scss'],\n})\nexport class BookingCateringOrderDetailsComponent extends BaseDirective implements OnInit {\n    /** Catering order to edit details of */\n    @Input() public order: CateringOrder;\n    /** Booking date */\n    @Input() public date: number;\n    /** Booking duration */\n    @Input() public duration: number;\n    /** Booking duration */\n    @Input() public space_list: Space[];\n    /** Whether booking is all day */\n    @Input() public all_day: boolean;\n    /** Whether top header details should be shown */\n    @Input() public hide_details: boolean;\n    /** Whether to show smaller version of component */\n    @Input() public compact: boolean;\n    /** Emitter for changes to the catering order */\n    @Output() public event = new EventEmitter<CateringOrder>();\n    /** Form controls for order */\n    public form: FormGroup;\n    /** List of available catering item categories */\n    public category_list: CateringCategory[] = [];\n    /** Active category to display details for */\n    public active_category: CateringCategory;\n    /** List of available times for delivering catering */\n    public available_times: Identity[] = [];\n    /** Whether the menu is loading */\n    public loading: boolean;\n\n    /** Whether user is able to order from the currently selected space */\n    public get can_order(): boolean {\n        return (\n            (this.active_building.has_catering || this.category_list.length) &&\n            (!this.within_restricted_time || this.has_available_items) &&\n            !this.out_of_hours\n        );\n    }\n\n    /** Building associated with the selected space */\n    public get active_building(): Building {\n        const form_controls = (this.form || { controls: { location_id: { value: '' } } }).controls;\n        const space: Space =\n            this.space_list.find((space) => space.email == form_controls.location_id.value) ||\n            ({ level: {} } as any);\n        return (\n            this._org.buildings.find((bld) => space.level.building_id === bld.id) ||\n            ({ catering_restricted_from: 0 } as any)\n        );\n    }\n\n    /** Currency code for the active building */\n    public get symbol(): string {\n        return this.active_building.currency || 'USD';\n    }\n\n    /** Number of items in the order */\n    public get item_count(): number {\n        return this.form\n            ? this.form.controls.items.value.reduce((total, item) => total + item.amount, 0)\n            : 0;\n    }\n\n    /** Whether booking time is outside of catering hours */\n    public get out_of_hours(): boolean {\n        return this.form.controls.delivery_time.value < 0;\n    }\n\n    /** Whether booking is with the restricted ordering period */\n    public get within_restricted_time(): boolean {\n        const building = this.active_building;\n        /* istanbul ignore else */\n        if (!building.catering_restricted_from || building.catering_restricted_from <= 0) {\n            return false;\n        }\n        const date = dayjs();\n        const restricted = dayjs(this.date).subtract(building.catering_restricted_from, 'h');\n        return date.isAfter(restricted, 's');\n    }\n\n    /** Whether items are available for order at anytime */\n    public get has_available_items(): boolean {\n        return this.category_list.reduce(\n            (available, category) => available || category.can_order_anytime,\n            false\n        );\n    }\n\n    constructor(\n        private _menu: CateringMenuService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.generateAvailableTimes();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.date || changes.duration) {\n            this.generateAvailableTimes();\n            /* istanbul ignore else */\n            if (\n                this.form &&\n                !this.available_times.find(\n                    (time) => time.id === this.form.controls.delivery_time.value\n                )\n            ) {\n                this.form.controls.delivery_time.setValue(this.available_times[0].id);\n            }\n        }\n        /* istanbul ignore else */\n        if (changes.space_list) {\n            /* istanbul ignore else */\n            if (this.form && this.space_list && !this.form.controls.location_id.value) {\n                this.form.controls.location_id.setValue(this.space_list[0].email);\n            }\n        }\n        /* istanbul ignore else */\n        if (changes.order && this.order) {\n            this.initForm();\n        }\n    }\n\n    public initForm() {\n        this.form = new FormGroup({\n            id: new FormControl(this.order.id),\n            booking_date: new FormControl(\n                this.all_day ? dayjs(this.date).startOf('d').valueOf() : this.date\n            ),\n            location_id: new FormControl(this.order.location_id || this.space_list[0].email),\n            delivery_time: new FormControl(this.order.delivery_time || this.available_times[0].id),\n            items: new FormControl(this.order.items.map((item) => new CateringItem(item))),\n        });\n        this.subscription(\n            'space_change',\n            this.form.controls.location_id.valueChanges.subscribe((space) => {\n                this.generateAvailableTimes();\n                if (\n                    !this.available_times.find(\n                        (time) => time.id === this.form.controls.delivery_time.value\n                    )\n                ) {\n                    this.form.controls.delivery_time.setValue(this.available_times[0].id);\n                }\n                this.form.controls.items.setValue([]);\n                this.loadMenu();\n            })\n        );\n        this.loadMenu();\n    }\n\n    public confirmOrder() {\n        const ref = this._dialog.open<\n            BookingCateringConfirmModalComponent,\n            CateringConfirmModalData\n        >(BookingCateringConfirmModalComponent, {\n            maxWidth: '95vw',\n            data: {\n                all_day: this.all_day,\n                date: this.date,\n                form: this.form,\n            },\n        });\n        this.subscription(\n            'confirm_event',\n            ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    const order = new CateringOrder({ ...this.order, ...(this.form?.value || {}) });\n                    this.event.emit(order);\n                    ref.close();\n                }\n            })\n        );\n        ref.afterClosed().subscribe(() => this.unsub('confirm_event'));\n    }\n\n    private loadMenu() {\n        const space = this.space_list.find(\n            (space) => space.email === this.form.controls.location_id.value\n        );\n        this.loading = true;\n        this._menu.query({ room_id: space.id }).then(\n            (list) => {\n                this.loading = false;\n                this.category_list = list.map((i) => new CateringCategory(i));\n                this.generateAvailableTimes();\n                if (\n                    this.form &&\n                    !this.available_times.find(\n                        (time) => time.id === this.form.controls.delivery_time.value\n                    )\n                ) {\n                    this.form.controls.delivery_time.setValue(this.available_times[0].id);\n                }\n            },\n            () => (this.loading = false)\n        );\n    }\n\n    /** Generate a list of available delivery times for the given booking time */\n    private generateAvailableTimes() {\n        const start_date = this.all_day ? dayjs(this.date).startOf('d') : dayjs(this.date);\n        let { start, end } = this.generateStartAndEndTimes();\n        start = start.minute(Math.ceil(start.minute() / 5) * 5);\n        this.available_times = [];\n        while (start.isBefore(end, 'm')) {\n            this.available_times.push({\n                id: Math.abs(start_date.diff(start, 'm')),\n                name: start.format('h:mm A'),\n            });\n            start = start.add(5, 'm');\n        }\n        /* istanbul ignore else */\n        if (this.available_times.length === 0) {\n            this.available_times.push({ id: -1, name: 'Out of hours' });\n        }\n    }\n\n    private generateStartAndEndTimes(): { start: dayjs.Dayjs; end: dayjs.Dayjs } {\n        let start = dayjs(this.date);\n        const now = dayjs();\n        /* istanbul ignore else */\n        if (this.all_day) {\n            start = start.isSame(now, 'd') ? now : start.startOf('d');\n        }\n        let end = this.all_day ? start.endOf('d') : start.add(this.duration, 'm');\n        let building_time = spacetime(start.toDate());\n        const space_email = this.form ? this.form.controls.location_id.value : null;\n        let catering_hours = { start: 7, end: 20 };\n        if (space_email) {\n            const space = this.space_list.find((space) => space.email === space_email);\n            const building = this._org.buildings.find((bld) => bld.id === space?.level.building_id);\n            if (building && building.timezone) {\n                building_time = building_time.goto(building.timezone);\n            }\n            catering_hours = building.catering_hours || catering_hours;\n        }\n        building_time = building_time.hour(catering_hours.start);\n        const as_dayjs = dayjs(building_time.toLocalDate());\n        if (this.all_day || this.duration >= (catering_hours.end - catering_hours.start) * 60) {\n            if (start.isBefore(as_dayjs, 'm')) {\n                start = as_dayjs;\n                end = start.add(catering_hours.end - catering_hours.start, 'h');\n            }\n        }\n        if (start.isBefore(as_dayjs, 'm')) {\n            start = as_dayjs;\n        }\n        const possible_end = dayjs(\n            building_time\n                .startOf('hour')\n                .hour(catering_hours.end)\n                .toLocalDate()\n        );\n        if (end.isAfter(possible_end, 'm')) {\n            end = possible_end;\n        }\n        return { start, end };\n    }\n}\n","<div class=\"catering order-details\" [class.compact]=\"compact\">\n    <div class=\"header\" *ngIf=\"form && !hide_details\">\n        <form [formGroup]=\"form\">\n            <div class=\"field\">\n                <label i18n=\"Catering order location label\">Deliver to:</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select formControlName=\"location_id\">\n                        <mat-option *ngFor=\"let space of space_list\" [value]=\"space.email\">\n                            {{ space.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"start\" i18n=\"Catering order delivery time label\">At:</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select name=\"start\" formControlName=\"delivery_time\">\n                        <mat-option *ngFor=\"let time of available_times\" [value]=\"time.id\">\n                            {{ time.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </form>\n    </div>\n    <div class=\"body\" *ngIf=\"!loading; else load_state\">\n        <ng-container *ngIf=\"!active_category; else category_display\">\n            <div class=\"contents\" *ngIf=\"can_order && category_list.length; else empty_state\">\n                <button\n                    mat-button\n                    class=\"category\"\n                    *ngFor=\"let item of category_list\"\n                    [style.background-image]=\"'url(' + item.image_path + ')'\"\n                    [disabled]=\"within_restricted_time && !item.can_order_anytime\"\n                    (click)=\"active_category = item\"\n                >\n                    <div class=\"overlay\"></div>\n                    <div class=\"name\">{{ item.name }}</div>\n                </button>\n            </div>\n        </ng-container>\n    </div>\n    <div class=\"footer\">\n        <button mat-button class=\"inverse\" (click)=\"event.emit()\" i18n=\"Catering order cancel action\">Back</button>\n        <button mat-button name=\"confirm\" [disabled]=\"!item_count || out_of_hours\" (click)=\"confirmOrder()\" i18n=\"Catering order confirm action\">\n            Confirm Order({{ item_count || '0' }})\n        </button>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div class=\"empty-state center\">\n        <div class=\"icon\">\n            <img alt=\"No Catering Available\" src=\"assets/img/no-catering.svg\" />\n        </div>\n        <p i18n=\"Catering order unavailable\">\n            Catering is <span class=\"bold\">not available</span> for this booking.<br />\n            Catering must be ordered within business hours\n            <span *ngIf=\"active_building?.catering_restricted_from\" class=\"bold\">\n                at least {{ active_building?.catering_restricted_from || '0' }} hours in advance for\n                meetings\n            </span>\n            at {{ active_building?.name }}.\n        </p>\n    </div>\n</ng-template>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"48\"></mat-spinner>\n            </div>\n            <div class=\"text\" i18n=\"Catering order loading label\">Loading menu for {{ active_building?.name }}...</div>\n        </div>\n    </div>\n</ng-template>\n<ng-template #category_display>\n    <a-category-display\n        [category]=\"active_category\"\n        [symbol]=\"symbol\"\n        [items]=\"form.controls.items\"\n        [disabled]=\"within_restricted_time\"\n        (close)=\"active_category = null\"\n    ></a-category-display>\n</ng-template>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\nimport * as dayjs from 'dayjs';\nimport { Space } from 'src/app/services/data/spaces/space.class';\n\n@Component({\n    selector: 'catering-order-list-item',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss'],\n})\nexport class CateringOrderListItemComponent {\n    /** Catering order to display */\n    @Input() order: CateringOrder;\n    /**  */\n    @Input() public space_list: Space[];\n    /** Selected datetime */\n    @Input() date: number;\n    /** Emitter for edit events */\n    @Output() public edit = new EventEmitter<void>();\n    /** Emitter for delete events */\n    @Output() public delete = new EventEmitter<void>();\n\n    public get space_in_booking(): boolean {\n        return !!(this.space_list || []).find(space => space.email === this.order.location_id);\n    }\n    /** Space selected for delivery */\n    public get space(): string {\n        const space = this._spaces.find((this.order || {}).location_id) || { name: '' };\n        return space.name || '<No Location>';\n    }\n    /** Delivery time for the order */\n    public get delivery_time(): string {\n        /* istanbul ignore else */\n        if (!this.order) {\n            return '<Meeting Start>';\n        }\n        const date = dayjs(this.order.booking_date).add(\n            (this.order.changes ? this.order.delivery_time : null) || this.order.delivery_time,\n            'm'\n        );\n        return date.format('h:mm A');\n    }\n\n    /** Total cost of the order */\n    public get order_cost(): number {\n        const items = (this.order || { items: [] }).items as any;\n        return items.reduce((amount, item) => amount + item.amount * item.unit_price, 0);\n    }\n\n    /** Number of items in the order */\n    public get item_count(): number {\n        const items = (this.order || { items: [] }).items as any;\n        return items.reduce((amount, item) => amount + item.amount, 0);\n    }\n\n    /** Currency symbol for the selected space */\n    public get symbol(): string {\n        const space = this._spaces.find((this.order || {}).location_id);\n        /* istanbul ignore else */\n        if (!space || !space.level) {\n            return 'USD';\n        }\n        const building = this._org.buildings.find((bld) => bld.id === space.level.building_id) || {\n            currency: 'USD',\n        };\n        return building.currency;\n    }\n\n    constructor(private _spaces: SpacesService, private _org: OrganisationService) {}\n}\n","<div class=\"details\" i18n=\"Catering order item delivery details\">\n    Deliver to <span>{{ space }}</span> at <span>{{ delivery_time }}</span>\n</div>\n<div class=\"group\">\n    <div class=\"cost\">\n        {{ item_count }}\n        <span i18n=\"Items\">{ item_count, plural, =1 { item } other { items } }</span>\n    </div>\n    <div class=\"cost\">{{ order_cost / 100 | currency: symbol }}</div>\n</div>\n<div class=\"actions\">\n    <button\n        mat-icon-button\n        name=\"edit\"\n        [class.warn]=\"!space_in_booking\"\n        (click)=\"edit.emit()\"\n        [matTooltip]=\"\n            !space_in_booking\n                ? 'Space for this order is not in the booking anymore. On confirmation this order will be removed unless the space is re-added.'\n                : ''\n        \"\n    >\n        <app-icon\n            [icon]=\"{ class: 'material-icons', content: space_in_booking ? 'edit' : 'warning' }\"\n        ></app-icon>\n    </button>\n    <button mat-icon-button name=\"delete\" class=\"inverse\" (click)=\"delete.emit()\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'delete' }\"></app-icon>\n    </button>\n</div>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { CateringOrder } from '../../../../../services/data/catering/catering-order.class';\nimport { BookingFlowEvent } from '../../../bookings.component';\n\nimport * as dayjs from 'dayjs';\nimport { Space } from 'src/app/services/data/spaces/space.class';\n\n@Component({\n    selector: 'a-catering-order-list',\n    templateUrl: './order-list.component.html',\n    styleUrls: ['./order-list.component.scss']\n})\nexport class BookingCateringOrderListComponent {\n    /** Form field for storing catering orders */\n    @Input() public catering: FormControl;\n    /** Selected datetime for the booking */\n    @Input() public date: number;\n    /**  */\n    @Input() public space_list: Space[];\n    /** Whether booking is all day */\n    @Input() public all_day: boolean;\n    /** Emitter for flow update events */\n    @Output() public event = new EventEmitter<BookingFlowEvent>();\n    /** Emiiter for order events */\n    @Output() public order = new EventEmitter<CateringOrder>();\n\n    /** List of orders in the booking */\n    public get orders(): CateringOrder[] {\n        /* istanbul ignore else */\n        if (!this.catering) {\n            return [];\n        }\n        const orders = this.catering.value;\n        orders.forEach(\n            order =>\n                (order.booking_date = this.all_day\n                    ? dayjs(this.date)\n                          .startOf('d')\n                          .valueOf()\n                    : this.date)\n        );\n        return orders;\n    }\n\n    /** Emit event for a new catering order */\n    public newOrder() {\n        this.order.emit();\n    }\n\n    /** Emit event for editing existing order */\n    public editOrder(order: CateringOrder) {\n        this.order.emit(order);\n    }\n\n    /** Remove order from the list */\n    public deleteOrder(order: CateringOrder) {\n        const orders = this.orders;\n        const index = orders.findIndex(an_order => order.id === an_order.id);\n        /* istanbul ignore else */\n        if (index >= 0) {\n            orders.splice(index, 1);\n            this.catering.setValue(orders);\n        }\n    }\n\n    /**\n     * Proceed to the next step in the space booking flow\n     */\n    public next(): void {\n        this.event.emit({ type: 'next', step: 'catering' });\n    }\n\n    /** Move flow to previous step */\n    public previous(): void {\n        this.event.emit({ type: 'previous', step: 'catering' });\n    }\n}\n","<div class=\"catering order-list\">\n    <div class=\"header\">\n        <h3 i18n=\"Catering order list header\">Catering Orders</h3>\n    </div>\n    <div class=\"body\">\n        <ng-container *ngIf=\"orders && orders.length; else empty_state\">\n            <div class=\"list\">\n                <catering-order-list-item\n                    *ngFor=\"let order of orders\"\n                    [space_list]=\"space_list\"\n                    [order]=\"order\"\n                    [date]=\"date\"\n                    (edit)=\"editOrder(order)\"\n                    (delete)=\"deleteOrder(order)\"\n                ></catering-order-list-item>\n            </div>\n            <button mat-button name=\"new\" (click)=\"newOrder()\" i18n=\"Catering order list add action\">\n                Add Order\n            </button>\n        </ng-container>\n    </div>\n    <div class=\"footer\">\n        <button\n            mat-button\n            class=\"inverse\"\n            name=\"previous\"\n            (click)=\"previous()\"\n            i18n=\"Catering order list cancel action\"\n        >\n            Back\n        </button>\n        <button mat-button name=\"next\" (click)=\"next()\" i18n=\"Catering order list continue action\">\n            Next\n        </button>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\" i18n=\"Catering order list empty label\">No catering orders</div>\n        <button mat-button name=\"new\" (click)=\"newOrder()\" i18n=\"Catering order list add action\">\n            Add Order\n        </button>\n    </div>\n</ng-template>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\n\nimport * as dayjs from 'dayjs';\nimport { ANIMATION_SHOW_CONTRACT_EXPAND } from 'src/app/shared/globals/angular-animations';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\n\n@Component({\n    selector: 'booking-space-filters',\n    templateUrl: './filters.component.html',\n    styleUrls: ['./filters.component.scss'],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND]\n})\nexport class BookingSpaceFiltersComponent extends BaseDirective implements OnInit {\n    /** Date selected for the booking */\n    @Input() public date: FormControl;\n    /** List of location IDs being filtered on */\n    @Input() public locations: string[] = [];\n    /** Emitter for changes to location filter */\n    @Output() public locationsChange = new EventEmitter<string[]>();\n    /** List of available buildings */\n    public building_list: Building[] = [];\n    /** Whether to show the location list */\n    public show_locations: boolean;\n\n    /** Whether active date is current day */\n    public get is_today(): boolean {\n        const date = dayjs(this.date.value);\n        return dayjs().isSame(date, 'd');\n    }\n\n    /** Display string for the selected date */\n    public get date_display(): string {\n        const date = dayjs(this.date.value);\n        return this.is_today ? 'Today' : date.format('DD MMM YYYY');\n    }\n\n    /** List of filtered location */\n    public get location_list(): Building[] {\n        return this.locations.map(id => this.building_list.find(bld => bld.id === id));\n    }\n\n    public get building_selected(): HashMap<boolean> {\n        const map = {};\n        for (const id of this.locations) {\n            map[id] = true;\n        }\n        return map;\n    }\n\n    constructor(private _org: OrganisationService) {\n        super();\n    }\n\n    public changeDate(amount: number) {\n        let date = dayjs(this.date.value).add(amount, 'd');\n        const now = dayjs().startOf('m');\n        if (date.isBefore(now, 's')) {\n            date = now;\n        }\n        this.date.setValue(date.valueOf());\n    }\n\n    public ngOnInit(): void {\n        this.loadLocations();\n        this.subscription('buildings', this._org.listen('buildings').subscribe((bld_list) => {\n            this.building_list = bld_list;\n        }));\n    }\n\n    /**\n     * Update location filter to include the given building\n     * @param building Building to add\n     */\n    public addLocationFilter(building: Building): void {\n        this.locations.push(building.id);\n        this.locations = unique(this.locations);\n        this.locationsChange.emit(this.locations);\n        this.storeLocations();\n    }\n\n    /**\n     * Remove location from the active filters\n     * @param building Building to remove\n     */\n    public removeLocationFilter(building: Building) {\n        this.locations.splice(\n            this.locations.findIndex(id => building.id === id),\n            1\n        );\n        this.locationsChange.emit([...this.locations]);\n        this.storeLocations();\n    }\n\n    private loadLocations() {\n        if (localStorage) {\n            const filters = localStorage.getItem('BOOKING.filters');\n            if (!filters) { return; }\n            try {\n                this.locations = JSON.parse(filters);\n            } catch(e) {\n                this.locations = [];\n            }\n        }\n        this.locationsChange.emit(this.locations);\n    }\n\n    private storeLocations() {\n        if (localStorage) {\n            localStorage.setItem('BOOKING.filters', JSON.stringify(this.locations));\n        }\n    }\n}\n","<div class=\"space-filters\" *ngIf=\"date\">\n    <div class=\"actions\">\n        <div class=\"date\">\n            <button mat-icon-button [disabled]=\"is_today\" (click)=\"changeDate(-1)\">\n                <app-icon\n                    [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_left' }\"\n                ></app-icon>\n            </button>\n            <div class=\"text\">{{ date_display }}</div>\n            <button mat-icon-button (click)=\"changeDate(1)\">\n                <app-icon\n                    [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_right' }\"\n                ></app-icon>\n            </button>\n        </div>\n        <div class=\"location-list\" [matMenuTriggerFor]=\"locationMenu\">\n            <div class=\"inner\" (click)=\"show_locations = !show_locations\">\n                <img src=\"assets/img/location-img.svg\" />\n                <div class=\"text\" i18n=\"Booking space filters locations label\">\n                    Select locations(s)\n                </div>\n                <app-icon\n                    [icon]=\"{\n                        class: 'material-icons',\n                        content: 'keyboard_arrow_' + (show_locations ? 'up' : 'down')\n                    }\"\n                ></app-icon>\n            </div>\n        </div>\n    </div>\n    <div class=\"filters\" *ngIf=\"location_list && location_list.length\">\n        <mat-chip-list aria-label=\"Location Filters\">\n            <mat-chip\n                *ngFor=\"let building of location_list\"\n                [id]=\"building.id\"\n                color=\"primary\"\n                [removable]=\"true\"\n                (removed)=\"removeLocationFilter(building)\"\n            >\n                {{ building.name }}\n                <app-icon\n                    matChipRemove\n                    [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"\n                ></app-icon>\n            </mat-chip>\n        </mat-chip-list>\n    </div>\n</div>\n<mat-menu #locationMenu=\"matMenu\" class=\"dark-mode\">\n    <button mat-menu-item (click)=\"$event.stopPropagation()\" *ngFor=\"let building of building_list\">\n        <mat-checkbox\n            [ngModel]=\"building_selected[building.id]\"\n            (change)=\"$event.checked ? addLocationFilter(building) : removeLocationFilter(building)\"\n        >\n            <div class=\"building-name\">\n                <div class=\"code\">{{ building.code }}</div>\n                <div class=\"name\">{{ building.name }}</div>\n                <div class=\"address\">{{ building.address }}</div>\n            </div>\n        </mat-checkbox>\n    </button>\n</mat-menu>\n","import {\n    Component,\n    OnInit,\n    Input,\n    SimpleChanges,\n    EventEmitter,\n    Output,\n    OnChanges\n} from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { debounceTime, distinctUntilChanged, switchMap, catchError, map, first } from 'rxjs/operators';\nimport { Observable, of, Subject } from 'rxjs';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Space, ISpaceAvailabilityOptions } from 'src/app/services/data/spaces/space.class';\nimport { BookingFlowEvent } from '../../bookings.component';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'booking-find-space',\n    templateUrl: './find-space.component.html',\n    styleUrls: ['./find-space.component.scss']\n})\nexport class BookingFindSpaceComponent extends BaseDirective implements OnInit, OnChanges {\n    /** Form control for setting the active space */\n    @Input() public spaces: FormControl;\n    /** Form group for booking */\n    @Input() public form: FormGroup;\n    /** Emitter for flow update events */\n    @Output() public event = new EventEmitter<BookingFlowEvent>();\n\n    /** List of spaces available during the required period */\n    public space_list: Space[] = [];\n    /** List of users from an API search */\n    public search_results$: Observable<Space[]>;\n    /** Whether space list is loading */\n    public loading: boolean;\n    /** List of zones to filter the spaces on */\n    public zone_ids: string[] = [];\n    /** Subject holding the value of the search */\n    public readonly change$ = new Subject<string>();\n\n    /**  Whether multiple spaces are allowed to be selected */\n    public get multiple(): boolean {\n        return this._service.setting('app.booking.multiple_spaces');\n    }\n\n    constructor(private _service: ApplicationService, private _spaces: SpacesService, private _org: OrganisationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._spaces.initialised.pipe(first(_ => _)).subscribe(() => {\n            // Listen for input changes\n            this.search_results$ = this.change$.pipe(\n                debounceTime(400),\n                distinctUntilChanged(),\n                switchMap(_ => {\n                    this.loading = true;\n                    const recurrence = this.form.controls.recurrence ? this.form.controls.recurrence.value : null;\n                    const recurrence_properties = recurrence && recurrence.period && recurrence.period !== 'None' ? {\n                        recurr_period: (recurrence.period || '').toLowerCase(),\n                        recurr_end: recurrence.end\n                    } : {};\n                    const all_day = this.form.controls.all_day.value;\n                    const query: ISpaceAvailabilityOptions = {\n                        date: all_day ? dayjs(this.form.controls.date.value).startOf('d').valueOf() : this.form.controls.date.value,\n                        duration: all_day ? 24 * 60 : this.form.controls.duration.value,\n                        zone_ids: this._org.building.id,\n                        bookable: true,\n                        ...recurrence_properties\n                    };\n                    /* istanbul ignore else */\n                    if (this.zone_ids && this.zone_ids.length) {\n                        query.zone_ids = this.zone_ids.join(',');\n                    }\n                    return this._spaces.available(query);\n                }),\n                catchError(_ => of([])),\n                map((list: Space[]) => {\n                    this.loading = false;\n                    const all_day = this.form.controls.all_day.value;\n                    return list.filter(space => {\n                        const rules = space.rulesFor({\n                            date: this.form.controls.date.value,\n                            duration: all_day ? 24 * 60 : this.form.controls.duration.value,\n                            host: this.form.controls.organiser.value,\n                        });\n                        return !rules.hide\n                    });\n                })\n            );\n            // Process API results\n            this.subscription(\n                'search_results',\n                this.search_results$.subscribe(list => {\n                    this.space_list = list;\n                    this.space_list.sort((a, b) => this.sort(a, b));\n                })\n            );\n            this.change$.next('');\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.form) {\n            const onChange = _ => this.change$.next(_);\n            /* istanbul ignore else */\n            if (this.form.controls.date) {\n                this.subscription(\n                    'date_field',\n                    this.form.controls.date.valueChanges.subscribe(onChange)\n                );\n            }\n            /* istanbul ignore else */\n            if (this.form.controls.duration) {\n                this.subscription(\n                    'duration_field',\n                    this.form.controls.duration.valueChanges.subscribe(onChange)\n                );\n            }\n        }\n    }\n\n    /**\n     * Update the selected space list\n     * @param space Space to add/toggle in the selected list\n     */\n    public selectSpace(space: Space) {\n        if (this.multiple) {\n            const list = this.spaces.value;\n            if (list.find(item => item.id === space.id)) {\n                this.spaces.setValue(list.filter(item => item.id !== space.id));\n            } else {\n                this.spaces.setValue(list.concat([space]));\n            }\n        } else {\n            this.spaces.setValue([space]);\n            this.event.emit({ type: 'next', step: 'search' });\n        }\n    }\n\n    /**\n     * Proceed to the next step in the space booking flow\n     */\n    public next(): void {\n        this.event.emit({ type: 'next', step: 'search' });\n    }\n\n    /** Move flow to previous step */\n    public previous(): void {\n        this.event.emit({ type: 'previous', step: 'search' });\n    }\n\n    /**\n     * Compare two spaces to determine order\n     * @param space_a\n     * @param space_b\n     */\n    private sort(space_a: Space, space_b: Space) {\n        const bld = this._org.buildings.find(bld => bld.id === space_a.level.building_id);\n        const bld_b = this._org.buildings.find(bld => bld.id === space_b.level.building_id);\n        if (bld && bld !== bld_b) {\n            return (bld.name || '').localeCompare(bld_b.name || '');\n        }\n        const sort_order = (bld.sort_order ? [...bld.sort_order] : []).reverse();\n        for (const zone_id of sort_order) {\n            if (zone_id === '*') { continue; }\n            const a_has_zone = space_a.zones.indexOf(zone_id) >= 0;\n            const b_has_zone = space_b.zones.indexOf(zone_id) >= 0;\n            if (a_has_zone && !b_has_zone) {\n                return 1;\n            } else if (b_has_zone && !a_has_zone) {\n                return -1;\n            }\n        }\n        return (space_a.name || '').localeCompare(space_b.name || '');\n    }\n\n}\n","<div class=\"find-space\">\n    <div class=\"background\"></div>\n    <div class=\"header\">\n        <booking-space-filters\n            [date]=\"form.controls.date\"\n            [(locations)]=\"zone_ids\"\n            (locationsChange)=\"change$.next($event)\"\n        ></booking-space-filters>\n    </div>\n    <ng-container *ngIf=\"!loading; else load_state\">\n        <cdk-virtual-scroll-viewport\n            *ngIf=\"space_list && space_list.length; else empty_state\"\n            [itemSize]=\"130\"\n        >\n            <ng-container *cdkVirtualFor=\"let space of space_list\">\n                <a-booking-space-item\n                    [form]=\"form\"\n                    [space]=\"space\"\n                    [multi]=\"multiple\"\n                    (select)=\"selectSpace(space)\"\n                ></a-booking-space-item>\n            </ng-container>\n        </cdk-virtual-scroll-viewport>\n    </ng-container>\n    <div class=\"footer\">\n        <div class=\"box\">\n            <button\n                mat-button\n                class=\"inverse\"\n                name=\"previous\"\n                (click)=\"previous()\"\n                i18n=\"Booking spaces cancel action\"\n            >\n                Back\n            </button>\n            <button\n                mat-button\n                *ngIf=\"multiple\"\n                name=\"next\"\n                [disabled]=\"!spaces.value || !spaces.value.length\"\n                (click)=\"next()\"\n                i18n=\"Booking spaces continue action\"\n            >\n                Next\n            </button>\n        </div>\n    </div>\n</div>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"48\"></mat-spinner>\n            </div>\n            <div class=\"text\" i18n=\"Booking spaces loading label\">\n                Checking space availability...\n            </div>\n        </div>\n    </div>\n</ng-template>\n<ng-template #empty_state>\n    <div class=\"body\">\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n            </div>\n            <div class=\"text\" i18n=\"Booking spaces empty label\">\n                No spaces available for the selected time\n            </div>\n        </div>\n    </div>\n</ng-template>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { FormGroup } from '@angular/forms';\n\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { ViewRoomModalComponent } from 'src/app/overlays/view-room-modal/view-room-modal.component';\nimport {\n    RecurrenceSpacesModalComponent,\n    RecurrenceSpacesModalData,\n} from '../../../overlays/recurrence-spaces-modal/recurrence-spaces-modal.component';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport {\n    BookingRecurrenceDetails,\n    BookingRecurrenceSpaceDetails,\n} from 'src/app/services/data/bookings/booking.interfaces';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: 'a-booking-space-item',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss'],\n})\nexport class BookingSpaceItemComponent extends BaseDirective {\n    /** Space to display */\n    @Input() public space: Space;\n    /** Form fields for booking */\n    @Input() public form: FormGroup;\n    /** Whether multiple spaces are able to be selected */\n    @Input() public multi: boolean;\n    /** Emitter for select actions on the */\n    @Output() public select = new EventEmitter<void>();\n\n    /** Whether space image should be displayed */\n    public get show_image() {\n        return this._service.setting('app.space_display.show_images');\n    }\n\n    /** Whether this space is selected */\n    public get selected(): boolean {\n        /* istanbul ignore else */\n        if (!this.form && this.space) {\n            return false;\n        }\n        return (\n            this.form.controls.space_list &&\n            !!(this.form.controls.space_list.value || []).find(\n                (space) => space.id === this.space.id\n            )\n        );\n    }\n\n    public get is_hidden(): boolean {\n        /* istanbul ignore else */\n        if (!this.form) {\n            return false;\n        }\n        const rules = this.space.rulesFor({\n            date: this.form.controls.date.value,\n            duration: this.form.controls.duration.value,\n            host: this.form.controls.organiser.value || this._users.current,\n        });\n        return rules.hide;\n    }\n\n    /** Whether space is booked by request */\n    public get is_request(): boolean {\n        /* istanbul ignore else */\n        if (!this.form) {\n            return false;\n        }\n        return this.space.byRequest({\n            date: this.form.controls.date.value,\n            duration: this.form.controls.duration.value,\n            host: this.form.controls.organiser.value || this._users.current,\n        });\n    }\n\n    public get availability(): string {\n        const count = this.space.recurr_available.reduce(\n            (count, ocurrence) => count + (ocurrence.available ? 1 : 0),\n            0\n        );\n        return count >= this.space.recurr_available.length\n            ? 'all'\n            : `${count} of ${this.space.recurr_available.length}`;\n    }\n\n    /** Display location of the space */\n    public get location(): string {\n        /* istanbul ignore else */\n        if (!this.space) {\n            return 'Unable to determine location';\n        }\n        const level = this.space.level;\n        const bld = this._org.buildings.find((building) => building.id === level.building_id);\n        return `${bld ? bld.name + ', ' : ''}${level.name}`;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _org: OrganisationService,\n        private _users: UsersService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    /**\n     * Open the modal to show the location of a space\n     * @param space Space to show the location\n     */\n    public locate() {\n        this._dialog.open(ViewRoomModalComponent, {\n            width: 'auto',\n            height: 'auto',\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: { space: this.space },\n        });\n    }\n\n    public selectSpace() {\n        if (!this.space.recurr_available || !this.space.recurr_available.length || this.selected) {\n            this.select.emit();\n        } else {\n            const ref = this._dialog.open<\n                RecurrenceSpacesModalComponent,\n                RecurrenceSpacesModalData\n            >(RecurrenceSpacesModalComponent, {\n                width: 'auto',\n                height: 'auto',\n                maxWidth: '95vw',\n                maxHeight: '95vh',\n                data: {\n                    space: this.space,\n                    duration: this.form.controls.duration.value,\n                    host: this.form.controls.organiser.value,\n                    conflicts: this.form.controls.recurrence.value.conflicts || [],\n                },\n            });\n            this.subscription(\n                'recurr_conflicts',\n                ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                    /* istanbul ignore else */\n                    if (event.reason === 'done') {\n                        const recurr: BookingRecurrenceDetails = this.form.controls.recurrence\n                            .value;\n                        const conflict_list: BookingRecurrenceSpaceDetails[] = event.metadata.filter(i => i.space);\n                        this.form.controls.recurrence.setValue({\n                            ...recurr,\n                            conflicts: conflict_list,\n                        });\n                        this.form.controls.space_list.setValue([]);\n                        this.select.emit();\n                        ref.close();\n                    }\n                })\n            );\n        }\n    }\n}\n","<div class=\"space-details\" *ngIf=\"space && !is_hidden\" [class.with-image]=\"show_image\">\n    <div class=\"details\">\n        <div\n            class=\"image\"\n            *ngIf=\"space.image\"\n            [style.background-image]=\"'url(' + space.image + ')'\"\n        ></div>\n        <div class=\"overlay\"></div>\n        <div class=\"name\">{{ space.name }}</div>\n        <div class=\"info\">\n            <div class=\"location\">{{ location }}</div>\n            <div class=\"capacity\">\n                <app-icon\n                    [icon]=\"{ type: 'icon', class: 'material-icons', content: 'account_circle' }\"\n                ></app-icon>\n                {{ space.capacity || '0' }}\n            </div>\n        </div>\n        <div\n            class=\"info recurr\"\n            *ngIf=\"space.recurr_available && space.recurr_available.length\"\n            i18n=\"Booking space availability label\"\n        >\n            Available for&nbsp;<span>{{ availability }}</span\n            >&nbsp;meeting ocurrences\n        </div>\n    </div>\n    <div class=\"actions\">\n        <button\n            mat-button\n            name=\"select\"\n            [class.inverse]=\"multi && !selected\"\n            [class.request]=\"is_request\"\n            (click)=\"selectSpace()\"\n        >\n            {{ multi ? (selected ? 'Remove' : is_request ? 'Request' : 'Select') : is_request ? 'Request' : 'Book' }}\n        </button>\n        <button mat-button class=\"inverse\" name=\"locate\" (click)=\"locate()\" i18n=\"Booking space locate action\">\n            Map\n        </button>\n    </div>\n</div>\n","import { Component, Input, Output, EventEmitter, ViewChild, ElementRef } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { BookingFlowEvent } from '../../bookings.component';\n\n@Component({\n    selector: 'booking-spaces-form',\n    templateUrl: './form.component.html',\n    styleUrls: ['./form.component.scss']\n})\nexport class BookingSpaceFlowFormComponent {\n    /** Booking form fields */\n    @Input() public form: FormGroup;\n    /** Whether form is not the first page in the flow */\n    @Input() public can_return: boolean = false;\n    /** Emitter for flow update events */\n    @Output() public event = new EventEmitter<BookingFlowEvent>();\n\n    @ViewChild('container', { static: true }) private container: ElementRef<HTMLDivElement>;\n\n    /** Move flow to next step */\n    public next(): void {\n        this.form.markAllAsTouched();\n        this.form.controls.date.updateValueAndValidity();\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            this.event.emit({ type: 'next', step: 'form' });\n        } else if (this.container) {\n            this.container.nativeElement.scrollIntoView({\n                behavior: 'smooth',\n                block: 'start',\n                inline: 'nearest'\n            });\n        }\n    }\n\n    /** Move flow to previous step */\n    public previous(): void {\n        this.event.emit({ type: 'previous', step: 'form' });\n    }\n\n    /** Reset form to initial state */\n    public resetForm(): void {\n        this.event.emit({ type: 'reset', step: 'form' });\n    }\n}\n","<div class=\"booking-form\" #container>\n    <div class=\"header\">\n        <h3 i18n=\"Booking form header\">\n            {{ form.controls.id && form.controls.id.value ? 'Edit' : 'New' }} Booking\n        </h3>\n        <button mat-icon-button name=\"reset\" (click)=\"resetForm()\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'refresh' }\"></app-icon>\n        </button>\n    </div>\n    <form [formGroup]=\"form\" (ngSubmit)=\"next()\">\n        <div class=\"body\">\n            <a-booking-form [form]=\"form\"></a-booking-form>\n        </div>\n        <div class=\"footer\">\n            <button\n                mat-button\n                type=\"button\"\n                name=\"return\"\n                *ngIf=\"can_return\"\n                class=\"inverse\"\n                (click)=\"previous()\"\n                i18n=\"Booking form cancel action\"\n            >\n                Back\n            </button>\n            <button mat-button type=\"submit\" name=\"next\" i18n=\"Booking form continue action\">\n                Next\n            </button>\n        </div>\n    </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { generateBookingForm } from 'src/app/services/data/bookings/booking.utilities';\nimport {\n    AvailableBookingFields,\n    BookingFlowSettings,\n} from 'src/app/shared/utilities/settings.interfaces';\nimport { HashMap, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { BookingFlowEvent } from '../bookings.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { BookingConfirmComponent } from '../overlays/booking-confirm/booking-confirm.component';\nimport { first } from 'rxjs/operators';\nimport {\n    RequirementDetailsModalComponent,\n    RequirementDetailsModalData,\n} from '../overlays/requirement-details-modal/requirement-details-modal.component';\nimport {\n    CateringDetailsModalComponent,\n    CateringDetailsModalData,\n} from '../overlays/catering-details-modal/catering-details-modal.component';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { Space } from 'src/app/services/data/spaces/space.class';\n\n@Component({\n    selector: 'booking-space-flow',\n    templateUrl: './space-flow.component.html',\n    styleUrls: ['./space-flow.component.scss'],\n})\nexport class BookingSpaceFlowComponent extends BaseDirective implements OnInit {\n    /** Form fields */\n    public form: FormGroup;\n    /** Form data store */\n    public booking: Booking;\n    /** Step of the booking flow that is currently active */\n    public flow_step: string;\n    /** Application settings for bookings */\n    public settings: BookingFlowSettings;\n\n    /** List of available booking fields for the form */\n    public get available_fields(): AvailableBookingFields[] {\n        return this.settings.show_fields || [];\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _spaces: SpacesService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._spaces.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.settings = this._service.setting('app.booking');\n            this.subscription(\n                'route.params',\n                this._route.paramMap.subscribe((params) => {\n                    /* istanbul ignore else */\n                    if (params.has('step')) {\n                        this.flow_step = params.get('step');\n                    }\n                })\n            );\n            this.loadFormData();\n        });\n    }\n\n    /**\n     * Handle events from child components\n     * @param event Booking flow event\n     */\n    public handleFlowEvent(event: BookingFlowEvent) {\n        switch (event.type) {\n            case 'next':\n                this.toNextFlowStep(event);\n                break;\n            case 'previous':\n                this.toPreviousFlowStep(event);\n                break;\n            case 'reset':\n                this.resetForm();\n                break;\n        }\n    }\n\n    private toNextFlowStep(event: BookingFlowEvent) {\n        const space_list = this.form.controls.space_list.value;\n        switch (event.step) {\n            case 'search':\n                console.log('Space List:', space_list);\n                if (\n                    space_list &&\n                    space_list.length &&\n                    this.settings.multiple_spaces &&\n                    (!event.metadata || !event.metadata.ref || event.metadata.ref !== 'equipment')\n                ) {\n                    this.openEquipmentDetailsModal();\n                } else {\n                    if (this.form.controls.has_catering && this.form.controls.has_catering.value) {\n                        this.navigate('catering');\n                    } else {\n                        this.navigate('form');\n                        this.confirmBooking();\n                    }\n                }\n                break;\n            case 'catering':\n                const order_list = this.form.controls.catering.value;\n                if (\n                    order_list &&\n                    order_list.length &&\n                    (!event.metadata || !event.metadata.ref || event.metadata.ref !== 'details')\n                ) {\n                    this.openCateringDetailsModal();\n                } else {\n                    this.navigate('form');\n                    this.confirmBooking();\n                }\n                break;\n            default:\n                this.form.markAsDirty();\n                if (\n                    !this.form.controls.needs_space ||\n                    (this.form.controls.needs_space.value &&\n                        (!space_list || !space_list.length || !this.form.controls.id.value))\n                ) {\n                    this.navigate('search');\n                } else if (this.form.controls.id?.value && space_list && space_list.length) {\n                    this.openEquipmentDetailsModal();\n                } else {\n                    this.confirmBooking();\n                }\n                break;\n        }\n    }\n\n    private toPreviousFlowStep(event: BookingFlowEvent) {\n        switch (event.step) {\n            case 'search':\n                this.navigate('form');\n                break;\n            case 'catering':\n                this.navigate('search');\n                break;\n        }\n    }\n\n    private navigate(route: string) {\n        this._router.navigate(['book', 'spaces', route], {\n            queryParamsHandling: 'preserve',\n        });\n        this.flow_step = route;\n    }\n\n    /** Clear user changes to the form data */\n    private resetForm() {\n        delete this.form;\n        localStorage.removeItem('ACA_STAFF.booking_form_data');\n        this.loadFormData();\n    }\n\n    /**\n     * Load existing form data or generate a new booking form\n     */\n    private loadFormData(): void {\n        let form_data: HashMap = {};\n        /* istanbul ignore else */\n        if (localStorage) {\n            const form_string = localStorage.getItem('ACA_STAFF.booking_form_data');\n            /* istanbul ignore else */\n            if (form_string) {\n                try {\n                    form_data = JSON.parse(form_string);\n                } catch (e) {}\n            }\n        }\n        this.booking = new Booking(form_data);\n        this.form = generateBookingForm(this.booking, this.available_fields);\n        this.subscription(\n            'form_changes',\n            this.form.valueChanges.subscribe(() => this.saveFormData())\n        );\n        /* istanbul ignore else */\n        if (form_data && form_data.room_ids && this.form.controls.space_list) {\n            this.form.controls.space_list.setValue(\n                form_data.room_ids.map((id) => this._spaces.find(id) || { id, name: id })\n            );\n        }\n    }\n\n    private saveFormData() {\n        /* istanbul ignore else */\n        if (localStorage && this.booking) {\n            localStorage.setItem(\n                'ACA_STAFF.booking_form_data',\n                JSON.stringify({\n                    ...this.booking.toJSON(),\n                    ...this.form.value,\n                    room_ids: (this.form.value.space_list as Space[]).map(space => space.id)\n                })\n            );\n        }\n    }\n\n    /** Open modal for adding equipment requirements to booking */\n    private openEquipmentDetailsModal() {\n        const space_list = [...this.form.controls.space_list.value];\n        if (\n            this.form.controls.recurrence?.value?.period &&\n            this.form.controls.recurrence?.value?.conflicts?.length > 0\n        ) {\n            this.form.controls?.recurrence?.value?.conflicts?.forEach(i => {\n                if (!space_list.find(space => space.email === i.space)) {\n                    space_list.push(this._spaces.find(i.space));\n                }\n            });\n        }\n        const recurrence = this.form.controls.recurrence.value;\n        const ref = this._dialog.open<\n            RequirementDetailsModalComponent,\n            RequirementDetailsModalData\n        >(RequirementDetailsModalComponent, {\n            maxWidth: '95vw',\n            width: '32em',\n            data: {\n                spaces: space_list,\n                notes_field: this.form.controls.notes,\n                codes_field: this.form.controls.equipment_codes,\n                head_counts_field: this.form.controls.expected_attendees,\n                recurrence: recurrence.period && !this.form.controls.id.value\n            },\n        });\n        this.subscription(\n            'modal_events',\n            ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    this.toNextFlowStep({\n                        type: 'next',\n                        step: 'search',\n                        metadata: { ref: 'equipment' },\n                    });\n                    ref.close();\n                }\n            })\n        );\n        ref.afterClosed().subscribe(() => this.unsub('modal_events'));\n    }\n\n    /** Open modal for adding equipment requirements to booking */\n    private openCateringDetailsModal() {\n        const ref = this._dialog.open<CateringDetailsModalComponent, CateringDetailsModalData>(\n            CateringDetailsModalComponent,\n            {\n                maxWidth: '95vw',\n                width: '32em',\n                data: {\n                    spaces: this.form.controls.space_list.value,\n                    notes_field: this.form.controls.notes,\n                    catering: this.form.controls.catering,\n                },\n            }\n        );\n        this.subscription(\n            'modal_events',\n            ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    this.toNextFlowStep({\n                        type: 'next',\n                        step: 'catering',\n                        metadata: { ref: 'details' },\n                    });\n                    ref.close();\n                }\n            })\n        );\n        ref.afterClosed().subscribe(() => this.unsub('modal_events'));\n    }\n\n    /**\n     * Open modal to confirm the booking details\n     */\n    private confirmBooking() {\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            const value = this.form.value;\n            const dialog_ref = this._dialog.open(BookingConfirmComponent, {\n                width: '32em',\n                maxWidth: '95vw',\n                maxHeight: '95vh',\n                data: {\n                    old_booking: this.booking,\n                    booking: new Booking({\n                        ...this.booking,\n                        ...value,\n                        room_ids: value.space_list.map((space) => space.id),\n                        id: this.booking.id === 'ad-hoc' ? '' : this.booking.id\n                    }),\n                },\n            });\n            dialog_ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    this.resetForm();\n                }\n            });\n        }\n    }\n}\n","<div class=\"space-flow\">\n    <ng-container [ngSwitch]=\"flow_step\">\n        <ng-container *ngSwitchCase=\"'search'\">\n            <booking-find-space\n                *ngIf=\"form\"\n                [spaces]=\"form.controls.space_list\"\n                [form]=\"form\"\n                (event)=\"handleFlowEvent($event)\"\n            ></booking-find-space>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"'catering'\">\n            <booking-catering\n                *ngIf=\"form\"\n                [form]=\"form\"\n                (event)=\"handleFlowEvent($event)\"\n            ></booking-catering>\n        </ng-container>\n        <ng-container *ngSwitchDefault>\n            <booking-spaces-form\n                *ngIf=\"form\"\n                [form]=\"form\"\n                (event)=\"handleFlowEvent($event)\"\n            ></booking-spaces-form>\n        </ng-container>\n    </ng-container>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\n@Component({\n    selector: 'app-explore',\n    templateUrl: './explore.component.html',\n    styleUrls: ['./explore.component.scss']\n})\nexport class ExploreComponent extends BaseDirective implements OnInit {\n    /** Whether to show the overlay menu */\n    public show_menu: boolean;\n\n    constructor(private _service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.title = 'Maps';\n    }\n}\n","<div class=\"explore page\">\n    <header class=\"header\">\n        <a-topbar-header [(menu)]=\"show_menu\"></a-topbar-header>\n    </header>\n    <main class=\"body\">\n        <explore-map-view></explore-map-view>\n    </main>\n    <footer class=\"footer\">\n        <a-footer-menu></a-footer-menu>\n    </footer>\n</div>\n<!-- <a-overlay-menu [(show)]=\"show_menu\"></a-overlay-menu> -->\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Route } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\n\nimport { ComposerModule } from '@placeos/composer';\nimport { AInteractiveMapModule } from '@acaprojects/ngx-interactive-map';\n\nimport { ExploreComponent } from './explore.component';\nimport { SharedContentModule } from 'src/app/shared/shared.module';\nimport { MapViewComponent } from './map-view/map-view.component';\nimport { ExploreSpaceStatusComponent } from './status-managers/space-status.component';\nimport { ExploreDeskStatusComponent } from './status-managers/desk-status.component';\nimport { ZoomControlsComponent } from './zoom-controls/zoom-controls.component';\nimport { ExploreSpaceInfoComponent } from './overlays/space-info/space-info.component';\nimport { ExploreSearchComponent } from './search/search.component';\nimport { ExploreMapLegendComponent } from './map-legend/map-legend.component';\nimport { ExploreTimelineComponent } from './timeline/timeline.component';\nimport { ExploreBookingModalComponent } from './overlays/booking-modal/booking-modal.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: ExploreComponent },\n    { path: ':search_type', component: ExploreComponent }\n];\n\n@NgModule({\n    declarations: [\n        ExploreComponent,\n        MapViewComponent,\n        ExploreSpaceStatusComponent,\n        ExploreDeskStatusComponent,\n        ZoomControlsComponent,\n        ExploreSpaceInfoComponent,\n        ExploreSearchComponent,\n        ExploreMapLegendComponent,\n        ExploreTimelineComponent,\n        ExploreBookingModalComponent\n    ],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(ROUTES),\n        SharedContentModule,\n        AInteractiveMapModule,\n        ComposerModule,\n        FormsModule\n    ]\n})\nexport class ExploreModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { MapLegendItem, ExploreMapSettings } from 'src/app/shared/utilities/settings.interfaces';\nimport { ANIMATION_SHOW_CONTRACT_EXPAND } from 'src/app/shared/globals/angular-animations';\n\n@Component({\n    selector: 'a-map-legend',\n    templateUrl: './map-legend.component.html',\n    styleUrls: ['./map-legend.component.scss'],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND]\n})\nexport class ExploreMapLegendComponent extends BaseDirective implements OnInit {\n    /** Mapping of legend item groups */\n    public legend_items: HashMap<MapLegendItem[]> = {};\n    /** Mapping of map colours */\n    public colours: HashMap<string> = {};\n    /** Whether group names should be displayed */\n    public show_group_names: boolean;\n    /** Whether the legend items should be shown */\n    public show_legend = false;\n\n    /** List of group names for legend items */\n    public get group_names(): string[] {\n        return Object.keys(this.legend_items);\n    }\n\n    constructor(private _service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.initialised.pipe(first(_ => _)).subscribe(() => {\n            const explore_settings: ExploreMapSettings =\n                this._service.setting('app.explore') || ({} as any);\n            this.legend_items = explore_settings.legend || {};\n            this.colours = explore_settings.colors || {};\n            this.show_group_names = !!explore_settings.show_legend_group_names;\n        });\n    }\n}\n","<div class=\"map-legend\" *ngIf=\"group_names && group_names.length\">\n    <div class=\"tag\">\n        <div class=\"title\" (click)=\"show_legend = !show_legend\">\n            <div class=\"text\" i18n=\"Explore legend label\">{{ show_legend ? 'Hide' : 'Show' }} Legend</div>\n            <app-icon\n                [icon]=\"{\n                    class: 'material-icons',\n                    content: show_legend ? 'arrow_drop_up' : 'arrow_drop_down'\n                }\"\n            ></app-icon>\n        </div>\n    </div>\n    <div\n        class=\"contents\"\n        [@show]=\"show_legend ? 'show' : 'hide'\"\n        [style.padding-bottom]=\"show_legend ? '1em' : ''\"\n        [style.padding-bottom]=\"show_legend ? '.5em' : ''\"\n        [style.overflow]=\"show_legend ? 'hidden auto' : 'hidden'\"\n    >\n        <ul>\n            <ng-container *ngFor=\"let group of group_names\">\n                <li class=\"group\" *ngIf=\"show_group_names\">\n                    <div class=\"bar\"></div>\n                    <div class=\"name\">{{ group }}</div>\n                    <div class=\"bar\"></div>\n                </li>\n                <li class=\"item\" name=\"item.key\" *ngFor=\"let item of legend_items[group]\">\n                    <div class=\"ref\">\n                        <ng-container *ngIf=\"item.icon; else colour_display\">\n                            <app-icon [icon]=\"item.icon\"></app-icon>\n                        </ng-container>\n                        <ng-template #colour_display>\n                            <div\n                                class=\"colour\"\n                                [style.background-color]=\"item.color || colours[item.key]\"\n                            ></div>\n                        </ng-template>\n                    </div>\n                    <div class=\"name\">{{ item.name }}</div>\n                </li>\n            </ng-container>\n        </ul>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MapPinComponent } from '@acaprojects/ngx-interactive-map';\nimport { first } from 'rxjs/operators';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { MapStatus, MapListener } from '../status-managers/status.interfaces';\nimport { HashMap, Point } from 'src/app/shared/utilities/types.utilities';\nimport { MapFeature } from '@acaprojects/ngx-interactive-map/lib/helpers/map.interfaces';\nimport { MapRadiusComponent } from '@acaprojects/ngx-interactive-map';\nimport { ExploreMapSettings } from 'src/app/shared/utilities/settings.interfaces';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    BookingRulesModalComponent,\n    BookingRulesModalData,\n} from 'src/app/overlays/booking-rules-modal/booking-rules-modal.component';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: 'explore-map-view',\n    templateUrl: './map-view.component.html',\n    styleUrls: ['./map-view.component.scss'],\n})\nexport class MapViewComponent extends BaseDirective implements OnInit {\n    /** Zoom level of the map */\n    public zoom: number;\n    /** Center offset of the map */\n    public center: Point = { x: 0.5, y: 0.5 };\n    /** Mapping of elements to CSS styles */\n    public style_map: HashMap<HashMap<string | number>> = {};\n    /** List of listeners for the map */\n    public listeners: MapListener[] = [];\n    /** List of features to render on the map */\n    public features: MapFeature[] = [];\n    /** ID of the active level to display on the map */\n    public active_level: string;\n    /** Mapping of status lists to types */\n    public status_map: { spaces?: MapStatus[]; desks?: MapStatus[]; zones?: MapStatus[] } = {};\n    /** Mapping of listener lists to types */\n    public listener_map: {\n        spaces?: MapListener[];\n        desks?: MapListener[];\n        zones?: MapListener[];\n    } = {};\n    /** Mapping of features lists to types */\n    public feature_map: {\n        spaces?: MapFeature[];\n        desks?: MapFeature[];\n        zones?: MapFeature[];\n    } = {};\n    /** Message to display over the map */\n    public message: string;\n    /** Whether location data is loading */\n    public loading: boolean;\n    /** Point or element on the map to focus */\n    public focus: string | Point;\n    /** Feature on the map to focus */\n    public focus_feature: MapFeature;\n    /** Current shown time */\n    public date: number;\n    /** Application settings for the explore component */\n    public settings: ExploreMapSettings;\n\n    /** URL of the active map */\n    public get map_url(): string {\n        const level = this._org.levelWithID(this.active_level) || { map_url: '' };\n        return level.map_url || '';\n    }\n\n    /** Whether current level has booking rules associated with it */\n    public get has_booking_rules(): boolean {\n        const level = this._org.levelWithID(this.active_level) || {\n            building_id: '',\n        };\n        return !!(this._org.buildings.find((bld) => bld.id === level.building_id) || {})\n            .booking_details;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _route: ActivatedRoute,\n        private _dialog: MatDialog,\n        private _org: OrganisationService,\n        private _users: UsersService,\n        private _spaces: SpacesService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._spaces.initialised.pipe(first((_) => _)).subscribe(() => {\n            /* istanbul ignore else */\n            if (!this.active_level) {\n                const bld = this._org.building;\n                if (bld && bld.levels.length) {\n                    this.active_level = bld.levels[0].id;\n                }\n            }\n            this.settings = this._service.setting('app.explore') || {};\n            this.subscription(\n                'route.query',\n                this._route.queryParamMap.subscribe((params) => {\n                    this.focus_feature = null;\n                    this.processFeatures();\n                    /* istanbul ignore else */\n                    if (params.has('space')) {\n                        this.loadSpaceLocation(params.get('space'));\n                    }\n                    /* istanbul ignore else */\n                    if (params.has('user')) {\n                        this.loadUserLocation(params.get('user')).then(\n                            (user) => {\n                                this.loading = false;\n                                this.message = this.focus\n                                    ? ''\n                                    : `Unable to locate ${user ? user.name : params.get('user')}`;\n                            },\n                            (err) => {\n                                this.loading = false;\n                                this.message = `Unable to locate user`;\n                                /* istanbul ignore else */\n                                if (err && err.status !== 404) {\n                                    this._service.notifyError(\n                                        `Error loading user location. ${err.message}`\n                                    );\n                                }\n                            }\n                        );\n                    }\n                })\n            );\n        });\n    }\n\n    public openBookingRulesModal() {\n        const level = this._org.levelWithID(this.active_level) || {\n            building_id: '',\n        };\n        const building: Building =\n            this._org.buildings.find((bld) => bld.id === level.building_id) || ({} as any);\n        this._dialog.open<BookingRulesModalComponent, BookingRulesModalData>(\n            BookingRulesModalComponent,\n            {\n                data: {\n                    building,\n                },\n            }\n        );\n    }\n\n    /**\n     * Process changes to statuses\n     */\n    public processStatuses() {\n        const styles: HashMap<HashMap<string | number>> = {};\n        (this.status_map.spaces || []).forEach((space) => (styles[`#${space.id}`] = space.styles));\n        (this.status_map.desks || []).forEach((desk) => (styles[`#${desk.id}`] = desk.styles));\n        (this.status_map.zones || []).forEach((zone) => (styles[`#${zone.id}`] = zone.styles));\n        this.style_map = styles;\n    }\n\n    /**\n     * Process changes to statuses\n     */\n    public processListeners() {\n        let listeners: MapListener[] = [];\n        listeners = listeners.concat(this.listener_map.spaces || []);\n        listeners = listeners.concat(this.listener_map.desks || []);\n        listeners = listeners.concat(this.listener_map.zones || []);\n        this.listeners = listeners;\n    }\n\n    /**\n     * Process changes to statuses\n     */\n    public processFeatures() {\n        let features: MapFeature[] = [];\n        /* istanbul ignore else */\n        if (this.focus_feature) {\n            features = features.concat([this.focus_feature]);\n        }\n        features = features.concat(this.feature_map.spaces || []);\n        features = features.concat(this.feature_map.desks || []);\n        features = features.concat(this.feature_map.zones || []);\n        this.features = features;\n    }\n\n    /**\n     * Load and store location details for the space\n     * @param space_id Engine system ID of the space to locate\n     */\n    private loadSpaceLocation(space_id: string) {\n        const space = this._spaces.find(space_id);\n        /* istanbul ignore else */\n        if (space) {\n            this.message = `Loading location of ${space.name}`;\n            this.loading = true;\n            this.active_level = space.level.id;\n            this.focus = `area-${space.map_id}-status`;\n            this.focus_feature = {\n                id: `area-${space.map_id}-status`,\n                coordinates: null,\n                content: MapPinComponent,\n                data: {\n                    text: space.name,\n                },\n            };\n            this.zoom = 1;\n            this.loading = false;\n            this.message = '';\n            this.processFeatures();\n        }\n    }\n\n    /**\n     * Load and store the location for the user\n     * @param user_email Email address of the selected user\n     */\n    private async loadUserLocation(user_email: string) {\n        this.focus = null;\n        this.focus_feature = null;\n        this.loading = true;\n        this.message = `Loading user details...`;\n        const user = await this._users.show(user_email);\n        /* istanbul ignore else */\n        if (!user) return user;\n        this.message = `Loading location for ${user.name}...`;\n        const location = await user.locate();\n        /* istanbul ignore else */\n        if (!location) return user;\n        this.active_level = location.level.id;\n        if (location.fixed) {\n            this.focus = location.id;\n            this.focus_feature = {\n                id: location.id,\n                coordinates: null,\n                content: MapPinComponent,\n                data: {\n                    text: `${user.name} is here`,\n                },\n            };\n            this.zoom = 1;\n        } else {\n            this.focus = {\n                x: location.x,\n                y: location.y,\n            };\n            this.focus_feature = {\n                coordinates: {\n                    x: location.x,\n                    y: location.y,\n                },\n                content: MapRadiusComponent,\n                data: {\n                    text: `${user.name} is here`,\n                    diameter: location.confidence || 5,\n                },\n            };\n        }\n        this.zoom = 1;\n        this.loading = false;\n        this.message = '';\n        this.processFeatures();\n        return user;\n    }\n}\n","<div class=\"map-view\">\n    <div class=\"header\">\n        <explore-search [level]=\"active_level\"></explore-search>\n    </div>\n    <div class=\"body\">\n        <div class=\"status-list\" hidden>\n            <i\n                space-status\n                [zone]=\"active_level\"\n                [date]=\"date\"\n                (status)=\"status_map.spaces = $event; processStatuses()\"\n                (listeners)=\"listener_map.spaces = $event; processListeners()\"\n                (features)=\"feature_map.spaces = $event; processFeatures()\"\n            ></i>\n            <i desk-status [zone]=\"active_level\" (status)=\"status_map.desks = $event; processStatuses()\"></i>\n        </div>\n        <a-map-controls overlay [(level)]=\"active_level\" (levelChange)=\"zoom = 1; center = { x: .5, y: .5 }\"></a-map-controls>\n        <button mat-icon-button class=\"rules\" name=\"booking-rules\" *ngIf=\"has_booking_rules\" (click)=\"openBookingRulesModal()\">i</button>\n        <a-map\n            [(zoom)]=\"zoom\"\n            [(center)]=\"center\"\n            [src]=\"map_url\"\n            [css]=\"style_map\"\n            [listeners]=\"listeners\"\n            [features]=\"features\"\n            [focus]=\"focus\"\n        >\n            <mat-spinner diameter=\"32\"></mat-spinner>\n        </a-map>\n        <a-zoom-controls overlay [(zoom)]=\"zoom\" [(position)]=\"center\"></a-zoom-controls>\n        <a-map-legend overlay></a-map-legend>\n        <div class=\"message\" *ngIf=\"message\">\n            <div class=\"text\">{{ message }}</div>\n            <div class=\"loader\">\n                <mat-progress-bar mode=\"indeterminate\" *ngIf=\"loading\"></mat-progress-bar>\n            </div>\n        </div>\n    </div>\n    <a-timeline *ngIf=\"settings?.show_timeline\" [(date)]=\"date\"></a-timeline>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog } from '@angular/material/dialog';\nimport { FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { generateBookingForm, statusFromBookings } from 'src/app/services/data/bookings/booking.utilities';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { UsersService } from 'src/app/services/data/users/users.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nimport * as dayjs from 'dayjs';\nimport { RequirementDetailsModalComponent, RequirementDetailsModalData } from 'src/app/shell/bookings/overlays/requirement-details-modal/requirement-details-modal.component';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\n\nexport interface ExploreBookingModalData {\n    /** Unix epoch in ms of the booking start time */\n    date: number;\n    /** Space to make the booking in */\n    space: Space;\n    /** List of bookings for the active space at the current time */\n    bookings: Booking[];\n}\n\n@Component({\n    selector: 'a-explore-booking-modal',\n    templateUrl: './booking-modal.component.html',\n    styleUrls: ['./booking-modal.component.scss']\n})\nexport class ExploreBookingModalComponent extends BaseDirective implements OnInit {\n    /**  */\n    public booking: Booking;\n    /** Form fields for new ad-hoc booking */\n    public form: FormGroup;\n    /** Form contents to display */\n    public state: 'info' | 'form' = 'info';\n    /** Description of the current loading state */\n    public loading: string;\n    /** String of time until next booking */\n    public available_until: string;\n    /** Whether booking was successful */\n    public success: boolean;\n\n    public get is_requesting(): boolean {\n        const booking = this.booking.toJSON();\n        return this.space.byRequest({\n            date: this.booking.date || dayjs(this._data.date).valueOf(),\n            duration: this.booking.duration || 30,\n            host: booking.organiser || this._users.current\n        });\n    }\n\n    /** Display string for the selected date */\n    public get date(): string {\n        const date = dayjs(this._data.date);\n        return date.format('DD MMM YYYY');\n    }\n\n    /** Display string for the selected time */\n    public get time(): string {\n        const date = dayjs(this._data.date);\n        return date.format('h:mm A');\n    }\n\n    /** Selected space */\n    public get space(): Space {\n        return this._data.space;\n    }\n\n    /** Whether space is being booked for now */\n    public get is_now(): boolean {\n        const now = dayjs();\n        const date = dayjs(this._data.date);\n        return Math.abs(now.diff(date, 'm')) < 5;\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ExploreBookingModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: ExploreBookingModalData,\n        private _router: Router,\n        private _dialog: MatDialog,\n        private _service: ApplicationService,\n        private _users: UsersService,\n        private _spaces: SpacesService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        const date = dayjs(this._data.date);\n        this.booking = new Booking({\n            title: 'Ad-Hoc Booking',\n            date: date.valueOf(),\n            duration: 30,\n            room_ids: [this._data.space.id]\n        });\n        const status = statusFromBookings(\n            this._data.bookings,\n            this.space.bookable,\n            this.space.byRequest({\n                date: this._data.date,\n                duration: 30,\n                host: this._users.current\n            }),\n            this._data.date\n        );\n        this.available_until = status.available_until;\n    }\n\n    /**\n     * Move onto the next step of the booking flow\n     */\n    public next() {\n        if (!this.is_now) {\n            const booking = this.booking.toJSON();\n            localStorage.setItem('ACA_STAFF.booking_form_data', JSON.stringify({ ...booking, id: 'ad-hoc' }));\n            console.log('Booking:', booking);\n            this._router.navigate(['/book', 'space'], { queryParams: { back: '/explore' } });\n            this._dialog_ref.close();\n        } else {\n            this.form = generateBookingForm(this.booking, [\n                'space_list',\n                'organiser',\n                'title',\n                'duration'\n            ]);\n            this.state = 'form';\n        }\n    }\n\n    public book() {\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            this.updateRequirements().then(() => this.makeBooking());\n        }\n    }\n\n    private updateRequirements() {\n        return new Promise((resolve, reject) => {\n            const space_list = [...this.form.controls.space_list.value];\n            if (\n                this.form.controls.recurrence?.value?.period &&\n                this.form.controls.recurrence?.value?.conflicts?.length > 0\n            ) {\n                this.form.controls?.recurrence?.value?.conflicts?.forEach(i => {\n                    if (!space_list.find(space => space.email === i.space)) {\n                        space_list.push(this._spaces.find(i.space));\n                    }\n                });\n            }\n            let resolved = false;\n            const ref = this._dialog.open<\n                RequirementDetailsModalComponent,\n                RequirementDetailsModalData\n            >(RequirementDetailsModalComponent, {\n                maxWidth: '95vw',\n                width: '32em',\n                data: {\n                    spaces: space_list,\n                    notes_field: this.form.controls.notes,\n                    codes_field: this.form.controls.equipment_codes,\n                    head_counts_field: this.form.controls.expected_attendees,\n                },\n            });\n            this.subscription(\n                'modal_events',\n                ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                    /* istanbul ignore else */\n                    if (event.reason === 'done') {\n                        resolve();\n                        resolved = true;\n                        ref.close();\n                    }\n                })\n            );\n            ref.afterClosed().subscribe(() => {\n                if (!resolved) {\n                    reject();\n                }\n            });\n        });\n    }\n\n    private makeBooking() {\n        this.loading = 'Checking space availability...';\n        this.checkSpaceAvailability().then(\n            () => {\n                const new_booking = new Booking({\n                    ...this.booking,\n                    ...this.form.value,\n                    room_ids: [this._data.space.id]\n                });\n                new_booking.save().then(\n                    () => {\n                        this.loading = null;\n                        this.success = true;\n                        this.timeout('close', () => this._dialog_ref.close(), 5000);\n                    },\n                    err => {\n                        this.loading = null;\n                        this._service.notifyError(\n                            `Error ${this.booking.id ? 'updating' : 'creating'} booking: ${err.message || err}}`\n                        );\n                    }\n                );\n            },\n            err => {\n                this.loading = null;\n                this._service.notifyError(`Error checking space availability: ${err.message || err}`);\n            }\n        );\n    }\n\n    /**\n     * Check whether the selected spaces are available for the selected time period\n     */\n    private checkSpaceAvailability(): Promise<void> {\n        const spaces: Space[] = this.booking.space_list;\n        return new Promise((resolve, reject) => {\n            this._spaces.available({\n                room_ids: spaces.map(space => space.id).join(','),\n                date: this.booking.date,\n                duration: this.booking.duration\n            }).then(\n                space_list => {\n                    for (const space of space_list) {\n                        if (!space.was_available) {\n                            return reject(\n                                `${space.name} is not available at the select time period.`\n                            );\n                        }\n                    }\n                    resolve();\n                },\n                err => reject(err)\n            );\n        });\n    }\n}\n","<ng-container *ngIf=\"!success; else done_state\">\n    <header mat-dialog-title [class.request]=\"is_requesting\">\n        <ng-container *ngIf=\"state !== 'form'\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'add' }\"></app-icon>\n            <div class=\"text\">\n                Book <span>{{ space?.name }}</span> {{ is_now ? 'from now' : 'at ' + time }}\n            </div>\n        </ng-container>\n        <ng-container *ngIf=\"state === 'form'\">\n            <div class=\"text\">\n                Book <span>{{ space?.name }}</span>\n            </div>\n        </ng-container>\n    </header>\n    <mat-dialog-content>\n        <main *ngIf=\"!loading; else load_state\">\n            <ng-container [ngSwitch]=\"state\">\n                <ng-container *ngSwitchCase=\"'form'\">\n                    <a-booking-form [form]=\"form\"></a-booking-form>\n                </ng-container>\n                <ng-container *ngSwitchDefault>\n                    <div class=\"details\">\n                        <p>{{ available_until }}</p>\n                        <p *ngIf=\"is_requesting\" i18n=\"Explore booking request details\">\n                            This space requires approval to reserve\n                        </p>\n                    </div>\n                </ng-container>\n            </ng-container>\n        </main>\n    </mat-dialog-content>\n    <mat-dialog-actions *ngIf=\"!loading\">\n        <footer>\n            <button mat-button class=\"inverse\" mat-dialog-close>Cancel</button>\n            <button mat-button name=\"next\" (click)=\"state === 'form' ? book() : next()\">\n                {{ state === 'form' ? (is_requesting ? 'Request' : 'Book') : 'Yes' }}\n            </button>\n        </footer>\n    </mat-dialog-actions>\n    <ng-template #load_state>\n        <main>\n            <div class=\"info-block\">\n                <div class=\"icon\">\n                    <mat-spinner diameter=\"32\"></mat-spinner>\n                </div>\n                <div class=\"text\">{{ loading || 'Processing request...' }}</div>\n            </div>\n        </main>\n    </ng-template>\n</ng-container>\n<ng-template #done_state>\n    <header class=\"success\" [class.request]=\"is_requesting\">\n        <div class=\"text\">\n            <ng-container *ngIf=\"is_requesting\" i18n=\"Explore booking request sent\">\n                Request for <span>{{ space?.name }}</span> sent\n            </ng-container>\n            <ng-container *ngIf=\"!is_requesting\" i18n=\"Explore booking made\">\n                Booked <span>{{ space?.name }}</span>\n                {{ is_now ? 'from now' : 'at ' + time }}\n            </ng-container>\n        </div>\n        <app-icon\n            [icon]=\"{ class: 'material-icons', content: is_requesting ? 'send' : 'done' }\"\n        ></app-icon>\n    </header>\n</ng-template>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {\n    MAP_OVERLAY_DATA,\n    MAP_LOCATION\n} from '@acaprojects/ngx-interactive-map';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { statusFromBookings } from 'src/app/services/data/bookings/booking.utilities';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Point } from 'src/app/shared/utilities/types.utilities';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\nexport interface SpaceInfoData {\n    /** Current time to show details for */\n    date?: number;\n    /** Space to show details for */\n    space: Space;\n    /** Active bookings for the space */\n    bookings: Booking[];\n}\n\n@Component({\n    selector: 'a-space-info',\n    templateUrl: './space-info.component.html',\n    styleUrls: ['./space-info.component.scss']\n})\nexport class ExploreSpaceInfoComponent extends BaseDirective implements OnInit {\n    /** Status of the space */\n    public status: string;\n    /** String of time until next booking */\n    public available_until: string;\n\n    /** Named position of the element location on the map */\n    public get quadrant(): 'top left' | 'top right' | 'bottom left' | 'bottom right' {\n        /* istanbul ignore if */\n        if (!this._position) {\n            return 'top left';\n        }\n        if (this._position.y < .5) {\n            if (this._position.x < .5) {\n                return 'top left';\n            } else {\n                return 'top right';\n            }\n        } else {\n            if (this._position.x < .5) {\n                return 'bottom left';\n            } else {\n                return 'bottom right';\n            }\n        }\n    }\n\n    /** CSS class for the current status of the space */\n    public get status_class(): string {\n        return (this.status || '')\n            .toLowerCase()\n            .split(' ')\n            .join('-');\n    }\n\n    /** Space to display on the component */\n    public get space(): Space {\n        /* istanbul ignore if */\n        if (!this._data) {\n            return null;\n        }\n        return this._data.space;\n    }\n\n    /** List of bookings from the space for the currently displayed time */\n    public get bookings(): Booking[] {\n        /* istanbul ignore if */\n        if (!this._data) {\n            return [];\n        }\n        return this._data.bookings || [];\n    }\n\n    constructor(\n        @Inject(MAP_OVERLAY_DATA) private _data: SpaceInfoData,\n        @Inject(MAP_LOCATION) private _position: Point,\n        private _users: UsersService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.processBookings();\n        this.interval('update_bookings', () => this.processBookings(), 60 * 1000);\n    }\n\n    /**\n     * Calculate availability of space based off given bookings\n     */\n    public processBookings(): void {\n        /* istanbul ignore if */\n        if (!this.space) {\n            return;\n        }\n        const rules = this.space.rulesFor({\n            date: this._data.date,\n            duration: 30,\n            host: this._users.current\n        });\n        const status = statusFromBookings(\n            this.bookings,\n            this.space.bookable && !rules.hide,\n            !rules.auto_approve,\n            this._data.date\n        );\n        this.status = status.status;\n        this.available_until = status.available_until;\n    }\n}\n","<div *ngIf=\"space\" [id]=\"space.id\" [class]=\"'space-info ' + quadrant\">\n    <div class=\"arrow\"></div>\n    <div class=\"details\">\n        <div class=\"name\">{{ space.name }}</div>\n        <div class=\"availability\">\n            <div name=\"status\" [class]=\"status_class\">{{ status }}</div>\n            <div name=\"available-until\" *ngIf=\"status_class !== 'not-bookable'\">{{ available_until }}</div>\n        </div>\n    </div>\n</div>","import {\n    Component,\n    OnInit,\n    Input,\n    OnChanges,\n    SimpleChanges,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    switchMap,\n    map,\n    first,\n} from 'rxjs/operators';\nimport { Observable, Subject, of } from 'rxjs';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { UsersService } from 'src/app/services/data/users/users.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nimport * as dayjs from 'dayjs';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\n// TODO: Add handling for role users. e.g. Fire Wardens, First Aiders\n// TODO: Add handling for searching for features\n// TODO: Add handling for searching for desks\n\n@Component({\n    selector: 'explore-search',\n    templateUrl: './search.component.html',\n    styleUrls: ['./search.component.scss'],\n})\nexport class ExploreSearchComponent extends BaseDirective implements OnInit, OnChanges {\n    /** Type of data to show when searching */\n    @Input() public type: 'space' | 'user' | 'feature' | 'desk' | 'any';\n    /** Whether external changes are being processed */\n    @Input() public autofocus: boolean;\n    /** Display string for the placeholder of the search input */\n    @Input() public placeholder: string;\n    /** ID of the active level */\n    @Input() public level: string = '';\n    /** Whether search data is loading */\n    public loading: boolean;\n    /** Search filter value */\n    public search_str: string;\n    /** List of users from an API search */\n    public search_results$: Observable<(User | Space)[]>;\n    /** Post search and filtering list of items */\n    public results: (User | Space)[] = [];\n    /** Subject holding the value of the search */\n    public search$ = new Subject<string>();\n\n    /** Input field reference */\n    @ViewChild('input', { static: false }) private input_field: ElementRef<HTMLInputElement>;\n\n    constructor(\n        private _users: UsersService,\n        private _spaces: SpacesService,\n        private _route: ActivatedRoute,\n        private _org: OrganisationService,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._spaces.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.subscription(\n                'route.params',\n                this._route.paramMap.subscribe((params) => {\n                    if (params.has('search_type')) {\n                        this.type = params.get('search_type') as any;\n                    }\n                })\n            );\n            // Listen for input changes\n            this.search_results$ = this.search$.pipe(\n                debounceTime(300),\n                distinctUntilChanged(),\n                switchMap((query) => {\n                    this.loading = true;\n                    return query.length >= 3 && (this.type === 'user' || this.type === 'any')\n                        ? (this._users.query({\n                              q: query.slice(0, 3),\n                              cache: 60 * 1000,\n                          }) as Promise<User[]>)\n                        : Promise.resolve([]);\n                }),\n                catchError((err) => of([])),\n                map((users: User[]) => {\n                    const level = this._org.levelWithID([this.level]);\n                    const spaces = this._spaces.filter((space) =>\n                        level\n                            ? space.zones.includes(\n                                  this._org.buildings.find((bld) => bld.id === level.building_id).id\n                              )\n                            : true\n                    );\n                    const search = (this.search_str || '').toLowerCase();\n                    const filter = (item) =>\n                        (item.name || '').toLowerCase().indexOf(search) >= 0 ||\n                        (item.email || '').toLowerCase().indexOf(search) >= 0;\n                    let result_list = [];\n                    if (this.type === 'space') {\n                        result_list = spaces;\n                    } else if (this.type === 'user') {\n                        result_list = users;\n                    } else {\n                        result_list = (spaces as any).concat(users);\n                    }\n                    this.loading = false;\n                    return result_list.filter(filter);\n                })\n            );\n            // Process API results\n            this.subscription(\n                'search_results',\n                this.search_results$.subscribe((list) => {\n                    this.results = list;\n                    list.sort((a, b) => (a.name || '').localeCompare(b.name));\n                })\n            );\n            this.search$.next(`${dayjs().valueOf()}`);\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.autofocus && this.autofocus) {\n            this.focusField();\n        }\n        /* istanbul ignore else */\n        if (changes.level) {\n            this.search$.next(this.level);\n        }\n    }\n\n    public focusField() {\n        /* istanbul ignore else */\n        if (this.input_field && this.input_field.nativeElement) {\n            this.input_field.nativeElement.focus();\n        }\n    }\n\n    public checkEmpty(filter: string) {\n        this.timeout('empty', () => {\n            if (!filter) {\n                this._router.navigate([], {\n                    relativeTo: this._route,\n                    queryParams: { space: undefined, user: undefined },\n                    queryParamsHandling: 'merge',\n                });\n            }\n        });\n    }\n\n    /**\n     * Update the selected item to display the location for on the map\n     * @param item Space or User to display location for\n     */\n    public selectOption(item: User | Space) {\n        if (item instanceof Space) {\n            this._router.navigate([], {\n                relativeTo: this._route,\n                queryParams: { space: item.id },\n                queryParamsHandling: 'merge',\n            });\n        } else {\n            this._router.navigate([], {\n                relativeTo: this._route,\n                queryParams: { user: item.email },\n                queryParamsHandling: 'merge',\n            });\n        }\n        this.search_str = item.name;\n    }\n}\n","<div class=\"searchbar\" *ngIf=\"type\" tabindex=\"0\" (focus)=\"focusField()\" (click)=\"focusField()\">\n    <div class=\"prefix\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'search' }\"></app-icon>\n    </div>\n    <div class=\"input\">\n        <input\n            #input\n            type=\"text\"\n            [(ngModel)]=\"search_str\"\n            (ngModelChange)=\"search$.next($event); checkEmpty($event)\"\n            [matAutocomplete]=\"auto\"\n            [placeholder]=\"placeholder || 'Search...'\"\n        />\n    </div>\n    <div class=\"suffix\">\n        <button\n            mat-icon-button\n            *ngIf=\"!loading && search_str\"\n            (click)=\"search_str = ''; search$.next(''); checkEmpty('')\"\n        >\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </button>\n        <mat-spinner *ngIf=\"loading\" diameter=\"32\"></mat-spinner>\n    </div>\n</div>\n<mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"selectOption($event.option.value)\">\n    <mat-option *ngFor=\"let option of results\" [value]=\"option\">\n        <div class=\"name\">{{ option.name }}</div>\n        <div class=\"email\">{{ option.level ? option.level.name : option.email }}&nbsp;</div>\n    </mat-option>\n</mat-autocomplete>\n","import { Component, Output, EventEmitter, OnInit, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { MapStatus } from './status.interfaces';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\n@Component({\n    selector: '[desk-status]',\n    template: `\n        <ng-content></ng-content>\n        <div class=\"bindings\" *ngIf=\"system_id\">\n            <!-- BINDINGS -->\n            <i binding [(model)]=\"in_use\" [sys]=\"system_id\" mod=\"DeskManagement\" [bind]=\"zone\" (modelChange)=\"calculateStatus()\"></i>\n            <i binding [(model)]=\"id_list\" [sys]=\"system_id\" mod=\"DeskManagement\" [bind]=\"zone + ':desk_ids'\" (modelChange)=\"calculateStatus()\"></i>\n            <i binding [(model)]=\"reserved\" [sys]=\"system_id\" mod=\"DeskManagement\" [bind]=\"zone + ':reserved'\" (modelChange)=\"calculateStatus()\"></i>\n            <i binding [(model)]=\"occupied\" [sys]=\"system_id\" mod=\"DeskManagement\" [bind]=\"zone + ':occupied_count'\"></i>\n            <i binding [(model)]=\"free\" [sys]=\"system_id\" mod=\"DeskManagement\" [bind]=\"zone + ':free_count'\"></i>\n            <!-- REMOTE EXECUTIONS -->\n            <i binding [(model)]=\"checkin\" [sys]=\"system_id\" mod=\"DeskManagement\" exec=\"manual_checkin\" [params]=\"[checkin]\"></i>\n            <i binding [(model)]=\"cancel\" [sys]=\"system_id\" mod=\"DeskManagement\" exec=\"cancel_reservation\" [params]=\"[]\"></i>\n        </div>\n    `\n})\nexport class ExploreDeskStatusComponent extends BaseDirective implements OnChanges {\n    /** ID of the active level */\n    @Input() public zone: string;\n    /** ID of the desk to checkin */\n    @Input() public checkin: string;\n    /** Emitter for changes to the desk status */\n    @Output() public status = new EventEmitter<MapStatus[]>();\n    /** ID of the desk management system */\n    public system_id: string;\n    /** List of desks for the active level */\n    public id_list: string[];\n    /** List of desk IDs in use on the active level */\n    public in_use: string[];\n    /** List of desk IDs that are reserved on the active level */\n    public reserved: string[];\n    /** Number of occupied desks on the active level */\n    public occupied: number = 0;\n    /** Number of free desks on the active level */\n    public free: number = 0;\n    /** Mapping of colours to statuses */\n    public colour_map: HashMap<string> = {};\n    /** Toggle for cancelling desk reservations */\n    public cancel: boolean;\n\n    constructor(private _service: ApplicationService, private _org: OrganisationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.colour_map = this._service.setting('app.explore.colors') || {};\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.zone) {\n            this.loadDesks();\n        }\n    }\n\n    public calculateStatus() {\n        const desk_list = this.id_list || [];\n        const status_list: MapStatus[] = [];\n        for (const desk_id of desk_list) {\n            const in_use = (this.in_use || []).find(id => id === desk_id);\n            const reserved = (this.reserved || []).find(id => id === desk_id);\n            const status = in_use ? 'unavailable' : reserved ? 'reserved' : 'available';\n            status_list.push({\n                id: desk_id,\n                styles: {\n                    fill: this.colour_map[`desk-${status}`],\n                    stroke: this.colour_map[`desk-${status}-stroke`],\n                },\n                status_id: status\n            });\n        }\n        this.status.emit(status_list);\n    }\n\n    private loadDesks() {\n        const level = this._org.levelWithID(this.zone);\n        if (!level) { return ; }\n        const building = this._org.buildings.find(bld => bld.id === level.building_id);\n        if (!building) { return; }\n        const desk_management = building.systems.desk_management;\n        if (!desk_management) { return; }\n        this.system_id = desk_management;\n    }\n}\n","import {\n    Component,\n    Input,\n    Output,\n    EventEmitter,\n    OnInit,\n    OnDestroy,\n    SimpleChanges,\n    OnChanges,\n} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\nimport { MapFeature } from '@acaprojects/ngx-interactive-map/lib/helpers/map.interfaces';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { ExploreSpaceInfoComponent } from '../overlays/space-info/space-info.component';\nimport { MapStatus, MapListener, SpaceStatus } from './status.interfaces';\nimport {\n    ExploreBookingModalComponent,\n    ExploreBookingModalData,\n} from '../overlays/booking-modal/booking-modal.component';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { UsersService } from 'src/app/services/data/users/users.service';\nimport { statusFromBookings } from 'src/app/services/data/bookings/booking.utilities';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: '[space-status]',\n    template: `\n        <div class=\"bindings\" *ngIf=\"space_list && is_today\">\n            <i\n                *ngFor=\"let space of space_list\"\n                binding\n                [sys]=\"space.id\"\n                mod=\"Bookings\"\n                bind=\"today\"\n                (modelChange)=\"processSpaceBookings(space, $event)\"\n            ></i>\n        </div>\n        <ng-content></ng-content>\n    `,\n})\nexport class ExploreSpaceStatusComponent extends BaseDirective\n    implements OnInit, OnChanges, OnDestroy {\n    /** ID of the zone to grab the spaces */\n    @Input() public zone: string;\n    /** Updates the status based of the given time. Unix epoch in milliseconds */\n    @Input() public date: number;\n    /** Emitter for changes to the space status */\n    @Output() public status = new EventEmitter<MapStatus[]>();\n    /** Emitter for changes to the space status */\n    @Output() public listeners = new EventEmitter<MapListener[]>();\n    /** Emitter for changes to the space status */\n    @Output() public features = new EventEmitter<MapFeature[]>();\n    /** List of spaces to grab the statuses for */\n    public space_list: Space[] = [];\n    /** Mapping of spaces to active bookings */\n    public active_bookings: HashMap<Booking[]> = {};\n    /** Mapping of colours to statuses */\n    public colour_map: HashMap<string> = {};\n\n    /** Whether selected date time is the current day */\n    public get is_today() {\n        return dayjs().isSame(dayjs(this.date), 'd');\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _users: UsersService,\n        private _spaces: SpacesService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.colour_map = this._service.setting('app.explore.colors') || {};\n            this.subscription(\n                'spaces',\n                this._spaces.listen('list').subscribe(() => this.loadSpaces())\n            );\n            this.interval(\n                'update_status',\n                () => {\n                    this.updateSpaceBookings();\n                    this.calculateStatus();\n                },\n                60 * 1000\n            );\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.zone || changes.date) {\n            this.timeout('load', () => this.loadSpaces());\n        }\n        if (changes.zone) {\n            this.clearSpaces();\n        }\n    }\n\n    public ngOnDestroy() {\n        this.clearSpaces();\n    }\n\n    /**\n     * Determine the availability statuses for all the spaces in the set zone\n     */\n    public calculateStatus() {\n        this.timeout('process_statuses', () => {\n            const statuses: MapStatus[] = [];\n            for (const space of this.space_list) {\n                const status = this.getStatus(space, this.date);\n                const id =\n                    space.map_id.indexOf('area') < 0 ? `area-${space.map_id}-status` : space.map_id;\n                statuses.push({\n                    id,\n                    styles: {\n                        fill: this.colour_map[`space-${status}`] || '#000',\n                        opacity: 0.6,\n                    },\n                    status_id: status,\n                });\n            }\n            this.status.emit(statuses);\n        });\n    }\n\n    /**\n     * Get the status of the space at the set time\n     * @param space Space to get the status for\n     */\n    private getStatus(space: Space, datetime?: number): SpaceStatus {\n        if (!space.bookable) {\n            return 'not-bookable';\n        }\n        const date = dayjs(datetime || this.date).valueOf();\n        const options = {\n            date,\n            duration: 30,\n            host: this._users.current,\n        };\n        const rules = space.rulesFor(options);\n        const status = statusFromBookings(\n            this.active_bookings[space.id],\n            space.bookable && !rules.hide,\n            !rules.auto_approve,\n            date\n        );\n        switch(status.status) {\n            case 'Not Bookable':\n                return 'not-bookable';\n            case 'Meeting in Progress':\n                return 'unavailable';\n            case 'Available by Request':\n                return 'requestable';\n            default:\n                return 'available';\n        }\n    }\n\n    /**\n     * Process raw booking data for the given space\n     * @param space Space associated with the bookings\n     * @param data List of booking data\n     */\n    public processSpaceBookings(space: Space, data: HashMap[]) {\n        this.timeout(\n            `space-${space.id}`,\n            () => {\n                const bookings = (data || []).map(\n                    (bkn_data) => new Booking({ ...bkn_data, room_ids: [space.id] })\n                );\n                this.active_bookings[space.id] = bookings;\n                this.calculateStatus();\n            },\n            10\n        );\n    }\n\n    /**\n     * Update the booking data for space on future dates\n     */\n    public updateSpaceBookings() {\n        /* istanbul ignore else */\n        if (this.is_today) {\n            return;\n        }\n        this.timeout(\n            'update_spaces',\n            () => {\n                const date = dayjs(this.date).startOf('d');\n                this._spaces\n                    .query({\n                        from: date.unix(),\n                        to: date.endOf('d').unix(),\n                        show_declined: false,\n                        zone_ids: this.zone,\n                        cache: 10 * 1000,\n                    })\n                    .then((spaces) => {\n                        spaces.forEach((space) =>\n                            this.processSpaceBookings(space, [...space.bookings])\n                        );\n                    });\n            },\n            50\n        );\n    }\n\n    /**\n     * Load listeners for space data\n     */\n    private loadSpaces() {\n        this.space_list = this._spaces.filter((space) => space.zones.indexOf(this.zone) >= 0);\n        const listeners: MapListener[] = [];\n        for (const space of this.space_list) {\n            const id =\n                space.map_id.indexOf('area') < 0 ? `area-${space.map_id}-status` : space.map_id;\n            listeners.push({\n                id,\n                event: 'mouseenter',\n                callback: () => this.showSpaceInfo(space),\n            });\n            listeners.push({\n                id,\n                event: 'mouseleave',\n                callback: () => this.features.emit([]),\n            });\n            if (space.bookable) {\n                listeners.push({\n                    id,\n                    event: 'click',\n                    callback: () => this.openBookingModal(space),\n                });\n                listeners.push({\n                    id,\n                    event: 'touchend',\n                    callback: () => this.openBookingModal(space),\n                });\n            }\n        }\n        this.listeners.emit(listeners);\n        this.updateSpaceBookings();\n        this.calculateStatus();\n    }\n\n    /**\n     * Clear current space and booking data\n     */\n    private clearSpaces() {\n        delete this.active_bookings;\n        this.active_bookings = {};\n    }\n\n    /**\n     * Update features to include space info for a space\n     * @param space Space to show details for\n     */\n    private showSpaceInfo(space: Space) {\n        const id = space.map_id.indexOf('area') < 0 ? `area-${space.map_id}-status` : space.map_id;\n        this.features.emit([\n            {\n                id,\n                coordinates: null,\n                content: ExploreSpaceInfoComponent,\n                data: {\n                    space,\n                    bookings: this.active_bookings[space.id],\n                    date: this.date,\n                },\n            },\n        ]);\n    }\n\n    /**\n     * Open explore booking modal for the given space\n     * @param space Space to make booking for\n     */\n    private openBookingModal(space: Space) {\n        const status = this.getStatus(space, this.date);\n        if (status !== 'unavailable' && status !== 'not-bookable') {\n            this._dialog.open<ExploreBookingModalComponent, ExploreBookingModalData>(\n                ExploreBookingModalComponent,\n                {\n                    width: 'auto',\n                    height: 'auto',\n                    maxWidth: '95vw',\n                    data: {\n                        date: this.date,\n                        space,\n                        bookings: this.active_bookings[space.id],\n                    },\n                }\n            );\n        } else {\n            this._service.notifyInfo(\n                `${space.name} is unavailable at the selected time. Please select another space or time and try again.`\n            );\n        }\n    }\n}\n","import {\n    Component,\n    OnInit,\n    Input,\n    Output,\n    EventEmitter,\n    ElementRef,\n    Renderer2,\n    ViewChild,\n} from '@angular/core';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Identity, Point } from 'src/app/shared/utilities/types.utilities';\n\nimport * as dayjs from 'dayjs';\nimport { eventToPoint } from 'src/app/shared/utilities/general.utilities';\n\nconst BLOCK_SIZE = 30;\nconst MINUTES_IN_DAY = 24 * 60;\n\n@Component({\n    selector: 'a-timeline',\n    templateUrl: './timeline.component.html',\n    styleUrls: ['./timeline.component.scss'],\n})\nexport class ExploreTimelineComponent extends BaseDirective implements OnInit {\n    /** Currently selected datetime */\n    @Input() public date: number;\n    /** Emitter for changes to the selected datetime */\n    @Output() public dateChange = new EventEmitter<number>();\n    /** List of time blocks to select */\n    public blocks: Identity[] = [];\n    /** Starting point for time move events */\n    private _start_position: Point;\n    /** Bounding box of the timeline container */\n    private _box: ClientRect;\n\n    /** Whether selected date time is the current day */\n    public get is_today() {\n        return dayjs().isSame(dayjs(this.date), 'd');\n    }\n\n    /** Offset of the current time from the start of the day */\n    public get offset() {\n        const date = dayjs();\n        const diff = date.diff(date.startOf('d'), 'm');\n        return (diff / MINUTES_IN_DAY) * 100;\n    }\n\n    /** Details of the currently selected datetime */\n    public get active_time(): Identity {\n        const date = dayjs(this.date);\n        const diff = date.diff(date.startOf('d'), 'm');\n        return {\n            id: date.isSame(dayjs(), 'd') ? 'Today' : date.format('DD MMM YYYY'),\n            name: date.format('h:mm A'),\n            left: (diff / MINUTES_IN_DAY) * 100,\n        };\n    }\n\n    @ViewChild('container', { static: true }) private _container: ElementRef<HTMLDivElement>;\n\n    constructor(private _renderer: Renderer2) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.blocks = this.generateBlocks();\n        this.checkDate();\n        this.interval('check_date', () => this.checkDate(), 15 * 1000);\n    }\n\n    /**\n     * Generate the display blocks for the timeline\n     */\n    public generateBlocks(): Identity[] {\n        const start = dayjs().startOf('d');\n        const end = start.endOf('d');\n        const blocks: Identity[] = [];\n        let current_time = start;\n        while (current_time.isBefore(end)) {\n            const is_hour = current_time.minute() === 0;\n            blocks.push({\n                id: current_time.format('HH:mm'),\n                name: is_hour ? current_time.format('h') : '',\n                is_hour,\n                left: (current_time.diff(start, 'm') / MINUTES_IN_DAY) * 100,\n            });\n            current_time = current_time.add(BLOCK_SIZE, 'm');\n        }\n        return blocks;\n    }\n\n    /**\n     * Change the date of the active date time\n     * @param amount Number of days to change by\n     */\n    public changeDate(amount: number = 1) {\n        let date = dayjs(this.date);\n        date = date.add(amount, 'd');\n        const now = dayjs();\n        this.date = date.isBefore(now, 'm') ? now.valueOf() : date.valueOf();\n        this.dateChange.emit(this.date);\n    }\n\n    public startMove(event: MouseEvent | TouchEvent) {\n        const position = eventToPoint(event);\n        this._start_position = position;\n        this._box = this._container.nativeElement.getBoundingClientRect();\n        const type = event instanceof MouseEvent ? 'mouse' : 'touch';\n        this.subscription(\n            'move',\n            this._renderer.listen('window', `${type}move`, (e) => this.onMove(e))\n        );\n        this.subscription(\n            'end',\n            this._renderer.listen('window', `${type === 'mouse' ? 'mouseup' : 'touchend'}`, (e) => {\n                this.unsub('move');\n                this.unsub('end');\n            })\n        );\n    }\n\n    public onMove(event: MouseEvent | TouchEvent) {\n        const position = eventToPoint(event);\n        const y_change = (this._start_position.x - position.x) / this._box.width;\n        const time_change = -Math.round(y_change * MINUTES_IN_DAY);\n        /* istanbul ignore else */\n        if (time_change !== 0) {\n            let old_date = dayjs(this.date);\n            let date = old_date;\n            date = date.add(time_change, 'm');\n            date = date.minute(Math.floor(Math.round(date.minute() / 5)) * 5);\n            this.date = date.valueOf();\n            this.dateChange.emit(this.date);\n            /* istanbul ignore else */\n            if (Math.abs(old_date.diff(date, 'm')) > 0) {\n                this._start_position = position;\n            }\n            this.checkDate();\n        }\n    }\n\n    /** Check that active datetime is not in the past */\n    private checkDate() {\n        const date = dayjs(this.date);\n        let now = dayjs();\n        now = now.minute(Math.floor(Math.ceil(now.minute() / 5)) * 5);\n        /* istanbul ignore else */\n        if (date.isBefore(now, 'm')) {\n            this.date = now.valueOf();\n            this.dateChange.emit(this.date);\n        }\n    }\n}\n","<div class=\"not-mobile\">\n    <div class=\"timeline\" explore #container>\n        <div\n            class=\"block\"\n            *ngFor=\"let item of blocks\"\n            [class.hour]=\"item.is_hour\"\n            [style.left]=\"item.left + '%'\"\n        >\n            <div class=\"text\">{{ item.name }}</div>\n            <div class=\"bar\"></div>\n        </div>\n    </div>\n    <div class=\"offset\" *ngIf=\"is_today\" [style.width]=\"offset + '%'\"></div>\n    <div class=\"active-time\" [style.left]=\"active_time.left + '%'\">\n        <div class=\"bar\"></div>\n        <div class=\"date\">\n            <button mat-icon-button name=\"previous-day\" [disabled]=\"is_today\" (click)=\"changeDate(-1)\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_left' }\"></app-icon>\n            </button>\n            <div class=\"text\" (mousedown)=\"startMove($event)\" (touchstart)=\"startMove($event)\">{{ active_time.id }}</div>\n            <button mat-icon-button name=\"next-day\" (click)=\"changeDate()\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_right' }\"></app-icon>\n            </button>\n        </div>\n        <div class=\"time\" (mousedown)=\"startMove($event)\" (touchstart)=\"startMove($event)\">{{ active_time.name }}</div>\n        <div class=\"triangle\"></div>\n    </div>\n</div>\n<div class=\"pickers mobile-only\">\n    <a-date-field [(ngModel)]=\"date\" offset=\"top\" (ngModelChange)=\"dateChange.emit($event)\"></a-date-field>\n    <a-time-field [(ngModel)]=\"date\" (ngModelChange)=\"dateChange.emit($event)\"></a-time-field>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { Point } from 'src/app/shared/utilities/types.utilities';\n\n@Component({\n    selector: 'a-zoom-controls',\n    templateUrl: './zoom-controls.component.html',\n    styleUrls: ['./zoom-controls.component.scss']\n})\nexport class ZoomControlsComponent implements OnInit {\n    /** Current zoom level of the map */\n    @Input() public zoom: number;\n    /** Current center position of the map */\n    @Input() public position: Point;\n    /** Emitter for changes to the zoom value */\n    @Output() public zoomChange = new EventEmitter<number>();\n    /** Emitter for changes to the position */\n    @Output() public positionChange = new EventEmitter<Point>();\n\n    public min_zoom: number = 1;\n\n    public max_zoom: number = 10;\n\n    constructor() {}\n\n    public ngOnInit(): void {\n\n    }\n\n    public zoomIn() {\n        this.zoom = (this.zoom || this.min_zoom) * 1.2;\n        if (this.zoom > this.max_zoom) {\n            this.zoom = this.max_zoom;\n        }\n        this.zoomChange.emit(this.zoom);\n    }\n\n    public zoomOut() {\n        this.zoom = (this.zoom || this.min_zoom) * (1 / 1.2);\n        if (this.zoom < this.min_zoom) {\n            this.zoom = this.min_zoom;\n        }\n        this.zoomChange.emit(this.zoom);\n    }\n\n    public reset() {\n        this.zoom = this.min_zoom;\n        this.position = { x: 0.5, y: 0.5 };\n        this.zoomChange.emit(this.zoom);\n        this.positionChange.emit(this.position);\n    }\n}\n","<div class=\"zoom-control\">\n    <button mat-icon-button name=\"zoom-in\" (click)=\"zoomIn()\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'add' }\"></app-icon>\n    </button>\n    <button mat-icon-button name=\"zoom-out\" (click)=\"zoomOut()\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'remove' }\"></app-icon>\n    </button>\n    <button mat-icon-button name=\"reset\" (click)=\"reset()\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'replay' }\"></app-icon>\n    </button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { HomePageSettings, ApplicationLink } from 'src/app/shared/utilities/settings.interfaces';\n\n@Component({\n    selector: 'app-home',\n    templateUrl: './home.component.html',\n    styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent extends BaseDirective implements OnInit {\n    /** Settings for the home page */\n    public settings: HomePageSettings;\n    /** Whether to show the overlay menu */\n    public show_menu: boolean;\n    /** Tiles to display on the home page */\n    public get tiles(): ApplicationLink[] {\n        return (this.settings || { tiles: [] }).tiles || [];\n    }\n\n    /** Min width of a tile */\n    public get tile_width(): number {\n        const tiles = this.tiles;\n        if (tiles.length > 2) {\n            return 49;\n        }\n        return 99;\n    }\n\n    /** Height of each tile */\n    public get tile_height(): number {\n        const tiles = this.tiles;\n        if (tiles.length > 2) {\n            return 100 / ((tiles.length + tiles.length % 2) / 2 );\n        }\n        return 50;\n    }\n\n    constructor(private _service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.title = 'Home';\n        this._service.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.settings = this._service.setting('app.home') || {};\n            localStorage.removeItem('ACA_STAFF.booking_form_data');\n        });\n    }\n}\n","<div class=\"home-page\">\n    <header class=\"header\">\n        <a-topbar-header [(menu)]=\"show_menu\" page=\"home\"></a-topbar-header>\n    </header>\n    <main class=\"body\">\n        <div class=\"bg-img\">\n            <img src=\"assets/img/mckinsey_lines.svg\">\n        </div>\n        <div\n            class=\"tile\"\n            *ngFor=\"let item of tiles; let i = index\"\n            [attr.name]=\"item.name\"\n            [style.min-width]=\"tile_width + '%'\"\n            [style.height]=\"(tile_height) * (i === 0 ? 4 / 3 : 2 / 3) + '%'\"\n        >\n            <a *ngIf=\"item.link\" [href]=\"item.link\">\n                <div class=\"inner\">\n                    <app-icon [icon]=\"item.icon\"></app-icon>\n                    <div class=\"text\">{{ item.name }}</div>\n                </div>\n            </a>\n            <a *ngIf=\"!item.link\" [routerLink]=\"[item.route]\" routerLinkActive=\"active\">\n                <div class=\"inner\">\n                    <app-icon [icon]=\"item.icon\"></app-icon>\n                    <div class=\"text\">{{ item.name }}</div>\n                </div>\n            </a>\n        </div>\n    </main>\n    <footer class=\"footer\"></footer>\n</div>\n<!-- <a-overlay-menu [(show)]=\"show_menu\"></a-overlay-menu> -->\n","import { Component, ViewChild, Output, EventEmitter } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport { first } from 'rxjs/operators';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { BookingLike } from './list-item/list-item.component';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { UsersService } from 'src/app/services/data/users/users.service';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nimport * as dayjs from 'dayjs';\nimport { timePeriodsIntersect } from 'src/app/services/data/bookings/booking.utilities';\n\nexport interface EventPair {\n    id: string;\n    date: number;\n}\n\n@Component({\n    selector: 'schedule-event-list',\n    templateUrl: './event-list.component.html',\n    styleUrls: ['./event-list.component.scss'],\n})\nexport class ScheduleEventListComponent extends BaseDirective {\n    /** Emitter  */\n    @Output('eventList') public event_list = new EventEmitter<EventPair[]>();\n    /** List of items to display on the event list */\n    public events: BookingLike[] = [];\n    /** Update promise */\n    public event_promise: Promise<void>;\n    /** Whether bookings are being updated */\n    public loading: boolean;\n    /** Number of days to render in the list from the current date */\n    public shown_offset: number = 7;\n    /** Offset of the date to show events for */\n    public date_offset: number = 0;\n    /** Whether to show the calendar tooltip */\n    public show_calendar: boolean;\n    /** Date to scroll to on next update */\n    public scroll_to: string;\n    /** Current UTC epoch */\n    public now: number = dayjs().valueOf();\n    /** Current UTC epoch */\n    public date: number;\n    /** Whether list is displaying the top of the first item */\n    public at_top: boolean = true;\n    /** List of users available to view schedules for */\n    public user_list: User[] = [];\n    /** Active user to display schedule for */\n    public active_user: User;\n    /** Whether the date picker is open */\n    public date_picker_open: boolean;\n\n    /** Viewport for the scrollable area of the list */\n    @ViewChild(CdkVirtualScrollViewport, { static: true })\n    private scroll_viewport: CdkVirtualScrollViewport;\n\n    @ViewChild(MatMenuTrigger, { static: true }) trigger: MatMenuTrigger;\n\n    constructor(\n        private _users: UsersService,\n        private _bookings: BookingsService,\n        private _spaces: SpacesService,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._spaces.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.subscription(\n                'route.query',\n                this._route.queryParamMap.subscribe((params) => {\n                    /* istanbul ignore else */\n                    if (params.has('email')) {\n                        this.active_user =\n                            this._users.find(params.get('email')) ||\n                            new User({ email: params.get('email') });\n                    }\n                })\n            );\n            this.updateEvents();\n            this.interval('update_events', () => this.updateEvents(), 10 * 1000);\n            this.subscription(\n                'scroll',\n                this.scroll_viewport.elementScrolled().subscribe(() => this.onScroll())\n            );\n            this.subscription(\n                'delegate_list',\n                this._users.listen('delegates').subscribe((list) => {\n                    /* istanbul ignore else */\n                    if (list && list[0]) {\n                        this.user_list = [this._users.current].concat(list);\n                        /* istanbul ignore else */\n                        if (!this.active_user) {\n                            this.active_user = this.user_list[0];\n                        }\n                    }\n                })\n            );\n        });\n    }\n\n    /**\n     * Update the list of events for the currently visible period\n     */\n    public updateEvents() {\n        /* istanbul ignore else */\n        if (!this.event_promise) {\n            this.event_promise = new Promise((resolve) => {\n                const start = dayjs().add(this.date_offset, 'd').startOf('d');\n                const end = start.add(7, 'd').endOf('d');\n                this.loading = true;\n                this._bookings\n                    .query({\n                        email:\n                            (this.active_user ? this.active_user.email : '') ||\n                            this._users.current.email,\n                        from: start.unix(),\n                        to: end.unix(),\n                    })\n                    .then(\n                        (list: Booking[]) => {\n                            this._bookings.updateList(this._bookings.filter(), list);\n                            const old_events = this.events.filter((i) => {\n                                const date = dayjs(i.date);\n                                return (\n                                    i.type !== 'date' &&\n                                    i.type !== 'empty' &&\n                                    (date.isBefore(start, 's') || date.isAfter(end, 's'))\n                                );\n                            });\n                            this.events = this.processEvents(list, old_events);\n                            // Update event list for view listing\n                            const event_list = this.events.filter(\n                                (i) => i.type !== 'date' && i.type !== 'empty'\n                            );\n                            this.event_list.emit(\n                                event_list.map((i) => ({ id: i.id, date: i.date }))\n                            );\n                            // Scroll to date if needed\n                            this.timeout('scroll_to', () => this.scrollTo());\n                            this.loading = false;\n                            delete this.event_promise;\n                        },\n                        () => {\n                            this.loading = false;\n                            delete this.event_promise;\n                        }\n                    );\n            });\n        }\n        return this.event_promise;\n    }\n\n    /**\n     * Process list of new items and merge with the old\n     * @param list List of new bookings to generate event blocks for\n     * @param old_events List of relevant old event blocks\n     */\n    public processEvents(list: Booking[], old_events: BookingLike[]): BookingLike[] {\n        let events: BookingLike[] = [];\n        const now = dayjs();\n        let date = dayjs().startOf('d');\n        const end = date.add(this.shown_offset, 'd').endOf('d');\n        for (; date.isBefore(end); date = date.add(1, 'd')) {\n            const date_str = date.format('YYYY-MM-DD');\n            let date_events = [];\n            // Add date block\n            date_events.push({\n                id: date_str,\n                type: 'date',\n                order_id: date_str,\n                title: date.format('dddd, DD MMM'),\n                is_today: date.isSame(now, 'd'),\n                date: date.valueOf(),\n            });\n            const filter_fn: (_: BookingLike) => boolean = (i) =>\n                timePeriodsIntersect(\n                    date.valueOf(),\n                    date.endOf('d').valueOf(),\n                    i.date,\n                    i.date + (i.duration || 60) * 60 * 1000\n                );\n            // Add events for today to list\n            const new_items = list.filter(filter_fn as any);\n            const old_items = old_events.filter(filter_fn as any);\n            if (new_items.length || old_items.length) {\n                date_events = date_events.concat(new_items as any).concat(old_items);\n            } else {\n                // Add block for no events if so\n                date_events.push({\n                    id: `${date_str}-empty`,\n                    type: 'empty',\n                    order_id: date_str,\n                    title: `No items for ${date.format('dddd, DD MMM')}`,\n                    is_today: date.isSame(now, 'd'),\n                    date: date.valueOf() + 1,\n                });\n            }\n            date_events = unique(date_events, 'id');\n            date_events.sort((a, b) =>\n                a.type === 'date' ? -1 : b.type === 'date' ? 1 : a.date - b.date\n            );\n            events = events.concat(date_events);\n        }\n        return events;\n    }\n\n    /**\n     * Handle scrolling on the event list\n     */\n    public onScroll() {\n        /* istanbul ignore else */\n        if (!this.event_promise) {\n            this.show_calendar = false;\n            const range = this.scroll_viewport.getRenderedRange();\n            const dist = range.end - range.start;\n            const nearest = this.events[range.start];\n            this.at_top = range.start === 0 && this.scroll_viewport.measureScrollOffset() < 5;\n            this.date_offset = dayjs(nearest.date).diff(dayjs(), 'd') - 1;\n            this.date = dayjs((this.events[dist + range.start] || {}).date)\n                .subtract(1, 'd')\n                .valueOf();\n            /* istanbul ignore else */\n            if (range.end > this.events.length - 7) {\n                this.shown_offset += 3;\n                this.updateEvents();\n            }\n        }\n    }\n\n    /**\n     * Update the date offset\n     * @param date UTC milliseconds epoch of new date offset\n     */\n    public updateDate(date: number) {\n        const day = dayjs(date);\n        this.date_offset = day.diff(dayjs(), 'd') - 1;\n        this.shown_offset = Math.max(this.shown_offset, this.date_offset + 3);\n        this.scroll_to = day.format('YYYY-MM-DD');\n        delete this.event_promise;\n        this.show_calendar = false;\n        this.date = dayjs().add(this.date_offset, 'd').valueOf();\n        this.updateEvents();\n    }\n\n    /** Close the menu popup with the date picker */\n    public closeDatePicker() {\n        this.trigger.closeMenu();\n        this.timeout('allow_click', () => (this.date_picker_open = false));\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(item: BookingLike, index: number) {\n        return item ? item.id : null;\n    }\n\n    /**\n     * Scroll to a previously defined date on the event list\n     */\n    private scrollTo() {\n        /* istanbul ignore else */\n        if (this.scroll_to) {\n            const index = this.events.findIndex((i) => i.id === this.scroll_to);\n            /* istanbul ignore else */\n            if (index > -1) {\n                this.scroll_viewport.scrollToIndex(index, 'smooth');\n                this.scroll_to = null;\n            }\n        }\n    }\n\n    public preventClickthrough() {\n        this.date_picker_open = true;\n        this.timeout('allow_click', () => (this.date_picker_open = false));\n    }\n}\n","<div class=\"event-list\">\n    <div class=\"header dark-mode\" [class.scrolled]=\"!at_top\">\n        <div class=\"user\">\n            <mat-form-field appearance=\"outline\" *ngIf=\"user_list && user_list.length > 1\" >\n                <mat-select #select [(value)]=\"active_user\" (valueChange)=\"updateEvents($event)\">\n                    <mat-option *ngFor=\"let user of user_list\" [value]=\"user\">\n                        {{ user?.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"flex\"></div>\n        <div class=\"date\">\n            <button mat-icon-button [matMenuTriggerFor]=\"appMenu\" (click)=\"date_picker_open = true\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'event' }\"></app-icon>\n            </button>\n        </div>\n    </div>\n    <div class=\"progress\">\n        <mat-progress-bar mode=\"indeterminate\" *ngIf=\"loading\"></mat-progress-bar>\n    </div>\n    <div class=\"body\">\n        <cdk-virtual-scroll-viewport itemSize=\"80\" class=\"viewport\" (scroll)=\"onScroll()\">\n            <ng-container *cdkVirtualFor=\"let item of events; trackBy: trackByFn\">\n                <schedule-event-item [class.no-event]=\"date_picker_open\" [attr.id]=\"item.id | slice:0:10\" [user]=\"active_user\" [event]=\"item\"></schedule-event-item>\n            </ng-container>\n        </cdk-virtual-scroll-viewport>\n    </div>\n    <div class=\"footer\"></div>\n</div>\n<mat-menu #appMenu=\"matMenu\" (closed)=\"preventClickthrough()\">\n    <div mat-menu-item class=\"date-picker\" (click)=\"$event.stopPropagation()\">\n        <a-date-picker\n            [(ngModel)]=\"date\"\n            (ngModelChange)=\"updateDate($event); closeDatePicker()\"\n        ></a-date-picker>\n    </div>\n</mat-menu>\n","import { Component, Input } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport {\n    MeetingDetailsOverlayComponent,\n    MeetingDetailsModalData,\n} from 'src/app/overlays/meeting-details-overlay/meeting-details-overlay.component';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { User } from 'src/app/services/data/users/user.class';\n\nimport * as dayjs from 'dayjs';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\nexport interface BookingLike {\n    /** ID of the item */\n    id: string;\n    /** Sorting weight of the item */\n    order_id: string;\n    /** Type of item to render */\n    type: 'date' | 'event' | 'empty';\n    /** Whether the event is on the current date */\n    is_today: boolean;\n    /** Title of the event */\n    title: string;\n    /** Date in UTC milliseconds */\n    date: number;\n    /** Current state of the booking */\n    status?: 'future' | 'upcoming' | 'done' | 'started' | 'in_progress';\n\n    [key: string]: any;\n}\n\n@Component({\n    selector: 'schedule-event-item',\n    templateUrl: './list-item.component.html',\n    styleUrls: ['./list-item.component.scss'],\n})\nexport class ScheduleEventListItemComponent extends BaseDirective {\n    /** Booking to display */\n    @Input() public event: BookingLike;\n    /** User who's schedule is being viewed */\n    @Input() public user: User;\n\n    public get in_progress(): boolean {\n        return this.event.status === 'in_progress';\n    }\n\n    public get date_display(): string {\n        const date = dayjs(this.event.date);\n        const now = dayjs();\n        return now.isSame(date, 'd') ? 'Today' : date.format('DD MMM YYYY');\n    }\n\n    /** Display location of the booking event */\n    public get location(): string {\n        const booking: Booking = this.event as any;\n        return (booking.space_list || [booking.space]).map((i) => i.name).join(', ');\n    }\n\n    /** Image name to display for the event */\n    public get type_image(): string {\n        const booking: Booking = this.event as any;\n        return booking.has_visitors ? 'external' : 'book_room';\n    }\n\n    public get time(): string {\n        const booking: Booking = this.event as any;\n        return booking.all_day || booking.duration > 23 * 60\n            ? 'All Day'\n            : dayjs(booking.date).format('h:mm A');\n    }\n\n    /** Status of the current booking */\n    public get status(): 'approved' | 'tentative' | 'declined' | '' {\n        const statuses = this.event.approval_status || {};\n        const spaces = this.event.space_list || [];\n        for (const space of spaces) {\n            const status = statuses[space.email] || '';\n            if (status.indexOf('tentative') >= 0 || status.indexOf('not') === 0) {\n                return 'tentative';\n            } else if (status.indexOf('declined') >= 0) {\n                return 'declined';\n            }\n        }\n        const location = this.event.location || '';\n        const location_lower = (typeof location === 'string' ? location : '').toLowerCase();\n        if (location_lower.indexOf('tentative') >= 0) {\n            return 'tentative';\n        } else if (location_lower.indexOf('declined') >= 0) {\n            return 'declined';\n        }\n        return spaces.length ? 'approved' : '';\n    }\n\n    constructor(private _dialog: MatDialog, private _users: UsersService) {\n        super();\n    }\n\n    public openDetailsModal() {\n        /* istanbul ignore else */\n        if (this.event instanceof Booking) {\n            this._dialog.open<MeetingDetailsOverlayComponent, MeetingDetailsModalData>(\n                MeetingDetailsOverlayComponent,\n                {\n                    maxHeight: 'auto',\n                    maxWidth: 'auto',\n                    width: 'auto',\n                    height: 'auto',\n                    hasBackdrop: false,\n                    closeOnNavigation: true,\n                    data: {\n                        booking: this.event,\n                        as_delegate: this._users.current.email !== (this.user || {}).email,\n                        delegate: this.user ? this.user.email : '',\n                        is_first: false,\n                        is_last: false,\n                    },\n                }\n            );\n        }\n    }\n}\n","<ng-container *ngIf=\"event\" [ngSwitch]=\"event.type\">\n    <div *ngSwitchCase=\"'date'\" class=\"day display\">\n        <div class=\"content\">{{ event.title }}</div>\n    </div>\n    <div *ngSwitchCase=\"'empty'\" class=\"emptied display\">\n        <div class=\"content\">No events for {{ date_display }}</div>\n    </div>\n    <div\n        *ngSwitchDefault\n        [class]=\"'event display ' + event.type + ' ' + status\"\n        [attr.id]=\"event.id\"\n    >\n        <a (click)=\"openDetailsModal()\">\n            <div class=\"content\">\n                <div class=\"time\">\n                    <div>{{ time }}</div>\n                    <div class=\"info\" *ngIf=\"in_progress\">In Progress</div>\n                </div>\n                <div class=\"icon\">\n                    <img [src]=\"'assets/img/' + type_image + '.svg'\" />\n                </div>\n                <div class=\"details\">\n                    <div class=\"title text\">{{ event.title }}</div>\n                    <div class=\"location text\">\n                        <img src=\"assets/img/location.svg\" />\n                        <div class=\"text\">\n                            {{ event.location_name || location || 'No location' }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </a>\n    </div>\n</ng-container>\n","\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { EventPair } from './event-list/event-list.component';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\n\n@Component({\n    selector: 'app-schedule',\n    templateUrl: './schedule.template.html',\n    styleUrls: ['./schedule.styles.scss'],\n})\nexport class ScheduleComponent extends BaseDirective implements OnInit {\n    /** Name of the page to render */\n    public page: string;\n    /** ID of the event item to view */\n    public id: string;\n    /** Current list of loaded events */\n    public events: EventPair[];\n    /** Whether to show menu */\n    public show_menu = false;\n\n    /** ID of the event after the active event */\n    public get next(): string {\n        if (this.events) {\n            const index = this.events.findIndex(i => this.id === i.id) + 1;\n            if (index > -1 && this.events[index]) {\n                return this.events[index].id;\n            }\n        }\n        return '';\n    }\n\n    /** ID of the event before the active event */\n    public get previous(): string {\n        if (this.events) {\n            const index = this.events.findIndex(i => this.id === i.id) - 1;\n            if (index > -1 && this.events[index]) {\n                return this.events[index].id;\n            }\n        }\n        return '';\n    }\n\n    constructor(private _route: ActivatedRoute, private _service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription('route.route', this._route.paramMap.subscribe((params) => {\n            if (params.has('page')) {\n                this.page = params.get('page');\n            }\n            if (params.has('id')) {\n                this.id = params.get('id');\n            }\n        }));\n        this.loadEvents();\n        this._service.title = 'My Day';\n    }\n\n    /**\n     * Update local event listing\n     * @param event_list New list of events\n     */\n    public updateEvents(event_list: EventPair[]) {\n        this.events = event_list;\n        this.saveEvents();\n    }\n\n    /**\n     * Save the current event listing\n     */\n    public saveEvents() {\n        if (localStorage) {\n            localStorage.setItem('STAFF.events', JSON.stringify(this.events || []));\n        }\n    }\n\n    /**\n     * Load the last saved event listing\n     */\n    public loadEvents() {\n        if (localStorage) {\n            const data = localStorage.getItem('STAFF.events');\n            this.events = JSON.parse(data || '[]');\n        }\n    }\n}\n","<div class=\"schedule page\">\n    <header class=\"header\">\n        <a-topbar-header [(menu)]=\"show_menu\"></a-topbar-header>\n    </header>\n    <main class=\"body\">\n        <ng-container [ngSwitch]=\"page\">\n            <ng-container *ngSwitchCase=\"'view'\">\n                <schedule-view-event [id]=\"id\" [next]=\"next\" [previous]=\"previous\"></schedule-view-event>\n            </ng-container>\n            <ng-container *ngSwitchDefault>\n                <schedule-event-list (eventList)=\"updateEvents($event)\"></schedule-event-list>\n            </ng-container>\n        </ng-container>\n    </main>\n    <footer class=\"footer\">\n        <a-footer-menu></a-footer-menu>\n    </footer>\n</div>\n<!-- <a-overlay-menu [(show)]=\"show_menu\"></a-overlay-menu> -->\n","\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { RouterModule } from '@angular/router';\nimport { ComposerModule } from '@placeos/composer';\n\nimport { ROUTES } from './schedule.routes';\nimport { SharedContentModule } from 'src/app/shared/shared.module';\n\nimport { ScheduleComponent } from './schedule.component';\nimport { ScheduleEventListComponent } from './event-list/event-list.component';\nimport { ScheduleViewEventComponent } from './view-event/view-event.component';\nimport { ScheduleEventListItemComponent } from './event-list/list-item/list-item.component';\nimport { EventDetailsComponent } from './view-event/event-details/event-details.component';\nimport { EventEditComponent } from './view-event/event-edit/event-edit.component';\n\n@NgModule({\n    declarations: [\n        ScheduleComponent,\n        ScheduleViewEventComponent,\n        ScheduleEventListComponent,\n        ScheduleEventListItemComponent,\n        EventDetailsComponent,\n        EventEditComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ComposerModule,\n        FormsModule,\n        ReactiveFormsModule,\n        RouterModule.forChild(ROUTES),\n        SharedContentModule,\n        ScrollingModule\n    ]\n})\nexport class ScheduleModule { }\n","import { Routes } from '@angular/router';\n\nimport { ScheduleComponent } from './schedule.component';\n\nexport const ROUTES: Routes = [\n    { path: '', component: ScheduleComponent },\n    { path: ':page', component: ScheduleComponent },\n    { path: ':page/:id', component: ScheduleComponent },\n    { path: '**', redirectTo: '' }\n];\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { humaniseDuration } from 'src/app/shared/utilities/general.utilities';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { ViewRoomModalComponent } from 'src/app/overlays/view-room-modal/view-room-modal.component';\n\nimport * as dayjs from 'dayjs';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: 'schedule-event-details',\n    templateUrl: './event-details.component.html',\n    styleUrls: ['./event-details.component.scss']\n})\nexport class EventDetailsComponent extends BaseDirective {\n    /** Booking to display */\n    @Input() event: Booking;\n    /** Emitter for action on the display view */\n    @Output() change = new EventEmitter();\n    /** Emitter for changes to the loading state */\n    @Output() loading = new EventEmitter();\n    /** Toggle for activating checkin */\n    public checked_in: boolean;\n    /** Mapping of spaces to last checkin time */\n    public last_start: { [id: string]: number } = {};\n    /** Whether to show full locations list */\n    public show_locations: boolean;\n    /** Whether to show full attendee list */\n    public show_attendees: boolean;\n\n    /** Title of the displayed event */\n    public get title(): string {\n        if (!this.event) {\n            return '';\n        }\n        return this.event.title;\n    }\n\n    /** Display string of when the event will occur */\n    public get when(): string {\n        if (!this.event) {\n            return 'Unable to determine.';\n        }\n        const date = dayjs(this.event.date);\n        const end = date.add(this.event.duration || 60, 'm');\n        if (this.event.all_day || this.event.duration > 23 * 60) {\n            return `${date.format('DD MMM YYYY')} - All Day`;\n        } else {\n            if (date.isSame(end, 'd')) {\n                return `${date.format('DD MMM YYYY, h:mm A')} - ${end.format('h:mm A')}`;\n            } else {\n                return `${date.format('DD MMM YYYY, h:mm A')} - ${end.format(\n                    'DD MMM YYYY, h:mm A'\n                )}`;\n            }\n        }\n    }\n\n    /** Display string for the event's duration */\n    public get duration(): string {\n        if (!this.event) {\n            return 'Unable to determine';\n        }\n        return humaniseDuration(this.event.duration || 60);\n    }\n\n    /** List of spaces associated with the event */\n    public get spaces(): Space[] {\n        if (!this.event) {\n            return [];\n        }\n        return this.event.space_list;\n    }\n\n    /** List of attendees associated with the event not including the host */\n    public get attendees(): User[] {\n        if (!this.event) {\n            return [];\n        }\n        return this.event.attendees.filter(i => i.email !== this.organiser.email);\n    }\n\n    /** Host of the event */\n    public get organiser(): User {\n        if (!this.event) {\n            return this._users.current;\n        }\n        return this.event.organiser || this._users.current;\n    }\n\n    /** Whether the user is allowed to edit the event */\n    public get can_edit(): boolean {\n        const organiser = this.organiser;\n        const user = this._users.current;\n        return organiser.email === user.email && this.status !== 'done';\n    }\n\n    /** Details about the event */\n    public get notes(): string {\n        if (!this.event) {\n            return '';\n        }\n        return this.event.description || '';\n    }\n\n    /** Status of the event */\n    public get status(): 'future' | 'upcoming' | 'done' | 'started' | 'in_progress' {\n        if (this.event) {\n            const now = dayjs();\n            const date = dayjs(this.event.date);\n            /* istanbul ignore else */\n            if (now.isBefore(date.subtract(15, 'm'), 'm')) {\n                return 'future';\n            } else if (now.isBefore(date, 'm')) {\n                return 'upcoming';\n            } else if (now.isBefore(date.add(15, 'm'), 'm')) {\n                return 'started';\n            } else if (now.isBefore(date.add(this.event.duration, 'm'), 'm')) {\n                return 'in_progress';\n            }\n        }\n        return 'done';\n    }\n\n    /** Whether the user has checkin to all the spaces in the event */\n    public get is_checked_in(): boolean {\n        return this.spaces.reduce(\n            (a, v) => a && this.event.date <= (this.last_start[v.id] || 0),\n            true\n        );\n    }\n\n    /** Whether the spaces can be controlled */\n    public get can_control(): boolean {\n        return this.spaces.length > 0 && this.status !== 'future' && this.status !== 'done';\n    }\n\n    /** Whether the user is able to checkin to the event */\n    public get can_checkin(): boolean {\n        return this.spaces.length > 0 && (this.status === 'upcoming' || this.status === 'started');\n    }\n\n    constructor(private _users: UsersService, private _dialog: MatDialog, private _router: Router) {\n        super();\n    }\n\n    /**\n     * Open the modal to show the location of a space\n     * @param space Space to show the location\n     */\n    public locate(space: Space) {\n        /* istanbul ignore else */\n        if (space) {\n            this._dialog.open(ViewRoomModalComponent, {\n                width: 'auto',\n                height: 'auto',\n                maxWidth: '95vw',\n                maxHeight: '95vh',\n                data: { space }\n            });\n        }\n    }\n\n    /**\n     * Enter edit mode for the booking\n     */\n    public edit(): void {\n        this.change.emit({ type: 'edit' });\n    }\n\n    /**\n     * Checkin the current booking\n     */\n    public checkin(): void {\n        this.checked_in = !this.checked_in;\n    }\n\n    /**\n     * Store the booking data and navigate to the booking form\n     */\n    public duplicate(): void {\n        /* istanbul ignore else */\n        if (localStorage) {\n            const booking = this.event.duplicate();\n            localStorage.setItem('STAFF.booking_form', JSON.stringify(booking));\n        }\n        this.change.emit({ type: 'duplicate' });\n        this._router.navigate(['/book']);\n    }\n}\n","<div class=\"event-details\">\n    <div class=\"bindings\">\n        <ng-container *ngFor=\"let space of spaces\">\n            <ng-container *ngIf=\"space?.level?.id\">\n                <i\n                    binding\n                    [(model)]=\"last_start[space.id]\"\n                    [sys]=\"space.id\"\n                    mod=\"Booking\"\n                    bind=\"last_meeting_started\"\n                ></i>\n                <i\n                    binding\n                    [(model)]=\"checkin\"\n                    [sys]=\"space.id\"\n                    mod=\"Booking\"\n                    exec=\"start_meeting\"\n                    [params]=\"[event.date]\"\n                ></i>\n            </ng-container>\n        </ng-container>\n    </div>\n    <div class=\"body\">\n        <div class=\"field\" name=\"title\">\n            <label>Title:</label>\n            <div class=\"value\">{{ title }}</div>\n        </div>\n        <div class=\"field\" name=\"when\">\n            <label>When:</label>\n            <div class=\"value\">{{ when }}</div>\n        </div>\n        <div class=\"field\" name=\"duration\">\n            <label>Duration:</label>\n            <div class=\"value\">{{ duration }}</div>\n        </div>\n        <div class=\"field multi\" name=\"location\">\n            <label>Locations({{ spaces.length || '0' }}):</label>\n            <div class=\"value\">\n                <div class=\"list\" [class.shown]=\"show_locations\">\n                    <div\n                        class=\"list-item\"\n                        *ngFor=\"let item of spaces\"\n                        [title]=\"item?.name + ' - ' + (item?.status || 'Approved')\"\n                    >\n                        <div class=\"status\"></div>\n                        <div class=\"text\">{{ item?.name }}</div>\n                        <button class=\"show\" *ngIf=\"item?.map_id\" name=\"map\" (click)=\"locate(item)\">\n                            Map\n                        </button>\n                        <a\n                            class=\"show\"\n                            *ngIf=\"item?.support_url && can_control\"\n                            name=\"control\"\n                            [href]=\"item.support_url\"\n                            target=\"_blank\"\n                            >Control</a\n                        >\n                    </div>\n                    <div class=\"list-item\" *ngIf=\"!spaces.length\">No Location</div>\n                </div>\n                <button\n                    class=\"show\"\n                    *ngIf=\"spaces.length > 5\"\n                    (click)=\"show_locations = !show_locations\"\n                >\n                    {{ show_locations ? 'Hide' : 'Show' }} Locations\n                </button>\n            </div>\n        </div>\n        <div class=\"field\" name=\"host\">\n            <label>Host:</label>\n            <div class=\"value\">{{ organiser.name }}</div>\n        </div>\n        <div class=\"field multi\" name=\"attendees\">\n            <label>Attendees({{ attendees.length || '0' }}):</label>\n            <div class=\"value\">\n                <div class=\"list\" [class.shown]=\"show_attendees\">\n                    <div\n                        class=\"list-item\"\n                        *ngFor=\"let item of attendees\"\n                        [title]=\"\n                            item?.name +\n                            ' - ' +\n                            (item?.status || 'Accepted') +\n                            (item?.email ? '\\n' + item.email : '')\n                        \"\n                    >\n                        <div class=\"status\"></div>\n                        <div class=\"text\">\n                            <div class=\"name\">{{ item.name }}</div>\n                            <div class=\"email\" *ngIf=\"item.email\">\n                                <a [href]=\"'mailto:' + item.email + '?subject=' + event.title\">{{\n                                    item.email\n                                }}</a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <button\n                    class=\"show\"\n                    *ngIf=\"attendees.length > 5\"\n                    (click)=\"show_attendees = !show_attendees\"\n                >\n                    {{ show_attendees ? 'Hide' : 'Show' }} Attendees\n                </button>\n            </div>\n        </div>\n        <div class=\"field\" name=\"notes\">\n            <label>Notes:</label>\n            <div class=\"value\" [innerHTML]=\"notes\"></div>\n        </div>\n        <div class=\"field\" *ngIf=\"event && event.has_catering\" name=\"catering\">\n            <label>Catered:</label>\n            <div class=\"value\">Yes</div>\n        </div>\n    </div>\n    <div class=\"footer\">\n        <button\n            mat-button\n            *ngIf=\"can_checkin\"\n            name=\"checkin\"\n            [class]=\"\n                status === 'done' && !is_checked_in\n                    ? 'error no-events'\n                    : is_checked_in\n                    ? 'success no-events'\n                    : ''\n            \"\n            (click)=\"checkin()\"\n        >\n            <div class=\"text\">\n                {{\n                    status === 'done' && !is_checked_in\n                        ? 'Cancelled'\n                        : is_checked_in\n                        ? 'Checked in'\n                        : 'Checkin'\n                }}\n            </div>\n        </button>\n        <button mat-button *ngIf=\"can_edit\" name=\"edit\" (click)=\"edit()\">Edit</button>\n        <button mat-button *ngIf=\"can_edit\" name=\"duplicate\" (click)=\"duplicate()\">Duplicate</button>\n    </div>\n</div>\n","import { Component, OnInit, EventEmitter, Input, Output, SimpleChanges, OnChanges, OnDestroy } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { generateBookingForm } from 'src/app/services/data/bookings/booking.utilities';\nimport { BookingConfirmComponent } from 'src/app/shell/bookings/overlays/booking-confirm/booking-confirm.component';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: 'schedule-event-edit',\n    templateUrl: './event-edit.component.html',\n    styleUrls: ['./event-edit.component.scss']\n})\nexport class EventEditComponent extends BaseDirective implements OnInit, OnChanges, OnDestroy {\n    /** Booking to display */\n    @Input() public event: Booking;\n    /** Emitter for action on the display view */\n    @Output() public change = new EventEmitter<{ type: string }>();\n    /** Emitter for changes to the loading state */\n    @Output() public loading = new EventEmitter<string>();\n    /** Form field data */\n    public form: FormGroup;\n\n    constructor(private _service: ApplicationService, private _users: UsersService, private _dialog: MatDialog) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        /* istanbul ignore else */\n        if (this.event) {\n            this.form = generateBookingForm(\n                this.event,\n                this._service.setting('app.booking.show_fields') || []\n            );\n        }\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.event && this.event) {\n            /* istanbul ignore else */\n            if (this.form && changes.event.previousValue) {\n                (changes.event.previousValue as any).event_subject.next({ type: 'item_saved'});\n            }\n            this.form = generateBookingForm(\n                this.event,\n                this._service.setting('app.booking.show_fields') || []\n            );\n        }\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        /* istanbul ignore else */\n        if (this.form && this.event) {\n            (this.event as any).event_subject.next({ type: 'item_saved'});\n        }\n    }\n\n    /**\n     * Exit the edit form\n     */\n    public cancel() {\n        this.change.emit({ type: 'cancel' });\n    }\n\n    /**\n     * Save changes to the booking\n     */\n    public save() {\n        /* istanbul ignore else */\n        if (!this.form.dirty) {\n            this._service.notifyInfo('No changes have been made to booking');\n            return;\n        }\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            const dialog_ref = this._dialog.open(BookingConfirmComponent, {\n                width: '32em',\n                maxWidth: '95vw',\n                maxHeight: '95vh',\n                data: { booking: this.event }\n            });\n            dialog_ref.componentInstance.event.subscribe(event => {\n                /* istanbul ignore else */\n                if (event.reason === 'success') {\n                    this.change.emit({ type: 'view' });\n                }\n            });\n        }\n    }\n}\n","<div class=\"event-edit\">\n    <form *ngIf=\"form\" [formGroup]=\"form\" (ngSubmit)=\"save()\">\n        <div class=\"body\">\n            <a-booking-form [form]=\"form\"></a-booking-form>\n        </div>\n        <div class=\"footer\">\n            <button mat-button type=\"button\" class=\"inverse\" name=\"cancel\" (click)=\"cancel()\">\n                Cancel\n            </button>\n            <button mat-button type=\"submit\">Save</button>\n        </div>\n    </form>\n</div>\n","import { Component, OnInit, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\n\n@Component({\n    selector: 'schedule-view-event',\n    templateUrl: './view-event.component.html',\n    styleUrls: ['./view-event.component.scss'],\n})\nexport class ScheduleViewEventComponent extends BaseDirective implements OnChanges, OnInit {\n    /** ID of the current booking to display */\n    @Input() public id: string;\n    /** ID of the next booking */\n    @Input() public next: string;\n    /** ID of the previous booking */\n    @Input() public previous: string;\n    /** Booking to display */\n    public event: Booking;\n    /** Whether booking data is being loaded */\n    public loading: string;\n    /** Whether booking is being edited */\n    public editing: boolean;\n\n    constructor(\n        private _service: ApplicationService,\n        private _bookings: BookingsService,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'arrow_right',\n            this._service.Hotkeys.listen(['ArrowRight'], () => this.nextBooking())\n        );\n        this.subscription(\n            'arrow_left',\n            this._service.Hotkeys.listen(['ArrowLeft'], () => this.previousBooking())\n        );\n        this.subscription(\n            'changes',\n            this._bookings.listen('list').subscribe(() => this.loadEvent())\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.id && this.id) {\n            this.event = null;\n            this.editing = false;\n            this.loading = '';\n            this.loadEvent();\n        }\n    }\n\n    /**\n     * Load the details of the active event\n     */\n    public loadEvent() {\n        this.loading = 'Loading booking data...';\n        let booking = this._bookings.find(this.id);\n        if (booking) {\n            this.event = booking;\n            this.loading = '';\n        } else {\n            this._bookings.show(this.id, {}).then(\n                (bkn) => {\n                    this.loading = '';\n                    this.event = bkn;\n                },\n                () => {\n                    this.loading = '';\n                    this._service.notifyError(`Failed to loaded booking data<br>ID: ${this.id}`);\n                    this._router.navigate(['/schedule']);\n                }\n            );\n        }\n    }\n\n    /**\n     * View the next booking in the list\n     */\n    public nextBooking() {\n        /* istanbul ignore else */\n        if (this.next && !this.editing) {\n            this._router.navigate(['/schedule', 'view', this.next]);\n        }\n    }\n\n    /**\n     * View the previous booking in the list\n     */\n    public previousBooking() {\n        /* istanbul ignore else */\n        if (this.previous && !this.editing) {\n            this._router.navigate(['/schedule', 'view', this.previous]);\n        }\n    }\n\n    /**\n     * Handle changes to sub-components\n     */\n    public onChange(event: { type: string }): void {\n        /* istanbul ignore else */\n        if (event.type === 'edit') {\n            this.editing = true;\n        } else if (event.type === 'view' || event.type === 'cancel') {\n            this.editing = false;\n        }\n    }\n}\n","<div class=\"event-display\">\n    <div class=\"header\">\n        <div class=\"icon\"></div>\n        <div class=\"details\">\n            <a mat-icon-button name=\"previous\" [routerLink]=\"['/schedule', 'view', previous]\" [class.disabled]=\"!previous\">\n                <div class=\"left icon\">\n                    <i class=\"material-icons\">keyboard_arrow_left</i>\n                </div>\n            </a>\n            <div class=\"title\">{{ event ? event.title || 'No title' : '????' }}</div>\n            <a mat-icon-button name=\"next\" [routerLink]=\"['/schedule', 'view', next]\" [class.disabled]=\"!next\">\n                <div class=\"right icon\">\n                    <i class=\"material-icons\">keyboard_arrow_right</i>\n                </div>\n            </a>\n        </div>\n        <a mat-icon-button [routerLink]=\"['/schedule']\">\n            <div class=\"icon\">\n                <i class=\"material-icons\">close</i>\n            </div>\n        </a>\n    </div>\n    <div class=\"body\">\n        <div class=\"content\">\n            <ng-container *ngIf=\"loading\">\n                <div class=\"no-item center\">\n                    <div class=\"icon\">\n                        <mat-spinner diameter=\"48\"></mat-spinner>\n                    </div>\n                    <div class=\"text\">\n                        {{ loading }}\n                    </div>\n                </div>\n            </ng-container>\n            <div [class.hide]=\"loading\">\n                <ng-container *ngIf=\"!editing; else edit_form\">\n                    <schedule-event-details [event]=\"event\" (change)=\"onChange($event)\" (loading)=\"loading = $event\"></schedule-event-details>\n                </ng-container>\n                <ng-template #edit_form>\n                    <schedule-event-edit [event]=\"event\" (change)=\"onChange($event)\" (loading)=\"loading = $event\"></schedule-event-edit>\n                </ng-template>\n            </div>\n        </div>\n    </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from '../shared/base.directive';\nimport { ApplicationService } from '../services/app.service';\nimport { ApplicationLoadingState, LoadingState } from '../shared/utilities/types.utilities';\nimport { ApplicationIcon } from '../shared/utilities/settings.interfaces';\nimport { UsersService } from '../services/data/users/users.service';\n\n@Component({\n    selector: 'app-shell-wrapper',\n    templateUrl: './shell.component.html',\n    styleUrls: ['./shell.component.scss'],\n})\nexport class ShellWrapperComponent extends BaseDirective implements OnInit {\n    /** Loading state of the application */\n    public loading_state: ApplicationLoadingState;\n    /** Logo of the application organisation */\n    public logo: ApplicationIcon;\n\n    constructor(private _service: ApplicationService, private _users: UsersService) {\n        super();\n    }\n\n    /** Whether the user needs to login */\n    public get show_login(): boolean {\n        return !this._users.is_logged_in;\n    }\n\n    /** Whether a module is still loading data */\n    public get is_loading(): boolean {\n        if (this.loading_state) {\n            for (const mod in this.loading_state) {\n                if (this.loading_state[mod] && this.loading_state[mod].state === 'loading') {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    /** List of modules with a loading state */\n    public get loading_state_list(): LoadingState[] {\n        const list: LoadingState[] = [];\n        for (const mod in this.loading_state) {\n            if (this.loading_state[mod]) {\n                list.push(this.loading_state[mod]);\n            }\n        }\n        return list;\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'loading',\n            this._service.listen<ApplicationLoadingState>('loading', (loading) => {\n                this.loading_state = loading;\n            })\n        );\n        this._service.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.logo = this._service.setting('app.logo_light') || { type: 'icon' };\n        });\n    }\n}\n","\n<div class=\"shell\">\n    <div class=\"view\" *ngIf=\"!show_login\">\n        <router-outlet></router-outlet>\n    </div>\n    <div class=\"login-module\" *ngIf=\"show_login\">\n        <app-login></app-login>\n    </div>\n    <div class=\"loading-block\" *ngIf=\"is_loading\">\n        <div class=\"info-block\">\n            <div class=\"header\" [style.background-color]=\"logo?.background\">\n                <div class=\"logo\">\n                    <i *ngIf=\"logo?.type === 'icon'\" [class]=\"logo.class\">{{ logo.content }}</i>\n                    <img *ngIf=\"logo?.type === 'img'\" [src]=\"logo.src | safe:'resource'\" />\n                </div>\n            </div>\n            <div class=\"item\" *ngFor=\"let item of loading_state_list\">\n                <div class=\"message\">{{ item.message }}</div>\n                <div class=\"icon\">\n                    <ng-container [ngSwitch]=\"item.state\">\n                        <ng-container *ngSwitchCase=\"'complete'\">\n                            <i class=\"material-icons success\">done</i>\n                        </ng-container>\n                        <ng-container *ngSwitchCase=\"'failed'\">\n                            <i class=\"material-icons failure\">close</i>\n                        </ng-container>\n                        <ng-container *ngSwitchDefault>\n                            <mat-spinner diameter=\"16\"></mat-spinner>\n                        </ng-container>\n                    </ng-container>\n                </div>\n            </div>\n        </div>\n    </div>\n    <feedback></feedback>\n</div>\n","export const environment = {\n  production: true\n};\n","// IMPORTANT: THIS FILE IS AUTO GENERATED! DO NOT MANUALLY EDIT OR CHECKIN!\n/* tslint:disable */\nexport const VERSION = {\n    \"dirty\": false,\n    \"raw\": \"31cd1a2\",\n    \"hash\": \"31cd1a2\",\n    \"distance\": null,\n    \"tag\": null,\n    \"semver\": null,\n    \"suffix\": \"31cd1a2\",\n    \"semverString\": null,\n    \"version\": \"0.0.0\",\n    \"core_version\": \"1.0.0\",\n    \"time\": 1594893976216\n};\n/* tslint:enable */\n","\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}