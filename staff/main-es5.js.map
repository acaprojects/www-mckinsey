{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/overlays/booking-rules-modal/booking-rules-modal.component.ts","webpack:///src/app/overlays/booking-rules-modal/booking-rules-modal.template.html","webpack:///src/app/overlays/confirm-modal/confirm-modal.component.ts","webpack:///src/app/overlays/confirm-modal/confirm-modal.component.html","webpack:///src/app/overlays/meeting-details-overlay/catering/catering.component.ts","webpack:///src/app/overlays/meeting-details-overlay/catering/catering.component.html","webpack:///src/app/overlays/meeting-details-overlay/display/display.component.ts","webpack:///src/app/overlays/meeting-details-overlay/display/display.component.html","webpack:///src/app/overlays/meeting-details-overlay/meeting-details-overlay.component.ts","webpack:///src/app/overlays/meeting-details-overlay/meeting-details-overlay.template.html","webpack:///src/app/overlays/meeting-details-overlay/space/space.component.ts","webpack:///src/app/overlays/meeting-details-overlay/space/space.component.html","webpack:///src/app/overlays/new-user-modal/new-user-modal.component.ts","webpack:///src/app/overlays/new-user-modal/new-user-modal.component.html","webpack:///src/app/overlays/overlays.module.ts","webpack:///src/app/overlays/recurrence-modal/recurrence-modal.component.ts","webpack:///src/app/overlays/recurrence-modal/recurrence-modal.component.html","webpack:///src/app/overlays/space-select-modal/space-select-modal.component.ts","webpack:///src/app/overlays/space-select-modal/space-select-modal.component.html","webpack:///src/app/overlays/time-extension/time-extension.component.ts","webpack:///src/app/overlays/time-extension/time-extension.component.html","webpack:///src/app/overlays/view-room-modal/view-room-modal.component.ts","webpack:///src/app/overlays/view-room-modal/view-room-modal.component.html","webpack:///src/app/services/app.service.ts","webpack:///src/app/services/data/base-api.class.ts","webpack:///src/app/services/data/base.service.ts","webpack:///src/app/services/data/bookings/booking.class.ts","webpack:///src/app/services/data/bookings/booking.utilities.ts","webpack:///src/app/services/data/bookings/bookings.service.ts","webpack:///src/app/services/data/catering/catering-category.class.ts","webpack:///src/app/services/data/catering/catering-item.class.ts","webpack:///src/app/services/data/catering/catering-order.class.ts","webpack:///src/app/services/data/location/location.class.ts","webpack:///src/app/services/data/location/location.utilities.ts","webpack:///src/app/services/data/organisation/building.class.ts","webpack:///src/app/services/data/organisation/level.class.ts","webpack:///src/app/services/data/organisation/organisation.class.ts","webpack:///src/app/services/data/organisation/organisation.service.ts","webpack:///src/app/services/data/service-manager.class.ts","webpack:///src/app/services/data/spaces/space.class.ts","webpack:///src/app/services/data/spaces/space.utilities.ts","webpack:///src/app/services/data/spaces/spaces.service.ts","webpack:///src/app/services/data/users/user.class.ts","webpack:///src/app/services/data/users/user.utilities.ts","webpack:///src/app/services/data/users/users.service.ts","webpack:///src/app/services/hotkeys.service.ts","webpack:///src/app/services/settings.service.ts","webpack:///src/app/shared/base.class.ts","webpack:///src/app/shared/base.directive.ts","webpack:///src/app/shared/components/custom-fields/action-field/action-field.component.ts","webpack:///src/app/shared/components/custom-fields/action-field/action-field.component.html","webpack:///src/app/shared/components/custom-fields/counter/counter.component.ts","webpack:///src/app/shared/components/custom-fields/counter/counter.component.html","webpack:///src/app/shared/components/custom-fields/date-field/date-field.component.ts","webpack:///src/app/shared/components/custom-fields/date-field/date-field.component.html","webpack:///src/app/shared/components/custom-fields/duration-field/duration-field.component.ts","webpack:///src/app/shared/components/custom-fields/duration-field/duration-field.component.html","webpack:///src/app/shared/components/custom-fields/time-field/time-field.component.ts","webpack:///src/app/shared/components/custom-fields/time-field/time-field.component.html","webpack:///src/app/shared/components/custom-fields/user-list-field/user-list-field.component.ts","webpack:///src/app/shared/components/custom-fields/user-list-field/user-list-field.component.html","webpack:///src/app/shared/components/custom-fields/user-search-field/user-search-field.component.ts","webpack:///src/app/shared/components/custom-fields/user-search-field/user-search-field.component.html","webpack:///src/app/shared/components/feedback/feedback.component.ts","webpack:///src/app/shared/components/feedback/feedback.template.html","webpack:///src/app/shared/components/footer-menu/footer-menu.component.ts","webpack:///src/app/shared/components/footer-menu/footer-menu.component.html","webpack:///src/app/shared/components/forms/booking-form/booking-form.component.ts","webpack:///src/app/shared/components/forms/booking-form/booking-form.component.html","webpack:///src/app/shared/components/forms/user-form/user-form.component.ts","webpack:///src/app/shared/components/forms/user-form/user-form.component.html","webpack:///src/app/shared/components/icon/icon.component.ts","webpack:///src/app/shared/components/icon/icon.component.html","webpack:///src/app/shared/components/login/login.component.ts","webpack:///src/app/shared/components/login/login.component.html","webpack:///src/app/shared/components/map-controls/map-controls.component.ts","webpack:///src/app/shared/components/map-controls/map-controls.component.html","webpack:///src/app/shared/components/overlay-menu/overlay-menu.component.ts","webpack:///src/app/shared/components/overlay-menu/overlay-menu.component.html","webpack:///src/app/shared/components/popout-menu/popout-menu.component.ts","webpack:///src/app/shared/components/popout-menu/popout-menu.component.html","webpack:///src/app/shared/components/searchbar/searchbar.component.ts","webpack:///src/app/shared/components/searchbar/searchbar.component.html","webpack:///src/app/shared/components/topbar-header/topbar-header.component.ts","webpack:///src/app/shared/components/topbar-header/topbar-header.component.html","webpack:///src/app/shared/components/user-avatar/user-avatar.component.ts","webpack:///src/app/shared/components/user-avatar/user-avatar.component.html","webpack:///src/app/shared/globals/application.ts","webpack:///src/app/shared/mocks/api/bookings.mock.ts","webpack:///src/app/shared/mocks/api/buildings.mock.ts","webpack:///src/app/shared/mocks/api/common.mock.ts","webpack:///src/app/shared/mocks/api/locations.mock.ts","webpack:///src/app/shared/mocks/api/organisation.mock.ts","webpack:///src/app/shared/mocks/api/spaces.mock.ts","webpack:///src/app/shared/mocks/api/users.mock.ts","webpack:///src/app/shared/mocks/index.ts","webpack:///src/app/shared/mocks/systems.mock.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/shared/utilities/api.utilities.ts","webpack:///src/app/shared/utilities/formatting.utilities.ts","webpack:///src/app/shared/utilities/general.utilities.ts","webpack:///src/app/shared/utilities/validation.utilities.ts","webpack:///src/app/shell/bookings/overlays/booking-confirm/booking-confirm.component.ts","webpack:///src/app/shell/bookings/overlays/booking-confirm/booking-confirm.component.html","webpack:///src/app/shell/bookings/overlays/requirement-details-modal/requirement-details-modal.component.ts","webpack:///src/app/shell/bookings/overlays/requirement-details-modal/requirement-details-modal.component.html","webpack:///src/app/shell/home/home.component.ts","webpack:///src/app/shell/home/home.component.html","webpack:///src/app/shell/shell.component.ts","webpack:///src/app/shell/shell.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","children","loadChildren","m","BookingsModule","ExploreModule","ScheduleModule","redirectTo","AppRoutingModule","forRoot","useHash","imports","AppComponent","_app","_org","_spaces","_bookings","location","href","origin","pathname","selector","templateUrl","styleUrls","encapsulation","None","AppModule","provide","useValue","register","enabled","production","declarations","providers","bootstrap","BookingRulesModalComponent","_data","event","timeout","_content_el","nativeElement","scrollTop","building","name","details","booking_details","rules","info","map_rules","other_rules","Object","reduce","a","v","push","title","contact","CONFIRM_METADATA","height","width","maxHeight","maxWidth","ConfirmModalComponent","_dialog","emit","reason","content","action","icon","MeetingDetailsCateringComponent","catering","filter","order","location_id","space","booking","note_list","notes","note","type","length","message","orders","charge_code","MeetingDetailsDisplayComponent","_users","on_event","last_start","the_space","find","open","data","date","end","add","duration","all_day","format","isSame","space_list","attendees","i","email","organiser","current","recurrence","period","start","user","status","description","now","isBefore","subtract","attendee_statuses","approval_status","spaces","MeetingDetailsOverlayComponent","_dialog_ref","_service","_router","metadata","ref","date_string","subscription","componentInstance","subscribe","deleteMeeting","close","unsub","deleteSeries","new_booking","duplicate","navigate","localStorage","setItem","JSON","stringify","loading","afterClosed","form","controls","value","notes_field","codes_field","equipment_codes","head_counts_field","expected_attendees","save","err","notifyError","editMeeting","notifySuccess","series_id","is_last","is_first","isAfter","duplicateMeeting","MeetingDetailsSpaceComponent","space_notes","NewUserModalComponent","markAllAsTouched","valid","new_user","first_name","last_name","changeEvents","next","OVERLAYS","SharedOverlaysModule","RECURRENCE_METADATA","RecurrenceModalComponent","periods","required","search$","SpaceSelectModalComponent","selected_spaces","request_map","types","concat","search_results$","pipe","_","zone_ids","active_building","active_type","available","join","list","selected","item","sort","b","update","space_types","a_space","map","options","host","forEach","byRequest","space_a","space_b","bld","buildings","level","building_id","bld_b","localeCompare","sort_order","reverse","zone_id","a_has_zone","zones","indexOf","b_has_zone","multiple","MAX_EXTENSION","TimeExtensionModalComponent","durations","checkAvailability","extension","notifyInfo","room_ids","room","ignore","icaluid","hide_bookings","extended","block","storePendingChange","ViewRoomModalComponent","focus_feature","map_id","coordinates","back","fore","ApplicationService","_app_ref","_zone","_title","_cache","_settings","_hotkeys","_composer","_snackbar","_analytics","_route_trail","_subjects","_observers","set","isStable","run","_stable","log","setupCache","waitForSettings","key","get","on_action","snackbar_ref","panelClass","afterDismissed","dismiss","onAction","msg","console","debug","notify","error","warn","args","stream","force","getValue","asObservable","initialised","init","setupComposer","_initialised","window","application","composer","state","settings","protocol","domain","hostname","port","url","use_domain","route","mock","config","scope","auth_uri","token_uri","redirect_uri","handle_login","local_login","setup","isEnabled","hash","activateUpdate","activated","reload","setInterval","checkForUpdate","bindings","app_name","title_suffix","setting","setTitle","getTitle","auth","api_endpoint","is_initialised","providedIn","BASE_MUTABLE_FIELDS","BaseDataClass","raw_data","_changes","_server_names","toLowerCase","toJSON","reject","promise","d","task_name","parameters","task","with_changes","obj","_timers","_intervals","_subscriptions","new_key","substr","undefined","serviceFor","changes","parse","BaseAPIService","_subscribers","_promises","_compare","_list_filter","_name","_api_route","load","engine","endpoint","predicate","query_params","update_list","cache","query","result","http","Array","process","results","new_item","updateList","form_data","post","analyticsEvent","method","post_data","_task","api_route","request","delay","stopPoll","sub","_poll","show","interval","complete","put","removeItem","remove_ids","label","raw_item","old_list","compareFn","new_list","mixed_list","found","Booking","_display","subject","Subject","start_epoch","Start","valueOf","end_epoch","End","diff","body","booking_type","visitors","has_catering","_attendees","active_user","creator","_location","location_name","breakdown","Date","getTime","equipment_code","checked_in","checkins","notify_users","author","time","space_ids","room_id","_space_list","space_service","show_as","edits","unix","auto_approve","old_date","from_room","display","external","MINUTE","HOUR","DAY","WEEK","MONTH","DURATION_MAP","month","months","week","weeks","day","days","hour","hours","minute","minutes","BOOKING_COUNT","BOOKING_DATE","startOf","setMockBookingStartDatetime","generateMockBooking","override","Math","floor","random","productName","fill","paragraph","city","getFreeBookingSlots","min_size","slots","bkn_start","bkn_end","abs","getNextFreeBookingSlot","second","generateBookingForm","current_user","use_fields","fields","booking_date","needs_space","setValidators","disable","simplified_fields","subs","hasOwnProperty","valueChanges","unsubscribe","rulesForSpace","space_rules_for_user","hide","zone","rule_block","checkRules","recurr_end","conditions","ruleset","max_length","stringToMinutes","min_length","recurr","count","matches","counter","condition","groups","j","last_location","check","match","durationGreaterThanOrEqual","getMinLength","rule_list","values","min","min_block","el","duration_1","duration_2","first","str","parts","split","statusFromBookings","bookings","bookable","requestable","free_slots","next_free_slot","slot","currently_free","time_until_next_block","free_tomorrow","free_today","available_until","BookingsService","setService","CateringCategory","items","must_select","order_anytime","anytime","can_order_anytime","CateringItem","_amount","instance_id","from_month","available_from","to_month","available_to","prior_notice","notice","unit_price","price","supplier_cost","minimum_quantity","max","maximum_quantity","parent_categories","category_ids","categories","image_path","catering_type","out_of_stock","amount","allergy","CateringOrder","delivery_time","kitchen","pantry","symbol","total","MapLocation","desk_id","x","normalise","x_max","y","service","levelWithID","fixed","confidence","at_desk","empty","generateMockLocation","overrides","fixed_locations","maps","Building","disc_info","discovery_info","_extras","extras","extra_id","extra_name","_loan_items","loan_items","_levels","levels","_roles","roles","_lockers","lockers","locker_structure","_systems","systems","_phone_numbers","phone_numbers","longitude","latitude","searchables","neighbourhoods","lvl","lvl_features","feature","level_id","address","booking_rules","catering_restricted_from","currency","timezone","holding_bay","visitor_space","_zones","BuildingLevel","bld_id","level_name","lower_name","num","replace","toUpperCase","short_name","map_url","floor_type","Organisation","OrganisationService","_organisation","ids","bld_list","_active_building","getItem","organisation","loadOrganisation","loadBuildings","loadLevels","loadSpaceTypes","user_service","listen","tags","org_data","limit","bld_data","lvl_data","type_data","ServiceManager","_service_list","provideFor","provider","OPTION_DEFAULTS","Space","long_name","book_type","can_search","searchable","can_control","controlable","hourly_rate","cost_hour","capacity","recurr_available","occurence","was_available","support_url","image","raw_bookings","bkn","linked_spaces","linked_rooms","rm","rulesFor","bookingsFor","SPACE_COUNT","generateMockSpace","firstName","lastName","linked","business","availabilityOptionsToQuery","SpacesService","_org_service","respond","available_spaces","User","_desk_bookings","windows_id","visitor","phone","mobile","business_unit","department","organisation_id","organisation_name","staff_code","fmno","delegates","officeLocation","desk","l","USER_COUNT","USER_DOMAIN","USER_EMAILS","generateMockUser","companyName","delegate_count","phoneNumber","avatar","generateUserForm","UsersService","uhttp","token","expiry","endOf","client_id","hashStr","sessionStorage","go","headers","append","authorise","logout","tries","locate","loadDelegates","promises","all","INVALID_STANDALONE_KEYS","HotkeysService","keydown_states","keydown_observers","combo_end","registered_combos","addEventListener","mapKey","last_down","preventDefault","combo","combination","validCombination","last_key","updateCombinationEndList","presses","key_list","non_meta","SettingsService","api","local","session","_app_name","built","loadFromFile","loadStore","app","colors","shift","store","file","file_name","BaseClass","clearTimeout","clearInterval","fn","Function","setTimeout","BaseDirective","destroy","ActionFieldComponent","show_tooltip","performAction","CounterComponent","step","ctrl_key","shift_key","setValue","new_value","_onChange","_onTouch","useExisting","multi","remove","DateFieldComponent","_from","position","offset","disabled","_trigger","closeMenu","openMenu","_to","menuOpen","openDatePicker","$event","stopPropagation","closeDatePicker","DurationFieldComponent","duration_options","generateDurationOptions","blocks","TimeFieldComponent","no_past_times","show_select","_time_options","generateAvailableTimes","ceil","select_field","focus","openedChange","datestamp","show_past","showSelect","UserListFieldComponent","q","slice","search_str","user_list","match_name","match_email","active_list","index","findIndex","a_user","target","files","reader","FileReader","readAsText","evt","processCsvData","srcElement","addUser","template","addUsersFromFile","downloadCSVTemplate","UserSearchFieldComponent","resetSearchString","FeedbackComponent","updateRoute","document","events","current_page","FooterMenuComponent","tiles","BookingFormComponent","UserFormComponent","IconComponent","LoginComponent","username","password","logo","login","setErrors","MapControlsComponent","_route","levelChange","building_list","level_list","queryParamMap","params","has","setBuilding","updateLevel","lvl_id","relativeTo","queryParamsHandling","queryParams","OverlayMenuComponent","showChange","copyright","year","delayedClose","cancelClose","PopoutMenuComponent","actions","SearchbarComponent","valueChange","autofocus","focusField","input_field","TopbarHeaderComponent","menuChange","menu","closeAll","closeModals","UserAvatarComponent","version","core_version","build","control","handlers","MOCK_BOOKINGS","rooms","callback","from","to","route_params","splice","MOCK_BUILDINGS","emergency","av_help","concierge","locations","desk_tracking","desk_bookings","messaging","features","number","map_features","desks","DOMAIN","API","MOCK_LOCATIONS","lvls","MOCK_ORG","send_acceptance","MOCK_SPACES","space_data","Bookings","today","MOCK_USERS","MOCK_CONTACTS","PREDEFINED_USERS","LETTERS","NUMBERS","SPACE_LIST","IMAGES","createSystem","booking_bindings","touch_enabled","cancel_timeout","control_url","desk_bindings","system","DeskManagement","DeskBookings","room_name","$start_meeting","last_meeting_started","$cancel_meeting","$waiter_call","$book","$check_in","$check_out","COMPONENTS","ENTRY_COMPONENT","MATERIAL_MODULES","CDK_MODULES","SharedContentModule","toQueryString","formatAttendeesWithHost","formatAttendees","attendee_str","users","formatDate","formatTime","formatPeriodWithDuration","t","formatPeriod","timestamp","formatDuration","RECURRENCE_PERIODS","formatRecurrence","formatSpaces","getItemWithKeys","isMobileDevice","r","navigator","userAgent","isMobileSafari","agent","isAndroidChrome","padZero","toString","unique","array","pos","arr","humaniseDuration","short","h","filterList","filters","f","word","regex","RegExp","item_list","match_count","match_index","field_list","matched","field","changed","tokens","k","matchToHighlight","timeToDate","randomInt","timeFormatString","is24HourTime","localeString","toLocaleTimeString","downloadFile","filename","contents","element","createElement","setAttribute","encodeURIComponent","style","appendChild","click","removeChild","csvToJson","csv","lines","line","part","jsonToCsv","json","valid_keys","detectIE","ua","msie","parseInt","substring","trident","rv","edge","eventToPoint","MouseEvent","clientX","clientY","touches","flatten","an_array","stack","res","pop","isArray","HAS_ERROR","validateDate","is_from","buildValidateStartTime","c","validateStartTime","date_obj","buildValidateDuration","validateDuration","buildValidateAttendees","validateAttendees","invalid","validateEndTime","date_control","end_time","BookingConfirmComponent","disableClose","onError","checkSpaceAvailability","success","date_value","duration_value","RequirementDetailsModalComponent","codes","head_counts","needs_charge_code","active_space","generateFormFields","is_valid","new_notes","head_count","_scrollToBottom","scrollTo","top","scrollHeight","left","behavior","submit","HomeComponent","ShellWrapperComponent","loading_state","is_logged_in","mod","environment","bootstrapModule"],"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ShellWrapperComponent } from './shell/shell.component';\nimport { HomeComponent } from './shell/home/home.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ShellWrapperComponent,\n        children: [\n            { path: 'home', component: HomeComponent },\n            {\n                path: 'book',\n                loadChildren: () =>\n                    import('./shell/bookings/bookings.module').then(m => m.BookingsModule)\n            },\n            {\n                path: 'explore',\n                loadChildren: () =>\n                    import('./shell/explore/explore.module').then(m => m.ExploreModule)\n            },\n            // {\n            //     path: 'control',\n            //     loadChildren: () =>\n            //         import('./shell/control/control.module').then(m => m.ControlModule)\n            // },\n            // {\n            //     path: 'directory',\n            //     loadChildren: () =>\n            //         import('./shell/directory/directory.module').then(m => m.DirectoryModule)\n            // },\n            {\n                path: 'schedule',\n                loadChildren: () =>\n                    import('./shell/schedule/schedule.module').then(m => m.ScheduleModule)\n            },\n            // {\n            //     path: 'help',\n            //     loadChildren: () => import('./shell/help/help.module').then(m => m.HelpModule)\n            // },\n            { path: '**', redirectTo: 'home' }\n        ]\n    },\n    { path: '**', redirectTo: 'home' }\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, { useHash: true })],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { detectIE } from './shared/utilities/general.utilities';\nimport { ApplicationService } from './services/app.service';\nimport { OrganisationService } from './services/data/organisation/organisation.service';\nimport { SpacesService } from './services/data/spaces/spaces.service';\nimport { BookingsService } from './services/data/bookings/bookings.service';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: [\n        './styles/app.component.scss',\n        './styles/custom-element.styles.scss',\n        './styles/native-element.styles.scss',\n    ],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class AppComponent {\n    constructor(\n        private _app: ApplicationService,\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _bookings: BookingsService\n    ) {\n        if (detectIE() && detectIE() < 12) {\n            location.href = `${location.origin}${location.pathname}assets/not-supported.html`;\n            return;\n        }\n    }\n}\n","<div class=\"app\">\n    <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { MAT_LABEL_GLOBAL_OPTIONS } from '@angular/material/core';\n\nimport './shared/mocks';\n\nimport { ComposerModule } from '@placeos/composer';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\n\nimport { SharedOverlaysModule } from './overlays/overlays.module';\nimport { SharedContentModule } from './shared/shared.module';\n\nimport { ShellWrapperComponent } from './shell/shell.component';\nimport { HomeComponent } from './shell/home/home.component';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        ShellWrapperComponent,\n        HomeComponent,\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        AppRoutingModule,\n        ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production }),\n        HttpClientModule,\n        FormsModule,\n        ComposerModule,\n        SharedOverlaysModule,\n        SharedContentModule\n    ],\n    providers: [\n        { provide: MAT_LABEL_GLOBAL_OPTIONS, useValue: {float: 'nevet'} }\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","\nimport { Component, Output, EventEmitter, Inject, ViewChild, ElementRef } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { DialogEvent, HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { Building, BookingRuleDetails } from 'src/app/services/data/organisation/building.class';\n\n\nexport interface BookingRulesModalData {\n    building: Building;\n}\n\n@Component({\n    selector: 'booking-rules-modal',\n    templateUrl: './booking-rules-modal.template.html',\n    styleUrls: ['./booking-rules-modal.styles.scss'],\n})\nexport class BookingRulesModalComponent extends BaseDirective {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    @ViewChild('content', { static: true }) private _content_el: ElementRef<HTMLElement>;\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: BookingRulesModalData) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.timeout('scroll', () => {\n            this._content_el.nativeElement.scrollTop = 0;\n        }, 181);\n    }\n\n    /** Name of the set building */\n    public get location(): string {\n        const building: Building = this._data.building || {} as any;\n        return building.name || '';\n    }\n\n    /** Booking rule details */\n    public get rules(): string[] {\n        const building: Building = this._data.building || {} as any;\n        const details: BookingRuleDetails = building.booking_details || {} as any;\n        return details.rules || [] as any;\n    }\n\n    /** Booking rule details */\n    public get info(): string {\n        const building: Building = this._data.building || {} as any;\n        const details: BookingRuleDetails = building.booking_details || {} as any;\n        return details.info || '';\n    }\n\n    /** Booking map rule details */\n    public get map_rules(): string[] {\n        const building: Building = this._data.building || {} as any;\n        const details: BookingRuleDetails = building.booking_details || {} as any;\n        return details.map_rules || [] as any;\n    }\n\n    /** Other special booking rules */\n    public get other_rules(): { title: string, rules: string[] }[] {\n        const building: Building = this._data.building || {} as any;\n        const details: BookingRuleDetails = building.booking_details || {} as any;\n        const rules: HashMap = (details as any).other_rules || {};\n        return Object.keys(rules).reduce((a, v) => { a.push({ title: v, rules: rules[v] || [] }); return a; }, []);\n    }\n\n    public get contact(): string {\n        const building: Building = this._data.building || {} as any;\n        const details: BookingRuleDetails = building.booking_details || {} as any;\n        return details.contact || '';\n    }\n}\n","<mat-dialog-content #content>\n    <main>\n        <div class=\"header\">Booking in {{location}}</div>\n        <div class=\"info\">{{ info || 'You may request restricted rooms but they will need to be approved by an admin' }}</div>\n        <div class=\"rules\">\n            <ul>\n                <li *ngFor=\"let item of rules\">{{item}}</li>\n            </ul>\n            <ng-container *ngIf=\"other_rules\">\n                <ng-container *ngFor=\"let ruleset of other_rules\">\n                    {{ ruleset.title }}\n                    <ul>\n                        <li *ngFor=\"let item of ruleset.rules\">{{item}}</li>\n                    </ul>\n                </ng-container>\n            </ng-container>\n            <ng-container>\n                When booking from Maps:\n                <ul *ngIf=\"!map_rules || map_rules.length <= 0; else rules_list\">\n                    <li>Rooms showing yellow are restricted and must be requested</li>\n                    <li>Rooms showing green are available to book for one hour</li>\n                    <li>Rooms showing red are booked</li>\n                    <li>Rooms showing grey are not bookable but may be used if they are empty</li>\n                </ul>\n                <ng-template #rules_list>\n                    <ul>\n                        <li *ngFor=\"let item of map_rules\">{{item}}</li>\n                    </ul>\n                </ng-template>\n            </ng-container>\n        </div>\n        <div class=\"contact\" *ngIf=\"contact\">\n            For more info email:<br><a [href]=\"'mailto:' + contact + '?subject=' + location + ' Booking Rules'\">{{contact}}</a>\n        </div>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button mat-dialog-close>Ok</button>\n    </footer>\n</mat-dialog-actions>\n\n","import { Component, Output, EventEmitter, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { ApplicationIcon } from '../../shared/utilities/settings.interfaces';\nimport { DialogEvent } from '../../shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\nexport interface ConfirmModalData {\n    /** Title of the modal */\n    title: string;\n    /** Contents of the modal */\n    content: string;\n    /** Text displaed on the confirmation button */\n    action?: string;\n    /** Icon to display on the modal */\n    icon: ApplicationIcon;\n}\n\nexport const CONFIRM_METADATA = {\n    height: 'auto',\n    width: '24em',\n    maxHeight: 'calc(100vh - 2em)',\n    maxWidth: 'calc(100vw - 2em)'\n};\n\n@Component({\n    selector: 'confirm-modal',\n    templateUrl: './confirm-modal.component.html',\n    styleUrls: ['./confirm-modal.component.scss']\n})\nexport class ConfirmModalComponent extends BaseDirective {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Loading state */\n    public loading: string;\n\n    /** Title of the confirm modal */\n    public get title(): string {\n        return (this._data ? this._data.title : null) || 'Confirm';\n    }\n\n    /** Body of the confirm modal */\n    public get content(): string {\n        return (this._data ? this._data.content : null) || 'Are you sure?';\n    }\n\n    /** Display text on the confirm button */\n    public get action(): string {\n        return (this._data ? this._data.action : null) || 'Ok';\n    }\n\n    /** Display icon properties */\n    public get icon(): ApplicationIcon {\n        return (this._data ? this._data.icon : null) || null;\n    }\n\n    constructor(\n        private _dialog: MatDialogRef<ConfirmModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: ConfirmModalData\n    ) {\n        super();\n    }\n    /**\n     * User confirmation of the content of the modal\n     */\n    public accept() {\n        this.event.emit({ reason: 'done' });\n    }\n}\n","<header>\n    <h3 mat-dialog-title>{{ title || 'Confirm' }}</h3>\n</header>\n<mat-dialog-content>\n    <div class=\"body\" *ngIf=\"!loading; else load_state\">\n        <app-icon *ngIf=\"icon\" [icon]=\"icon\"></app-icon>\n        <div class=\"content\">\n            <p [innerHTML]=\"content || 'Are you sure?'\"></p>\n        </div>\n    </div>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading\">\n    <footer>\n        <button mat-button class=\"inverse\" mat-dialog-close i18n=\"Close confirm modal\">Cancel</button>\n        <button mat-button name=\"accept\" (tapped)=\"accept()\">{{ action || 'Ok' }}</button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </div>\n</ng-template>\n","import { Component, Input } from '@angular/core';\n\nimport { CateringOrder } from '../../../services/data/catering/catering-order.class';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\n\n@Component({\n    selector: 'meeting-details-catering',\n    templateUrl: './catering.component.html',\n    styleUrls: ['./catering.component.scss']\n})\nexport class MeetingDetailsCateringComponent {\n    /** List of catering orders */\n    @Input() public catering: CateringOrder[];\n    /** Active space to display */\n    @Input() public space: Space;\n    /** Active space to display */\n    @Input() public booking: Booking;\n    /** Whether all orders should be shown */\n    public show_orders: boolean;\n\n    /** List of orders for the active space */\n    public get orders(): CateringOrder[] {\n        return (this.catering || []).filter(order => order.location_id === this.space.id);\n    }\n\n    /** Charge code for orders in the active space */\n    public get notes(): string {\n        if (!this.booking) { return '<No notes>'; }\n        const note_list = this.booking.notes.filter(\n            note => note.type === 'catering' && note.space === this.space.id\n        );\n        return note_list.length > 0 ? note_list[0].message : '<No notes>';\n    }\n\n    /** Charge code for orders in the active space */\n    public get charge_code(): string {\n        return this.orders.length > 0 ? this.orders[0].charge_code || '<No charge code>' : '<No charge code>';\n    }\n}\n","<div class=\"catering-details\" *ngIf=\"catering && space\" [attr.space-id]=\"space.id\">\n    <div class=\"field multi\" name=\"orders\">\n        <label>Orders({{ orders.length || '0' }}):</label>\n        <div class=\"value\">\n            <div class=\"list\" [class.shown]=\"show_orders\">\n                <div\n                    class=\"list-item\"\n                    *ngFor=\"let order of orders\"\n                    [title]=\"\"\n                >\n                    <div class=\"name\">Deliver at {{ order.deliver_at_time }}</div>\n                    <div class=\"email\">{{ order.item_count }} item{{ order.item_count === 1 ? '' : 's' }}</div>\n                    <div class=\"details\">\n                        <div class=\"items\">\n                            <div class=\"item\" *ngFor=\"let item of order.items\">\n                                <div class=\"name\">{{ item.name }}</div>\n                                <div class=\"amount\">x{{ item.amount || '0' }}</div>\n                            </div>\n                        </div>\n                        <div class=\"total\"><span>Total:</span> {{ order.total / 100 | currency:order.symbol }}</div>\n                    </div>\n                </div>\n            </div>\n            <button\n                class=\"show\"\n                *ngIf=\"orders.length > 5\"\n                (touchrelease)=\"show_orders = !show_orders\"\n            >\n                {{ show_orders ? 'Hide' : 'Show' }} Orders\n            </button>\n        </div>\n    </div>\n    <div class=\"field\" name=\"requirements\">\n        <label>Requirements:</label>\n        <div class=\"value\">{{ notes }}</div>\n    </div>\n    <div class=\"field\" name=\"charge-code\">\n        <label>Charge Code:</label>\n        <div class=\"value\">{{ charge_code }}</div>\n    </div>\n</div>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { ViewRoomModalComponent } from '../../view-room-modal/view-room-modal.component';\nimport { RECURRENCE_PERIODS } from '../../../shared/utilities/formatting.utilities';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { DialogEvent, HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { humaniseDuration } from 'src/app/shared/utilities/general.utilities';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { UsersService } from 'src/app/services/data/users/users.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'meeting-details-display',\n    templateUrl: './display.component.html',\n    styleUrls: ['./display.component.scss']\n})\nexport class MeetingDetailsDisplayComponent extends BaseDirective {\n    @Input() event: Booking;\n    /** Emitter for events on the component */\n    @Output('event') on_event = new EventEmitter<DialogEvent>();\n    /** Toggle for activating checkin */\n    public checked_in: boolean;\n    /** Mapping of spaces to last checkin time */\n    public last_start: { [id: string]: number } = {};\n    /** Whether to show full locations list */\n    public show_locations: boolean;\n    /** Whether to show full attendee list */\n    public show_attendees: boolean;\n\n    /** Title of the displayed event */\n    public get title(): string {\n        if (!this.event) {\n            return '';\n        }\n        return this.event.title || '';\n    }\n\n    /** Display string of when the event will occur */\n    public get when(): string {\n        if (!this.event) {\n            return 'Unable to determine.';\n        }\n        const date = dayjs(this.event.date);\n        const end = date.add(this.event.duration || 60, 'm');\n        if (this.event.all_day || this.event.duration > 23 * 60) {\n            return `${date.format('DD MMM YYYY')} - All Day`;\n        } else {\n            if (date.isSame(end, 'd')) {\n                return `${date.format('DD MMM YYYY, h:mm A')} - ${end.format('h:mm A')}`;\n            } else {\n                return `${date.format('DD MMM YYYY, h:mm A')} - ${end.format(\n                    'DD MMM YYYY, h:mm A'\n                )}`;\n            }\n        }\n    }\n\n    /** Whether booking has catering */\n    public get has_catering(): boolean {\n        return this.event &&\n            this.event.catering &&\n            this.event.catering.length >= 0;\n    }\n\n    /** Display string for the event's duration */\n    public get duration(): string {\n        if (!this.event) {\n            return 'Unable to determine';\n        }\n        return humaniseDuration(this.event.duration || 60);\n    }\n\n    /** List of spaces associated with the event */\n    public get spaces(): Space[] {\n        if (!this.event) {\n            return [];\n        }\n        return this.event.space_list || (this.event.space ? [this.event.space] : []);\n    }\n\n    /** List of attendees associated with the event not including the host */\n    public get attendees(): User[] {\n        if (!this.event) {\n            return [];\n        }\n        return this.event.attendees.filter(i => i.email !== this.organiser.email) || [];\n    }\n\n    /** Host of the event */\n    public get organiser(): User {\n        if (!this.event) {\n            return this._users.current;\n        }\n        return this.event.organiser || this._users.current;\n    }\n\n    /** Reccurence Range */\n    public get recurrence_range(): string {\n        if (!this.event || !this.event.recurrence || !this.event.recurrence.period) {\n            return '';\n        }\n        const start = dayjs(this.event.recurrence.start).format('MMMM DD, YYYY');\n        const end = dayjs(this.event.recurrence.end).format('MMMM DD, YYYY');\n        return `${start} - ${end}`;\n    }\n\n    public get recurrence_period(): string {\n        if (!this.event || !this.event.recurrence) {\n            return '';\n        }\n        return RECURRENCE_PERIODS[this.event.recurrence.period];\n    }\n\n    /** Whether the user is allowed to edit the event */\n    public get can_edit(): boolean {\n        const organiser = this.organiser;\n        const user = this._users.current;\n        return organiser.email === user.email && this.status !== 'done';\n    }\n\n    /** Details about the event */\n    public get notes(): string {\n        if (!this.event) {\n            return '';\n        }\n        return this.event.description || '';\n    }\n\n    /** Status of the event */\n    public get status(): 'future' | 'upcoming' | 'done' | 'started' | 'in_progress' {\n        if (this.event) {\n            const now = dayjs();\n            const date = dayjs(this.event.date);\n            if (now.isBefore(date.subtract(15, 'm'), 'm')) {\n                return 'future';\n            } else if (now.isBefore(date, 'm')) {\n                return 'upcoming';\n            } else if (now.isBefore(date.add(15, 'm'), 'm')) {\n                return 'started';\n            } else if (now.isBefore(date.add(this.event.duration, 'm'), 'm')) {\n                return 'in_progress';\n            }\n        }\n        return 'done';\n    }\n\n    /** Mapping of attendees and spaces to acceptance status */\n    public get status_map(): HashMap<'accepted' | 'tentative' | 'declined'> {\n        const attendee_statuses: HashMap<'accepted' | 'tentative' | 'declined'> = {};\n        for (const email in this.event.approval_status) {\n            if (email) {\n                switch (this.event.approval_status[email]) {\n                    case 'declined':\n                        attendee_statuses[email] = 'declined';\n                        break;\n                    case 'accepted':\n                        attendee_statuses[email] = 'accepted';\n                        break;\n                    default:\n                        attendee_statuses[email] = 'tentative';\n                        break;\n                }\n            }\n        }\n        return attendee_statuses;\n    }\n\n    /** Whether the user has checkin to all the spaces in the event */\n    public get is_checked_in(): boolean {\n        return this.spaces.reduce(\n            (a, v) => a && this.event.date <= (this.last_start[v.id] || 0),\n            true\n        );\n    }\n\n    /** Whether the spaces can be controlled */\n    public get can_control(): boolean {\n        return this.spaces.length > 0 && this.status !== 'future' && this.status !== 'done';\n    }\n\n    /** Whether the user is able to checkin to the event */\n    public get can_checkin(): boolean {\n        return this.spaces.length > 0 && (this.status === 'upcoming' || this.status === 'started');\n    }\n\n    constructor(private _spaces: SpacesService, private _users: UsersService, private _dialog: MatDialog) {\n        super();\n    }\n\n    /**\n     * Open the modal to show the location of a space\n     * @param space Space to show the location\n     */\n    public locate(space: Space) {\n        if (space) {\n            const the_space = this._spaces.find(space.id) || space;\n            this._dialog.open(ViewRoomModalComponent, {\n                width: '32em',\n                maxWidth: '95vw',\n                maxHeight: '95vh',\n                data: { space: the_space }\n            });\n        }\n    }\n}\n","<div class=\"event-details\">\n    <div class=\"field\" name=\"title\">\n        <label>Title:</label>\n        <div class=\"value\">{{ title }}</div>\n    </div>\n    <div class=\"field\" name=\"when\">\n        <label>When:</label>\n        <div class=\"value\">{{ when }}</div>\n    </div>\n    <div class=\"field\" *ngIf=\"recurrence_range\" name=\"recurrence\">\n        <label>Reccurrence:</label>\n        <div class=\"value\">\n            <div>{{ recurrence_range }}</div>\n            <div class=\"period\">{{ recurrence_period }}</div>\n        </div>\n    </div>\n    <div class=\"field\" name=\"duration\">\n        <label>Duration:</label>\n        <div class=\"value\">{{ duration }}</div>\n    </div>\n    <div class=\"field multi\" name=\"location\">\n        <label>Locations({{ spaces.length || '0' }}):</label>\n        <div class=\"value\">\n            <div class=\"list\" [class.shown]=\"show_locations\">\n                <div\n                    class=\"list-item\"\n                    *ngFor=\"let item of spaces\"\n                    [title]=\"item?.name + ' - ' + (status_map[item?.email] || 'Approved')\"\n                >\n                    <div [class]=\"'status ' + status_map[item?.email]\">\n                        <div class=\"text\">{{ status_map[item?.email] }}</div>\n                    </div>\n                    <div class=\"text\">{{ item?.name }}</div>\n                    <button class=\"show\" *ngIf=\"item?.map_id\" (touchrelease)=\"locate(item)\">\n                        Map\n                    </button>\n                </div>\n                <div class=\"list-item\" *ngIf=\"!spaces.length\">No Location</div>\n            </div>\n            <button\n                class=\"show\"\n                *ngIf=\"spaces.length > 5\"\n                (touchrelease)=\"show_locations = !show_locations\"\n            >\n                {{ show_locations ? 'Hide' : 'Show' }} Locations\n            </button>\n        </div>\n    </div>\n    <div class=\"field\" name=\"host\">\n        <label>Host:</label>\n        <div class=\"value\">{{ organiser.name }}</div>\n    </div>\n    <div class=\"field multi\" name=\"attendees\">\n        <label>Attendees({{ attendees.length || '0' }}):</label>\n        <div class=\"value\">\n            <div class=\"list\" [class.shown]=\"show_attendees\">\n                <div\n                    class=\"list-item\"\n                    *ngFor=\"let item of attendees\"\n                    [title]=\"\n                        item?.name +\n                        ' - ' +\n                        (status_map[item?.email] || 'Accepted') +\n                        (item?.email ? '\\n' + item.email : '')\n                    \"\n                >\n                    <div [class]=\"'status ' + status_map[item?.email]\">\n                        <div class=\"text\">{{ status_map[item?.email] }}</div>\n                    </div>\n                    <div class=\"text\">\n                        <div class=\"name\">{{ item.name }}</div>\n                        <div class=\"email\" *ngIf=\"item.email\">\n                            <a [href]=\"'mailto:' + item.email + '?subject=' + event.title\">{{\n                                item.email\n                            }}</a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <button\n                class=\"show\"\n                *ngIf=\"attendees.length > 5\"\n                (touchrelease)=\"show_attendees = !show_attendees\"\n            >\n                {{ show_attendees ? 'Hide' : 'Show' }} Attendees\n            </button>\n        </div>\n    </div>\n    <div class=\"field\" name=\"notes\">\n        <label>Notes:</label>\n        <div class=\"value\" [innerHTML]=\"notes\"></div>\n    </div>\n    <div class=\"field\" *ngIf=\"has_catering\" name=\"catering\">\n        <label>Catered:</label>\n        <div class=\"value\">{{ event.catering.length ? 'Yes' : 'No' }}</div>\n    </div>\n</div>\n","import { Component, OnDestroy, Output, EventEmitter, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { ConfirmModalComponent, ConfirmModalData, CONFIRM_METADATA } from '../confirm-modal/confirm-modal.component';\nimport { TimeExtensionModalComponent } from '../time-extension/time-extension.component';\nimport { RequirementDetailsModalComponent, RequirementDetailsModalData } from 'src/app/shell/bookings/overlays/requirement-details-modal/requirement-details-modal.component';\nimport { generateBookingForm } from 'src/app/services/data/bookings/booking.utilities';\n\nimport * as dayjs from 'dayjs';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\nexport interface MeetingDetailsModalData {\n    /** Meeting to display on the modal */\n    booking: Booking;\n    /** Whether local user is able act on behalf of the host */\n    as_delegate: boolean;\n    /** Email address of the associated delegate */\n    delegate: string;\n    /** Whether booking is the first in the list */\n    is_first: boolean;\n    /** Whether booking is the last in the list */\n    is_last: boolean;\n}\n\n/*istanbul ignore next */\n@Component({\n    selector: 'meeting-details-overlay',\n    templateUrl: './meeting-details-overlay.template.html',\n    styleUrls: ['./meeting-details-overlay.styles.scss']\n})\nexport class MeetingDetailsOverlayComponent extends BaseDirective implements OnDestroy {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Display string of the loading state of the meeting */\n    public loading: string;\n    /** Whether booking is being edited */\n    public edit: boolean;\n\n    /** Active booking to display */\n    public get booking(): Booking {\n        return this._data.booking;\n    }\n\n    /** Whether booking is the first in the list */\n    public get is_last(): boolean {\n        return this._data.is_last;\n    }\n\n    /** Whether booking is the last in the list */\n    public get is_first(): boolean {\n        return this._data.is_first;\n    }\n\n    /** List of spaces associated with the event */\n    public get space_list(): Space[] {\n        return this.booking.space_list || (this.booking.space ? [this.booking.space] : []);\n    }\n\n    public get has_recurrence(): boolean {\n        return !!(this.booking.recurrence && this.booking.recurrence.period);\n    }\n\n    /** Whether booking is in progress */\n    public get in_progress(): boolean {\n        if (!this.booking) {\n            return false;\n        }\n        const now = dayjs();\n        const start = dayjs(this.booking.date);\n        const end = start.add(this.booking.duration, 'm');\n        return now.isAfter(start, 's') && now.isBefore(end, 'm');\n    }\n\n    /** Whether booking has ended */\n    public get has_ended(): boolean {\n        if (!this.booking) {\n            return false;\n        }\n        const now = dayjs();\n        const start = dayjs(this.booking.date);\n        const end = start.add(this.booking.duration, 'm');\n        return now.isAfter(end, 's');\n    }\n\n    /** Whether booking has a space associated with it */\n    public get has_space(): boolean {\n        if (!this.space_list || !this.space_list.length) {\n            return false;\n        }\n        for (const space of this.space_list) {\n            if (space) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _dialog_ref: MatDialogRef<MeetingDetailsOverlayComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: MeetingDetailsModalData,\n        private _service: ApplicationService,\n        private _bookings: BookingsService,\n        private _users: UsersService,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    /**\n     * Show the next meeting in the list\n     */\n    public nextBooking() {\n        this.event.emit({ reason: 'action', metadata: 'next' });\n    }\n\n    /** Show the previous meeting in the list */\n    public previousBooking() {\n        this.event.emit({ reason: 'action', metadata: 'previous' });\n    }\n\n    /** Open confirmation modal for deleting the meeting */\n    public confirmDeleteMeeting(): void {\n        const ref = this._dialog.open<ConfirmModalComponent, ConfirmModalData>(\n            ConfirmModalComponent,\n            {\n                ...CONFIRM_METADATA,\n                data: {\n                    title: 'Delete meeting',\n                    icon: { type: 'icon', class: 'material-icons', content: 'delete' },\n                    content: `\n                        <p>Are you sure you want to delete this meeting on ${\n                            this.booking.date_string\n                        }${this.booking.recurrence ? ' from your series' : ''}?</p>\n                        <p>All attendees will be notified.</p>\n                    `\n                }\n            }\n        );\n        this.subscription(\n            'confirm',\n            ref.componentInstance.event.subscribe(event => {\n                if (event.reason === 'done') {\n                    this.deleteMeeting();\n                    ref.close();\n                    this.unsub('confirm');\n                }\n            })\n        );\n    }\n\n    /** Open confirmation modal for deleting the series of bookings */\n    public confirmDeleteSeries(): void {\n        if (!this.booking.recurrence) {\n            return;\n        }\n        const ref = this._dialog.open<ConfirmModalComponent, ConfirmModalData>(\n            ConfirmModalComponent,\n            {\n                ...CONFIRM_METADATA,\n                data: {\n                    title: 'Delete series',\n                    icon: { type: 'icon', class: 'material-icons', content: 'delete' },\n                    content: `\n                        <p>All bookings in the series will be deleted. Are you sure you want to delete the series?</p>\n                        <p>All attendees will be notified.</p>\n                    `\n                }\n            }\n        );\n        this.subscription(\n            'confirm',\n            ref.componentInstance.event.subscribe(event => {\n                if (event.reason === 'done') {\n                    this.deleteSeries();\n                    ref.close();\n                    this.unsub('confirm');\n                }\n            })\n        );\n    }\n\n    /** Navigate the booking with the details of the current booking set */\n    public duplicateMeeting(): void {\n        const new_booking = this.booking.duplicate();\n        this._router.navigate(['/book']);\n        if (localStorage) {\n            localStorage.setItem('ACA_STAFF.booking_form_data', JSON.stringify(new_booking));\n        }\n        this._dialog_ref.close();\n    }\n\n    /** Open modal to extend the length of the meeting */\n    public extendMeeting() {\n        this.loading = 'Extending meeting...';\n        const ref = this._dialog.open(TimeExtensionModalComponent, {\n            ...CONFIRM_METADATA,\n            data: { booking: this.booking }\n        });\n        ref.afterClosed().subscribe(() => (this.loading = null));\n    }\n\n    public editMeetingRequirements() {\n        const form = generateBookingForm(this.booking, this._users.current, ['space_list', 'notes', 'equipment_codes', 'expected_attendees'] as any);\n        const ref = this._dialog.open<\n            RequirementDetailsModalComponent,\n            RequirementDetailsModalData\n        >(RequirementDetailsModalComponent, {\n            maxWidth: '95vw',\n            width: '32em',\n            data: {\n                spaces: form.controls.space_list.value,\n                notes_field: form.controls.notes,\n                codes_field: form.controls.equipment_codes,\n                head_counts_field: form.controls.expected_attendees\n            }\n        });\n        this.subscription(\n            'modal_events',\n            ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                if (event.reason === 'done') {\n                    this.loading = 'Updating space requirements...';\n                    this.booking.save().then((new_booking: Booking) => {\n                        this._data.booking = new_booking;\n                        this.loading = null;\n                    }, (err) => {\n                        this.loading = null;\n                        this._service.notifyError(`Error updating space requirements. Error: ${err.message || err}`);\n                    });\n                    ref.close();\n                }\n            })\n        );\n        ref.afterClosed().subscribe(() => this.unsub('modal_events'));\n    }\n\n    /**\n     * Open booking form to catering section\n     */\n    public editMeetingCatering() {\n        this.editMeeting(false);\n        this._router.navigate(['/book', 'space', 'catering']);\n        this._dialog_ref.close();\n    }\n\n    /**\n     * Open booking form to edit details\n     */\n    public editMeeting(navigate: boolean = true) {\n        if (localStorage) {\n            localStorage.setItem('ACA_STAFF.booking_form_data', JSON.stringify(this.booking));\n        }\n        if (navigate) {\n            this._router.navigate(['/book']);\n            this._dialog_ref.close();\n        }\n    }\n\n    /** Delete the meeting */\n    private deleteMeeting() {\n        this.loading = 'Deleting meeting...';\n        this._bookings.delete(this.booking.id).then(\n            () => {\n                this._service.notifySuccess('Successfully deleted meeting.');\n                this.loading = null;\n                this._dialog_ref.close();\n            },\n            err => {\n                this.loading = null;\n                this._service.notifyError(`Error deleting meeting. Error: ${err.message || err}`);\n            }\n        );\n    }\n\n    /** Delete series */\n    private deleteSeries() {\n        this.loading = 'Deleting series...';\n        this._bookings.delete(this.booking.recurrence.series_id).then(\n            () => {\n                this._service.notifySuccess('Successfully deleted series.');\n                this.loading = null;\n                this._dialog_ref.close();\n            },\n            err => {\n                this.loading = null;\n                this._service.notifyError(`Error deleting series. Error: ${err.message || err}`);\n            }\n        );\n    }\n}\n","<header class=\"custom\">\n    <div class=\"details\">\n        <!-- <button mat-icon-button [disabled]=\"is_first\" (touchrelease)=\"previousBooking()\">\n            <app-icon\n                [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_left' }\"\n            ></app-icon>\n        </button> -->\n        <div class=\"text\">{{ booking?.title || '&lt;No Title&gt;' }}</div>\n        <!-- <button mat-icon-button [disabled]=\"is_last\" (touchrelease)=\"nextBooking()\">\n            <app-icon\n                [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_right' }\"\n            ></app-icon>\n        </button> -->\n        <button mat-icon-button mat-dialog-close class=\"fixed\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </button>\n    </div>\n    <div class=\"actions\">\n        <button mat-button *ngIf=\"!has_ended\" (touchrelease)=\"confirmDeleteMeeting()\">\n            <div class=\"flex\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'delete' }\"></app-icon>\n                <div class=\"text\">Delete <span *ngIf=\"has_recurrence\">Occurrence</span></div>\n            </div>\n        </button>\n        <button mat-button *ngIf=\"has_recurrence\" (touchrelease)=\"confirmDeleteSeries()\">\n            <div class=\"flex\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'delete' }\"></app-icon>\n                <div class=\"text\">Delete Series</div>\n            </div>\n        </button>\n        <button mat-button (touchrelease)=\"duplicateMeeting()\">\n            <div class=\"flex\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'add' }\"></app-icon>\n                <div class=\"text\">Duplicate</div>\n            </div>\n        </button>\n        <button mat-button *ngIf=\"in_progress && has_space\" (touchrelease)=\"extendMeeting()\">\n            <div class=\"flex\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'timelapse' }\"></app-icon>\n                <div class=\"text\">Extend</div>\n            </div>\n        </button>\n    </div>\n</header>\n<mat-dialog-content>\n    <main class=\"custom\" *ngIf=\"!loading; else load_state\">\n        <ng-container *ngIf=\"!edit; else edit_form\">\n            <div class=\"card\">\n                <div class=\"header\">Event Details</div>\n                <meeting-details-display [event]=\"booking\"></meeting-details-display>\n                <div class=\"flex\" *ngIf=\"!has_ended && !in_progress\">\n                    <button mat-button (touchrelease)=\"editMeeting()\">Edit</button>\n                </div>\n            </div>\n            <ng-container *ngFor=\"let space of space_list\">\n                <div class=\"card\" *ngIf=\"space && space.id\">\n                    <div class=\"header\">Space Details</div>\n                    <meeting-details-space\n                        [booking]=\"booking\"\n                        [space]=\"space\"\n                    ></meeting-details-space>\n                    <div class=\"flex\" *ngIf=\"!has_ended\">\n                        <button mat-button (touchrelease)=\"editMeetingRequirements()\">\n                            Edit Room Requirements\n                        </button>\n                    </div>\n                    <div class=\"header\">Catering Details</div>\n                    <meeting-details-catering\n                        [catering]=\"booking.catering\"\n                        [space]=\"space\"\n                    ></meeting-details-catering>\n                    <div class=\"flex\">\n                        <button mat-button *ngIf=\"!has_ended\" (touchrelease)=\"editMeetingCatering()\">\n                            Edit Catering Orders\n                        </button>\n                    </div>\n                </div>\n            </ng-container>\n        </ng-container>\n    </main>\n</mat-dialog-content>\n<ng-template #edit_form>\n    <meeting-details-form></meeting-details-form>\n</ng-template>\n<ng-template #load_state>\n    <main class=\"custom\">\n        <div class=\"no-item\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </main>\n</ng-template>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { Space } from 'src/app/services/data/spaces/space.class';\n\n\n@Component({\n    selector: 'meeting-details-space',\n    templateUrl: './space.component.html',\n    styleUrls: ['./space.component.scss']\n})\nexport class MeetingDetailsSpaceComponent {\n    /** Active Space to display details for */\n    @Input() space: Space;\n    /** Booking associated with the space */\n    @Input() booking: Booking;\n\n    /** Latest equipment requirement notes for the active space */\n    public get notes(): string {\n        const space_notes = (this.booking.notes || []).filter(note => note.space === this.space.id);\n        return space_notes.length ? space_notes[space_notes.length - 1].message : '<No requirements>';\n    }\n\n    /** Latest equipment charge code for the active space */\n    public get charge_code(): string {\n        return (this.booking.equipment_codes || {})[this.space.id] || '<No charge code>';\n    }\n\n    /** Expected number of attendees for the active space */\n    public get expected_attendees(): number {\n        return (this.booking.expected_attendees || {})[this.space.id] || 0;\n    }\n}\n","<div class=\"space-details\" *ngIf=\"space\" [attr.space-id]=\"space.id\">\n    <div class=\"field\" name=\"space-name\">\n        <label>Space:</label>\n        <div class=\"value\">{{ space.name }}</div>\n    </div>\n    <div class=\"field\" name=\"requirements\">\n        <label>Requirements (Private Notes):</label>\n        <div class=\"value\">{{ notes }}</div>\n    </div>\n    <div class=\"field\" name=\"charge-code\">\n        <label>Charge Code:</label>\n        <div class=\"value\">{{ charge_code }}</div>\n    </div>\n    <div class=\"field\" name=\"expected-attendees\">\n        <label>Expected Attendees:</label>\n        <div class=\"value\">{{ expected_attendees }}</div>\n    </div>\n</div>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormGroup } from '@angular/forms';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { generateUserForm } from 'src/app/services/data/users/user.utilities';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { DialogEvent } from '../../shared/utilities/types.utilities';\n\n@Component({\n  selector: 'new-user-modal',\n  templateUrl: './new-user-modal.component.html',\n  styleUrls: ['./new-user-modal.component.scss']\n})\nexport class NewUserModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for the new user */\n    public form: FormGroup;\n    /** New user data store */\n    public user: User;\n    /** Whether user details are being saved */\n    public loading: boolean;\n\n    constructor(\n        private _dialog: MatDialogRef<NewUserModalComponent>,\n        private _service: ApplicationService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.user = new User();\n        this.form = generateUserForm(this.user);\n    }\n\n    public saveChanges() {\n        this.form.markAllAsTouched();\n        if (this.form.valid) {\n            const new_user = new User({\n                ...this.form.value,\n                name: `${this.form.value.first_name} ${this.form.value.last_name}`,\n                type: 'external'\n            });\n            this.user.changeEvents.next({ type: 'item_saved', metadata: new_user });\n            this.event.emit({ reason: 'done', metadata: new_user });\n        }\n    }\n\n}\n","<header>\n    <h3 mat-dialog-title>Add External Attendee</h3>\n    <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<div class=\"body\" *ngIf=\"!loading; else load_state\">\n    <user-form [form]=\"form\"></user-form>\n</div>\n<footer *ngIf=\"!loading\">\n    <button mat-button class=\"inverse\" mat-dialog-close>Cancel</button>\n    <button mat-button (tapped)=\"saveChanges()\">Save</button>\n</footer>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">\n                Saving attendee...\n            </div>\n        </div>\n    </div>\n</ng-template>\n\n","\nimport { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { SharedContentModule } from '../shared/shared.module';\n\nimport { ConfirmModalComponent } from './confirm-modal/confirm-modal.component';\nimport { ViewRoomModalComponent } from './view-room-modal/view-room-modal.component';\nimport { NewUserModalComponent } from './new-user-modal/new-user-modal.component';\nimport { BookingRulesModalComponent } from './booking-rules-modal/booking-rules-modal.component';\n\nimport { BookingConfirmComponent } from '../shell/bookings/overlays/booking-confirm/booking-confirm.component';\nimport { MeetingDetailsOverlayComponent } from './meeting-details-overlay/meeting-details-overlay.component';\nimport { MeetingDetailsCateringComponent } from './meeting-details-overlay/catering/catering.component';\nimport { MeetingDetailsDisplayComponent } from './meeting-details-overlay/display/display.component';\nimport { MeetingDetailsSpaceComponent } from './meeting-details-overlay/space/space.component';\nimport { TimeExtensionModalComponent } from './time-extension/time-extension.component';\nimport { SpaceSelectModalComponent } from './space-select-modal/space-select-modal.component';\nimport { RecurrenceModalComponent } from './recurrence-modal/recurrence-modal.component';\n\nconst OVERLAYS: Type<any>[] = [\n    ConfirmModalComponent,\n    ViewRoomModalComponent,\n    BookingConfirmComponent,\n    NewUserModalComponent,\n    BookingRulesModalComponent,\n    MeetingDetailsOverlayComponent,\n    TimeExtensionModalComponent,\n    RecurrenceModalComponent\n];\n\n@NgModule({\n    declarations: [\n        ...OVERLAYS,\n        MeetingDetailsCateringComponent,\n        MeetingDetailsDisplayComponent,\n        MeetingDetailsSpaceComponent,\n        SpaceSelectModalComponent\n    ],\n    imports: [\n        CommonModule,\n        SharedContentModule,\n        FormsModule,\n        ReactiveFormsModule,\n    ],\n    exports: [\n        ...OVERLAYS\n    ]\n})\nexport class SharedOverlaysModule {}\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, Identity } from '../../shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { BookingRecurrenceDetails } from 'src/app/services/data/bookings/booking.interfaces';\n\nexport interface RecurrenceModalData {\n    /** Current recurrence details */\n    details: BookingRecurrenceDetails;\n    /** Currently set date for the booking */\n    date: number;\n}\n\nexport const RECURRENCE_METADATA = {\n    height: 'auto',\n    width: '24em',\n    maxHeight: 'calc(100vh - 2em)',\n    maxWidth: 'calc(100vw - 2em)'\n};\n\n@Component({\n    selector: 'recurrence-modal',\n    templateUrl: './recurrence-modal.component.html',\n    styleUrls: ['./recurrence-modal.component.scss']\n})\nexport class RecurrenceModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for recurrence */\n    public form: FormGroup;\n    /** Loading state */\n    public loading: string;\n    /** Available recurrence periods */\n    public periods: Identity[] = [\n        { id: 'None', name: 'None' },\n        { id: 'Daily', name: 'Daily' },\n        { id: 'Weekly', name: 'Weekly' },\n        { id: 'Biweekly', name: 'Biweekly' },\n        { id: 'Monthly', name: 'Monthly' },\n    ];\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: RecurrenceModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.form = new FormGroup({\n            period: new FormControl(this._data.details.period || 'none'),\n            end: new FormControl(this._data.details.end || this._data.date, [Validators.required]),\n        });\n    }\n\n    /**\n     * User confirmation of the content of the modal\n     */\n    public save() {\n        this.form.markAllAsTouched();\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            this.loading = 'Adding recurrence data to booking...';\n            this.event.emit({ reason: 'done', metadata: { ...this._data.details, ...this.form.value } });\n        }\n    }\n}\n","<header>\n    <div class=\"heading\" mat-dialog-title>Booking Recurrence</div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main *ngIf=\"!loading; else load_state\">\n        <form *ngIf=\"form\" [formGroup]=\"form\">\n            <div class=\"field\" *ngIf=\"form.controls.period && periods.length > 1\">\n                <label for=\"period\">Period: </label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select name=\"period\" formControlName=\"period\" placeholder=\"None\">\n                        <mat-option *ngFor=\"let type of periods\" [value]=\"type.id\">\n                            {{ type.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.end\">\n                <label\n                    for=\"end\"\n                    [class.error]=\"form.controls.end.errors && form.controls.end.touched\"\n                >\n                    End Date<span>*</span>:\n                </label>\n                <a-date-field name=\"end\" formControlName=\"end\"></a-date-field>\n                <div\n                    class=\"error-message\"\n                    *ngIf=\"form.controls.end.errors && form.controls.end.touched\"\n                >\n                    End date needs to be in the future\n                </div>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading\">\n    <footer>\n        <button mat-button (tapped)=\"save()\">Add to Booking</button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Observable, Subject, of } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, switchMap, catchError, map } from 'rxjs/operators';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { Space, SpaceBookingRuleOptions } from 'src/app/services/data/spaces/space.class';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { Identity, HashMap, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nexport interface SpaceSelectModalData {\n    /** List of selected spaces */\n    spaces: Space[];\n    /** Start time for availability of spaces */\n    date: number;\n    /** Duration of the availability block to look for */\n    duration: number;\n    /** Host of the booking being made */\n    host: User;\n    /** Whether multiple spaces can be selected */\n    multiple: boolean;\n    /** Force zone ids */\n    zone_ids?: string;\n}\n\n@Component({\n    selector: 'a-space-select-modal',\n    templateUrl: './space-select-modal.component.html',\n    styleUrls: ['./space-select-modal.component.scss']\n})\nexport class SpaceSelectModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether space list is being loaded */\n    public loading: boolean;\n    /** List of available spaces to select from */\n    public spaces: Space[] = [];\n    /** Active building to filter spaces on */\n    public active_building: Building;\n    /** Active building to filter spaces on */\n    public active_type: Identity;\n    /** List of items from an API search */\n    public search_results$: Observable<Space[]>;\n    /** Subject holding the value of the search */\n    public readonly search$ = new Subject<string>();\n    /** List of currently selected spaces */\n    public selected_spaces: Space[] = [];\n    /** Mapping as to whether a space is by request */\n    public request_map: HashMap<boolean> = {};\n    /** Whether selected list should be shown on mobile */\n    public show_list: boolean;\n\n    /** List of available buildings */\n    public types: Identity[] = []\n\n    /** List of available buildings */\n    public get buildings(): Building[] {\n        return this._org.buildings;\n    }\n\n    /** Whether multiple spaces can be selected */\n    public get multiple(): boolean {\n        return !!this._data.multiple;\n    }\n\n    public get has_zone(): boolean {\n        return !!this._data.zone_ids;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        @Inject(MAT_DIALOG_DATA) private _data: SpaceSelectModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.selected_spaces = [].concat(this._data.spaces || []);\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(400),\n            distinctUntilChanged(),\n            switchMap(_ => {\n                this.loading = true;\n                const zone_ids: string[] = [];\n                /* istanbul ignore else */\n                if (this.active_building) {\n                    zone_ids.push(this.active_building.id);\n                }\n                /* istanbul ignore else */\n                if (this.active_type) {\n                    zone_ids.push(`${this.active_type.id}`);\n                }\n                return this._spaces.available({\n                    zone_ids: this._data.zone_ids || zone_ids.join(','),\n                    date: this._data.date,\n                    duration: this._data.duration\n                });\n            }),\n            catchError(_ => of([])),\n            map((list: Space[]) => {\n                this.loading = false;\n                const selected = this.selected_spaces;\n                return list.filter((item: any) => !selected.find(space => space.id === item.id));\n            })\n        );\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe(list => {\n                this.spaces = list;\n                this.spaces.sort((a, b) => this.sort(a, b));\n                this.update();\n            })\n        );\n        this.active_building = this._org.building;\n        this.types = [{ id: '', name: 'Any Space Type' } as any].concat(\n            this._org.space_types || []\n        );\n        this.active_type = this.types[0];\n        this.search$.next('');\n    }\n\n    /** Add space to selected list */\n    public addSpace(space: Space) {\n        this.selected_spaces.push(space);\n        this.selected_spaces = unique(this.selected_spaces, 'id');\n    }\n\n    /** Remove space from selected list */\n    public removeSpace(space: Space) {\n        this.selected_spaces = this.selected_spaces.filter(a_space => a_space.id !== space.id);\n    }\n\n    /** Emit current state of the selected list */\n    public save(list: Space[]) {\n        this.event.emit({ reason: 'done', metadata: list });\n    }\n\n    private update() {\n        const map = {};\n        const options: SpaceBookingRuleOptions = {\n            date: this._data.date,\n            duration: this._data.duration,\n            host: this._data.host\n        };\n        this.selected_spaces.forEach(space => (map[space.id] = space.byRequest(options)));\n        this.spaces.forEach(space => (map[space.id] = space.byRequest(options)));\n        this.request_map = map;\n    }\n\n    /**\n     * Compare two spaces to determine order\n     * @param space_a\n     * @param space_b\n     */\n    private sort(space_a: Space, space_b: Space) {\n        const bld = this._org.buildings.find(bld => bld.id === space_a.level.building_id);\n        const bld_b = this._org.buildings.find(bld => bld.id === space_b.level.building_id);\n        if (bld) {\n            if (bld !== bld_b) {\n                return (bld.name || '').localeCompare(bld_b.name || '');\n            }\n            const sort_order = (bld.sort_order ? [...bld.sort_order] : []).reverse();\n            for (const zone_id of sort_order) {\n                if (zone_id === '*') { continue; }\n                const a_has_zone = space_a.zones.indexOf(zone_id) >= 0;\n                const b_has_zone = space_b.zones.indexOf(zone_id) >= 0;\n                if (a_has_zone && !b_has_zone) {\n                    return 1;\n                } else if (b_has_zone && !a_has_zone) {\n                    return -1;\n                }\n            }\n        }\n        return (space_a.name || '').localeCompare(space_b.name || '');\n    }\n}\n","<header>\n    <div class=\"heading\">Select meeting space{{ multiple ? 's' : '' }}</div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main>\n        <div class=\"block available\">\n            <ng-container *ngIf=\"!has_zone\">\n                <mat-form-field appearance=\"outline\" *ngIf=\"buildings && buildings.length > 1\">\n                    <mat-select\n                        #select\n                        [(value)]=\"active_building\"\n                        (valueChange)=\"search$.next(active_building.id + '|' + active_type.id)\"\n                    >\n                        <mat-option *ngFor=\"let building of buildings\" [value]=\"building\">\n                            {{ building.code }} - {{ building.name\n                            }}{{ building.address ? ', ' + building.address : '' }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\" *ngIf=\"types && types.length > 1\">\n                    <mat-select\n                        #select\n                        [(value)]=\"active_type\"\n                        (valueChange)=\"search$.next(active_building.id + '|' + active_type.id)\"\n                    >\n                        <mat-option *ngFor=\"let type of types\" [value]=\"type\">\n                            {{ type?.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </ng-container>\n            <div class=\"list\">\n                <ng-container *ngIf=\"!loading; else load_state\">\n                    <ng-container *ngIf=\"spaces && spaces.length; else empty_state\">\n                        <div class=\"item\" *ngFor=\"let space of spaces\">\n                            <div class=\"details\">\n                                <div class=\"name\">{{ space.name }}</div>\n                                <div class=\"info\">{{ space.level.name }}</div>\n                            </div>\n                            <div class=\"capacity\">\n                                <app-icon\n                                    [icon]=\"{ type: 'icon', class: 'material-icons', content: 'account_circle' }\"\n                                ></app-icon>\n                                <div class=\"text\">{{ space.capacity || '0' }}</div>\n                            </div>\n                            <div class=\"actions\">\n                                <button\n                                    [class.request]=\"request_map[space.id]\"\n                                    mat-button\n                                    (tapped)=\"multiple ? addSpace(space) : save([space])\"\n                                >\n                                    Select\n                                </button>\n                            </div>\n                        </div>\n                    </ng-container>\n                </ng-container>\n            </div>\n        </div>\n        <div class=\"block selected\" *ngIf=\"multiple\" [class.show]=\"show_list\">\n            <h3>Selected spaces</h3>\n            <div class=\"list\">\n                <ng-container\n                    *ngIf=\"selected_spaces && selected_spaces.length; else empty_select_state\"\n                >\n                    <div class=\"item\" *ngFor=\"let space of selected_spaces\">\n                        <div\n                            class=\"icon\"\n                            [class.request]=\"request_map[space.id]\"\n                            [matTooltip]=\"\n                                request_map[space.id]\n                                    ? 'Bookings in this space need to be approved by a member of the concierge team'\n                                    : ''\n                            \"\n                        >\n                            <app-icon\n                                [icon]=\"{\n                                    class: 'material-icons',\n                                    content: request_map[space.id] ? 'warning' : 'done'\n                                }\"\n                            ></app-icon>\n                        </div>\n                        <div class=\"details\">\n                            <div class=\"name\">{{ space.name }}</div>\n                            <div class=\"info\">{{ space.level.name }}</div>\n                        </div>\n                        <div class=\"capacity\">\n                            <app-icon\n                                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'account_circle' }\"\n                            ></app-icon>\n                            <div class=\"text\">{{ space.capacity || '0' }}</div>\n                        </div>\n                        <div class=\"actions\">\n                            <button mat-icon-button (tapped)=\"removeSpace(space)\">\n                                <app-icon\n                                    [icon]=\"{ class: 'material-icons', content: 'close' }\"\n                                ></app-icon>\n                            </button>\n                        </div>\n                    </div>\n                </ng-container>\n            </div>\n            <footer>\n                <button mat-button (tapped)=\"save(this.selected_spaces)\">Add to booking</button>\n            </footer>\n            <button mat-icon-button [class.close]=\"true\" [class.mobile-only]=\"true\" (tapped)=\"show_list = false\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n            </button>\n            <div class=\"tag mobile-only\">\n                <button mat-icon-button (tapped)=\"show_list = true\">\n                    <app-icon [icon]=\"{ class: 'material-icons', content: 'list' }\"></app-icon>\n                </button>\n            </div>\n        </div>\n    </main>\n</mat-dialog-content>\n<ng-template #load_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <mat-spinner diameter=\"48\"></mat-spinner>\n        </div>\n        <div class=\"text\">Loading available spaces...</div>\n    </div>\n</ng-template>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">No available spaces</div>\n    </div>\n</ng-template>\n<ng-template #empty_select_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">No selected spaces</div>\n    </div>\n</ng-template>\n","import { Component, Output, EventEmitter, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { DialogEvent, Identity } from 'src/app/shared/utilities/types.utilities';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { humaniseDuration } from 'src/app/shared/utilities/general.utilities';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\n/** Maximum amount of time that the booking can be extended */\nconst MAX_EXTENSION = 60;\n\nexport interface TimeExtensionModalData {\n    booking: Booking;\n}\n\n@Component({\n    selector: 'time-extension',\n    templateUrl: './time-extension.component.html',\n    styleUrls: ['./time-extension.component.scss']\n})\nexport class TimeExtensionModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Duration options that the user can select */\n    public durations: Identity[] = [];\n    /** Display string for the loading state of the booking */\n    public loading: string;\n\n    public get booking(): Booking {\n        return this._data.booking;\n    }\n\n    constructor(\n        private _dialog: MatDialogRef<TimeExtensionModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: TimeExtensionModalData,\n        private _service: ApplicationService,\n        private _spaces: SpacesService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.checkAvailability(MAX_EXTENSION);\n    }\n\n    public checkAvailability(extension: number) {\n        if (extension <= 0) {\n            this._service.notifyInfo('Meeting is not available to be extended.');\n            this._dialog.close();\n            return;\n        }\n        this.loading = 'Checking availability of spaces...';\n        this._spaces.available({\n            room_ids: this.booking.space_list.map(room => room.id).join(','),\n            date: this.booking.date,\n            duration: this.booking.duration + extension,\n            ignore: this.booking.icaluid,\n            hide_bookings: true\n        }).then(\n            list => {\n                if (list.length >= this.booking.space_list.length) {\n                    this.durations = [];\n                    let extended = 15;\n                    while (extended <= extension) {\n                        this.durations.push({\n                            id: this.booking.duration + extended,\n                            name: ` Extend ${humaniseDuration(extended)}`\n                        });\n                        extended += 15;\n                    }\n                    this.loading = null;\n                } else {\n                    this.checkAvailability(extension - 15);\n                }\n            },\n            err => {\n                this._service.notifyError(`Error extending meeting. Error: ${err.message | err}`);\n                this._dialog.close();\n            }\n        );\n    }\n\n    /**\n     * Extend the meeting but the given duration\n     * @param block Duration block to update the meeting to\n     */\n    public extendMeeting(block: Identity) {\n        this.loading = 'Extending meeting...';\n        this.booking.storePendingChange('duration', block.id);\n        this.booking.save().then(\n            (booking) => {\n                this.loading = null;\n                this.event.emit({ reason: 'done', metadata: booking });\n                this._dialog.close();\n            },\n            err => {\n                this._service.notifyError(`Error extending meeting. Error: ${err.message | err}`);\n            }\n        );\n    }\n}\n","<header>\n    <div class=\"text\">Extend meeting</div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{class:'material-icons', content: 'close'}\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main>\n        <ng-container *ngIf=\"!loading && durations; else loading_content\">\n            <button *ngFor=\"let item of durations\" name=\"action\" (tapped)=\"extendMeeting(item)\">\n                {{ item.name }}\n            </button>\n        </ng-container>\n    </main>\n</mat-dialog-content>\n<ng-template #loading_content>\n    <div class=\"no-items\">\n        <div class=\"icon\">\n            <spinner *ngIf=\"loading\" type=\"circle-ring\" color=\"rgba(0,0,0,.6)\"></spinner>\n            <app-icon\n                *ngIf=\"!loading\"\n                [icon]=\"{class:'material-icons', content: 'event_busy'}\"\n            ></app-icon>\n        </div>\n        <div class=\"text\">\n            {{ loading || 'No available extensions' }}\n        </div>\n    </div>\n</ng-template>\n","import { Component, Output, EventEmitter, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { MapPinComponent } from '@acaprojects/ngx-interactive-map';\n\nimport { BaseDirective } from '../../shared/base.directive';\nimport { BuildingLevel } from '../../services/data/organisation/level.class';\nimport { Space } from '../../services/data/spaces/space.class';\nimport { MapFeature } from '@acaprojects/ngx-interactive-map/lib/helpers/map.interfaces';\nimport { Point } from 'src/app/shared/utilities/types.utilities';\n\n@Component({\n    selector: 'view-room-modal',\n    templateUrl: './view-room-modal.component.html',\n    styleUrls: ['./view-room-modal.component.scss'],\n})\nexport class ViewRoomModalComponent extends BaseDirective {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter();\n    /** Space to show the location of on the map */\n    public get space(): Space {\n        return this._data.space;\n    }\n\n    public get level(): BuildingLevel {\n        return this.space.level;\n    }\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: { space: Space }) {\n        super();\n    }\n\n    /**  */\n    public get features(): MapFeature[] {\n        return [this.focus_feature];\n    }\n\n    /** Point on map to focus on */\n    public get focus_feature(): MapFeature {\n        /* istanbul ignore else */\n        if (!this.space) {\n            return null;\n        }\n        return {\n            id: `${this.space.map_id}`,\n            coordinates: null,\n            content: MapPinComponent,\n            data: {\n                back: '#fff',\n                fore: '#d31145',\n            },\n        };\n    }\n\n    public get focus(): string | Point {\n        return this.focus_feature ? this.focus_feature.id : null;\n    }\n}\n","<header>\n    <h3 mat-dialog-title>Locate Space - <span>{{ space.name }}</span></h3>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<div class=\"body\" *ngIf=\"level\">\n    <a-map [src]=\"level?.map_url\" [features]=\"features\">\n        <mat-spinner diameter=\"64\"></mat-spinner>\n    </a-map>\n\n    <div class=\"level\">{{ level?.name }}</div>\n</div>\n","import { Injectable, ApplicationRef, NgZone } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { SwUpdate } from '@angular/service-worker';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { first } from 'rxjs/operators';\n\nimport { ComposerService } from '@placeos/composer';\nimport { PlaceOSOptions } from '@placeos/ts-client';\nimport { HeapIoService } from '@acaprojects/ngx-heap-io';\n\nimport { Observable, BehaviorSubject, Subject, Subscription } from 'rxjs';\n\nimport { BaseClass } from '../shared/base.class';\nimport { ConsoleStream, SettingsService } from './settings.service';\nimport { ApplicationLoadingState } from '../shared/utilities/types.utilities';\n\nimport { HotkeysService } from './hotkeys.service';\nimport { ComposerSettings, ApplicationIcon } from '../shared/utilities/settings.interfaces';\nimport { BaseDataClass } from './data/base-api.class';\n\ndeclare global {\n    interface Window {\n        application: ApplicationService;\n        mock: {\n            enabled: boolean;\n            backend: any;\n        };\n    }\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ApplicationService extends BaseClass {\n    /** List of previous routes for return navigation */\n    private _route_trail: string[] = [];\n    /** Map of state variables for Service */\n    protected _subjects: {\n        [key: string]: BehaviorSubject<any> | Subject<any>;\n    } = {};\n    /** Map of observables for state variables */\n    protected _observers: { [key: string]: Observable<any> } = {};\n    /** Whether the application has stablised */\n    private _stable: boolean;\n\n    /** Whether the application has stablised */\n    public get is_stable(): boolean {\n        return this._stable || false;\n    }\n\n    constructor(\n        private _app_ref: ApplicationRef,\n        private _zone: NgZone,\n        private _title: Title,\n        private _cache: SwUpdate,\n        private _settings: SettingsService,\n        private _hotkeys: HotkeysService,\n        private _composer: ComposerService,\n        private _snackbar: MatSnackBar,\n        private _analytics: HeapIoService,\n    ) {\n        super();\n        this.set('system', null);\n        this.set('title', 'Home');\n        this.set('loading', {});\n        this._app_ref.isStable.pipe(first(_ => _)).subscribe(() => {\n            this._zone.run(() => {\n                this._stable = true;\n                this.log('APP', `Application has stablised.`);\n                this.setupCache();\n                this.waitForSettings();\n            });\n        });\n    }\n\n    public get Bindings() {\n        return this._composer.bindings;\n    }\n    /** Analytics service */\n    public get Analytics() {\n        return {};\n    }\n    /** Hotkeys service */\n    public get Hotkeys() {\n        return this._hotkeys;\n    }\n\n    /** Engine Composer service */\n    public get Composer() {\n        return this._composer;\n    }\n\n    /**\n     * Get a setting from the settings service\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        return this._settings.get(key);\n    }\n\n    /** Name of the application */\n    public get name() {\n        return this._settings.app_name;\n    }\n\n    /**\n     * Title of the page\n     */\n    public set title(value: string) {\n        const title_suffix = this.setting('app.title');\n        this.set('title', value);\n        this._title.setTitle(`${value ? value + ' | ' : ''}${title_suffix}`);\n    }\n\n    /**\n     * Title of the page\n     */\n    public get title(): string {\n        return this._title.getTitle();\n    }\n\n    /** Root API Endpoint */\n    public get endpoint() {\n        return `/api/staff/`;\n    }\n\n    /** Root API Endpoint for engine */\n    public get engine_endpoint() {\n        return this._composer.auth.api_endpoint + '/';\n    }\n\n    /** Whether settings has been loaded */\n    public get has_settings(): boolean {\n        return this._settings.is_initialised;\n    }\n\n    /**\n     * Create notification popup\n     * @param type CSS Class to add to the notification\n     * @param message Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     * @param icon Icon to render to the left of the notification message\n     */\n    public notify(\n        type: string,\n        message: string,\n        action: string = 'OK',\n        on_action?: () => void,\n        icon: ApplicationIcon = {\n            type: 'icon',\n            class: 'material-icons',\n            content: 'info'\n        }\n    ): void {\n        const snackbar_ref = this._snackbar.open(message, action, {\n            panelClass: [type],\n            duration: 5000\n        });\n        this.subscription(\n            'snackbar_close',\n            snackbar_ref.afterDismissed().subscribe(() => {\n                this.unsub('snackbar_close');\n                this.unsub('notify');\n            })\n        );\n        if (action) {\n            on_action = on_action || (() => snackbar_ref.dismiss());\n            this.subscription(\n                'notify',\n                snackbar_ref.onAction().subscribe(() => on_action())\n            );\n        }\n    }\n\n    /**\n     * Create success notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifySuccess(msg: string, action?: string, on_action?: () => void): void {\n        const icon: ApplicationIcon = {\n            type: 'icon',\n            class: 'material-icons',\n            content: 'done'\n        };\n        console.debug(msg);\n        this.notify('success', msg, action, on_action, icon);\n    }\n\n    /**\n     * Create error notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifyError(msg: string, action?: string, on_action?: () => void): void {\n        const icon: ApplicationIcon = {\n            type: 'icon',\n            class: 'material-icons',\n            content: 'error'\n        };\n        console.error(msg);\n        this.notify('error', msg, action, on_action, icon);\n    }\n\n    /**\n     * Create warning notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifyWarn(msg: string, action?: string, on_action?: () => void): void {\n        const icon: ApplicationIcon = {\n            type: 'icon',\n            class: 'material-icons',\n            content: 'warning'\n        };\n        console.warn(msg);\n        this.notify('warn', msg, action, on_action, icon);\n    }\n\n    /**\n     * Create info notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifyInfo(msg: string, action?: string, on_action?: () => void): void {\n        console.info(msg);\n        this.notify('info', msg, action, on_action);\n    }\n\n    /**\n     * Log data to the browser console\n     * @param type Type of message\n     * @param msg Message body\n     * @param args array of argments to log to the console\n     * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\n     * @param force Whether to force message to be emitted when debug is disabled\n     */\n    public log(\n        type: string,\n        msg: string,\n        args?: any,\n        stream: ConsoleStream = 'debug',\n        force: boolean = false\n    ): void {\n        this._settings.log(type, msg, args, stream, force);\n    }\n\n    /**\n     * Get the current value of the named property\n     * @param name Property name\n     */\n    public get<U = any>(name: string): U {\n        return this._subjects[name] && this._subjects[name] instanceof BehaviorSubject\n            ? (this._subjects[name] as BehaviorSubject<U>).getValue()\n            : null;\n    }\n\n    /**\n     * Listen to value change of the named property\n     * @param name Property name\n     * @param next Callback for value changes\n     */\n    public listen<U = any>(name: string, next: (_: U) => void): Subscription {\n        return this._observers[name] ? this._observers[name].subscribe(next) : null;\n    }\n\n    /**\n     * Update the value of the named property\n     * @param name Property name\n     * @param value New value\n     */\n    public set<U = any>(name: string, value: U): void {\n        if (!this._subjects[name]) {\n            this._subjects[name] = new BehaviorSubject<U>(value);\n            this._observers[name] = this._subjects[name].asObservable();\n        } else {\n            this._subjects[name].next(value);\n        }\n    }\n\n    /** Wait for settings to be initialised before setting up the application */\n    private waitForSettings() {\n        // Wait until the settings have loaded before initialising\n        this._settings.initialised.pipe(first(_ => _)).subscribe(() => this.init());\n    }\n\n    /**\n     * Initialise application services\n     */\n    private init(): void {\n        this.setupComposer();\n        // this.setupAnalytics();\n        this._composer.initialised.pipe(first(_ => _)).subscribe(() => {\n            this._initialised.next(true);\n        });\n        // Add service to window if in debug mode\n        if (window.debug) {\n            window.application = this;\n        }\n    }\n\n    /**\n     * Initialise the composer library comms\n     */\n    private setupComposer(): void {\n        this.log('SYSTEM', 'Setup up composer...');\n        const loading: ApplicationLoadingState = this.get('loading') || {};\n        loading.composer = {\n            message: 'Initialising service connection',\n            state: 'loading'\n        };\n        this.set('loading', loading);\n        // Get application settings\n        const settings: ComposerSettings = this._settings.get('composer') || {};\n        const protocol = settings.protocol || location.protocol;\n        const host = settings.domain || location.hostname;\n        const port = settings.port || location.port;\n        const url = settings.use_domain ? `${protocol}//${host}:${port}` : location.origin;\n        const route = settings.route || '';\n        const mock = this._settings.get('mock');\n        // Generate configuration object\n        const config: PlaceOSOptions = {\n            scope: 'public',\n            host: `${host}:${port}`,\n            auth_uri: `${url}/auth/oauth/authorize`,\n            token_uri: `${url}/auth/token`,\n            redirect_uri: `${location.origin}${route}/oauth-resp.html`,\n            handle_login: !settings.local_login,\n            mock\n        };\n        this._composer.setup(config);\n        loading.composer = {\n            message: 'Initialising service connection',\n            state: 'complete'\n        };\n        this.set('loading', loading);\n    }\n\n    /**\n     * Setup handler for cache change events\n     */\n    private setupCache() {\n        if (this._cache.isEnabled) {\n            this.subscription(\n                'cache_update',\n                this._cache.available.subscribe(event => {\n                    const current = `current version is ${event.current.hash}`;\n                    const available = `available version is ${event.available.hash}`;\n                    this.log('CACHE', `Update available: ${current} ${available}`);\n                    this.activateUpdate();\n                })\n            );\n            this.subscription(\n                'cache_activated',\n                this._cache.activated.subscribe(() => {\n                    this.log('CACHE', `Updates activated. Reloading...`);\n                    this.notifyInfo(\n                        'Newer version of the application is available',\n                        'Refresh',\n                        () => location.reload(true)\n                    );\n                })\n            );\n            setInterval(() => {\n                this.log('CACHE', `Checking for updates...`);\n                this._cache.checkForUpdate();\n            }, 5 * 60 * 1000);\n        }\n    }\n\n    /**\n     * Update the cache and reload the page\n     *\n     */\n    private activateUpdate() {\n        if (this._cache.isEnabled) {\n            this.log('CACHE', `Activating changes to the cache...`);\n            this._cache.activateUpdate().then(() => {\n                this.notifyInfo('Newer version of the application is available', 'Refresh', () =>\n                    location.reload(true)\n                );\n            });\n        }\n    }\n}\n","import { Subject, Observable } from 'rxjs';\n\nimport { BaseClass } from '../../shared/base.class';\nimport { HashMap } from '../../shared/utilities/types.utilities';\nimport { ServiceManager, ServiceLike } from './service-manager.class';\n\nexport type DataClassEventType = 'value_change' | 'item_saved' | 'reset' | 'other';\n\nexport interface IDataClassEvent<T = HashMap> {\n    type: DataClassEventType;\n    metadata: T;\n}\n\nexport const BASE_MUTABLE_FIELDS = ['name', 'email'] as const;\ntype BaseMutableTuple = typeof BASE_MUTABLE_FIELDS;\nexport type BaseMutableFields = BaseMutableTuple[number];\n\n\nexport class BaseDataClass extends BaseClass {\n    /** Unique Identifier of the object */\n    public readonly id: string;\n    /** Human readable name of the object */\n    public readonly name: string;\n    /** Email address associated with the object */\n    public readonly email: string;\n    /** Subject for change events to the class object */\n    public readonly changeEvents = new Subject<IDataClassEvent>();\n    /** Map of pending changes to the object */\n    protected _changes: HashMap = {};\n    /** Map of local property names to server ones */\n    protected _server_names: HashMap<string> = {};\n    /** Service for managing model on the server */\n    protected get _service(): ServiceLike {\n        return ServiceManager.serviceFor(BaseDataClass);\n    }\n\n    constructor(raw_data: HashMap) {\n        super();\n        this.id = raw_data.id || raw_data.zone_id || raw_data.email || '';\n        this.name = raw_data.name || '';\n        this.email = `${raw_data.email || ''}`.toLowerCase();\n        this._changes = {};\n    }\n\n    /** Whether the form has changes */\n    public get has_changes(): boolean {\n        for (const key in this.changes) {\n            if (this.changes[key]) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /** Map of currently unsaved changes to the state */\n    public get changes(): HashMap {\n        return JSON.parse(JSON.stringify(this._changes));\n    }\n\n    /**\n     * Store new value for given field\n     * @param key\n     * @param value\n     */\n    public storePendingChange(\n        key: BaseMutableFields,\n        value: BaseDataClass[BaseMutableFields]\n    ): this {\n        if (typeof value === typeof this[key as any]) {\n            this._changes[key as any] = value;\n            this.emit('value_change', { key, value });\n        } else {\n            throw new Error(`Invalid type for value \"${value}\" set for key \"${key}\"`);\n        }\n        return this;\n    }\n\n    public clearPendingChanges(): void {\n        delete this._changes;\n        this._changes = {};\n        this.emit('reset');\n    }\n\n    /**\n     * Save pending changes to server\n     */\n    public save(): Promise<BaseDataClass> {\n        if (this._service) {\n            const form = this.toJSON();\n            return new Promise((resolve, reject) => {\n                const promise = this.id\n                    ? this._service.update(this.id, form)\n                    : this._service.add(form);\n                promise.then(\n                    (d) => {\n                        this.emit<BaseDataClass>('item_saved', d);\n                        resolve(d);\n                    },\n                    (_) => reject(_)\n                );\n            });\n        } else {\n            Promise.reject('No service to process request');\n        }\n    }\n\n    /**\n     * Delete this item from the server\n     */\n    public delete(): Promise<void> {\n        if (this.id) {\n            return this._service.delete(this.id);\n        }\n    }\n\n    /**\n     * Run task for this item on the service\n     * @param task_name Name of the task\n     * @param parameters Parameters to pass to the task request\n     */\n    public runTask(task_name: string, parameters: HashMap): Promise<void> {\n        if (this.id) {\n            return this._service.task(this.id, task_name, parameters);\n        }\n    }\n    /**\n     * Convert object into plain object\n     */\n    public toJSON(this: BaseDataClass, with_changes: boolean = true): HashMap {\n        const obj: any = { ...this };\n        // Remove local private members\n        delete obj._service;\n        delete obj._changes;\n        delete obj.changeEvents;\n        // Remove parent private members\n        delete obj._timers;\n        delete obj._intervals;\n        delete obj._subscriptions;\n        delete obj._server_names;\n        delete obj._initialised;\n        // Convert remaining members to be public\n        const keys = Object.keys(obj);\n        for (const key of keys) {\n            if (key[0] === '_') {\n                const new_key = this._server_names[key.substr(1)] || key.substr(1);\n                obj[new_key] = obj[key];\n                delete obj[key];\n            } else if (obj[key] === undefined) {\n                delete obj[key];\n            }\n        }\n        return with_changes ? { ...obj, ...this._changes } : obj;\n    }\n\n    /**\n     * Emits change event\n     * @param type Type of change that has occurred\n     * @param metadata Supporting metadata for the event\n     */\n    public emit<T = HashMap>(type: DataClassEventType, metadata?: T): void {\n        this.changeEvents.next({ type, metadata });\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): BaseDataClass {\n        return new BaseDataClass(this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): BaseDataClass {\n        return new BaseDataClass({ ...this, id: null, email: null });\n    }\n}\n","import { ComposerService } from '@placeos/composer';\nimport { BehaviorSubject, Observable, Subscription, Subscriber, Subject } from 'rxjs';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDataClass } from './base-api.class';\nimport { BaseClass } from '../../shared/base.class';\nimport { ApplicationService } from '../app.service';\nimport { HashMap } from '../../shared/utilities/types.utilities';\nimport { toQueryString } from '../../shared/utilities/api.utilities';\n\nexport interface IEngineResponse {\n    results: HashMap[];\n    total: number;\n}\n\nexport class BaseAPIService<T extends {} = BaseDataClass> extends BaseClass {\n    /** Application service */\n    public parent: ApplicationService;\n    /** Display name of the service */\n    protected _name: string;\n    /** API Route of the service */\n    protected _api_route: string;\n    /** Map of state variables for Service */\n    protected _subjects: { [key: string]: BehaviorSubject<any> | Subject<any> } = {};\n    /** Map of observables for state variables */\n    protected _observers: { [key: string]: Observable<any> } = {};\n    /** Map of poll subscribers for API endpoints */\n    protected _subscribers: { [key: string]: Subscriber<any> } = {};\n    /** Map of promises for Service */\n    protected _promises: { [key: string]: Promise<any> } = {};\n    /** Comparison function for service items */\n    protected _compare: (a: T, b: T) => boolean = (a, b) =>\n        a === b || (a as any).id === (b as any).id;\n    /** Default filter function for list method */\n    protected _list_filter: (a: T) => boolean = (a) => !!a;\n\n    /** Http Client */\n    protected get http() {\n        return this._composer.http;\n    }\n\n    constructor(protected _composer: ComposerService) {\n        super();\n        this._name = 'Base';\n        this._api_route = 'base';\n        this.set('list', []);\n    }\n\n    /**\n     * Initailise service\n     */\n    public init() {\n        this.load().then(\n            (_) => this._initialised.next(true),\n            (err) => this.timeout('init', () => this.init(), 1000)\n        );\n    }\n\n    /**\n     * Get API route for the service\n     * @param engine Whether endpoint is using the application API or engine API\n     */\n    public route(engine: boolean = false) {\n        const endpoint = engine\n            ? this._composer.auth.api_endpoint\n            : '/api/staff';\n        return `${endpoint}/${this._api_route}`;\n    }\n    /** API Route of the service */\n    public get api_route() {\n        return this._api_route;\n    }\n\n    /**\n     * Get the current value of the named property\n     * @param name Property name\n     */\n    public get<U = any>(name: string): U {\n        if (!this._observers[name]) {\n            this.set<U>(name, null);\n        }\n        return (this._subjects[name] as BehaviorSubject<U>).getValue();\n    }\n\n    /**\n     * Listen to value change of the named property\n     * @param name Property name\n     * @param next Callback for value changes\n     */\n    public listen<U = any>(name: string): Observable<U> {\n        if (!this._observers[name]) {\n            this.set<U>(name, null);\n        }\n        return this._observers[name];\n    }\n\n    /**\n     * Update the value of the named property\n     * @param name Property name\n     * @param value New value\n     */\n    protected set<U = any>(name: string, value: U): void {\n        if (!this._subjects[name]) {\n            this._subjects[name] = new BehaviorSubject<U>(value);\n            this._observers[name] = this._subjects[name].asObservable();\n        } else {\n            this._subjects[name].next(value);\n        }\n    }\n\n    /**\n     * Get list of loaded items\n     * @param predicate Function for filtering the list\n     */\n    public filter(predicate: (a: T) => boolean = this._list_filter): T[] {\n        const list = this.get('list') || [];\n        return list.reduce((a, i) => {\n            if (predicate(i)) {\n                a.push(i);\n            }\n            return a;\n        }, []);\n    }\n\n    /**\n     * Get item with the given id from the loaded items\n     * @param id ID of the item\n     */\n    public find(id: string = ''): T {\n        const list = this.get('list') || [];\n        id = id.toLowerCase();\n        return list.find((i) => i.id === id || i.email.toLowerCase() === id);\n    }\n\n    /**\n     * Query the index of the API route associated with this service\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public query(query_params: HashMap = { update_list: true }): Promise<T[]> {\n        let engine = false;\n        let cache = 1000;\n        /* istanbul ignore else */\n        if (query_params) {\n            engine = !!query_params.engine;\n            delete query_params.engine;\n            cache = query_params.cache || 1000;\n            delete query_params.cache;\n        }\n        const query = toQueryString(query_params);\n        const key = `query|${query}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise((resolve, reject) => {\n                const url = `${this.route(engine)}${query ? '?' + query : ''}`;\n                let result: T[] | HashMap[] = [];\n                this.http.get(url).subscribe(\n                    (d: IEngineResponse | HashMap[]) => {\n                        result =\n                            d && d instanceof Array\n                                ? d.map((i) => this.process(i))\n                                : d && !(d instanceof Array) && d.results\n                                ? (d.results as HashMap[])\n                                : [];\n                    },\n                    (e) => {\n                        reject(e);\n                        this._promises.new_item = null;\n                    },\n                    () => {\n                        if (\n                            (!query || (query_params && query_params.update_list)) &&\n                            result.length > 0 &&\n                            result[0] instanceof BaseDataClass\n                        ) {\n                            this.set('list', this.updateList(this.get('list'), result as T[]));\n                        }\n                        resolve(result);\n                        this.timeout(key, () => (this._promises[key] = null), cache);\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Query the API route for a sepecific item\n     * @param id ID of the item\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public show(id: string, query_params: HashMap = {}): Promise<T> {\n        let engine = false;\n        /* istanbul ignore else */\n        if (query_params) {\n            engine = !!query_params.engine;\n            delete query_params.engine;\n        }\n        const query = toQueryString(query_params);\n        const key = `show|${id}|${query}`;\n        /* istanbul ignore else */\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<T>((resolve, reject) => {\n                const url = `${this.route(engine)}/${id}${query ? '?' + query : ''}`;\n                let result: T = null;\n                this.http.get(url).subscribe(\n                    (d) => (result = this.process(d)),\n                    (e) => {\n                        reject(e);\n                        this._promises.new_item = null;\n                    },\n                    () => {\n                        resolve(result);\n                        this.timeout(key, () => (this._promises[key] = null), 1000);\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Make post request for a new item to the service\n     * @param form_data Data to post to the server\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public add(form_data: HashMap, query_params: HashMap = {}): Promise<T> {\n        /* istanbul ignore else */\n        if (!this._promises.new_item) {\n            this._promises.new_item = new Promise<T>((resolve, reject) => {\n                const query = toQueryString(query_params);\n                const url = `${this.route(query_params.engine)}${query ? '?' + query : ''}`;\n                let result: T = null;\n                this.http.post(url, form_data).subscribe(\n                    (d) => (result = this.process(d)),\n                    (e) => {\n                        reject(e);\n                        this.analyticsEvent(`create-${this._name.toLowerCase()}-failed`);\n                        this._promises.new_item = null;\n                    },\n                    () => {\n                        resolve(result);\n                        this.set('list', this.updateList(this.get('list'), [result]));\n                        this.analyticsEvent(`create-${this._name.toLowerCase()}-success`);\n                        this._promises.new_item = null;\n                    }\n                );\n            });\n        }\n        return this._promises.new_item;\n    }\n\n    /**\n     * Perform API task for the given item ID\n     * @param id ID of the item\n     * @param task_name Name of the task\n     * @param form_data Map of data to pass to the API\n     * @param method Verb to use for request\n     */\n    public task<U = any>(\n        id: string,\n        task_name: string,\n        form_data: HashMap = {},\n        method: 'post' | 'get' = 'post'\n    ): Promise<U> {\n        const query = toQueryString(form_data);\n        const key = `task|${id}|${task_name}|${query}`;\n        /* istanbul ignore else */\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<U>((resolve, reject) => {\n                const post_data = { ...form_data, id, _task: task_name };\n                const url = `${this.api_route}/${id}/${task_name}`;\n                let result: any;\n                const request =\n                    method === 'post'\n                        ? this.http.post(url, post_data)\n                        : this.http.get(`${url}${query ? '?' + query : ''}`);\n                request.subscribe(\n                    (d) => (result = d),\n                    (e) => {\n                        reject(e);\n                        this.analyticsEvent(\n                            `${this._name.toLowerCase()}-task-${task_name}-failed`,\n                            id\n                        );\n                        delete this._promises[key];\n                    },\n                    () => {\n                        resolve(result as U);\n                        this.analyticsEvent(\n                            `${this._name.toLowerCase()}-task-${task_name}-success`,\n                            id\n                        );\n                        this.timeout(key, () => delete this._promises[key], 1000);\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Setup a poller for an API endpoint\n     * @param id Show request ID. Leave blank to poll on the query endpoint\n     * @param query_params Map of query paramaters to add to the polled URL\n     * @param delay Delay between each poll event\n     */\n    public poll(\n        id?: string,\n        query_params: HashMap = {},\n        delay: number = 5000\n    ): Observable<T | T[]> {\n        const key = `poll|${id || ''}|${toQueryString(query_params) || ''}`;\n        this.stopPoll(id, query_params);\n        this._subjects[key] = new Subject<T | T[]>();\n        this._observers[key] = this._subjects[key].asObservable();\n        const sub = this._subjects[key];\n        const query = { ...(query_params || {}), _poll: true };\n        if (id) {\n            this.show(id, query).then(\n                (d) => sub.next(d),\n                (e) => sub.error(e)\n            );\n            this.interval(\n                key,\n                () => {\n                    this.show(id, query).then(\n                        (d) => sub.next(d),\n                        (e) => sub.error(e)\n                    );\n                },\n                delay\n            );\n        } else {\n            this.query(query).then(\n                (d) => sub.next(d),\n                (e) => sub.error(e)\n            );\n            this.interval(\n                key,\n                () => {\n                    this.query(query).then(\n                        (d) => sub.next(d),\n                        (e) => sub.error(e)\n                    );\n                },\n                delay\n            );\n        }\n        return this._observers[key];\n    }\n\n    /**\n     * Destroy poller\n     * @param id\n     * @param query_params\n     */\n    public stopPoll(id?: string, query_params: HashMap = {}) {\n        const key = `poll|${id || ''}|${toQueryString(query_params) || ''}`;\n        /* istanbul ignore else */\n        if (this._subjects[key]) {\n            this._subjects[key].complete();\n            this._subjects[key] = null;\n            this._observers[key] = null;\n        }\n    }\n\n    /**\n     * Make put request for changes to the item with the given id\n     * @param id ID of the item being updated\n     * @param form_data New values for the item\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public update(id: string, form_data: HashMap, query_params: HashMap = {}): Promise<T> {\n        const key = `update|${id}`;\n        /* istanbul ignore else */\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<T>((resolve, reject) => {\n                const query = toQueryString(query_params);\n                const url = `${this.route(query_params.engine)}/${id}${query ? '?' + query : ''}`;\n                let result: T = null;\n                this.http.put(url, form_data).subscribe(\n                    (d) => (result = this.process(d)),\n                    (e) => {\n                        reject(e);\n                        this.analyticsEvent(`update-${this._name.toLowerCase()}-failed`, id);\n                        this._promises[key] = null;\n                    },\n                    () => {\n                        resolve(result);\n                        this.set(\n                            'list',\n                            this.updateList(this.removeItem(this.get('list'), { id } as any), [\n                                result,\n                            ])\n                        );\n                        this.analyticsEvent(`update-${this._name.toLowerCase()}-success`, id);\n                        this._promises[key] = null;\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Make delete request for the given item\n     * @param id ID of item\n     */\n    public delete(id: string): Promise<void> {\n        const key = `delete|${id}`;\n        /* istanbul ignore else */\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<void>((resolve, reject) => {\n                const url = `${this.route()}/${id}`;\n                this.http.delete(url).subscribe(\n                    (_) => null,\n                    (e) => reject(e),\n                    () => {\n                        this.set('list', this.removeItem(this.get('list'), { id } as any));\n                        resolve();\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Add new API item from another service or API class\n     * @param id ID of the item/or service adding the new item\n     * @param data Raw API data for the new item\n     * @param type Adder type\n     */\n    public addFrom(\n        id: string,\n        data: HashMap,\n        type: 'class' | 'service' | 'other' = 'other'\n    ): string {\n        const new_item = this.process(data);\n        this.set('list', this.updateList(this.get('list'), [new_item]));\n        return (new_item as any).id;\n    }\n\n    /**\n     * Remove items with the given IDs from the list\n     * @param id ID of the item/or service remove the list of items\n     * @param remove_ids List of item IDs to remove\n     * @param type Remover type\n     */\n    public removeFrom(\n        id: string,\n        remove_ids: string[],\n        type: 'class' | 'service' | 'other' = 'other'\n    ) {}\n\n    /**\n     * Load initial data for the service\n     */\n    protected async load(): Promise<void> {}\n\n    /**\n     * Post analytics event for this service\n     * @param action Name of the action to post\n     */\n    protected analyticsEvent(action: string, label?: string) {\n        // if (this.parent && this.parent.Analytics) {\n        //     this.parent.Analytics.track(this._name, { desc: `${this.parent.name.toLowerCase()}-${action}`, label });\n        // }\n    }\n\n    /**\n     * Convert raw API data into a valid API Object\n     * @param raw_item Raw API data\n     */\n    protected process(raw_item: HashMap): T {\n        return raw_item as T;\n    }\n\n    /**\n     * Update recorded list of items\n     * @param old_list Old list of items\n     * @param list List of updated items\n     * @param compareFn Function to compare items to remove duplicates\n     */\n    public updateList(\n        old_list: T[],\n        list: T[],\n        compareFn: (a: T, b: T) => boolean = this._compare\n    ): T[] {\n        /* istanbul ignore else */\n        if (!list || list.length === 0) {\n            return old_list;\n        }\n        const new_list: T[] = [];\n        const mixed_list = [...list, ...old_list];\n        /* istanbul ignore else */\n        if (!compareFn) {\n            compareFn = this._compare;\n        }\n        for (const item of mixed_list) {\n            const found = new_list.find((i) => compareFn(i, item));\n            /* istanbul ignore else */\n            if (!found) {\n                new_list.push(item);\n            }\n        }\n        return new_list;\n    }\n\n    /**\n     * Remove the given item from the given list\n     * @param list List of items\n     * @param item Item to remove\n     * @param compareFn Function to compare items\n     */\n    protected removeItem(list: T[], item: T, compareFn?: (a: T, b: T) => boolean) {\n        const new_list = [];\n        /* istanbul ignore else */\n        if (!compareFn) {\n            compareFn = this._compare;\n        }\n        list.forEach((i) => (compareFn(item, i) ? null : new_list.push(i)));\n        return new_list;\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\n\nimport { BookingNote, BookingMutableFields, BookingRecurrenceDetails } from './booking.interfaces';\nimport { CateringOrder } from '../catering/catering-order.class';\nimport { User } from '../users/user.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\nimport { humaniseDuration, unique, flatten } from '../../../shared/utilities/general.utilities';\nimport { Space } from '../spaces/space.class';\nimport { ServiceManager } from '../service-manager.class';\n\nimport * as dayjs from 'dayjs';\n\nexport class Booking extends BaseDataClass {\n    /** Unique calendar event ID */\n    public readonly icaluid: string;\n    /** Subject or title of the booking */\n    public readonly title: string;\n    /** Unix timestamp of the booking start */\n    public readonly date: number;\n    /** Length of the booking in minutes */\n    public readonly duration: number;\n    /** Description or details of the booking */\n    public readonly body: string;\n    /** Type of booking */\n    public readonly type: string;\n    /** Whether the booking has catering associated with it */\n    public readonly has_catering: boolean;\n    /** List of catering orders for the booking */\n    public readonly catering: readonly CateringOrder[];\n    /** String location set in booking */\n    public readonly _location: string;\n    /** Whether booking's duration covers all day */\n    public readonly all_day: boolean;\n    /** Details of the recurrence */\n    public readonly recurrence: BookingRecurrenceDetails;\n    /** Mapping of emails to approval statuses */\n    public readonly approval_status: HashMap<string>;\n    /** Host/Organiser of the booking */\n    public readonly organiser: User;\n    /** List of people invited to attend the booking */\n    public readonly attendees: User[];\n    /** Author of the booking */\n    public readonly creator: User;\n    /** List of notes associated with the booking */\n    public readonly notes: readonly BookingNote[];\n    /** Mapping of spaces to equipment charge codes */\n    public readonly equipment_codes: HashMap<string>;\n    /** Mapping of spaces to expected number of attendees */\n    public readonly expected_attendees: HashMap<number>;\n    /** Setup time before the meeting in minutes */\n    public readonly setup: number;\n    /** List of checked in attendees */\n    public readonly checked_in: string[];\n    /** Breakdown time after booking in minutes */\n    public readonly breakdown: number;\n    /** List of fields edited since creation */\n    public readonly edits: string[];\n    /** List of spaces associated with the booking */\n    public readonly space_list: Space[];\n    /** List of users to be notified on visitor arrivals */\n    public readonly notify_users: readonly string[];\n    /** Map of display strings */\n    private _display: HashMap<string> = {};\n    /** Service for managing Bookings */\n    protected get _service() {\n        return ServiceManager.serviceFor(Booking);\n    }\n\n    constructor(raw_data: HashMap) {\n        super(raw_data);\n        this.icaluid = raw_data.icaluid || this.id || '';\n        this.title = raw_data.title || raw_data.subject || raw_data.Subject || '';\n        const start = dayjs(\n            raw_data.date || raw_data.start_epoch * 1000 || raw_data.start * 1000 || raw_data.Start\n        );\n        this.date = start.valueOf();\n        this.duration =\n            raw_data.duration ||\n            dayjs(raw_data.end_epoch * 1000 || raw_data.end * 1000  || raw_data.End).diff(start, 'm') || 60;\n        this.body =\n            (raw_data.body instanceof Object ? raw_data.body.content : raw_data.body) ||\n            raw_data.description ||\n            '';\n        this.type =\n            raw_data.booking_type ||\n            raw_data.type ||\n            (raw_data.visitors ? 'external' : null) ||\n            'internal';\n        this.has_catering = !!raw_data.has_catering;\n        this.attendees = (raw_data.attendees || raw_data._attendees || []).map((i) => new User(i));\n        this.organiser = (raw_data.organiser ? new User(raw_data.organiser) : User.active_user) || new User();\n        this.creator = raw_data.creator ? new User(raw_data.creator) : this.organiser;\n        this._location = raw_data.location_name || raw_data.location || '';\n        this.all_day = raw_data.all_day || this.duration > 23 * 60;\n        this.setup = raw_data.setup || 0;\n        this.breakdown = raw_data.breakdown || 0;\n\n        this.recurrence = raw_data.recurrence\n            ? {\n                  ...raw_data.recurrence,\n                  start: raw_data.recurrence.start,\n                  end: raw_data.recurrence.end,\n              }\n            : {};\n        if (this.recurrence.end && this.recurrence.end < new Date().getTime()) {\n            (this as any).recurrence = {\n                ...this.recurrence,\n                start: this.recurrence.start * 1000,\n                end: this.recurrence.end * 1000,\n            };\n        }\n        this.notes = raw_data.notes || [];\n        this.equipment_codes = raw_data.equipment_codes || raw_data.equipment_code || {};\n        this.expected_attendees = raw_data.expected_attendees || {};\n        this.approval_status = raw_data.approval_status || raw_data.status || {};\n        this.checked_in = raw_data.checked_in || raw_data.checkins || [];\n        this.notify_users = raw_data.notify_users || [];\n        if (raw_data.description && !this.notes.find((i) => i.type === 'description')) {\n            this.notes = [\n                ...this.notes,\n                {\n                    type: 'description',\n                    date: -1,\n                    message: raw_data.description,\n                    author: this.organiser.email,\n                },\n            ];\n        }\n        this._display = {\n            date: start.format('DD MMM YYYY'),\n            time: `${start.format('h:mma')} - ${dayjs(start)\n                .add(this.duration, 'm')\n                .format('h:mma')}`,\n            start: start.format('h:mma'),\n            end: dayjs(start).add(this.duration, 'm').format('h:mma'),\n            duration: humaniseDuration(this.duration),\n        };\n        const space_ids = unique(\n            raw_data.room_ids || raw_data.room_id || raw_data._space_list || []\n        );\n        const space_service = ServiceManager.serviceFor(Space);\n        if (space_service) {\n            this.space_list = space_ids.map(id => {\n                return space_service.find(id) || new Space({ id, name: id, email: id })\n            });\n        } else {\n            this.space_list = space_ids.map(id => new Space({ id, name: id, email: id }));\n        }\n        if (raw_data.show_as && raw_data.show_as === 'cancelled') {\n            this.space_list.forEach((space) => (this.approval_status[space.email] = 'declined'));\n        }\n        this.catering = (raw_data.catering instanceof Array ? raw_data.catering : []).map(\n            (i) => new CateringOrder(i)\n        );\n        this.edits =\n            raw_data.edits instanceof Array\n                ? raw_data.edits\n                : unique(flatten(Object.keys(raw_data.edits || {}).map((i) => raw_data.edits[i])));\n    }\n\n    /** Whether booking has been declined */\n    public get declined(): boolean {\n        for (const space of this.space_list) {\n            if ((this.approval_status[space.email] || '').indexOf('decline') >= 0) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /** Whether booking has been approved */\n    public get approved(): boolean {\n        for (const space of this.space_list) {\n            if (\n                this.approval_status[space.email] &&\n                (this.approval_status[space.email].indexOf('tentative') >= 0 ||\n                    this.approval_status[space.email].indexOf('decline') >= 0)\n            ) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /** Whether booking is tentative */\n    public get tentative(): boolean {\n        for (const space of this.space_list) {\n            if (\n                this.approval_status[space.email] &&\n                this.approval_status[space.email].indexOf('tentative') >= 0\n            ) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /** Whether booking contains external visitors in the attendee list */\n    public get has_visitors(): boolean {\n        return this.attendees.reduce((a, v) => a || v.external, false);\n    }\n\n    /** Status of the booking */\n    public get status(): 'future' | 'upcoming' | 'done' | 'started' | 'in_progress' {\n        const now = dayjs();\n        const date = dayjs(this.date);\n        if (now.isBefore(date.subtract(15, 'm'), 'm')) {\n            return 'future';\n        } else if (now.isBefore(date, 'm')) {\n            return 'upcoming';\n        } else if (now.isBefore(date.add(15, 'm'), 'm')) {\n            return 'started';\n        } else if (now.isBefore(date.add(this.duration, 'm'), 'm')) {\n            return 'in_progress';\n        }\n        return 'done';\n    }\n\n    /** Description of the booking purpose */\n    public get description(): string {\n        const note = (this.notes || []).find((i) => i.type === 'description');\n        return note ? note.message : '';\n    }\n\n    /** Get the first space from the space list */\n    public get space(): Space {\n        return this.space_list[0] || { level: { name: '<No Location>' } } as any;\n    }\n\n    /** Display value for the date */\n    public get date_string(): string {\n        return this._display.date;\n    }\n    /** Display valuie for the start and end times of the booking */\n    public get time_period(): string {\n        return this._display.time;\n    }\n    /** Display value for the start time of the booking */\n    public get start_time(): string {\n        return this._display.start;\n    }\n    /** Display value for the end time of the booking */\n    public get end_time(): string {\n        return this._display.end;\n    }\n    /** Display value for the duration of the booking */\n    public get length_string(): string {\n        return this._display.duration;\n    }\n    /** Display value for the location of the booking */\n    public get location(): string {\n        return this.space_list.map(space => space.name).join(', ') || this._location || 'No location set';\n    }\n    /** Display value for the level of the first space in the booking */\n    public get level(): string {\n        return this.space.level.name;\n    }\n\n    /**\n     * Store new value for given field\n     * @param key Name of the property\n     * @param value New value associated with the property\n     */\n    public storePendingChange(key: BookingMutableFields, value: Booking[BookingMutableFields]) {\n        return super.storePendingChange(key as any, value as any);\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): Booking {\n        return new Booking(this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): Booking {\n        return new Booking({\n            ...this.toJSON(),\n            id: null,\n            email: null,\n            icaluid: null,\n        });\n    }\n\n    /**\n     * Convert object into plain object\n     */\n    public toJSON(this: Booking, with_changes: boolean = true): HashMap {\n        const data = super.toJSON(with_changes);\n        const date = dayjs(data.date);\n        data.start = date.unix();\n        data.end = date.add(data.duration || 60, 'm').unix();\n        data.auto_approve = this.space_list\n            .map((space) => {\n                return !this.id || this.changes.date || this.changes.duration\n                    ? !space ||\n                          !space.byRequest({\n                              date: data.date,\n                              duration: data.duration,\n                              host: data.organiser,\n                          })\n                    : (this.approval_status[space.email] || '').indexOf('tentative') < 0;\n            });\n        if (data.body && !data.notes.find((note) => note.message === data.body)) {\n            data.notes.push({\n                type: 'description',\n                message: data.body,\n                author: this.creator.email,\n                date: dayjs().valueOf(),\n            } as BookingNote);\n            data.notes.sort((a, b) => b.date - a.date);\n        }\n        data.attendees = unique([data.organiser].concat(data.attendees), 'email');\n        data.notify_users = [data.organiser.email];\n        data.room_ids = data.space_list.map(space => space.email);\n        data.old_date = this.date;\n        if (data.id) {\n            data.from_room = this.space ? this.space.email : '';\n        }\n        delete data.space_list;\n        delete data.date;\n        delete data.duration;\n        delete data.display;\n        delete data.email;\n        delete data.name;\n        return data;\n    }\n}\n","import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs';\n\nimport {\n    padZero,\n    humaniseDuration,\n    timeFormatString,\n} from '../../../shared/utilities/general.utilities';\n\nimport { generateMockUser } from '../users/user.utilities';\nimport { Booking } from './booking.class';\nimport { User } from '../users/user.class';\nimport { Space } from '../spaces/space.class';\nimport { CateringOrder } from '../catering/catering-order.class';\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { AvailableBookingFields } from 'src/app/shared/utilities/settings.interfaces';\nimport { BookingRule, SpaceCheckOptions, SpaceRules, SpaceRuleOptions } from './booking.interfaces';\nimport { validateEndTime } from 'src/app/shared/utilities/validation.utilities';\n\nimport * as faker from 'faker';\nimport * as dayjs from 'dayjs';\n\nconst MINUTE = 1;\nconst HOUR = 60;\nconst DAY = 24 * HOUR;\nconst WEEK = 7 * DAY;\nconst MONTH = 30 * DAY;\n\nconst DURATION_MAP: { [duration: string]: number } = {\n    month: MONTH,\n    months: MONTH,\n    week: WEEK,\n    weeks: WEEK,\n    day: DAY,\n    days: DAY,\n    hour: HOUR,\n    hours: HOUR,\n    minute: MINUTE,\n    minutes: MINUTE,\n};\n\nlet BOOKING_COUNT = 0;\nlet BOOKING_DATE = dayjs().hour(6).minute(0).subtract(1, 'd').startOf('m');\n\n/**\n * Set the initial time used for generating mock bookings\n * @param time New initial time as ms from UTC epoch\n */\nexport function setMockBookingStartDatetime(time: number) {\n    BOOKING_DATE = dayjs(time).startOf('m');\n}\n\n/**\n * Create mock raw API data for a booking\n * @param override Overrides the properties of the generated booking with it's own\n */\nexport function generateMockBooking(override: HashMap = {}) {\n    const id = `booking-${BOOKING_COUNT++}`;\n    BOOKING_DATE = BOOKING_DATE.add(Math.floor(Math.random() * 4 + 2) * 15, 'm');\n    const start = BOOKING_DATE.valueOf();\n    const duration = Math.floor(Math.random() * 4 + 2) * 15;\n    BOOKING_DATE = BOOKING_DATE.add(Math.floor(Math.random() * 4) * 15, 'm');\n    return {\n        id,\n        icaluid: padZero(Math.floor(Math.random() * 99999999), 8),\n        title: `${faker.commerce.productName()} Meeting`,\n        attendees: Array(Math.floor(Math.random() * 5 + 2))\n            .fill(0)\n            .map((i) => generateMockUser()),\n        organiser: generateMockUser(),\n        start_epoch: dayjs(start).unix(),\n        end_epoch: dayjs(start).add(duration, 'm').unix(),\n        description: faker.lorem.paragraph(),\n        notes: [{ type: 'other', message: faker.lorem.paragraph() }],\n        location: faker.address.city(),\n        has_catering: Math.floor(Math.random() * 34567) % 3 === 0,\n        catering: [],\n        room_ids: [],\n        ...override,\n    };\n}\n\nexport interface IBookingSlot {\n    start: number;\n    end: number;\n}\n\n/**\n * Generate a list of free time slots between the given bookings\n * @param list List of bookings to find slots between\n * @param min_size Minimum length of a free slot in minutes\n */\nexport function getFreeBookingSlots(list: Booking[], min_size: number = 30): IBookingSlot[] {\n    /* istanbul ignore else */\n    if (!list) {\n        return [\n            {\n                start: 0,\n                end: dayjs().startOf('m').valueOf() * 10,\n            },\n        ];\n    }\n    const slots: IBookingSlot[] = [];\n    let start = dayjs(0);\n    list.sort((a, b) => a.date - b.date);\n    for (const booking of list) {\n        const bkn_start = dayjs(booking.date);\n        const bkn_end = bkn_start.add(booking.duration, 'm');\n        if (bkn_start.isAfter(start)) {\n            const diff = Math.abs(bkn_start.diff(start, 'm'));\n            /* istanbul ignore else */\n            if (diff >= min_size) {\n                slots.push({ start: start.valueOf(), end: bkn_start.valueOf() });\n            }\n            start = bkn_end;\n        } else if (start.startOf('m').valueOf() === bkn_start.startOf('m').valueOf()) {\n            start = bkn_end;\n        }\n    }\n    slots.push({\n        start: start.valueOf(),\n        end: dayjs().startOf('m').valueOf() * 10,\n    });\n    return slots;\n}\n\n/**\n * Get the next free time slot from the given bookings\n * @param list List of bookings to find the next slot\n * @param date Date to find next slot after in ms since UTC epoch\n * @param min_size Minimum length of the free slot in minutes\n */\nexport function getNextFreeBookingSlot(\n    list: Booking[],\n    date: number = dayjs().valueOf(),\n    min_size: number = 30\n): IBookingSlot {\n    const slots = getFreeBookingSlots(list, min_size);\n    const time = dayjs(date).startOf('m').second(1);\n    for (const block of slots) {\n        const start = dayjs(block.start).startOf('m');\n        const end = dayjs(block.end).startOf('m');\n        if (start.isAfter(time, 's')) {\n            return block;\n        } else if (time.isBefore(end, 's')) {\n            const duration = end.diff(time, 'm');\n            /* istanbul ignore else */\n            if (duration >= min_size) {\n                return block;\n            }\n        }\n    }\n    return slots[slots.length - 1];\n}\n\n/**\n * Generate form fields for the given booking\n * @param booking Booking to generate form for\n * @param current_user Current user of the system to default as the host\n */\nexport function generateBookingForm(\n    booking: Booking,\n    current_user: User,\n    use_fields: AvailableBookingFields[]\n): FormGroup {\n    if (!booking) {\n        throw Error('No booking passed');\n    }\n    if (!current_user) {\n        current_user = {} as any;\n    }\n    const fields: HashMap<FormControl> = {\n        id: new FormControl(booking.id || ''),\n        space_list: new FormControl(booking.space_list, []),\n        date: new FormControl(booking.date, [Validators.required]),\n        duration: new FormControl(booking.duration),\n        organiser: new FormControl(booking.organiser || current_user, [Validators.required]),\n        attendees: new FormControl(booking.attendees, []),\n        title: new FormControl(booking.title || '', [Validators.required]),\n        type: new FormControl(booking.type),\n        body: new FormControl(booking.body),\n        notes: new FormControl(booking.notes),\n        equipment_codes: new FormControl(booking.equipment_codes),\n        expected_attendees: new FormControl(booking.expected_attendees),\n        catering: new FormControl(\n            booking.catering.map(\n                (order) => new CateringOrder({ ...order, booking_date: booking.date })\n            )\n        ),\n        recurrence: new FormControl(booking.recurrence),\n        all_day: new FormControl(!!booking.all_day),\n        has_catering: new FormControl(!!booking.has_catering),\n        needs_space: new FormControl(true),\n    };\n    fields.duration.setValidators([Validators.required, validateEndTime(fields.date)]);\n    /* istanbul ignore else */\n    if (booking.id) {\n        fields.organiser.disable();\n        /* istanbul ignore else */\n        if (dayjs(booking.date).isBefore(dayjs(), 'm')) {\n            fields.date.disable();\n        }\n    }\n    const simplified_fields = [\n        'id',\n        'space_list',\n        'space_ids',\n        'notes',\n        'equipment_codes',\n        'expected_attendees',\n        'organiser_email',\n        ...use_fields,\n    ].reduce((map, key) => {\n        /* istanbul ignore else */\n        if (fields[key]) {\n            map[key] = fields[key];\n        }\n        return map;\n    }, {});\n    // Generate form group for booking item\n    const form = new FormGroup(simplified_fields);\n    // Listen for changes on the fields and update booking\n    if (form && booking) {\n        let subs: HashMap<Subscription> = {};\n        Object.keys(form.controls).forEach((key: any) => {\n            if (booking.hasOwnProperty(key)) {\n                subs[`change_${key}`] = form.controls[key].valueChanges.subscribe((value) => {\n                    booking.storePendingChange(key, value);\n                });\n            }\n        });\n        subs.booking = booking.changeEvents.subscribe((event) => {\n            /* istanbul ignore else */\n            if (event.type === 'item_saved') {\n                for (const key in subs) {\n                    /* istanbul ignore else */\n                    if (subs[key] instanceof Subscription) {\n                        subs[key].unsubscribe();\n                    }\n                }\n            }\n        });\n    }\n    return form;\n}\n\n/**\n * Get booking rules for the given user and space\n * @param user User to determine applicable rules\n * @param space Space to get rules for\n * @param time Booking start time in ms since UTC epoch\n * @param rules List of booking rules for the building\n */\nexport function rulesForSpace(options: SpaceRuleOptions): SpaceRules {\n    if (!options) {\n        throw Error('Options are needed to check for rule matches');\n    }\n    const space_rules_for_user: SpaceRules = {\n        auto_approve: true,\n        hide: true,\n    };\n    /* istanbul ignore else */\n    if (options.space) {\n        for (const type in options.rules) {\n            if (\n                options.rules.hasOwnProperty(type) &&\n                options.rules[type] instanceof Array &&\n                options.space.zones.find((zone) => zone === type)\n            ) {\n                for (const rule_block of options.rules[type]) {\n                    /* istanbul ignore else */\n                    if (\n                        checkRules({\n                            user: options.user,\n                            space: options.space,\n                            time: options.time,\n                            recurr_end: options.recurr_end,\n                            duration: options.duration,\n                            rules: rule_block.conditions,\n                        })\n                    ) {\n                        const ruleset = rule_block.rules;\n                        const conditions = rule_block.conditions;\n                        space_rules_for_user.hide = false;\n                        /* istanbul ignore else */\n                        if (conditions.max_length) {\n                            space_rules_for_user.max_length = stringToMinutes(\n                                conditions.max_length as string\n                            );\n                        }\n                        /* istanbul ignore else */\n                        if (conditions.min_length) {\n                            space_rules_for_user.min_length = stringToMinutes(\n                                conditions.min_length as string\n                            );\n                        }\n                        // NOTE: use max_length in conditions instead of book_length in rules\n                        // if (ruleset.book_length) {\n                        //     space_rules_for_user.max_length = stringToMinutes(ruleset.book_length as string);\n                        // }\n                        /* istanbul ignore else */\n                        if (ruleset.auto_approve !== undefined) {\n                            space_rules_for_user.auto_approve = ruleset.auto_approve;\n                        }\n                        break;\n                    }\n                }\n            }\n            /* istanbul ignore else */\n            if (!space_rules_for_user.hide) {\n                break;\n            }\n        }\n    }\n    return space_rules_for_user;\n}\n\n/**\n * Check if user matches the given ruleset\n * @param user User to determine applicable rules\n * @param space Space to get rules for\n * @param time Booking start time in ms since UTC epoch\n * @param rules List of booking rules for the building\n */\nfunction checkRules(options: SpaceCheckOptions): boolean {\n    /* istanbul ignore else */\n    if (options.rules) {\n        const time = dayjs(options.time);\n        const recurr = options.recurr_end ? dayjs(options.recurr_end) : dayjs();\n        const count = Object.keys(options.rules).length;\n        let matches = 0;\n        for (const key of Object.keys(options.rules)) {\n            let counter = 0;\n            const condition: string[] =\n                options.rules[key] instanceof Array\n                    ? (options.rules[key] as [])\n                    : [options.rules[key] as string];\n            switch (key) {\n                case 'groups':\n                    /* istanbul ignore else */\n                    if (options.user && options.user.groups) {\n                        counter = 0;\n                        condition.forEach((i) =>\n                            options.user.groups.find((j) => j === i) ? counter++ : null\n                        );\n                        /* istanbul ignore else */\n                        if (counter > 0) {\n                            matches++;\n                        }\n                    }\n                    break;\n                case 'locations':\n                    /* istanbul ignore else */\n                    if (options.user && options.user.location) {\n                        counter = 0;\n                        condition.forEach((i) =>\n                            (options.user.last_location.name || '').indexOf(i) >= 0\n                                ? counter++\n                                : null\n                        );\n                        /* istanbul ignore else */\n                        if (counter >= options.rules[key].length) {\n                            matches++;\n                        }\n                    }\n                    break;\n                case 'is_before':\n                    /* istanbul ignore else */\n                    if (options.time) {\n                        const duration = stringToMinutes(condition[0]);\n                        const check = dayjs().add(duration, 'm');\n                        let match = time.isBefore(check, 'm');\n                        /* istanbul ignore else */\n                        if (recurr) {\n                            match = match && recurr.isBefore(check, 'm');\n                        }\n                        matches += match ? 1 : 0;\n                    }\n                    break;\n                case 'is_after':\n                    /* istanbul ignore else */\n                    if (options.time) {\n                        const duration = stringToMinutes(condition[0]);\n                        const check = dayjs().add(duration, 'm');\n                        time.isAfter(check, 'm') ? matches++ : '';\n                    }\n                    break;\n                case 'min_length':\n                    /* istanbul ignore else */\n                    if (options.duration) {\n                        durationGreaterThanOrEqual(options.duration, condition[0]) ? matches++ : '';\n                    }\n                    break;\n                case 'max_length':\n                    /* istanbul ignore else */\n                    if (options.duration) {\n                        durationGreaterThanOrEqual(condition[0], options.duration) ? matches++ : '';\n                    }\n                    break;\n            }\n        }\n        return matches >= count;\n    }\n    return false;\n}\n\n/**\n * Get minimum duration from ruleset in minutes\n * Default to 5min\n */\nexport function getMinLength(rule_list: HashMap<BookingRule[]>): number {\n    return Object.values(rule_list).reduce((min, block) => {\n        const min_block = block.reduce((min_length, el) => {\n            if (el.conditions.min_length && stringToMinutes(el.conditions.min_length) > min) {\n                return stringToMinutes(el.conditions.min_length);\n            } else {\n                return min_length;\n            }\n        }, 5);\n        if (min_block > min) {\n            return min_block;\n        } else {\n            return min;\n        }\n    }, 5) as number;\n}\n\n/**\n * Whether the first input is greater than the last. Converts duration strings into minutes\n * @param duration_1 First input can be a number in minutes or a duration string e.g. `1 hour`\n * @param duration_2 Second input can be a number in minutes or a duration string e.g. `30 minutes`\n */\nexport function durationGreaterThanOrEqual(\n    duration_1: string | number,\n    duration_2: string | number\n) {\n    const first: number = typeof duration_1 === 'string' ? stringToMinutes(duration_1) : duration_1;\n    const second: number =\n        typeof duration_2 === 'string' ? stringToMinutes(duration_2) : duration_2;\n    return first >= second;\n}\n\n/**\n * Conver time string into minutes\n * @param str timestring e.g. `'1 day'`, `'15 minutes'`, `'2 weeks'`\n */\nexport function stringToMinutes(str: string): number {\n    const parts = str.split(' ');\n    return +parts[0] * DURATION_MAP[parts[1]];\n}\n\n/**\n * Get current status within bookings\n * @param bookings List of bookings\n * @param host Host of the new event\n * @param date Datetime of the new event\n */\nexport function statusFromBookings(\n    bookings: Booking[],\n    bookable: boolean,\n    requestable: boolean,\n    date: number = dayjs().valueOf()\n) {\n    const free_slots = getFreeBookingSlots(bookings);\n    const now = dayjs(date);\n    const next_free_slot = free_slots.find((slot) => {\n        const start = dayjs(slot.start);\n        const end = dayjs(slot.end);\n        return start.isAfter(now) || (now.isAfter(start, 's') && now.isBefore(end, 'm'));\n    });\n    const start = dayjs(next_free_slot.start);\n    const end = dayjs(next_free_slot.end);\n    const currently_free = now.isAfter(start, 's') && now.isBefore(end, 'm');\n    const time_until_next_block = humaniseDuration(\n        currently_free ? end.diff(now, 'm') : start.diff(now, 'm'),\n        true\n    );\n    const free_tomorrow = !currently_free && !start.isSame(now, 'd');\n    const free_today = currently_free && !end.isSame(now, 'd');\n    return {\n        status: !bookable\n            ? 'Not Bookable'\n            : currently_free\n            ? requestable\n                ? 'Available by Request'\n                : 'Available'\n            : 'Meeting in Progress',\n        available_until: free_today\n            ? 'No meetings today'\n            : currently_free\n            ? `Free until ${end.format(timeFormatString())}(${time_until_next_block})`\n            : free_tomorrow\n            ? 'Unavailable today'\n            : `Free at ${start.format(timeFormatString())}(${time_until_next_block})`,\n    };\n}\n","\nimport { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\n\nimport { BaseAPIService } from '../base.service';\nimport { Booking } from './booking.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\nimport { ServiceManager } from '../service-manager.class';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class BookingsService extends BaseAPIService<Booking> {\n    constructor(protected _composer: ComposerService) {\n        super(_composer);\n        ServiceManager.setService(Booking, this);\n        this._name = 'Bookings';\n        this._api_route = 'bookings';\n        this._compare = (a, b) => !(a.id || '').localeCompare(b.id) || !(a.icaluid || '').localeCompare(b.icaluid);\n    }\n\n    public accept(id: string, fields?: HashMap) {\n        return this.task(id, 'accept', fields);\n    }\n\n    public decline(id: string, fields?: HashMap) {\n        return this.task(id, 'concierge_decline', fields);\n    }\n\n    protected process(raw_data: HashMap): Booking {\n        return new Booking(raw_data);\n    }\n}\n","import { CateringItem } from \"./catering-item.class\";\nimport { HashMap } from \"../../../shared/utilities/types.utilities\";\n\nexport class CateringCategory extends CateringItem {\n    /** List of items associated with the category */\n    public readonly items: readonly CateringItem[];\n    /** Whether child items are part of a package */\n    public readonly package: boolean;\n    /** List of zone ids associated with the category */\n    public readonly zones: readonly string[];\n\n    public get can_order_anytime(): boolean {\n        return (\n            this.order_anytime ||\n            this.items.reduce(\n                (anytime, item) => anytime || item.can_order_anytime,\n                false\n            )\n        );\n    }\n\n    constructor(data: HashMap) {\n        super(data);\n        this.items = (data.items || []).map(item =>\n            item.items ? new CateringCategory(item) : new CateringItem(item)\n        );\n        this.package = data.package === 'true' || data.package === true;\n        this.zones = data.zones && data.zones.length ? [ ...data.zones ] : [];\n        (this as any).must_select = this.must_select || this.items.length;\n        (this as any).order_anytime = !!data.order_anytime && this.package;\n    }\n\n    /**\n     * Convert class object into plain object\n     */\n    public toJSON(this: CateringItem): HashMap {\n        const obj = super.toJSON();\n        obj.items = obj.items.map((item: CateringItem) => item.toJSON());\n        obj.order_anytime = !!obj.order_anytime && obj.package;\n        return obj;\n    }\n}\n","import { HashMap } from \"../../../shared/utilities/types.utilities\";\n\nexport interface CateringAvailability {\n    /** Month of the year that the item starts being available */\n    readonly from_month: number;\n    /** Month of the year that the item ends being available */\n    readonly to_month: number;\n}\n\nexport class CateringItem {\n    /** Unique ID of the catering item */\n    public readonly id: string;\n    /** Display name of the catering item */\n    public readonly name: string;\n    /** Description of the item */\n    public readonly description: string;\n    /** URL to the image associated with the item */\n    public readonly image_path: string;\n    /** Type of catering item */\n    public readonly catering_type: string;\n    /** Availability of the item */\n    public readonly available: CateringAvailability;\n    /** Time in hours that is needed to prepare the item beforehand */\n    public readonly prior_notice: number;\n    /** Cost of the item without decimals */\n    public readonly unit_price: number;\n    /** Cost of the item without decimals */\n    public readonly supplier_cost: number;\n    /** Minimum number this item allowed in an order */\n    public readonly minimum_quantity: number;\n    /** Maximum number this item allowed in an order */\n    public readonly maximum_quantity: number;\n    /** List of categories that the item is contained in */\n    public readonly parent_categories: readonly string[];\n    /** Allegen information associated with the item */\n    public readonly allergy: string;\n    /** Whether the supply of this item has run out */\n    public readonly out_of_stock: boolean;\n    /** Whether item can be ordered within the time limit set by the building */\n    public readonly order_anytime: boolean;\n    /** Number of child items that must be selected as part of the package */\n    public readonly must_select: number;\n    /** Number of this item in the assoicated order */\n    private _amount = 0;\n    /** Unique ID of the catering item */\n    private instance_id: string;\n\n\n    public get can_order_anytime(): boolean {\n        return this.order_anytime;\n    }\n\n    /** Number of this item in the assoicated order */\n    public get amount(): number {\n        return this._amount || 0;\n    }\n\n    /** Total cost of the amount of items set */\n    public get total(): number {\n        return (this._amount * this.unit_price) || 0;\n    }\n\n    constructor(data: HashMap) {\n        this.instance_id = `item-${Math.floor(Math.random() * 999_999_999)}`\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.available = {\n            from_month: (data.available ? data.available.from_month : data.available_from) || -1,\n            to_month: (data.available ? data.available.to_month : data.available_to) || -1,\n        };\n        this.description = data.description || '';\n        this.prior_notice = data.prior_notice || data.notice;\n        this.unit_price = data.unit_price || data.price || 0;\n        this.supplier_cost = data.supplier_cost;\n        this.minimum_quantity = Math.max(0, data.minimum_quantity || 0);\n        this.maximum_quantity = Math.max(1, data.maximum_quantity || 999);\n        this.parent_categories = data.category_ids || data.parent_categories || data.categories;\n        this.order_anytime = !!data.order_anytime;\n        this.image_path = data.image_path || '';\n        this.catering_type = data.catering_type;\n        this.must_select = data.must_select || 0;\n        this.out_of_stock = !!data.out_of_stock || data.hide;\n        this._amount = data._amount || data.amount || 0;\n        this.allergy = data.allergy;\n    }\n\n    public setAmount(amount: number = 0): void {\n        if (amount <= this._amount) {\n            if (amount < this.minimum_quantity) {\n                amount = 0;\n            }\n        } else {\n            if (amount < this.minimum_quantity) {\n                amount = this.minimum_quantity;\n            }\n        }\n        this._amount = Math.max(0, Math.min(this.maximum_quantity, amount));\n    }\n\n    /**\n     * Increase amount of the item the order\n     * @param amount Amount to increase by\n     */\n    public addToOrder(amount: number = 1) {\n        amount = Math.max(1, amount);\n        this._amount += amount;\n        if (this._amount < 0) {\n            this._amount = 0;\n        } else if (this._amount < this.minimum_quantity) {\n            this._amount = this.minimum_quantity;\n        } else if (this._amount > this.maximum_quantity) {\n            this._amount = this.maximum_quantity;\n        }\n    }\n\n    /**\n     * Decrease amount of the item the order\n     * @param amount Amount to decrease by\n     */\n    public removeFromOrder(amount: number = 1) {\n        amount = Math.max(1, amount);\n        this._amount -= amount;\n        if (this._amount < 0) {\n            this._amount = 0;\n        } else if (this._amount < this.minimum_quantity) {\n            this._amount = 0;\n        }\n    }\n\n    /**\n     * Convert class object into plain object\n     */\n    public toJSON(this: CateringItem): HashMap {\n        const obj: any = { ...this };\n        // Remove local private members\n        delete obj._changes;\n        delete obj._server_names;\n        // Convert remaining members to be public\n        obj.price = obj.unit_price;\n        obj.hide = obj.out_of_stock;\n        obj.categories = obj.parent_categories;\n        const keys = Object.keys(obj);\n        for (const key of keys) {\n            if (key[0] === '_') {\n                const new_key = key.substr(1);\n                obj[new_key] = obj[key];\n                delete obj[key];\n            } else if (obj[key] === undefined) {\n                delete obj[key];\n            }\n        }\n        return obj;\n    }\n}\n","import { CateringItem } from './catering-item.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\n\nimport { CateringCategory } from './catering-category.class';\nimport { Booking } from '../bookings/booking.class';\n\nimport * as dayjs from 'dayjs';\n\nexport type CateringOrderMutableProperties =\n    | 'items'\n    | 'location_id'\n    | 'location'\n    | 'delivery_time'\n    | 'charge_code'\n    | 'notes'\n    | 'status';\n\nexport type CateringOrderStatus = 'accepted' | 'preparing' | 'ready' | 'delivered' | 'cancelled';\n\nexport class CateringOrder {\n    /** Booking associated with the order */\n    public booking: Booking;\n    /** Whether the order status change is loading */\n    public loading: boolean;\n    /** Unique ID for the catering order */\n    readonly id: string;\n    /** Unique ID for the catering order */\n    readonly booking_id: string;\n    /** Number of minutes after the start of the associated meeting to delivery the order */\n    readonly booking_date: number = dayjs()\n        .startOf('m')\n        .valueOf();\n    /** Number of minutes after the start of the associated meeting to delivery the order */\n    readonly delivery_time: number = 0;\n    /** ID of the location to deliver the items to */\n    readonly location_id: string = '';\n    /** Display text for the location to deliver the items to */\n    readonly location: string = '';\n    /** Status of the catering order */\n    readonly status: CateringOrderStatus;\n    /** Whether items in the order need to be prepared in the kitchen */\n    readonly kitchen: boolean;\n    /** Whether items in the order are in the pantry */\n    readonly pantry: boolean;\n    /** List of items */\n    readonly items: readonly (CateringItem | CateringCategory)[] = [];\n    /** Creation time of the order */\n    readonly created_at: number;\n    /** Charge code associated with the order */\n    readonly charge_code: string;\n    /** Notes associated with the order */\n    readonly notes: string;\n    /** Mapping of properties to their changes */\n    private _changes: HashMap = {};\n    /** Map of local property names to server ones */\n    protected _server_names: HashMap<string> = {};\n    /** Currency code for the location of the order */\n    public symbol: string;\n    /** Whether the is an error with the order */\n    public error: boolean;\n\n    constructor(data: HashMap) {\n        this.id = data.id || `order-${Math.floor(Math.random() * 999_999_999)}`;\n        this.booking = data.booking;\n        this.delivery_time = data.delivery_time || data.start || 0;\n        this.booking_date = data.booking_date;\n        this.location_id = data.location_id || data.location;\n        this.location = data.location || '';\n        this.status = data.status || 'accepted';\n        this.charge_code = data.charge_code || data.code;\n        this.notes = data.notes;\n        this.kitchen = data.kitchen instanceof Array ? !!data.kitchen.length : data.kitchen;\n        this.pantry = data.pantry instanceof Array ? !!data.pantry.length : data.pantry;\n        this.symbol = data.symbol || 'USD';\n        this.items = (data.items || [])\n            .map(item => (item.items ? new CateringCategory(item) : new CateringItem(item)))\n            .filter(item => !!item.amount);\n    }\n\n    /** Mapping of properties to their changes */\n    public get changes(): HashMap<any> {\n        return { ...this._changes } || {};\n    }\n\n    /** Display string for the types of items in the order */\n    public get type(): string {\n        let type = '';\n        /* istanbul ignore else */\n        if (this.kitchen) type += 'Kitchen';\n        /* istanbul ignore else */\n        if (this.pantry) {\n            /* istanbul ignore else */\n            if (type) type += ' + ';\n            type += 'Pantry';\n        }\n        return type;\n    }\n\n    /** Total cost of the order */\n    public get total(): number {\n        return this.items.reduce((total, item) => total + (item.total || 0), 0);\n    }\n\n    /** Total number of items in the order */\n    public get item_count(): number {\n        return this.items.reduce((total, item) => total + (item.amount || 0), 0);\n    }\n\n    /** Display string for the delivery time of the order */\n    public get deliver_at_time(): string {\n        const date = this.booking ? this.booking.date : this.booking_date;\n        return dayjs(date)\n            .add(this.delivery_time, 'm')\n            .format('h:mm A');\n    }\n\n    /** Display string for the delivery date of the order */\n    public get deliver_on_date(): string {\n        const date = this.booking ? this.booking.date : this.booking_date;\n        return dayjs(date)\n            .add(this.delivery_time, 'm')\n            .format('DD MMM YYYY');\n    }\n\n    /** Whether there are any pending changes to be saved */\n    public get has_changes(): boolean {\n        return !!Object.keys(this._changes).length;\n    }\n\n    /**\n     * Store pending changes for the given property\n     * @param name Property to update value\n     * @param value New value to save for property\n     */\n    public storePendingChanges(name: CateringOrderMutableProperties, value: any): void {\n        this._changes[name] = value;\n    }\n\n    /** Clear any changes waiting to be saved */\n    public clearPendingChanges() {\n        delete this._changes;\n        this._changes = {};\n    }\n\n    /**\n     * Convert class object into plain object\n     */\n    public toJSON(this: CateringOrder, with_changes: boolean = true): HashMap {\n        const obj: any = { ...this };\n        // Remove local private members\n        delete obj._changes;\n        delete obj._server_names;\n        // Remove local public members\n        delete obj.booking;\n        delete obj.loading;\n\n        // Convert remaining members to be public\n        const keys = Object.keys(obj);\n        for (const key of keys) {\n            if (key[0] === '_') {\n                const new_key = this._server_names[key.substr(1)] || key.substr(1);\n                obj[new_key] = obj[key];\n                delete obj[key];\n            } else if (obj[key] === undefined) {\n                delete obj[key];\n            }\n        }\n        obj.items = obj.items.map((item: CateringItem) => item.toJSON());\n        return with_changes ? { ...obj, ...this._changes } : obj;\n    }\n}\n","import { HashMap } from 'src/app/shared/utilities/types.utilities';\n\nimport { BuildingLevel } from '../organisation/level.class';\nimport { Organisation } from '../organisation/organisation.class';\nimport { ServiceManager } from '../service-manager.class';\n\nexport class MapLocation {\n    /** ID of the element on the associated map */\n    public readonly id?: string;\n    /** Name of the location */\n    public readonly name?: string;\n    /** X coordinate of the location */\n    public readonly x?: number;\n    /** Y coordinate of the location */\n    public readonly y?: number;\n    /** Level details for the location */\n    public readonly level: BuildingLevel;\n    /** Whether the position is fixed */\n    public readonly fixed: boolean;\n    /** Accuracy of the location when not fixed */\n    public readonly confidence?: number;\n    /** Whether location is at a desk */\n    public readonly at_desk?: boolean;\n    /** Whether location is set */\n    public readonly empty: boolean;\n    /** Service for managing buildings */\n    protected get _service() {\n        return ServiceManager.serviceFor(MapLocation);\n    }\n\n    /** Display string for the building and level of the location */\n    public get display(): string {\n        const service = ServiceManager.serviceFor(Organisation);\n        if (!service) {\n            return this.level.name;\n        }\n        const bld = service.buildings.find((bld) => bld.id === this.level.building_id);\n        return bld ? `${bld.name}, ${this.level.name}` : this.level.name;\n    }\n\n    /** Whether location is in a different building from the active one */\n    public get in_another_building(): boolean {\n        const service = ServiceManager.serviceFor(Organisation);\n        return service && service.building.id !== this.level.building_id;\n    }\n\n    constructor(raw_data: HashMap) {\n        this.id = raw_data.id || raw_data.map_id || raw_data.desk_id;\n        this.name = raw_data.name || '';\n        this.x = raw_data.x\n            ? Math.floor(this.normalise(raw_data.x, raw_data.x_max || 10000) * 10000)\n            : null;\n        this.y = raw_data.y\n            ? Math.floor(this.normalise(raw_data.y, raw_data.x_max || 10000) * 10000)\n            : null;\n        const service = ServiceManager.serviceFor(Organisation);\n        this.level =\n            raw_data.level instanceof BuildingLevel\n                ? raw_data.level\n                : service\n                ? service.levelWithID(raw_data.level)\n                : new BuildingLevel(raw_data.level);\n        this.fixed = this.x === null && this.y === null;\n        this.confidence = Math.max(5, Math.min(15, raw_data.confidence || 0));\n        this.at_desk = this.id && this.id.indexOf('area-') === 0;\n        this.empty = !(this.name && this.level && (this.id || this.x || this.y));\n    }\n\n    /** Normalise the given value within the max */\n    private normalise(value: number, max: number): number {\n        return value / (max * 1.0);\n    }\n}\n","import { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { randomInt } from 'src/app/shared/utilities/general.utilities';\n\nexport function generateMockLocation(overrides: HashMap, fixed_locations: string[], maps: string[]): HashMap {\n    const fixed = randomInt(999_999_999) % 2 === 0;\n    if (fixed && (!overrides || overrides.fixed)) {\n        return {\n            map_id: fixed_locations[randomInt(fixed_locations.length)],\n            level: maps[randomInt(maps.length)],\n            ...overrides\n        }\n    } else {\n        return {\n            x: randomInt(900, 100),\n            x_max: 1000,\n            y: randomInt(500, 100),\n            level: maps[randomInt(maps.length)],\n            confidence: randomInt(30),\n            ...overrides\n        }\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport { HashMap, Identity } from '../../../shared/utilities/types.utilities';\nimport { getItemWithKeys } from '../../../shared/utilities/general.utilities';\nimport { BuildingLevel } from './level.class';\nimport { BookingRule } from '../bookings/booking.interfaces';\nimport { ServiceManager } from '../service-manager.class';\n\nexport interface IBuildingRoleUser {\n    name: string;\n    email: string;\n    phone: string;\n}\n\nexport interface LockerMap {\n    [zone: string]: {\n        [area: string]: {\n            [type: string]: (string | boolean)[][];\n        };\n    };\n}\n\nexport interface ICoordinates {\n    longitude: number;\n    latitude: number;\n}\n\nexport interface LevelFeature {\n    id: string;\n    level_id: string;\n    name: string;\n}\n\nexport interface BookingRuleDetails {\n    /** List of booking rules details for the building */\n    readonly rules: readonly string[];\n    /** Custom booking rules for the map */\n    readonly map_rules?: readonly string[];\n    /** Contact email address for the building */\n    readonly contact?: string;\n    /** Information string to display before the rule listings */\n    readonly info?: string;\n}\n\nexport class Building extends BaseDataClass {\n    /** Service for managing buildings */\n    protected get _service() {\n        return ServiceManager.serviceFor(Building);\n    }\n    /** Engine Zone ID for the building */\n    public readonly zone_id: string;\n    /** Organisation Code for the building */\n    public readonly code: string;\n    /** Geographical address of the building */\n    public readonly address: string;\n    /** Details about the booking rules for the building */\n    public readonly booking_details: BookingRuleDetails;\n    /** Details about the booking rules for the building */\n    public readonly booking_rules: HashMap<readonly BookingRule[]>;\n    /** Number of hour before a booking catering is restricted */\n    public readonly catering_restricted_from: number;\n    /** Currency code for the country assoicated with the building */\n    public readonly currency: string;\n    /** Map of fields that are required on the form */\n    public readonly required: HashMap<boolean>;\n    /** IANA timezone database string for the location the building resides  */\n    public readonly timezone: string;\n    /** Whether catering is available in this building */\n    public readonly has_catering: boolean;\n    /** ID of the system used for the holding bay */\n    public readonly holding_bay: string;\n    /** ID of the system used for standalone visitors bookings */\n    public readonly visitor_space: string;\n    /** List of zones to determine sort order spaces */\n    public readonly sort_order: string[];\n    /** Searchable map features */\n    public readonly searchables: readonly LevelFeature[];\n    /** List of available extras for the building */\n    private _extras: Identity[];\n    /** List of available extra equipment for loan at the building */\n    private _loan_items: Identity[];\n    /** List of available levels for the building */\n    private _levels: BuildingLevel[];\n    /** Map of custom settings for the building */\n    private _settings: HashMap;\n    /** Map of roles and list of the associated users */\n    private _roles: HashMap<IBuildingRoleUser[]>;\n    /** Map of the locker ID arrays */\n    private _lockers: LockerMap;\n    /** Map of important system ids for the building */\n    private _systems: HashMap<string>;\n    /** Map of important phone numbers for the building */\n    private _phone_numbers: HashMap<string>;\n    /** Globe coordiates for the build */\n    private _location: ICoordinates;\n    /** List of zones associated with the building */\n    private _zones: string[];\n\n    constructor(raw_data: HashMap) {\n        super(raw_data);\n        const settings = raw_data.settings || {};\n        const disc_info = settings.discovery_info || settings;\n        this.zone_id = raw_data.zone_id || raw_data.zone;\n        this._extras = (raw_data.extras || disc_info.extras || []).map(i => ({ id: i.extra_id || i.id, name: i.extra_name || i.name }));\n        this._loan_items = (raw_data.loan_items || disc_info.loan_items  || []).map(i => ({ id: i.extra_id || i.id, name: i.extra_name || i.name }));\n        this._levels = (raw_data.levels || disc_info.levels  || []).map(i => new BuildingLevel({ ...i, building_id: this.id }));\n        this._roles = raw_data.roles || disc_info.roles || {};\n        this._lockers = raw_data.lockers || raw_data.locker_structure || disc_info.locker_structure || {};\n        this._systems = raw_data.systems || disc_info.systems || {};\n        this._settings = settings;\n        this._phone_numbers = raw_data.phone_numbers || disc_info.phone_numbers || {};\n        this._location = raw_data.location || disc_info.location || { longitude: null, latitude: null };\n        const searchables = [];\n        if (raw_data.neighbourhoods) {\n            for (const lvl in raw_data.neighbourhoods) {\n                if (raw_data.neighbourhoods.hasOwnProperty(lvl)) {\n                    const lvl_features = raw_data.neighbourhoods[lvl] || {};\n                    for (const feature in lvl_features) {\n                        if (lvl_features.hasOwnProperty(feature)) {\n                            searchables.push({\n                                id: lvl_features[feature],\n                                name: feature,\n                                level_id: lvl\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        this.searchables = searchables;\n        this.code = raw_data.code || disc_info.code || settings.code || '';\n        this.address = raw_data.address || disc_info.address || settings.address || '';\n        this.booking_details = raw_data.booking_details || disc_info.booking_details || settings.booking_details || null;\n        this.booking_rules = raw_data.booking_rules || disc_info.booking_rules || settings.booking_rules || {};\n        this.catering_restricted_from = raw_data.catering_restricted_from || disc_info.catering_restricted_from || settings.catering_restricted_from || 0;\n        this.currency = raw_data.currency || disc_info.currency || settings.currency || 'USD';\n        this.required = raw_data.required || disc_info.required || settings.required || {};\n        this.timezone = raw_data.timezone || disc_info.timezone || settings.timezone || '';\n        this.has_catering = raw_data.has_catering || disc_info.has_catering || settings.has_catering || false;\n        this.holding_bay = raw_data.holding_bay || disc_info.holding_bay || settings.holding_bay || '';\n        this.visitor_space = raw_data.visitor_space || disc_info.visitor_space || settings.visitor_space || '';\n        this.sort_order = raw_data.sort_order || disc_info.sort_order || settings.sort_order || [];\n    }\n\n    /** List of available extras for the building */\n    public get extras(): Identity[] {\n        return [...(this._extras || [])];\n    }\n    /** List of available extras for the building */\n    public get loan_items(): Identity[] {\n        return [...(this._loan_items || [])];\n    }\n    /** List of available levels for the building */\n    public get levels(): BuildingLevel[] {\n        return [...(this._levels || [])];\n    }\n    /**\n     * Get a custom building setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        const keys = key.split('.');\n        const value = getItemWithKeys(keys, this._settings);\n        return value;\n    }\n\n    /**\n     * Get list of users with the associated role\n     * @param name Role to find users for\n     */\n    public role(name: string): IBuildingRoleUser[] {\n        return [...(this._roles[name] || [])];\n    }\n    /**\n     * Get list of the names of available user role lists\n     */\n    public get role_names(): string[] {\n        return Object.keys(this._roles).filter(i => this._roles.hasOwnProperty(i));\n    }\n    /** Map of the locker ID arrays */\n    public get lockers(): LockerMap {\n        return { ...(this._lockers || {}) };\n    }\n    /** Map of important system ids for the building */\n    public get systems(): HashMap<string> {\n        return { ...(this._systems || {}) };\n    }\n    /** Map of important phone numbers for the building */\n    public get phone_numbers(): HashMap<string> {\n        return { ...(this._phone_numbers || {}) };\n    }\n    /** Real coordinates */\n    public get location(): ICoordinates {\n        return { ...this._location };\n    }\n    /** List of zones associated with the building */\n    public get zones(): string[] {\n        return [...(this._zones || [])];\n    }\n\n    /**\n     * Get search map feature for the given level ID\n     * @param level_id ID of level to grab features for\n     */\n    public featuresForLevel(level_id: string): LevelFeature[] {\n        return (this.searchables || []).filter(i => i.level_id === level_id);\n    }\n\n    /**\n     * Building objects are readonly and cannot be changed\n     */\n    public async save(): Promise<Building> {\n        throw new Error('Building objects are readonly and cannot be changed');\n    }\n\n    /**\n     * Building objects are readonly and cannot be deleted\n     */\n    public async delete(): Promise<void> {\n        throw new Error('Building objects are readonly and cannot be deleted');\n    }\n}\n","import { HashMap } from 'src/app/shared/utilities/types.utilities';\n\n/** Building Level data */\nexport class BuildingLevel {\n    /** ID of the building level zone */\n    readonly id: string;\n    /** ID of the building zone associated with the level */\n    readonly building_id: string;\n    /** Name of the level */\n    readonly name: string;\n    /** Number or short identifier of the level */\n    readonly short_name: string;\n    /** Map URL for the level */\n    readonly map_url: string;\n    /** Usage type for the level */\n    readonly type: 'staff' | 'client' | 'any';\n    /** Setting for the level */\n    readonly settings: HashMap;\n\n    constructor(_data: HashMap = {}) {\n        this.id = _data.id || _data.level_id || '';\n        this.building_id = _data.bld_id || _data.building_id || '';\n        this.name = _data.name || _data.level_name || '';\n        const lower_name = this.name.toLowerCase();\n        const num = lower_name.indexOf('level') >= 0 ? lower_name.replace(/ ?level ?/gi, '') : lower_name.substr(0, 1).toUpperCase();\n        this.short_name = _data.short_name || num || '';\n        this.map_url = _data.map_url || '';\n        this.type = _data.type || _data.floor_type || 'any';\n        this.settings = _data.settings;\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\nimport { getItemWithKeys } from '../../../shared/utilities/general.utilities';\nimport { BaseAPIService } from '../base.service';\nimport { ServiceManager } from '../service-manager.class';\nimport { OrganisationService } from './organisation.service';\n\nexport class Organisation extends BaseDataClass {\n    /** Service for managing organisations */\n    protected get _service() {\n        return ServiceManager.serviceFor(Organisation);\n    }\n    /** Map of custom settings for the building */\n    private _settings: HashMap;\n\n    constructor(raw_data: HashMap) {\n        super(raw_data);\n        this._settings = raw_data.settings || {};\n    }\n\n    /**\n     * Get a custom building setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        const keys = key.split('.');\n        const value = getItemWithKeys(keys, this._settings);\n        return value;\n    }\n\n    /**\n     * Building objects are readonly and cannot be changed\n     */\n    public async save(): Promise<Organisation> {\n        throw new Error('Organisation objects are readonly and cannot be changed');\n    }\n\n    /**\n     * Building objects are readonly and cannot be deleted\n     */\n    public async delete(): Promise<void> {\n        throw new Error('Organisation objects are readonly and cannot be deleted');\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { ComposerService } from '@placeos/composer';\n\nimport { BaseAPIService } from '../base.service';\nimport { Organisation } from './organisation.class';\nimport { Building } from './building.class';\nimport {\n    HashMap,\n    ApplicationLoadingState,\n    Identity,\n} from '../../../shared/utilities/types.utilities';\nimport { BuildingLevel } from './level.class';\nimport { User } from '../users/user.class';\nimport { first } from 'rxjs/operators';\nimport { ApplicationService } from '../../app.service';\nimport { ServiceManager } from '../service-manager.class';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class OrganisationService extends BaseAPIService {\n    /** Organisation data for the application */\n    private _organisation: Organisation;\n    /** Actively displayed building */\n    private _active_building: string;\n\n    constructor(protected _composer: ComposerService, private _service: ApplicationService) {\n        super(_composer);\n        ServiceManager.setService(Organisation, this);\n        ServiceManager.setService(Building, this);\n        this._name = 'Organisation';\n        this._api_route = 'zones';\n        this.set('buildings', []);\n        this.set('active_building', null);\n        this._service.initialised.pipe(first((_) => _)).subscribe(() => this.init());\n    }\n\n    /**\n     * Add is not available on organisation service\n     */\n    public async add(form_data: HashMap, query_params?: HashMap): Promise<Organisation> {\n        throw new Error('Add is not available on the organisation service');\n    }\n\n    /**\n     * Update is not available on organisation service\n     */\n    public async update(\n        id: string,\n        form_data: HashMap,\n        query_params?: HashMap\n    ): Promise<Organisation> {\n        throw new Error('Update is not available on the organisation service');\n    }\n\n    /**\n     * Delete is not available on organisation service\n     */\n    public async delete(id: string): Promise<void> {\n        throw new Error('Delete is not available on the organisation service');\n    }\n\n    /**\n     * Get list of levels for the given building ID\n     * @param bld_id Building ID\n     */\n    public levels(bld_id: string): any[] {\n        return (this.buildings.find((i) => i.id === bld_id) || ({} as Building)).levels;\n    }\n\n    /**\n     * Get a setting from the organisation or active building\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string) {\n        return this.building.setting(key) || this._organisation.setting(key);\n    }\n\n    /** Active building */\n    public get building(): Building {\n        return this.buildings.find((i) => i.id === this._active_building);\n    }\n\n    /** List of types of spaces */\n    public get space_types(): Identity[] {\n        return this.get('space_types') || [];\n    }\n\n    public set building(bld: Building) {\n        if (bld instanceof Building) {\n            this._active_building = bld.id;\n        } else {\n            this._active_building = bld;\n        }\n        this.set('active_building', this.building);\n    }\n\n    /** List of buildings for the organisation */\n    public get buildings(): Building[] {\n        return this.get<Building[]>('buildings') || [];\n    }\n\n    /**\n     * Get list of available equipment\n     * @param id ID of the building to get the list from. i.e. Defaults to the active building\n     */\n    public getExtras(id: string, bld_id?: string) {\n        const bld = this.buildings.find((i) => i.id === bld_id) || this.building;\n        if (bld && id) {\n            return bld.extras.filter((i) => `${i.id}`.indexOf(id) >= 0);\n        }\n        return [];\n    }\n\n    /**\n     * Get the first level matching the list of given IDs\n     * @param ids List of ID to search with\n     */\n    public levelWithID(ids: string | string[]): BuildingLevel {\n        const list = ids instanceof Array ? ids : [ids];\n        const bld_list = this.buildings;\n        for (const id of list) {\n            for (const bld of bld_list) {\n                for (const lvl of bld.levels) {\n                    if (lvl.id === id) {\n                        return lvl;\n                    }\n                }\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Initialise service data\n     */\n    protected async load(): Promise<void> {\n        /* istanbul ignore else */\n        if (localStorage) {\n            this._active_building = localStorage.getItem(`${this._service.name}.building`);\n        }\n        const loading: ApplicationLoadingState = this._service.get('loading') || {};\n        loading.organisation = { message: 'Loading organisation data', state: 'loading' };\n        await this.loadOrganisation();\n        loading.organisation = { message: 'Loading organisation data', state: 'complete' };\n        loading.buildings = { message: 'Loading building data', state: 'loading' };\n        this._service.set('loading', loading);\n        await this.loadBuildings();\n        loading.buildings = { message: 'Loading building data', state: 'complete' };\n        loading.levels = { message: 'Loading building floor data', state: 'loading' };\n        this._service.set('loading', loading);\n        await this.loadLevels();\n        loading.levels = { message: 'Loading building floor data', state: 'complete' };\n        this._service.set('loading', loading);\n        loading.space_types = { message: 'Loading space type data', state: 'loading' };\n        this._service.set('loading', loading);\n        await this.loadSpaceTypes();\n        loading.space_types = { message: 'Loading space type data', state: 'complete' };\n        this._service.set('loading', loading);\n        const user_service = ServiceManager.serviceFor(User);\n        /* istanbul ignore else */\n        if (user_service) {\n            user_service\n                .listen<User>('current_user')\n                .pipe(first((_) => !!_.location))\n                .subscribe((user) => {\n                    if (user) {\n                        const building = this.buildings.find((bld) => bld.code === user.location);\n                        if (building) {\n                            this._active_building = building.id;\n                            this.set('active_building', building);\n                        } else {\n                            this._active_building = this.building.id;\n                            this.set('active_building', this.building);\n                        }\n                    }\n                });\n        }\n    }\n\n    /**\n     * Load organisation data for application\n     */\n    public async loadOrganisation(): Promise<void> {\n        const org_data = await this.query({ tags: 'org', engine: true });\n        this._organisation = new Organisation(org_data[0]);\n        this.set('organisation', this._organisation);\n    }\n\n    /**\n     * Load building data for the organisation\n     */\n    public async loadBuildings(): Promise<void> {\n        const bld_data = await this.query({ tags: 'building', engine: true, limit: 500 });\n        const buildings = (bld_data as HashMap[]).map((i) => new Building(i));\n        this.set('buildings', buildings);\n        /* istanbul ignore else */\n        if (!this._active_building && buildings && buildings.length > 0) {\n            this._active_building = buildings[0].id;\n        }\n    }\n\n    /**\n     * Load level data for the buildings\n     */\n    public async loadLevels(): Promise<void> {\n        const lvl_data = await this.query({ tags: 'level', engine: true });\n        const levels = (lvl_data as HashMap[]).map((i) => new BuildingLevel(i));\n        this.set('levels', levels);\n    }\n\n    /**\n     * Load space type data for the buildings\n     */\n    public async loadSpaceTypes(): Promise<void> {\n        const type_data = await this.query({ tags: 'room', engine: true });\n        const types = (type_data as HashMap[]).map((i) => ({ id: i.id, name: i.name }));\n        this.set('space_types', types);\n    }\n}\n","import { Type } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { BaseDataClass } from './base-api.class';\n\n\nexport interface ServiceLike<T = BaseDataClass> extends HashMap {\n    parent: any;\n    add: (_: HashMap) => Promise<T>\n    update: (id: string, _: HashMap) => Promise<T>\n    delete: (id: string) => Promise<void>\n    task: (id: string, name: string, data: HashMap) => Promise<void>\n    listen: <U = any>(prop: string) => Observable<U>\n}\nexport interface ServiceProvider<T extends ServiceLike> {\n    provideFor: Type<any>;\n    useValue: T\n}\n\nexport class ServiceManager {\n    /** Map of available services for child classes */\n    private static _service_list: ServiceProvider<any>[] = [];\n    /** Set the services used to handle data model requests */\n    public static setService(type: Type<any>, service: ServiceLike): void {\n        ServiceManager._service_list.push({ provideFor: type, useValue: service });\n    }\n    /** Get the services used to handle data model requests */\n    public static serviceFor(type: Type<any>): ServiceLike<any> {\n        const provider = ServiceManager._service_list.find(provider => provider.provideFor === type) || { useValue: null };\n        return provider.useValue;\n    }\n\n    constructor() {\n        throw new Error('ServiceMananger is static class');\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport { HashMap, Identity } from '../../../shared/utilities/types.utilities';\nimport { Booking } from '../bookings/booking.class';\nimport { BuildingLevel } from '../organisation/level.class';\nimport { SpaceRules } from '../bookings/booking.interfaces';\nimport { rulesForSpace } from '../bookings/booking.utilities';\nimport { User } from '../users/user.class';\n\nimport * as dayjs from 'dayjs';\nimport { Building } from '../organisation/building.class';\nimport { Organisation } from '../organisation/organisation.class';\nimport { ServiceManager } from '../service-manager.class';\n\nexport interface ISpaceAvailabilityOptions {\n    /** Start date and time of the availability block */\n    date?: number;\n    /** Length of the availability block */\n    duration: number;\n    /**  */\n    id?: string;\n    /** List of spaces to look at the availability for */\n    room_ids?: string;\n    /** Whether the spaces looked at should be bookable */\n    bookable?: boolean;\n    /** List of spaces or zones to ignore */\n    ignore?: string;\n    /** List of zones to look at the availability for */\n    zone_ids?: string;\n    /** Whether space bookings should not be returned */\n    hide_bookings?: boolean;\n\n    clear?: boolean;\n}\n\nexport interface SpaceBookingRuleOptions {\n    date: number;\n    duration: number;\n    host: User;\n}\n\nconst OPTION_DEFAULTS: ISpaceAvailabilityOptions = {\n    duration: 60,\n};\n\nexport interface RecurrenceAvailability {\n    /** Unix epoch in seconds */\n    readonly date: number;\n    /** Whetehr space is available at this time */\n    readonly available: boolean;\n}\n\nexport class Space extends BaseDataClass {\n    /** Extends name for the space */\n    public readonly long_name: string;\n    /** CSS selector for the location of the space of the level's map */\n    public readonly map_id: string;\n    /** Type of space */\n    public readonly type: string;\n    /** Whether user can search for this space */\n    public readonly can_search: boolean;\n    /** Whether user can open the control URL if available */\n    public readonly can_control: boolean;\n    /** Hourly cost for using the space */\n    public readonly hourly_rate: number;\n    /** Whether space can be booked by users */\n    public readonly bookable: boolean;\n    /** People capacity of the space */\n    public readonly capacity: number;\n    /** Index to force order when sorting multiple spaces */\n    public readonly sort_priority: number;\n    /** Setup time for bookings in this space */\n    public readonly setup: number;\n    /** Breakdown time for bookings in this space */\n    public readonly breakdown: number;\n    /** Last returned availability result */\n    public readonly was_available: boolean;\n    /** URL for the control interface of the space */\n    public readonly support_url: boolean;\n    /** Display image for the space */\n    public readonly image: string;\n    /** List of recurrence occurrence availability details */\n    public readonly recurr_available: readonly RecurrenceAvailability[];\n    /** Engine zones associated with the space */\n    public readonly zones: readonly string[];\n    /** Bookings associated with the space */\n    public bookings: readonly Booking[];\n    /** List of ids for linked spaces */\n    public linked_spaces: readonly string[];\n    /** Service for managing spaces */\n    protected get _service() {\n        return ServiceManager.serviceFor(Building);\n    }\n    /** List of equipment available in the space */\n    private _extras: Identity[];\n\n    constructor(raw_data: HashMap = {}) {\n        super(raw_data);\n        const settings = raw_data.settings || {};\n\n        this.long_name = settings.long_name || raw_data.long_name;\n        this.map_id = settings.map_id || raw_data.map_id || '';\n        this.type =\n            settings.book_type ||\n            (this.level.settings || {}).book_type ||\n            raw_data.book_type ||\n            raw_data.type ||\n            'book';\n        this.can_search =\n            settings.searchable || raw_data.searchable || raw_data.can_search || false;\n        this.can_control =\n            settings.controlable || raw_data.controlable || raw_data.can_control || false;\n        this.hourly_rate = settings.cost_hour || raw_data.cost_hour || raw_data.hourly_rate || 0;\n        this.bookable = settings.bookable || raw_data.bookable || false;\n        this.setup = (settings.setup || 0) / 60 || raw_data.setup || 0;\n        this.breakdown = (settings.breakdown || 0) / 60 || raw_data.breakdown || 0;\n        this.capacity = raw_data.capacity || 0;\n        this.recurr_available = raw_data.recurr_available || settings.recurr_available || [];\n        const available = !!this.recurr_available.find((occurence) => !!occurence.available);\n        this.was_available =\n            settings.available ||\n            raw_data.available ||\n            raw_data.was_available ||\n            available ||\n            false;\n        this.support_url = raw_data.support_url;\n        this.image = raw_data.image || '';\n\n        this.zones = raw_data.zones instanceof Array ? raw_data.zones : [];\n        const raw_bookings = settings.bookings || raw_data.bookings || [];\n        this.bookings = raw_bookings.map((bkn) => new Booking(bkn));\n        this._extras = [];\n        this.linked_spaces =\n            settings.linked_rooms || raw_data.linked_rooms || raw_data.linked_spaces || [];\n    }\n\n    /** Whether the space has a booking in progress */\n    public get in_use(): boolean {\n        return !!this.current;\n    }\n\n    /** Get any current in progress meeting */\n    public get current(): Booking {\n        const bookings = this.bookings;\n        for (const bkn of bookings) {\n            const status = bkn.status;\n            if (status === 'in_progress' || status === 'started') {\n                return bkn;\n            }\n        }\n        return null;\n    }\n\n    /** Get the next upcoming meeting */\n    public get next(): Booking {\n        const now = dayjs().valueOf();\n        const bookings = this.bookings;\n        for (const bkn of bookings) {\n            if (bkn.date > now) {\n                return bkn;\n            }\n        }\n        return null;\n    }\n\n    /** List of bookings for today */\n    public get todays_bookings(): readonly Booking[] {\n        return this.bookingsFor(dayjs().valueOf());\n    }\n\n    /** Level in which the space is associated */\n    public get level(): BuildingLevel {\n        const service = ServiceManager.serviceFor(Organisation);\n        return (service ? service.levelWithID(this.zones as any) : null) || new BuildingLevel({});\n    }\n\n    /**\n     * Get bookings for space\n     * @param date Date to filter bookings on\n     */\n    public bookingsFor(date?: number): readonly Booking[] {\n        if (date) {\n            const day = dayjs(date);\n            return this.bookings.filter((i) => {\n                const start = dayjs(i.date);\n                return start.isSame(day, 'd');\n            });\n        } else {\n            return this.bookings;\n        }\n    }\n\n    /**\n     * Whether the space is available.\n     */\n    public isAvailable(options?: ISpaceAvailabilityOptions): Promise<boolean> {\n        options = options\n            ? { ...OPTION_DEFAULTS, ...options, room_ids: this.id }\n            : { ...OPTION_DEFAULTS, room_ids: this.id };\n        return new Promise((resolve) => {\n            (this._service as any).available(options).then(\n                (list: Space[]) => {\n                    for (const rm of list) {\n                        if (rm.id === this.id) {\n                            return resolve(true);\n                        }\n                    }\n                    resolve(false);\n                },\n                () => resolve(false)\n            );\n        });\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): Space {\n        return new Space(this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): Space {\n        return new Space({ ...this, id: null, email: null, _bookings: [] });\n    }\n\n    /**\n     * Generate the booking rules for space with given options\n     * @param options Conditions for generating the space rules\n     */\n    public rulesFor(options: SpaceBookingRuleOptions): SpaceRules {\n        const service = ServiceManager.serviceFor(Building);\n        if (!service || !this.level) {\n            return { auto_approve: true, hide: false };\n        }\n        const building = service.buildings.find((bld) => bld.id === this.level.building_id);\n        if (!building) {\n            return { auto_approve: true, hide: false };\n        }\n        const { date, duration, host } = options;\n        const rules: SpaceRules = rulesForSpace({\n            time: date,\n            duration,\n            space: this,\n            user: host,\n            rules: building.booking_rules,\n        });\n        return rules;\n    }\n\n    /**\n     * Whether space can only be booked by request\n     * @param options Conditions for checking the space rules\n     */\n    public byRequest(options: SpaceBookingRuleOptions) {\n        const rules = this.rulesFor(options);\n        return !rules.auto_approve;\n    }\n}\n","import { HashMap } from '../../../shared/utilities/types.utilities';\nimport { generateMockBooking } from '../bookings/booking.utilities';\nimport { USER_DOMAIN } from '../users/user.utilities';\nimport { ISpaceAvailabilityOptions } from './space.class';\n\nimport * as faker from 'faker';\nimport * as dayjs from 'dayjs';\n\nlet SPACE_COUNT: number = 0;\n\nexport function generateMockSpace(overrides: HashMap = {}): HashMap {\n    const id = `space-${SPACE_COUNT++}`;\n    const name = `${faker.name.firstName()} ${faker.name.lastName()} Space`;\n    const linked = Math.floor(Math.random() * 99999) % 2 === 0 && SPACE_COUNT > 1;\n    return {\n        id,\n        name,\n        long_name: `${name} with an long name`,\n        map_id: `${SPACE_COUNT}`,\n        capacity: Math.floor(Math.random() * 20 + 1) * 2,\n        email: `${name.toLowerCase().split(' ').join('.')}@${USER_DOMAIN}`,\n        type: faker.commerce.productName(),\n        searchable: Math.floor(Math.random() * 99999) % 2 === 0,\n        controlable: Math.floor(Math.random() * 99999) % 2 === 0,\n        bookable: Math.floor(Math.random() * 99999) % 2 === 0,\n        cost_hour: Math.floor(Math.random() * 300) * 100,\n        setup: Math.floor(Math.random() * 6) * 5,\n        breakdown: Math.floor(Math.random() * 6) * 5,\n        zones: ['zone_lvl-0'],\n        support_url: `/control/#/${id}`,\n        bookings: Array(10).fill(0).map(i => generateMockBooking()),\n        linked_rooms: linked ? [`space-${Math.floor(Math.random() * (SPACE_COUNT - 1))}`] : [],\n        image: faker.image.business(),\n        ...overrides\n    };\n}\n\nexport function availabilityOptionsToQuery(options: ISpaceAvailabilityOptions): HashMap {\n    let query: HashMap = {};\n    if (options) {\n        query = { ...options };\n        if (options.date) {\n            const date = dayjs(options.date).startOf('m');\n            query.available_from = date.unix();\n            query.available_to = date.add(options.duration || 60, 'm').unix();\n            delete query.date;\n            delete query.duration;\n        }\n    }\n    return query;\n}\n","import { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\nimport { first } from 'rxjs/operators';\n\nimport { BaseAPIService } from '../base.service';\nimport { Space, ISpaceAvailabilityOptions } from './space.class';\nimport { HashMap, ApplicationLoadingState } from '../../../shared/utilities/types.utilities';\nimport { availabilityOptionsToQuery } from './space.utilities';\nimport { OrganisationService } from '../organisation/organisation.service';\nimport { ServiceManager } from '../service-manager.class';\nimport { ApplicationService } from '../../app.service';\n\nimport * as dayjs from 'dayjs';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SpacesService extends BaseAPIService<Space> {\n    constructor(\n        protected _composer: ComposerService,\n        private _org_service: OrganisationService,\n        private _app: ApplicationService\n    ) {\n        super(_composer);\n        ServiceManager.setService(Space, this);\n        this._name = 'Space';\n        this._api_route = 'rooms';\n        this._compare = (a, b) => !a.id.localeCompare(b.id) || !a.email.localeCompare(b.email);\n        this._list_filter = (a: Space) => {\n            const bld = this._org_service.building;\n            return a.level.building_id === bld.id;\n        };\n        this._org_service.initialised.pipe(first((_) => _)).subscribe(() => this.init());\n    }\n\n    /**\n     * Get available spaces\n     * @param options\n     */\n    public available(options: ISpaceAvailabilityOptions): Promise<Space[]> {\n        if (!options) {\n            throw new Error('Space avilability requires request options');\n        }\n        if (!options.date) {\n            options.date = dayjs().startOf('m').valueOf();\n        }\n        const key = `available|${options.id ? options.id : ''}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise((resolve, reject) => {\n                const respond = (list: Space[]) => {\n                    const available_spaces = list.filter((i) => {\n                        const linked = list.filter((j) => i.linked_spaces.indexOf(j.id) >= 0);\n                        return (\n                            i.was_available && linked.reduce((a, v) => a && v.was_available, true)\n                        );\n                    });\n                    delete this._promises[key];\n                    resolve(available_spaces);\n                };\n                const error = (e) => {\n                    reject(e);\n                    delete this._promises[key];\n                };\n                const query = availabilityOptionsToQuery(options);\n                if (options.id) {\n                    this.show(options.id, query).then((i) => respond([i]), error);\n                } else {\n                    this.query(query).then(respond, error);\n                }\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Load initial data for the service\n     */\n    protected async load(): Promise<void> {\n        const loading: ApplicationLoadingState = this._app.get('loading') || {};\n        if (!loading.spaces) {\n            loading.spaces = { message: 'Loading space data', state: 'loading' };\n            this._app.set('loading', loading);\n        }\n        await this.query().catch(() => {\n            loading.spaces = { message: 'Loading space data', state: 'failed' };\n            this._app.set('loading', loading);\n        });\n        loading.spaces = { message: 'Loading space data', state: 'complete' };\n        this._app.set('loading', loading);\n    }\n\n    /**\n     * Convert raw data into API object\n     * @param raw_data Raw API data\n     */\n    protected process(raw_data: HashMap): Space {\n        return new Space(raw_data);\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport { HashMap, Identity } from '../../../shared/utilities/types.utilities';\nimport { MapLocation } from '../location/location.class';\nimport { ServiceManager } from '../service-manager.class';\n\nexport class User extends BaseDataClass {\n    /** Currently logged in user */\n    public static get active_user(): User {\n        const service = ServiceManager.serviceFor(User);\n        return service ? service.current : null;\n    }\n    /** First name of the user */\n    public readonly first_name: string;\n    /** Last name of the user */\n    public readonly last_name: string;\n    /** Windows user ID */\n    public readonly windows_id: string;\n    /** Type of user */\n    public readonly type: 'partner' | 'external' | 'internal';\n    /** Contact phone number of the user */\n    public readonly phone: string;\n    /** Organisational department the user is part of */\n    public readonly business_unit: string;\n    /** Whether user is external from the application's organisation */\n    public readonly external: boolean;\n    /** Organisational Identifier for the user */\n    public readonly staff_code: string;\n    /** Basic location descriptor for the user */\n    public readonly location: string;\n    /** List of users that this user can act on behalf */\n    public readonly delegates: readonly string[];\n    /** URL of the user's avatar image */\n    public readonly image: string;\n    /** List of user groups associated with this user */\n    public readonly groups: readonly string[];\n    /** Organisation the user is associated with */\n    private _organisation: Identity;\n\n    /** Map location of the user */\n    private _location: MapLocation;\n    /** List of desk bookings */\n    private _desk_bookings: HashMap = {};\n\n    constructor(raw_data: HashMap = {}) {\n        super(raw_data);\n        this.first_name = raw_data.first_name || '';\n        this.last_name = raw_data.last_name || '';\n        this.windows_id = raw_data.email || '';\n        this.type = raw_data.visitor ? 'external' : raw_data.type || 'internal';\n        this.phone = raw_data.phone || raw_data.mobile || '';\n        this.business_unit = raw_data.business_unit || raw_data.department || '';\n        this._organisation = raw_data.organisation || {\n            id: raw_data.organisation_id,\n            name: raw_data.organisation_name\n        };\n        this.external = this.type === 'external';\n        this._location = null;\n        this.image = raw_data.image || '';\n        this.staff_code = raw_data.staff_code || raw_data.fmno || '';\n        this.delegates = raw_data.delegates || [];\n        this._location = new MapLocation(\n            raw_data.location && raw_data.location instanceof Object\n                ? raw_data.location\n                : { name: raw_data.location }\n        );\n        this.groups = raw_data.groups || [];\n        this.location = raw_data.location || raw_data.officeLocation || '';\n    }\n\n    /** Organisation the user is associated with */\n    public get organisation() {\n        return this._organisation;\n    }\n\n    /** Map location of the user */\n    public get last_location(): MapLocation {\n        return new MapLocation(this._location || {})\n    }\n\n    /**\n     * Ask the server for the users current location\n     */\n    public locate(): Promise<MapLocation> {\n        const service: any = ServiceManager.serviceFor(MapLocation);\n        return new Promise((resolve, reject) => {\n            if (service) {\n                service.show(this.id, { desk: this.email }).then(\n                    l => {\n                        this._location = l;\n                        resolve(l);\n                    },\n                    e => reject(e)\n                );\n            } else {\n                resolve(null);\n            }\n        });\n    }\n\n    /**\n     * Whether user is available during the given period\n     * @param start Start time as a unix timestamp with milliseconds\n     * @param end End time as a unix timestamp with milliseconds\n     */\n    public available(start?: number, end?: number): Promise<boolean> {\n        return new Promise<boolean>(resolve => {\n            this._service.query({ email: this.email, start, end }).then(\n                l => resolve(l && l.length > 0),\n                _ => resolve(false)\n            );\n        });\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): User {\n        return new User(this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): User {\n        return new User({ ...this, id: null, email: null });\n    }\n\n    /**\n     * Convert object into plain object\n     */\n    public toJSON(this: User, with_changes: boolean = true): HashMap {\n        const data = super.toJSON(with_changes);\n        delete data.location;\n        return data;\n    }\n}\n","import { HashMap } from '../../../shared/utilities/types.utilities';\n\nimport * as faker from 'faker';\nimport { padZero, unique } from '../../../shared/utilities/general.utilities';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { User } from './user.class';\nimport { Subscription } from 'rxjs';\n\nlet USER_COUNT = 0;\n\nexport let USER_DOMAIN = 'acaprojects.com';\n\nconst USER_EMAILS: string[] = [];\n\n/**\n * Generate raw mock data for a user\n * @param id Forced ID for the mock\n * @param name Forced name for the user\n * @param external Whether user is external of the organisation\n */\nexport function generateMockUser(override: HashMap = {}): HashMap {\n    const id = `user-${USER_COUNT++}`;\n    const name = `${faker.name.firstName()} ${faker.name.lastName()}`;\n    const external = override.external || !((Math.random() * 99999) % 2);\n    const organisation = external ? faker.company.companyName() : USER_DOMAIN.split('.')[0];\n    let delegates: string[] = [];\n    const delegate_count = Math.min(Math.random() * 4 + 1, USER_EMAILS.length);\n    for (let i = 0; i < delegate_count; i++) {\n        delegates.push(USER_EMAILS[Math.floor(Math.random() * USER_EMAILS.length)]);\n    }\n    delegates = unique(delegates);\n    const email = `${name\n        .split(' ')\n        .join('.')\n        .toLowerCase()}@${external ? 'not-' : ''}${USER_DOMAIN}`;\n    USER_EMAILS.push(email);\n    return {\n        id,\n        name,\n        first_name: name.split(' ')[0],\n        last_name: name.split(' ')[1],\n        email,\n        phone: faker.phone.phoneNumber(),\n        visitor: external,\n        organisation: {\n            id: organisation\n                .split(' ')\n                .join('.')\n                .toLowerCase(),\n            name: organisation\n        },\n        department: faker.commerce.department(),\n        staff_code: padZero(Math.floor(Math.random() * 99999), 5),\n        delegates,\n        image: faker.image.avatar(),\n        ...override\n    };\n}\n\n/**\n * Generate form fields for the given user\n * @param user User to generate form for\n */\nexport function generateUserForm(user: User): FormGroup {\n    if (!user) {\n        throw Error('No user passed');\n    }\n    const fields: HashMap<FormControl> = {\n        id: new FormControl(user.id || ''),\n        name: new FormControl(user.name || ''),\n        first_name: new FormControl(user.first_name || ''),\n        last_name: new FormControl(user.last_name || ''),\n        email: new FormControl(user.email || '', [Validators.email, Validators.required])\n    };\n    // Generate form group for booking item\n    const form = new FormGroup(fields);\n    // Listen for changes on the fields and update booking\n    if (form) {\n        const subs: HashMap<Subscription> = {};\n        Object.keys(form.controls).forEach((key: any) => {\n            subs[`change_${key}`] = form.controls[key].valueChanges.subscribe(value =>\n                user.storePendingChange(key, value)\n            );\n        });\n        subs.user = user.changeEvents.subscribe(event => {\n            if (event.type === 'item_saved') {\n                for (const key in subs) {\n                    if (subs[key] instanceof Subscription) {\n                        subs[key].unsubscribe();\n                    }\n                }\n            }\n        });\n    }\n    return form;\n}\n","import { Injectable } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { ComposerService } from '@placeos/composer';\nimport { first } from 'rxjs/operators';\n\nimport { Md5 } from 'ts-md5/dist/md5';\n\nimport { BaseAPIService } from '../base.service';\nimport { User } from './user.class';\nimport { HashMap, ApplicationLoadingState } from '../../../shared/utilities/types.utilities';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\n\nimport * as dayjs from 'dayjs';\nimport { ApplicationService } from '../../app.service';\nimport { ServiceManager } from '../service-manager.class';\n\nexport interface ILoginOptions {\n    /** URL to post login request to */\n    url?: string;\n    /** Whether form data is passed in the body of the request */\n    form?: boolean;\n    /** Custom headers to pass into the post request */\n    headers?: HashMap<string>;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class UsersService extends BaseAPIService<User> {\n    constructor(\n        protected _composer: ComposerService,\n        protected uhttp: HttpClient,\n        protected location: Location,\n        private _service: ApplicationService\n    ) {\n        super(_composer);\n        ServiceManager.setService(User, this);\n        this._name = 'Users';\n        this._api_route = 'users';\n        this._compare = (a, b) => !a.id.localeCompare(b.id) || !a.email.localeCompare(b.email);\n        this.set('current_user', new User({ id: 'local_user', name: 'Local User' }));\n        this._composer.initialised.pipe(first((_) => _)).subscribe(() => this.init());\n    }\n\n    /** Currently logged in user */\n    public get current(): User {\n        return this.get('current_user');\n    }\n\n    /** Whether the user has properly logged in */\n    public get is_logged_in(): boolean {\n        return this.current && this.current.id !== 'local_user';\n    }\n\n    /**\n     * Sets the access token and expiry for the user\n     * @param token OAuth bearer token\n     * @param expiry Expiry epoch timestamp in ms\n     * @param reload Whether to reload the page after setting tokens\n     */\n    public setToken(token: string, expiry?: number, reload: boolean = true) {\n        if (!expiry) {\n            expiry = dayjs().add(7, 'd').endOf('d').valueOf();\n        }\n        const path = `${location.origin}${\n            this._service.setting('composer.route') || ''\n        }/oauth-resp.html`;\n        const client_id = Md5.hashStr(path);\n        if (sessionStorage) {\n            sessionStorage.setItem(`${client_id}_access_token`, token);\n            sessionStorage.setItem(`${client_id}_expires_at`, `${expiry}`);\n        }\n        if (localStorage) {\n            localStorage.setItem(`${client_id}_access_token`, token);\n            localStorage.setItem(`${client_id}_expires_at`, `${expiry}`);\n        }\n        if (reload) {\n            this.location.go(this.location.path());\n        }\n        return path;\n    }\n\n    /**\n     * Post login request to the API\n     * @param query_params Key value pairs to pass into\n     * @param options Options for the login request\n     */\n    public login(query_params: HashMap, options: ILoginOptions = {}): Promise<void> {\n        if (!this._promises['login']) {\n            this._promises['login'] = new Promise<void>((resolve, reject) => {\n                this.set('status', 'loading');\n                let headers = new HttpHeaders();\n                if (!options || options.form !== false) {\n                    headers = headers.append('Content-Type', 'application/x-www-form-urlencoded');\n                }\n                const url = (options ? options.url : '') || '/auth/signin';\n                this.uhttp.post(url, query_params, { headers }).subscribe(\n                    (_) => null,\n                    (e) => reject(e),\n                    () => {\n                        this._composer.auth.authorise();\n                        resolve();\n                    }\n                );\n            });\n        }\n        return this._promises['login'];\n    }\n\n    /**\n     * Logout of user and redirect to logout URL\n     */\n    public logout() {\n        this._composer.auth.logout();\n    }\n\n    /**\n     * Load initial data for the service\n     */\n    protected load(tries: number = 0): Promise<void> {\n        const loading: ApplicationLoadingState = this._service.get('loading') || {};\n        if (!loading.user) {\n            loading.user = { message: 'Loading user credentials', state: 'loading' };\n            this._service.set('loading', loading);\n        }\n        this.set('status', 'loading');\n        return new Promise<void>((resolve) => {\n            if (tries > 4) {\n                this.set('status', 'invalid');\n                loading.user = { message: 'Loading user credentials', state: 'failed' };\n                this._service.set('loading', loading);\n                return resolve();\n            }\n            this.show('current').then(\n                (current_user) => {\n                    this.set('status', 'available');\n                    this.set('current_user', current_user);\n                    if (this._service && this._service.setting('app.user.grab_api_details')) {\n                        this.show(current_user.email).then(\n                            (user) => {\n                                this.set('current_user', user);\n                                if (this._service.setting('app.user.update_location')) {\n                                    this.interval('location', () => user.locate(), 5000);\n                                }\n                                this.loadDelegates();\n                                resolve();\n                                loading.user = {\n                                    message: 'Loading user credentials',\n                                    state: 'complete',\n                                };\n                                this._service.set('loading', loading);\n                            },\n                            () =>\n                                this.timeout('load', () => this.load(++tries).then(() => resolve()))\n                        );\n                    } else {\n                        if (this._service.setting('app.user.update_location')) {\n                            this.interval('location', () => current_user.locate(), 5000);\n                        }\n                        this.loadDelegates();\n                        resolve();\n                        loading.user = { message: 'Loading user credentials', state: 'complete' };\n                        this._service.set('loading', loading);\n                    }\n                },\n                () => this.timeout('load', () => this.load(++tries).then(() => resolve()))\n            );\n        });\n    }\n\n    private async loadDelegates() {\n        const delegates = this.current.delegates;\n        if (!delegates || !delegates.length) {\n            return [];\n        }\n        const promises: Promise<User>[] = [];\n        for (const email of delegates) {\n            promises.push(this.show(email));\n        }\n        const list = await Promise.all(promises);\n        this.set('delegates', list);\n        this.set('list', unique((this.get('list') || []).concat(list)));\n        return list;\n    }\n\n    /**\n     * Convert raw API data into a valid User Object\n     * @param raw_item Raw API data\n     */\n    protected process(raw_data: any): User {\n        return new User(raw_data);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\n\nimport { HashMap } from '../shared/utilities/types.utilities';\nimport { unique } from '../shared/utilities/general.utilities';\n\n/** List of keys that cannot be in a combination by themselves or with each other */\nconst INVALID_STANDALONE_KEYS: string[] = ['control', 'shift', 'alt', 'meta', 'os'];\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HotkeysService {\n    /** Map of subjects which store press states of keys */\n    private keydown_states: HashMap<BehaviorSubject<number>> = {};\n    /** Map of obserers for key state subjects */\n    private keydown_observers: HashMap<Observable<number>> = {};\n    /** List of keys at the end of a combination */\n    private combo_end: string[] = [];\n    /** List of registered hotkey combinations */\n    private registered_combos: string[][] = [];\n    /** Counter for the number of keydown events. Used for checking order of key presses */\n    private counter: number = 0;\n    /** Last key code to be pressed */\n    private last_down: string;\n\n    constructor() {\n        window.addEventListener('keydown', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            /* istanbul ignore else */\n            if (this.last_down !== code) {\n                /* istanbul ignore else */\n                if (!this.keydown_states[code]) {\n                    this.keydown_states[code] = new BehaviorSubject(null);\n                    this.keydown_observers[code] = this.keydown_states[code].asObservable();\n                }\n                this.keydown_states[code].next(++this.counter);\n                /* istanbul ignore else */\n                if (this.combo_end.indexOf(code) >= 0) {\n                    event.preventDefault();\n                }\n                this.last_down = code;\n            }\n        });\n\n        window.addEventListener('keyup', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            /* istanbul ignore else */\n            if (this.keydown_states[code]) {\n                this.keydown_states[code].next(null);\n            }\n            /* istanbul ignore else */\n            if (this.last_down === code) {\n                this.last_down = null;\n            }\n        });\n    }\n\n    /**\n     * Listen to the given key combination\n     * @param combo Array of key codes to listen to or a hotkey string e.g. `Alt+Shift+KeyK`\n     * @param next Callback for combination presses\n     */\n    public listen(combo: string | string[], next: () => void): Subscription {\n        combo = (combo instanceof Array ? combo : combo.split('+'));\n        const combination: string[] = combo.map(i => this.mapKey(i.toLowerCase()));\n        /* istanbul ignore else */\n        if (combination.length > 0 && this.validCombination(combination)) {\n            this.registered_combos.push(combination);\n            const last_key = combination[combination.length - 1];\n            /* istanbul ignore else */\n            if (!this.keydown_states[last_key]) {\n                this.keydown_states[last_key] = new BehaviorSubject(null);\n                this.keydown_observers[last_key] = this.keydown_states[last_key].asObservable();\n            }\n            this.updateCombinationEndList();\n            return this.keydown_observers[last_key].subscribe((count) => {\n                /* istanbul ignore else */\n                if (count) {\n                    const presses: number[] = [];\n                    /* istanbul ignore else */\n                    if (combination.length > 0) {\n                        // Check that keys are pressed\n                        for (const key of combination) {\n                            const state = this.keydown_states[key];\n                            presses.push(state ? state.getValue() || -1 : -1);\n                        }\n                        // Check that keys are pressed in the correct order\n                        for (let i = 0; i < combination.length - 1; i++) {\n                            if (presses[i] > presses[i + 1]) { return; }\n                        }\n                    }\n                    const total = presses.reduce((a, v) => a + (v > 0 ? 1 : -1), 0);\n                    /* istanbul ignore else */\n                    if (total >= combination.length) {\n                        next();\n                    }\n                }\n            });\n        }\n        return null;\n    }\n\n    /**\n     * Map key codes with multiple versions to simple form\n     * @param code Code to transform\n     */\n    private mapKey(code: string): string {\n        /* istanbul ignore else */\n        if (code.indexOf('alt') >= 0 || code.indexOf('shift') >= 0 || code.indexOf('control') >= 0) {\n            return code.replace('left', '').replace('right', '');\n        }\n        return code;\n    }\n\n    /**\n     * Update the list of the last keys in combinations to allow for prevent default actions on pre-existing hotkeys\n     */\n    private updateCombinationEndList(): void {\n        const key_list = [];\n        for (const combo of this.registered_combos) {\n            this.combo_end.push(combo[combo.length - 1]);\n        }\n        this.combo_end = unique(key_list);\n    }\n\n    /**\n     * Checks if the given hotkey combination is allowed and valid\n     * @param combo Array of key codes\n     */\n    private validCombination(combo: string[]): boolean {\n        let non_meta = 0;\n        for (const key of combo) {\n            /* istanbul ignore else */\n            if (INVALID_STANDALONE_KEYS.indexOf(key) < 0) {\n                non_meta++;\n            }\n        }\n        return non_meta > 0;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { HashMap } from '../shared/utilities/types.utilities';\nimport { getItemWithKeys } from '../shared/utilities/general.utilities';\nimport { version, build, core_version } from '../shared/globals/application';\nimport { BaseClass } from '../shared/base.class';\n\nimport * as dayjs from 'dayjs';\n\ninterface SettingsMap {\n    api: HashMap;\n    local: HashMap;\n    session: HashMap;\n    [block: string]: HashMap;\n}\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n    }\n}\n\nexport type ConsoleStream = 'debug' | 'warn' | 'log' | 'error';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SettingsService extends BaseClass {\n\n    /** Map of settings */\n    private _settings: SettingsMap = { api: {}, local: {}, session: {} };\n    /** Store for promises */\n    private _promises: { [name: string]: Promise<any> } = {};\n    /** Name of the application */\n    private _app_name = 'PlaceOS';\n\n    constructor(private http: HttpClient) {\n        super();\n        const now = dayjs();\n        const built = now.isSame(build, 'd') ? `Today at ${build.format('h:mmA')}` : build.format('D MMM YYYY, h:mmA');\n        this.log('CORE', `${core_version}`, null, 'debug', true);\n        this.log('APP', `${version} | Built: ${built}`, null, 'debug', true);\n        this.init();\n    }\n\n    /**\n     * Initialise the settings\n     */\n    public async init() {\n        await this.loadFromFile('api');\n        this.loadStore('local', localStorage);\n        this.loadStore('session', sessionStorage);\n        if (this._settings.api.debug) {\n            window.debug = true;\n        }\n        if (this._settings.api.app && this._settings.api.app.name) {\n            this._app_name = this._settings.api.app.name;\n        }\n        this.log('Settings', 'Successfully loaded settings');\n        this._initialised.next(true);\n    }\n\n    /** Whether settings service has initialised */\n    public get app_name() { return this._app_name; }\n\n    /**\n     * Log data to the browser console\n     * @param type Type of message\n     * @param msg Message body\n     * @param args array of argments to log to the console\n     * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\n     * @param force Whether to force message to be emitted when debug is disabled\n     */\n    public log(type: string, msg: string, args?: any, stream: ConsoleStream = 'debug', force: boolean = false) {\n        if (window.debug || force) {\n            const colors: string[] = ['color: #E91E63', 'color: #3F51B5', 'color: default'];\n            if (args) {\n                console[stream](`%c[${this.app_name}]%c[${type}] %c${msg}`, ...colors, args);\n            } else {\n                console[stream](`%c[${this.app_name}]%c[${type}] %c${msg}`, ...colors);\n            }\n        }\n    }\n\n    /**\n     * Get a setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public get(key: string): any {\n        const keys = key.split('.');\n        let value = null;\n        if (keys[0] === 'session') {\n            keys.shift();\n            value = getItemWithKeys(keys, this._settings.session);\n        } else if (keys[0] === 'local') {\n            keys.shift();\n            value = getItemWithKeys(keys, this._settings.local);\n        } else {\n            value = getItemWithKeys(keys, this._settings.api) ||\n                getItemWithKeys(keys, this._settings.session) ||\n                getItemWithKeys(keys, this._settings.local);\n        }\n        return value;\n    }\n\n    /**\n     * Load settings from the given Storage object\n     * @param name Root key for the settings\n     * @param store Storage item to add to the load into the settings\n     */\n    private loadStore(name: string, store: Storage) {\n        if (store) {\n            for (let i = 0; i < store.length; i++) {\n                const key = store.key(i);\n                const item = store.getItem(key);\n                if (item) { this._settings[name][key] = item; }\n            }\n        }\n    }\n\n    /**\n     * Load setting data from a file\n     * @param name Namespace to add file data to\n     * @param file URL to file to load setting data from\n     */\n    private async loadFromFile(name: string, file: string = 'assets/settings.json', tries: number = 0) {\n        if (file !== 'assets/settings.json' && tries > 5) {\n            return Promise.resolve();\n        }\n        const file_name = file.split('/')[file.split('/').length - 1];\n        // Check if data has been loaded into the global space\n        if (window[file_name] instanceof Object) {\n            this._settings[name] = { ...(this._settings[name] || {}), ...window[file_name] };\n            return Promise.resolve();\n        }\n        const key = `load|${name}|${file}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<void>((resolve, reject) => {\n                this.http.get(file).subscribe(\n                    (data) => {\n                        this._settings[name] = { ...(this._settings[name] || {}), ...(data || {}) };\n                    }, (e) => {\n                        this.log('Settings', `Failed to load settings from \"${file}\"`);\n                        this._promises[key] = null;\n                        this.timeout(`load_${file_name}`, () => {\n                            this.loadFromFile(name, file, ++tries).then(() => resolve());\n                        })\n                    }, () => resolve()\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n}\n","import { Subscription, BehaviorSubject } from \"rxjs\";\n\nexport class BaseClass {\n    /** Store for named timers */\n    protected _timers: { [name: string]: number } = {};\n    /** Store for named intervals */\n    protected _intervals: { [name: string]: number } = {};\n    /** Store for named subscription unsub callbacks */\n    protected _subscriptions: { [name: string]: (Subscription | (() => void)) } = {};\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n\n    /** Observable of the initialised state of the object */\n    public get initialised(): BehaviorSubject<boolean> {\n        return this._initialised;\n    }\n    /** Whether the object has been initialised */\n    public get is_initialised(): boolean {\n        return this._initialised.getValue();\n    }\n\n    protected destroy() {\n        for (const key in this._timers) {\n            if (this._timers.hasOwnProperty(key)) {\n                this.clearTimeout(key);\n            }\n        }\n        for (const key in this._intervals) {\n            if (this._intervals.hasOwnProperty(key)) {\n                this.clearInterval(key);\n            }\n        }\n        for (const key in this._subscriptions) {\n            if (this._subscriptions.hasOwnProperty(key)) {\n                this.unsub(key);\n            }\n        }\n    }\n\n    /**\n     * Creates a named timer\n     * @param name Name of the timer\n     * @param fn Callback function for the timer\n     * @param delay Callback delay\n     */\n    protected timeout(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearTimeout(name);\n            this._timers[name] = <any>setTimeout(() => {\n                fn();\n                this._timers[name] = null;\n            }, delay);\n        } else {\n            throw new Error(\n                name ? 'Cannot create named timeout without a name' : 'Cannot create a timeout without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named timer\n     * @param name Timer name\n     */\n    protected clearTimeout(name: string) {\n        if (this._timers[name]) {\n            clearTimeout(this._timers[name]);\n            this._timers[name] = null;\n        }\n    }\n\n    /**\n     * Creates a named interval\n     * @param name Name of the interval\n     * @param fn Callback function for the interval\n     * @param delay Callback delay\n     */\n    protected interval(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearInterval(name);\n            this._intervals[name] = <any>setInterval(() => fn(), delay);\n        } else {\n            throw new Error(\n                name ? 'Cannot create named interval without a name' : 'Cannot create a interval without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named interval\n     * @param name Timer name\n     */\n    protected clearInterval(name: string) {\n        if (this._intervals[name]) {\n            clearInterval(this._intervals[name]);\n            this._intervals[name] = null;\n        }\n    }\n\n    /**\n     * Store named subscription\n     * @param name Name of the subscription\n     * @param unsub Unsubscribe callback or Subscription object\n     */\n    protected subscription(name: string, unsub: Subscription | (() => void)) {\n        this.unsub(name);\n        this._subscriptions[name] = unsub\n    }\n\n    /**\n     * Call unsubscribe callback with the given name\n     * @param name\n     */\n    protected unsub(name: string) {\n        if (this._subscriptions && this._subscriptions[name]) {\n            this._subscriptions[name] instanceof Subscription\n                ? (this._subscriptions[name] as Subscription).unsubscribe()\n                : (this._subscriptions[name] as any)();\n            this._subscriptions[name] = null;\n        }\n    }\n}\n","\nimport { Directive, OnDestroy } from '@angular/core';\nimport { BaseClass } from './base.class';\n\n@Directive({\n    selector: 'a-very-basic-component-base-that-should-not-be-used'\n})\nexport class BaseDirective extends BaseClass implements OnDestroy {\n    public ngOnDestroy(): void {\n        this.destroy();\n    }\n}\n\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\n@Component({\n  selector: 'an-action-field',\n  templateUrl: './action-field.component.html',\n  styleUrls: ['./action-field.component.scss']\n})\nexport class ActionFieldComponent extends BaseDirective {\n    /** Name of the field */\n    @Input() public name: string;\n    /** Value to display on the field */\n    @Input() public placeholder: string;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Emitter for user interaction events */\n    @Output('onAction') public on_action = new EventEmitter();\n    /** Whether to show tooltip */\n    public show_tooltip = false;\n\n    /**\n     * Emit that the user has performed an action on the field\n     */\n    public performAction() {\n        this.show_tooltip = !this.show_tooltip;\n        this.on_action.emit();\n    }\n}\n","<div class=\"action-field\" role=\"button\" [attr.disabled]=\"disabled\" form-field tabindex=\"0\" (keydown.enter)=\"performAction()\">\n    <div class=\"display\" (tapped)=\"performAction()\">{{ placeholder }}</div>\n    <div class=\"icon\" (tapped)=\"performAction()\">\n        <app-icon\n            [icon]=\"{\n                type: 'icon',\n                class: 'material-icons',\n                content: show_tooltip ? 'arrow_drop_up' : 'arrow_drop_down'\n            }\"\n        ></app-icon>\n    </div>\n</div>\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n  selector: 'a-counter',\n  templateUrl: './counter.component.html',\n  styleUrls: ['./counter.component.scss'],\n  providers: [\n      {\n          provide: NG_VALUE_ACCESSOR,\n          /* istanbul ignore next */\n          useExisting: forwardRef(() => CounterComponent),\n          multi: true\n      }\n  ]\n})\nexport class CounterComponent implements ControlValueAccessor {\n    /** Size of a single step */\n    @Input() public step: number = 1;\n    /** Maximum amount for the counter */\n    @Input() public max: number = 10;\n    /** Minimum amount for the counter */\n    @Input() public min: number = 0;\n    /** Current value of the counter */\n    public value: number;\n    /** Whether shift key is being held by the user */\n    public shift_key: boolean;\n    /** Whether control key is being held by the user */\n    public ctrl_key: boolean;\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /**\n     * Add the `step` to the current value\n     */\n    public add() {\n        if (!this.value) { this.value = this.min || 0 }\n        const step = this.ctrl_key ? 100 : this.shift_key ? 10 : this.step || 1;\n        this.value += step;\n        if (this.value > this.max) {\n            this.value = this.max || 10;\n        }\n        this.setValue(this.value);\n    }\n\n    /** Remove the `step` from the current value */\n    public remove() {\n        if (!this.value) { this.value = this.min || 0 }\n        const step = this.ctrl_key ? 100 : this.shift_key ? 10 : this.step || 1;\n        this.value -= step;\n        if (this.value < this.min) {\n            this.value = this.min || 0;\n        }\n        this.setValue(this.value);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.value = value;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n}\n","<div\n    class=\"counter\"\n    (window:keydown.shift)=\"shift_key = true\"\n    (window:keydown.control)=\"ctrl_key = true\"\n    (window:keydown.meta)=\"ctrl_key = true\"\n    (window:keyup.shift)=\"shift_key = false\"\n    (window:keyup.control)=\"ctrl_key = false\"\n    (window:keyup.meta)=\"ctrl_key = false\"\n>\n    <button mat-icon-button name=\"remove\" [disabled]=\"!value || value === min\" (tapped)=\"remove()\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'remove' }\"></app-icon>\n    </button>\n    <div class=\"value\">\n        {{ value || '0' }}\n    </div>\n    <button mat-icon-button name=\"add\" [disabled]=\"value === max\" (tapped)=\"add()\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'add' }\"></app-icon>\n    </button>\n</div>\n","import { Component, OnInit, forwardRef, Input, ViewChild } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\nimport * as dayjs from 'dayjs';\nimport { MatMenuTrigger } from '@angular/material/menu';\n\n@Component({\n    selector: 'a-date-field',\n    templateUrl: './date-field.component.html',\n    styleUrls: ['./date-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateFieldComponent),\n            multi: true\n        }\n    ]\n})\nexport class DateFieldComponent extends BaseDirective implements OnInit, ControlValueAccessor {\n    /** Earliest date available the user is allowed to pick */\n    @Input('from') public _from: number = dayjs().valueOf();\n    /** Latest date available the user is allowed to pick */\n    @Input('to') public _to: number;\n    /** Position of the tooltip */\n    @Input() public position: 'right' | 'left' = 'right';\n    /** Offset of the tooltip */\n    @Input() public offset: 'top' | 'bottom' = 'bottom';\n    /** Whether form control is disabled */\n    @Input() public disabled: boolean;\n    /** Whether to show the calendar tooltip */\n    public show_tooltip: boolean;\n    /** Currently selected date */\n    public date: number;\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    @ViewChild(MatMenuTrigger, { static: true }) private _trigger: MatMenuTrigger;\n\n    /** First allowed date on the calendar */\n    public get from(): number {\n        return this._from || dayjs().startOf('d').valueOf();\n    }\n    /** Current date value */\n    public get until(): number {\n        return this._to || dayjs().endOf('d').add(1, 'y').valueOf();\n    }\n    /** Display value for the current date */\n    public get date_string(): string {\n        return dayjs(this.date).format('DD MMM YYYY');\n    }\n\n    /** Whether date picker is open */\n    public get is_open(): boolean {\n        return this._trigger.menuOpen;\n    }\n\n    public ngOnInit() {\n        this.date = dayjs().valueOf();\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number) {\n        this.date = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n        this.show_tooltip = false;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value;\n        this.show_tooltip = false;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /** Set the state of the tooltip to closed after delay */\n    public closeDatePicker() {\n        this._trigger.closeMenu();\n    }\n\n    /** Set the state of the tooltip to closed after delay */\n    public openDatePicker() {\n        this._trigger.openMenu();\n    }\n}\n","<div\n    class=\"date-field\"\n    role=\"button\"\n    form-field\n    tabindex=\"0\"\n    [class.active]=\"is_open\"\n    [attr.disabled]=\"disabled\"\n    (keydown.enter)=\"openDatePicker()\"\n    [matMenuTriggerFor]=\"appMenu\"\n>\n    <div class=\"display\">{{ date_string }}</div>\n    <div class=\"icon\">\n        <app-icon\n            [icon]=\"{\n                type: 'icon',\n                class: 'material-icons',\n                content: is_open ? 'arrow_drop_up' : 'arrow_drop_down'\n            }\"\n        ></app-icon>\n    </div>\n</div>\n<mat-menu #appMenu=\"matMenu\">\n    <div mat-menu-item class=\"date-picker\" (click)=\"$event.stopPropagation()\">\n        <a-date-picker\n            [ngModel]=\"date\"\n            [options]=\"{ from: from, to: until }\"\n            (ngModelChange)=\"setValue($event); closeDatePicker()\"\n        ></a-date-picker>\n    </div>\n</mat-menu>\n","import { Component, OnInit, forwardRef, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { humaniseDuration } from 'src/app/shared/utilities/general.utilities';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-duration-field',\n    templateUrl: './duration-field.component.html',\n    styleUrls: ['./duration-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DurationFieldComponent),\n            multi: true\n        }\n    ]\n})\nexport class DurationFieldComponent extends BaseDirective implements OnInit, OnChanges, ControlValueAccessor {\n    /** Maximum duration option available */\n    @Input() public max: number = 240;\n    /** Minimum duration option available */\n    @Input() public min: number = 15;\n    /** Step value between options */\n    @Input() public step: number = 15;\n    /** Reference time for displaying next to durations */\n    @Input() public time: number;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n\n    public duration: number = 60;\n    /** List of available duration options */\n    public duration_options: Identity[];\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    public ngOnInit(): void {\n        this.duration_options = this.generateDurationOptions(this.max, this.min, this.step);\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.max || changes.min || changes.step || changes.time) {\n            this.duration_options = this.generateDurationOptions(this.max, this.min, this.step);\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.duration = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(+new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.duration = value;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    private generateDurationOptions(max: number, min: number, step: number): Identity[] {\n        const blocks: Identity[] = [];\n        let time = min;\n        let date = this.time ? dayjs(this.time) : null;\n        while (time <= max) {\n            blocks.push({\n                id: time,\n                name: `${humaniseDuration(time)}${date ? ' (' + date.add(time, 'm').format('h:mm A') + ')': ''}`\n            });\n            time += step;\n        }\n        blocks.push({ id: 8 * 60, name: '8 hours' });\n        blocks.push({ id: 12 * 60, name: '12 hours' });\n        blocks.push({ id: 7 * 24 * 60, name: '1 week' });\n        return blocks;\n    }\n}\n","<div class=\"duration-field\" [attr.disabled]=\"disabled\">\n    <mat-form-field appearance=\"outline\">\n        <mat-select #select [value]=\"duration\" [disabled]=\"disabled\" (valueChange)=\"setValue($event)\">\n            <mat-option *ngFor=\"let option of duration_options\" [value]=\"option.id\">\n                {{ option.name }}\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n</div>\n","import { Component, forwardRef, Input, ViewChild, OnInit, SimpleChanges, OnChanges } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { MatSelect } from '@angular/material/select';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { timeFormatString } from 'src/app/shared/utilities/general.utilities';\n\nimport * as dayjs from 'dayjs';\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\n\n@Component({\n    selector: 'a-time-field',\n    templateUrl: './time-field.component.html',\n    styleUrls: ['./time-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => TimeFieldComponent),\n            multi: true\n        }\n    ]\n})\nexport class TimeFieldComponent extends BaseDirective implements OnInit, OnChanges, ControlValueAccessor {\n    /** Time step between each allowed time option */\n    @Input() public step: number = 15;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Whether past times are allowed */\n    @Input() public no_past_times: boolean = true;\n    /** String representing the currently set time */\n    public date: number = dayjs().valueOf();\n    /** String representing the currently set time */\n    public time: string = dayjs().format('HH:mm');\n    /** Available time blocks for the selected date */\n    public _time_options: Identity[];\n    /** Whether select field should be shown */\n    public show_select: boolean;\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /** Select field for selecting the time */\n    @ViewChild('select') private select_field: MatSelect;\n\n    public ngOnInit(): void {\n        this.show_select = true;\n        this._time_options = this.generateAvailableTimes(this.date, !this.no_past_times, this.step);\n        this.timeout('hide', () => this.show_select = false);\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.no_past_times || changes.step) {\n            this._time_options = this.generateAvailableTimes(this.date, !this.no_past_times, this.step);\n        }\n    }\n\n    /** Available time blocks for the selected date */\n    public get time_options() {\n        const time = (this.time || '00:00').split(':');\n        const date = dayjs(this.date).hour(+time[0]).minute(+time[1]);\n        if (date.minute() % 15 !== 0 && !this._time_options.find(time => time.id === date.format('HH:mm'))) {\n            this._time_options.push({\n                name: `${date.format(timeFormatString())}`,\n                id: date.format('HH:mm')\n            });\n            this._time_options.sort((a, b) => `${a.id}`.localeCompare(`${b.id}`));\n        }\n        return this._time_options;\n    }\n\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        this.time = new_value;\n        if (this._onChange) {\n            const time = (this.time || '00:00').split(':');\n            const date = dayjs(this.date).hour(+time[0]).minute(+time[1]).startOf('m');\n            this._onChange(date.valueOf());\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value;\n        let date = dayjs(this.date).startOf('m');\n        date = date.minute(Math.ceil(date.minute() / 5) * 5);\n        this.time = date.format('HH:mm');\n        this._time_options = this.generateAvailableTimes(this.date, !this.no_past_times, this.step);\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    /**\n     * Show select field for time options\n     */\n    public showSelect() {\n        this.show_select = true;\n        this.timeout('on_shown', () => {\n            if (this.select_field) {\n                this.select_field.focus();\n                this.select_field.open();\n                this.subscription('listen_close', this.select_field.openedChange.subscribe((state) => {\n                    if (!state) {\n                        this.show_select = false;\n                    }\n                }));\n            }\n        })\n    }\n\n    /**\n     * Generate a list of time options for the given date\n     * @param datestamp Date to generate options for\n     * @param show_past Whether past times should be options\n     */\n    private generateAvailableTimes(datestamp: number, show_past: boolean, step: number = 15): Identity[] {\n        const now = dayjs();\n        let date = dayjs(datestamp);\n        const blocks = [];\n        if (show_past || date.isAfter(now, 'd')) {\n            date = date.startOf('d');\n        }\n        date = date.minute(Math.ceil(date.minute() / step) * step);\n        const end = date.endOf('d');\n        // Add options for the rest of the day\n        while (date.isBefore(end, 'm')) {\n            blocks.push({\n                name: `${date.format(timeFormatString())}`,\n                id: date.format('HH:mm')\n            });\n            date = date.add(step, 'm');\n        }\n        return blocks;\n    }\n}\n","<div\n    class=\"time-field\"\n    role=\"button\"\n    [style.display]=\"show_select ? 'none' : ''\"\n    [attr.disabled]=\"disabled\"\n    form-field\n    tabindex=\"0\"\n    (keydown.enter)=\"showSelect()\"\n>\n    <div class=\"display\">\n        <input\n            matInput\n            type=\"time\"\n            [disabled]=\"disabled\"\n            [ngModel]=\"time\"\n            (ngModelChange)=\"setValue($event)\"\n        />\n    </div>\n    <div class=\"icon\" (tapped)=\"showSelect()\">\n        <app-icon\n            [icon]=\"{\n                type: 'icon',\n                class: 'material-icons',\n                content: show_select ? 'arrow_drop_up' : 'arrow_drop_down'\n            }\"\n        ></app-icon>\n    </div>\n</div>\n<mat-form-field appearance=\"outline\" *ngIf=\"show_select\">\n    <mat-select #select [value]=\"time\" [disabled]=\"disabled\" (valueChange)=\"setValue($event)\">\n        <mat-option *ngFor=\"let option of time_options\" [value]=\"option.id\">\n            {{ option.name }}\n        </mat-option>\n    </mat-select>\n</mat-form-field>\n","import { Component, OnInit, forwardRef, Output, EventEmitter, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subject, Observable, of } from 'rxjs';\nimport { switchMap, debounceTime, distinctUntilChanged, map, catchError } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport {\n    filterList,\n    matchToHighlight,\n    downloadFile,\n    csvToJson,\n} from 'src/app/shared/utilities/general.utilities';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: 'a-user-list-field',\n    templateUrl: './user-list-field.component.html',\n    styleUrls: ['./user-list-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UserListFieldComponent extends BaseDirective implements OnInit, ControlValueAccessor {\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Number of characters needed before a search will start */\n    @Input() public limit: number = 3;\n    /** Emitter for action to make a new user */\n    @Output('newUser') public new_user = new EventEmitter<void>();\n\n    /** User list to display */\n    public user_list: User[];\n    /** List of active selected users on the list */\n    public active_list: User[];\n    /** Whether user list is loading */\n    public loading: boolean;\n    /** String  */\n    public search_str: string;\n    /** List of users from an API search */\n    public search_results$: Observable<User[]>;\n    /** Subject holding the value of the search */\n    public search$ = new Subject<string>();\n\n    /** Form control on change handler */\n    private _onChange: (_: User[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User[]) => void;\n\n    constructor(private _service: ApplicationService, private _users: UsersService) {\n        super();\n    }\n\n    ngOnInit() {\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(400),\n            distinctUntilChanged(),\n            switchMap((query) => {\n                this.loading = true;\n                return query.length >= this.limit\n                    ? this._users.query({\n                          q: query.slice(0, Math.max(this.limit, 3)),\n                          cache: 60 * 1000,\n                      })\n                    : Promise.resolve([]);\n            }),\n            catchError((_) => of([])),\n            map((list: User[]) => {\n                this.loading = false;\n                return filterList(this.search_str, list, ['name', 'email']);\n            })\n        );\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe((list) => {\n                this.user_list = list;\n                this.user_list.forEach((i: any) => {\n                    i.match_name = matchToHighlight(i.match_name);\n                    i.match_email = matchToHighlight(i.match_email);\n                    return i;\n                });\n            })\n        );\n    }\n\n    /**\n     * Add user to the user list\n     * @param user\n     */\n    public addUser(user: User) {\n        /* istanbul ignore else */\n        if (!this.active_list) {\n            this.active_list = [];\n        }\n        const index = this.active_list.findIndex((a_user) => a_user.id === user.id);\n        /* istanbul ignore else */\n        if (index < 0) {\n            this.active_list = [...this.active_list, user];\n        }\n        this.setValue(this.active_list);\n        this.search_str = '';\n    }\n\n    /**\n     * Remove user from the user list\n     * @param user\n     */\n    public removeUser(user: User) {\n        this.active_list = this.active_list.filter((a_user) => a_user.id !== user.id);\n        this.setValue(this.active_list);\n    }\n\n    /**\n     * Load CSV file and populate the user list with the contents\n     * @param event File input field event\n     */\n    public addUsersFromFile(event) {\n        /* istanbul ignore else */\n        if (event.target) {\n            const file = event.target.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    this.processCsvData((evt.srcElement as any).result);\n                    event.target.value = '';\n                });\n                reader.addEventListener('error', (_) =>\n                    this._service.notifyError('Error reading file.')\n                );\n            }\n        }\n    }\n\n    /**\n     * Process raw CSV data and save user data to attendee list\n     * @param data CSV data\n     */\n    private processCsvData(data: string) {\n        const list = csvToJson(data) || [];\n        const id = this._users.current.staff_code;\n        list.forEach((el) => {\n            el.name = el.name || `${el.first_name} ${el.last_name}`;\n            const display = (el.name || `${Math.floor(Math.random() * 9999_9999)}`)\n                .split(' ')\n                .join('_')\n                .toLowerCase();\n            /* istanbul ignore else */\n            if (!el.email) {\n                el.email = `${display}+${id}@guest.mckinsey.com`;\n            }\n            el.type = 'external';\n            this.addUser(new User(el));\n        });\n    }\n\n    /* istanbul ignore next */\n    /** Download template CSV file */\n    public downloadCSVTemplate() {\n        const template = `Organisation Name,First Name,Last Name,Email,Phone\\nFake Org,John,Smith,john.smith@example.com,01234567898`;\n        downloadFile('template.csv', template);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User[]): void {\n        this.active_list = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User[]) {\n        this.active_list = value;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User[]) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User[]) => void): void {\n        this._onTouch = fn;\n    }\n}\n","<div class=\"user-list-field\" form-field [attr.disabled]=\"disabled\">\n    <mat-form-field appearance=\"outline\">\n        <input\n            matInput\n            name=\"user-search\"\n            [(ngModel)]=\"search_str\"\n            (ngModelChange)=\"search$.next($event)\"\n            [disabled]=\"disabled\"\n            placeholder=\"Search for user...\"\n            i18n-placeholder\n            [matAutocomplete]=\"auto\"\n        />\n        <div class=\"prefix\" matPrefix>\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'search' }\"\n            ></app-icon>\n        </div>\n        <div class=\"suffix\" matSuffix *ngIf=\"loading\">\n            <mat-spinner diameter=\"16\"></mat-spinner>\n        </div>\n    </mat-form-field>\n    <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"addUser($event.option.value)\">\n        <mat-option *ngFor=\"let option of user_list\" [value]=\"option\">\n            <div class=\"name\">{{ option.name }}</div>\n            <div class=\"email\">{{ option.email }}</div>\n        </mat-option>\n    </mat-autocomplete>\n    <div class=\"actions\">\n        <button type=\"button\" name=\"new-contact\" matRipple (tapped)=\"new_user.emit()\" i18n=\"Add new external attendee\">\n            New Contact\n        </button>\n        <button type=\"button\" name=\"upload-csv\" matRipple i18n=\"Upload attendee list from CSV file\">\n            Upload CSV\n            <input type=\"file\" (change)=\"addUsersFromFile($event)\" />\n        </button>\n        <button type=\"button\" name=\"download-template\" matRipple (tapped)=\"downloadCSVTemplate()\" i18n=\"Download template CSV file\">\n            CSV Template\n        </button>\n    </div>\n    <div class=\"user-list\">\n        <mat-chip-list\n            aria-label=\"User List\"\n            *ngIf=\"active_list && active_list.length; else empty_state\"\n        >\n            <mat-chip\n                *ngFor=\"let user of active_list\"\n                [id]=\"user.email\"\n                [color]=\"user.external ? 'accent' : 'primary'\"\n                [removable]=\"true\"\n                (removed)=\"removeUser(user)\"\n            >\n                {{ user.name }}\n                <app-icon\n                    matChipRemove\n                    [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"\n                ></app-icon>\n            </mat-chip>\n        </mat-chip-list>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div i18n=\"Attendee empty state\">No attendees</div>\n</ng-template>\n","import { Component, OnInit, forwardRef, Input } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { Subject, Observable, of } from 'rxjs';\nimport { switchMap, debounceTime, distinctUntilChanged, map, catchError } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { filterList, matchToHighlight } from 'src/app/shared/utilities/general.utilities';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: 'a-user-search-field',\n    templateUrl: './user-search-field.component.html',\n    styleUrls: ['./user-search-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserSearchFieldComponent),\n            multi: true\n        }\n    ]\n})\nexport class UserSearchFieldComponent extends BaseDirective implements OnInit, ControlValueAccessor {\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Limit available options to these */\n    @Input() public options: User[];\n    /** Currently selected user */\n    public active_user: User;\n    /** User list to display */\n    public user_list: User[];\n    /** Whether user list is loading */\n    public loading: boolean;\n    /** Current display value of the search input field  */\n    public search_str: string;\n    /** List of users from an API search */\n    public search_results$: Observable<User[]>;\n    /** Subject holding the value of the search */\n    public search$ = new Subject<string>();\n\n    /** Form control on change handler */\n    private _onChange: (_: User) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User) => void;\n\n    constructor(private _users: UsersService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(400),\n            distinctUntilChanged(),\n            switchMap(query => {\n                this.loading = true;\n                return this.options && this.options.length > 0\n                    ? Promise.resolve(this.options)\n                    : query.length >= 3\n                        ? (this._users.query({ q: query.slice(0, 3), cache: 60 * 1000 }) as Promise<User[]>)\n                        : Promise.resolve([]);\n            }),\n            catchError((err) => of([])),\n            map((list: User[]) => {\n                this.loading = false;\n                return filterList(this.search_str, list, ['name', 'email']);\n            })\n        );\n        // Process API results\n        this.subscription('search_results', this.search_results$.subscribe(list => {\n            this.user_list = list;\n            this.user_list.forEach((i: any) => {\n                i.match_name = matchToHighlight(i.match_name);\n                i.match_email = matchToHighlight(i.match_email);\n                return i;\n            });\n        }));\n    }\n\n    /**\n     * Reset the search string back to the name of the active user\n     */\n    public resetSearchString() {\n        if (this.active_user) {\n            this.search_str = this.active_user.name;\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User): void {\n        this.active_user = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n        this.resetSearchString();\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User) {\n        this.active_user = value;\n        this.resetSearchString();\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User) => void): void {\n        this._onTouch = fn;\n    }\n}\n","<div class=\"user-search-field\" form-field>\n    <mat-form-field appearance=\"outline\">\n        <input\n            matInput\n            name=\"user-search\"\n            [(ngModel)]=\"search_str\"\n            (ngModelChange)=\"search$.next($event)\"\n            [disabled]=\"disabled\"\n            placeholder=\"Search for user...\"\n            i18n-placeholder\n            [matAutocomplete]=\"auto\"\n            (blur)=\"resetSearchString()\"\n        />\n        <div class=\"prefix\" matPrefix>\n            <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'search' }\"></app-icon>\n        </div>\n        <div class=\"suffix\" matSuffix *ngIf=\"loading\">\n            <mat-spinner diameter=\"16\"></mat-spinner>\n        </div>\n    </mat-form-field>\n    <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"setValue($event.option.value)\">\n        <mat-option *ngFor=\"let option of user_list\" [value]=\"option\">\n            <div class=\"name\">{{ option.name }}</div>\n            <div class=\"email\">{{ option.email }}</div>\n        </mat-option>\n    </mat-autocomplete>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\n\nimport { BaseDirective } from '../../base.directive';\n\n@Component({\n    selector: 'feedback',\n    templateUrl: './feedback.template.html',\n    styleUrls: ['./feedback.styles.scss']\n})\nexport class FeedbackComponent extends BaseDirective implements OnInit {\n    /** Name of the currently active page */\n    public current_page: string;\n\n    constructor(private _router: Router) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.timeout('Getting Title', () => this.updateRoute(document.title));\n        this._router.events.subscribe((event: NavigationEnd) => {\n            /* istanbul ignore else */\n            if (event instanceof NavigationEnd) {\n                this.timeout('Getting Title', () => this.updateRoute(document.title));\n            }\n        });\n    }\n\n    public updateRoute(location) {\n        location = location.substr(0, location.indexOf(' |'));\n        this.current_page = location;\n    }\n}\n","<a [href]=\"'mailto:converge_feedback@mckinsey.com?subject=Feedback for page: ' + current_page\">\n    <div class=\"feedback-button\">\n        <span class=\"text\" i18n>Feedback</span>\n        <span class=\"icon\">\n            <app-icon [icon]=\"{class:'material-icons', content: 'feedback'}\"></app-icon>\n        </span>\n    </div>\n</a>\n","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from '../../base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { ApplicationLink } from '../../utilities/settings.interfaces';\n\n@Component({\n    selector: 'a-footer-menu',\n    templateUrl: './footer-menu.component.html',\n    styleUrls: ['./footer-menu.component.scss']\n})\nexport class FooterMenuComponent extends BaseDirective implements OnInit {\n\n    /** Tiles to display on the home page */\n    public tiles: ApplicationLink[] = [];\n\n    constructor(private _service: ApplicationService) {\n        super();\n    }\n\n    /** Angular Component initialisation lifecycle hook */\n    public ngOnInit(): void {\n        this._service.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.tiles = this._service.setting('app.home.tiles') || [];\n        });\n    }\n}\n","<div class=\"footer-menu\" *ngIf=\"tiles && tiles.length\">\n    <ng-container *ngFor=\"let item of tiles\">\n        <a *ngIf=\"item.route\" [routerLink]=\"[item.route]\" routerLinkActive=\"active\">\n            <div class=\"tile\">\n                <div class=\"icon\">\n                    <app-icon [icon]=\"item.icon\"></app-icon>\n                </div>\n                <div class=\"text\">{{ item.name }}</div>\n            </div>\n        </a>\n        <a *ngIf=\"!item.route\" [href]=\"item.link | safe: 'url'\">\n            <div class=\"tile\">\n                <div class=\"icon\">\n                    <app-icon [icon]=\"item.icon\"></app-icon>\n                </div>\n                <div class=\"text\">{{ item.name }}</div>\n            </div>\n        </a>\n    </ng-container>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from '../../../base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { NewUserModalComponent } from 'src/app/overlays/new-user-modal/new-user-modal.component';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\nimport { User } from 'src/app/services/data/users/user.class';\nimport {\n    SpaceSelectModalComponent,\n    SpaceSelectModalData,\n} from 'src/app/overlays/space-select-modal/space-select-modal.component';\nimport {\n    RecurrenceModalData,\n    RecurrenceModalComponent,\n} from 'src/app/overlays/recurrence-modal/recurrence-modal.component';\n\nimport * as dayjs from 'dayjs';\nimport { UsersService } from 'src/app/services/data/users/users.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\n@Component({\n    selector: 'a-booking-form',\n    templateUrl: './booking-form.component.html',\n    styleUrls: ['./booking-form.component.scss'],\n})\nexport class BookingFormComponent extends BaseDirective {\n    /** Form fields for booking */\n    @Input() public form: FormGroup;\n    /** List of available users to host bookings */\n    public user_list: User[] = [];\n\n    constructor(\n        private _service: ApplicationService,\n        private _users: UsersService,\n        private _spaces: SpacesService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._users.initialised.pipe(first((_) => _)).subscribe(() => {\n            const user: User = this._users.current;\n            const delegates = user.delegates.map(\n                (email) => this._users.find(email) || new User({ email, name: email.split('@')[0] })\n            );\n            this.user_list = [user].concat(delegates);\n        });\n    }\n\n    /** Display string for the recurrence value of the booking */\n    public get recurrence(): string {\n        const recurrence = this.form.controls.recurrence\n            ? this.form.controls.recurrence.value\n            : null;\n        const periods = ['None', 'Daily', 'Weekly', 'Biweekly', 'Monthly'];\n        if (!recurrence || !recurrence.period || (recurrence.period as any) >= periods.length) {\n            return 'No recurrence';\n        }\n        const period =\n            typeof recurrence.period === 'string' ? recurrence.period : periods[recurrence.period];\n        const end = recurrence.end\n            ? `until ${dayjs(recurrence.end).format('DD MMM YYYY')}`\n            : 'forever';\n        return `${period} ${end}`;\n    }\n\n    /** Whether notes and description should use the HTML editor */\n    public get use_html(): boolean {\n        return this._service.setting('app.booking.html_body') || false;\n    }\n\n    /** List of available types for bookings */\n    public get booking_types(): Identity[] {\n        return this._service.setting('app.booking.booking_types') || [];\n    }\n\n    /** Display string for the list of active spaces */\n    public get spaces(): string {\n        const spaces = this.form.controls.space_list.value || [];\n        const space = spaces[0];\n        return spaces.length === 1\n            ? space.name\n            : spaces.length > 1\n            ? `${spaces.length} spaces selected`\n            : 'No Spaces selected';\n    }\n\n    /**\n     * Open modal to change the space details for the booking\n     */\n    public openSpacesModal(): void {\n        const ref = this._dialog.open<SpaceSelectModalComponent, SpaceSelectModalData>(\n            SpaceSelectModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                maxWidth: '95vw',\n                data: {\n                    spaces: this.form.controls.space_list.value,\n                    date: this.form.controls.date.value,\n                    duration: this.form.controls.duration.value,\n                    host: this.form.controls.organiser.value,\n                    multiple: true,\n                },\n            }\n        );\n        this.subscription(\n            'new_spaces',\n            ref.componentInstance.event.subscribe((event) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    let space_list = this.form.controls.space_list.value || [];\n                    space_list = event.metadata;\n                    this.form.controls.space_list.setValue(unique(space_list, 'id'));\n                    ref.close();\n                    this.unsub('new_spaces');\n                }\n            })\n        );\n    }\n\n    /**\n     * Open modal to change the recurrence details for the booking\n     */\n    public openRecurrenceModal() {\n        const ref = this._dialog.open<RecurrenceModalComponent, RecurrenceModalData>(\n            RecurrenceModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                maxWidth: '95vw',\n                data: {\n                    details: this.form.controls.recurrence.value,\n                    date: this.form.controls.date.value,\n                },\n            }\n        );\n        this.subscription(\n            'recurrence',\n            ref.componentInstance.event.subscribe((event) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    this.form.controls.recurrence.setValue(\n                        event.metadata && event.metadata.period !== 'none' ? event.metadata : {}\n                    );\n                    ref.close();\n                    this.unsub('recurrence');\n                }\n            })\n        );\n    }\n\n    /**\n     * Open modal to change the recurrence details for the booking\n     */\n    public openNewUserModal() {\n        const ref = this._dialog.open<NewUserModalComponent>(NewUserModalComponent, {\n            width: 'auto',\n            height: 'auto',\n        });\n        this.subscription(\n            'new_user',\n            ref.componentInstance.event.subscribe((event) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    const attendees = this.form.controls.attendees.value || [];\n                    attendees.push(event.metadata);\n                    this.form.controls.attendees.setValue(unique(attendees, 'email'));\n                    ref.close();\n                    this.unsub('new_user');\n                }\n            })\n        );\n    }\n}\n","<div class=\"booking-form\" *ngIf=\"form\" [formGroup]=\"form\">\n    <div\n        class=\"field\"\n        *ngIf=\"form.controls.id && form.controls.id.value && form.controls.space_list\"\n    >\n        <label for=\"spaces\" i18n=\"Booking form spaces label\">Spaces: </label>\n        <an-action-field\n            name=\"spaces\"\n            [placeholder]=\"spaces\"\n            (onAction)=\"openSpacesModal()\"\n        ></an-action-field>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.title\">\n        <label\n            for=\"title\"\n            [class.error]=\"form.controls.title.invalid && form.controls.title.touched\"\n            i18n=\"Booking form title label\"\n        >\n            Title<span>*</span>:\n        </label>\n        <mat-form-field appearance=\"outline\">\n            <input matInput name=\"title\" placeholder=\"Meeting Title\" i18n-placeholder formControlName=\"title\" />\n\n            <mat-error *ngIf=\"form.controls.title.invalid\" i18n=\"Booking form title error\"\n                >Title is required</mat-error\n            >\n        </mat-form-field>\n    </div>\n    <div class=\"group date\">\n        <div class=\"field\" *ngIf=\"form.controls.date\">\n            <label for=\"date\" i18n=\"Booking form date label\">Date: </label>\n            <a-date-field name=\"date\" formControlName=\"date\"></a-date-field>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.recurrence\">\n            <label for=\"recurrence\" i18n=\"Booking form recurrence label\">Recurrence: </label>\n            <an-action-field\n                name=\"recurrence\"\n                [placeholder]=\"recurrence\"\n                (onAction)=\"openRecurrenceModal()\"\n            ></an-action-field>\n        </div>\n    </div>\n    <div class=\"group time\">\n        <div class=\"field\" *ngIf=\"form.controls.date\">\n            <label for=\"start-time\" i18n=\"Booking form start time label\">Start Time: </label>\n            <a-time-field\n                name=\"start-time\"\n                [disabled]=\"form.controls.all_day?.value\"\n                formControlName=\"date\"\n            ></a-time-field>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.duration\">\n            <div class=\"label-group\">\n                <label for=\"duration\" i18n=\"Booking form duration label\">Duration: </label>\n                <mat-checkbox\n                    formControlName=\"all_day\"\n                    *ngIf=\"form.controls.all_day\"\n                    i18n=\"Booking form all day label\"\n                    >All day booking</mat-checkbox\n                >\n            </div>\n            <a-duration-field\n                name=\"duration\"\n                [disabled]=\"form.controls.all_day?.value\"\n                [time]=\"form.controls.date?.value\"\n                formControlName=\"duration\"\n            ></a-duration-field>\n        </div>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.organiser\">\n        <label for=\"organiser\" i18n=\"Booking form organiser label\">Host: </label>\n        <mat-form-field appearance=\"outline\">\n            <mat-select\n                name=\"organiser\"\n                formControlName=\"organiser\"\n                [placeholder]=\"form.controls.organiser.value.name || form.controls.organiser.value.email\"\n            >\n                <mat-option *ngFor=\"let user of user_list\" [value]=\"user\">\n                    {{ user.name || user.email }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.attendees\">\n        <label for=\"attendees\" i18n=\"Booking form attendees label\">Attendees: </label>\n        <a-user-list-field\n            name=\"attendees\"\n            formControlName=\"attendees\"\n            (newUser)=\"openNewUserModal()\"\n        ></a-user-list-field>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.type && booking_types.length > 1\">\n        <label for=\"booking-type\" i18n=\"Booking form booking type label\">Booking Type: </label>\n        <mat-form-field appearance=\"outline\">\n            <mat-select name=\"booking-type\" formControlName=\"type\">\n                <mat-option *ngFor=\"let type of booking_types\" [value]=\"type.id\">\n                    {{ type.name }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.needs_space\">\n        <mat-checkbox formControlName=\"needs_space\" i18n=\"Booking form need space label\"\n            >Need a meeting space?</mat-checkbox\n        >\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.has_catering\">\n        <mat-checkbox\n            [disabled]=\"!form.controls.needs_space.value\"\n            formControlName=\"has_catering\"\n            i18n=\"Booking form need catering label\"\n        >\n            Need catering?\n        </mat-checkbox>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.body\">\n        <label for=\"body\" i18n=\"Booking form notes label\">Notes: </label>\n        <mat-form-field name=\"body\" appearance=\"outline\" *ngIf=\"!use_html; else html_editor\">\n            <textarea\n                matInput\n                name=\"description\"\n                placeholder=\"Meeting Description\"\n                i18n-placeholder\n                formControlName=\"body\"\n            ></textarea>\n        </mat-form-field>\n        <ng-template #html_editor>\n            <editor formControlName=\"body\"></editor>\n        </ng-template>\n    </div>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'user-form',\n  templateUrl: './user-form.component.html',\n  styleUrls: ['./user-form.component.scss']\n})\nexport class UserFormComponent {\n    /** Group of form fields used for creating the system */\n    @Input() public form: FormGroup;\n}\n","<div class=\"user form\" *ngIf=\"form\">\n    <form [formGroup]=\"form\">\n        <div class=\"field\" *ngIf=\"form.controls.name\">\n            <label\n                for=\"first-name\"\n                [class.error]=\"form.controls.name.invalid && form.controls.name.touched\"\n                i18n=\"User form first name label\"\n                >First Name:</label\n            >\n            <mat-form-field appearance=\"outline\">\n                <input\n                    matInput\n                    name=\"first-name\"\n                    placeholder=\"First name\"\n                    i18n-placeholder\n                    formControlName=\"first_name\"\n                />\n                <mat-error i18n=\"User form first name error\">First name is required</mat-error>\n            </mat-form-field>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.name\">\n            <label\n                for=\"system-name\"\n                [class.error]=\"form.controls.name.invalid && form.controls.name.touched\"\n                i18n=\"User form last name label\"\n                >Last Name:</label\n            >\n            <mat-form-field appearance=\"outline\">\n                <input\n                    matInput\n                    name=\"last-name\"\n                    placeholder=\"Last name\"\n                    i18n-placeholder\n                    formControlName=\"last_name\"\n                />\n                <mat-error i18n=\"User form last name error\">Last name is required</mat-error>\n            </mat-form-field>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.email\">\n            <label\n                for=\"email\"\n                [class.error]=\"form.controls.email.invalid && form.controls.email.touched\"\n                i18n=\"User form email label\"\n                >Email<span>*</span>:</label\n            >\n            <mat-form-field appearance=\"outline\">\n                <input matInput name=\"email\" placeholder=\"Email Address\" i18n-placeholder formControlName=\"email\" />\n                <mat-error i18n=\"User form email error\">A valid email is required</mat-error>\n            </mat-form-field>\n        </div>\n    </form>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from '../../utilities/settings.interfaces';\nimport { BaseDirective } from '../../base.directive';\n\n@Component({\n    selector: 'app-icon',\n    templateUrl: './icon.component.html',\n    styleUrls: ['./icon.component.scss']\n})\nexport class IconComponent extends BaseDirective {\n    @Input() public icon: ApplicationIcon;\n}\n","<div class=\"app-icon\" *ngIf=\"icon\">\n    <i *ngIf=\"icon.type !== 'img'\" [class]=\"icon.class\">{{ icon.content }}</i>\n    <img *ngIf=\"icon.type === 'img'\" [src]=\"icon.src | safe:'resource'\" />\n</div>","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from '../../base.directive';\nimport { ApplicationIcon } from '../../utilities/settings.interfaces';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent extends BaseDirective implements OnInit {\n    /** Logo of the application organisation */\n    public logo: ApplicationIcon;\n    /** Whether the user credentials are being checked */\n    public loading: boolean;\n    /** Form fields for the login form */\n    public form: FormGroup;\n\n    constructor(private _service: ApplicationService, private _users: UsersService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.loading = true;\n        this.form = new FormGroup({\n            username: new FormControl('', [Validators.required]),\n            password: new FormControl('', [Validators.required]),\n        });\n        this._service.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.loading = false;\n            this.logo = this._service.setting('app.logo_light') || { type: 'icon' };\n        });\n    }\n\n    /** Perform user login */\n    public login() {\n        this.loading = true;\n        const form = this.form.value;\n        this._users.login({\n            username: form.username,\n            password: form.password\n        }, { form: true }).then(() => {\n            this.loading = false;\n        }, () => {\n            this.loading = false;\n            this.form.controls.password.setErrors({ check: true });\n        });\n    }\n\n}\n","<div class=\"login\">\n    <div class=\"login-form\">\n        <form [formGroup]=\"form\">\n            <div class=\"header\" [style.background-color]=\"logo?.background\">\n                <div class=\"logo\">\n                    <i *ngIf=\"logo?.type === 'icon'\" [class]=\"logo.class\">{{ logo.content }}</i>\n                    <img *ngIf=\"logo?.type === 'img'\" [src]=\"logo.src | safe: 'resource'\" />\n                </div>\n            </div>\n            <div class=\"body\">\n                <ng-container *ngIf=\"!loading; else loading_state\">\n                    <div class=\"field\">\n                        <label\n                            for=\"username\"\n                            [class.error]=\"\n                                form.controls.username.invalid && form.controls.username.touched\n                            \"\n                            i18n=\"Login form username label\"\n                        >\n                            Username:\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"username\"\n                                placeholder=\"Username/Email\"\n                                i18n-placeholder\n                                formControlName=\"username\"\n                            />\n                            <mat-error i18n=\"Login form username error\"\n                                >Username is required</mat-error\n                            >\n                        </mat-form-field>\n                    </div>\n                    <div class=\"field\">\n                        <label\n                            for=\"password\"\n                            [class.error]=\"\n                                form.controls.password.invalid && form.controls.password.touched\n                            \"\n                            i18n=\"Login form password label\"\n                        >\n                            Password:\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"password\"\n                                placeholder=\"Password\"\n                                i18n-placeholder\n                                formControlName=\"password\"\n                                (keyup.enter)=\"login()\"\n                            />\n                            <mat-error i18n=\"Login form password error\"\n                                >Invalid username or password</mat-error\n                            >\n                        </mat-form-field>\n                    </div>\n                </ng-container>\n            </div>\n            <div class=\"footer\" *ngIf=\"!loading\">\n                <button mat-button (tapped)=\"login()\" i18n=\"Login action\">Login</button>\n            </div>\n        </form>\n    </div>\n</div>\n<ng-template #loading_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <mat-spinner diameter=\"64\"></mat-spinner>\n        </div>\n        <div class=\"text\" i18n=\"Checking login status\">Checking user credentials...</div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { BuildingLevel } from 'src/app/services/data/organisation/level.class';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\n@Component({\n    selector: 'a-map-controls',\n    templateUrl: './map-controls.component.html',\n    styleUrls: ['./map-controls.component.scss']\n})\nexport class MapControlsComponent extends BaseDirective implements OnInit {\n    /** ID of the active building */\n    @Input() public building: string;\n    /** ID of the active level */\n    @Input() public level: string;\n    /** Emitter for changes to the active level */\n    @Output() public levelChange = new EventEmitter<string>();\n    /** List of available buildings */\n    public building_list: Building[] = [];\n    /** List of available levels */\n    public level_list: BuildingLevel[] = [];\n\n    public get can_select_building(): boolean {\n        return !!this._service.setting('app.explore.can_select_building');\n    }\n\n    constructor(\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _service: ApplicationService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._org.listen('buildings').pipe(first(_ => _ && _.length)).subscribe(() => {\n            this.subscription(\n                'route.query',\n                this._route.queryParamMap.subscribe(params => {\n                    /* istanbul ignore else */\n                    if (params.has('level')) {\n                        const level_id = params.get('level');\n                        const level = this._org.levelWithID(level_id);\n                        this.level = level.id;\n                        this.setBuilding(level.building_id);\n                        this.levelChange.emit(this.level);\n                        this.clearTimeout('check_building');\n                    }\n                })\n            );\n            this.building_list = this._org.buildings;\n            this.timeout('check_building', () => {\n                /* istanbul ignore else */\n                if (!this.building) {\n                    this.setBuilding(this._org.building.id);\n                }\n                this.levelChange.emit(this.level);\n            });\n        });\n    }\n\n    public setBuilding(bld_id: string) {\n        const building = this._org.buildings.find(bld => bld.id === bld_id);\n        /* istanbul ignore else */\n        if (building) {\n            this.building = bld_id;\n            this.level_list = building.levels;\n            /* istanbul ignore else */\n            if (this.level_list.length && !this.level_list.find(lvl => lvl.id === this.level)) {\n                this.updateLevel(this.level_list[0].id);\n            }\n        }\n    }\n\n    public updateLevel(lvl_id: string) {\n        this.level = lvl_id;\n        this.levelChange.emit(this.level);\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParamsHandling: 'merge',\n            queryParams: { level: lvl_id }\n        });\n    }\n}\n","<div class=\"map-controls\">\n    <mat-form-field\n        class=\"map\"\n        appearance=\"outline\"\n        *ngIf=\"can_select_building && building_list.length > 1\"\n    >\n        <mat-select [value]=\"building\" (valueChange)=\"setBuilding($event)\">\n            <mat-option *ngFor=\"let bld of building_list\" [value]=\"bld.id\">\n                {{ bld.name }}\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n    <mat-form-field class=\"map\" appearance=\"outline\">\n        <mat-select [(value)]=\"level\" (valueChange)=\"updateLevel($event)\">\n            <mat-option *ngFor=\"let level of level_list\" [value]=\"level.id\">\n                {{ level.name }}\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from '../../base.directive';\nimport { OverlayMenuSettings, ApplicationLink } from '../../utilities/settings.interfaces';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-overlay-menu',\n    templateUrl: './overlay-menu.component.html',\n    styleUrls: ['./overlay-menu.component.scss']\n})\nexport class OverlayMenuComponent extends BaseDirective {\n    /** Whether to show the menu */\n    @Input() public show: boolean;\n    /** Emitter for changes to show */\n    @Output() public showChange = new EventEmitter<boolean>();\n\n    /** List of links to display on the menu */\n    public get menu_items(): ApplicationLink[] {\n        const settings = this._service.setting('app.general.menu') || { items: [] };\n        return settings.items || [];\n    }\n\n    /** Copyright details for the application */\n    public get copyright(): string {\n        return (this._service.setting('app.general.menu') || {}).copyright || '';\n    }\n\n    public get settings() {\n        const settings = this._service.setting('app.general.menu') || { position: '' };\n        return settings;\n    }\n\n    constructor(private _service: ApplicationService) {\n        super();\n    }\n\n    /** Current year to display for copyright */\n    public get year(): number {\n        return dayjs().year();\n    }\n\n    /** Close the overlay menu */\n    public close() {\n        this.show = false;\n        this.showChange.emit(this.show);\n    }\n\n    public delayedClose() {\n        this.timeout('close', () => this.close(), 50);\n    }\n\n    public cancelClose() {\n        this.timeout('cancel_close', () => this.clearTimeout('close'), 10);\n    }\n}\n","<div\n    class=\"overlay-menu\"\n    [class.left]=\"settings?.position === 'left'\"\n    [class.middle]=\"settings?.position === 'middle'\"\n    [class.show]=\"show\"\n    (tapped)=\"delayedClose()\"\n>\n    <div class=\"menu\" (tapped)=\"cancelClose()\">\n        <div class=\"header\">\n            <div class=\"location\"></div>\n            <button mat-icon-button (tapped)=\"close()\">\n                <app-icon\n                    [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"\n                ></app-icon>\n            </button>\n        </div>\n        <div class=\"body\">\n            <ul>\n                <ng-container *ngFor=\"let item of menu_items\">\n                    <ng-container *ngIf=\"item.route; else external_link\">\n                        <a\n                            [routerLink]=\"[item.route]\"\n                            routerLinkActive=\"active\"\n                            [queryParams]=\"item.query_params\"\n                        >\n                            <li>\n                                <div class=\"text\">{{ item.name }}</div>\n                                <app-icon\n                                    [icon]=\"{\n                                        type: 'icon',\n                                        class: 'material-icons',\n                                        content: 'keyboard_arrow_right'\n                                    }\"\n                                ></app-icon>\n                            </li>\n                        </a>\n                        <ng-container *ngIf=\"item.children && item.children.length\">\n                            <a\n                                *ngFor=\"let sub_item of item.children\"\n                                class=\"sub-link\"\n                                [routerLink]=\"[sub_item.route]\"\n                                routerLinkActive=\"active\"\n                                [queryParams]=\"sub_item.query_params\"\n                            >\n                                <li>\n                                    <div class=\"text\">{{ sub_item.name }}</div>\n                                    <app-icon\n                                        [icon]=\"{\n                                            type: 'icon',\n                                            class: 'material-icons',\n                                            content: 'keyboard_arrow_right'\n                                        }\"\n                                    ></app-icon>\n                                </li>\n                            </a>\n                        </ng-container>\n                    </ng-container>\n                    <ng-template #external_link>\n                        <a [href]=\"item.link | safe: 'url'\">\n                            <li>\n                                <div class=\"text\">{{ item.name }}</div>\n                                <app-icon\n                                    [icon]=\"{\n                                        type: 'icon',\n                                        class: 'material-icons',\n                                        content: 'exit_to_app'\n                                    }\"\n                                ></app-icon>\n                            </li>\n                        </a>\n                    </ng-template>\n                </ng-container>\n            </ul>\n        </div>\n        <div class=\"footer\" *ngIf=\"copyright\" i18n=\"Copyright\">\n            Copyright &copy; {{ year }} {{ copyright }}\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, Input, ContentChildren, Output, EventEmitter } from '@angular/core';\nimport { ApplicationIcon } from '../../utilities/settings.interfaces';\nimport { BaseDirective } from '../../base.directive';\n\nexport interface PopoutAction extends ApplicationIcon {\n    /** ID of the action */\n    id: string;\n}\n\n@Component({\n    selector: 'a-popout-menu',\n    templateUrl: './popout-menu.component.html',\n    styleUrls: ['./popout-menu.component.scss']\n})\nexport class PopoutMenuComponent extends BaseDirective {\n    /** List of available actions */\n    @Input() public actions: PopoutAction[] = [];\n    /** Emitter for user actions */\n    @Output() public action = new EventEmitter<string>();\n    /** Whether actions should show */\n    public show: boolean;\n\n    public close() {\n        this.timeout('close', () => {\n            this.show = false;\n        });\n    }\n}\n","<button\n    mat-icon-button\n    [class.small]=\"true\"\n    name=\"action\"\n    *ngFor=\"let item of actions; let i = index\"\n    [style.top]=\"show ? (-110 * i - 60) + '%' : ''\"\n    (tapped)=\"action.emit(item.id); show = false\"\n>\n    <app-icon [icon]=\"item\"></app-icon>\n</button>\n<button mat-icon-button name=\"menu\" [class.show]=\"show\" (tapped)=\"show = !show\" (window:click)=\"show ? close() : ''\">\n    <app-icon [icon]=\"{ class: 'material-icons', content: show ? 'add' : 'more_vert' }\"></app-icon>\n</button>\n","import { Component, OnInit, Input, EventEmitter, Output, ViewChild, ElementRef, SimpleChanges, OnChanges } from '@angular/core';\nimport { BaseDirective } from '../../base.directive';\n\n@Component({\n    selector: 'a-searchbar',\n    templateUrl: './searchbar.component.html',\n    styleUrls: ['./searchbar.component.scss']\n})\nexport class SearchbarComponent extends BaseDirective implements OnChanges {\n    /** Current contents of the searchbar input */\n    @Input('value') public value: string;\n    /** Current contents of the searchbar input */\n    @Input() public placeholder: string;\n    /** Whether external changes are being processed */\n    @Input() public loading: boolean;\n    /** Whether external changes are being processed */\n    @Input() public autofocus: boolean;\n    /** Emitter for changes to the searchbar value */\n    @Output() public valueChange = new EventEmitter<string>();\n    /** Input field reference */\n    @ViewChild('input', { static: true }) private input_field: ElementRef<HTMLInputElement>;\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.autofocus && this.autofocus) {\n            this.focusField()\n        }\n    }\n\n    public focusField() {\n        /* istanbul ignore else */\n        if (this.input_field && this.input_field.nativeElement) {\n            this.input_field.nativeElement.focus();\n        }\n    }\n}\n","<div class=\"searchbar\" tabindex=\"0\" (focus)=\"focusField()\" (click)=\"focusField()\">\n    <div class=\"prefix\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'search' }\"></app-icon>\n    </div>\n    <div class=\"input\">\n        <input #input\n            type=\"text\"\n            [(ngModel)]=\"value\"\n            (ngModelChange)=\"valueChange.emit($event)\"\n            [placeholder]=\"placeholder || 'Search...'\"\n            i18n-placeholder\n        />\n    </div>\n    <div class=\"suffix\" *ngIf=\"loading\">\n        <mat-spinner diameter=\"32\"></mat-spinner>\n    </div>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from '../../base.directive';\nimport { ApplicationIcon } from '../../utilities/settings.interfaces';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n    selector: 'a-topbar-header',\n    templateUrl: './topbar-header.component.html',\n    styleUrls: ['./topbar-header.component.scss']\n})\nexport class TopbarHeaderComponent extends BaseDirective implements OnInit {\n    /** Logo of the application organisation */\n    public logo: ApplicationIcon;\n    /** Whether to show menu */\n    @Input() public menu: boolean;\n    /** Name of the page being rendered */\n    @Input() public page: string;\n    /** Emiiter for changes to menu state */\n    @Output() public menuChange = new EventEmitter<boolean>();\n    /** Whether to reverse the side of the menu icon */\n    public reverse: boolean;\n    /** Current page title */\n    public title: string;\n\n    constructor(private _service: ApplicationService, private _dialog: MatDialog) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.logo = this._service.setting('app.logo_light') || { type: 'icon' };\n            this.reverse = this._service.setting('app.general.menu.position') === 'left';\n            this.title = this._service.get('title');\n            this.subscription('title', () =>\n                this._service.listen('title', value => (this.title = value))\n            );\n        });\n    }\n\n    /** Set menu state to `true` */\n    public showMenu() {\n        this.menu = true;\n        this.menuChange.emit(this.menu);\n    }\n\n    public closeModals() {\n        this._dialog.closeAll();\n    }\n}\n","<div [class]=\"'topbar-header ' + page + (reverse ? ' reverse' : '')\">\n    <div class=\"block home\">\n        <a [routerLink]=\"['/home']\" (click)=\"closeModals()\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'home' }\"></app-icon>\n        </a>\n    </div>\n    <div class=\"block icon\">\n        <div class=\"text\">Converge |</div>\n        <div class=\"logo\" *ngIf=\"logo\">\n            <i *ngIf=\"logo.type === 'icon'\" [class]=\"logo.class\">{{ logo.content }}</i>\n            <img *ngIf=\"logo.type === 'img'\" [src]=\"logo.src | safe: 'resource'\" />\n        </div>\n    </div>\n    <div class=\"block title\">\n        <div class=\"title\">Converge | {{ title }}</div>\n    </div>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { User } from 'src/app/services/data/users/user.class';\n\n@Component({\n    selector: 'a-user-avatar',\n    templateUrl: './user-avatar.component.html',\n    styleUrls: ['./user-avatar.component.scss']\n})\nexport class UserAvatarComponent {\n    /** User to display avatar for */\n    @Input() public user: User;\n\n    public get initials(): string {\n        if (!this.user) {\n            return 'NA';\n        }\n        const parts = this.user.name.split(' ');\n        return parts.length > 1\n            ? `${parts[0][0]}${parts[parts.length - 1][0]}`\n            : this.user.name.slice(0, 2);\n    }\n}\n","<div class=\"user-avatar\" *ngIf=\"user\" [attr.user-id]=\"user.id\">\n    <div class=\"initials\" *ngIf=\"!user.image; else image_state\">{{ initials }}</div>\n</div>\n<ng-template #image_state>\n    <img [src]=\"user.image | safe: 'resource'\" />\n</ng-template>\n","\nimport * as dayjs from 'dayjs';\n\n/** Version number of the application */\nexport const version = 'local-dev';\n/** Version number of the base application */\nexport const core_version = '1.0.0';\n/** Build time of the application */\nexport const build = dayjs();\n","\nimport { MockHttpRequestHandler } from '@placeos/ts-client';\n\nimport { generateMockBooking } from 'src/app/services/data/bookings/booking.utilities';\nimport { randomInt, unique } from '../../utilities/general.utilities';\nimport { MOCK_SPACES } from './spaces.mock';\nimport { MOCK_USERS } from './users.mock';\nimport { API } from './common.mock';\n\nimport * as dayjs from 'dayjs';\n\nwindow.control = window.control || {};\nwindow.control.systems = window.control.systems || {};\nwindow.control.handlers = window.control.handlers || [];\n\nexport const MOCK_BOOKINGS = Array(200)\n    .fill(0)\n    .map(i => {\n        const rooms = unique(Array(randomInt(4))\n            .fill(0)\n            .map(i => MOCK_SPACES[Math.floor(Math.random() * MOCK_SPACES.length)]), 'id');\n        // Set the organiser with the generated user list\n        const organiser = randomInt(9999) % 10 === 0 ? MOCK_USERS[MOCK_USERS.length - 1] : MOCK_USERS[randomInt(MOCK_USERS.length)];\n        // Set the attendees with the generated user list\n        const attendees = unique(\n            Array(randomInt(20))\n                .fill(0)\n                .map(i => MOCK_USERS[randomInt(MOCK_USERS.length)]),\n            'email'\n        );\n        return generateMockBooking({\n            organiser,\n            attendees,\n            room_ids: rooms.map(i => i.email)\n        });\n    });\n\nMOCK_SPACES.forEach(i => i.bookings = MOCK_BOOKINGS.filter(j => j.room_ids.indexOf(i.email) >= 0));\n\n// Handler for bookings index\nwindow.control.handlers.push({\n    path: `${API}/bookings`,\n    metadata: MOCK_BOOKINGS,\n    method: 'GET',\n    callback: event => {\n        const user = MOCK_USERS[MOCK_USERS.length - 1];\n        let data = !event.query_params.email\n            ? MOCK_BOOKINGS.filter(\n                  i => i.organiser.email === user.email || i.organiser === user.email || i.attendees.reduce((a, v) => a || v.email === user.email, false)\n              )\n            : MOCK_BOOKINGS.filter(\n                  i =>\n                  i.organiser.email === event.query_params.email ||\n                  (i.organiser as any) === event.query_params.email ||\n                      i.attendees.reduce((a, v) => a || v.email === event.query_params.email, false)\n            );\n        // Filter bookings between a given period\n        if (event.query_params.from) {\n            const start = dayjs(+event.query_params.from * 1000);\n            const end = event.query_params.to ? dayjs(+event.query_params.to * 1000).endOf('m') : start.endOf('d');\n            data = data.filter(i => {\n                const bkn_start = dayjs(i.start_epoch * 1000).startOf('m').second(1);\n                const bkn_end = dayjs(i.end_epoch * 1000);\n                return (bkn_start.isAfter(start, 's') && bkn_start.isBefore(end, 'm')) || (bkn_end.isAfter(start, 'm') && bkn_end.isBefore(end, 's'));\n            });\n        }\n        return data;\n    }\n} as MockHttpRequestHandler);\n\n// Handler for bookings show\nwindow.control.handlers.push({\n    path: `${API}/bookings/:id`,\n    metadata: MOCK_BOOKINGS,\n    method: 'GET',\n    callback: event => {\n        if (event.route_params.id) {\n            const booking = MOCK_BOOKINGS.find(i => i.id === event.route_params.id || i.icaluid === event.route_params.id);\n            if (booking) {\n                return booking;\n            } else {\n                throw { status: 404, message: 'Booking not found.' }\n            }\n        } else {\n            throw { status: 400, message: 'Invalid booking ID' };\n        }\n    }\n} as MockHttpRequestHandler);\n\n// Handler for new bookings\nwindow.control.handlers.push({\n    path: `${API}/bookings`,\n    metadata: MOCK_BOOKINGS,\n    method: 'POST',\n    callback: (event) => {\n        if (event.body) {\n            event.body.id = `bkn-${randomInt(9_999_999)}`;\n            event.body.icaluid = `ical-${event.body.id}`;\n            MOCK_BOOKINGS.push(event.body);\n            MOCK_SPACES.forEach(space => space.bookings = MOCK_BOOKINGS.filter(booking => booking.room_ids.indexOf(space.email) >= 0));\n            return event.body;\n        } else {\n            throw { status: 500, message: 'Invalid booking data' };\n        }\n    }\n} as MockHttpRequestHandler);\n\n// Handler for updating exisiting bookings\nwindow.control.handlers.push({\n    path: `${API}/bookings/:id`,\n    metadata: MOCK_BOOKINGS,\n    method: 'PUT',\n    callback: (event) => {\n        if (event.route_params.id) {\n            const index = MOCK_BOOKINGS.findIndex(i => i.id === event.route_params.id || i.icaluid === event.route_params.id);\n            if (index >= 0) {\n                MOCK_BOOKINGS[index] = event.body;\n                MOCK_SPACES.forEach(i => i.bookings = MOCK_BOOKINGS.filter(j => (j.room_ids).indexOf(i.email) >= 0));\n                return event.body;\n            } else {\n                throw { status: 404, message: 'Booking not found' };\n            }\n        } else\n            throw { status: 500, message: 'Invalid booking ID' };\n    }\n} as MockHttpRequestHandler);\n\n// Handler for deleting exisiting bookings\nwindow.control.handlers.push({\n    path: `${API}/bookings/:id`,\n    metadata: MOCK_BOOKINGS,\n    method: 'DELETE',\n    callback: (event) => {\n        if (event.route_params.id) {\n            const index = MOCK_BOOKINGS.findIndex(i => i.id === event.route_params.id || i.icaluid === event.route_params.id);\n            if (index >= 0) {\n                MOCK_BOOKINGS.splice(index, 1);\n                MOCK_SPACES.forEach(i => i.bookings = MOCK_BOOKINGS.filter(j => j.room_ids.indexOf(i.email) >= 0));\n            } else {\n                throw { status: 404, message: 'Booking not found' };\n            }\n        } else\n            throw { status: 500, message: 'Invalid booking ID' };\n    }\n} as MockHttpRequestHandler);\n","\nimport { MockHttpRequestHandler } from '@placeos/ts-client';\n\nimport { MOCK_ORG } from './organisation.mock';\nimport { DOMAIN } from './common.mock';\n\nwindow.control = window.control || {};\nwindow.control.systems = window.control.systems || {};\nwindow.control.handlers = window.control.handlers || [];\n\nexport const MOCK_BUILDINGS = [{\n    id: 'zone_bld-01',\n    zone_id: 'zone_bld-01',\n    name: 'Sydney',\n    settings: {\n        discovery_info: {\n            timezone: 'Australia/Sydney',\n            phone: {\n                emergency: '0412345678',\n                av_help: '0412345678',\n                concierge: '0412345678'\n            },\n            locations: {},\n            desk_tracking: 'sys-B0',\n            systems: {\n                desk_bookings: 'sys-B0'\n            },\n            messaging: 'sys-B0',\n            features: [],\n            catering: {},\n            neighbourhoods: {\n                'zone_lvl-01': {\n                    'Test Searchable': 'Device_Bench'\n                }\n            },\n            visitor_space: 'sydney-10.05@acaprojects.com',\n            levels: [\n                {\n                    level_id: 'zone_lvl-01',\n                    level_name: 'Level 1',\n                    number: 1,\n                    map_url: 'assets/maps/level_01.svg',\n                    floor_type: 'staff',\n                    settings: {\n                        map_features: [\n                            { id: 'Device_Bench', name: 'Device Bench' },\n                            { id: 'people', name: 'People' }\n                        ]\n                    },\n                    desks: 6,\n                },\n                {\n                    level_id: 'zone_lvl-02',\n                    level_name: 'Level 2',\n                    number: 2,\n                    map_url: 'assets/maps/level_02.svg',\n                    floor_type: 'client',\n                    book_type: 'Request',\n                    desks: 6,\n                },\n                {\n                    level_id: 'zone_lvl-03',\n                    level_name: 'Level 3',\n                    number: 3,\n                    map_url: 'assets/maps/level_03.svg',\n                    floor_type: 'staff',\n                    desks: 6,\n                },\n                {\n                    level_id: 'zone_lvl-10',\n                    level_name: 'Level 10',\n                    number: 10,\n                    map_url: 'assets/maps/level_10.svg',\n                    floor_type: 'staff',\n                    desks: 186,\n                }\n            ],\n            roles: {\n                'fire-warden': [\n                    { name: 'Alex Sorafumo', email: `alex.sorafumo@${DOMAIN}`, phone: '0412345678' },\n                    { name: 'Bob Jane', email: `bob.jane@${DOMAIN}`, phone: '0423456789' },\n                    { name: 'Rupert', email: `rupert@${DOMAIN}`, phone: '0434567890' }\n                ],\n                'first-aider': [\n                    { name: 'Ben Hoad', email: `ben.hoad@${DOMAIN}`, phone: '0412345678' },\n                    { name: 'Kim Burgess', email: `kim.burgess@${DOMAIN}`, phone: '0423456789' },\n                    { name: 'Mr Pop', email: `mr.pop@${DOMAIN}`, phone: '0434567890' }\n                ]\n            },\n            extras: [\n                { extra_id: 'VidConf', extra_name: 'Video Conference' },\n                { extra_id: 'AV', extra_name: 'AV' },\n                { extra_id: 'presentation', extra_name: 'Wireless Presentation' },\n                { extra_id: 'phone', extra_name: 'Conference Phone' },\n            ],\n            loan_items: [\n                { extra_id: 'ConfKit', extra_name: 'Conference Kit' },\n                { extra_id: 'Chairs', extra_name: 'Chairs' },\n            ],\n        },\n    },\n}];\n\nMOCK_BUILDINGS.push({ ...MOCK_BUILDINGS[0], name: 'London' });\n\nMOCK_ORG[0].discovery_info.buildings = MOCK_BUILDINGS;\n\nsetTimeout(() => {\n    window.control.handlers.push({\n        path: '/api/engine/v2/zones',\n        metadata: MOCK_BUILDINGS,\n        callback: (event) => {\n            if (event.query_params.tags === 'building') {\n                return { total: MOCK_BUILDINGS.length, results: MOCK_BUILDINGS };\n            } else if (event.query_params.tags === 'org') {\n                return { total: MOCK_ORG.length, results: MOCK_ORG };\n            } else if (event.query_params.tags === 'level') {\n                return { total: 0, results: [] };\n            }\n        }\n    } as MockHttpRequestHandler);\n});\n","\n/** Domain of the organisation */\nexport const DOMAIN = 'acaprojects.com';\n/** Endpoint where the staff API is located */\nexport const API = '/api/staff';\n","import { MockHttpRequestHandler } from '@placeos/ts-client';\n\nimport { MOCK_USERS } from \"./users.mock\";\nimport { MOCK_SPACES } from './spaces.mock';\nimport { MOCK_BUILDINGS } from './buildings.mock';\nimport { randomInt } from '../../utilities/general.utilities';\nimport { generateMockLocation } from 'src/app/services/data/location/location.utilities';\n\nexport const MOCK_LOCATIONS: any[] = [];\n\nconst spaces = MOCK_SPACES.map(space => space.map_id);\nconst levels = MOCK_BUILDINGS.reduce((lvls, bld) => {\n    bld.settings.discovery_info.levels.forEach(lvl => lvls.push(lvl.level_id));\n    return lvls;\n}, []);\n\nfor (const user of MOCK_USERS) {\n    if (user.location || randomInt(99999) % 2 === 0) {\n        user.location = generateMockLocation(null, spaces, levels);\n        MOCK_LOCATIONS.push(user.location);\n    }\n}\n\nsetTimeout(() => {\n    window.control.handlers.push({\n        path: '/api/staff/people/:email',\n        metadata: MOCK_LOCATIONS,\n        callback: (event) => {\n            if (event.route_params.email) {\n                const user = MOCK_USERS.find(user => user.email === event.route_params.email || user.id === event.route_params.email);\n                if (user) {\n                    return user.location;\n                }\n            }\n            throw { status: 404, message: `Unable to locate user with email ${event.route_params.email}` };\n        }\n    } as MockHttpRequestHandler);\n});\n\n\n","export const MOCK_ORG = [\n    {\n        send_acceptance: true,\n        discovery_info: {\n            buildings: []\n        }\n    }\n];\n","import { generateMockSpace } from 'src/app/services/data/spaces/space.utilities';\nimport { API } from './common.mock';\nimport { MockHttpRequestHandler } from '@placeos/ts-client';\n\nimport * as dayjs from 'dayjs';\n\nwindow.control = window.control || {};\nwindow.control.systems = window.control.systems || {};\nwindow.control.handlers = window.control.handlers || [];\n\nexport const MOCK_SPACES = [\n    { id: '1.01', name: 'Meeting', zones: ['zone_bld-01', 'zone_lvl-01'] },\n    { id: '1.02', name: 'Collaboration', zones: ['zone_bld-01', 'zone_lvl-01'] },\n    { id: '1.03', name: 'Team Meeting', zones: ['zone_bld-01', 'zone_lvl-01'] },\n    { id: '1.04', name: 'Pod', zones: ['zone_bld-01', 'zone_lvl-01'] },\n    { id: '1.05', name: 'IT Support', zones: ['zone_bld-01', 'zone_lvl-01'] }\n].map((space_data: any) => {\n    const space = generateMockSpace({\n        ...space_data,\n        map_id: `area-${space_data.id}-status`,\n        id: `sys_rm-${space_data.id}`,\n        name: `${space_data.name} ${space_data.id}`\n    });\n    window.control.systems[space.id] = {\n        Bookings: [\n            {\n                today: space.bookings\n            }\n        ]\n    };\n    return space;\n});\n\n// Add handler for users index\nwindow.control.handlers.push({\n    path: `${API}/rooms`,\n    metadata: MOCK_SPACES,\n    callback: event => {\n        let results = MOCK_SPACES;\n        if (event.query_params.q) {\n            const query = event.query_params.q.toLowerCase();\n            results = results.filter(\n                i =>\n                    (i.id || '').toLowerCase().indexOf(query) >= 0 ||\n                    (i.name || '').toLowerCase().indexOf(query) >= 0 ||\n                    (i.email || '').toLowerCase().indexOf(query) >= 0\n            );\n        }\n        // Remove rooms without given zones from results\n        if (event.query_params.zone_ids) {\n            const zone_ids = event.query_params.zone_ids.split(',');\n            results = results.filter(i => {\n                let count = 0;\n                for (const zone of zone_ids) {\n                    if (i.zones.indexOf(zone) >= 0) {\n                        count++;\n                    }\n                }\n                return count >= zone_ids.length;\n            });\n        }\n        // Remove rooms without given ids from results\n        if (event.query_params.room_ids) {\n            const room_ids = event.query_params.room_ids.split(',');\n            results = results.filter(i => room_ids.indexOf(i.id) >= 0);\n        }\n        // Update availability status of each room results\n        if (event.query_params.available_from) {\n            const from = dayjs(+event.query_params.available_from * 1000);\n            const to = dayjs(+event.query_params.available_to * 1000);\n            results.forEach(space => {\n                for (const booking of space.bookings) {\n                    const start = dayjs(booking.start_epoch * 1000);\n                    const end = dayjs(booking.end_epoch * 1000);\n                    if (\n                        (from.isAfter(start, 'm') && from.isBefore(end, 'm')) ||\n                        (to.isAfter(start, 'm') && to.isBefore(end, 'm')) ||\n                        (start.isAfter(from, 'm') && start.isBefore(to, 'm'))\n                    ) {\n                        space.settings = { available: false };\n                    } else {\n                        space.settings = { available: true };\n                    }\n                }\n            });\n        }\n        return results;\n    }\n} as MockHttpRequestHandler);\n","\nimport { MockHttpRequestHandler } from '@placeos/ts-client';\n\nimport { generateMockUser } from 'src/app/services/data/users/user.utilities';\nimport { API } from './common.mock';\n\nwindow.control = window.control || {};\nwindow.control.systems = window.control.systems || {};\nwindow.control.handlers = window.control.handlers || [];\n\nexport const MOCK_USERS = Array(Math.floor(Math.random() * 300 + 100)).fill(0)\n    .map(i => generateMockUser());\nexport const MOCK_CONTACTS = Array(Math.floor(Math.random() * 300 + 100)).fill(0)\n    .map(i => generateMockUser({ external: true }));\n\nexport const PREDEFINED_USERS = [\n    'Jonathan McFarlane',\n    'Stephen Von Takach',\n    'Alex Sorafumo',\n    'Candy Russo',\n    'Cristina Boston',\n    'Eugene Murphy',\n    'Ben Hoad',\n    'Kim Burgess',\n    'Desk Test',\n    'Space Test',\n    'Wireless Test',\n    'Zo-Kalar'\n];\n\n// Add predefined user to user list\nfor (const user of PREDEFINED_USERS) {\n    const id = user.split(' ').join('.').toLowerCase();\n    const new_user = generateMockUser({ id, name: user });\n    new_user.location = true;\n    MOCK_USERS.push(new_user);\n}\n\n// Add handler for users index\nwindow.control.handlers.push({\n    path: `${API}/users`,\n    metadata: MOCK_USERS,\n    callback: (event) => {\n        if (event.query_params.q) {\n            const query = event.query_params.q.toLowerCase();\n            return MOCK_USERS.filter(i =>\n                (i.id || '').toLowerCase().indexOf(query) >= 0 ||\n                (i.name || '').toLowerCase().indexOf(query) >= 0 ||\n                (i.email || '').toLowerCase().indexOf(query) >= 0\n            );\n        }\n        return MOCK_USERS;\n    }\n} as MockHttpRequestHandler);\n\n// Add handler for current user\nwindow.control.handlers.push({\n    path: `/api/engine/v2/users/current`,\n    metadata: MOCK_USERS[MOCK_USERS.length - 1],\n} as MockHttpRequestHandler);\n\n// Add handler for users show\nwindow.control.handlers.push({\n    path: `${API}/users/:id`,\n    metadata: MOCK_USERS,\n    callback: (event) => {\n        const user = MOCK_USERS.find(i => i.id === event.route_params.id || i.name === event.route_params.id || i.email === event.route_params.id);\n        if (user) {\n            return user;\n        }\n        throw { status: 404, message: 'User not found' };\n    }\n} as MockHttpRequestHandler);\n\n// Add handler for contacts index\nwindow.control.handlers.push({\n    path: `${API}/contacts`,\n    metadata: MOCK_CONTACTS,\n    callback: (event) => {\n        if (event.query_params.q) {\n            const query = event.query_params.q.toLowerCase();\n            return MOCK_CONTACTS.filter(i =>\n                (i.id || '').toLowerCase().indexOf(query) >= 0 ||\n                (i.name || '').toLowerCase().indexOf(query) >= 0 ||\n                (i.email || '').toLowerCase().indexOf(query) >= 0\n            );\n        }\n        return MOCK_USERS;\n    }\n} as MockHttpRequestHandler);\n\n// Add handler for contacts show\nwindow.control.handlers.push({\n    path: `${API}/contacts/:id`,\n    metadata: MOCK_USERS,\n    callback: (event) => {\n        const user = MOCK_USERS.find(i => i.id === event.route_params.id || i.name === event.route_params.id);\n        if (user) {\n            return user;\n        }\n        throw { status: 404, message: 'User not found' };\n    }\n} as MockHttpRequestHandler);\n\n\n","\nimport { createSystem } from './systems.mock';\n\nimport './api/organisation.mock';\nimport './api/buildings.mock';\nimport './api/users.mock';\nimport './api/spaces.mock';\nimport './api/bookings.mock';\nimport './api/locations.mock';\n\nwindow.control = window.control || {};\nwindow.control.systems = {\n    ...window.control.systems,\n    ['sys-B0']: createSystem('sys-B0')\n} || {};\nwindow.control.handlers = window.control.handlers || [];\n","\n\nimport { generateMockSpace } from \"../../services/data/spaces/space.utilities\";\nimport { setMockBookingStartDatetime } from \"../../services/data/bookings/booking.utilities\";\n\nimport * as dayjs from 'dayjs';\n\nexport interface IBookingPanelBindings {\n    /** Whether user input is enabled */\n    touch_enabled: boolean;\n    /** Number of seconds before a meeting can be started, being truthy enables start/stop and auto-cancellations */\n    timeout?: number;\n    /** Number of seconds after the start of a meeting when it is auto-cancelled, overrides `timeout` value */\n    cancel_timeout?: number;\n    /** Whether to display hearing assistance UI elements */\n    has_accessability?: boolean;\n    /** URL to embed into the control modal when opened */\n    control_url?: string;\n    /** Whether to display catering UI elements */\n    has_catering?: boolean;\n    /** Whether to hide booking details(title and host) */\n    hide_details?: boolean;\n    /** Whether to hide the title of the displayed bookings */\n    hide_title?: boolean;\n    /** Whether to hide user(host) details */\n    hide_user?: boolean;\n    /** Whether to hide timeline availability */\n    hide_availability?: boolean;\n    /** Whether to disable booking from the UI */\n    booking_disabled?: boolean;\n    /** Whether booking future meetings are allowed */\n    no_timeline_bookings?: boolean;\n    /** Time before the booking end with which the current booking is endable in ms from UTC epoch */\n    is_endable?: number;\n    /** Whether to automatically ask user starting the current meeting */\n    ask_start?: boolean;\n    /** Whether to automatically ask user about ending the active meeting */\n    ask_end?: boolean;\n    /** Default meeting title if the displayed meeting doesn't have one */\n    default_title?: string;\n    /** Hide all meeting related details */\n    hide_all?: boolean;\n    /** Title of the active space */\n    title?: string;\n    /** Description of the active space */\n    description?: string;\n    /** URL of an icon image to display on the UI */\n    icon?: string;\n    /** Whether the space status is displayed on the right */\n    flip_status?: boolean;\n    /** Whether bookings can be automatically cancelled once they expire */\n    can_cancel?: boolean;\n    /** Minimum bookable duration in minutes */\n    min_duration?: number;\n    /** Maximum bookable duration in minutes */\n    max_duration?: number;\n    /** Start time of the business day with format `HH:mm` */\n    business_start?: string;\n    /** End time of the business day with format `HH:mm` */\n    business_end?: string;\n\n}\n\nconst LETTERS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('');\nconst NUMBERS = '0123456789'.split('');\n\nlet index = 0;\n\nconst SPACE_LIST: any[] = [];\n\nconst IMAGES: string[] = ['large_down', 'large_up', 'small_down', 'small_up'];\n\n/**\n * Create mock engine booking module with appropriate bookings and space data\n */\nexport function createSystem(id?: string) {\n    id = id || `sys-${LETTERS[Math.floor(index / NUMBERS.length)]}${NUMBERS[(index++) % NUMBERS.length]}`;\n    setMockBookingStartDatetime(dayjs().minute(-50).valueOf());\n    const space = generateMockSpace({ id });\n    SPACE_LIST.push(space);\n\n    const booking_bindings: IBookingPanelBindings = {\n        touch_enabled: true,\n        timeout: 300,\n        cancel_timeout: 600,\n        has_catering: true,\n        control_url: 'https://aca.im/demo/aca/control/',\n        icon: `/assets/img/${IMAGES[Math.floor(Math.random() * IMAGES.length)]}.png`\n    };\n\n    const today = dayjs();\n    const desk_bindings = {\n        'zone_lvl-01:bookings': {\n            'SYD.1.09.E': {\n                [today.format('YYYY-MM-DD')]: {\n                    // 'first@acaprojects.com': {\n                    'zo-kalar@acaprojects.com': {\n                        start: today.subtract(1, 'h').unix(),\n                        end: today.add(1, 'h').unix(),\n                        checked_in: true\n                    }\n                },\n                [today.add(1, 'd').format('YYYY-MM-DD')]: {\n                    'second@acaprojects.com': {\n                        start: today.add(1, 'd').subtract(1, 'h').unix(),\n                        end: today.add(1, 'd').add(1, 'h').unix()\n                    }\n                }\n            },\n            'SYD.1.09.F': {},\n            'SYD.1.09.G': {}\n        },\n        'zone_lvl-02:bookings': {\n            'SYD.2.01.A': {\n                [today.format('YYYY-MM-DD')]: {\n                    'first@acaprojects.com': {\n                        start: today.subtract(1, 'h').unix(),\n                        end: today.add(1, 'h').unix(),\n                        checked_in: true\n                    }\n                },\n                [today.add(1, 'd').format('YYYY-MM-DD')]: {\n                    'second@acaprojects.com': {\n                        start: today.add(1, 'd').subtract(1, 'h').unix(),\n                        end: today.add(1, 'd').add(1, 'h').unix()\n                    }\n                }\n            },\n            'SYD.2.01.B': {},\n            'SYD.2.01.C': {}\n        }\n    };\n\n    const system = {\n        id, name: space.name,\n        Bookings: [],\n        DeskManagement: [{\n            'zone_lvl-01:desk_ids': ['SYD.1.09.E', 'SYD.1.09.F', 'SYD.1.09.G']\n        }],\n        DeskBookings: []\n    };\n    system.Bookings.push({\n        ...booking_bindings,\n        room_name: space.name,\n        today: space.bookings,\n        $start_meeting: (time: number) => {\n            system.Bookings[0].last_meeting_started = time;\n        },\n        $cancel_meeting: (time: number, reason: string) => {\n            const list = system.Bookings[0].today;\n            system.Bookings[0].today = list.filter(i => i.date !== time);\n        },\n        $waiter_call: () => {\n            console.log(`[MOCK][${id}] Waiter called...`);\n        }\n    });\n    system.DeskBookings.push({\n        ...desk_bindings,\n        $book: (email: string, desk: string, date: number) => {\n            console.log('[MOCK] Book called');\n        },\n        $check_in: (email: string, desk: string) => {\n            system.DeskBookings[0]['zone_lvl-01:bookings'][desk][dayjs().format('YYYY-MM-DD')][email].checked_in = true;\n        },\n        $check_out: (email: string, desk: string) => {\n            console.log(`[MOCK]Check out called`);\n        },\n    });\n    return system;\n}\n","\nimport { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { EditorModule } from '@tinymce/tinymce-angular';\nimport { ComposerModule } from '@placeos/composer';\n\nimport { ScrollingModule } from '@angular/cdk/scrolling';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatTabsModule } from '@angular/material/tabs';\n\nimport { APipesModule } from '@acaprojects/ngx-pipes';\nimport { AInteractiveMapModule } from '@acaprojects/ngx-interactive-map';\nimport { ACustomEventsModule } from '@acaprojects/ngx-custom-events';\nimport { ADatePickerModule } from '@acaprojects/ngx-date-picker';\n\nimport { BaseDirective } from './base.directive';\nimport { LoginComponent } from './components/login/login.component';\nimport { IconComponent } from './components/icon/icon.component';\nimport { TopbarHeaderComponent } from './components/topbar-header/topbar-header.component';\nimport { OverlayMenuComponent } from './components/overlay-menu/overlay-menu.component';\nimport { FooterMenuComponent } from './components/footer-menu/footer-menu.component';\nimport { SearchbarComponent } from './components/searchbar/searchbar.component';\nimport { UserAvatarComponent } from './components/user-avatar/user-avatar.component';\nimport { MapControlsComponent } from './components/map-controls/map-controls.component';\nimport { PopoutMenuComponent } from './components/popout-menu/popout-menu.component';\nimport { FeedbackComponent } from './components/feedback/feedback.component'\n\nimport { UserFormComponent } from './components/forms/user-form/user-form.component';\nimport { BookingFormComponent } from './components/forms/booking-form/booking-form.component';\n\nimport { UserSearchFieldComponent } from './components/custom-fields/user-search-field/user-search-field.component';\nimport { TimeFieldComponent } from './components/custom-fields/time-field/time-field.component';\nimport { DurationFieldComponent } from './components/custom-fields/duration-field/duration-field.component';\nimport { DateFieldComponent } from './components/custom-fields/date-field/date-field.component';\nimport { ActionFieldComponent } from './components/custom-fields/action-field/action-field.component';\nimport { UserListFieldComponent } from './components/custom-fields/user-list-field/user-list-field.component';\nimport { CounterComponent } from './components/custom-fields/counter/counter.component';\n\nconst COMPONENTS: Type<any>[] = [\n    BaseDirective,\n    LoginComponent,\n    IconComponent,\n    TopbarHeaderComponent,\n    OverlayMenuComponent,\n    FooterMenuComponent,\n    SearchbarComponent,\n    UserAvatarComponent,\n\n    UserFormComponent,\n    BookingFormComponent,\n\n    MapControlsComponent,\n    PopoutMenuComponent,\n    FeedbackComponent\n];\n\nconst ENTRY_COMPONENT: Type<any>[] = [\n    DateFieldComponent,\n    ActionFieldComponent,\n    TimeFieldComponent,\n    DurationFieldComponent,\n    UserSearchFieldComponent,\n    UserListFieldComponent,\n    CounterComponent,\n];\n\nconst MATERIAL_MODULES: any[] = [\n    MatButtonModule,\n    MatSnackBarModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatChipsModule,\n    MatRippleModule,\n    MatMenuModule,\n    MatCheckboxModule,\n    MatTooltipModule,\n    MatRadioModule,\n    MatTabsModule\n];\n\nconst CDK_MODULES: any[] = [\n    ScrollingModule\n];\n\n@NgModule({\n    declarations: [\n        ...COMPONENTS,\n        ...ENTRY_COMPONENT,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        APipesModule,\n        AInteractiveMapModule,\n        ADatePickerModule,\n        ACustomEventsModule,\n        RouterModule,\n        EditorModule,\n        ComposerModule,\n        ...MATERIAL_MODULES,\n        ...CDK_MODULES\n    ],\n    exports: [\n        APipesModule,\n        AInteractiveMapModule,\n        ACustomEventsModule,\n        ADatePickerModule,\n        ...COMPONENTS,\n        ...ENTRY_COMPONENT,\n        ...MATERIAL_MODULES,\n        ...CDK_MODULES\n    ]\n})\nexport class SharedContentModule {}\n","import { HashMap } from \"./types.utilities\";\n\n/**\n * Convert map into a query string\n * @param map Key value pairs to convert\n */\nexport function toQueryString(map: HashMap) {\n    let str = '';\n    if (map) {\n        for (const key in map) {\n            if (map.hasOwnProperty(key) && map[key] !== undefined && map[key] !== null) {\n                str += `${(str ? '&' : '')}${key}=${map[key]}`;\n            }\n        }\n    }\n    return str;\n}\n","\nimport { humaniseDuration } from './general.utilities';\n\nimport { User } from '../../services/data/users/user.class';\nimport { Space } from '../../services/data/spaces/space.class';\n\nimport * as dayjs from 'dayjs';\n\n// attendees: FormFormatters.attendees(user),\n// date: FormFormatters.date,\n// room: FormFormatters.space,\n// recurrence: FormFormatters.recurrence\n\n/**\n * Get function to create formatted string for a list of users with a host\n * @param host Host user\n */\nexport function formatAttendeesWithHost(host: User): (_: User[]) => string {\n    return (l) => formatAttendees(l, host);\n}\n\n/**\n * Create formatted string from a list of users\n * @param list List of users\n * @param host Owner of the list of users\n */\nexport function formatAttendees(list: User[], host?: User) {\n    let attendee_str: string = '';\n    if (list && list.length > 0) {\n        const users = [...list];\n        if (host) {\n            const result = users.find(a => a.email === host.email);\n            if (result) {\n                users.splice(users.indexOf(result), 1);\n            }\n        }\n        const length = users.length + (host ? 1 : 0);\n        attendee_str = `${length} Attendee${length === 1 ? '' : 's'}; ${host ? host.name : ''}`;\n        for (const item of users) {\n            if (attendee_str) {\n                attendee_str += ', ';\n            }\n            attendee_str += item.name;\n        }\n        attendee_str = attendee_str.replace('; ,', ';');\n    }\n    return attendee_str;\n}\n\n/**\n * Create date formatted string for given date\n * @param date Date to format\n */\nexport function formatDate(date: number) {\n    return dayjs(date).format('DD MMMM YYYY');\n}\n\n/**\n * Create time formatted string for given date\n * @param date Date to format\n */\nexport function formatTime(date: number) {\n    return dayjs(date).format('h:mm A');\n}\n\n/**\n * Create formatted string for a period of given duration\n * @param duration Period duration in minutes\n */\nexport function formatPeriodWithDuration(duration: number) {\n    return (t) => formatPeriod(t, duration);\n}\n\n/**\n * Create formatted string for a period of given duration\n * @param timestamp Start hours and minutes of the period in the format `HH:mm`\n * @param duration Period duration in minutes\n */\nexport function formatPeriod(timestamp: string, duration: number = 60) {\n    const parts = timestamp.split(':');\n    const date = dayjs().hour(+parts[0]).minute(+parts[1]);\n    return `${date.format('h:mm A')} - ${date.add(duration, 'm').format('h:mm A')} (${humaniseDuration(duration)})`;\n}\n\n/**\n * Create formatted human readable string for a given duration\n * @param duration Duration in minutes\n */\nexport function formatDuration(duration: number) {\n    return humaniseDuration(duration);\n}\n\n/** Human readable names of applicable recurrence periods */\nexport const RECURRENCE_PERIODS: string[] = ['None', 'Daily', 'Weekly', 'Monthly', 'Yearly'];\n\n/**\n * Create human readable string for recurrence metadata\n * @param value\n */\nexport function formatRecurrence(value: { period: string | number, end: number }) {\n    if (!value || !value.period || value.period as any >= RECURRENCE_PERIODS.length) {\n        return 'No recurrence';\n    }\n    const period = typeof value.period === 'string' ? value.period : RECURRENCE_PERIODS[value.period];\n    const end = value.end ? `until ${dayjs(value.end).format('DD MMM YYYY')}` : 'forever';\n    return `${period} ${end}`;\n}\n\n/**\n * Create human readable string for a room or list of rooms\n * @param list List of spaces/rooms\n */\nexport function formatSpaces(list: Space | Space[]) {\n    if (!list || (list instanceof Array && list.length <= 0)) {\n        return 'No selected space';\n    }\n    if (list instanceof Array) {\n        return list.length === 1 ? list[0].name : `${list.length} Space${list.length !== 1 ? 's' : ''}`;\n    } else {\n        const capacity = list.capacity ? '(' + list.capacity + ' ' + (list.capacity === 1 ? 'person' : 'people') + ')' : '';\n        return `${list.name} ${capacity}`;\n    }\n}\n","import { HashMap, Point } from './types.utilities';\n\nimport * as dayjs from 'dayjs';\n\nexport function getItemWithKeys(keys: string[], map: HashMap) {\n    const key = keys.shift();\n    if (map[key]) {\n        return keys.length > 0 ? getItemWithKeys(keys, map[key]) : map[key];\n    }\n    return null;\n}\n\n/* istanbul ignore next */\n/**\n * Checks whether the platform is a mobile device.\n */\nexport function isMobileDevice(): boolean {\n    const r = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i;\n    return !!navigator.userAgent.match(r);\n}\n\n/* istanbul ignore next */\n/**\n * Checks whether the browser is Mobile Safari.\n */\nexport function isMobileSafari(): boolean {\n    const agent = navigator.userAgent;\n    return !!(\n        agent.match(/iPhone|iPad|iPod/) &&\n        agent.match(/AppleWebKit/) &&\n        !agent.match('CriOS')\n    );\n}\n\n/* istanbul ignore next */\n/**\n * Checks whether the browser is Android Chrome.\n */\nexport function isAndroidChrome(): boolean {\n    const agent = navigator.userAgent;\n    return !!(agent.match(/Android/) && agent.match(/Chrome/));\n}\n\n/**\n * Generate string representation of a number with zeros padding the length\n * @param value Number to pad with zeros\n * @param length Length of the resulting string\n */\nexport function padZero(value: number, length: number): string {\n    let str = value.toString();\n    while (str.length < length) {\n        str = '0' + str;\n    }\n    return str;\n}\n\n/**\n * Remove duplicates from the given array\n * @param array List of items to remove duplicates from\n * @param key Key on array objects to compare for uniqueness\n */\nexport function unique(array: any[], key: string = '') {\n    return array.filter(\n        (el, pos, arr) =>\n            el &&\n            arr.indexOf(\n                key ? arr.find((i) => i && i[key] === el[key]) : arr.find((i) => i === el)\n            ) === pos\n    );\n}\n\n/**\n * Convert duration to human readable string\n * @param duration Duration in minutes\n * @param short Whether to use short form of duration words e.g. hours as h\n */\nexport function humaniseDuration(duration: number, short: boolean = false) {\n    if (!duration || duration < 0) {\n        return '';\n    }\n    const h = Math.floor(duration / 60);\n    let d = `${h >= 1 ? h + (short ? 'h' : ' hour' + (h === 1 ? '' : 's')) : ''}`;\n    if (duration % 60 !== 0) {\n        if (d) {\n            d += short ? ' ' : ', ';\n        }\n        const m = duration % 60;\n        d += `${m >= 1 ? m + (short ? 'm' : ' minute' + (m === 1 ? '' : 's')) : ''}`;\n    }\n    return d;\n}\n\n/**\n * Get a filtered list of items\n * @param filter Value to filter on\n * @param items List of results to filter\n * @param fields Fields to check for matches on each item\n */\nexport function filterList<T = HashMap>(\n    filter: string,\n    items?: T[],\n    fields: string[] = ['id']\n): T[] {\n    let results: any[];\n    // Tokenise filter string\n    const filters = (filter || '').toLowerCase().split(' ');\n    const list = {};\n    for (const f of filters) {\n        /* istanbul ignore else */\n        if (f) {\n            /* istanbul ignore else */\n            if (!list[f]) {\n                list[f] = 0;\n            }\n            list[f]++;\n        }\n    }\n    // Group similar tokens\n    const parts = [];\n    for (const f in list) {\n        /* istanbul ignore else */\n        if (list.hasOwnProperty(f)) {\n            parts.push({ word: f, count: list[f], regex: new RegExp(f, 'gi') });\n        }\n    }\n    parts.sort((a, b) => b.word.length - a.word.length || a.word.localeCompare(b.word));\n    const item_list = JSON.parse(JSON.stringify(items || []));\n    /* istanbul ignore else */\n    if (filter) {\n        results = item_list.filter((item) => {\n            let match_count = 0;\n            item.match_index = 65535;\n            item.match = '';\n            const field_list = {};\n            // Initialise field match variables\n            for (const f of fields) {\n                field_list[f] = {\n                    value: (item[f] || '').toLowerCase(),\n                    index: 65536,\n                    matched: 0,\n                };\n            }\n            // Search for matches with the tokenised filter string\n            for (const i of parts) {\n                /* istanbul ignore else */\n                if (i.word) {\n                    // Check fields for matches\n                    for (const f of fields) {\n                        const field = field_list[f];\n                        const index = field.value.indexOf(i.word);\n                        field.index = index < field.index ? index : field.index;\n                        field.matches = (field.value.match(i.regex) || []).length;\n                        field.value = field.value.replace(i.regex, ' ');\n                    }\n                    // Update token match count\n                    for (const f of fields) {\n                        const field = field_list[f];\n                        /* istanbul ignore else */\n                        if (field.matches >= i.count) {\n                            match_count++;\n                            // Update field matches\n                            let changed = 0;\n                            const tokens = (item[`match_${f}`] || item[f] || '').split(' ');\n                            for (const k of tokens) {\n                                /* istanbul ignore else */\n                                if (changed >= i.count) {\n                                    break;\n                                }\n                                /* istanbul ignore else */\n                                if (k.toLowerCase().indexOf(i.word) >= 0 && k.indexOf('`') < 0) {\n                                    tokens[tokens.indexOf(k)] = k.replace(i.regex, '`$&`');\n                                    changed++;\n                                }\n                            }\n                            item[`match_${f}`] = tokens.join(' ');\n                            break;\n                        }\n                    }\n                }\n            }\n            // Get field with the most relevent match\n            for (const f of fields) {\n                const field = field_list[f];\n                /* istanbul ignore else */\n                if (field.index < item.match_index && field.index >= 0) {\n                    item.match_index = field.index;\n                    item.match = f;\n                }\n            }\n            return item.match_index >= 0 && item.match && match_count >= parts.length;\n        });\n    } else {\n        results = item_list;\n    }\n    // Sort by order of relevence then name\n    results.sort((a, b) => {\n        const diff = a.match_index - b.match_index;\n        return diff === 0 ? a.name.localeCompare(b.name) : diff;\n    });\n    return results;\n}\n\n/**\n * Convert a match string from `filterList` to renderable HTML\n * @param str Match string to change\n */\nexport function matchToHighlight(str: string): string {\n    /* istanbul ignore else */\n    if (str) {\n        str = str.replace(/\\`[a-zA-Z0-9\\@\\.\\_]*\\`/g, '<span class=\"highlight\">$&</span>');\n        str = str.replace(/\\`/g, '');\n    }\n    return str;\n}\n\n/**\n * Convert time string to ms from UTC epoch for today\n * @param time Time string in the format `HH:mm`\n */\nexport function timeToDate(time: string): number {\n    const parts = time.split(':');\n    const date = dayjs()\n        .hour(+parts[0])\n        .minute(+parts[1])\n        .startOf('m');\n    return date.valueOf();\n}\n\n/**\n * Generate a random number\n * @param ceil Biggest value to generate not inclusive\n * @param floor Smallest value to generate. Defaults to 0\n */\nexport function randomInt(ceil: number, floor: number = 0) {\n    return Math.floor(Math.random() * (ceil - floor)) + floor;\n}\n\n/** Get time format string for locale */\nexport function timeFormatString(): string {\n    return is24HourTime() ? 'HH:mm' : 'h:mm A';\n}\n\n/** Whether locale string is displayed in 24 hour time */\nexport function is24HourTime(): boolean {\n    const date = new Date();\n    const localeString = date.toLocaleTimeString();\n    return localeString.indexOf('AM') < 0 && localeString.indexOf('PM') < 0;\n}\n\n/**\n * Downloads a file to the users computer with the given filename and contents\n * @param filename Name of the file to download\n * @param contents Contents of the file to download\n */\nexport function downloadFile(filename: string, contents: string) {\n    const element = document.createElement('a');\n    element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(contents));\n    element.setAttribute('download', filename);\n\n    element.style.display = 'none';\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n}\n\n/**\n * Parse raw CSV data into a JSON object\n * @param csv CSV data to parse\n */\nexport function csvToJson(csv: string) {\n    const lines = csv.split('\\n');\n    let fields = lines.splice(0, 1)[0].split(',');\n    fields = fields.map((v) => v.replace('\\r', ''));\n    const list: any[] = [];\n    for (const line of lines) {\n        let parts = line.split(',');\n        parts = parts.map((v) => v.replace('\\r', ''));\n        /* istanbul ignore else */\n        if (parts.length >= fields.length) {\n            const item: any = {};\n            for (let i = 0; i <= parts.length; i++) {\n                let part = null;\n                part = parts[i];\n                /* istanbul ignore else */\n                if (part !== undefined) {\n                    item[(fields[i] || '').split(' ').join('_').toLowerCase()] = part;\n                }\n            }\n            list.push(item);\n        }\n    }\n\n    return list;\n}\n\n/**\n * Convert javascript array to CSV string\n * @param json Javascript array to convert\n */\nexport function jsonToCsv(json: HashMap[]) {\n    /* istanbul ignore else */\n    if (json instanceof Array && json.length > 0) {\n        const keys = Object.keys(json[0]);\n        const valid_keys = keys.filter((key) => json[0].hasOwnProperty(key));\n        return `${valid_keys.join(',')}\\n${json\n            .map((item) => valid_keys.map((key) => item[key]).join(','))\n            .join('\\n')}`;\n    }\n    return '';\n}\n\n/* istanbul ignore next */\n/**\n * detect IE\n * returns version of IE or false, if browser is not Internet Explorer\n */\nexport function detectIE() {\n    var ua = window.navigator.userAgent;\n\n    var msie = ua.indexOf('MSIE ');\n    if (msie > 0) {\n        // IE 10 or older => return version number\n        return parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\n    }\n\n    var trident = ua.indexOf('Trident/');\n    if (trident > 0) {\n        // IE 11 => return version number\n        var rv = ua.indexOf('rv:');\n        return parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);\n    }\n\n    var edge = ua.indexOf('Edge/');\n    if (edge > 0) {\n        // Edge (IE 12+) => return version number\n        return parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);\n    }\n\n    // other browser\n    return false;\n}\n\n/**\n * Grab point details from mouse or touch event\n * @param event Event to grab details from\n */\nexport function eventToPoint(event: MouseEvent | TouchEvent): Point {\n    if (!event) {\n        return { x: -1, y: -1 };\n    }\n    if (event instanceof MouseEvent) {\n        return { x: event.clientX, y: event.clientY };\n    } else {\n        return event.touches && event.touches.length > 0\n            ? { x: event.touches[0].clientX, y: event.touches[0].clientY }\n            : { x: -1, y: -1 };\n    }\n}\n\n/**\n * Flatten nested array\n * @param an_array Array to flatten\n */\nexport function flatten<T = any>(an_array: T[]) {\n    const stack = [...an_array];\n    const res = [];\n    while (stack.length) {\n        // pop value from stack\n        const next = stack.pop();\n        if (Array.isArray(next)) {\n            // push back array items, won't modify the original input\n            stack.push(...next);\n        } else {\n            res.push(next);\n        }\n    }\n    // reverse to restore input order\n    return res.reverse();\n}\n","import { AbstractControl } from '@angular/forms';\n\nimport { User } from '../../services/data/users/user.class';\n\nimport * as dayjs from 'dayjs';\n\nconst HAS_ERROR = true;\n\n/**\n * Check that control value is a date that is the same or after from date\n * @param control Angular form control\n * @param is_from Comparison date(ms from UTC epoch). Defaults to the current time\n */\nexport function validateDate(control: AbstractControl, is_from: number = dayjs().valueOf()) {\n    const from = dayjs(is_from);\n    const date = dayjs(control.value || undefined);\n    return date.isBefore(from, 'd') ? { date: HAS_ERROR, message: 'Booking needs to be made in the future' } : null;\n}\n\n/**\n * Build start time validation function\n * @param date Date of the time to check\n * @param is_from Comparison date(ms from UTC epoch). Defaults to the current time\n */\nexport function buildValidateStartTime(date: number, is_from: number = dayjs().valueOf()) {\n    return (c) => validateStartTime(c, date, is_from);\n}\n\n/**\n * Check that control value time is after the comparison date time\n * @param control Angular form control\n * @param date Date of the time to check\n * @param is_from Comparison date(ms from UTC epoch). Defaults to the current time\n */\nexport function validateStartTime(control: AbstractControl, date: number, is_from: number = dayjs().valueOf()) {\n    const now = dayjs(is_from);\n    const parts = control.value.split(':');\n    const date_obj = dayjs(date).hour(+parts[0]).minute(+parts[1]);\n    return date_obj.isBefore(now, 'm') ? { start: HAS_ERROR, message: 'Booking time needs to be made in the future' } : null;\n}\n\nexport function buildValidateDuration(min: number = 30, max: number = 240) {\n    return (c) => validateDuration(c, min, max);\n}\n\nexport function validateDuration(control: AbstractControl, min: number = 30, max: number = 240) {\n    if (control.value < (min || 30)) {\n        return { duration: HAS_ERROR, message: `Minimum booking duration is ${min} minute${min === 1 ? 's' : ''}` };\n    } else if (control.value > (max || 480)) {\n        return { length: HAS_ERROR, message: `Maximum booking duration is ${max} minute${max === 1 ? 's' : ''}` };\n    }\n    return null;\n}\n\nexport function buildValidateAttendees(host: User, min: number = 0) {\n    return (c) => validateAttendees(c, host, min);\n}\n\nexport function validateAttendees(control: AbstractControl, host: User, min: number = 0) {\n    if (!control || !(control.value instanceof Array)) {\n        return min > 0\n            ? { invalid: true, message: `Minimum of ${min} attendee${min === 1 ? ' is' : 's are'} required other than you` }\n            : null;\n    }\n    const list: User[] = control.value;\n    if (host) {\n        const result = list.find(a => a.email === host.email);\n        if (result) { list.splice(list.indexOf(result), 1); }\n    }\n    return list.length >= min ? null : {\n        count: true,\n        message: `Minimum of ${min} attendee${min === 1 ? ' is' : 's are'} required other than you`\n    };\n}\n\nexport function validateEndTime(date_control: AbstractControl) {\n    return (control: AbstractControl) => {\n        const date = dayjs(date_control ? date_control.value : undefined).add(control.value || 60, 'm');\n        return date.isBefore(dayjs(), 'm') ? { end_time: true } : null;\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { HashMap, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { humaniseDuration } from 'src/app/shared/utilities/general.utilities';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { UsersService } from 'src/app/services/data/users/users.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-booking-confirm-modal',\n    templateUrl: './booking-confirm.component.html',\n    styleUrls: ['./booking-confirm.component.scss']\n})\nexport class BookingConfirmComponent extends BaseDirective {\n    /** Emitter for user actions on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Display string for changes are being processed */\n    public loading: string;\n    /** Whether space availability is being checked */\n    public checking_available: boolean;\n    /** Whether to show all attendees */\n    public show_attendees: boolean;\n    /** Whether to show all attendees */\n    public show_locations: boolean;\n    /** Whether to show all catering orders */\n    public show_orders: boolean;\n    /** Whether booking has succeeded */\n    public success: boolean;\n\n    /** Whether booking needs to be accepted */\n    public get is_request(): boolean {\n        const options = {\n            date: this.booking.changes.date || this.booking.date,\n            duration: this.booking.changes.duration || this.booking.duration,\n            host: this.organiser\n        };\n        return this.spaces.reduce((request, space) => request || space.byRequest(options), false);\n    }\n\n    /** Booking to confirm changes to */\n    public get booking(): Booking {\n        return this._data.booking;\n    }\n\n    /** Title of the displayed event */\n    public get title(): string {\n        return this.booking.changes.title || this.booking.title;\n    }\n\n    /** Display string of when the event will occur */\n    public get when(): string {\n        const date_value = this.booking.changes.date || this.booking.date;\n        const duration_value = this.booking.changes.duration || this.booking.duration;\n        const all_day = this.booking.changes.all_day || this.booking.all_day;\n        const date = dayjs(date_value);\n        const end = date.add(duration_value, 'm');\n        if (all_day || duration_value > 23 * 60) {\n            return `${date.format('DD MMM YYYY')} - All Day`;\n        } else {\n            if (date.isSame(end, 'd')) {\n                return `${date.format('DD MMM YYYY, h:mm A')} - ${end.format('h:mm A')}`;\n            } else {\n                return `${date.format('DD MMM YYYY, h:mm A')} - ${end.format(\n                    'DD MMM YYYY, h:mm A'\n                )}`;\n            }\n        }\n    }\n\n    /** Display string for the event's duration */\n    public get duration(): string {\n        const duration_value = this.booking.changes.duration || this.booking.duration;\n        return humaniseDuration(duration_value);\n    }\n\n    /** List of spaces associated with the event */\n    public get spaces(): readonly Space[] {\n        return this.booking.changes.space_list || this.booking.space_list;\n    }\n\n    /** List of attendees associated with the event not including the host */\n    public get attendees(): User[] {\n        const attendees = this.booking.changes.attendees || this.booking.attendees;\n        return attendees.filter(i => i.email !== this.organiser.email);\n    }\n\n    /** Host of the event */\n    public get organiser(): User {\n        return (\n            this.booking.changes.organiser || this.booking.organiser || this._users.current\n        );\n    }\n\n    /** Details about the event */\n    public get notes(): string {\n        return this.booking.changes.body || this.booking.body;\n    }\n\n    /** List of catering orders in the booking */\n    public get catering(): CateringOrder[] {\n        return (this.booking.changes.catering || this.booking.catering).map(order => {\n            const space: any = this.spaces.find(a_space => a_space.id === order.location_id) || {\n                level: {}\n            };\n            const building: any =\n                this._org.buildings.find(bld => bld.id === space.level.id) || {};\n            return new CateringOrder({ ...order, location: space.name, symbol: building.currency });\n        });\n    }\n\n    /** Map of changes to the booking */\n    public get changes(): HashMap<boolean> {\n        /* istanbul ignore else */\n        if (!this.booking.id) {\n            return {};\n        }\n        const changes = this.booking.changes;\n        return Object.keys(changes).reduce((map, key) => {\n            /* istanbul ignore else */\n            if (changes[key]) {\n                map[key] = changes[key] !== this.booking[key];\n            }\n            return map;\n        }, {});\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<BookingConfirmComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: { booking: Booking },\n        private _service: ApplicationService,\n        private _org: OrganisationService,\n        private _users: UsersService,\n        private _spaces: SpacesService,\n        private _router: Router\n    ) {\n        super();\n        /* istanbul ignore else */\n        if (!this._data.booking) {\n            this._service.notifyError('No booking data to confirm');\n            this._dialog_ref.close();\n        }\n    }\n\n    /**\n     * Save booking changes\n     */\n    public saveChanges() {\n        this.loading = 'Checking availability of selected spaces';\n        this._dialog_ref.disableClose = true;\n        const onError = message => err => {\n            this.loading = null;\n            this._dialog_ref.disableClose = false;\n            this._service.notifyError(\n                `${message}. Error: ${err}`\n            );\n        }\n        this.checkSpaceAvailability().then(\n            () => {\n                this.loading = 'Processing booking request...';\n                this.booking.save().then(\n                    () => {\n                        this.loading = null;\n                        this.success = true;\n                        this._dialog_ref.disableClose = false;\n                        this.event.emit({ reason: 'done' });\n                        this._service.notifySuccess(\n                            `Successfully ${this.booking.id ? 'updated' : 'created'} booking`\n                        );\n                    },\n                    onError(`Error ${this.booking.id ? 'updating' : 'creating'} booking`)\n                );\n            },\n            onError('Error checking space availability')\n        );\n    }\n\n    public newBooking() {\n        localStorage.removeItem('ACA_STAFF.booking_form_data');\n        this._router.navigate(['/book', 'spaces'])\n        this._dialog_ref.close();\n    }\n\n    /**\n     * Check whether the selected spaces are available for the selected time period\n     */\n    public checkSpaceAvailability(): Promise<void> {\n        const spaces = this.spaces;\n        /* istanbul ignore else */\n        if (\n            (this.booking.id && !this.changes.date && !this.changes.duration) ||\n            (spaces && spaces.length <= 0)\n        ) {\n            return Promise.resolve();\n        }\n        return new Promise((resolve, reject) => {\n            this._spaces.available({\n                room_ids: spaces.map(space => space.id).join(','),\n                date: this.booking.changes.date || this.booking.date,\n                duration: this.booking.changes.duration || this.booking.duration\n            }).then(\n                space_list => {\n                    for (const space of space_list) {\n                        /* istanbul ignore else */\n                        if (!space.was_available) {\n                            return reject(\n                                `${space.name} is not available at the select time period.`\n                            );\n                        }\n                    }\n                    resolve();\n                },\n                err => reject(err)\n            );\n        });\n    }\n}\n","<mat-dialog-content *ngIf=\"!loading && booking; else load_state\">\n    <main>\n        <button name=\"close\" mat-icon-button mat-dialog-close>\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"\n            ></app-icon>\n        </button>\n        <div class=\"details\">\n            <img\n                [src]=\"\n                    success\n                        ? is_request\n                            ? 'assets/img/requested.svg'\n                            : 'assets/img/confirmed.svg'\n                        : 'assets/img/edit.svg'\n                \"\n            />\n            <div class=\"text\">\n                <span i18n=\"Booking confirm header\">Booking Details</span>\n                <span *ngIf=\"success && !is_request\" i18n=\"Booking confirmed\">Confirmed!</span>\n                <span class=\"request\" *ngIf=\"success && is_request\" i18n=\"Booking requested\"\n                    >Requested!</span\n                >\n            </div>\n            <div class=\"info\" *ngIf=\"success && is_request\" i18n=\"Booking requested description\">\n                Please await confirmation of room\n            </div>\n        </div>\n        <div class=\"field\" name=\"title\">\n            <label i18n=\"Booking confirm title label\"\n                >Title<span *ngIf=\"changes.title\">*</span>:</label\n            >\n            <div class=\"value\">{{ title || 'No title' }}</div>\n        </div>\n        <div class=\"field\" name=\"when\">\n            <label i18n=\"Booking confirm when label\"\n                >When<span *ngIf=\"changes.date\">*</span>:</label\n            >\n            <div class=\"value\">{{ when }}</div>\n        </div>\n        <div class=\"field\" name=\"duration\">\n            <label i18n=\"Booking confirm duration label\"\n                >Duration<span *ngIf=\"changes.duration\">*</span>:</label\n            >\n            <div class=\"value\">{{ duration }}</div>\n        </div>\n        <div class=\"field multi\" name=\"location\">\n            <label i18n=\"Booking confirm locations label\"\n                >Locations({{ spaces.length || '0' }})<span *ngIf=\"changes.location\">*</span\n                >:</label\n            >\n            <div class=\"value\">\n                <div class=\"list\" [class.shown]=\"show_locations\">\n                    <div class=\"list-item\" *ngFor=\"let item of spaces\" [title]=\"item?.name\">\n                        <div class=\"text\">{{ item?.name }}</div>\n                    </div>\n                    <div\n                        class=\"list-item\"\n                        *ngIf=\"!spaces.length\"\n                        i18n=\"Booking confirm locations empty label\"\n                    >\n                        No Locations\n                    </div>\n                </div>\n                <button\n                    class=\"show\"\n                    *ngIf=\"spaces.length > 5\"\n                    (touchrelease)=\"show_locations = !show_locations\"\n                    i18n=\"Booking confirm locations show more label\"\n                >\n                    {{ show_locations ? 'Hide' : 'Show' }} Locations\n                </button>\n            </div>\n        </div>\n        <div class=\"field\" name=\"host\">\n            <label i18n=\"Booking confirm host label\"\n                >Host<span *ngIf=\"changes.organiser_email\">*</span>:</label\n            >\n            <div class=\"value\">{{ organiser?.name || organiser?.email }}</div>\n        </div>\n        <div class=\"field\" name=\"attendees\">\n            <label i18n=\"Booking confirm attendees label\"\n                >Attendees({{ attendees.length || '0' }})<span *ngIf=\"changes.attendees\">*</span\n                >:</label\n            >\n            <div class=\"value\">\n                <span\n                    *ngIf=\"!attendees || !attendees.length\"\n                    i18n=\"Booking confirm attendees empty label\"\n                    >&lt;No Attendees&gt;</span\n                >\n                <div class=\"list\" [class.shown]=\"show_attendees\">\n                    <div\n                        class=\"list-item\"\n                        *ngFor=\"let item of attendees\"\n                        [title]=\"item?.name + (item?.email ? '\\n' + item.email : '')\"\n                    >\n                        <div class=\"text\">\n                            <div class=\"name\">{{ item.name }}</div>\n                            <div class=\"email\" *ngIf=\"item.email\">\n                                <a [href]=\"'mailto:' + item.email + '?subject=' + booking.title\">{{\n                                    item.email\n                                }}</a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <button\n                    class=\"show\"\n                    *ngIf=\"attendees.length > 5\"\n                    (touchrelease)=\"show_attendees = !show_attendees\"\n                    i18n=\"Booking confirm attendees show more label\"\n                >\n                    {{ show_attendees ? 'Hide' : 'Show' }} Attendees\n                </button>\n            </div>\n        </div>\n        <div class=\"field\" name=\"notes\">\n            <label i18n=\"Booking confirm notes label\"\n                >Notes<span *ngIf=\"changes.body\">*</span>:</label\n            >\n            <div class=\"value\" [innerHTML]=\"notes || 'No notes'\"></div>\n        </div>\n        <div class=\"field\" name=\"catering\">\n            <label i18n=\"Booking confirm catering label\"\n                >Catering Orders({{ catering.length || '0' }})<span *ngIf=\"changes.catering\">*</span\n                >:</label\n            >\n            <div class=\"value\">\n                <div class=\"list\" [class.shown]=\"show_orders\">\n                    <div class=\"list-item\" *ngFor=\"let order of catering\">\n                        <div class=\"text\">\n                            <div class=\"name\">{{ order.location || '&lt;Removed&gt;' }}</div>\n                            <div class=\"email\">\n                                {{ order.item_count }} item{{ order.item_count === 1 ? '' : '' }} |\n                                {{ order.total / 100 | currency: order.symbol }}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <button\n                    class=\"show\"\n                    *ngIf=\"catering.length > 5\"\n                    (touchrelease)=\"show_orders = !show_orders\"\n                    i18n=\"Booking confirm catering show more label\"\n                >\n                    {{ show_attendees ? 'Hide' : 'Show' }} Orders\n                </button>\n            </div>\n        </div>\n        <div class=\"info\" *ngIf=\"booking?.id\" i18n=\"Booking confirm changes label\">\n            * - changed fields\n        </div>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading\">\n    <footer>\n        <ng-container *ngIf=\"!success; else success_actions\">\n            <button mat-button class=\"inverse\" mat-dialog-close i18n=\"Booking confirm edit action\">\n                Edit\n            </button>\n            <button mat-button (tapped)=\"saveChanges()\" i18n=\"Booking confirm save action\">\n                Save\n            </button>\n        </ng-container>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <main>\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">\n                {{ loading }}\n            </div>\n        </div>\n    </main>\n</ng-template>\n<ng-template #success_actions>\n    <button\n        mat-button\n        class=\"inverse\"\n        name=\"new\"\n        (tapped)=\"newBooking()\"\n        i18n=\"Booking confirm another booking action\"\n    >\n        New Booking\n    </button>\n    <button button mat-button mat-dialog-close name=\"to-schedule\" i18n=\"Booking confirm view schedule action\">\n        My Day\n    </button>\n</ng-template>\n","import {\n    Component,\n    OnInit,\n    Inject,\n    Output,\n    EventEmitter,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { FormGroup, Validators, AbstractControl, FormControl } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { HashMap, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { BookingNote } from 'src/app/services/data/bookings/booking.interfaces';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\nimport * as dayjs from 'dayjs';\n\nexport interface RequirementDetailsModalData {\n    spaces: Space[];\n    notes_field: AbstractControl;\n    codes_field: AbstractControl;\n    head_counts_field: AbstractControl;\n}\n\n@Component({\n    selector: 'a-requirement-details-modal',\n    templateUrl: './requirement-details-modal.component.html',\n    styleUrls: ['./requirement-details-modal.component.scss'],\n})\nexport class RequirementDetailsModalComponent implements OnInit {\n    /** Emitter for modal events */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Mapping of spaces to notes */\n    public notes: HashMap<string> = {};\n    /** Mapping of spaces to cost codes */\n    public codes: HashMap<string> = {};\n    /** Mapping of spaces to estimated head count */\n    public head_counts: HashMap<string> = {};\n    /** Mapping of spaces to form fields */\n    public form: HashMap<FormGroup> = {};\n    /** Map of spaces to whether they need a charge code */\n    public needs_charge_code: HashMap<boolean> = {};\n    /** Index of the active space */\n    public active_space: number = 0;\n\n    @ViewChild('content', { static: true }) private _content_el: ElementRef<HTMLElement>;\n\n    /** List of selected spaces */\n    public get space_list(): Space[] {\n        return this._data.spaces;\n    }\n\n    public get active_form(): FormGroup {\n        return this.form[this.space_list[this.active_space].id];\n    }\n\n    /** Whether form fields are valid */\n    public get is_valid(): boolean {\n        return this.space_list.reduce((valid, space) => valid && this.form[space.id].valid, true);\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _users: UsersService,\n        @Inject(MAT_DIALOG_DATA) private _data: RequirementDetailsModalData\n    ) {}\n\n    public ngOnInit(): void {\n        const note_list = this._data.notes_field.value.filter(\n            (note: BookingNote) => note.type === 'equipment'\n        );\n        this.notes = note_list.reduce((map, note) => {\n            map[note.space] = note.message;\n            return map;\n        }, {});\n        this.codes = { ...this._data.codes_field.value };\n        this.head_counts = { ...this._data.head_counts_field.value };\n        this.generateFormFields();\n    }\n\n    public submit(): void {\n        this.space_list.forEach((space) => this.form[space.id].markAllAsTouched());\n        /* istanbul ignore else */\n        if (this.is_valid) {\n            // Update notes\n            const notes = this._data.notes_field.value.filter(\n                (note: BookingNote) => note.type !== 'equipment'\n            );\n            const new_notes = this.space_list.map(\n                (space) =>\n                    ({\n                        author: this._users.current.name,\n                        type: 'equipment',\n                        message: this.form[space.id].controls.notes.value,\n                        space: space.id,\n                        date: dayjs().valueOf(),\n                    } as BookingNote)\n            );\n            this._data.notes_field.setValue(notes.concat(new_notes).filter((note) => note.message));\n            this._data.codes_field.setValue(\n                this.space_list.reduce((map, space) => {\n                    map[space.id] = this.form[space.id].controls.code.value;\n                    return map;\n                }, {})\n            );\n            this._data.head_counts_field.setValue(\n                this.space_list.reduce((map, space) => {\n                    map[space.id] = this.form[space.id].controls.head_count.value;\n                    return map;\n                }, {})\n            );\n            this.event.emit({ reason: 'done' });\n        } else {\n            this._scrollToBottom();\n        }\n    }\n\n    /** Generate form fields for each space */\n    private generateFormFields(): void {\n        for (const space of this.space_list) {\n            const building = this._org.buildings.find((bld) => bld.id === space.level.building_id);\n            this.needs_charge_code[space.id] = building.required.equipment_code;\n            this.form[space.id] = new FormGroup({\n                notes: new FormControl(this.notes[space.id] || ''),\n                code: new FormControl(\n                    this.codes[space.id] || '',\n                    building.required.equipment_code ? [Validators.required] : []\n                ),\n                head_count: new FormControl(this.head_counts[space.id] || '', [\n                    Validators.required,\n                ]),\n            });\n        }\n    }\n\n    /** Scroll the content container to the bottom */\n    private _scrollToBottom(): void {\n        this._content_el.nativeElement.scrollTo({\n            top: this._content_el.nativeElement.scrollHeight,\n            left: 0,\n            behavior: 'smooth',\n        });\n    }\n}\n","<div class=\"header\">\n    <div class=\"tabs\">\n        <mat-tab-group [(selectedIndex)]=\"active_space\">\n            <mat-tab *ngFor=\"let space of space_list\">\n                <ng-template mat-tab-label>\n                    <span [class.error]=\"form[space.id] && form[space.id].invalid && form[space.id].touched\">{{\n                        space.name + (form[space.id] && form[space.id].invalid && form[space.id].touched ? '*' : '')\n                    }}</span>\n                </ng-template>\n            </mat-tab>\n        </mat-tab-group>\n    </div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</div>\n<mat-dialog-content #content>\n    <main>\n        <div class=\"details\">\n            <img src=\"assets/img/equipment.svg\" />\n            <div class=\"text\" i18n=\"Booking equipment information\">\n                Would you like to add equipment to your booking's spaces?\n            </div>\n        </div>\n        <form *ngIf=\"space_list[active_space] && active_form\" [formGroup]=\"active_form\">\n            <div class=\"field\">\n                <label for=\"equipment-notes\" i18n=\"Booking equipment notes label\">\n                    (eg - particular room configurations or specific equipment etc) Additional\n                    requests are handled in confidence\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"equipment-notes\"\n                        formControlName=\"notes\"\n                        placeholder=\"Add notes here...\"\n                        i18n-placeholder\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"fieldset\">\n                <div class=\"field\">\n                    <label\n                        for=\"charge-code\"\n                        [class.error]=\"\n                            active_form.controls.code.touched && active_form.controls.code.invalid\n                        \"\n                        i18n=\"Booking equipment charge code label\"\n                    >\n                        Charge Code<span *ngIf=\"needs_charge_code[space_list[active_space].id]\"\n                            >*</span\n                        >\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"charge-code\"\n                            formControlName=\"code\"\n                            placeholder=\"Charge Code\"\n                            i18n-placeholder\n                        />\n                        <mat-hint i18n=\"Booking equipment charge code hint\">\n                            <span>Note:</span> Your booking will be confirmed before you are\n                            charged.\n                        </mat-hint>\n                        <mat-error i18n=\"Booking equipment charge code error\">\n                            Charge Code is required\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"field\">\n                    <label\n                        for=\"head-count\"\n                        [class.error]=\"\n                            active_form.controls.head_count.touched &&\n                            active_form.controls.head_count.invalid\n                        \"\n                        i18n=\"Booking equipment headcount label\"\n                    >\n                        Headcount Estimate<span>*</span>\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"head-count\"\n                            formControlName=\"head_count\"\n                            type=\"number\"\n                            placeholder=\"e.g. 12\"\n                            i18n-placeholder\n                        />\n                        <mat-hint i18n=\"Booking equipment headcount hint\">\n                            <span>Note:</span> This estimate is used to calculate catering and/or\n                            assign rooms. Please keep updated of any changes.\n                        </mat-hint>\n                        <mat-error i18n=\"Booking equipment headcount error\">\n                            Headcount Estimate is required\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button (tapped)=\"submit()\">Add to booking</button>\n    </footer>\n</mat-dialog-actions>\n","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { HomePageSettings, ApplicationLink } from 'src/app/shared/utilities/settings.interfaces';\n\n@Component({\n    selector: 'app-home',\n    templateUrl: './home.component.html',\n    styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent extends BaseDirective implements OnInit {\n    /** Settings for the home page */\n    public settings: HomePageSettings;\n    /** Whether to show the overlay menu */\n    public show_menu: boolean;\n    /** Tiles to display on the home page */\n    public get tiles(): ApplicationLink[] {\n        return (this.settings || { tiles: [] }).tiles || [];\n    }\n\n    /** Min width of a tile */\n    public get tile_width(): number {\n        const tiles = this.tiles;\n        if (tiles.length > 2) {\n            return 49;\n        }\n        return 99;\n    }\n\n    /** Height of each tile */\n    public get tile_height(): number {\n        const tiles = this.tiles;\n        if (tiles.length > 2) {\n            return 100 / ((tiles.length + tiles.length % 2) / 2 );\n        }\n        return 50;\n    }\n\n    constructor(private _service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.title = 'Home';\n        this._service.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.settings = this._service.setting('app.home') || {};\n        });\n    }\n}\n","<div class=\"home-page\">\n    <header class=\"header\">\n        <a-topbar-header [(menu)]=\"show_menu\" page=\"home\"></a-topbar-header>\n    </header>\n    <main class=\"body\">\n        <div class=\"bg-img\">\n            <img src=\"assets/img/mckinsey_lines.svg\">\n        </div>\n        <div\n            class=\"tile\"\n            *ngFor=\"let item of tiles; let i = index\"\n            [style.min-width]=\"tile_width + '%'\"\n            [style.height]=\"(tile_height) * (i === 0 ? 4 / 3 : 2 / 3) + '%'\"\n        >\n            <a *ngIf=\"item.link\" [href]=\"item.link\">\n                <div class=\"inner\">\n                    <app-icon [icon]=\"item.icon\"></app-icon>\n                    <div class=\"text\">{{ item.name }}</div>\n                </div>\n            </a>\n            <a *ngIf=\"!item.link\" [routerLink]=\"[item.route]\" routerLinkActive=\"active\">\n                <div class=\"inner\">\n                    <app-icon [icon]=\"item.icon\"></app-icon>\n                    <div class=\"text\">{{ item.name }}</div>\n                </div>\n            </a>\n        </div>\n    </main>\n    <footer class=\"footer\"></footer>\n</div>\n<a-overlay-menu [(show)]=\"show_menu\"></a-overlay-menu>\n","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from '../shared/base.directive';\nimport { ApplicationService } from '../services/app.service';\nimport { ApplicationLoadingState, LoadingState } from '../shared/utilities/types.utilities';\nimport { ApplicationIcon } from '../shared/utilities/settings.interfaces';\nimport { UsersService } from '../services/data/users/users.service';\n\n@Component({\n    selector: 'app-shell-wrapper',\n    templateUrl: './shell.component.html',\n    styleUrls: ['./shell.component.scss'],\n})\nexport class ShellWrapperComponent extends BaseDirective implements OnInit {\n    /** Loading state of the application */\n    public loading_state: ApplicationLoadingState;\n    /** Logo of the application organisation */\n    public logo: ApplicationIcon;\n\n    constructor(private _service: ApplicationService, private _users: UsersService) {\n        super();\n    }\n\n    /** Whether the user needs to login */\n    public get show_login(): boolean {\n        return !this._users.is_logged_in;\n    }\n\n    /** Whether a module is still loading data */\n    public get is_loading(): boolean {\n        if (this.loading_state) {\n            for (const mod in this.loading_state) {\n                if (this.loading_state[mod] && this.loading_state[mod].state === 'loading') {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    /** List of modules with a loading state */\n    public get loading_state_list(): LoadingState[] {\n        const list: LoadingState[] = [];\n        for (const mod in this.loading_state) {\n            if (this.loading_state[mod]) {\n                list.push(this.loading_state[mod]);\n            }\n        }\n        return list;\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'loading',\n            this._service.listen<ApplicationLoadingState>('loading', (loading) => {\n                this.loading_state = loading;\n            })\n        );\n        this._service.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.logo = this._service.setting('app.logo_light') || { type: 'icon' };\n        });\n    }\n}\n","\n<div class=\"shell\">\n    <div class=\"view\" *ngIf=\"!show_login\">\n        <router-outlet></router-outlet>\n    </div>\n    <div class=\"login-module\" *ngIf=\"show_login\">\n        <app-login></app-login>\n    </div>\n    <div class=\"loading-block\" *ngIf=\"is_loading\">\n        <div class=\"info-block\">\n            <div class=\"header\" [style.background-color]=\"logo?.background\">\n                <div class=\"logo\">\n                    <i *ngIf=\"logo?.type === 'icon'\" [class]=\"logo.class\">{{ logo.content }}</i>\n                    <img *ngIf=\"logo?.type === 'img'\" [src]=\"logo.src | safe:'resource'\" />\n                </div>\n            </div>\n            <div class=\"item\" *ngFor=\"let item of loading_state_list\">\n                <div class=\"message\">{{ item.message }}</div>\n                <div class=\"icon\">\n                    <ng-container [ngSwitch]=\"item.state\">\n                        <ng-container *ngSwitchCase=\"'complete'\">\n                            <i class=\"material-icons success\">done</i>\n                        </ng-container>\n                        <ng-container *ngSwitchCase=\"'failed'\">\n                            <i class=\"material-icons failure\">close</i>\n                        </ng-container>\n                        <ng-container *ngSwitchDefault>\n                            <mat-spinner diameter=\"16\"></mat-spinner>\n                        </ng-container>\n                    </ng-container>\n                </div>\n            </div>\n        </div>\n    </div>\n    <feedback></feedback>\n</div>\n","export const environment = {\n  production: true\n};\n","\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}