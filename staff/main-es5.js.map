{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/overlays/booking-rules-modal/booking-rules-modal.component.ts","webpack:///src/app/overlays/booking-rules-modal/booking-rules-modal.template.html","webpack:///src/app/overlays/confirm-modal/confirm-modal.component.ts","webpack:///src/app/overlays/confirm-modal/confirm-modal.component.html","webpack:///src/app/overlays/meeting-details-overlay/catering/catering.component.ts","webpack:///src/app/overlays/meeting-details-overlay/catering/catering.component.html","webpack:///src/app/overlays/meeting-details-overlay/display/display.component.ts","webpack:///src/app/overlays/meeting-details-overlay/display/display.component.html","webpack:///src/app/overlays/meeting-details-overlay/meeting-details-overlay.component.ts","webpack:///src/app/overlays/meeting-details-overlay/meeting-details-overlay.template.html","webpack:///src/app/overlays/meeting-details-overlay/space/space.component.ts","webpack:///src/app/overlays/meeting-details-overlay/space/space.component.html","webpack:///src/app/overlays/new-user-modal/new-user-modal.component.ts","webpack:///src/app/overlays/new-user-modal/new-user-modal.component.html","webpack:///src/app/overlays/overlays.module.ts","webpack:///src/app/overlays/recurrence-modal/recurrence-modal.component.ts","webpack:///src/app/overlays/recurrence-modal/recurrence-modal.component.html","webpack:///src/app/overlays/space-select-modal/space-select-modal.component.ts","webpack:///src/app/overlays/space-select-modal/space-select-modal.component.html","webpack:///src/app/overlays/time-extension/time-extension.component.ts","webpack:///src/app/overlays/time-extension/time-extension.component.html","webpack:///src/app/overlays/view-room-modal/view-room-modal.component.ts","webpack:///src/app/overlays/view-room-modal/view-room-modal.component.html","webpack:///src/app/services/app.service.ts","webpack:///src/app/services/data/base-api.class.ts","webpack:///src/app/services/data/base.service.ts","webpack:///src/app/services/data/bookings/booking.class.ts","webpack:///src/app/services/data/bookings/booking.utilities.ts","webpack:///src/app/services/data/bookings/bookings.service.ts","webpack:///src/app/services/data/catering/catering-category.class.ts","webpack:///src/app/services/data/catering/catering-item.class.ts","webpack:///src/app/services/data/catering/catering-menu.service.ts","webpack:///src/app/services/data/catering/catering-order.class.ts","webpack:///src/app/services/data/location/location.class.ts","webpack:///src/app/services/data/location/location.utilities.ts","webpack:///src/app/services/data/organisation/building.class.ts","webpack:///src/app/services/data/organisation/level.class.ts","webpack:///src/app/services/data/organisation/organisation.class.ts","webpack:///src/app/services/data/organisation/organisation.service.ts","webpack:///src/app/services/data/service-manager.class.ts","webpack:///src/app/services/data/spaces/space.class.ts","webpack:///src/app/services/data/spaces/space.utilities.ts","webpack:///src/app/services/data/spaces/spaces.service.ts","webpack:///src/app/services/data/users/user.class.ts","webpack:///src/app/services/data/users/user.utilities.ts","webpack:///src/app/services/data/users/users.service.ts","webpack:///src/app/services/hotkeys.service.ts","webpack:///src/app/services/settings.service.ts","webpack:///src/app/shared/base.class.ts","webpack:///src/app/shared/base.directive.ts","webpack:///src/app/shared/components/custom-fields/action-field/action-field.component.ts","webpack:///src/app/shared/components/custom-fields/action-field/action-field.component.html","webpack:///src/app/shared/components/custom-fields/counter/counter.component.ts","webpack:///src/app/shared/components/custom-fields/counter/counter.component.html","webpack:///src/app/shared/components/custom-fields/date-field/date-field.component.ts","webpack:///src/app/shared/components/custom-fields/date-field/date-field.component.html","webpack:///src/app/shared/components/custom-fields/duration-field/duration-field.component.ts","webpack:///src/app/shared/components/custom-fields/duration-field/duration-field.component.html","webpack:///src/app/shared/components/custom-fields/time-field/time-field.component.ts","webpack:///src/app/shared/components/custom-fields/time-field/time-field.component.html","webpack:///src/app/shared/components/custom-fields/user-list-field/user-list-field.component.ts","webpack:///src/app/shared/components/custom-fields/user-list-field/user-list-field.component.html","webpack:///src/app/shared/components/custom-fields/user-search-field/user-search-field.component.ts","webpack:///src/app/shared/components/custom-fields/user-search-field/user-search-field.component.html","webpack:///src/app/shared/components/feedback/feedback.component.ts","webpack:///src/app/shared/components/feedback/feedback.template.html","webpack:///src/app/shared/components/footer-menu/footer-menu.component.ts","webpack:///src/app/shared/components/footer-menu/footer-menu.component.html","webpack:///src/app/shared/components/forms/booking-form/booking-form.component.ts","webpack:///src/app/shared/components/forms/booking-form/booking-form.component.html","webpack:///src/app/shared/components/forms/user-form/user-form.component.ts","webpack:///src/app/shared/components/forms/user-form/user-form.component.html","webpack:///src/app/shared/components/icon/icon.component.ts","webpack:///src/app/shared/components/icon/icon.component.html","webpack:///src/app/shared/components/login/login.component.ts","webpack:///src/app/shared/components/login/login.component.html","webpack:///src/app/shared/components/map-controls/map-controls.component.ts","webpack:///src/app/shared/components/map-controls/map-controls.component.html","webpack:///src/app/shared/components/overlay-menu/overlay-menu.component.ts","webpack:///src/app/shared/components/overlay-menu/overlay-menu.component.html","webpack:///src/app/shared/components/popout-menu/popout-menu.component.ts","webpack:///src/app/shared/components/popout-menu/popout-menu.component.html","webpack:///src/app/shared/components/searchbar/searchbar.component.ts","webpack:///src/app/shared/components/searchbar/searchbar.component.html","webpack:///src/app/shared/components/topbar-header/topbar-header.component.ts","webpack:///src/app/shared/components/topbar-header/topbar-header.component.html","webpack:///src/app/shared/components/user-avatar/user-avatar.component.ts","webpack:///src/app/shared/components/user-avatar/user-avatar.component.html","webpack:///src/app/shared/globals/angular-animations.ts","webpack:///src/app/shared/mocks/api/bookings.mock.ts","webpack:///src/app/shared/mocks/api/buildings.mock.ts","webpack:///src/app/shared/mocks/api/common.mock.ts","webpack:///src/app/shared/mocks/api/locations.mock.ts","webpack:///src/app/shared/mocks/api/organisation.mock.ts","webpack:///src/app/shared/mocks/api/spaces.mock.ts","webpack:///src/app/shared/mocks/api/users.mock.ts","webpack:///src/app/shared/mocks/index.ts","webpack:///src/app/shared/mocks/systems.mock.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/shared/utilities/api.utilities.ts","webpack:///src/app/shared/utilities/formatting.utilities.ts","webpack:///src/app/shared/utilities/general.utilities.ts","webpack:///src/app/shared/utilities/validation.utilities.ts","webpack:///src/app/shell/bookings/bookings.component.ts","webpack:///src/app/shell/bookings/bookings.component.html","webpack:///src/app/shell/bookings/bookings.module.ts","webpack:///src/app/shell/bookings/overlays/booking-confirm/booking-confirm.component.ts","webpack:///src/app/shell/bookings/overlays/booking-confirm/booking-confirm.component.html","webpack:///src/app/shell/bookings/overlays/catering-confirm-modal/catering-confirm-modal.component.ts","webpack:///src/app/shell/bookings/overlays/catering-confirm-modal/catering-confirm-modal.component.html","webpack:///src/app/shell/bookings/overlays/catering-details-modal/catering-details-modal.component.ts","webpack:///src/app/shell/bookings/overlays/catering-details-modal/catering-details-modal.component.html","webpack:///src/app/shell/bookings/overlays/package-options-modal/package-options-modal.component.ts","webpack:///src/app/shell/bookings/overlays/package-options-modal/package-options-modal.component.html","webpack:///src/app/shell/bookings/overlays/recurrence-spaces-modal/recurrence-spaces-modal.component.ts","webpack:///src/app/shell/bookings/overlays/recurrence-spaces-modal/recurrence-spaces-modal.component.html","webpack:///src/app/shell/bookings/overlays/requirement-details-modal/requirement-details-modal.component.ts","webpack:///src/app/shell/bookings/overlays/requirement-details-modal/requirement-details-modal.component.html","webpack:///src/app/shell/bookings/space-flow/catering/catering.component.ts","webpack:///src/app/shell/bookings/space-flow/catering/catering.component.html","webpack:///src/app/shell/bookings/space-flow/catering/order-details/category/category.component.ts","webpack:///src/app/shell/bookings/space-flow/catering/order-details/category/category.component.html","webpack:///src/app/shell/bookings/space-flow/catering/order-details/item/item.component.ts","webpack:///src/app/shell/bookings/space-flow/catering/order-details/item/item.component.html","webpack:///src/app/shell/bookings/space-flow/catering/order-details/order-details.component.ts","webpack:///src/app/shell/bookings/space-flow/catering/order-details/order-details.component.html","webpack:///src/app/shell/bookings/space-flow/catering/order-list/item/item.component.ts","webpack:///src/app/shell/bookings/space-flow/catering/order-list/item/item.component.html","webpack:///src/app/shell/bookings/space-flow/catering/order-list/order-list.component.ts","webpack:///src/app/shell/bookings/space-flow/catering/order-list/order-list.component.html","webpack:///src/app/shell/bookings/space-flow/find-space/filters/filters.component.ts","webpack:///src/app/shell/bookings/space-flow/find-space/filters/filters.component.html","webpack:///src/app/shell/bookings/space-flow/find-space/find-space.component.ts","webpack:///src/app/shell/bookings/space-flow/find-space/find-space.component.html","webpack:///src/app/shell/bookings/space-flow/find-space/item/item.component.ts","webpack:///src/app/shell/bookings/space-flow/find-space/item/item.component.html","webpack:///src/app/shell/bookings/space-flow/form/form.component.ts","webpack:///src/app/shell/bookings/space-flow/form/form.component.html","webpack:///src/app/shell/bookings/space-flow/space-flow.component.ts","webpack:///src/app/shell/bookings/space-flow/space-flow.component.html","webpack:///src/app/shell/explore/explore.component.ts","webpack:///src/app/shell/explore/explore.component.html","webpack:///src/app/shell/explore/explore.module.ts","webpack:///src/app/shell/explore/map-legend/map-legend.component.ts","webpack:///src/app/shell/explore/map-legend/map-legend.component.html","webpack:///src/app/shell/explore/map-view/map-view.component.ts","webpack:///src/app/shell/explore/map-view/map-view.component.html","webpack:///src/app/shell/explore/overlays/booking-modal/booking-modal.component.ts","webpack:///src/app/shell/explore/overlays/booking-modal/booking-modal.component.html","webpack:///src/app/shell/explore/overlays/space-info/space-info.component.ts","webpack:///src/app/shell/explore/overlays/space-info/space-info.component.html","webpack:///src/app/shell/explore/search/search.component.ts","webpack:///src/app/shell/explore/search/search.component.html","webpack:///src/app/shell/explore/status-managers/desk-status.component.ts","webpack:///src/app/shell/explore/status-managers/space-status.component.ts","webpack:///src/app/shell/explore/timeline/timeline.component.ts","webpack:///src/app/shell/explore/timeline/timeline.component.html","webpack:///src/app/shell/explore/zoom-controls/zoom-controls.component.ts","webpack:///src/app/shell/explore/zoom-controls/zoom-controls.component.html","webpack:///src/app/shell/home/home.component.ts","webpack:///src/app/shell/home/home.component.html","webpack:///src/app/shell/schedule/event-list/event-list.component.ts","webpack:///src/app/shell/schedule/event-list/event-list.component.html","webpack:///src/app/shell/schedule/event-list/list-item/list-item.component.ts","webpack:///src/app/shell/schedule/event-list/list-item/list-item.component.html","webpack:///src/app/shell/schedule/schedule.component.ts","webpack:///src/app/shell/schedule/schedule.template.html","webpack:///src/app/shell/schedule/schedule.module.ts","webpack:///src/app/shell/schedule/schedule.routes.ts","webpack:///src/app/shell/schedule/view-event/event-details/event-details.component.ts","webpack:///src/app/shell/schedule/view-event/event-details/event-details.component.html","webpack:///src/app/shell/schedule/view-event/event-edit/event-edit.component.ts","webpack:///src/app/shell/schedule/view-event/event-edit/event-edit.component.html","webpack:///src/app/shell/schedule/view-event/view-event.component.ts","webpack:///src/app/shell/schedule/view-event/view-event.component.html","webpack:///src/app/shell/shell.component.ts","webpack:///src/app/shell/shell.component.html","webpack:///src/environments/environment.ts","webpack:///src/environments/version.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","ShellWrapperComponent","children","HomeComponent","loadChildren","m","BookingsModule","ExploreModule","ScheduleModule","redirectTo","AppRoutingModule","RouterModule","forRoot","useHash","NgModule","imports","AppComponent","_app","_org","_spaces","_bookings","detectIE","location","href","origin","pathname","Component","selector","templateUrl","styleUrls","encapsulation","ViewEncapsulation","None","AppModule","provide","MAT_LABEL_GLOBAL_OPTIONS","useValue","BrowserModule","BrowserAnimationsModule","ServiceWorkerModule","register","enabled","environment","production","HttpClientModule","FormsModule","ComposerModule","SharedOverlaysModule","SharedContentModule","declarations","providers","bootstrap","BookingRulesModalComponent","_data","event","EventEmitter","timeout","_content_el","nativeElement","scrollTop","building","name","details","booking_details","rules","info","map_rules","other_rules","Object","reduce","a","v","push","title","contact","BaseDirective","MAT_DIALOG_DATA","Inject","Output","ViewChild","CONFIRM_METADATA","height","width","maxHeight","maxWidth","ConfirmModalComponent","_dialog","emit","reason","content","action","icon","MeetingDetailsCateringComponent","catering","filter","order","location_id","space","booking","note_list","notes","note","type","length","message","orders","charge_code","Input","MeetingDetailsDisplayComponent","_users","on_event","last_start","the_space","find","open","ViewRoomModalComponent","data","date","dayjs","end","add","duration","all_day","format","isSame","humaniseDuration","space_list","attendees","i","email","organiser","current","recurrence","period","start","RECURRENCE_PERIODS","user","status","body","now","isBefore","subtract","attendee_statuses","approval_status","spaces","MeetingDetailsOverlayComponent","_dialog_ref","_service","_router","metadata","ref","date_string","subscription","componentInstance","subscribe","deleteMeeting","close","unsub","deleteSeries","new_booking","duplicate","navigate","localStorage","setItem","JSON","stringify","loading","TimeExtensionModalComponent","afterClosed","form","generateBookingForm","RequirementDetailsModalComponent","controls","value","notes_field","codes_field","equipment_codes","head_counts_field","expected_attendees","save","err","notifyError","editMeeting","notifySuccess","series_id","is_last","is_first","isAfter","duplicateMeeting","MeetingDetailsSpaceComponent","space_notes","NewUserModalComponent","User","generateUserForm","markAllAsTouched","valid","new_user","first_name","last_name","changeEvents","next","OVERLAYS","BookingConfirmComponent","RecurrenceModalComponent","CommonModule","ReactiveFormsModule","SpaceSelectModalComponent","RECURRENCE_METADATA","periods","FormGroup","FormControl","Validators","required","search$","Subject","selected_spaces","request_map","types","concat","search_results$","pipe","debounceTime","distinctUntilChanged","switchMap","_","zone_ids","active_building","active_type","available","join","catchError","of","map","list","selected","item","sort","b","update","space_types","unique","a_space","options","host","forEach","byRequest","space_a","space_b","bld","buildings","level","building_id","bld_b","localeCompare","sort_order","reverse","zone_id","a_has_zone","zones","indexOf","b_has_zone","multiple","MAX_EXTENSION","durations","checkAvailability","extension","notifyInfo","room_ids","room","ignore","icaluid","hide_bookings","extended","block","storePendingChange","features","focus_feature","map_id","coordinates","MapPinComponent","back","fore","ApplicationService","_app_ref","_zone","_title","_cache","_settings","_hotkeys","_composer","_snackbar","_analytics","_route_trail","_subjects","_observers","set","isStable","first","run","_stable","log","setupCache","waitForSettings","key","get","on_action","snackbar_ref","panelClass","afterDismissed","dismiss","onAction","msg","console","debug","notify","error","warn","args","stream","force","BehaviorSubject","getValue","asObservable","initialised","init","setupComposer","_initialised","window","application","composer","state","settings","protocol","domain","hostname","port","url","use_domain","route","mock","config","scope","auth_uri","token_uri","redirect_uri","handle_login","local_login","setup","isEnabled","hash","activateUpdate","activated","reload","setInterval","checkForUpdate","bindings","app_name","title_suffix","setting","setTitle","getTitle","auth","api_endpoint","is_initialised","BaseClass","Injectable","providedIn","BASE_MUTABLE_FIELDS","BaseDataClass","raw_data","_changes","_server_names","toLowerCase","toJSON","reject","promise","d","task_name","parameters","task","with_changes","obj","_timers","_intervals","_subscriptions","new_key","substr","undefined","ServiceManager","serviceFor","changes","parse","BaseAPIService","_subscribers","_promises","_compare","_list_filter","_name","_api_route","load","engine","endpoint","predicate","query_params","update_list","cache","query","toQueryString","result","http","Array","process","results","new_item","updateList","form_data","post","analyticsEvent","method","post_data","_task","api_route","request","delay","stopPoll","sub","_poll","show","interval","complete","put","removeItem","remove_ids","label","raw_item","old_list","compareFn","new_list","mixed_list","found","Booking","_display","subject","start_epoch","Start","valueOf","end_epoch","End","diff","description","booking_type","visitors","has_catering","_attendees","active_user","creator","_location","location_name","breakdown","recurr","Date","getTime","equipment_code","checked_in","checkins","notify_users","author","time","space_ids","room_id","_space_list","space_service","Space","show_as","CateringOrder","edits","flatten","unix","auto_approve","old_date","from_room","display","external","MINUTE","HOUR","DAY","WEEK","MONTH","DURATION_MAP","month","months","week","weeks","day","days","hour","hours","minute","minutes","BOOKING_COUNT","BOOKING_DATE","startOf","setMockBookingStartDatetime","generateMockBooking","override","Math","floor","random","padZero","faker","commerce","productName","fill","generateMockUser","lorem","paragraph","address","city","getFreeBookingSlots","min_size","slots","bkn_start","bkn_end","abs","getNextFreeBookingSlot","second","current_user","use_fields","fields","booking_date","needs_space","setValidators","validateEndTime","disable","isFuture","simplified_fields","subs","hasOwnProperty","valueChanges","Subscription","unsubscribe","control","rulesForSpace","space_rules_for_user","hide","zone","rule_block","checkRules","recurr_end","conditions","ruleset","max_length","stringToMinutes","min_length","count","matches","counter","condition","groups","j","last_location","check","match","durationGreaterThanOrEqual","getMinLength","rule_list","values","min","min_block","el","duration_1","duration_2","str","parts","split","statusFromBookings","bookings","bookable","requestable","free_slots","next_free_slot","slot","currently_free","time_until_next_block","free_tomorrow","free_today","available_until","timeFormatString","BookingsService","setService","CateringCategory","items","CateringItem","must_select","order_anytime","anytime","can_order_anytime","_amount","instance_id","from_month","available_from","to_month","available_to","prior_notice","notice","unit_price","price","supplier_cost","minimum_quantity","max","maximum_quantity","parent_categories","category_ids","categories","image_path","catering_type","out_of_stock","amount","allergy","CateringMenuService","delivery_time","kitchen","pantry","symbol","total","MapLocation","desk_id","x","normalise","x_max","y","service","Organisation","BuildingLevel","levelWithID","fixed","confidence","at_desk","empty","generateMockLocation","overrides","fixed_locations","maps","randomInt","Building","disc_info","discovery_info","_extras","extras","extra_id","extra_name","_loan_items","loan_items","_levels","levels","_roles","roles","_lockers","lockers","locker_structure","_systems","systems","_phone_numbers","phone_numbers","longitude","latitude","searchables","neighbourhoods","lvl","lvl_features","feature","level_id","booking_rules","catering_restricted_from","currency","timezone","holding_bay","visitor_space","getItemWithKeys","_zones","bld_id","level_name","lower_name","num","replace","toUpperCase","short_name","map_url","floor_type","OrganisationService","_organisation","ids","bld_list","_active_building","getItem","organisation","loadOrganisation","loadBuildings","loadLevels","loadSpaceTypes","user_service","listen","tags","org_data","limit","bld_data","lvl_data","type_data","_service_list","provideFor","provider","OPTION_DEFAULTS","long_name","book_type","can_search","searchable","can_control","controlable","hourly_rate","cost_hour","capacity","recurr_available","occurence","was_available","support_url","image","raw_bookings","bkn","linked_spaces","linked_rooms","rm","rulesFor","bookingsFor","SPACE_COUNT","generateMockSpace","firstName","lastName","linked","USER_DOMAIN","business","availabilityOptionsToQuery","SpacesService","_org_service","respond","available_spaces","_desk_bookings","windows_id","visitor","phone","mobile","business_unit","department","organisation_id","organisation_name","staff_code","fmno","delegates","officeLocation","desk","l","USER_COUNT","USER_EMAILS","company","companyName","delegate_count","phoneNumber","avatar","UsersService","uhttp","token","expiry","endOf","client_id","Md5","hashStr","sessionStorage","go","headers","HttpHeaders","append","authorise","logout","tries","locate","loadDelegates","promises","all","INVALID_STANDALONE_KEYS","HotkeysService","keydown_states","keydown_observers","combo_end","registered_combos","addEventListener","mapKey","last_down","preventDefault","combo","combination","validCombination","last_key","updateCombinationEndList","presses","key_list","non_meta","SettingsService","api","local","session","_app_name","build","VERSION","built","core_version","version","loadFromFile","loadStore","app","colors","shift","store","file","file_name","clearTimeout","clearInterval","fn","Function","setTimeout","destroy","Directive","ActionFieldComponent","show_tooltip","performAction","CounterComponent","step","ctrl_key","shift_key","setValue","new_value","_onChange","_onTouch","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","remove","DateFieldComponent","_from","position","offset","disabled","_trigger","closeMenu","openMenu","_to","menuOpen","MatMenuTrigger","openDatePicker","$event","stopPropagation","closeDatePicker","DurationFieldComponent","duration_options","generateDurationOptions","blocks","TimeFieldComponent","no_past_times","show_select","_time_options","generateAvailableTimes","ceil","select_field","focus","openedChange","datestamp","show_past","showSelect","UserListFieldComponent","q","slice","filterList","search_str","user_list","match_name","matchToHighlight","match_email","active_list","index","findIndex","a_user","target","files","reader","FileReader","readAsText","evt","processCsvData","srcElement","csvToJson","addUser","template","downloadFile","addUsersFromFile","downloadCSVTemplate","UserSearchFieldComponent","resetSearchString","FeedbackComponent","updateRoute","document","events","NavigationEnd","current_page","FooterMenuComponent","tiles","BookingFormComponent","UserFormComponent","IconComponent","LoginComponent","username","password","logo","login","setErrors","MapControlsComponent","_route","levelChange","building_list","level_list","queryParamMap","params","has","setBuilding","updateLevel","lvl_id","relativeTo","queryParamsHandling","queryParams","OverlayMenuComponent","showChange","copyright","year","delayedClose","cancelClose","PopoutMenuComponent","actions","SearchbarComponent","valueChange","autofocus","focusField","input_field","TopbarHeaderComponent","menuChange","menu","closeAll","closeModals","UserAvatarComponent","ANIMATION_SHOW_ENTER_LEAVE","trigger","transition","style","opacity","animate","ANIMATION_SHOW_CONTRACT_EXPAND","handlers","MOCK_BOOKINGS","rooms","MOCK_SPACES","MOCK_USERS","API","callback","from","to","route_params","splice","MOCK_BUILDINGS","DOMAIN","number","MOCK_ORG","MOCK_LOCATIONS","lvls","send_acceptance","space_data","Bookings","today","MOCK_CONTACTS","PREDEFINED_USERS","createSystem","LETTERS","NUMBERS","SPACE_LIST","IMAGES","booking_bindings","touch_enabled","cancel_timeout","control_url","desk_bindings","system","DeskManagement","DeskBookings","room_name","$start_meeting","last_meeting_started","$cancel_meeting","$waiter_call","$book","$check_in","$check_out","COMPONENTS","ENTRY_COMPONENT","MATERIAL_MODULES","MatButtonModule","MatSnackBarModule","MatDialogModule","MatFormFieldModule","MatInputModule","MatProgressSpinnerModule","MatProgressBarModule","MatAutocompleteModule","MatSelectModule","MatChipsModule","MatRippleModule","MatMenuModule","MatCheckboxModule","MatTooltipModule","MatRadioModule","MatTabsModule","CDK_MODULES","ScrollingModule","APipesModule","AInteractiveMapModule","ADatePickerModule","ACustomEventsModule","EditorModule","formatAttendeesWithHost","formatAttendees","attendee_str","users","formatDate","formatTime","formatPeriodWithDuration","t","formatPeriod","timestamp","formatDuration","formatRecurrence","formatSpaces","isMobileDevice","r","navigator","userAgent","isMobileSafari","agent","isAndroidChrome","toString","array","pos","arr","short","h","filters","f","word","regex","RegExp","item_list","match_count","match_index","field_list","matched","field","changed","tokens","k","timeToDate","is24HourTime","localeString","toLocaleTimeString","filename","contents","element","createElement","setAttribute","encodeURIComponent","appendChild","click","removeChild","csv","lines","line","part","jsonToCsv","json","valid_keys","ua","msie","parseInt","substring","trident","rv","edge","eventToPoint","MouseEvent","clientX","clientY","touches","an_array","stack","res","pop","isArray","HAS_ERROR","validateDate","is_from","buildValidateStartTime","c","validateStartTime","date_obj","buildValidateDuration","validateDuration","buildValidateAttendees","validateAttendees","invalid","date_control","end_time","BookingsComponent","paramMap","flow","NavigationStart","ROUTES","forChild","BookingSpaceFlowComponent","BookingSpaceFlowFormComponent","BookingFindSpaceComponent","BookingSpaceItemComponent","BookingSpaceFiltersComponent","BookingCateringComponent","BookingCateringOrderListComponent","BookingCateringOrderDetailsComponent","CateringOrderListItemComponent","CateringMenuCategoryComponent","BookingCateringConfirmModalComponent","CateringMenuItemComponent","PackageOptionsModalComponent","CateringDetailsModalComponent","RecurrenceSpacesModalComponent","disableClose","onError","checkSpaceAvailability","success","date_value","duration_value","codes","head_counts","needs_charge_code","active_space","generateFormFields","is_valid","new_notes","_scrollToBottom","scrollTo","top","scrollHeight","left","behavior","submit","checkItemRequirements","category","getActiveItems","a_package","option","needed","active","an_item","setAmount","occurrences","space_details","conflicts","updateOccurrences","occurrence","unshift","replaces","replaced_by","head_count","active_order","an_order","selectPackageOptions","confirmed_item","notifyWarn","done","a_list","animations","_menu","category_list","available_times","loadMenu","initForm","start_date","generateStartAndEndTimes","building_time","toDate","as_dayjs","toLocalDate","possible_end","within_restricted_time","has_available_items","form_controls","restricted","confirmOrder","edit","previous","locations","locationsChange","is_today","change$","recurrence_properties","recurr_period","onChange","select","availability","conflict_list","ocurrence","can_return","container","scrollIntoView","inline","resetForm","flow_step","loadFormData","toNextFlowStep","toPreviousFlowStep","multiple_spaces","openEquipmentDetailsModal","confirmBooking","order_list","openCateringDetailsModal","clearPendingChanges","available_fields","form_string","saveFormData","has_changes","dialog_ref","show_fields","ExploreComponent","MapViewComponent","ExploreSpaceStatusComponent","ExploreDeskStatusComponent","ZoomControlsComponent","ExploreSpaceInfoComponent","ExploreSearchComponent","ExploreMapLegendComponent","TimelineComponent","ExploreBookingModalComponent","legend_items","colours","show_legend","explore_settings","legend","show_group_names","show_legend_group_names","center","style_map","listeners","status_map","listener_map","feature_map","active_level","loadSpaceLocation","loadUserLocation","styles","desks","space_id","text","zoom","processFeatures","user_email","MapRadiusComponent","diameter","processStatuses","processListeners","is_now","_position","processBookings","MAP_OVERLAY_DATA","MAP_LOCATION","search","result_list","selectOption","occupied","free","colour_map","loadDesks","desk_list","id_list","status_list","in_use","reserved","stroke","status_id","desk_management","system_id","active_bookings","loadSpaces","updateSpaceBookings","calculateStatus","clearSpaces","statuses","getStatus","datetime","current_booking","bkn_data","show_declined","processSpaceBookings","showSpaceInfo","openBookingModal","BLOCK_SIZE","MINUTES_IN_DAY","_renderer","dateChange","generateBlocks","checkDate","current_time","is_hour","_start_position","_box","_container","getBoundingClientRect","onMove","y_change","time_change","round","changeDate","startMove","zoomChange","positionChange","min_zoom","max_zoom","zoomIn","zoomOut","reset","ScheduleEventListComponent","event_list","shown_offset","date_offset","at_top","updateEvents","scroll_viewport","elementScrolled","onScroll","event_promise","old_events","processEvents","date_str","order_id","filter_fn","new_items","old_items","show_calendar","range","getRenderedRange","dist","nearest","measureScrollOffset","scroll_to","scrollToIndex","CdkVirtualScrollViewport","updateDate","ScheduleEventListItemComponent","hasBackdrop","closeOnNavigation","as_delegate","delegate","has_visitors","location_lower","ScheduleComponent","show_menu","page","loadEvents","saveEvents","ScheduleViewEventComponent","EventDetailsComponent","EventEditComponent","change","previousValue","Hotkeys","nextBooking","previousBooking","loadEvent","editing","loading_state","is_logged_in","mod","enableProdMode","platformBrowser","bootstrapModule"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ShellWrapperComponent } from './shell/shell.component';\nimport { HomeComponent } from './shell/home/home.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ShellWrapperComponent,\n        children: [\n            { path: 'home', component: HomeComponent },\n            {\n                path: 'book',\n                loadChildren: () =>\n                    import('./shell/bookings/bookings.module').then(m => m.BookingsModule)\n            },\n            {\n                path: 'explore',\n                loadChildren: () =>\n                    import('./shell/explore/explore.module').then(m => m.ExploreModule)\n            },\n            // {\n            //     path: 'control',\n            //     loadChildren: () =>\n            //         import('./shell/control/control.module').then(m => m.ControlModule)\n            // },\n            // {\n            //     path: 'directory',\n            //     loadChildren: () =>\n            //         import('./shell/directory/directory.module').then(m => m.DirectoryModule)\n            // },\n            {\n                path: 'schedule',\n                loadChildren: () =>\n                    import('./shell/schedule/schedule.module').then(m => m.ScheduleModule)\n            },\n            // {\n            //     path: 'help',\n            //     loadChildren: () => import('./shell/help/help.module').then(m => m.HelpModule)\n            // },\n            { path: '**', redirectTo: 'home' }\n        ]\n    },\n    { path: '**', redirectTo: 'home' }\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, { useHash: true })],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { detectIE } from './shared/utilities/general.utilities';\nimport { ApplicationService } from './services/app.service';\nimport { OrganisationService } from './services/data/organisation/organisation.service';\nimport { SpacesService } from './services/data/spaces/spaces.service';\nimport { BookingsService } from './services/data/bookings/bookings.service';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: [\n        './styles/app.component.scss',\n        './styles/custom-element.styles.scss',\n        './styles/native-element.styles.scss',\n    ],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class AppComponent {\n    constructor(\n        private _app: ApplicationService,\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _bookings: BookingsService\n    ) {\n        if (detectIE() && detectIE() < 12) {\n            location.href = `${location.origin}${location.pathname}assets/not-supported.html`;\n            return;\n        }\n    }\n}\n","<div class=\"app\">\n    <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { MAT_LABEL_GLOBAL_OPTIONS } from '@angular/material/core';\n\nimport './shared/mocks';\n\nimport { ComposerModule } from '@placeos/composer';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\n\nimport { SharedOverlaysModule } from './overlays/overlays.module';\nimport { SharedContentModule } from './shared/shared.module';\n\nimport { ShellWrapperComponent } from './shell/shell.component';\nimport { HomeComponent } from './shell/home/home.component';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        ShellWrapperComponent,\n        HomeComponent,\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        AppRoutingModule,\n        ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production }),\n        HttpClientModule,\n        FormsModule,\n        ComposerModule,\n        SharedOverlaysModule,\n        SharedContentModule\n    ],\n    providers: [\n        { provide: MAT_LABEL_GLOBAL_OPTIONS, useValue: {float: 'nevet'} }\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","\nimport { Component, Output, EventEmitter, Inject, ViewChild, ElementRef } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { DialogEvent, HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { Building, BookingRuleDetails } from 'src/app/services/data/organisation/building.class';\n\n\nexport interface BookingRulesModalData {\n    building: Building;\n}\n\n@Component({\n    selector: 'booking-rules-modal',\n    templateUrl: './booking-rules-modal.template.html',\n    styleUrls: ['./booking-rules-modal.styles.scss'],\n})\nexport class BookingRulesModalComponent extends BaseDirective {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    @ViewChild('content', { static: true }) private _content_el: ElementRef<HTMLElement>;\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: BookingRulesModalData) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.timeout('scroll', () => {\n            this._content_el.nativeElement.scrollTop = 0;\n        }, 181);\n    }\n\n    /** Name of the set building */\n    public get location(): string {\n        const building: Building = this._data.building || {} as any;\n        return building.name || '';\n    }\n\n    /** Booking rule details */\n    public get rules(): string[] {\n        const building: Building = this._data.building || {} as any;\n        const details: BookingRuleDetails = building.booking_details || {} as any;\n        return details.rules || [] as any;\n    }\n\n    /** Booking rule details */\n    public get info(): string {\n        const building: Building = this._data.building || {} as any;\n        const details: BookingRuleDetails = building.booking_details || {} as any;\n        return details.info || '';\n    }\n\n    /** Booking map rule details */\n    public get map_rules(): string[] {\n        const building: Building = this._data.building || {} as any;\n        const details: BookingRuleDetails = building.booking_details || {} as any;\n        return details.map_rules || [] as any;\n    }\n\n    /** Other special booking rules */\n    public get other_rules(): { title: string, rules: string[] }[] {\n        const building: Building = this._data.building || {} as any;\n        const details: BookingRuleDetails = building.booking_details || {} as any;\n        const rules: HashMap = (details as any).other_rules || {};\n        return Object.keys(rules).reduce((a, v) => { a.push({ title: v, rules: rules[v] || [] }); return a; }, []);\n    }\n\n    public get contact(): string {\n        const building: Building = this._data.building || {} as any;\n        const details: BookingRuleDetails = building.booking_details || {} as any;\n        return details.contact || '';\n    }\n}\n","<mat-dialog-content #content>\n    <main>\n        <div class=\"header\">Booking in {{location}}</div>\n        <div class=\"info\">{{ info || 'You may request restricted rooms but they will need to be approved by an admin' }}</div>\n        <div class=\"rules\">\n            <ul>\n                <li *ngFor=\"let item of rules\">{{item}}</li>\n            </ul>\n            <ng-container *ngIf=\"other_rules\">\n                <ng-container *ngFor=\"let ruleset of other_rules\">\n                    {{ ruleset.title }}\n                    <ul>\n                        <li *ngFor=\"let item of ruleset.rules\">{{item}}</li>\n                    </ul>\n                </ng-container>\n            </ng-container>\n            <ng-container>\n                When booking from Maps:\n                <ul *ngIf=\"!map_rules || map_rules.length <= 0; else rules_list\">\n                    <li>Rooms showing yellow are restricted and must be requested</li>\n                    <li>Rooms showing green are available to book for one hour</li>\n                    <li>Rooms showing red are booked</li>\n                    <li>Rooms showing grey are not bookable but may be used if they are empty</li>\n                </ul>\n                <ng-template #rules_list>\n                    <ul>\n                        <li *ngFor=\"let item of map_rules\">{{item}}</li>\n                    </ul>\n                </ng-template>\n            </ng-container>\n        </div>\n        <div class=\"contact\" *ngIf=\"contact\">\n            For more info email:<br><a [href]=\"'mailto:' + contact + '?subject=' + location + ' Booking Rules'\">{{contact}}</a>\n        </div>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button mat-dialog-close>Ok</button>\n    </footer>\n</mat-dialog-actions>\n\n","import { Component, Output, EventEmitter, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { ApplicationIcon } from '../../shared/utilities/settings.interfaces';\nimport { DialogEvent } from '../../shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\nexport interface ConfirmModalData {\n    /** Title of the modal */\n    title: string;\n    /** Contents of the modal */\n    content: string;\n    /** Text displaed on the confirmation button */\n    action?: string;\n    /** Icon to display on the modal */\n    icon: ApplicationIcon;\n}\n\nexport const CONFIRM_METADATA = {\n    height: 'auto',\n    width: '24em',\n    maxHeight: 'calc(100vh - 2em)',\n    maxWidth: 'calc(100vw - 2em)'\n};\n\n@Component({\n    selector: 'confirm-modal',\n    templateUrl: './confirm-modal.component.html',\n    styleUrls: ['./confirm-modal.component.scss']\n})\nexport class ConfirmModalComponent extends BaseDirective {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Loading state */\n    public loading: string;\n\n    /** Title of the confirm modal */\n    public get title(): string {\n        return (this._data ? this._data.title : null) || 'Confirm';\n    }\n\n    /** Body of the confirm modal */\n    public get content(): string {\n        return (this._data ? this._data.content : null) || 'Are you sure?';\n    }\n\n    /** Display text on the confirm button */\n    public get action(): string {\n        return (this._data ? this._data.action : null) || 'Ok';\n    }\n\n    /** Display icon properties */\n    public get icon(): ApplicationIcon {\n        return (this._data ? this._data.icon : null) || null;\n    }\n\n    constructor(\n        private _dialog: MatDialogRef<ConfirmModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: ConfirmModalData\n    ) {\n        super();\n    }\n    /**\n     * User confirmation of the content of the modal\n     */\n    public accept() {\n        this.event.emit({ reason: 'done' });\n    }\n}\n","<header>\n    <h3 mat-dialog-title>{{ title || 'Confirm' }}</h3>\n</header>\n<mat-dialog-content>\n    <div class=\"body\" *ngIf=\"!loading; else load_state\">\n        <app-icon *ngIf=\"icon\" [icon]=\"icon\"></app-icon>\n        <div class=\"content\">\n            <p [innerHTML]=\"content || 'Are you sure?'\"></p>\n        </div>\n    </div>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading\">\n    <footer>\n        <button mat-button class=\"inverse\" mat-dialog-close i18n=\"Close confirm modal\">Cancel</button>\n        <button mat-button name=\"accept\" (tapped)=\"accept()\">{{ action || 'Ok' }}</button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </div>\n</ng-template>\n","import { Component, Input } from '@angular/core';\n\nimport { CateringOrder } from '../../../services/data/catering/catering-order.class';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\n\n@Component({\n    selector: 'meeting-details-catering',\n    templateUrl: './catering.component.html',\n    styleUrls: ['./catering.component.scss']\n})\nexport class MeetingDetailsCateringComponent {\n    /** List of catering orders */\n    @Input() public catering: CateringOrder[];\n    /** Active space to display */\n    @Input() public space: Space;\n    /** Active space to display */\n    @Input() public booking: Booking;\n    /** Whether all orders should be shown */\n    public show_orders: boolean;\n\n    /** List of orders for the active space */\n    public get orders(): CateringOrder[] {\n        return (this.catering || []).filter(order => order.location_id === this.space.id);\n    }\n\n    /** Charge code for orders in the active space */\n    public get notes(): string {\n        if (!this.booking) { return '<No notes>'; }\n        const note_list = this.booking.notes.filter(\n            note => note.type === 'catering' && note.space === this.space.id\n        );\n        return note_list.length > 0 ? note_list[0].message : '<No notes>';\n    }\n\n    /** Charge code for orders in the active space */\n    public get charge_code(): string {\n        return this.orders.length > 0 ? this.orders[0].charge_code || '<No charge code>' : '<No charge code>';\n    }\n}\n","<div class=\"catering-details\" *ngIf=\"catering && space\" [attr.space-id]=\"space.id\">\n    <div class=\"field multi\" name=\"orders\">\n        <label>Orders({{ orders.length || '0' }}):</label>\n        <div class=\"value\">\n            <div class=\"list\" [class.shown]=\"show_orders\">\n                <div\n                    class=\"list-item\"\n                    *ngFor=\"let order of orders\"\n                    [title]=\"\"\n                >\n                    <div class=\"name\">Deliver at {{ order.deliver_at_time }}</div>\n                    <div class=\"email\">{{ order.item_count }} item{{ order.item_count === 1 ? '' : 's' }}</div>\n                    <div class=\"details\">\n                        <div class=\"items\">\n                            <div class=\"item\" *ngFor=\"let item of order.items\">\n                                <div class=\"name\">{{ item.name }}</div>\n                                <div class=\"amount\">x{{ item.amount || '0' }}</div>\n                            </div>\n                        </div>\n                        <div class=\"total\"><span>Total:</span> {{ order.total / 100 | currency:order.symbol }}</div>\n                    </div>\n                </div>\n            </div>\n            <button\n                class=\"show\"\n                *ngIf=\"orders.length > 5\"\n                (touchrelease)=\"show_orders = !show_orders\"\n            >\n                {{ show_orders ? 'Hide' : 'Show' }} Orders\n            </button>\n        </div>\n    </div>\n    <div class=\"field\" name=\"requirements\">\n        <label>Requirements:</label>\n        <div class=\"value\">{{ notes }}</div>\n    </div>\n    <div class=\"field\" name=\"charge-code\">\n        <label>Charge Code:</label>\n        <div class=\"value\">{{ charge_code }}</div>\n    </div>\n</div>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { ViewRoomModalComponent } from '../../view-room-modal/view-room-modal.component';\nimport { RECURRENCE_PERIODS } from '../../../shared/utilities/formatting.utilities';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { DialogEvent, HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { humaniseDuration } from 'src/app/shared/utilities/general.utilities';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { UsersService } from 'src/app/services/data/users/users.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'meeting-details-display',\n    templateUrl: './display.component.html',\n    styleUrls: ['./display.component.scss']\n})\nexport class MeetingDetailsDisplayComponent extends BaseDirective {\n    @Input() event: Booking;\n    /** Emitter for events on the component */\n    @Output('event') on_event = new EventEmitter<DialogEvent>();\n    /** Toggle for activating checkin */\n    public checked_in: boolean;\n    /** Mapping of spaces to last checkin time */\n    public last_start: { [id: string]: number } = {};\n    /** Whether to show full locations list */\n    public show_locations: boolean;\n    /** Whether to show full attendee list */\n    public show_attendees: boolean;\n\n    /** Title of the displayed event */\n    public get title(): string {\n        if (!this.event) {\n            return '';\n        }\n        return this.event.title || '';\n    }\n\n    /** Display string of when the event will occur */\n    public get when(): string {\n        if (!this.event) {\n            return 'Unable to determine.';\n        }\n        const date = dayjs(this.event.date);\n        const end = date.add(this.event.duration || 60, 'm');\n        if (this.event.all_day || this.event.duration > 23 * 60) {\n            return `${date.format('DD MMM YYYY')} - All Day`;\n        } else {\n            if (date.isSame(end, 'd')) {\n                return `${date.format('DD MMM YYYY, h:mm A')} - ${end.format('h:mm A')}`;\n            } else {\n                return `${date.format('DD MMM YYYY, h:mm A')} - ${end.format(\n                    'DD MMM YYYY, h:mm A'\n                )}`;\n            }\n        }\n    }\n\n    /** Whether booking has catering */\n    public get has_catering(): boolean {\n        return this.event &&\n            this.event.catering &&\n            this.event.catering.length >= 0;\n    }\n\n    /** Display string for the event's duration */\n    public get duration(): string {\n        if (!this.event) {\n            return 'Unable to determine';\n        }\n        return humaniseDuration(this.event.duration || 60);\n    }\n\n    /** List of spaces associated with the event */\n    public get spaces(): Space[] {\n        if (!this.event) {\n            return [];\n        }\n        return this.event.space_list || (this.event.space ? [this.event.space] : []);\n    }\n\n    /** List of attendees associated with the event not including the host */\n    public get attendees(): User[] {\n        if (!this.event) {\n            return [];\n        }\n        return this.event.attendees.filter(i => i.email !== this.organiser.email) || [];\n    }\n\n    /** Host of the event */\n    public get organiser(): User {\n        if (!this.event) {\n            return this._users.current;\n        }\n        return this.event.organiser || this._users.current;\n    }\n\n    /** Reccurence Range */\n    public get recurrence_range(): string {\n        if (!this.event || !this.event.recurrence || !this.event.recurrence.period) {\n            return '';\n        }\n        const start = dayjs(this.event.recurrence.start).format('MMMM DD, YYYY');\n        const end = dayjs(this.event.recurrence.end).format('MMMM DD, YYYY');\n        return `${start} - ${end}`;\n    }\n\n    public get recurrence_period(): string {\n        if (!this.event || !this.event.recurrence) {\n            return '';\n        }\n        return RECURRENCE_PERIODS[this.event.recurrence.period];\n    }\n\n    /** Whether the user is allowed to edit the event */\n    public get can_edit(): boolean {\n        const organiser = this.organiser;\n        const user = this._users.current;\n        return organiser.email === user.email && this.status !== 'done';\n    }\n\n    /** Details about the event */\n    public get notes(): string {\n        return this.event.body || '';\n    }\n\n    /** Status of the event */\n    public get status(): 'future' | 'upcoming' | 'done' | 'started' | 'in_progress' {\n        if (this.event) {\n            const now = dayjs();\n            const date = dayjs(this.event.date);\n            if (now.isBefore(date.subtract(15, 'm'), 'm')) {\n                return 'future';\n            } else if (now.isBefore(date, 'm')) {\n                return 'upcoming';\n            } else if (now.isBefore(date.add(15, 'm'), 'm')) {\n                return 'started';\n            } else if (now.isBefore(date.add(this.event.duration, 'm'), 'm')) {\n                return 'in_progress';\n            }\n        }\n        return 'done';\n    }\n\n    /** Mapping of attendees and spaces to acceptance status */\n    public get status_map(): HashMap<'accepted' | 'tentative' | 'declined'> {\n        const attendee_statuses: HashMap<'accepted' | 'tentative' | 'declined'> = {};\n        for (const email in this.event.approval_status) {\n            if (email) {\n                switch (this.event.approval_status[email]) {\n                    case 'declined':\n                        attendee_statuses[email] = 'declined';\n                        break;\n                    case 'accepted':\n                        attendee_statuses[email] = 'accepted';\n                        break;\n                    default:\n                        attendee_statuses[email] = 'tentative';\n                        break;\n                }\n            }\n        }\n        return attendee_statuses;\n    }\n\n    /** Whether the user has checkin to all the spaces in the event */\n    public get is_checked_in(): boolean {\n        return this.spaces.reduce(\n            (a, v) => a && this.event.date <= (this.last_start[v.id] || 0),\n            true\n        );\n    }\n\n    /** Whether the spaces can be controlled */\n    public get can_control(): boolean {\n        return this.spaces.length > 0 && this.status !== 'future' && this.status !== 'done';\n    }\n\n    /** Whether the user is able to checkin to the event */\n    public get can_checkin(): boolean {\n        return this.spaces.length > 0 && (this.status === 'upcoming' || this.status === 'started');\n    }\n\n    constructor(private _spaces: SpacesService, private _users: UsersService, private _dialog: MatDialog) {\n        super();\n    }\n\n    /**\n     * Open the modal to show the location of a space\n     * @param space Space to show the location\n     */\n    public locate(space: Space) {\n        if (space) {\n            const the_space = this._spaces.find(space.id) || space;\n            this._dialog.open(ViewRoomModalComponent, {\n                width: 'auto',\n                height: 'auto',\n                maxWidth: '95vw',\n                maxHeight: '95vh',\n                data: { space: the_space }\n            });\n        }\n    }\n}\n","<div class=\"event-details\">\n    <div class=\"field\" name=\"title\">\n        <label>Title:</label>\n        <div class=\"value\">{{ title }}</div>\n    </div>\n    <div class=\"field\" name=\"when\">\n        <label>When:</label>\n        <div class=\"value\">{{ when }}</div>\n    </div>\n    <div class=\"field\" *ngIf=\"recurrence_range\" name=\"recurrence\">\n        <label>Reccurrence:</label>\n        <div class=\"value\">\n            <div>{{ recurrence_range }}</div>\n            <div class=\"period\">{{ recurrence_period }}</div>\n        </div>\n    </div>\n    <div class=\"field\" name=\"duration\">\n        <label>Duration:</label>\n        <div class=\"value\">{{ duration }}</div>\n    </div>\n    <div class=\"field multi\" name=\"location\">\n        <label>Locations({{ spaces.length || '0' }}):</label>\n        <div class=\"value\">\n            <div class=\"list\" [class.shown]=\"show_locations\">\n                <div\n                    class=\"list-item\"\n                    *ngFor=\"let item of spaces\"\n                    [title]=\"item?.name + ' - ' + (status_map[item?.email] || 'Approved')\"\n                >\n                    <div [class]=\"'status ' + status_map[item?.email]\">\n                        <div class=\"text\">{{ status_map[item?.email] }}</div>\n                    </div>\n                    <div class=\"text\">{{ item?.name }}</div>\n                    <button class=\"show\" *ngIf=\"item?.map_id\" (touchrelease)=\"locate(item)\">\n                        Map\n                    </button>\n                </div>\n                <div class=\"list-item\" *ngIf=\"!spaces.length\">No Location</div>\n            </div>\n            <button\n                class=\"show\"\n                *ngIf=\"spaces.length > 5\"\n                (touchrelease)=\"show_locations = !show_locations\"\n            >\n                {{ show_locations ? 'Hide' : 'Show' }} Locations\n            </button>\n        </div>\n    </div>\n    <div class=\"field\" name=\"host\">\n        <label>Host:</label>\n        <div class=\"value\">{{ organiser.name }}</div>\n    </div>\n    <div class=\"field multi\" name=\"attendees\">\n        <label>Attendees({{ attendees.length || '0' }}):</label>\n        <div class=\"value\">\n            <div class=\"list\" [class.shown]=\"show_attendees\">\n                <div\n                    class=\"list-item\"\n                    *ngFor=\"let item of attendees\"\n                    [title]=\"\n                        item?.name +\n                        ' - ' +\n                        (status_map[item?.email] || 'Accepted') +\n                        (item?.email ? '\\n' + item.email : '')\n                    \"\n                >\n                    <div [class]=\"'status ' + status_map[item?.email]\">\n                        <div class=\"text\">{{ status_map[item?.email] }}</div>\n                    </div>\n                    <div class=\"text\">\n                        <div class=\"name\">{{ item.name }}</div>\n                        <div class=\"email\" *ngIf=\"item.email\">\n                            <a [href]=\"'mailto:' + item.email + '?subject=' + event.title\">{{\n                                item.email\n                            }}</a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <button\n                class=\"show\"\n                *ngIf=\"attendees.length > 5\"\n                (touchrelease)=\"show_attendees = !show_attendees\"\n            >\n                {{ show_attendees ? 'Hide' : 'Show' }} Attendees\n            </button>\n        </div>\n    </div>\n    <div class=\"field\" name=\"notes\">\n        <label>Notes:</label>\n        <div class=\"value\" [innerHTML]=\"notes | sanitize\"></div>\n    </div>\n    <div class=\"field\" *ngIf=\"has_catering\" name=\"catering\">\n        <label>Catered:</label>\n        <div class=\"value\">{{ event.catering.length ? 'Yes' : 'No' }}</div>\n    </div>\n</div>\n","import { Component, OnDestroy, Output, EventEmitter, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { ConfirmModalComponent, ConfirmModalData, CONFIRM_METADATA } from '../confirm-modal/confirm-modal.component';\nimport { TimeExtensionModalComponent } from '../time-extension/time-extension.component';\nimport { RequirementDetailsModalComponent, RequirementDetailsModalData } from 'src/app/shell/bookings/overlays/requirement-details-modal/requirement-details-modal.component';\nimport { generateBookingForm } from 'src/app/services/data/bookings/booking.utilities';\n\nimport * as dayjs from 'dayjs';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\nexport interface MeetingDetailsModalData {\n    /** Meeting to display on the modal */\n    booking: Booking;\n    /** Whether local user is able act on behalf of the host */\n    as_delegate: boolean;\n    /** Email address of the associated delegate */\n    delegate: string;\n    /** Whether booking is the first in the list */\n    is_first: boolean;\n    /** Whether booking is the last in the list */\n    is_last: boolean;\n}\n\n/*istanbul ignore next */\n@Component({\n    selector: 'meeting-details-overlay',\n    templateUrl: './meeting-details-overlay.template.html',\n    styleUrls: ['./meeting-details-overlay.styles.scss']\n})\nexport class MeetingDetailsOverlayComponent extends BaseDirective implements OnDestroy {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Display string of the loading state of the meeting */\n    public loading: string;\n    /** Whether booking is being edited */\n    public edit: boolean;\n\n    /** Active booking to display */\n    public get booking(): Booking {\n        return this._data.booking;\n    }\n\n    /** Whether booking is the first in the list */\n    public get is_last(): boolean {\n        return this._data.is_last;\n    }\n\n    /** Whether booking is the last in the list */\n    public get is_first(): boolean {\n        return this._data.is_first;\n    }\n\n    /** List of spaces associated with the event */\n    public get space_list(): Space[] {\n        return this.booking.space_list || (this.booking.space ? [this.booking.space] : []);\n    }\n\n    public get has_recurrence(): boolean {\n        return !!(this.booking.recurrence && this.booking.recurrence.period);\n    }\n\n    /** Whether booking is in progress */\n    public get in_progress(): boolean {\n        if (!this.booking) {\n            return false;\n        }\n        const now = dayjs();\n        const start = dayjs(this.booking.date);\n        const end = start.add(this.booking.duration, 'm');\n        return now.isAfter(start, 's') && now.isBefore(end, 'm');\n    }\n\n    /** Whether booking has ended */\n    public get has_ended(): boolean {\n        if (!this.booking) {\n            return false;\n        }\n        const now = dayjs();\n        const start = dayjs(this.booking.date);\n        const end = start.add(this.booking.duration, 'm');\n        return now.isAfter(end, 's');\n    }\n\n    /** Whether booking has a space associated with it */\n    public get has_space(): boolean {\n        if (!this.space_list || !this.space_list.length) {\n            return false;\n        }\n        for (const space of this.space_list) {\n            if (space) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _dialog_ref: MatDialogRef<MeetingDetailsOverlayComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: MeetingDetailsModalData,\n        private _service: ApplicationService,\n        private _bookings: BookingsService,\n        private _users: UsersService,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    /**\n     * Show the next meeting in the list\n     */\n    public nextBooking() {\n        this.event.emit({ reason: 'action', metadata: 'next' });\n    }\n\n    /** Show the previous meeting in the list */\n    public previousBooking() {\n        this.event.emit({ reason: 'action', metadata: 'previous' });\n    }\n\n    /** Open confirmation modal for deleting the meeting */\n    public confirmDeleteMeeting(): void {\n        const ref = this._dialog.open<ConfirmModalComponent, ConfirmModalData>(\n            ConfirmModalComponent,\n            {\n                ...CONFIRM_METADATA,\n                data: {\n                    title: 'Delete meeting',\n                    icon: { type: 'icon', class: 'material-icons', content: 'delete' },\n                    content: `\n                        <p>Are you sure you want to delete this meeting on ${\n                            this.booking.date_string\n                        }${this.booking.recurrence ? ' from your series' : ''}?</p>\n                        <p>All attendees will be notified.</p>\n                    `\n                }\n            }\n        );\n        this.subscription(\n            'confirm',\n            ref.componentInstance.event.subscribe(event => {\n                if (event.reason === 'done') {\n                    this.deleteMeeting();\n                    ref.close();\n                    this.unsub('confirm');\n                }\n            })\n        );\n    }\n\n    /** Open confirmation modal for deleting the series of bookings */\n    public confirmDeleteSeries(): void {\n        if (!this.booking.recurrence) {\n            return;\n        }\n        const ref = this._dialog.open<ConfirmModalComponent, ConfirmModalData>(\n            ConfirmModalComponent,\n            {\n                ...CONFIRM_METADATA,\n                data: {\n                    title: 'Delete series',\n                    icon: { type: 'icon', class: 'material-icons', content: 'delete' },\n                    content: `\n                        <p>All bookings in the series will be deleted. Are you sure you want to delete the series?</p>\n                        <p>All attendees will be notified.</p>\n                    `\n                }\n            }\n        );\n        this.subscription(\n            'confirm',\n            ref.componentInstance.event.subscribe(event => {\n                if (event.reason === 'done') {\n                    this.deleteSeries();\n                    ref.close();\n                    this.unsub('confirm');\n                }\n            })\n        );\n    }\n\n    /** Navigate the booking with the details of the current booking set */\n    public duplicateMeeting(): void {\n        const new_booking = this.booking.duplicate();\n        this._router.navigate(['/book']);\n        if (localStorage) {\n            localStorage.setItem('ACA_STAFF.booking_form_data', JSON.stringify(new_booking));\n        }\n        this._dialog_ref.close();\n    }\n\n    /** Open modal to extend the length of the meeting */\n    public extendMeeting() {\n        this.loading = 'Extending meeting...';\n        const ref = this._dialog.open(TimeExtensionModalComponent, {\n            ...CONFIRM_METADATA,\n            data: { booking: this.booking }\n        });\n        ref.afterClosed().subscribe(() => (this.loading = null));\n    }\n\n    public editMeetingRequirements() {\n        const form = generateBookingForm(this.booking, this._users.current, ['space_list', 'notes', 'equipment_codes', 'expected_attendees'] as any);\n        const ref = this._dialog.open<\n            RequirementDetailsModalComponent,\n            RequirementDetailsModalData\n        >(RequirementDetailsModalComponent, {\n            maxWidth: '95vw',\n            width: '32em',\n            data: {\n                spaces: form.controls.space_list.value,\n                notes_field: form.controls.notes,\n                codes_field: form.controls.equipment_codes,\n                head_counts_field: form.controls.expected_attendees\n            }\n        });\n        this.subscription(\n            'modal_events',\n            ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                if (event.reason === 'done') {\n                    this.loading = 'Updating space requirements...';\n                    this.booking.save().then((new_booking: Booking) => {\n                        this._data.booking = new_booking;\n                        this.loading = null;\n                    }, (err) => {\n                        this.loading = null;\n                        this._service.notifyError(`Error updating space requirements. Error: ${err.message || err}`);\n                    });\n                    ref.close();\n                }\n            })\n        );\n        ref.afterClosed().subscribe(() => this.unsub('modal_events'));\n    }\n\n    /**\n     * Open booking form to catering section\n     */\n    public editMeetingCatering() {\n        this.editMeeting(false);\n        this._router.navigate(['/book', 'space', 'catering']);\n        this._dialog_ref.close();\n    }\n\n    /**\n     * Open booking form to edit details\n     */\n    public editMeeting(navigate: boolean = true) {\n        if (localStorage) {\n            localStorage.setItem('ACA_STAFF.booking_form_data', JSON.stringify(this.booking));\n        }\n        if (navigate) {\n            this._router.navigate(['/book']);\n            this._dialog_ref.close();\n        }\n    }\n\n    /** Delete the meeting */\n    private deleteMeeting() {\n        this.loading = 'Deleting meeting...';\n        this._bookings.delete(this.booking.id).then(\n            () => {\n                this._service.notifySuccess('Successfully deleted meeting.');\n                this.loading = null;\n                this._dialog_ref.close();\n            },\n            err => {\n                this.loading = null;\n                this._service.notifyError(`Error deleting meeting. Error: ${err.message || err}`);\n            }\n        );\n    }\n\n    /** Delete series */\n    private deleteSeries() {\n        this.loading = 'Deleting series...';\n        this._bookings.delete(this.booking.recurrence.series_id).then(\n            () => {\n                this._service.notifySuccess('Successfully deleted series.');\n                this.loading = null;\n                this._dialog_ref.close();\n            },\n            err => {\n                this.loading = null;\n                this._service.notifyError(`Error deleting series. Error: ${err.message || err}`);\n            }\n        );\n    }\n}\n","<header class=\"custom\">\n    <div class=\"details\">\n        <!-- <button mat-icon-button [disabled]=\"is_first\" (touchrelease)=\"previousBooking()\">\n            <app-icon\n                [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_left' }\"\n            ></app-icon>\n        </button> -->\n        <div class=\"text\">{{ booking?.title || '&lt;No Title&gt;' }}</div>\n        <!-- <button mat-icon-button [disabled]=\"is_last\" (touchrelease)=\"nextBooking()\">\n            <app-icon\n                [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_right' }\"\n            ></app-icon>\n        </button> -->\n        <button mat-icon-button mat-dialog-close class=\"fixed\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </button>\n    </div>\n    <div class=\"actions\">\n        <button mat-button *ngIf=\"!has_ended\" (touchrelease)=\"confirmDeleteMeeting()\">\n            <div class=\"flex\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'delete' }\"></app-icon>\n                <div class=\"text\">Delete <span *ngIf=\"has_recurrence\">Occurrence</span></div>\n            </div>\n        </button>\n        <button mat-button *ngIf=\"has_recurrence\" (touchrelease)=\"confirmDeleteSeries()\">\n            <div class=\"flex\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'delete' }\"></app-icon>\n                <div class=\"text\">Delete Series</div>\n            </div>\n        </button>\n        <button mat-button (touchrelease)=\"duplicateMeeting()\">\n            <div class=\"flex\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'add' }\"></app-icon>\n                <div class=\"text\">Duplicate</div>\n            </div>\n        </button>\n        <button mat-button *ngIf=\"in_progress && has_space\" (touchrelease)=\"extendMeeting()\">\n            <div class=\"flex\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'timelapse' }\"></app-icon>\n                <div class=\"text\">Extend</div>\n            </div>\n        </button>\n    </div>\n</header>\n<mat-dialog-content>\n    <main class=\"custom\" *ngIf=\"!loading; else load_state\">\n        <ng-container *ngIf=\"!edit; else edit_form\">\n            <div class=\"card\">\n                <div class=\"header\">Event Details</div>\n                <meeting-details-display [event]=\"booking\"></meeting-details-display>\n                <div class=\"flex\" *ngIf=\"!has_ended && !in_progress\">\n                    <button mat-button (touchrelease)=\"editMeeting()\">Edit</button>\n                </div>\n            </div>\n            <ng-container *ngFor=\"let space of space_list\">\n                <div class=\"card\" *ngIf=\"space && space.id\">\n                    <div class=\"header\">Space Details</div>\n                    <meeting-details-space\n                        [booking]=\"booking\"\n                        [space]=\"space\"\n                    ></meeting-details-space>\n                    <div class=\"flex\" *ngIf=\"!has_ended\">\n                        <button mat-button (touchrelease)=\"editMeetingRequirements()\">\n                            Edit Room Requirements\n                        </button>\n                    </div>\n                    <div class=\"header\">Catering Details</div>\n                    <meeting-details-catering\n                        [catering]=\"booking.catering\"\n                        [space]=\"space\"\n                    ></meeting-details-catering>\n                    <div class=\"flex\">\n                        <button mat-button *ngIf=\"!has_ended\" (touchrelease)=\"editMeetingCatering()\">\n                            Edit Catering Orders\n                        </button>\n                    </div>\n                </div>\n            </ng-container>\n        </ng-container>\n    </main>\n</mat-dialog-content>\n<ng-template #edit_form>\n    <meeting-details-form></meeting-details-form>\n</ng-template>\n<ng-template #load_state>\n    <main class=\"custom\">\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </main>\n</ng-template>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { Space } from 'src/app/services/data/spaces/space.class';\n\n\n@Component({\n    selector: 'meeting-details-space',\n    templateUrl: './space.component.html',\n    styleUrls: ['./space.component.scss']\n})\nexport class MeetingDetailsSpaceComponent {\n    /** Active Space to display details for */\n    @Input() space: Space;\n    /** Booking associated with the space */\n    @Input() booking: Booking;\n\n    /** Latest equipment requirement notes for the active space */\n    public get notes(): string {\n        const space_notes = (this.booking.notes || []).filter(note => note.space === this.space.id);\n        return space_notes.length ? space_notes[space_notes.length - 1].message : '<No requirements>';\n    }\n\n    /** Latest equipment charge code for the active space */\n    public get charge_code(): string {\n        return (this.booking.equipment_codes || {})[this.space.id] || '<No charge code>';\n    }\n\n    /** Expected number of attendees for the active space */\n    public get expected_attendees(): number {\n        return (this.booking.expected_attendees || {})[this.space.id] || 0;\n    }\n}\n","<div class=\"space-details\" *ngIf=\"space\" [attr.space-id]=\"space.id\">\n    <div class=\"field\" name=\"space-name\">\n        <label>Space:</label>\n        <div class=\"value\">{{ space.name }}</div>\n    </div>\n    <div class=\"field\" name=\"requirements\">\n        <label>Requirements (Private Notes):</label>\n        <div class=\"value\">{{ notes }}</div>\n    </div>\n    <div class=\"field\" name=\"charge-code\">\n        <label>Charge Code:</label>\n        <div class=\"value\">{{ charge_code }}</div>\n    </div>\n    <div class=\"field\" name=\"expected-attendees\">\n        <label>Expected Attendees:</label>\n        <div class=\"value\">{{ expected_attendees }}</div>\n    </div>\n</div>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormGroup } from '@angular/forms';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { generateUserForm } from 'src/app/services/data/users/user.utilities';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { DialogEvent } from '../../shared/utilities/types.utilities';\n\n@Component({\n  selector: 'new-user-modal',\n  templateUrl: './new-user-modal.component.html',\n  styleUrls: ['./new-user-modal.component.scss']\n})\nexport class NewUserModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for the new user */\n    public form: FormGroup;\n    /** New user data store */\n    public user: User;\n    /** Whether user details are being saved */\n    public loading: boolean;\n\n    constructor(\n        private _dialog: MatDialogRef<NewUserModalComponent>,\n        private _service: ApplicationService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.user = new User();\n        this.form = generateUserForm(this.user);\n    }\n\n    public saveChanges() {\n        this.form.markAllAsTouched();\n        if (this.form.valid) {\n            const new_user = new User({\n                ...this.form.value,\n                name: `${this.form.value.first_name} ${this.form.value.last_name}`,\n                type: 'external'\n            });\n            this.user.changeEvents.next({ type: 'item_saved', metadata: new_user });\n            this.event.emit({ reason: 'done', metadata: new_user });\n        }\n    }\n\n}\n","<header>\n    <h3 mat-dialog-title>Add External Attendee</h3>\n    <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<div class=\"body\" *ngIf=\"!loading; else load_state\">\n    <user-form [form]=\"form\"></user-form>\n</div>\n<footer *ngIf=\"!loading\">\n    <button mat-button class=\"inverse\" mat-dialog-close>Cancel</button>\n    <button mat-button (tapped)=\"saveChanges()\">Save</button>\n</footer>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">\n                Saving attendee...\n            </div>\n        </div>\n    </div>\n</ng-template>\n\n","\nimport { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { SharedContentModule } from '../shared/shared.module';\n\nimport { ConfirmModalComponent } from './confirm-modal/confirm-modal.component';\nimport { ViewRoomModalComponent } from './view-room-modal/view-room-modal.component';\nimport { NewUserModalComponent } from './new-user-modal/new-user-modal.component';\nimport { BookingRulesModalComponent } from './booking-rules-modal/booking-rules-modal.component';\n\nimport { BookingConfirmComponent } from '../shell/bookings/overlays/booking-confirm/booking-confirm.component';\nimport { MeetingDetailsOverlayComponent } from './meeting-details-overlay/meeting-details-overlay.component';\nimport { MeetingDetailsCateringComponent } from './meeting-details-overlay/catering/catering.component';\nimport { MeetingDetailsDisplayComponent } from './meeting-details-overlay/display/display.component';\nimport { MeetingDetailsSpaceComponent } from './meeting-details-overlay/space/space.component';\nimport { TimeExtensionModalComponent } from './time-extension/time-extension.component';\nimport { SpaceSelectModalComponent } from './space-select-modal/space-select-modal.component';\nimport { RecurrenceModalComponent } from './recurrence-modal/recurrence-modal.component';\n\nconst OVERLAYS: Type<any>[] = [\n    ConfirmModalComponent,\n    ViewRoomModalComponent,\n    BookingConfirmComponent,\n    NewUserModalComponent,\n    BookingRulesModalComponent,\n    MeetingDetailsOverlayComponent,\n    TimeExtensionModalComponent,\n    RecurrenceModalComponent\n];\n\n@NgModule({\n    declarations: [\n        ...OVERLAYS,\n        MeetingDetailsCateringComponent,\n        MeetingDetailsDisplayComponent,\n        MeetingDetailsSpaceComponent,\n        SpaceSelectModalComponent\n    ],\n    imports: [\n        CommonModule,\n        SharedContentModule,\n        FormsModule,\n        ReactiveFormsModule,\n    ],\n    exports: [\n        ...OVERLAYS\n    ]\n})\nexport class SharedOverlaysModule {}\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, Identity } from '../../shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { BookingRecurrenceDetails } from 'src/app/services/data/bookings/booking.interfaces';\n\nexport interface RecurrenceModalData {\n    /** Current recurrence details */\n    details: BookingRecurrenceDetails;\n    /** Currently set date for the booking */\n    date: number;\n}\n\nexport const RECURRENCE_METADATA = {\n    height: 'auto',\n    width: '24em',\n    maxHeight: 'calc(100vh - 2em)',\n    maxWidth: 'calc(100vw - 2em)'\n};\n\n@Component({\n    selector: 'recurrence-modal',\n    templateUrl: './recurrence-modal.component.html',\n    styleUrls: ['./recurrence-modal.component.scss']\n})\nexport class RecurrenceModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for recurrence */\n    public form: FormGroup;\n    /** Loading state */\n    public loading: string;\n    /** Available recurrence periods */\n    public periods: Identity[] = [\n        { id: 'None', name: 'None' },\n        { id: 'Daily', name: 'Daily' },\n        { id: 'Weekly', name: 'Weekly' },\n        { id: 'Biweekly', name: 'Biweekly' },\n        { id: 'Monthly', name: 'Monthly' },\n    ];\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: RecurrenceModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.form = new FormGroup({\n            period: new FormControl(this._data.details.period || 'none'),\n            end: new FormControl(this._data.details.end || this._data.date, [Validators.required]),\n        });\n    }\n\n    /**\n     * User confirmation of the content of the modal\n     */\n    public save() {\n        this.form.markAllAsTouched();\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            this.loading = 'Adding recurrence data to booking...';\n            this.event.emit({ reason: 'done', metadata: { ...this._data.details, ...this.form.value } });\n        }\n    }\n}\n","<header>\n    <div class=\"heading\" mat-dialog-title>Booking Recurrence</div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main *ngIf=\"!loading; else load_state\">\n        <form *ngIf=\"form\" [formGroup]=\"form\">\n            <div class=\"field\" *ngIf=\"form.controls.period && periods.length > 1\">\n                <label for=\"period\">Period: </label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select name=\"period\" formControlName=\"period\" placeholder=\"None\">\n                        <mat-option *ngFor=\"let type of periods\" [value]=\"type.id\">\n                            {{ type.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.end\">\n                <label\n                    for=\"end\"\n                    [class.error]=\"form.controls.end.errors && form.controls.end.touched\"\n                >\n                    End Date<span>*</span>:\n                </label>\n                <a-date-field name=\"end\" formControlName=\"end\"></a-date-field>\n                <div\n                    class=\"error-message\"\n                    *ngIf=\"form.controls.end.errors && form.controls.end.touched\"\n                >\n                    End date needs to be in the future\n                </div>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading\">\n    <footer>\n        <button mat-button (tapped)=\"save()\">Add to Booking</button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Observable, Subject, of } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, switchMap, catchError, map } from 'rxjs/operators';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { Space, SpaceBookingRuleOptions } from 'src/app/services/data/spaces/space.class';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { Identity, HashMap, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nexport interface SpaceSelectModalData {\n    /** List of selected spaces */\n    spaces: Space[];\n    /** Start time for availability of spaces */\n    date: number;\n    /** Duration of the availability block to look for */\n    duration: number;\n    /** Host of the booking being made */\n    host: User;\n    /** Whether multiple spaces can be selected */\n    multiple: boolean;\n    /** Force zone ids */\n    zone_ids?: string;\n}\n\n@Component({\n    selector: 'a-space-select-modal',\n    templateUrl: './space-select-modal.component.html',\n    styleUrls: ['./space-select-modal.component.scss']\n})\nexport class SpaceSelectModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether space list is being loaded */\n    public loading: boolean;\n    /** List of available spaces to select from */\n    public spaces: Space[] = [];\n    /** Active building to filter spaces on */\n    public active_building: Building;\n    /** Active building to filter spaces on */\n    public active_type: Identity;\n    /** List of items from an API search */\n    public search_results$: Observable<Space[]>;\n    /** Subject holding the value of the search */\n    public readonly search$ = new Subject<string>();\n    /** List of currently selected spaces */\n    public selected_spaces: Space[] = [];\n    /** Mapping as to whether a space is by request */\n    public request_map: HashMap<boolean> = {};\n    /** Whether selected list should be shown on mobile */\n    public show_list: boolean;\n\n    /** List of available buildings */\n    public types: Identity[] = []\n\n    /** List of available buildings */\n    public get buildings(): Building[] {\n        return this._org.buildings;\n    }\n\n    /** Whether multiple spaces can be selected */\n    public get multiple(): boolean {\n        return !!this._data.multiple;\n    }\n\n    public get has_zone(): boolean {\n        return !!this._data.zone_ids;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        @Inject(MAT_DIALOG_DATA) private _data: SpaceSelectModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.selected_spaces = [].concat(this._data.spaces || []);\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(400),\n            distinctUntilChanged(),\n            switchMap(_ => {\n                this.loading = true;\n                const zone_ids: string[] = [];\n                /* istanbul ignore else */\n                if (this.active_building) {\n                    zone_ids.push(this.active_building.id);\n                }\n                /* istanbul ignore else */\n                if (this.active_type) {\n                    zone_ids.push(`${this.active_type.id}`);\n                }\n                return this._spaces.available({\n                    zone_ids: this._data.zone_ids || zone_ids.join(','),\n                    date: this._data.date,\n                    duration: this._data.duration\n                });\n            }),\n            catchError(_ => of([])),\n            map((list: Space[]) => {\n                this.loading = false;\n                const selected = this.selected_spaces;\n                return list.filter((item: any) => !selected.find(space => space.id === item.id));\n            })\n        );\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe(list => {\n                this.spaces = list;\n                this.spaces.sort((a, b) => this.sort(a, b));\n                this.update();\n            })\n        );\n        this.active_building = this._org.building;\n        this.types = [{ id: '', name: 'Any Space Type' } as any].concat(\n            this._org.space_types || []\n        );\n        this.active_type = this.types[0];\n        this.search$.next('');\n    }\n\n    /** Add space to selected list */\n    public addSpace(space: Space) {\n        this.selected_spaces.push(space);\n        this.selected_spaces = unique(this.selected_spaces, 'id');\n    }\n\n    /** Remove space from selected list */\n    public removeSpace(space: Space) {\n        this.selected_spaces = this.selected_spaces.filter(a_space => a_space.id !== space.id);\n    }\n\n    /** Emit current state of the selected list */\n    public save(list: Space[]) {\n        this.event.emit({ reason: 'done', metadata: list });\n    }\n\n    private update() {\n        const map = {};\n        const options: SpaceBookingRuleOptions = {\n            date: this._data.date,\n            duration: this._data.duration,\n            host: this._data.host\n        };\n        this.selected_spaces.forEach(space => (map[space.id] = space.byRequest(options)));\n        this.spaces.forEach(space => (map[space.id] = space.byRequest(options)));\n        this.request_map = map;\n    }\n\n    /**\n     * Compare two spaces to determine order\n     * @param space_a\n     * @param space_b\n     */\n    private sort(space_a: Space, space_b: Space) {\n        const bld = this._org.buildings.find(bld => bld.id === space_a.level.building_id);\n        const bld_b = this._org.buildings.find(bld => bld.id === space_b.level.building_id);\n        if (bld) {\n            if (bld !== bld_b) {\n                return (bld.name || '').localeCompare(bld_b.name || '');\n            }\n            const sort_order = (bld.sort_order ? [...bld.sort_order] : []).reverse();\n            for (const zone_id of sort_order) {\n                if (zone_id === '*') { continue; }\n                const a_has_zone = space_a.zones.indexOf(zone_id) >= 0;\n                const b_has_zone = space_b.zones.indexOf(zone_id) >= 0;\n                if (a_has_zone && !b_has_zone) {\n                    return 1;\n                } else if (b_has_zone && !a_has_zone) {\n                    return -1;\n                }\n            }\n        }\n        return (space_a.name || '').localeCompare(space_b.name || '');\n    }\n}\n","<header>\n    <div class=\"heading\">Select meeting space{{ multiple ? 's' : '' }}</div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main>\n        <div class=\"block available\">\n            <ng-container *ngIf=\"!has_zone\">\n                <mat-form-field appearance=\"outline\" *ngIf=\"buildings && buildings.length > 1\">\n                    <mat-select\n                        #select\n                        [(value)]=\"active_building\"\n                        (valueChange)=\"search$.next(active_building.id + '|' + active_type.id)\"\n                    >\n                        <mat-option *ngFor=\"let building of buildings\" [value]=\"building\">\n                            {{ building.code }} - {{ building.name\n                            }}{{ building.address ? ', ' + building.address : '' }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\" *ngIf=\"types && types.length > 1\">\n                    <mat-select\n                        #select\n                        [(value)]=\"active_type\"\n                        (valueChange)=\"search$.next(active_building.id + '|' + active_type.id)\"\n                    >\n                        <mat-option *ngFor=\"let type of types\" [value]=\"type\">\n                            {{ type?.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </ng-container>\n            <div class=\"list\">\n                <ng-container *ngIf=\"!loading; else load_state\">\n                    <ng-container *ngIf=\"spaces && spaces.length; else empty_state\">\n                        <div class=\"item\" *ngFor=\"let space of spaces\">\n                            <div class=\"details\">\n                                <div class=\"name\">{{ space.name }}</div>\n                                <div class=\"info\">{{ space.level.name }}</div>\n                            </div>\n                            <div class=\"capacity\">\n                                <app-icon\n                                    [icon]=\"{ type: 'icon', class: 'material-icons', content: 'account_circle' }\"\n                                ></app-icon>\n                                <div class=\"text\">{{ space.capacity || '0' }}</div>\n                            </div>\n                            <div class=\"actions\">\n                                <button\n                                    [class.request]=\"request_map[space.id]\"\n                                    mat-button\n                                    (tapped)=\"multiple ? addSpace(space) : save([space])\"\n                                >\n                                    Select\n                                </button>\n                            </div>\n                        </div>\n                    </ng-container>\n                </ng-container>\n            </div>\n        </div>\n        <div class=\"block selected\" *ngIf=\"multiple\" [class.show]=\"show_list\">\n            <h3>Selected spaces</h3>\n            <div class=\"list\">\n                <ng-container\n                    *ngIf=\"selected_spaces && selected_spaces.length; else empty_select_state\"\n                >\n                    <div class=\"item\" *ngFor=\"let space of selected_spaces\">\n                        <div\n                            class=\"icon\"\n                            [class.request]=\"request_map[space.id]\"\n                            [matTooltip]=\"\n                                request_map[space.id]\n                                    ? 'Bookings in this space need to be approved by a member of the concierge team'\n                                    : ''\n                            \"\n                        >\n                            <app-icon\n                                [icon]=\"{\n                                    class: 'material-icons',\n                                    content: request_map[space.id] ? 'warning' : 'done'\n                                }\"\n                            ></app-icon>\n                        </div>\n                        <div class=\"details\">\n                            <div class=\"name\">{{ space.name }}</div>\n                            <div class=\"info\">{{ space.level.name }}</div>\n                        </div>\n                        <div class=\"capacity\">\n                            <app-icon\n                                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'account_circle' }\"\n                            ></app-icon>\n                            <div class=\"text\">{{ space.capacity || '0' }}</div>\n                        </div>\n                        <div class=\"actions\">\n                            <button mat-icon-button (tapped)=\"removeSpace(space)\">\n                                <app-icon\n                                    [icon]=\"{ class: 'material-icons', content: 'close' }\"\n                                ></app-icon>\n                            </button>\n                        </div>\n                    </div>\n                </ng-container>\n            </div>\n            <footer>\n                <button mat-button (tapped)=\"save(this.selected_spaces)\">Add to booking</button>\n            </footer>\n            <button mat-icon-button [class.close]=\"true\" [class.mobile-only]=\"true\" (tapped)=\"show_list = false\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n            </button>\n            <div class=\"tag mobile-only\">\n                <button mat-icon-button (tapped)=\"show_list = true\">\n                    <app-icon [icon]=\"{ class: 'material-icons', content: 'list' }\"></app-icon>\n                </button>\n            </div>\n        </div>\n    </main>\n</mat-dialog-content>\n<ng-template #load_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <mat-spinner diameter=\"48\"></mat-spinner>\n        </div>\n        <div class=\"text\">Loading available spaces...</div>\n    </div>\n</ng-template>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">No available spaces</div>\n    </div>\n</ng-template>\n<ng-template #empty_select_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">No selected spaces</div>\n    </div>\n</ng-template>\n","import { Component, Output, EventEmitter, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { DialogEvent, Identity } from 'src/app/shared/utilities/types.utilities';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { humaniseDuration } from 'src/app/shared/utilities/general.utilities';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\n/** Maximum amount of time that the booking can be extended */\nconst MAX_EXTENSION = 60;\n\nexport interface TimeExtensionModalData {\n    booking: Booking;\n}\n\n@Component({\n    selector: 'time-extension',\n    templateUrl: './time-extension.component.html',\n    styleUrls: ['./time-extension.component.scss']\n})\nexport class TimeExtensionModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Duration options that the user can select */\n    public durations: Identity[] = [];\n    /** Display string for the loading state of the booking */\n    public loading: string;\n\n    public get booking(): Booking {\n        return this._data.booking;\n    }\n\n    constructor(\n        private _dialog: MatDialogRef<TimeExtensionModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: TimeExtensionModalData,\n        private _service: ApplicationService,\n        private _spaces: SpacesService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.checkAvailability(MAX_EXTENSION);\n    }\n\n    public checkAvailability(extension: number) {\n        if (extension <= 0) {\n            this._service.notifyInfo('Meeting is not available to be extended.');\n            this._dialog.close();\n            return;\n        }\n        this.loading = 'Checking availability of spaces...';\n        this._spaces.available({\n            room_ids: this.booking.space_list.map(room => room.id).join(','),\n            date: this.booking.date,\n            duration: this.booking.duration + extension,\n            ignore: this.booking.icaluid,\n            hide_bookings: true\n        }).then(\n            list => {\n                if (list.length >= this.booking.space_list.length) {\n                    this.durations = [];\n                    let extended = 15;\n                    while (extended <= extension) {\n                        this.durations.push({\n                            id: this.booking.duration + extended,\n                            name: ` Extend ${humaniseDuration(extended)}`\n                        });\n                        extended += 15;\n                    }\n                    this.loading = null;\n                } else {\n                    this.checkAvailability(extension - 15);\n                }\n            },\n            err => {\n                this._service.notifyError(`Error extending meeting. Error: ${err.message | err}`);\n                this._dialog.close();\n            }\n        );\n    }\n\n    /**\n     * Extend the meeting but the given duration\n     * @param block Duration block to update the meeting to\n     */\n    public extendMeeting(block: Identity) {\n        this.loading = 'Extending meeting...';\n        this.booking.storePendingChange('duration', block.id);\n        this.booking.save().then(\n            (booking) => {\n                this.loading = null;\n                this.event.emit({ reason: 'done', metadata: booking });\n                this._dialog.close();\n            },\n            err => {\n                this._service.notifyError(`Error extending meeting. Error: ${err.message | err}`);\n            }\n        );\n    }\n}\n","<header>\n    <div class=\"text\">Extend meeting</div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{class:'material-icons', content: 'close'}\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main>\n        <ng-container *ngIf=\"!loading && durations; else loading_content\">\n            <button *ngFor=\"let item of durations\" name=\"action\" (tapped)=\"extendMeeting(item)\">\n                {{ item.name }}\n            </button>\n        </ng-container>\n    </main>\n</mat-dialog-content>\n<ng-template #loading_content>\n    <div class=\"no-items\">\n        <div class=\"icon\">\n            <spinner *ngIf=\"loading\" type=\"circle-ring\" color=\"rgba(0,0,0,.6)\"></spinner>\n            <app-icon\n                *ngIf=\"!loading\"\n                [icon]=\"{class:'material-icons', content: 'event_busy'}\"\n            ></app-icon>\n        </div>\n        <div class=\"text\">\n            {{ loading || 'No available extensions' }}\n        </div>\n    </div>\n</ng-template>\n","import { Component, Output, EventEmitter, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { MapPinComponent } from '@acaprojects/ngx-interactive-map';\n\nimport { BaseDirective } from '../../shared/base.directive';\nimport { BuildingLevel } from '../../services/data/organisation/level.class';\nimport { Space } from '../../services/data/spaces/space.class';\nimport { MapFeature } from '@acaprojects/ngx-interactive-map/lib/helpers/map.interfaces';\nimport { Point } from 'src/app/shared/utilities/types.utilities';\n\n@Component({\n    selector: 'view-room-modal',\n    templateUrl: './view-room-modal.component.html',\n    styleUrls: ['./view-room-modal.component.scss'],\n})\nexport class ViewRoomModalComponent extends BaseDirective {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter();\n\n    public features: MapFeature[] = [];\n    /** Space to show the location of on the map */\n    public get space(): Space {\n        return this._data.space;\n    }\n\n    public get level(): BuildingLevel {\n        return this.space.level;\n    }\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: { space: Space }) {\n        super();\n        this.features = [this.focus_feature];\n    }\n\n    /** Point on map to focus on */\n    public get focus_feature(): MapFeature {\n        /* istanbul ignore else */\n        if (!this.space) {\n            return null;\n        }\n        return {\n            id: `area-${this.space.map_id}-status`,\n            coordinates: null,\n            content: MapPinComponent,\n            data: {\n                back: '#fff',\n                fore: '#d31145',\n            },\n        };\n    }\n\n    public get focus(): string | Point {\n        return this.focus_feature ? this.focus_feature.id : null;\n    }\n}\n","<header>\n    <h3 mat-dialog-title>Locate Space - <span>{{ space.name }}</span></h3>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <div class=\"body\" *ngIf=\"level\">\n        <a-map [src]=\"level?.map_url\" [features]=\"features\">\n            <mat-spinner diameter=\"64\"></mat-spinner>\n        </a-map>\n\n        <div class=\"level\">{{ level?.name }}</div>\n    </div>\n</mat-dialog-content>\n","import { Injectable, ApplicationRef, NgZone } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { SwUpdate } from '@angular/service-worker';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { first } from 'rxjs/operators';\n\nimport { ComposerService } from '@placeos/composer';\nimport { PlaceOSOptions } from '@placeos/ts-client';\nimport { HeapIoService } from '@acaprojects/ngx-heap-io';\n\nimport { Observable, BehaviorSubject, Subject, Subscription } from 'rxjs';\n\nimport { BaseClass } from '../shared/base.class';\nimport { ConsoleStream, SettingsService } from './settings.service';\nimport { ApplicationLoadingState } from '../shared/utilities/types.utilities';\n\nimport { HotkeysService } from './hotkeys.service';\nimport { ComposerSettings, ApplicationIcon } from '../shared/utilities/settings.interfaces';\nimport { BaseDataClass } from './data/base-api.class';\n\ndeclare global {\n    interface Window {\n        application: ApplicationService;\n        mock: {\n            enabled: boolean;\n            backend: any;\n        };\n    }\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ApplicationService extends BaseClass {\n    /** List of previous routes for return navigation */\n    private _route_trail: string[] = [];\n    /** Map of state variables for Service */\n    protected _subjects: {\n        [key: string]: BehaviorSubject<any> | Subject<any>;\n    } = {};\n    /** Map of observables for state variables */\n    protected _observers: { [key: string]: Observable<any> } = {};\n    /** Whether the application has stablised */\n    private _stable: boolean;\n\n    /** Whether the application has stablised */\n    public get is_stable(): boolean {\n        return this._stable || false;\n    }\n\n    constructor(\n        private _app_ref: ApplicationRef,\n        private _zone: NgZone,\n        private _title: Title,\n        private _cache: SwUpdate,\n        private _settings: SettingsService,\n        private _hotkeys: HotkeysService,\n        private _composer: ComposerService,\n        private _snackbar: MatSnackBar,\n        private _analytics: HeapIoService,\n    ) {\n        super();\n        this.set('system', null);\n        this.set('title', 'Home');\n        this.set('loading', {});\n        this._app_ref.isStable.pipe(first(_ => _)).subscribe(() => {\n            this._zone.run(() => {\n                this._stable = true;\n                this.log('APP', `Application has stablised.`);\n                this.setupCache();\n                this.waitForSettings();\n            });\n        });\n    }\n\n    public get Bindings() {\n        return this._composer.bindings;\n    }\n    /** Analytics service */\n    public get Analytics() {\n        return {};\n    }\n    /** Hotkeys service */\n    public get Hotkeys() {\n        return this._hotkeys;\n    }\n\n    /** Engine Composer service */\n    public get Composer() {\n        return this._composer;\n    }\n\n    /**\n     * Get a setting from the settings service\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        return this._settings.get(key);\n    }\n\n    /** Name of the application */\n    public get name() {\n        return this._settings.app_name;\n    }\n\n    /**\n     * Title of the page\n     */\n    public set title(value: string) {\n        const title_suffix = this.setting('app.title');\n        this.set('title', value);\n        this._title.setTitle(`${value ? value + ' | ' : ''}${title_suffix}`);\n    }\n\n    /**\n     * Title of the page\n     */\n    public get title(): string {\n        return this._title.getTitle();\n    }\n\n    /** Root API Endpoint */\n    public get endpoint() {\n        return `/api/staff/`;\n    }\n\n    /** Root API Endpoint for engine */\n    public get engine_endpoint() {\n        return this._composer.auth.api_endpoint + '/';\n    }\n\n    /** Whether settings has been loaded */\n    public get has_settings(): boolean {\n        return this._settings.is_initialised;\n    }\n\n    /**\n     * Create notification popup\n     * @param type CSS Class to add to the notification\n     * @param message Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     * @param icon Icon to render to the left of the notification message\n     */\n    public notify(\n        type: string,\n        message: string,\n        action: string = 'OK',\n        on_action?: () => void,\n        icon: ApplicationIcon = {\n            type: 'icon',\n            class: 'material-icons',\n            content: 'info'\n        }\n    ): void {\n        const snackbar_ref = this._snackbar.open(message, action, {\n            panelClass: [type],\n            duration: 5000\n        });\n        this.subscription(\n            'snackbar_close',\n            snackbar_ref.afterDismissed().subscribe(() => {\n                this.unsub('snackbar_close');\n                this.unsub('notify');\n            })\n        );\n        if (action) {\n            on_action = on_action || (() => snackbar_ref.dismiss());\n            this.subscription(\n                'notify',\n                snackbar_ref.onAction().subscribe(() => on_action())\n            );\n        }\n    }\n\n    /**\n     * Create success notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifySuccess(msg: string, action?: string, on_action?: () => void): void {\n        const icon: ApplicationIcon = {\n            type: 'icon',\n            class: 'material-icons',\n            content: 'done'\n        };\n        console.debug(msg);\n        this.notify('success', msg, action, on_action, icon);\n    }\n\n    /**\n     * Create error notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifyError(msg: string, action?: string, on_action?: () => void): void {\n        const icon: ApplicationIcon = {\n            type: 'icon',\n            class: 'material-icons',\n            content: 'error'\n        };\n        console.error(msg);\n        this.notify('error', msg, action, on_action, icon);\n    }\n\n    /**\n     * Create warning notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifyWarn(msg: string, action?: string, on_action?: () => void): void {\n        const icon: ApplicationIcon = {\n            type: 'icon',\n            class: 'material-icons',\n            content: 'warning'\n        };\n        console.warn(msg);\n        this.notify('warn', msg, action, on_action, icon);\n    }\n\n    /**\n     * Create info notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifyInfo(msg: string, action?: string, on_action?: () => void): void {\n        console.info(msg);\n        this.notify('info', msg, action, on_action);\n    }\n\n    /**\n     * Log data to the browser console\n     * @param type Type of message\n     * @param msg Message body\n     * @param args array of argments to log to the console\n     * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\n     * @param force Whether to force message to be emitted when debug is disabled\n     */\n    public log(\n        type: string,\n        msg: string,\n        args?: any,\n        stream: ConsoleStream = 'debug',\n        force: boolean = false\n    ): void {\n        this._settings.log(type, msg, args, stream, force);\n    }\n\n    /**\n     * Get the current value of the named property\n     * @param name Property name\n     */\n    public get<U = any>(name: string): U {\n        return this._subjects[name] && this._subjects[name] instanceof BehaviorSubject\n            ? (this._subjects[name] as BehaviorSubject<U>).getValue()\n            : null;\n    }\n\n    /**\n     * Listen to value change of the named property\n     * @param name Property name\n     * @param next Callback for value changes\n     */\n    public listen<U = any>(name: string, next: (_: U) => void): Subscription {\n        return this._observers[name] ? this._observers[name].subscribe(next) : null;\n    }\n\n    /**\n     * Update the value of the named property\n     * @param name Property name\n     * @param value New value\n     */\n    public set<U = any>(name: string, value: U): void {\n        if (!this._subjects[name]) {\n            this._subjects[name] = new BehaviorSubject<U>(value);\n            this._observers[name] = this._subjects[name].asObservable();\n        } else {\n            this._subjects[name].next(value);\n        }\n    }\n\n    /** Wait for settings to be initialised before setting up the application */\n    private waitForSettings() {\n        // Wait until the settings have loaded before initialising\n        this._settings.initialised.pipe(first(_ => _)).subscribe(() => this.init());\n    }\n\n    /**\n     * Initialise application services\n     */\n    private init(): void {\n        this.setupComposer();\n        // this.setupAnalytics();\n        this._composer.initialised.pipe(first(_ => _)).subscribe(() => {\n            this._initialised.next(true);\n        });\n        // Add service to window if in debug mode\n        if (window.debug) {\n            window.application = this;\n        }\n    }\n\n    /**\n     * Initialise the composer library comms\n     */\n    private setupComposer(): void {\n        this.log('SYSTEM', 'Setup up composer...');\n        const loading: ApplicationLoadingState = this.get('loading') || {};\n        loading.composer = {\n            message: 'Initialising service connection',\n            state: 'loading'\n        };\n        this.set('loading', loading);\n        // Get application settings\n        const settings: ComposerSettings = this._settings.get('composer') || {};\n        const protocol = settings.protocol || location.protocol;\n        const host = settings.domain || location.hostname;\n        const port = settings.port || location.port;\n        const url = settings.use_domain ? `${protocol}//${host}:${port}` : location.origin;\n        const route = settings.route || '';\n        const mock = this._settings.get('mock');\n        // Generate configuration object\n        const config: PlaceOSOptions = {\n            scope: 'public',\n            host: `${host}:${port}`,\n            auth_uri: `${url}/auth/oauth/authorize`,\n            token_uri: `${url}/auth/token`,\n            redirect_uri: `${location.origin}${route}/oauth-resp.html`,\n            handle_login: !settings.local_login,\n            mock\n        };\n        this._composer.setup(config);\n        loading.composer = {\n            message: 'Initialising service connection',\n            state: 'complete'\n        };\n        this.set('loading', loading);\n    }\n\n    /**\n     * Setup handler for cache change events\n     */\n    private setupCache() {\n        if (this._cache.isEnabled) {\n            this.subscription(\n                'cache_update',\n                this._cache.available.subscribe(event => {\n                    const current = `current version is ${event.current.hash}`;\n                    const available = `available version is ${event.available.hash}`;\n                    this.log('CACHE', `Update available: ${current} ${available}`);\n                    this.activateUpdate();\n                })\n            );\n            this.subscription(\n                'cache_activated',\n                this._cache.activated.subscribe(() => {\n                    this.log('CACHE', `Updates activated. Reloading...`);\n                    this.notifyInfo(\n                        'Newer version of the application is available',\n                        'Refresh',\n                        () => location.reload(true)\n                    );\n                })\n            );\n            setInterval(() => {\n                this.log('CACHE', `Checking for updates...`);\n                this._cache.checkForUpdate();\n            }, 5 * 60 * 1000);\n        }\n    }\n\n    /**\n     * Update the cache and reload the page\n     *\n     */\n    private activateUpdate() {\n        if (this._cache.isEnabled) {\n            this.log('CACHE', `Activating changes to the cache...`);\n            this._cache.activateUpdate().then(() => {\n                this.notifyInfo('Newer version of the application is available', 'Refresh', () =>\n                    location.reload(true)\n                );\n            });\n        }\n    }\n}\n","import { Subject, Observable } from 'rxjs';\n\nimport { BaseClass } from '../../shared/base.class';\nimport { HashMap } from '../../shared/utilities/types.utilities';\nimport { ServiceManager, ServiceLike } from './service-manager.class';\n\nexport type DataClassEventType = 'value_change' | 'item_saved' | 'reset' | 'other';\n\nexport interface IDataClassEvent<T = HashMap> {\n    type: DataClassEventType;\n    metadata: T;\n}\n\nexport const BASE_MUTABLE_FIELDS = ['name', 'email'] as const;\ntype BaseMutableTuple = typeof BASE_MUTABLE_FIELDS;\nexport type BaseMutableFields = BaseMutableTuple[number];\n\n\nexport class BaseDataClass extends BaseClass {\n    /** Unique Identifier of the object */\n    public readonly id: string;\n    /** Human readable name of the object */\n    public readonly name: string;\n    /** Email address associated with the object */\n    public readonly email: string;\n    /** Subject for change events to the class object */\n    public readonly changeEvents = new Subject<IDataClassEvent>();\n    /** Map of pending changes to the object */\n    protected _changes: HashMap = {};\n    /** Map of local property names to server ones */\n    protected _server_names: HashMap<string> = {};\n    /** Service for managing model on the server */\n    protected get _service(): ServiceLike {\n        return ServiceManager.serviceFor(BaseDataClass);\n    }\n\n    constructor(raw_data: HashMap) {\n        super();\n        this.id = raw_data.id || raw_data.zone_id || raw_data.email || '';\n        this.name = raw_data.name || '';\n        this.email = `${raw_data.email || ''}`.toLowerCase();\n        this._changes = {};\n    }\n\n    /** Whether the form has changes */\n    public get has_changes(): boolean {\n        for (const key in this.changes) {\n            if (this.changes[key]) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /** Map of currently unsaved changes to the state */\n    public get changes(): HashMap {\n        return JSON.parse(JSON.stringify(this._changes));\n    }\n\n    /**\n     * Store new value for given field\n     * @param key\n     * @param value\n     */\n    public storePendingChange(\n        key: BaseMutableFields,\n        value: BaseDataClass[BaseMutableFields]\n    ): this {\n        if (typeof value === typeof this[key as any]) {\n            this._changes[key as any] = value;\n            this.emit('value_change', { key, value });\n        } else {\n            throw new Error(`Invalid type for value \"${value}\" set for key \"${key}\"`);\n        }\n        return this;\n    }\n\n    public clearPendingChanges(): void {\n        delete this._changes;\n        this._changes = {};\n        this.emit('reset');\n    }\n\n    /**\n     * Save pending changes to server\n     */\n    public save(): Promise<BaseDataClass> {\n        if (this._service) {\n            const form = this.toJSON();\n            return new Promise((resolve, reject) => {\n                const promise = this.id\n                    ? this._service.update(this.id, form)\n                    : this._service.add(form);\n                promise.then(\n                    (d) => {\n                        this.emit<BaseDataClass>('item_saved', d);\n                        resolve(d);\n                    },\n                    (_) => reject(_)\n                );\n            });\n        } else {\n            Promise.reject('No service to process request');\n        }\n    }\n\n    /**\n     * Delete this item from the server\n     */\n    public delete(): Promise<void> {\n        if (this.id) {\n            return this._service.delete(this.id);\n        }\n    }\n\n    /**\n     * Run task for this item on the service\n     * @param task_name Name of the task\n     * @param parameters Parameters to pass to the task request\n     */\n    public runTask(task_name: string, parameters: HashMap): Promise<void> {\n        if (this.id) {\n            return this._service.task(this.id, task_name, parameters);\n        }\n    }\n    /**\n     * Convert object into plain object\n     */\n    public toJSON(this: BaseDataClass, with_changes: boolean = true): HashMap {\n        const obj: any = { ...this };\n        // Remove local private members\n        delete obj._service;\n        delete obj._changes;\n        delete obj.changeEvents;\n        // Remove parent private members\n        delete obj._timers;\n        delete obj._intervals;\n        delete obj._subscriptions;\n        delete obj._server_names;\n        delete obj._initialised;\n        // Convert remaining members to be public\n        const keys = Object.keys(obj);\n        for (const key of keys) {\n            if (key[0] === '_') {\n                const new_key = this._server_names[key.substr(1)] || key.substr(1);\n                obj[new_key] = obj[key];\n                delete obj[key];\n            } else if (obj[key] === undefined) {\n                delete obj[key];\n            }\n        }\n        return with_changes ? { ...obj, ...this._changes } : obj;\n    }\n\n    /**\n     * Emits change event\n     * @param type Type of change that has occurred\n     * @param metadata Supporting metadata for the event\n     */\n    public emit<T = HashMap>(type: DataClassEventType, metadata?: T): void {\n        this.changeEvents.next({ type, metadata });\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): BaseDataClass {\n        return new BaseDataClass(this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): BaseDataClass {\n        return new BaseDataClass({ ...this, id: null, email: null });\n    }\n}\n","import { ComposerService } from '@placeos/composer';\nimport { BehaviorSubject, Observable, Subscription, Subscriber, Subject } from 'rxjs';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDataClass } from './base-api.class';\nimport { BaseClass } from '../../shared/base.class';\nimport { ApplicationService } from '../app.service';\nimport { HashMap } from '../../shared/utilities/types.utilities';\nimport { toQueryString } from '../../shared/utilities/api.utilities';\n\nexport interface IEngineResponse {\n    results: HashMap[];\n    total: number;\n}\n\nexport class BaseAPIService<T extends {} = BaseDataClass> extends BaseClass {\n    /** Application service */\n    public parent: ApplicationService;\n    /** Display name of the service */\n    protected _name: string;\n    /** API Route of the service */\n    protected _api_route: string;\n    /** Map of state variables for Service */\n    protected _subjects: { [key: string]: BehaviorSubject<any> | Subject<any> } = {};\n    /** Map of observables for state variables */\n    protected _observers: { [key: string]: Observable<any> } = {};\n    /** Map of poll subscribers for API endpoints */\n    protected _subscribers: { [key: string]: Subscriber<any> } = {};\n    /** Map of promises for Service */\n    protected _promises: { [key: string]: Promise<any> } = {};\n    /** Comparison function for service items */\n    protected _compare: (a: T, b: T) => boolean = (a, b) =>\n        a === b || (a as any).id === (b as any).id;\n    /** Default filter function for list method */\n    protected _list_filter: (a: T) => boolean = (a) => !!a;\n\n    /** Http Client */\n    protected get http() {\n        return this._composer.http;\n    }\n\n    constructor(protected _composer: ComposerService) {\n        super();\n        this._name = 'Base';\n        this._api_route = 'base';\n        this.set('list', []);\n    }\n\n    /**\n     * Initailise service\n     */\n    public init() {\n        this.load().then(\n            (_) => this._initialised.next(true),\n            (err) => this.timeout('init', () => this.init(), 1000)\n        );\n    }\n\n    /**\n     * Get API route for the service\n     * @param engine Whether endpoint is using the application API or engine API\n     */\n    public route(engine: boolean = false) {\n        const endpoint = engine\n            ? this._composer.auth.api_endpoint\n            : '/api/staff';\n        return `${endpoint}/${this._api_route}`;\n    }\n    /** API Route of the service */\n    public get api_route() {\n        return this._api_route;\n    }\n\n    /**\n     * Get the current value of the named property\n     * @param name Property name\n     */\n    public get<U = any>(name: string): U {\n        if (!this._observers[name]) {\n            this.set<U>(name, null);\n        }\n        return (this._subjects[name] as BehaviorSubject<U>).getValue();\n    }\n\n    /**\n     * Listen to value change of the named property\n     * @param name Property name\n     * @param next Callback for value changes\n     */\n    public listen<U = any>(name: string): Observable<U> {\n        if (!this._observers[name]) {\n            this.set<U>(name, null);\n        }\n        return this._observers[name];\n    }\n\n    /**\n     * Update the value of the named property\n     * @param name Property name\n     * @param value New value\n     */\n    protected set<U = any>(name: string, value: U): void {\n        if (!this._subjects[name]) {\n            this._subjects[name] = new BehaviorSubject<U>(value);\n            this._observers[name] = this._subjects[name].asObservable();\n        } else {\n            this._subjects[name].next(value);\n        }\n    }\n\n    /**\n     * Get list of loaded items\n     * @param predicate Function for filtering the list\n     */\n    public filter(predicate: (a: T) => boolean = this._list_filter): T[] {\n        const list = this.get('list') || [];\n        return list.reduce((a, i) => {\n            if (predicate(i)) {\n                a.push(i);\n            }\n            return a;\n        }, []);\n    }\n\n    /**\n     * Get item with the given id from the loaded items\n     * @param id ID of the item\n     */\n    public find(id: string = ''): T {\n        const list = this.get('list') || [];\n        id = id.toLowerCase();\n        return list.find((i) => i.id === id || i.email.toLowerCase() === id);\n    }\n\n    /**\n     * Query the index of the API route associated with this service\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public query(query_params: HashMap = { update_list: true }): Promise<T[]> {\n        let engine = false;\n        let cache = 1000;\n        /* istanbul ignore else */\n        if (query_params) {\n            engine = !!query_params.engine;\n            delete query_params.engine;\n            cache = query_params.cache || 1000;\n            delete query_params.cache;\n        }\n        const query = toQueryString(query_params);\n        const key = `query|${query}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise((resolve, reject) => {\n                const url = `${this.route(engine)}${query ? '?' + query : ''}`;\n                let result: T[] | HashMap[] = [];\n                this.http.get(url).subscribe(\n                    (d: IEngineResponse | HashMap[]) => {\n                        result =\n                            d && d instanceof Array\n                                ? d.map((i) => this.process(i))\n                                : d && !(d instanceof Array) && d.results\n                                ? (d.results as HashMap[])\n                                : [];\n                    },\n                    (e) => {\n                        reject(e);\n                        this._promises.new_item = null;\n                    },\n                    () => {\n                        if (\n                            (!query || (query_params && query_params.update_list)) &&\n                            result.length > 0 &&\n                            result[0] instanceof BaseDataClass\n                        ) {\n                            this.set('list', this.updateList(this.get('list'), result as T[]));\n                        }\n                        resolve(result);\n                        this.timeout(key, () => (this._promises[key] = null), cache);\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Query the API route for a sepecific item\n     * @param id ID of the item\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public show(id: string, query_params: HashMap = {}): Promise<T> {\n        let engine = false;\n        /* istanbul ignore else */\n        if (query_params) {\n            engine = !!query_params.engine;\n            delete query_params.engine;\n        }\n        const query = toQueryString(query_params);\n        const key = `show|${id}|${query}`;\n        /* istanbul ignore else */\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<T>((resolve, reject) => {\n                const url = `${this.route(engine)}/${id}${query ? '?' + query : ''}`;\n                let result: T = null;\n                this.http.get(url).subscribe(\n                    (d) => (result = this.process(d)),\n                    (e) => {\n                        reject(e);\n                        this._promises.new_item = null;\n                    },\n                    () => {\n                        resolve(result);\n                        this.timeout(key, () => (this._promises[key] = null), 1000);\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Make post request for a new item to the service\n     * @param form_data Data to post to the server\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public add(form_data: HashMap, query_params: HashMap = {}): Promise<T> {\n        /* istanbul ignore else */\n        if (!this._promises.new_item) {\n            this._promises.new_item = new Promise<T>((resolve, reject) => {\n                const query = toQueryString(query_params);\n                const url = `${this.route(query_params.engine)}${query ? '?' + query : ''}`;\n                let result: T = null;\n                this.http.post(url, form_data).subscribe(\n                    (d) => (result = this.process(d)),\n                    (e) => {\n                        reject(e);\n                        this.analyticsEvent(`create-${this._name.toLowerCase()}-failed`);\n                        this._promises.new_item = null;\n                    },\n                    () => {\n                        resolve(result);\n                        this.set('list', this.updateList(this.get('list'), [result]));\n                        this.analyticsEvent(`create-${this._name.toLowerCase()}-success`);\n                        this._promises.new_item = null;\n                    }\n                );\n            });\n        }\n        return this._promises.new_item;\n    }\n\n    /**\n     * Perform API task for the given item ID\n     * @param id ID of the item\n     * @param task_name Name of the task\n     * @param form_data Map of data to pass to the API\n     * @param method Verb to use for request\n     */\n    public task<U = any>(\n        id: string,\n        task_name: string,\n        form_data: HashMap = {},\n        method: 'post' | 'get' = 'post'\n    ): Promise<U> {\n        const query = toQueryString(form_data);\n        const key = `task|${id}|${task_name}|${query}`;\n        /* istanbul ignore else */\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<U>((resolve, reject) => {\n                const post_data = { ...form_data, id, _task: task_name };\n                const url = `${this.api_route}/${id}/${task_name}`;\n                let result: any;\n                const request =\n                    method === 'post'\n                        ? this.http.post(url, post_data)\n                        : this.http.get(`${url}${query ? '?' + query : ''}`);\n                request.subscribe(\n                    (d) => (result = d),\n                    (e) => {\n                        reject(e);\n                        this.analyticsEvent(\n                            `${this._name.toLowerCase()}-task-${task_name}-failed`,\n                            id\n                        );\n                        delete this._promises[key];\n                    },\n                    () => {\n                        resolve(result as U);\n                        this.analyticsEvent(\n                            `${this._name.toLowerCase()}-task-${task_name}-success`,\n                            id\n                        );\n                        this.timeout(key, () => delete this._promises[key], 1000);\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Setup a poller for an API endpoint\n     * @param id Show request ID. Leave blank to poll on the query endpoint\n     * @param query_params Map of query paramaters to add to the polled URL\n     * @param delay Delay between each poll event\n     */\n    public poll(\n        id?: string,\n        query_params: HashMap = {},\n        delay: number = 5000\n    ): Observable<T | T[]> {\n        const key = `poll|${id || ''}|${toQueryString(query_params) || ''}`;\n        this.stopPoll(id, query_params);\n        this._subjects[key] = new Subject<T | T[]>();\n        this._observers[key] = this._subjects[key].asObservable();\n        const sub = this._subjects[key];\n        const query = { ...(query_params || {}), _poll: true };\n        if (id) {\n            this.show(id, query).then(\n                (d) => sub.next(d),\n                (e) => sub.error(e)\n            );\n            this.interval(\n                key,\n                () => {\n                    this.show(id, query).then(\n                        (d) => sub.next(d),\n                        (e) => sub.error(e)\n                    );\n                },\n                delay\n            );\n        } else {\n            this.query(query).then(\n                (d) => sub.next(d),\n                (e) => sub.error(e)\n            );\n            this.interval(\n                key,\n                () => {\n                    this.query(query).then(\n                        (d) => sub.next(d),\n                        (e) => sub.error(e)\n                    );\n                },\n                delay\n            );\n        }\n        return this._observers[key];\n    }\n\n    /**\n     * Destroy poller\n     * @param id\n     * @param query_params\n     */\n    public stopPoll(id?: string, query_params: HashMap = {}) {\n        const key = `poll|${id || ''}|${toQueryString(query_params) || ''}`;\n        /* istanbul ignore else */\n        if (this._subjects[key]) {\n            this._subjects[key].complete();\n            this._subjects[key] = null;\n            this._observers[key] = null;\n        }\n    }\n\n    /**\n     * Make put request for changes to the item with the given id\n     * @param id ID of the item being updated\n     * @param form_data New values for the item\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public update(id: string, form_data: HashMap, query_params: HashMap = {}): Promise<T> {\n        const key = `update|${id}`;\n        /* istanbul ignore else */\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<T>((resolve, reject) => {\n                const query = toQueryString(query_params);\n                const url = `${this.route(query_params.engine)}/${id}${query ? '?' + query : ''}`;\n                let result: T = null;\n                this.http.put(url, form_data).subscribe(\n                    (d) => (result = this.process(d)),\n                    (e) => {\n                        reject(e);\n                        this.analyticsEvent(`update-${this._name.toLowerCase()}-failed`, id);\n                        this._promises[key] = null;\n                    },\n                    () => {\n                        resolve(result);\n                        this.set(\n                            'list',\n                            this.updateList(this.removeItem(this.get('list'), { id } as any), [\n                                result,\n                            ])\n                        );\n                        this.analyticsEvent(`update-${this._name.toLowerCase()}-success`, id);\n                        this._promises[key] = null;\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Make delete request for the given item\n     * @param id ID of item\n     */\n    public delete(id: string): Promise<void> {\n        const key = `delete|${id}`;\n        /* istanbul ignore else */\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<void>((resolve, reject) => {\n                const url = `${this.route()}/${id}`;\n                this.http.delete(url).subscribe(\n                    (_) => null,\n                    (e) => reject(e),\n                    () => {\n                        this.set('list', this.removeItem(this.get('list'), { id } as any));\n                        resolve();\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Add new API item from another service or API class\n     * @param id ID of the item/or service adding the new item\n     * @param data Raw API data for the new item\n     * @param type Adder type\n     */\n    public addFrom(\n        id: string,\n        data: HashMap,\n        type: 'class' | 'service' | 'other' = 'other'\n    ): string {\n        const new_item = this.process(data);\n        this.set('list', this.updateList(this.get('list'), [new_item]));\n        return (new_item as any).id;\n    }\n\n    /**\n     * Remove items with the given IDs from the list\n     * @param id ID of the item/or service remove the list of items\n     * @param remove_ids List of item IDs to remove\n     * @param type Remover type\n     */\n    public removeFrom(\n        id: string,\n        remove_ids: string[],\n        type: 'class' | 'service' | 'other' = 'other'\n    ) {}\n\n    /**\n     * Load initial data for the service\n     */\n    protected async load(): Promise<void> {}\n\n    /**\n     * Post analytics event for this service\n     * @param action Name of the action to post\n     */\n    protected analyticsEvent(action: string, label?: string) {\n        // if (this.parent && this.parent.Analytics) {\n        //     this.parent.Analytics.track(this._name, { desc: `${this.parent.name.toLowerCase()}-${action}`, label });\n        // }\n    }\n\n    /**\n     * Convert raw API data into a valid API Object\n     * @param raw_item Raw API data\n     */\n    protected process(raw_item: HashMap): T {\n        return raw_item as T;\n    }\n\n    /**\n     * Update recorded list of items\n     * @param old_list Old list of items\n     * @param list List of updated items\n     * @param compareFn Function to compare items to remove duplicates\n     */\n    public updateList(\n        old_list: T[],\n        list: T[],\n        compareFn: (a: T, b: T) => boolean = this._compare\n    ): T[] {\n        /* istanbul ignore else */\n        if (!list || list.length === 0) {\n            return old_list;\n        }\n        const new_list: T[] = [];\n        const mixed_list = [...list, ...old_list];\n        /* istanbul ignore else */\n        if (!compareFn) {\n            compareFn = this._compare;\n        }\n        for (const item of mixed_list) {\n            const found = new_list.find((i) => compareFn(i, item));\n            /* istanbul ignore else */\n            if (!found) {\n                new_list.push(item);\n            }\n        }\n        return new_list;\n    }\n\n    /**\n     * Remove the given item from the given list\n     * @param list List of items\n     * @param item Item to remove\n     * @param compareFn Function to compare items\n     */\n    protected removeItem(list: T[], item: T, compareFn?: (a: T, b: T) => boolean) {\n        const new_list = [];\n        /* istanbul ignore else */\n        if (!compareFn) {\n            compareFn = this._compare;\n        }\n        list.forEach((i) => (compareFn(item, i) ? null : new_list.push(i)));\n        return new_list;\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\n\nimport { BookingNote, BookingMutableFields, BookingRecurrenceDetails } from './booking.interfaces';\nimport { CateringOrder } from '../catering/catering-order.class';\nimport { User } from '../users/user.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\nimport { humaniseDuration, unique, flatten } from '../../../shared/utilities/general.utilities';\nimport { Space } from '../spaces/space.class';\nimport { ServiceManager } from '../service-manager.class';\n\nimport * as dayjs from 'dayjs';\n\nexport class Booking extends BaseDataClass {\n    /** Unique calendar event ID */\n    public readonly icaluid: string;\n    /** Subject or title of the booking */\n    public readonly title: string;\n    /** Unix timestamp of the booking start */\n    public readonly date: number;\n    /** Length of the booking in minutes */\n    public readonly duration: number;\n    /** Description or details of the booking */\n    public readonly body: string;\n    /** Type of booking */\n    public readonly type: string;\n    /** Whether the booking has catering associated with it */\n    public readonly has_catering: boolean;\n    /** List of catering orders for the booking */\n    public readonly catering: readonly CateringOrder[];\n    /** String location set in booking */\n    public readonly _location: string;\n    /** Whether booking's duration covers all day */\n    public readonly all_day: boolean;\n    /** Details of the recurrence */\n    public readonly recurrence: BookingRecurrenceDetails;\n    /** Mapping of emails to approval statuses */\n    public readonly approval_status: HashMap<string>;\n    /** Host/Organiser of the booking */\n    public readonly organiser: User;\n    /** List of people invited to attend the booking */\n    public readonly attendees: User[];\n    /** Author of the booking */\n    public readonly creator: User;\n    /** List of notes associated with the booking */\n    public readonly notes: readonly BookingNote[];\n    /** Mapping of spaces to equipment charge codes */\n    public readonly equipment_codes: HashMap<string>;\n    /** Mapping of spaces to expected number of attendees */\n    public readonly expected_attendees: HashMap<number>;\n    /** Setup time before the meeting in minutes */\n    public readonly setup: number;\n    /** List of checked in attendees */\n    public readonly checked_in: string[];\n    /** Breakdown time after booking in minutes */\n    public readonly breakdown: number;\n    /** List of fields edited since creation */\n    public readonly edits: string[];\n    /** List of spaces associated with the booking */\n    public readonly space_list: Space[];\n    /** List of users to be notified on visitor arrivals */\n    public readonly notify_users: readonly string[];\n    /** Map of display strings */\n    private _display: HashMap<string> = {};\n    /** Service for managing Bookings */\n    protected get _service() {\n        return ServiceManager.serviceFor(Booking);\n    }\n\n    constructor(raw_data: HashMap) {\n        super(raw_data);\n        this.icaluid = raw_data.icaluid || this.id || '';\n        this.title = raw_data.title || raw_data.subject || raw_data.Subject || '';\n        const start = dayjs(\n            raw_data.date || raw_data.start_epoch * 1000 || raw_data.start * 1000 || raw_data.Start\n        );\n        this.date = start.valueOf();\n        this.duration =\n            raw_data.duration ||\n            dayjs(raw_data.end_epoch * 1000 || raw_data.end * 1000  || raw_data.End).diff(start, 'm') || 60;\n        this.body =\n            // (raw_data.body instanceof Object ? raw_data.body.content : raw_data.body) ||\n            raw_data.description ||\n            '';\n        this.type =\n            raw_data.booking_type ||\n            raw_data.type ||\n            (raw_data.visitors ? 'external' : null) ||\n            'internal';\n        this.has_catering = !!raw_data.has_catering;\n        this.attendees = (raw_data.attendees || raw_data._attendees || []).map((i) => new User(i));\n        this.organiser = (raw_data.organiser ? new User(raw_data.organiser) : User.active_user) || new User();\n        this.creator = raw_data.creator ? new User(raw_data.creator) : this.organiser;\n        this._location = raw_data.location_name || raw_data.location || '';\n        this.all_day = raw_data.all_day || this.duration > 23 * 60;\n        this.setup = raw_data.setup || 0;\n        this.breakdown = raw_data.breakdown || 0;\n        this.recurrence = raw_data.recurrence || raw_data.recurr || {};\n        if (this.recurrence.end && this.recurrence.end < new Date().getTime()) {\n            (this as any).recurrence = {\n                ...this.recurrence,\n                start: this.recurrence.start * 1000,\n                end: this.recurrence.end * 1000,\n            };\n        }\n        this.notes = raw_data.notes || [];\n        this.equipment_codes = raw_data.equipment_codes || raw_data.equipment_code || {};\n        this.expected_attendees = raw_data.expected_attendees || {};\n        this.approval_status = raw_data.approval_status || raw_data.status || {};\n        this.checked_in = raw_data.checked_in || raw_data.checkins || [];\n        this.notify_users = raw_data.notify_users || [];\n        if (raw_data.description && !this.notes.find((i) => i.type === 'description')) {\n            this.notes = [\n                ...this.notes,\n                {\n                    type: 'description',\n                    date: -1,\n                    message: raw_data.description,\n                    author: this.organiser.email,\n                },\n            ];\n        }\n        this._display = {\n            date: start.format('DD MMM YYYY'),\n            time: `${start.format('h:mma')} - ${dayjs(start)\n                .add(this.duration, 'm')\n                .format('h:mma')}`,\n            start: start.format('h:mma'),\n            end: dayjs(start).add(this.duration, 'm').format('h:mma'),\n            duration: humaniseDuration(this.duration),\n        };\n        const space_ids = unique(\n            raw_data.room_ids || raw_data.room_id || raw_data._space_list || []\n        );\n        const space_service = ServiceManager.serviceFor(Space);\n        if (space_service) {\n            this.space_list = space_ids.map(id => {\n                return space_service.find(id) || new Space({ id, name: id, email: id })\n            });\n        } else {\n            this.space_list = space_ids.map(id => new Space({ id, name: id, email: id }));\n        }\n        if (raw_data.show_as && raw_data.show_as === 'cancelled') {\n            this.space_list.forEach((space) => (this.approval_status[space.email] = 'declined'));\n        }\n        this.catering = (raw_data.catering instanceof Array ? raw_data.catering : []).map(\n            (i) => new CateringOrder(i)\n        );\n        this.edits =\n            raw_data.edits instanceof Array\n                ? raw_data.edits\n                : unique(flatten(Object.keys(raw_data.edits || {}).map((i) => raw_data.edits[i])));\n    }\n\n    /** Whether booking has been declined */\n    public get declined(): boolean {\n        for (const space of this.space_list) {\n            if ((this.approval_status[space.email] || '').indexOf('decline') >= 0) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /** Whether booking has been approved */\n    public get approved(): boolean {\n        for (const space of this.space_list) {\n            if (\n                this.approval_status[space.email] &&\n                (this.approval_status[space.email].indexOf('tentative') >= 0 ||\n                    this.approval_status[space.email].indexOf('decline') >= 0)\n            ) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /** Whether booking is tentative */\n    public get tentative(): boolean {\n        for (const space of this.space_list) {\n            if (\n                this.approval_status[space.email] &&\n                this.approval_status[space.email].indexOf('tentative') >= 0\n            ) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /** Whether booking contains external visitors in the attendee list */\n    public get has_visitors(): boolean {\n        return this.attendees.reduce((a, v) => a || v.external, false);\n    }\n\n    /** Status of the booking */\n    public get status(): 'future' | 'upcoming' | 'done' | 'started' | 'in_progress' {\n        const now = dayjs();\n        const date = dayjs(this.date);\n        if (now.isBefore(date.subtract(15, 'm'), 'm')) {\n            return 'future';\n        } else if (now.isBefore(date, 'm')) {\n            return 'upcoming';\n        } else if (now.isBefore(date.add(15, 'm'), 'm')) {\n            return 'started';\n        } else if (now.isBefore(date.add(this.duration, 'm'), 'm')) {\n            return 'in_progress';\n        }\n        return 'done';\n    }\n\n    /** Description of the booking purpose */\n    public get description(): string {\n        const note = (this.notes || []).find((i) => i.type === 'description');\n        return note ? note.message : '';\n    }\n\n    /** Get the first space from the space list */\n    public get space(): Space {\n        return this.space_list[0] || { level: { name: '<No Location>' } } as any;\n    }\n\n    /** Display value for the date */\n    public get date_string(): string {\n        return this._display.date;\n    }\n    /** Display valuie for the start and end times of the booking */\n    public get time_period(): string {\n        return this._display.time;\n    }\n    /** Display value for the start time of the booking */\n    public get start_time(): string {\n        return this._display.start;\n    }\n    /** Display value for the end time of the booking */\n    public get end_time(): string {\n        return this._display.end;\n    }\n    /** Display value for the duration of the booking */\n    public get length_string(): string {\n        return this._display.duration;\n    }\n    /** Display value for the location of the booking */\n    public get location(): string {\n        return this.space_list.map(space => space.name).join(', ') || this._location || 'No location set';\n    }\n    /** Display value for the level of the first space in the booking */\n    public get level(): string {\n        return this.space.level.name;\n    }\n\n    /**\n     * Store new value for given field\n     * @param key Name of the property\n     * @param value New value associated with the property\n     */\n    public storePendingChange(key: BookingMutableFields, value: Booking[BookingMutableFields]) {\n        return super.storePendingChange(key as any, value as any);\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): Booking {\n        return new Booking(this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): Booking {\n        return new Booking({\n            ...this.toJSON(),\n            id: null,\n            email: null,\n            icaluid: null,\n        });\n    }\n\n    /**\n     * Convert object into plain object\n     */\n    public toJSON(this: Booking, with_changes: boolean = true): HashMap {\n        const data = super.toJSON(with_changes);\n        const date = dayjs(data.date);\n        data.start = date.unix();\n        data.end = date.add(data.duration || 60, 'm').unix();\n        data.auto_approve = data.space_list\n            .map((space) => {\n                return !this.id || this.changes.date || this.changes.duration\n                    ? !space ||\n                          !space.byRequest({\n                              date: data.date,\n                              duration: data.duration,\n                              host: data.organiser,\n                          })\n                    : (this.approval_status[space.email] || '').indexOf('tentative') < 0;\n            });\n        if (data.body && !data.notes.find((note) => note.message === data.body)) {\n            data.notes.filter(note => note.type !== 'description').push({\n                type: 'description',\n                message: data.body,\n                author: this.creator.email,\n                date: dayjs().valueOf(),\n            } as BookingNote);\n            data.notes.sort((a, b) => b.date - a.date);\n        }\n        data.attendees = unique([data.organiser].concat(data.attendees), 'email');\n        data.notify_users = [data.organiser.email];\n        data.room_ids = data.space_list.map(space => space.email);\n        data.old_date = this.date;\n        if (data.id) {\n            data.from_room = this.space ? this.space.email : '';\n        }\n        data.description = data.body;\n        data.recurr = data.recurrence;\n        data.booking_type = data.type;\n        delete data.body;\n        delete data.type;\n        delete data.recurrence;\n        delete data.space_list;\n        delete data.date;\n        delete data.duration;\n        delete data.display;\n        delete data.email;\n        delete data.name;\n        return data;\n    }\n}\n","import { FormGroup, FormControl, Validators, AbstractControl } from '@angular/forms';\nimport { Subscription } from 'rxjs';\n\nimport {\n    padZero,\n    humaniseDuration,\n    timeFormatString,\n} from '../../../shared/utilities/general.utilities';\n\nimport { generateMockUser } from '../users/user.utilities';\nimport { Booking } from './booking.class';\nimport { User } from '../users/user.class';\nimport { Space } from '../spaces/space.class';\nimport { CateringOrder } from '../catering/catering-order.class';\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { AvailableBookingFields } from 'src/app/shared/utilities/settings.interfaces';\nimport { BookingRule, SpaceCheckOptions, SpaceRules, SpaceRuleOptions } from './booking.interfaces';\nimport { validateEndTime } from 'src/app/shared/utilities/validation.utilities';\n\nimport * as faker from 'faker';\nimport * as dayjs from 'dayjs';\n\nconst MINUTE = 1;\nconst HOUR = 60;\nconst DAY = 24 * HOUR;\nconst WEEK = 7 * DAY;\nconst MONTH = 30 * DAY;\n\nconst DURATION_MAP: { [duration: string]: number } = {\n    month: MONTH,\n    months: MONTH,\n    week: WEEK,\n    weeks: WEEK,\n    day: DAY,\n    days: DAY,\n    hour: HOUR,\n    hours: HOUR,\n    minute: MINUTE,\n    minutes: MINUTE,\n};\n\nlet BOOKING_COUNT = 0;\nlet BOOKING_DATE = dayjs().hour(6).minute(0).subtract(1, 'd').startOf('m');\n\n/**\n * Set the initial time used for generating mock bookings\n * @param time New initial time as ms from UTC epoch\n */\nexport function setMockBookingStartDatetime(time: number) {\n    BOOKING_DATE = dayjs(time).startOf('m');\n}\n\n/**\n * Create mock raw API data for a booking\n * @param override Overrides the properties of the generated booking with it's own\n */\nexport function generateMockBooking(override: HashMap = {}) {\n    const id = `booking-${BOOKING_COUNT++}`;\n    BOOKING_DATE = BOOKING_DATE.add(Math.floor(Math.random() * 4 + 2) * 15, 'm');\n    const start = BOOKING_DATE.valueOf();\n    const duration = Math.floor(Math.random() * 4 + 2) * 15;\n    BOOKING_DATE = BOOKING_DATE.add(Math.floor(Math.random() * 4) * 15, 'm');\n    return {\n        id,\n        icaluid: padZero(Math.floor(Math.random() * 99999999), 8),\n        title: `${faker.commerce.productName()} Meeting`,\n        attendees: Array(Math.floor(Math.random() * 5 + 2))\n            .fill(0)\n            .map((i) => generateMockUser()),\n        organiser: generateMockUser(),\n        start_epoch: dayjs(start).unix(),\n        end_epoch: dayjs(start).add(duration, 'm').unix(),\n        description: faker.lorem.paragraph(),\n        notes: [{ type: 'other', message: faker.lorem.paragraph() }],\n        location: faker.address.city(),\n        has_catering: Math.floor(Math.random() * 34567) % 3 === 0,\n        catering: [],\n        room_ids: [],\n        ...override,\n    };\n}\n\nexport interface IBookingSlot {\n    start: number;\n    end: number;\n}\n\n/**\n * Generate a list of free time slots between the given bookings\n * @param list List of bookings to find slots between\n * @param min_size Minimum length of a free slot in minutes\n */\nexport function getFreeBookingSlots(list: Booking[], min_size: number = 30): IBookingSlot[] {\n    /* istanbul ignore else */\n    if (!list) {\n        return [\n            {\n                start: 0,\n                end: dayjs().startOf('m').valueOf() * 10,\n            },\n        ];\n    }\n    const slots: IBookingSlot[] = [];\n    let start = dayjs(0);\n    list.sort((a, b) => a.date - b.date);\n    for (const booking of list) {\n        const bkn_start = dayjs(booking.date);\n        const bkn_end = bkn_start.add(booking.duration, 'm');\n        if (bkn_start.isAfter(start)) {\n            const diff = Math.abs(bkn_start.diff(start, 'm'));\n            /* istanbul ignore else */\n            if (diff >= min_size) {\n                slots.push({ start: start.valueOf(), end: bkn_start.valueOf() });\n            }\n            start = bkn_end;\n        } else if (start.startOf('m').valueOf() === bkn_start.startOf('m').valueOf()) {\n            start = bkn_end;\n        }\n    }\n    slots.push({\n        start: start.valueOf(),\n        end: dayjs().startOf('m').valueOf() * 10,\n    });\n    return slots;\n}\n\n/**\n * Get the next free time slot from the given bookings\n * @param list List of bookings to find the next slot\n * @param date Date to find next slot after in ms since UTC epoch\n * @param min_size Minimum length of the free slot in minutes\n */\nexport function getNextFreeBookingSlot(\n    list: Booking[],\n    date: number = dayjs().valueOf(),\n    min_size: number = 30\n): IBookingSlot {\n    const slots = getFreeBookingSlots(list, min_size);\n    const time = dayjs(date).startOf('m').second(1);\n    for (const block of slots) {\n        const start = dayjs(block.start).startOf('m');\n        const end = dayjs(block.end).startOf('m');\n        if (start.isAfter(time, 's')) {\n            return block;\n        } else if (time.isBefore(end, 's')) {\n            const duration = end.diff(time, 'm');\n            /* istanbul ignore else */\n            if (duration >= min_size) {\n                return block;\n            }\n        }\n    }\n    return slots[slots.length - 1];\n}\n\n/**\n * Generate form fields for the given booking\n * @param booking Booking to generate form for\n * @param current_user Current user of the system to default as the host\n */\nexport function generateBookingForm(\n    booking: Booking,\n    current_user: User,\n    use_fields: AvailableBookingFields[]\n): FormGroup {\n    if (!booking) {\n        throw Error('No booking passed');\n    }\n    if (!current_user) {\n        current_user = {} as any;\n    }\n    const fields: HashMap<FormControl> = {\n        id: new FormControl(booking.id || ''),\n        space_list: new FormControl(booking.space_list, []),\n        date: new FormControl(booking.date, [Validators.required]),\n        duration: new FormControl(booking.duration),\n        organiser: new FormControl(booking.organiser || current_user, [Validators.required]),\n        attendees: new FormControl(booking.attendees, []),\n        title: new FormControl(booking.title || '', [Validators.required]),\n        type: new FormControl(booking.type),\n        body: new FormControl(booking.body),\n        notes: new FormControl(booking.notes),\n        equipment_codes: new FormControl(booking.equipment_codes),\n        expected_attendees: new FormControl(booking.expected_attendees),\n        catering: new FormControl(\n            booking.catering.map(\n                (order) => new CateringOrder({ ...order, booking_date: booking.date })\n            )\n        ),\n        recurrence: new FormControl(booking.recurrence),\n        all_day: new FormControl(!!booking.all_day),\n        has_catering: new FormControl(!!booking.has_catering),\n        needs_space: new FormControl(true),\n    };\n    fields.duration.setValidators([Validators.required, validateEndTime(fields.date)]);\n    /* istanbul ignore else */\n    if (booking.id) {\n        fields.organiser.disable();\n        /* istanbul ignore else */\n        if (dayjs(booking.date).isBefore(dayjs(), 'm')) {\n            fields.date.disable();\n        }\n    } else {\n        fields.date.setValidators([Validators.required, isFuture]);\n    }\n    const simplified_fields = [\n        'id',\n        'space_list',\n        'space_ids',\n        'notes',\n        'equipment_codes',\n        'expected_attendees',\n        'organiser_email',\n        ...use_fields,\n    ].reduce((map, key) => {\n        /* istanbul ignore else */\n        if (fields[key]) {\n            map[key] = fields[key];\n        }\n        return map;\n    }, {});\n    // Generate form group for booking item\n    const form = new FormGroup(simplified_fields);\n    // Listen for changes on the fields and update booking\n    if (form && booking) {\n        let subs: HashMap<Subscription> = {};\n        Object.keys(form.controls).forEach((key: any) => {\n            if (booking.hasOwnProperty(key)) {\n                subs[`change_${key}`] = form.controls[key].valueChanges.subscribe((value) => {\n                    booking.storePendingChange(key, value);\n                });\n            }\n        });\n        subs.booking = booking.changeEvents.subscribe((event) => {\n            /* istanbul ignore else */\n            if (event.type === 'item_saved') {\n                for (const key in subs) {\n                    /* istanbul ignore else */\n                    if (subs[key] instanceof Subscription) {\n                        subs[key].unsubscribe();\n                    }\n                }\n            }\n        });\n    }\n    return form;\n}\n\n/**\n * Validate whether date is in the future\n * @param control Control to check value\n */\nexport function isFuture(control: AbstractControl) {\n    let now = dayjs().startOf('m');\n    now = now.minute(Math.floor(now.minute() / 5) * 5);\n    const date = dayjs(control.value);\n    return date.isBefore(now, 's') ? { date: 'Date needs to be in the future' } : null;\n}\n\n/**\n * Get booking rules for the given user and space\n * @param user User to determine applicable rules\n * @param space Space to get rules for\n * @param time Booking start time in ms since UTC epoch\n * @param rules List of booking rules for the building\n */\nexport function rulesForSpace(options: SpaceRuleOptions): SpaceRules {\n    if (!options) {\n        throw Error('Options are needed to check for rule matches');\n    }\n    const space_rules_for_user: SpaceRules = {\n        auto_approve: true,\n        hide: true,\n    };\n    /* istanbul ignore else */\n    if (options.space) {\n        for (const type in options.rules) {\n            if (\n                options.rules.hasOwnProperty(type) &&\n                options.rules[type] instanceof Array &&\n                options.space.zones.find((zone) => zone === type)\n            ) {\n                for (const rule_block of options.rules[type]) {\n                    /* istanbul ignore else */\n                    if (\n                        checkRules({\n                            user: options.user,\n                            space: options.space,\n                            time: options.time,\n                            recurr_end: options.recurr_end,\n                            duration: options.duration,\n                            rules: rule_block.conditions,\n                        })\n                    ) {\n                        const ruleset = rule_block.rules;\n                        const conditions = rule_block.conditions;\n                        space_rules_for_user.hide = false;\n                        /* istanbul ignore else */\n                        if (conditions.max_length) {\n                            space_rules_for_user.max_length = stringToMinutes(\n                                conditions.max_length as string\n                            );\n                        }\n                        /* istanbul ignore else */\n                        if (conditions.min_length) {\n                            space_rules_for_user.min_length = stringToMinutes(\n                                conditions.min_length as string\n                            );\n                        }\n                        // NOTE: use max_length in conditions instead of book_length in rules\n                        // if (ruleset.book_length) {\n                        //     space_rules_for_user.max_length = stringToMinutes(ruleset.book_length as string);\n                        // }\n                        /* istanbul ignore else */\n                        if (ruleset.auto_approve !== undefined) {\n                            space_rules_for_user.auto_approve = ruleset.auto_approve;\n                        }\n                        break;\n                    }\n                }\n            }\n            /* istanbul ignore else */\n            if (!space_rules_for_user.hide) {\n                break;\n            }\n        }\n    }\n    return space_rules_for_user;\n}\n\n/**\n * Check if user matches the given ruleset\n * @param user User to determine applicable rules\n * @param space Space to get rules for\n * @param time Booking start time in ms since UTC epoch\n * @param rules List of booking rules for the building\n */\nfunction checkRules(options: SpaceCheckOptions): boolean {\n    /* istanbul ignore else */\n    if (options.rules) {\n        const time = dayjs(options.time);\n        const recurr = options.recurr_end ? dayjs(options.recurr_end) : dayjs();\n        const count = Object.keys(options.rules).length;\n        let matches = 0;\n        for (const key of Object.keys(options.rules)) {\n            let counter = 0;\n            const condition: string[] =\n                options.rules[key] instanceof Array\n                    ? (options.rules[key] as [])\n                    : [options.rules[key] as string];\n            switch (key) {\n                case 'groups':\n                    /* istanbul ignore else */\n                    if (options.user && options.user.groups) {\n                        counter = 0;\n                        condition.forEach((i) =>\n                            options.user.groups.find((j) => j === i) ? counter++ : null\n                        );\n                        /* istanbul ignore else */\n                        if (counter > 0) {\n                            matches++;\n                        }\n                    }\n                    break;\n                case 'locations':\n                    /* istanbul ignore else */\n                    if (options.user && options.user.location) {\n                        counter = 0;\n                        condition.forEach((i) =>\n                            (options.user.last_location.name || '').indexOf(i) >= 0\n                                ? counter++\n                                : null\n                        );\n                        /* istanbul ignore else */\n                        if (counter >= options.rules[key].length) {\n                            matches++;\n                        }\n                    }\n                    break;\n                case 'is_before':\n                    /* istanbul ignore else */\n                    if (options.time) {\n                        const duration = stringToMinutes(condition[0]);\n                        const check = dayjs().add(duration, 'm');\n                        let match = time.isBefore(check, 'm');\n                        /* istanbul ignore else */\n                        if (recurr) {\n                            match = match && recurr.isBefore(check, 'm');\n                        }\n                        matches += match ? 1 : 0;\n                    }\n                    break;\n                case 'is_after':\n                    /* istanbul ignore else */\n                    if (options.time) {\n                        const duration = stringToMinutes(condition[0]);\n                        const check = dayjs().add(duration, 'm');\n                        time.isAfter(check, 'm') ? matches++ : '';\n                    }\n                    break;\n                case 'min_length':\n                    /* istanbul ignore else */\n                    if (options.duration) {\n                        durationGreaterThanOrEqual(options.duration, condition[0]) ? matches++ : '';\n                    }\n                    break;\n                case 'max_length':\n                    /* istanbul ignore else */\n                    if (options.duration) {\n                        durationGreaterThanOrEqual(condition[0], options.duration) ? matches++ : '';\n                    }\n                    break;\n            }\n        }\n        return matches >= count;\n    }\n    return false;\n}\n\n/**\n * Get minimum duration from ruleset in minutes\n * Default to 5min\n */\nexport function getMinLength(rule_list: HashMap<BookingRule[]>): number {\n    return Object.values(rule_list).reduce((min, block) => {\n        const min_block = block.reduce((min_length, el) => {\n            if (el.conditions.min_length && stringToMinutes(el.conditions.min_length) > min) {\n                return stringToMinutes(el.conditions.min_length);\n            } else {\n                return min_length;\n            }\n        }, 5);\n        if (min_block > min) {\n            return min_block;\n        } else {\n            return min;\n        }\n    }, 5) as number;\n}\n\n/**\n * Whether the first input is greater than the last. Converts duration strings into minutes\n * @param duration_1 First input can be a number in minutes or a duration string e.g. `1 hour`\n * @param duration_2 Second input can be a number in minutes or a duration string e.g. `30 minutes`\n */\nexport function durationGreaterThanOrEqual(\n    duration_1: string | number,\n    duration_2: string | number\n) {\n    const first: number = typeof duration_1 === 'string' ? stringToMinutes(duration_1) : duration_1;\n    const second: number =\n        typeof duration_2 === 'string' ? stringToMinutes(duration_2) : duration_2;\n    return first >= second;\n}\n\n/**\n * Conver time string into minutes\n * @param str timestring e.g. `'1 day'`, `'15 minutes'`, `'2 weeks'`\n */\nexport function stringToMinutes(str: string): number {\n    const parts = str.split(' ');\n    return +parts[0] * DURATION_MAP[parts[1]];\n}\n\n/**\n * Get current status within bookings\n * @param bookings List of bookings\n * @param host Host of the new event\n * @param date Datetime of the new event\n */\nexport function statusFromBookings(\n    bookings: Booking[],\n    bookable: boolean,\n    requestable: boolean,\n    date: number = dayjs().valueOf()\n) {\n    const free_slots = getFreeBookingSlots(bookings);\n    const now = dayjs(date);\n    const next_free_slot = free_slots.find((slot) => {\n        const start = dayjs(slot.start);\n        const end = dayjs(slot.end);\n        return start.isAfter(now) || (now.isAfter(start, 's') && now.isBefore(end, 'm'));\n    });\n    const start = dayjs(next_free_slot.start);\n    const end = dayjs(next_free_slot.end);\n    const currently_free = now.isAfter(start, 's') && now.isBefore(end, 'm');\n    const time_until_next_block = humaniseDuration(\n        currently_free ? end.diff(now, 'm') : start.diff(now, 'm'),\n        true\n    );\n    const free_tomorrow = !currently_free && !start.isSame(now, 'd');\n    const free_today = currently_free && !end.isSame(now, 'd');\n    return {\n        status: !bookable\n            ? 'Not Bookable'\n            : currently_free\n            ? requestable\n                ? 'Available by Request'\n                : 'Available'\n            : 'Meeting in Progress',\n        available_until: free_today\n            ? 'No meetings today'\n            : currently_free\n            ? `Free until ${end.format(timeFormatString())}(${time_until_next_block})`\n            : free_tomorrow\n            ? 'Unavailable today'\n            : `Free at ${start.format(timeFormatString())}(${time_until_next_block})`,\n    };\n}\n","\nimport { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\n\nimport { BaseAPIService } from '../base.service';\nimport { Booking } from './booking.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\nimport { ServiceManager } from '../service-manager.class';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class BookingsService extends BaseAPIService<Booking> {\n    constructor(protected _composer: ComposerService) {\n        super(_composer);\n        ServiceManager.setService(Booking, this);\n        this._name = 'Bookings';\n        this._api_route = 'bookings';\n        this._compare = (a, b) => !(a.id || '').localeCompare(b.id) || !(a.icaluid || '').localeCompare(b.icaluid);\n    }\n\n    public accept(id: string, fields?: HashMap) {\n        return this.task(id, 'accept', fields);\n    }\n\n    public decline(id: string, fields?: HashMap) {\n        return this.task(id, 'concierge_decline', fields);\n    }\n\n    protected process(raw_data: HashMap): Booking {\n        return new Booking(raw_data);\n    }\n}\n","import { CateringItem } from \"./catering-item.class\";\nimport { HashMap } from \"../../../shared/utilities/types.utilities\";\n\nexport class CateringCategory extends CateringItem {\n    /** List of items associated with the category */\n    public readonly items: readonly CateringItem[];\n    /** Whether child items are part of a package */\n    public readonly package: boolean;\n    /** List of zone ids associated with the category */\n    public readonly zones: readonly string[];\n\n    public get can_order_anytime(): boolean {\n        return (\n            this.order_anytime ||\n            this.items.reduce(\n                (anytime, item) => anytime || item.can_order_anytime,\n                false\n            )\n        );\n    }\n\n    constructor(data: HashMap) {\n        super(data);\n        this.items = (data.items || []).map(item =>\n            item.items ? new CateringCategory(item) : new CateringItem(item)\n        );\n        this.package = data.package === 'true' || data.package === true;\n        this.zones = data.zones && data.zones.length ? [ ...data.zones ] : [];\n        (this as any).must_select = this.must_select || this.items.length;\n        (this as any).order_anytime = !!data.order_anytime && this.package;\n    }\n\n    /**\n     * Convert class object into plain object\n     */\n    public toJSON(this: CateringItem): HashMap {\n        const obj = super.toJSON();\n        obj.items = obj.items.map((item: CateringItem) => item.toJSON());\n        obj.order_anytime = !!obj.order_anytime && obj.package;\n        return obj;\n    }\n}\n","import { HashMap } from \"../../../shared/utilities/types.utilities\";\n\nexport interface CateringAvailability {\n    /** Month of the year that the item starts being available */\n    readonly from_month: number;\n    /** Month of the year that the item ends being available */\n    readonly to_month: number;\n}\n\nexport class CateringItem {\n    /** Unique ID of the catering item */\n    public readonly id: string;\n    /** Display name of the catering item */\n    public readonly name: string;\n    /** Description of the item */\n    public readonly description: string;\n    /** URL to the image associated with the item */\n    public readonly image_path: string;\n    /** Type of catering item */\n    public readonly catering_type: string;\n    /** Availability of the item */\n    public readonly available: CateringAvailability;\n    /** Time in hours that is needed to prepare the item beforehand */\n    public readonly prior_notice: number;\n    /** Cost of the item without decimals */\n    public readonly unit_price: number;\n    /** Cost of the item without decimals */\n    public readonly supplier_cost: number;\n    /** Minimum number this item allowed in an order */\n    public readonly minimum_quantity: number;\n    /** Maximum number this item allowed in an order */\n    public readonly maximum_quantity: number;\n    /** List of categories that the item is contained in */\n    public readonly parent_categories: readonly string[];\n    /** Allegen information associated with the item */\n    public readonly allergy: string;\n    /** Whether the supply of this item has run out */\n    public readonly out_of_stock: boolean;\n    /** Whether item can be ordered within the time limit set by the building */\n    public readonly order_anytime: boolean;\n    /** Number of child items that must be selected as part of the package */\n    public readonly must_select: number;\n    /** Number of this item in the assoicated order */\n    private _amount = 0;\n    /** Unique ID of the catering item */\n    private instance_id: string;\n\n\n    public get can_order_anytime(): boolean {\n        return this.order_anytime;\n    }\n\n    /** Number of this item in the assoicated order */\n    public get amount(): number {\n        return this._amount || 0;\n    }\n\n    /** Total cost of the amount of items set */\n    public get total(): number {\n        return (this._amount * this.unit_price) || 0;\n    }\n\n    constructor(data: HashMap) {\n        this.instance_id = `item-${Math.floor(Math.random() * 999_999_999)}`\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.available = {\n            from_month: (data.available ? data.available.from_month : data.available_from) || -1,\n            to_month: (data.available ? data.available.to_month : data.available_to) || -1,\n        };\n        this.description = data.description || '';\n        this.prior_notice = data.prior_notice || data.notice;\n        this.unit_price = data.unit_price || data.price || 0;\n        this.supplier_cost = data.supplier_cost;\n        this.minimum_quantity = Math.max(0, data.minimum_quantity || 0);\n        this.maximum_quantity = Math.max(1, data.maximum_quantity || 999);\n        this.parent_categories = data.category_ids || data.parent_categories || data.categories;\n        this.order_anytime = !!data.order_anytime;\n        this.image_path = data.image_path || '';\n        this.catering_type = data.catering_type;\n        this.must_select = data.must_select || 0;\n        this.out_of_stock = !!data.out_of_stock || data.hide;\n        this._amount = data._amount || data.amount || 0;\n        this.allergy = data.allergy;\n    }\n\n    public setAmount(amount: number = 0): void {\n        if (amount <= this._amount) {\n            if (amount < this.minimum_quantity) {\n                amount = 0;\n            }\n        } else {\n            if (amount < this.minimum_quantity) {\n                amount = this.minimum_quantity;\n            }\n        }\n        this._amount = Math.max(0, Math.min(this.maximum_quantity, amount));\n    }\n\n    /**\n     * Increase amount of the item the order\n     * @param amount Amount to increase by\n     */\n    public addToOrder(amount: number = 1) {\n        amount = Math.max(1, amount);\n        this._amount += amount;\n        if (this._amount < 0) {\n            this._amount = 0;\n        } else if (this._amount < this.minimum_quantity) {\n            this._amount = this.minimum_quantity;\n        } else if (this._amount > this.maximum_quantity) {\n            this._amount = this.maximum_quantity;\n        }\n    }\n\n    /**\n     * Decrease amount of the item the order\n     * @param amount Amount to decrease by\n     */\n    public removeFromOrder(amount: number = 1) {\n        amount = Math.max(1, amount);\n        this._amount -= amount;\n        if (this._amount < 0) {\n            this._amount = 0;\n        } else if (this._amount < this.minimum_quantity) {\n            this._amount = 0;\n        }\n    }\n\n    /**\n     * Convert class object into plain object\n     */\n    public toJSON(this: CateringItem): HashMap {\n        const obj: any = { ...this };\n        // Remove local private members\n        delete obj._changes;\n        delete obj._server_names;\n        // Convert remaining members to be public\n        obj.price = obj.unit_price;\n        obj.hide = obj.out_of_stock;\n        obj.categories = obj.parent_categories;\n        const keys = Object.keys(obj);\n        for (const key of keys) {\n            if (key[0] === '_') {\n                const new_key = key.substr(1);\n                obj[new_key] = obj[key];\n                delete obj[key];\n            } else if (obj[key] === undefined) {\n                delete obj[key];\n            }\n        }\n        return obj;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringCategory } from './catering-category.class';\nimport { BaseAPIService } from '../base.service';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CateringMenuService extends BaseAPIService<CateringItem | CateringCategory> {\n    constructor(protected _composer: ComposerService) {\n        super(_composer);\n        this._name = 'Catering Menu';\n        this._api_route = 'menu';\n    }\n\n    /**\n     * Convert user data to local format\n     * @param user User data\n     */\n    protected processItem(item: HashMap) {\n        return item.items ? new CateringCategory(item) : new CateringItem(item);\n    }\n}\n","import { CateringItem } from './catering-item.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\n\nimport { CateringCategory } from './catering-category.class';\nimport { Booking } from '../bookings/booking.class';\n\nimport * as dayjs from 'dayjs';\n\nexport type CateringOrderMutableProperties =\n    | 'items'\n    | 'location_id'\n    | 'location'\n    | 'delivery_time'\n    | 'charge_code'\n    | 'notes'\n    | 'status';\n\nexport type CateringOrderStatus = 'accepted' | 'preparing' | 'ready' | 'delivered' | 'cancelled';\n\nexport class CateringOrder {\n    /** Booking associated with the order */\n    public booking: Booking;\n    /** Whether the order status change is loading */\n    public loading: boolean;\n    /** Unique ID for the catering order */\n    readonly id: string;\n    /** Unique ID for the catering order */\n    readonly booking_id: string;\n    /** Number of minutes after the start of the associated meeting to delivery the order */\n    readonly booking_date: number = dayjs()\n        .startOf('m')\n        .valueOf();\n    /** Number of minutes after the start of the associated meeting to delivery the order */\n    readonly delivery_time: number = 0;\n    /** ID of the location to deliver the items to */\n    readonly location_id: string = '';\n    /** Display text for the location to deliver the items to */\n    readonly location: string = '';\n    /** Status of the catering order */\n    readonly status: CateringOrderStatus;\n    /** Whether items in the order need to be prepared in the kitchen */\n    readonly kitchen: boolean;\n    /** Whether items in the order are in the pantry */\n    readonly pantry: boolean;\n    /** List of items */\n    readonly items: readonly (CateringItem | CateringCategory)[] = [];\n    /** Creation time of the order */\n    readonly created_at: number;\n    /** Charge code associated with the order */\n    readonly charge_code: string;\n    /** Notes associated with the order */\n    readonly notes: string;\n    /** Mapping of properties to their changes */\n    private _changes: HashMap = {};\n    /** Map of local property names to server ones */\n    protected _server_names: HashMap<string> = {};\n    /** Currency code for the location of the order */\n    public symbol: string;\n    /** Whether the is an error with the order */\n    public error: boolean;\n\n    constructor(data: HashMap) {\n        this.id = data.id || `order-${Math.floor(Math.random() * 999_999_999)}`;\n        this.booking = data.booking;\n        this.delivery_time = data.delivery_time || data.start || 0;\n        this.booking_date = data.booking_date;\n        this.location_id = data.location_id || data.location;\n        this.location = data.location || '';\n        this.status = data.status || 'accepted';\n        this.charge_code = data.charge_code || data.code;\n        this.notes = data.notes;\n        this.kitchen = data.kitchen instanceof Array ? !!data.kitchen.length : data.kitchen;\n        this.pantry = data.pantry instanceof Array ? !!data.pantry.length : data.pantry;\n        this.symbol = data.symbol || 'USD';\n        this.items = (data.items || [])\n            .map(item => (item.items ? new CateringCategory(item) : new CateringItem(item)))\n            .filter(item => !!item.amount);\n    }\n\n    /** Mapping of properties to their changes */\n    public get changes(): HashMap<any> {\n        return { ...this._changes } || {};\n    }\n\n    /** Display string for the types of items in the order */\n    public get type(): string {\n        let type = '';\n        /* istanbul ignore else */\n        if (this.kitchen) type += 'Kitchen';\n        /* istanbul ignore else */\n        if (this.pantry) {\n            /* istanbul ignore else */\n            if (type) type += ' + ';\n            type += 'Pantry';\n        }\n        return type;\n    }\n\n    /** Total cost of the order */\n    public get total(): number {\n        return this.items.reduce((total, item) => total + (item.total || 0), 0);\n    }\n\n    /** Total number of items in the order */\n    public get item_count(): number {\n        return this.items.reduce((total, item) => total + (item.amount || 0), 0);\n    }\n\n    /** Display string for the delivery time of the order */\n    public get deliver_at_time(): string {\n        const date = this.booking ? this.booking.date : this.booking_date;\n        return dayjs(date)\n            .add(this.delivery_time, 'm')\n            .format('h:mm A');\n    }\n\n    /** Display string for the delivery date of the order */\n    public get deliver_on_date(): string {\n        const date = this.booking ? this.booking.date : this.booking_date;\n        return dayjs(date)\n            .add(this.delivery_time, 'm')\n            .format('DD MMM YYYY');\n    }\n\n    /** Whether there are any pending changes to be saved */\n    public get has_changes(): boolean {\n        return !!Object.keys(this._changes).length;\n    }\n\n    /**\n     * Store pending changes for the given property\n     * @param name Property to update value\n     * @param value New value to save for property\n     */\n    public storePendingChanges(name: CateringOrderMutableProperties, value: any): void {\n        this._changes[name] = value;\n    }\n\n    /** Clear any changes waiting to be saved */\n    public clearPendingChanges() {\n        delete this._changes;\n        this._changes = {};\n    }\n\n    /**\n     * Convert class object into plain object\n     */\n    public toJSON(this: CateringOrder, with_changes: boolean = true): HashMap {\n        const obj: any = { ...this };\n        // Remove local private members\n        delete obj._changes;\n        delete obj._server_names;\n        // Remove local public members\n        delete obj.booking;\n        delete obj.loading;\n\n        // Convert remaining members to be public\n        const keys = Object.keys(obj);\n        for (const key of keys) {\n            if (key[0] === '_') {\n                const new_key = this._server_names[key.substr(1)] || key.substr(1);\n                obj[new_key] = obj[key];\n                delete obj[key];\n            } else if (obj[key] === undefined) {\n                delete obj[key];\n            }\n        }\n        obj.items = obj.items.map((item: CateringItem) => item.toJSON());\n        return with_changes ? { ...obj, ...this._changes } : obj;\n    }\n}\n","import { HashMap } from 'src/app/shared/utilities/types.utilities';\n\nimport { BuildingLevel } from '../organisation/level.class';\nimport { Organisation } from '../organisation/organisation.class';\nimport { ServiceManager } from '../service-manager.class';\n\nexport class MapLocation {\n    /** ID of the element on the associated map */\n    public readonly id?: string;\n    /** Name of the location */\n    public readonly name?: string;\n    /** X coordinate of the location */\n    public readonly x?: number;\n    /** Y coordinate of the location */\n    public readonly y?: number;\n    /** Level details for the location */\n    public readonly level: BuildingLevel;\n    /** Whether the position is fixed */\n    public readonly fixed: boolean;\n    /** Accuracy of the location when not fixed */\n    public readonly confidence?: number;\n    /** Whether location is at a desk */\n    public readonly at_desk?: boolean;\n    /** Whether location is set */\n    public readonly empty: boolean;\n    /** Service for managing buildings */\n    protected get _service() {\n        return ServiceManager.serviceFor(MapLocation);\n    }\n\n    /** Display string for the building and level of the location */\n    public get display(): string {\n        const service = ServiceManager.serviceFor(Organisation);\n        if (!service) {\n            return this.level.name;\n        }\n        const bld = service.buildings.find((bld) => bld.id === this.level.building_id);\n        return bld ? `${bld.name}, ${this.level.name}` : this.level.name;\n    }\n\n    /** Whether location is in a different building from the active one */\n    public get in_another_building(): boolean {\n        const service = ServiceManager.serviceFor(Organisation);\n        return service && service.building.id !== this.level.building_id;\n    }\n\n    constructor(raw_data: HashMap) {\n        this.id = raw_data.id || raw_data.map_id || raw_data.desk_id;\n        this.name = raw_data.name || '';\n        this.x = raw_data.x\n            ? Math.floor(this.normalise(raw_data.x, raw_data.x_max || 10000) * 10000)\n            : null;\n        this.y = raw_data.y\n            ? Math.floor(this.normalise(raw_data.y, raw_data.x_max || 10000) * 10000)\n            : null;\n        const service = ServiceManager.serviceFor(Organisation);\n        this.level =\n            raw_data.level instanceof BuildingLevel\n                ? raw_data.level\n                : service\n                ? service.levelWithID(raw_data.level)\n                : new BuildingLevel(raw_data.level);\n        this.fixed = this.x === null && this.y === null;\n        this.confidence = Math.max(5, Math.min(15, raw_data.confidence || 0));\n        this.at_desk = this.id && this.id.indexOf('area-') === 0;\n        this.empty = !(this.name && this.level && (this.id || this.x || this.y));\n    }\n\n    /** Normalise the given value within the max */\n    private normalise(value: number, max: number): number {\n        return value / (max * 1.0);\n    }\n}\n","import { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { randomInt } from 'src/app/shared/utilities/general.utilities';\n\nexport function generateMockLocation(overrides: HashMap, fixed_locations: string[], maps: string[]): HashMap {\n    const fixed = randomInt(999_999_999) % 2 === 0;\n    if (fixed && (!overrides || overrides.fixed)) {\n        return {\n            map_id: fixed_locations[randomInt(fixed_locations.length)],\n            level: maps[randomInt(maps.length)],\n            ...overrides\n        }\n    } else {\n        return {\n            x: randomInt(900, 100),\n            x_max: 1000,\n            y: randomInt(500, 100),\n            level: maps[randomInt(maps.length)],\n            confidence: randomInt(30),\n            ...overrides\n        }\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport { HashMap, Identity } from '../../../shared/utilities/types.utilities';\nimport { getItemWithKeys } from '../../../shared/utilities/general.utilities';\nimport { BuildingLevel } from './level.class';\nimport { BookingRule } from '../bookings/booking.interfaces';\nimport { ServiceManager } from '../service-manager.class';\n\nexport interface IBuildingRoleUser {\n    name: string;\n    email: string;\n    phone: string;\n}\n\nexport interface LockerMap {\n    [zone: string]: {\n        [area: string]: {\n            [type: string]: (string | boolean)[][];\n        };\n    };\n}\n\nexport interface ICoordinates {\n    longitude: number;\n    latitude: number;\n}\n\nexport interface LevelFeature {\n    id: string;\n    level_id: string;\n    name: string;\n}\n\nexport interface BookingRuleDetails {\n    /** List of booking rules details for the building */\n    readonly rules: readonly string[];\n    /** Custom booking rules for the map */\n    readonly map_rules?: readonly string[];\n    /** Contact email address for the building */\n    readonly contact?: string;\n    /** Information string to display before the rule listings */\n    readonly info?: string;\n}\n\nexport class Building extends BaseDataClass {\n    /** Service for managing buildings */\n    protected get _service() {\n        return ServiceManager.serviceFor(Building);\n    }\n    /** Engine Zone ID for the building */\n    public readonly zone_id: string;\n    /** Organisation Code for the building */\n    public readonly code: string;\n    /** Geographical address of the building */\n    public readonly address: string;\n    /** Details about the booking rules for the building */\n    public readonly booking_details: BookingRuleDetails;\n    /** Details about the booking rules for the building */\n    public readonly booking_rules: HashMap<readonly BookingRule[]>;\n    /** Number of hour before a booking catering is restricted */\n    public readonly catering_restricted_from: number;\n    /** Currency code for the country assoicated with the building */\n    public readonly currency: string;\n    /** Map of fields that are required on the form */\n    public readonly required: HashMap<boolean>;\n    /** IANA timezone database string for the location the building resides  */\n    public readonly timezone: string;\n    /** Whether catering is available in this building */\n    public readonly has_catering: boolean;\n    /** ID of the system used for the holding bay */\n    public readonly holding_bay: string;\n    /** ID of the system used for standalone visitors bookings */\n    public readonly visitor_space: string;\n    /** List of zones to determine sort order spaces */\n    public readonly sort_order: string[];\n    /** Searchable map features */\n    public readonly searchables: readonly LevelFeature[];\n    /** List of available extras for the building */\n    private _extras: Identity[];\n    /** List of available extra equipment for loan at the building */\n    private _loan_items: Identity[];\n    /** List of available levels for the building */\n    private _levels: BuildingLevel[];\n    /** Map of custom settings for the building */\n    private _settings: HashMap;\n    /** Map of roles and list of the associated users */\n    private _roles: HashMap<IBuildingRoleUser[]>;\n    /** Map of the locker ID arrays */\n    private _lockers: LockerMap;\n    /** Map of important system ids for the building */\n    private _systems: HashMap<string>;\n    /** Map of important phone numbers for the building */\n    private _phone_numbers: HashMap<string>;\n    /** Globe coordiates for the build */\n    private _location: ICoordinates;\n    /** List of zones associated with the building */\n    private _zones: string[];\n\n    constructor(raw_data: HashMap) {\n        super(raw_data);\n        const settings = raw_data.settings || {};\n        const disc_info = settings.discovery_info || settings;\n        this.zone_id = raw_data.zone_id || raw_data.zone;\n        this._extras = (raw_data.extras || disc_info.extras || []).map(i => ({ id: i.extra_id || i.id, name: i.extra_name || i.name }));\n        this._loan_items = (raw_data.loan_items || disc_info.loan_items  || []).map(i => ({ id: i.extra_id || i.id, name: i.extra_name || i.name }));\n        this._levels = (raw_data.levels || disc_info.levels  || []).map(i => new BuildingLevel({ ...i, building_id: this.id }));\n        this._roles = raw_data.roles || disc_info.roles || {};\n        this._lockers = raw_data.lockers || raw_data.locker_structure || disc_info.locker_structure || {};\n        this._systems = raw_data.systems || disc_info.systems || {};\n        this._settings = settings;\n        this._phone_numbers = raw_data.phone_numbers || disc_info.phone_numbers || {};\n        this._location = raw_data.location || disc_info.location || { longitude: null, latitude: null };\n        const searchables = [];\n        if (raw_data.neighbourhoods) {\n            for (const lvl in raw_data.neighbourhoods) {\n                if (raw_data.neighbourhoods.hasOwnProperty(lvl)) {\n                    const lvl_features = raw_data.neighbourhoods[lvl] || {};\n                    for (const feature in lvl_features) {\n                        if (lvl_features.hasOwnProperty(feature)) {\n                            searchables.push({\n                                id: lvl_features[feature],\n                                name: feature,\n                                level_id: lvl\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        this.searchables = searchables;\n        this.code = raw_data.code || disc_info.code || settings.code || '';\n        this.address = raw_data.address || disc_info.address || settings.address || '';\n        this.booking_details = raw_data.booking_details || disc_info.booking_details || settings.booking_details || null;\n        this.booking_rules = raw_data.booking_rules || disc_info.booking_rules || settings.booking_rules || {};\n        this.catering_restricted_from = raw_data.catering_restricted_from || disc_info.catering_restricted_from || settings.catering_restricted_from || 0;\n        this.currency = raw_data.currency || disc_info.currency || settings.currency || 'USD';\n        this.required = raw_data.required || disc_info.required || settings.required || {};\n        this.timezone = raw_data.timezone || disc_info.timezone || settings.timezone || '';\n        this.has_catering = raw_data.has_catering || disc_info.has_catering || settings.has_catering || false;\n        this.holding_bay = raw_data.holding_bay || disc_info.holding_bay || settings.holding_bay || '';\n        this.visitor_space = raw_data.visitor_space || disc_info.visitor_space || settings.visitor_space || '';\n        this.sort_order = raw_data.sort_order || disc_info.sort_order || settings.sort_order || [];\n    }\n\n    /** List of available extras for the building */\n    public get extras(): Identity[] {\n        return [...(this._extras || [])];\n    }\n    /** List of available extras for the building */\n    public get loan_items(): Identity[] {\n        return [...(this._loan_items || [])];\n    }\n    /** List of available levels for the building */\n    public get levels(): BuildingLevel[] {\n        return [...(this._levels || [])];\n    }\n    /**\n     * Get a custom building setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        const keys = key.split('.');\n        const value = getItemWithKeys(keys, this._settings);\n        return value;\n    }\n\n    /**\n     * Get list of users with the associated role\n     * @param name Role to find users for\n     */\n    public role(name: string): IBuildingRoleUser[] {\n        return [...(this._roles[name] || [])];\n    }\n    /**\n     * Get list of the names of available user role lists\n     */\n    public get role_names(): string[] {\n        return Object.keys(this._roles).filter(i => this._roles.hasOwnProperty(i));\n    }\n    /** Map of the locker ID arrays */\n    public get lockers(): LockerMap {\n        return { ...(this._lockers || {}) };\n    }\n    /** Map of important system ids for the building */\n    public get systems(): HashMap<string> {\n        return { ...(this._systems || {}) };\n    }\n    /** Map of important phone numbers for the building */\n    public get phone_numbers(): HashMap<string> {\n        return { ...(this._phone_numbers || {}) };\n    }\n    /** Real coordinates */\n    public get location(): ICoordinates {\n        return { ...this._location };\n    }\n    /** List of zones associated with the building */\n    public get zones(): string[] {\n        return [...(this._zones || [])];\n    }\n\n    /**\n     * Get search map feature for the given level ID\n     * @param level_id ID of level to grab features for\n     */\n    public featuresForLevel(level_id: string): LevelFeature[] {\n        return (this.searchables || []).filter(i => i.level_id === level_id);\n    }\n\n    /**\n     * Building objects are readonly and cannot be changed\n     */\n    public async save(): Promise<Building> {\n        throw new Error('Building objects are readonly and cannot be changed');\n    }\n\n    /**\n     * Building objects are readonly and cannot be deleted\n     */\n    public async delete(): Promise<void> {\n        throw new Error('Building objects are readonly and cannot be deleted');\n    }\n}\n","import { HashMap } from 'src/app/shared/utilities/types.utilities';\n\n/** Building Level data */\nexport class BuildingLevel {\n    /** ID of the building level zone */\n    readonly id: string;\n    /** ID of the building zone associated with the level */\n    readonly building_id: string;\n    /** Name of the level */\n    readonly name: string;\n    /** Number or short identifier of the level */\n    readonly short_name: string;\n    /** Map URL for the level */\n    readonly map_url: string;\n    /** Usage type for the level */\n    readonly type: 'staff' | 'client' | 'any';\n    /** Setting for the level */\n    readonly settings: HashMap;\n\n    constructor(_data: HashMap = {}) {\n        this.id = _data.id || _data.level_id || '';\n        this.building_id = _data.bld_id || _data.building_id || '';\n        this.name = _data.name || _data.level_name || '';\n        const lower_name = this.name.toLowerCase();\n        const num = lower_name.indexOf('level') >= 0 ? lower_name.replace(/ ?level ?/gi, '') : lower_name.substr(0, 1).toUpperCase();\n        this.short_name = _data.short_name || num || '';\n        this.map_url = _data.map_url || '';\n        this.type = _data.type || _data.floor_type || 'any';\n        this.settings = _data.settings;\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\nimport { getItemWithKeys } from '../../../shared/utilities/general.utilities';\nimport { BaseAPIService } from '../base.service';\nimport { ServiceManager } from '../service-manager.class';\nimport { OrganisationService } from './organisation.service';\n\nexport class Organisation extends BaseDataClass {\n    /** Service for managing organisations */\n    protected get _service() {\n        return ServiceManager.serviceFor(Organisation);\n    }\n    /** Map of custom settings for the building */\n    private _settings: HashMap;\n\n    constructor(raw_data: HashMap) {\n        super(raw_data);\n        this._settings = raw_data.settings || {};\n    }\n\n    /**\n     * Get a custom building setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        const keys = key.split('.');\n        const value = getItemWithKeys(keys, this._settings);\n        return value;\n    }\n\n    /**\n     * Building objects are readonly and cannot be changed\n     */\n    public async save(): Promise<Organisation> {\n        throw new Error('Organisation objects are readonly and cannot be changed');\n    }\n\n    /**\n     * Building objects are readonly and cannot be deleted\n     */\n    public async delete(): Promise<void> {\n        throw new Error('Organisation objects are readonly and cannot be deleted');\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { ComposerService } from '@placeos/composer';\n\nimport { BaseAPIService } from '../base.service';\nimport { Organisation } from './organisation.class';\nimport { Building } from './building.class';\nimport {\n    HashMap,\n    ApplicationLoadingState,\n    Identity,\n} from '../../../shared/utilities/types.utilities';\nimport { BuildingLevel } from './level.class';\nimport { User } from '../users/user.class';\nimport { first } from 'rxjs/operators';\nimport { ApplicationService } from '../../app.service';\nimport { ServiceManager } from '../service-manager.class';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class OrganisationService extends BaseAPIService {\n    /** Organisation data for the application */\n    private _organisation: Organisation;\n    /** Actively displayed building */\n    private _active_building: string;\n\n    constructor(protected _composer: ComposerService, private _service: ApplicationService) {\n        super(_composer);\n        ServiceManager.setService(Organisation, this);\n        ServiceManager.setService(Building, this);\n        this._name = 'Organisation';\n        this._api_route = 'zones';\n        this.set('buildings', []);\n        this.set('active_building', null);\n        this._service.initialised.pipe(first((_) => _)).subscribe(() => this.init());\n    }\n\n    /**\n     * Add is not available on organisation service\n     */\n    public async add(form_data: HashMap, query_params?: HashMap): Promise<Organisation> {\n        throw new Error('Add is not available on the organisation service');\n    }\n\n    /**\n     * Update is not available on organisation service\n     */\n    public async update(\n        id: string,\n        form_data: HashMap,\n        query_params?: HashMap\n    ): Promise<Organisation> {\n        throw new Error('Update is not available on the organisation service');\n    }\n\n    /**\n     * Delete is not available on organisation service\n     */\n    public async delete(id: string): Promise<void> {\n        throw new Error('Delete is not available on the organisation service');\n    }\n\n    /**\n     * Get list of levels for the given building ID\n     * @param bld_id Building ID\n     */\n    public levels(bld_id: string): any[] {\n        return (this.buildings.find((i) => i.id === bld_id) || ({} as Building)).levels;\n    }\n\n    /**\n     * Get a setting from the organisation or active building\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string) {\n        return this.building.setting(key) || this._organisation.setting(key);\n    }\n\n    /** Active building */\n    public get building(): Building {\n        return this.buildings.find((i) => i.id === this._active_building);\n    }\n\n    /** List of types of spaces */\n    public get space_types(): Identity[] {\n        return this.get('space_types') || [];\n    }\n\n    public set building(bld: Building) {\n        if (bld instanceof Building) {\n            this._active_building = bld.id;\n        } else {\n            this._active_building = bld;\n        }\n        this.set('active_building', this.building);\n    }\n\n    /** List of buildings for the organisation */\n    public get buildings(): Building[] {\n        return this.get<Building[]>('buildings') || [];\n    }\n\n    /**\n     * Get list of available equipment\n     * @param id ID of the building to get the list from. i.e. Defaults to the active building\n     */\n    public getExtras(id: string, bld_id?: string) {\n        const bld = this.buildings.find((i) => i.id === bld_id) || this.building;\n        if (bld && id) {\n            return bld.extras.filter((i) => `${i.id}`.indexOf(id) >= 0);\n        }\n        return [];\n    }\n\n    /**\n     * Get the first level matching the list of given IDs\n     * @param ids List of ID to search with\n     */\n    public levelWithID(ids: string | string[]): BuildingLevel {\n        const list = ids instanceof Array ? ids : [ids];\n        const bld_list = this.buildings;\n        for (const id of list) {\n            for (const bld of bld_list) {\n                for (const lvl of bld.levels) {\n                    if (lvl.id === id) {\n                        return lvl;\n                    }\n                }\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Initialise service data\n     */\n    protected async load(): Promise<void> {\n        /* istanbul ignore else */\n        if (localStorage) {\n            this._active_building = localStorage.getItem(`${this._service.name}.building`);\n        }\n        const loading: ApplicationLoadingState = this._service.get('loading') || {};\n        loading.organisation = { message: 'Loading organisation data', state: 'loading' };\n        await this.loadOrganisation();\n        loading.organisation = { message: 'Loading organisation data', state: 'complete' };\n        loading.buildings = { message: 'Loading building data', state: 'loading' };\n        this._service.set('loading', loading);\n        await this.loadBuildings();\n        loading.buildings = { message: 'Loading building data', state: 'complete' };\n        loading.levels = { message: 'Loading building floor data', state: 'loading' };\n        this._service.set('loading', loading);\n        await this.loadLevels();\n        loading.levels = { message: 'Loading building floor data', state: 'complete' };\n        this._service.set('loading', loading);\n        loading.space_types = { message: 'Loading space type data', state: 'loading' };\n        this._service.set('loading', loading);\n        await this.loadSpaceTypes();\n        loading.space_types = { message: 'Loading space type data', state: 'complete' };\n        this._service.set('loading', loading);\n        const user_service = ServiceManager.serviceFor(User);\n        /* istanbul ignore else */\n        if (user_service) {\n            user_service\n                .listen<User>('current_user')\n                .pipe(first((_) => !!_.location))\n                .subscribe((user) => {\n                    if (user) {\n                        const building = this.buildings.find((bld) => bld.code === user.location);\n                        if (building) {\n                            this._active_building = building.id;\n                            this.set('active_building', building);\n                        } else {\n                            this._active_building = this.building.id;\n                            this.set('active_building', this.building);\n                        }\n                    }\n                });\n        }\n    }\n\n    /**\n     * Load organisation data for application\n     */\n    public async loadOrganisation(): Promise<void> {\n        const org_data = await this.query({ tags: 'org', engine: true });\n        this._organisation = new Organisation(org_data[0]);\n        this.set('organisation', this._organisation);\n    }\n\n    /**\n     * Load building data for the organisation\n     */\n    public async loadBuildings(): Promise<void> {\n        const bld_data = await this.query({ tags: 'building', engine: true, limit: 500 });\n        const buildings = (bld_data as HashMap[]).map((i) => new Building(i));\n        this.set('buildings', buildings);\n        /* istanbul ignore else */\n        if (!this._active_building && buildings && buildings.length > 0) {\n            this._active_building = buildings[0].id;\n        }\n    }\n\n    /**\n     * Load level data for the buildings\n     */\n    public async loadLevels(): Promise<void> {\n        const lvl_data = await this.query({ tags: 'level', engine: true });\n        const levels = (lvl_data as HashMap[]).map((i) => new BuildingLevel(i));\n        this.set('levels', levels);\n    }\n\n    /**\n     * Load space type data for the buildings\n     */\n    public async loadSpaceTypes(): Promise<void> {\n        const type_data = await this.query({ tags: 'room', engine: true });\n        const types = (type_data as HashMap[]).map((i) => ({ id: i.id, name: i.name }));\n        this.set('space_types', types);\n    }\n}\n","import { Type } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { BaseDataClass } from './base-api.class';\n\n\nexport interface ServiceLike<T = BaseDataClass> extends HashMap {\n    parent: any;\n    add: (_: HashMap) => Promise<T>\n    update: (id: string, _: HashMap) => Promise<T>\n    delete: (id: string) => Promise<void>\n    task: (id: string, name: string, data: HashMap) => Promise<void>\n    listen: <U = any>(prop: string) => Observable<U>\n}\nexport interface ServiceProvider<T extends ServiceLike> {\n    provideFor: Type<any>;\n    useValue: T\n}\n\nexport class ServiceManager {\n    /** Map of available services for child classes */\n    private static _service_list: ServiceProvider<any>[] = [];\n    /** Set the services used to handle data model requests */\n    public static setService(type: Type<any>, service: ServiceLike): void {\n        ServiceManager._service_list.push({ provideFor: type, useValue: service });\n    }\n    /** Get the services used to handle data model requests */\n    public static serviceFor(type: Type<any>): ServiceLike<any> {\n        const provider = ServiceManager._service_list.find(provider => provider.provideFor === type) || { useValue: null };\n        return provider.useValue;\n    }\n\n    constructor() {\n        throw new Error('ServiceMananger is static class');\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport { HashMap, Identity } from '../../../shared/utilities/types.utilities';\nimport { Booking } from '../bookings/booking.class';\nimport { BuildingLevel } from '../organisation/level.class';\nimport { SpaceRules } from '../bookings/booking.interfaces';\nimport { rulesForSpace } from '../bookings/booking.utilities';\nimport { User } from '../users/user.class';\n\nimport * as dayjs from 'dayjs';\nimport { Building } from '../organisation/building.class';\nimport { Organisation } from '../organisation/organisation.class';\nimport { ServiceManager } from '../service-manager.class';\n\nexport interface ISpaceAvailabilityOptions {\n    /** Start date and time of the availability block */\n    date?: number;\n    /** Length of the availability block */\n    duration: number;\n    /**  */\n    id?: string;\n    /** List of spaces to look at the availability for */\n    room_ids?: string;\n    /** Whether the spaces looked at should be bookable */\n    bookable?: boolean;\n    /** List of spaces or zones to ignore */\n    ignore?: string;\n    /** List of zones to look at the availability for */\n    zone_ids?: string;\n    /** Whether space bookings should not be returned */\n    hide_bookings?: boolean;\n\n    clear?: boolean;\n}\n\nexport interface SpaceBookingRuleOptions {\n    date: number;\n    duration: number;\n    host: User;\n}\n\nconst OPTION_DEFAULTS: ISpaceAvailabilityOptions = {\n    duration: 60,\n};\n\nexport interface RecurrenceAvailability {\n    /** Unix epoch in seconds */\n    readonly date: number;\n    /** Whetehr space is available at this time */\n    readonly available: boolean;\n}\n\nexport class Space extends BaseDataClass {\n    /** Extends name for the space */\n    public readonly long_name: string;\n    /** CSS selector for the location of the space of the level's map */\n    public readonly map_id: string;\n    /** Type of space */\n    public readonly type: string;\n    /** Whether user can search for this space */\n    public readonly can_search: boolean;\n    /** Whether user can open the control URL if available */\n    public readonly can_control: boolean;\n    /** Hourly cost for using the space */\n    public readonly hourly_rate: number;\n    /** Whether space can be booked by users */\n    public readonly bookable: boolean;\n    /** People capacity of the space */\n    public readonly capacity: number;\n    /** Index to force order when sorting multiple spaces */\n    public readonly sort_priority: number;\n    /** Setup time for bookings in this space */\n    public readonly setup: number;\n    /** Breakdown time for bookings in this space */\n    public readonly breakdown: number;\n    /** Last returned availability result */\n    public readonly was_available: boolean;\n    /** URL for the control interface of the space */\n    public readonly support_url: boolean;\n    /** Display image for the space */\n    public readonly image: string;\n    /** List of recurrence occurrence availability details */\n    public readonly recurr_available: readonly RecurrenceAvailability[];\n    /** Engine zones associated with the space */\n    public readonly zones: readonly string[];\n    /** Bookings associated with the space */\n    public bookings: readonly Booking[];\n    /** List of ids for linked spaces */\n    public linked_spaces: readonly string[];\n    /** Service for managing spaces */\n    protected get _service() {\n        return ServiceManager.serviceFor(Building);\n    }\n    /** List of equipment available in the space */\n    private _extras: Identity[];\n\n    constructor(raw_data: HashMap = {}) {\n        super(raw_data);\n        const settings = raw_data.settings || {};\n\n        this.long_name = settings.long_name || raw_data.long_name;\n        this.map_id = settings.map_id || raw_data.map_id || '';\n        this.type =\n            settings.book_type ||\n            (this.level.settings || {}).book_type ||\n            raw_data.book_type ||\n            raw_data.type ||\n            'book';\n        this.can_search =\n            settings.searchable || raw_data.searchable || raw_data.can_search || false;\n        this.can_control =\n            settings.controlable || raw_data.controlable || raw_data.can_control || false;\n        this.hourly_rate = settings.cost_hour || raw_data.cost_hour || raw_data.hourly_rate || 0;\n        this.bookable = settings.bookable || raw_data.bookable || false;\n        this.setup = (settings.setup || 0) / 60 || raw_data.setup || 0;\n        this.breakdown = (settings.breakdown || 0) / 60 || raw_data.breakdown || 0;\n        this.capacity = raw_data.capacity || 0;\n        this.recurr_available = raw_data.recurr_available || settings.recurr_available || [];\n        const available = !!this.recurr_available.find((occurence) => !!occurence.available);\n        this.was_available =\n            settings.available ||\n            raw_data.available ||\n            raw_data.was_available ||\n            available ||\n            false;\n        this.support_url = raw_data.support_url;\n        this.image = raw_data.image || '';\n\n        this.zones = raw_data.zones instanceof Array ? raw_data.zones : [];\n        const raw_bookings = settings.bookings || raw_data.bookings || [];\n        this.bookings = raw_bookings.map((bkn) => new Booking(bkn));\n        this._extras = [];\n        this.linked_spaces =\n            settings.linked_rooms || raw_data.linked_rooms || raw_data.linked_spaces || [];\n    }\n\n    /** Whether the space has a booking in progress */\n    public get in_use(): boolean {\n        return !!this.current;\n    }\n\n    /** Get any current in progress meeting */\n    public get current(): Booking {\n        const bookings = this.bookings;\n        for (const bkn of bookings) {\n            const status = bkn.status;\n            if (status === 'in_progress' || status === 'started') {\n                return bkn;\n            }\n        }\n        return null;\n    }\n\n    /** Get the next upcoming meeting */\n    public get next(): Booking {\n        const now = dayjs().valueOf();\n        const bookings = this.bookings;\n        for (const bkn of bookings) {\n            if (bkn.date > now) {\n                return bkn;\n            }\n        }\n        return null;\n    }\n\n    /** List of bookings for today */\n    public get todays_bookings(): readonly Booking[] {\n        return this.bookingsFor(dayjs().valueOf());\n    }\n\n    /** Level in which the space is associated */\n    public get level(): BuildingLevel {\n        const service = ServiceManager.serviceFor(Organisation);\n        return (service ? service.levelWithID(this.zones as any) : null) || new BuildingLevel({});\n    }\n\n    /**\n     * Get bookings for space\n     * @param date Date to filter bookings on\n     */\n    public bookingsFor(date?: number): readonly Booking[] {\n        if (date) {\n            const day = dayjs(date);\n            return this.bookings.filter((i) => {\n                const start = dayjs(i.date);\n                return start.isSame(day, 'd');\n            });\n        } else {\n            return this.bookings;\n        }\n    }\n\n    /**\n     * Whether the space is available.\n     */\n    public isAvailable(options?: ISpaceAvailabilityOptions): Promise<boolean> {\n        options = options\n            ? { ...OPTION_DEFAULTS, ...options, room_ids: this.id }\n            : { ...OPTION_DEFAULTS, room_ids: this.id };\n        return new Promise((resolve) => {\n            (this._service as any).available(options).then(\n                (list: Space[]) => {\n                    for (const rm of list) {\n                        if (rm.id === this.id) {\n                            return resolve(true);\n                        }\n                    }\n                    resolve(false);\n                },\n                () => resolve(false)\n            );\n        });\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): Space {\n        return new Space(this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): Space {\n        return new Space({ ...this, id: null, email: null, _bookings: [] });\n    }\n\n    /**\n     * Generate the booking rules for space with given options\n     * @param options Conditions for generating the space rules\n     */\n    public rulesFor(options: SpaceBookingRuleOptions): SpaceRules {\n        const service = ServiceManager.serviceFor(Building);\n        if (!service || !this.level) {\n            return { auto_approve: true, hide: false };\n        }\n        const building = service.buildings.find((bld) => bld.id === this.level.building_id);\n        if (!building) {\n            return { auto_approve: true, hide: false };\n        }\n        const { date, duration, host } = options;\n        const rules: SpaceRules = rulesForSpace({\n            time: date,\n            duration,\n            space: this,\n            user: host,\n            rules: building.booking_rules,\n        });\n        return rules;\n    }\n\n    /**\n     * Whether space can only be booked by request\n     * @param options Conditions for checking the space rules\n     */\n    public byRequest(options: SpaceBookingRuleOptions) {\n        const rules = this.rulesFor(options);\n        return !rules.auto_approve;\n    }\n}\n","import { HashMap } from '../../../shared/utilities/types.utilities';\nimport { generateMockBooking } from '../bookings/booking.utilities';\nimport { USER_DOMAIN } from '../users/user.utilities';\nimport { ISpaceAvailabilityOptions } from './space.class';\n\nimport * as faker from 'faker';\nimport * as dayjs from 'dayjs';\n\nlet SPACE_COUNT: number = 0;\n\nexport function generateMockSpace(overrides: HashMap = {}): HashMap {\n    const id = `space-${SPACE_COUNT++}`;\n    const name = `${faker.name.firstName()} ${faker.name.lastName()} Space`;\n    const linked = Math.floor(Math.random() * 99999) % 2 === 0 && SPACE_COUNT > 1;\n    return {\n        id,\n        name,\n        long_name: `${name} with an long name`,\n        map_id: `${SPACE_COUNT}`,\n        capacity: Math.floor(Math.random() * 20 + 1) * 2,\n        email: `${name.toLowerCase().split(' ').join('.')}@${USER_DOMAIN}`,\n        type: faker.commerce.productName(),\n        searchable: Math.floor(Math.random() * 99999) % 2 === 0,\n        controlable: Math.floor(Math.random() * 99999) % 2 === 0,\n        bookable: Math.floor(Math.random() * 99999) % 2 === 0,\n        cost_hour: Math.floor(Math.random() * 300) * 100,\n        setup: Math.floor(Math.random() * 6) * 5,\n        breakdown: Math.floor(Math.random() * 6) * 5,\n        zones: ['zone_lvl-0'],\n        support_url: `/control/#/${id}`,\n        bookings: Array(10).fill(0).map(i => generateMockBooking()),\n        linked_rooms: linked ? [`space-${Math.floor(Math.random() * (SPACE_COUNT - 1))}`] : [],\n        image: faker.image.business(),\n        ...overrides\n    };\n}\n\nexport function availabilityOptionsToQuery(options: ISpaceAvailabilityOptions): HashMap {\n    let query: HashMap = {};\n    if (options) {\n        query = { ...options };\n        if (options.date) {\n            const date = dayjs(options.date).startOf('m');\n            query.available_from = date.unix();\n            query.available_to = date.add(options.duration || 60, 'm').unix();\n            delete query.date;\n            delete query.duration;\n        }\n    }\n    return query;\n}\n","import { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\nimport { first } from 'rxjs/operators';\n\nimport { BaseAPIService } from '../base.service';\nimport { Space, ISpaceAvailabilityOptions } from './space.class';\nimport { HashMap, ApplicationLoadingState } from '../../../shared/utilities/types.utilities';\nimport { availabilityOptionsToQuery } from './space.utilities';\nimport { OrganisationService } from '../organisation/organisation.service';\nimport { ServiceManager } from '../service-manager.class';\nimport { ApplicationService } from '../../app.service';\n\nimport * as dayjs from 'dayjs';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SpacesService extends BaseAPIService<Space> {\n    constructor(\n        protected _composer: ComposerService,\n        private _org_service: OrganisationService,\n        private _app: ApplicationService\n    ) {\n        super(_composer);\n        ServiceManager.setService(Space, this);\n        this._name = 'Space';\n        this._api_route = 'rooms';\n        this._compare = (a, b) => !a.id.localeCompare(b.id) || !a.email.localeCompare(b.email);\n        this._list_filter = (a: Space) => {\n            const bld = this._org_service.building;\n            return a.level.building_id === bld.id;\n        };\n        this._org_service.initialised.pipe(first((_) => _)).subscribe(() => this.init());\n    }\n\n    /**\n     * Get available spaces\n     * @param options\n     */\n    public available(options: ISpaceAvailabilityOptions): Promise<Space[]> {\n        if (!options) {\n            throw new Error('Space avilability requires request options');\n        }\n        if (!options.date) {\n            options.date = dayjs().startOf('m').valueOf();\n        }\n        const key = `available|${options.id ? options.id : ''}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise((resolve, reject) => {\n                const respond = (list: Space[]) => {\n                    const available_spaces = list.filter((i) => {\n                        const linked = list.filter((j) => i.linked_spaces.indexOf(j.id) >= 0);\n                        return (\n                            i.was_available && linked.reduce((a, v) => a && v.was_available, true)\n                        );\n                    });\n                    delete this._promises[key];\n                    resolve(available_spaces);\n                };\n                const error = (e) => {\n                    reject(e);\n                    delete this._promises[key];\n                };\n                const query = availabilityOptionsToQuery(options);\n                if (options.id) {\n                    this.show(options.id, query).then((i) => respond([i]), error);\n                } else {\n                    this.query(query).then(respond, error);\n                }\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Load initial data for the service\n     */\n    protected async load(): Promise<void> {\n        const loading: ApplicationLoadingState = this._app.get('loading') || {};\n        if (!loading.spaces) {\n            loading.spaces = { message: 'Loading space data', state: 'loading' };\n            this._app.set('loading', loading);\n        }\n        await this.query().catch(() => {\n            loading.spaces = { message: 'Loading space data', state: 'failed' };\n            this._app.set('loading', loading);\n        });\n        loading.spaces = { message: 'Loading space data', state: 'complete' };\n        this._app.set('loading', loading);\n    }\n\n    /**\n     * Convert raw data into API object\n     * @param raw_data Raw API data\n     */\n    protected process(raw_data: HashMap): Space {\n        return new Space(raw_data);\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport { HashMap, Identity } from '../../../shared/utilities/types.utilities';\nimport { MapLocation } from '../location/location.class';\nimport { ServiceManager } from '../service-manager.class';\n\nexport class User extends BaseDataClass {\n    /** Currently logged in user */\n    public static get active_user(): User {\n        const service = ServiceManager.serviceFor(User);\n        return service ? service.current : null;\n    }\n    /** First name of the user */\n    public readonly first_name: string;\n    /** Last name of the user */\n    public readonly last_name: string;\n    /** Windows user ID */\n    public readonly windows_id: string;\n    /** Type of user */\n    public readonly type: 'partner' | 'external' | 'internal';\n    /** Contact phone number of the user */\n    public readonly phone: string;\n    /** Organisational department the user is part of */\n    public readonly business_unit: string;\n    /** Whether user is external from the application's organisation */\n    public readonly external: boolean;\n    /** Organisational Identifier for the user */\n    public readonly staff_code: string;\n    /** Basic location descriptor for the user */\n    public readonly location: string;\n    /** List of users that this user can act on behalf */\n    public readonly delegates: readonly string[];\n    /** URL of the user's avatar image */\n    public readonly image: string;\n    /** List of user groups associated with this user */\n    public readonly groups: readonly string[];\n    /** Organisation the user is associated with */\n    private _organisation: Identity;\n\n    /** Map location of the user */\n    private _location: MapLocation;\n    /** List of desk bookings */\n    private _desk_bookings: HashMap = {};\n\n    constructor(raw_data: HashMap = {}) {\n        super(raw_data);\n        this.first_name = raw_data.first_name || '';\n        this.last_name = raw_data.last_name || '';\n        this.windows_id = raw_data.email || '';\n        this.type = raw_data.visitor ? 'external' : raw_data.type || 'internal';\n        this.phone = raw_data.phone || raw_data.mobile || '';\n        this.business_unit = raw_data.business_unit || raw_data.department || '';\n        this._organisation = raw_data.organisation || {\n            id: raw_data.organisation_id,\n            name: raw_data.organisation_name\n        };\n        this.external = this.type === 'external';\n        this._location = null;\n        this.image = raw_data.image || '';\n        this.staff_code = raw_data.staff_code || raw_data.fmno || '';\n        this.delegates = raw_data.delegates || [];\n        this._location = new MapLocation(\n            raw_data.location && raw_data.location instanceof Object\n                ? raw_data.location\n                : { name: raw_data.location }\n        );\n        this.groups = raw_data.groups || [];\n        this.location = raw_data.location || raw_data.officeLocation || '';\n    }\n\n    /** Organisation the user is associated with */\n    public get organisation() {\n        return this._organisation;\n    }\n\n    /** Map location of the user */\n    public get last_location(): MapLocation {\n        return new MapLocation(this._location || {})\n    }\n\n    /**\n     * Ask the server for the users current location\n     */\n    public locate(): Promise<MapLocation> {\n        const service: any = ServiceManager.serviceFor(MapLocation);\n        return new Promise((resolve, reject) => {\n            if (service) {\n                service.show(this.id, { desk: this.email }).then(\n                    l => {\n                        this._location = l;\n                        resolve(l);\n                    },\n                    e => reject(e)\n                );\n            } else {\n                resolve(null);\n            }\n        });\n    }\n\n    /**\n     * Whether user is available during the given period\n     * @param start Start time as a unix timestamp with milliseconds\n     * @param end End time as a unix timestamp with milliseconds\n     */\n    public available(start?: number, end?: number): Promise<boolean> {\n        return new Promise<boolean>(resolve => {\n            this._service.query({ email: this.email, start, end }).then(\n                l => resolve(l && l.length > 0),\n                _ => resolve(false)\n            );\n        });\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): User {\n        return new User(this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): User {\n        return new User({ ...this, id: null, email: null });\n    }\n\n    /**\n     * Convert object into plain object\n     */\n    public toJSON(this: User, with_changes: boolean = true): HashMap {\n        const data = super.toJSON(with_changes);\n        delete data.location;\n        return data;\n    }\n}\n","import { HashMap } from '../../../shared/utilities/types.utilities';\n\nimport * as faker from 'faker';\nimport { padZero, unique } from '../../../shared/utilities/general.utilities';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { User } from './user.class';\nimport { Subscription } from 'rxjs';\n\nlet USER_COUNT = 0;\n\nexport let USER_DOMAIN = 'acaprojects.com';\n\nconst USER_EMAILS: string[] = [];\n\n/**\n * Generate raw mock data for a user\n * @param id Forced ID for the mock\n * @param name Forced name for the user\n * @param external Whether user is external of the organisation\n */\nexport function generateMockUser(override: HashMap = {}): HashMap {\n    const id = `user-${USER_COUNT++}`;\n    const name = `${faker.name.firstName()} ${faker.name.lastName()}`;\n    const external = override.external || !((Math.random() * 99999) % 2);\n    const organisation = external ? faker.company.companyName() : USER_DOMAIN.split('.')[0];\n    let delegates: string[] = [];\n    const delegate_count = Math.min(Math.random() * 4 + 1, USER_EMAILS.length);\n    for (let i = 0; i < delegate_count; i++) {\n        delegates.push(USER_EMAILS[Math.floor(Math.random() * USER_EMAILS.length)]);\n    }\n    delegates = unique(delegates);\n    const email = `${name\n        .split(' ')\n        .join('.')\n        .toLowerCase()}@${external ? 'not-' : ''}${USER_DOMAIN}`;\n    USER_EMAILS.push(email);\n    return {\n        id,\n        name,\n        first_name: name.split(' ')[0],\n        last_name: name.split(' ')[1],\n        email,\n        phone: faker.phone.phoneNumber(),\n        visitor: external,\n        organisation: {\n            id: organisation\n                .split(' ')\n                .join('.')\n                .toLowerCase(),\n            name: organisation\n        },\n        department: faker.commerce.department(),\n        staff_code: padZero(Math.floor(Math.random() * 99999), 5),\n        delegates,\n        image: faker.image.avatar(),\n        ...override\n    };\n}\n\n/**\n * Generate form fields for the given user\n * @param user User to generate form for\n */\nexport function generateUserForm(user: User): FormGroup {\n    if (!user) {\n        throw Error('No user passed');\n    }\n    const fields: HashMap<FormControl> = {\n        id: new FormControl(user.id || ''),\n        name: new FormControl(user.name || ''),\n        first_name: new FormControl(user.first_name || ''),\n        last_name: new FormControl(user.last_name || ''),\n        email: new FormControl(user.email || '', [Validators.email, Validators.required])\n    };\n    // Generate form group for booking item\n    const form = new FormGroup(fields);\n    // Listen for changes on the fields and update booking\n    if (form) {\n        const subs: HashMap<Subscription> = {};\n        Object.keys(form.controls).forEach((key: any) => {\n            subs[`change_${key}`] = form.controls[key].valueChanges.subscribe(value =>\n                user.storePendingChange(key, value)\n            );\n        });\n        subs.user = user.changeEvents.subscribe(event => {\n            if (event.type === 'item_saved') {\n                for (const key in subs) {\n                    if (subs[key] instanceof Subscription) {\n                        subs[key].unsubscribe();\n                    }\n                }\n            }\n        });\n    }\n    return form;\n}\n","import { Injectable } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { ComposerService } from '@placeos/composer';\nimport { first } from 'rxjs/operators';\n\nimport { Md5 } from 'ts-md5/dist/md5';\n\nimport { BaseAPIService } from '../base.service';\nimport { User } from './user.class';\nimport { HashMap, ApplicationLoadingState } from '../../../shared/utilities/types.utilities';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\n\nimport * as dayjs from 'dayjs';\nimport { ApplicationService } from '../../app.service';\nimport { ServiceManager } from '../service-manager.class';\n\nexport interface ILoginOptions {\n    /** URL to post login request to */\n    url?: string;\n    /** Whether form data is passed in the body of the request */\n    form?: boolean;\n    /** Custom headers to pass into the post request */\n    headers?: HashMap<string>;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class UsersService extends BaseAPIService<User> {\n    constructor(\n        protected _composer: ComposerService,\n        protected uhttp: HttpClient,\n        protected location: Location,\n        private _service: ApplicationService\n    ) {\n        super(_composer);\n        ServiceManager.setService(User, this);\n        this._name = 'Users';\n        this._api_route = 'users';\n        this._compare = (a, b) => !a.id.localeCompare(b.id) || !a.email.localeCompare(b.email);\n        this.set('current_user', new User({ id: 'local_user', name: 'Local User' }));\n        this._composer.initialised.pipe(first((_) => _)).subscribe(() => this.init());\n    }\n\n    /** Currently logged in user */\n    public get current(): User {\n        return this.get('current_user');\n    }\n\n    /** Whether the user has properly logged in */\n    public get is_logged_in(): boolean {\n        return this.current && this.current.id !== 'local_user';\n    }\n\n    /**\n     * Sets the access token and expiry for the user\n     * @param token OAuth bearer token\n     * @param expiry Expiry epoch timestamp in ms\n     * @param reload Whether to reload the page after setting tokens\n     */\n    public setToken(token: string, expiry?: number, reload: boolean = true) {\n        if (!expiry) {\n            expiry = dayjs().add(7, 'd').endOf('d').valueOf();\n        }\n        const path = `${location.origin}${\n            this._service.setting('composer.route') || ''\n        }/oauth-resp.html`;\n        const client_id = Md5.hashStr(path);\n        if (sessionStorage) {\n            sessionStorage.setItem(`${client_id}_access_token`, token);\n            sessionStorage.setItem(`${client_id}_expires_at`, `${expiry}`);\n        }\n        if (localStorage) {\n            localStorage.setItem(`${client_id}_access_token`, token);\n            localStorage.setItem(`${client_id}_expires_at`, `${expiry}`);\n        }\n        if (reload) {\n            this.location.go(this.location.path());\n        }\n        return path;\n    }\n\n    /**\n     * Post login request to the API\n     * @param query_params Key value pairs to pass into\n     * @param options Options for the login request\n     */\n    public login(query_params: HashMap, options: ILoginOptions = {}): Promise<void> {\n        if (!this._promises['login']) {\n            this._promises['login'] = new Promise<void>((resolve, reject) => {\n                this.set('status', 'loading');\n                let headers = new HttpHeaders();\n                if (!options || options.form !== false) {\n                    headers = headers.append('Content-Type', 'application/x-www-form-urlencoded');\n                }\n                const url = (options ? options.url : '') || '/auth/signin';\n                this.uhttp.post(url, query_params, { headers }).subscribe(\n                    (_) => null,\n                    (e) => reject(e),\n                    () => {\n                        this._composer.auth.authorise();\n                        resolve();\n                    }\n                );\n            });\n        }\n        return this._promises['login'];\n    }\n\n    /**\n     * Logout of user and redirect to logout URL\n     */\n    public logout() {\n        this._composer.auth.logout();\n    }\n\n    /**\n     * Load initial data for the service\n     */\n    protected load(tries: number = 0): Promise<void> {\n        const loading: ApplicationLoadingState = this._service.get('loading') || {};\n        if (!loading.user) {\n            loading.user = { message: 'Loading user credentials', state: 'loading' };\n            this._service.set('loading', loading);\n        }\n        this.set('status', 'loading');\n        return new Promise<void>((resolve) => {\n            if (tries > 4) {\n                this.set('status', 'invalid');\n                loading.user = { message: 'Loading user credentials', state: 'failed' };\n                this._service.set('loading', loading);\n                return resolve();\n            }\n            this.show('current').then(\n                (current_user) => {\n                    this.set('status', 'available');\n                    this.set('current_user', current_user);\n                    if (this._service && this._service.setting('app.user.grab_api_details')) {\n                        this.show(current_user.email).then(\n                            (user) => {\n                                this.set('current_user', user);\n                                if (this._service.setting('app.user.update_location')) {\n                                    this.interval('location', () => user.locate(), 5000);\n                                }\n                                this.loadDelegates();\n                                resolve();\n                                loading.user = {\n                                    message: 'Loading user credentials',\n                                    state: 'complete',\n                                };\n                                this._service.set('loading', loading);\n                            },\n                            () =>\n                                this.timeout('load', () => this.load(++tries).then(() => resolve()))\n                        );\n                    } else {\n                        if (this._service.setting('app.user.update_location')) {\n                            this.interval('location', () => current_user.locate(), 5000);\n                        }\n                        this.loadDelegates();\n                        resolve();\n                        loading.user = { message: 'Loading user credentials', state: 'complete' };\n                        this._service.set('loading', loading);\n                    }\n                },\n                () => this.timeout('load', () => this.load(++tries).then(() => resolve()))\n            );\n        });\n    }\n\n    private async loadDelegates() {\n        const delegates = this.current.delegates;\n        if (!delegates || !delegates.length) {\n            return [];\n        }\n        const promises: Promise<User>[] = [];\n        for (const email of delegates) {\n            promises.push(this.show(email));\n        }\n        const list = await Promise.all(promises);\n        this.set('delegates', list);\n        this.set('list', unique((this.get('list') || []).concat(list)));\n        return list;\n    }\n\n    /**\n     * Convert raw API data into a valid User Object\n     * @param raw_item Raw API data\n     */\n    protected process(raw_data: any): User {\n        return new User(raw_data);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\n\nimport { HashMap } from '../shared/utilities/types.utilities';\nimport { unique } from '../shared/utilities/general.utilities';\n\n/** List of keys that cannot be in a combination by themselves or with each other */\nconst INVALID_STANDALONE_KEYS: string[] = ['control', 'shift', 'alt', 'meta', 'os'];\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HotkeysService {\n    /** Map of subjects which store press states of keys */\n    private keydown_states: HashMap<BehaviorSubject<number>> = {};\n    /** Map of obserers for key state subjects */\n    private keydown_observers: HashMap<Observable<number>> = {};\n    /** List of keys at the end of a combination */\n    private combo_end: string[] = [];\n    /** List of registered hotkey combinations */\n    private registered_combos: string[][] = [];\n    /** Counter for the number of keydown events. Used for checking order of key presses */\n    private counter: number = 0;\n    /** Last key code to be pressed */\n    private last_down: string;\n\n    constructor() {\n        window.addEventListener('keydown', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            /* istanbul ignore else */\n            if (this.last_down !== code) {\n                /* istanbul ignore else */\n                if (!this.keydown_states[code]) {\n                    this.keydown_states[code] = new BehaviorSubject(null);\n                    this.keydown_observers[code] = this.keydown_states[code].asObservable();\n                }\n                this.keydown_states[code].next(++this.counter);\n                /* istanbul ignore else */\n                if (this.combo_end.indexOf(code) >= 0) {\n                    event.preventDefault();\n                }\n                this.last_down = code;\n            }\n        });\n\n        window.addEventListener('keyup', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            /* istanbul ignore else */\n            if (this.keydown_states[code]) {\n                this.keydown_states[code].next(null);\n            }\n            /* istanbul ignore else */\n            if (this.last_down === code) {\n                this.last_down = null;\n            }\n        });\n    }\n\n    /**\n     * Listen to the given key combination\n     * @param combo Array of key codes to listen to or a hotkey string e.g. `Alt+Shift+KeyK`\n     * @param next Callback for combination presses\n     */\n    public listen(combo: string | string[], next: () => void): Subscription {\n        combo = (combo instanceof Array ? combo : combo.split('+'));\n        const combination: string[] = combo.map(i => this.mapKey(i.toLowerCase()));\n        /* istanbul ignore else */\n        if (combination.length > 0 && this.validCombination(combination)) {\n            this.registered_combos.push(combination);\n            const last_key = combination[combination.length - 1];\n            /* istanbul ignore else */\n            if (!this.keydown_states[last_key]) {\n                this.keydown_states[last_key] = new BehaviorSubject(null);\n                this.keydown_observers[last_key] = this.keydown_states[last_key].asObservable();\n            }\n            this.updateCombinationEndList();\n            return this.keydown_observers[last_key].subscribe((count) => {\n                /* istanbul ignore else */\n                if (count) {\n                    const presses: number[] = [];\n                    /* istanbul ignore else */\n                    if (combination.length > 0) {\n                        // Check that keys are pressed\n                        for (const key of combination) {\n                            const state = this.keydown_states[key];\n                            presses.push(state ? state.getValue() || -1 : -1);\n                        }\n                        // Check that keys are pressed in the correct order\n                        for (let i = 0; i < combination.length - 1; i++) {\n                            if (presses[i] > presses[i + 1]) { return; }\n                        }\n                    }\n                    const total = presses.reduce((a, v) => a + (v > 0 ? 1 : -1), 0);\n                    /* istanbul ignore else */\n                    if (total >= combination.length) {\n                        next();\n                    }\n                }\n            });\n        }\n        return null;\n    }\n\n    /**\n     * Map key codes with multiple versions to simple form\n     * @param code Code to transform\n     */\n    private mapKey(code: string): string {\n        /* istanbul ignore else */\n        if (code.indexOf('alt') >= 0 || code.indexOf('shift') >= 0 || code.indexOf('control') >= 0) {\n            return code.replace('left', '').replace('right', '');\n        }\n        return code;\n    }\n\n    /**\n     * Update the list of the last keys in combinations to allow for prevent default actions on pre-existing hotkeys\n     */\n    private updateCombinationEndList(): void {\n        const key_list = [];\n        for (const combo of this.registered_combos) {\n            this.combo_end.push(combo[combo.length - 1]);\n        }\n        this.combo_end = unique(key_list);\n    }\n\n    /**\n     * Checks if the given hotkey combination is allowed and valid\n     * @param combo Array of key codes\n     */\n    private validCombination(combo: string[]): boolean {\n        let non_meta = 0;\n        for (const key of combo) {\n            /* istanbul ignore else */\n            if (INVALID_STANDALONE_KEYS.indexOf(key) < 0) {\n                non_meta++;\n            }\n        }\n        return non_meta > 0;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { HashMap } from '../shared/utilities/types.utilities';\nimport { getItemWithKeys } from '../shared/utilities/general.utilities';\nimport { BaseClass } from '../shared/base.class';\nimport { VERSION } from 'src/environments/version';\n\nimport * as dayjs from 'dayjs';\n\ninterface SettingsMap {\n    api: HashMap;\n    local: HashMap;\n    session: HashMap;\n    [block: string]: HashMap;\n}\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n    }\n}\n\nexport type ConsoleStream = 'debug' | 'warn' | 'log' | 'error';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SettingsService extends BaseClass {\n\n    /** Map of settings */\n    private _settings: SettingsMap = { api: {}, local: {}, session: {} };\n    /** Store for promises */\n    private _promises: { [name: string]: Promise<any> } = {};\n    /** Name of the application */\n    private _app_name = 'PlaceOS';\n\n    constructor(private http: HttpClient) {\n        super();\n        const now = dayjs();\n        const build = dayjs(VERSION.time);\n        const built = now.isSame(build, 'd') ? `Today at ${build.format('h:mmA')}` : build.format('D MMM YYYY, h:mmA');\n        this.log('CORE', `${VERSION.core_version}`, null, 'debug', true);\n        this.log('APP', `${VERSION.version} - ${VERSION.hash} | Built: ${built}`, null, 'debug', true);\n        this.init();\n    }\n\n    /**\n     * Initialise the settings\n     */\n    public async init() {\n        await this.loadFromFile('api');\n        this.loadStore('local', localStorage);\n        this.loadStore('session', sessionStorage);\n        if (this._settings.api.debug) {\n            window.debug = true;\n        }\n        if (this._settings.api.app && this._settings.api.app.name) {\n            this._app_name = this._settings.api.app.name;\n        }\n        this.log('Settings', 'Successfully loaded settings');\n        this._initialised.next(true);\n    }\n\n    /** Whether settings service has initialised */\n    public get app_name() { return this._app_name; }\n\n    /**\n     * Log data to the browser console\n     * @param type Type of message\n     * @param msg Message body\n     * @param args array of argments to log to the console\n     * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\n     * @param force Whether to force message to be emitted when debug is disabled\n     */\n    public log(type: string, msg: string, args?: any, stream: ConsoleStream = 'debug', force: boolean = false) {\n        if (window.debug || force) {\n            const colors: string[] = ['color: #E91E63', 'color: #3F51B5', 'color: default'];\n            if (args) {\n                console[stream](`%c[${this.app_name}]%c[${type}] %c${msg}`, ...colors, args);\n            } else {\n                console[stream](`%c[${this.app_name}]%c[${type}] %c${msg}`, ...colors);\n            }\n        }\n    }\n\n    /**\n     * Get a setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public get(key: string): any {\n        const keys = key.split('.');\n        let value = null;\n        if (keys[0] === 'session') {\n            keys.shift();\n            value = getItemWithKeys(keys, this._settings.session);\n        } else if (keys[0] === 'local') {\n            keys.shift();\n            value = getItemWithKeys(keys, this._settings.local);\n        } else {\n            value = getItemWithKeys(keys, this._settings.api) ||\n                getItemWithKeys(keys, this._settings.session) ||\n                getItemWithKeys(keys, this._settings.local);\n        }\n        return value;\n    }\n\n    /**\n     * Load settings from the given Storage object\n     * @param name Root key for the settings\n     * @param store Storage item to add to the load into the settings\n     */\n    private loadStore(name: string, store: Storage) {\n        if (store) {\n            for (let i = 0; i < store.length; i++) {\n                const key = store.key(i);\n                const item = store.getItem(key);\n                if (item) { this._settings[name][key] = item; }\n            }\n        }\n    }\n\n    /**\n     * Load setting data from a file\n     * @param name Namespace to add file data to\n     * @param file URL to file to load setting data from\n     */\n    private async loadFromFile(name: string, file: string = 'assets/settings.json', tries: number = 0) {\n        if (file !== 'assets/settings.json' && tries > 5) {\n            return Promise.resolve();\n        }\n        const file_name = file.split('/')[file.split('/').length - 1];\n        // Check if data has been loaded into the global space\n        if (window[file_name] instanceof Object) {\n            this._settings[name] = { ...(this._settings[name] || {}), ...window[file_name] };\n            return Promise.resolve();\n        }\n        const key = `load|${name}|${file}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<void>((resolve, reject) => {\n                this.http.get(file).subscribe(\n                    (data) => {\n                        this._settings[name] = { ...(this._settings[name] || {}), ...(data || {}) };\n                    }, (e) => {\n                        this.log('Settings', `Failed to load settings from \"${file}\"`);\n                        this._promises[key] = null;\n                        this.timeout(`load_${file_name}`, () => {\n                            this.loadFromFile(name, file, ++tries).then(() => resolve());\n                        })\n                    }, () => resolve()\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n}\n","import { Subscription, BehaviorSubject } from \"rxjs\";\n\nexport class BaseClass {\n    /** Store for named timers */\n    protected _timers: { [name: string]: number } = {};\n    /** Store for named intervals */\n    protected _intervals: { [name: string]: number } = {};\n    /** Store for named subscription unsub callbacks */\n    protected _subscriptions: { [name: string]: (Subscription | (() => void)) } = {};\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n\n    /** Observable of the initialised state of the object */\n    public get initialised(): BehaviorSubject<boolean> {\n        return this._initialised;\n    }\n    /** Whether the object has been initialised */\n    public get is_initialised(): boolean {\n        return this._initialised.getValue();\n    }\n\n    protected destroy() {\n        for (const key in this._timers) {\n            if (this._timers.hasOwnProperty(key)) {\n                this.clearTimeout(key);\n            }\n        }\n        for (const key in this._intervals) {\n            if (this._intervals.hasOwnProperty(key)) {\n                this.clearInterval(key);\n            }\n        }\n        for (const key in this._subscriptions) {\n            if (this._subscriptions.hasOwnProperty(key)) {\n                this.unsub(key);\n            }\n        }\n    }\n\n    /**\n     * Creates a named timer\n     * @param name Name of the timer\n     * @param fn Callback function for the timer\n     * @param delay Callback delay\n     */\n    protected timeout(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearTimeout(name);\n            this._timers[name] = <any>setTimeout(() => {\n                fn();\n                this._timers[name] = null;\n            }, delay);\n        } else {\n            throw new Error(\n                name ? 'Cannot create named timeout without a name' : 'Cannot create a timeout without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named timer\n     * @param name Timer name\n     */\n    protected clearTimeout(name: string) {\n        if (this._timers[name]) {\n            clearTimeout(this._timers[name]);\n            this._timers[name] = null;\n        }\n    }\n\n    /**\n     * Creates a named interval\n     * @param name Name of the interval\n     * @param fn Callback function for the interval\n     * @param delay Callback delay\n     */\n    protected interval(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearInterval(name);\n            this._intervals[name] = <any>setInterval(() => fn(), delay);\n        } else {\n            throw new Error(\n                name ? 'Cannot create named interval without a name' : 'Cannot create a interval without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named interval\n     * @param name Timer name\n     */\n    protected clearInterval(name: string) {\n        if (this._intervals[name]) {\n            clearInterval(this._intervals[name]);\n            this._intervals[name] = null;\n        }\n    }\n\n    /**\n     * Store named subscription\n     * @param name Name of the subscription\n     * @param unsub Unsubscribe callback or Subscription object\n     */\n    protected subscription(name: string, unsub: Subscription | (() => void)) {\n        this.unsub(name);\n        this._subscriptions[name] = unsub\n    }\n\n    /**\n     * Call unsubscribe callback with the given name\n     * @param name\n     */\n    protected unsub(name: string) {\n        if (this._subscriptions && this._subscriptions[name]) {\n            this._subscriptions[name] instanceof Subscription\n                ? (this._subscriptions[name] as Subscription).unsubscribe()\n                : (this._subscriptions[name] as any)();\n            this._subscriptions[name] = null;\n        }\n    }\n}\n","\nimport { Directive, OnDestroy } from '@angular/core';\nimport { BaseClass } from './base.class';\n\n@Directive({\n    selector: 'a-very-basic-component-base-that-should-not-be-used'\n})\nexport class BaseDirective extends BaseClass implements OnDestroy {\n    public ngOnDestroy(): void {\n        this.destroy();\n    }\n}\n\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\n@Component({\n  selector: 'an-action-field',\n  templateUrl: './action-field.component.html',\n  styleUrls: ['./action-field.component.scss']\n})\nexport class ActionFieldComponent extends BaseDirective {\n    /** Name of the field */\n    @Input() public name: string;\n    /** Value to display on the field */\n    @Input() public placeholder: string;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Emitter for user interaction events */\n    @Output('onAction') public on_action = new EventEmitter();\n    /** Whether to show tooltip */\n    public show_tooltip = false;\n\n    /**\n     * Emit that the user has performed an action on the field\n     */\n    public performAction() {\n        this.show_tooltip = !this.show_tooltip;\n        this.on_action.emit();\n    }\n}\n","<div class=\"action-field\" role=\"button\" [attr.disabled]=\"disabled\" form-field tabindex=\"0\" (keydown.enter)=\"performAction()\">\n    <div class=\"display\" (tapped)=\"performAction()\">{{ placeholder }}</div>\n    <div class=\"icon\" (tapped)=\"performAction()\">\n        <app-icon\n            [icon]=\"{\n                type: 'icon',\n                class: 'material-icons',\n                content: show_tooltip ? 'arrow_drop_up' : 'arrow_drop_down'\n            }\"\n        ></app-icon>\n    </div>\n</div>\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n  selector: 'a-counter',\n  templateUrl: './counter.component.html',\n  styleUrls: ['./counter.component.scss'],\n  providers: [\n      {\n          provide: NG_VALUE_ACCESSOR,\n          /* istanbul ignore next */\n          useExisting: forwardRef(() => CounterComponent),\n          multi: true\n      }\n  ]\n})\nexport class CounterComponent implements ControlValueAccessor {\n    /** Size of a single step */\n    @Input() public step: number = 1;\n    /** Maximum amount for the counter */\n    @Input() public max: number = 10;\n    /** Minimum amount for the counter */\n    @Input() public min: number = 0;\n    /** Current value of the counter */\n    public value: number;\n    /** Whether shift key is being held by the user */\n    public shift_key: boolean;\n    /** Whether control key is being held by the user */\n    public ctrl_key: boolean;\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /**\n     * Add the `step` to the current value\n     */\n    public add() {\n        if (!this.value) { this.value = this.min || 0 }\n        const step = this.ctrl_key ? 100 : this.shift_key ? 10 : this.step || 1;\n        this.value += step;\n        if (this.value > this.max) {\n            this.value = this.max || 10;\n        }\n        this.setValue(this.value);\n    }\n\n    /** Remove the `step` from the current value */\n    public remove() {\n        if (!this.value) { this.value = this.min || 0 }\n        const step = this.ctrl_key ? 100 : this.shift_key ? 10 : this.step || 1;\n        this.value -= step;\n        if (this.value < this.min) {\n            this.value = this.min || 0;\n        }\n        this.setValue(this.value);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.value = value;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n}\n","<div\n    class=\"counter\"\n    (window:keydown.shift)=\"shift_key = true\"\n    (window:keydown.control)=\"ctrl_key = true\"\n    (window:keydown.meta)=\"ctrl_key = true\"\n    (window:keyup.shift)=\"shift_key = false\"\n    (window:keyup.control)=\"ctrl_key = false\"\n    (window:keyup.meta)=\"ctrl_key = false\"\n>\n    <button mat-icon-button name=\"remove\" [disabled]=\"!value || value === min\" (tapped)=\"remove()\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'remove' }\"></app-icon>\n    </button>\n    <div class=\"value\">\n        {{ value || '0' }}\n    </div>\n    <button mat-icon-button name=\"add\" [disabled]=\"value === max\" (tapped)=\"add()\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'add' }\"></app-icon>\n    </button>\n</div>\n","import { Component, OnInit, forwardRef, Input, ViewChild } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\nimport * as dayjs from 'dayjs';\nimport { MatMenuTrigger } from '@angular/material/menu';\n\n@Component({\n    selector: 'a-date-field',\n    templateUrl: './date-field.component.html',\n    styleUrls: ['./date-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateFieldComponent),\n            multi: true\n        }\n    ]\n})\nexport class DateFieldComponent extends BaseDirective implements OnInit, ControlValueAccessor {\n    /** Earliest date available the user is allowed to pick */\n    @Input('from') public _from: number = dayjs().valueOf();\n    /** Latest date available the user is allowed to pick */\n    @Input('to') public _to: number;\n    /** Position of the tooltip */\n    @Input() public position: 'right' | 'left' = 'right';\n    /** Offset of the tooltip */\n    @Input() public offset: 'top' | 'bottom' = 'bottom';\n    /** Whether form control is disabled */\n    @Input() public disabled: boolean;\n    /** Whether to show the calendar tooltip */\n    public show_tooltip: boolean;\n    /** Currently selected date */\n    public date: number;\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    @ViewChild(MatMenuTrigger, { static: true }) private _trigger: MatMenuTrigger;\n\n    /** First allowed date on the calendar */\n    public get from(): number {\n        return this._from || dayjs().startOf('d').valueOf();\n    }\n    /** Current date value */\n    public get until(): number {\n        return this._to || dayjs().endOf('d').add(1, 'y').valueOf();\n    }\n    /** Display value for the current date */\n    public get date_string(): string {\n        return dayjs(this.date).format('DD MMM YYYY');\n    }\n\n    /** Whether date picker is open */\n    public get is_open(): boolean {\n        return this._trigger.menuOpen;\n    }\n\n    public ngOnInit() {\n        this.date = dayjs().valueOf();\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number) {\n        this.date = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n        this.show_tooltip = false;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value;\n        this.show_tooltip = false;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /** Set the state of the tooltip to closed after delay */\n    public closeDatePicker() {\n        this._trigger.closeMenu();\n    }\n\n    /** Set the state of the tooltip to closed after delay */\n    public openDatePicker() {\n        this._trigger.openMenu();\n    }\n}\n","<div\n    class=\"date-field\"\n    role=\"button\"\n    form-field\n    tabindex=\"0\"\n    [class.active]=\"is_open\"\n    [attr.disabled]=\"disabled\"\n    (keydown.enter)=\"openDatePicker()\"\n    [matMenuTriggerFor]=\"appMenu\"\n>\n    <div class=\"display\">{{ date_string }}</div>\n    <div class=\"icon\">\n        <app-icon\n            [icon]=\"{\n                type: 'icon',\n                class: 'material-icons',\n                content: is_open ? 'arrow_drop_up' : 'arrow_drop_down'\n            }\"\n        ></app-icon>\n    </div>\n</div>\n<mat-menu #appMenu=\"matMenu\">\n    <div mat-menu-item class=\"date-picker\" (click)=\"$event.stopPropagation()\">\n        <a-date-picker\n            [ngModel]=\"date\"\n            [options]=\"{ from: from, to: until }\"\n            (ngModelChange)=\"setValue($event); closeDatePicker()\"\n        ></a-date-picker>\n    </div>\n</mat-menu>\n","import { Component, OnInit, forwardRef, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { humaniseDuration } from 'src/app/shared/utilities/general.utilities';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-duration-field',\n    templateUrl: './duration-field.component.html',\n    styleUrls: ['./duration-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DurationFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DurationFieldComponent extends BaseDirective\n    implements OnInit, OnChanges, ControlValueAccessor {\n    /** Maximum duration option available */\n    @Input() public max: number = 240;\n    /** Minimum duration option available */\n    @Input() public min: number = 15;\n    /** Step value between options */\n    @Input() public step: number = 15;\n    /** Reference time for displaying next to durations */\n    @Input() public time: number;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n\n    public duration: number = 60;\n    /** List of available duration options */\n    public duration_options: Identity[];\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    public ngOnInit(): void {\n        this.duration_options = this.generateDurationOptions(this.max, this.min, this.step);\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.max || changes.min || changes.step || changes.time) {\n            this.duration_options = this.generateDurationOptions(this.max, this.min, this.step);\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.duration = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(+new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.duration = value;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    private generateDurationOptions(max: number, min: number, step: number): Identity[] {\n        const blocks: Identity[] = [];\n        let time = min;\n        let date = this.time ? dayjs(this.time) : null;\n        while (time <= max) {\n            blocks.push({\n                id: time,\n                name: date\n                    ? `${date.add(time, 'm').format('h:mm A')} (${humaniseDuration(time)})`\n                    : `${humaniseDuration(time)}`,\n            });\n            time += step;\n        }\n        blocks.push({ id: 7 * 24 * 60, name: '1 week' });\n        return blocks;\n    }\n}\n","<div class=\"duration-field\" [attr.disabled]=\"disabled\">\n    <mat-form-field appearance=\"outline\">\n        <mat-select #select [value]=\"duration\" [disabled]=\"disabled\" (valueChange)=\"setValue($event)\">\n            <mat-option *ngFor=\"let option of duration_options\" [value]=\"option.id\">\n                {{ option.name }}\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n</div>\n","import { Component, forwardRef, Input, ViewChild, OnInit, SimpleChanges, OnChanges } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { MatSelect } from '@angular/material/select';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { timeFormatString } from 'src/app/shared/utilities/general.utilities';\n\nimport * as dayjs from 'dayjs';\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\n\n@Component({\n    selector: 'a-time-field',\n    templateUrl: './time-field.component.html',\n    styleUrls: ['./time-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => TimeFieldComponent),\n            multi: true\n        }\n    ]\n})\nexport class TimeFieldComponent extends BaseDirective implements OnInit, OnChanges, ControlValueAccessor {\n    /** Time step between each allowed time option */\n    @Input() public step: number = 15;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Whether past times are allowed */\n    @Input() public no_past_times: boolean = true;\n    /** String representing the currently set time */\n    public date: number = dayjs().valueOf();\n    /** String representing the currently set time */\n    public time: string = dayjs().format('HH:mm');\n    /** Available time blocks for the selected date */\n    public _time_options: Identity[];\n    /** Whether select field should be shown */\n    public show_select: boolean;\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /** Select field for selecting the time */\n    @ViewChild('select') private select_field: MatSelect;\n\n    public ngOnInit(): void {\n        this.show_select = true;\n        this._time_options = this.generateAvailableTimes(this.date, !this.no_past_times, this.step);\n        this.timeout('hide', () => this.show_select = false);\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.no_past_times || changes.step) {\n            this._time_options = this.generateAvailableTimes(this.date, !this.no_past_times, this.step);\n        }\n    }\n\n    /** Available time blocks for the selected date */\n    public get time_options() {\n        const time = (this.time || '00:00').split(':');\n        const date = dayjs(this.date).hour(+time[0]).minute(+time[1]);\n        if (date.minute() % 15 !== 0 && !this._time_options.find(time => time.id === date.format('HH:mm'))) {\n            this._time_options.push({\n                name: `${date.format(timeFormatString())}`,\n                id: date.format('HH:mm')\n            });\n            this._time_options.sort((a, b) => `${a.id}`.localeCompare(`${b.id}`));\n        }\n        return this._time_options;\n    }\n\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        this.time = new_value;\n        if (this._onChange) {\n            const time = (this.time || '00:00').split(':');\n            const date = dayjs(this.date).hour(+time[0]).minute(+time[1]).startOf('m');\n            this._onChange(date.valueOf());\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value;\n        let date = dayjs(this.date).startOf('m');\n        date = date.minute(Math.ceil(date.minute() / 5) * 5);\n        this.time = date.format('HH:mm');\n        this._time_options = this.generateAvailableTimes(this.date, !this.no_past_times, this.step);\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    /**\n     * Show select field for time options\n     */\n    public showSelect() {\n        this.show_select = true;\n        this.timeout('on_shown', () => {\n            if (this.select_field) {\n                this.select_field.focus();\n                this.select_field.open();\n                this.subscription('listen_close', this.select_field.openedChange.subscribe((state) => {\n                    if (!state) {\n                        this.show_select = false;\n                    }\n                }));\n            }\n        })\n    }\n\n    /**\n     * Generate a list of time options for the given date\n     * @param datestamp Date to generate options for\n     * @param show_past Whether past times should be options\n     */\n    private generateAvailableTimes(datestamp: number, show_past: boolean, step: number = 15): Identity[] {\n        const now = dayjs();\n        let date = dayjs(datestamp);\n        const blocks = [];\n        if (show_past || date.isAfter(now, 'd')) {\n            date = date.startOf('d');\n        }\n        date = date.minute(Math.ceil(date.minute() / step) * step);\n        const end = date.endOf('d');\n        // Add options for the rest of the day\n        while (date.isBefore(end, 'm')) {\n            blocks.push({\n                name: `${date.format(timeFormatString())}`,\n                id: date.format('HH:mm')\n            });\n            date = date.add(step, 'm');\n        }\n        return blocks;\n    }\n}\n","<div\n    class=\"time-field\"\n    role=\"button\"\n    [style.display]=\"show_select ? 'none' : ''\"\n    [attr.disabled]=\"disabled\"\n    form-field\n    tabindex=\"0\"\n    (keydown.enter)=\"showSelect()\"\n>\n    <div class=\"display\">\n        <input\n            matInput\n            type=\"time\"\n            [disabled]=\"disabled\"\n            [ngModel]=\"time\"\n            (ngModelChange)=\"setValue($event)\"\n        />\n    </div>\n    <div class=\"icon\" (tapped)=\"showSelect()\">\n        <app-icon\n            [icon]=\"{\n                type: 'icon',\n                class: 'material-icons',\n                content: show_select ? 'arrow_drop_up' : 'arrow_drop_down'\n            }\"\n        ></app-icon>\n    </div>\n</div>\n<mat-form-field appearance=\"outline\" *ngIf=\"show_select\">\n    <mat-select #select [value]=\"time\" [disabled]=\"disabled\" (valueChange)=\"setValue($event)\">\n        <mat-option *ngFor=\"let option of time_options\" [value]=\"option.id\">\n            {{ option.name }}\n        </mat-option>\n    </mat-select>\n</mat-form-field>\n","import { Component, OnInit, forwardRef, Output, EventEmitter, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subject, Observable, of } from 'rxjs';\nimport { switchMap, debounceTime, distinctUntilChanged, map, catchError } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport {\n    filterList,\n    matchToHighlight,\n    downloadFile,\n    csvToJson,\n} from 'src/app/shared/utilities/general.utilities';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: 'a-user-list-field',\n    templateUrl: './user-list-field.component.html',\n    styleUrls: ['./user-list-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UserListFieldComponent extends BaseDirective implements OnInit, ControlValueAccessor {\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Number of characters needed before a search will start */\n    @Input() public limit: number = 3;\n    /** Emitter for action to make a new user */\n    @Output('newUser') public new_user = new EventEmitter<void>();\n\n    /** User list to display */\n    public user_list: User[];\n    /** List of active selected users on the list */\n    public active_list: User[];\n    /** Whether user list is loading */\n    public loading: boolean;\n    /** String  */\n    public search_str: string;\n    /** List of users from an API search */\n    public search_results$: Observable<User[]>;\n    /** Subject holding the value of the search */\n    public search$ = new Subject<string>();\n\n    /** Form control on change handler */\n    private _onChange: (_: User[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User[]) => void;\n\n    constructor(private _service: ApplicationService, private _users: UsersService) {\n        super();\n    }\n\n    ngOnInit() {\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(400),\n            distinctUntilChanged(),\n            switchMap((query) => {\n                this.loading = true;\n                return query.length >= this.limit\n                    ? this._users.query({\n                          q: query.slice(0, Math.max(this.limit, 3)),\n                          cache: 60 * 1000,\n                      })\n                    : Promise.resolve([]);\n            }),\n            catchError((_) => of([])),\n            map((list: User[]) => {\n                this.loading = false;\n                return filterList(this.search_str, list, ['name', 'email']);\n            })\n        );\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe((list) => {\n                this.user_list = list;\n                this.user_list.forEach((i: any) => {\n                    i.match_name = matchToHighlight(i.match_name);\n                    i.match_email = matchToHighlight(i.match_email);\n                    return i;\n                });\n            })\n        );\n    }\n\n    /**\n     * Add user to the user list\n     * @param user\n     */\n    public addUser(user: User) {\n        /* istanbul ignore else */\n        if (!this.active_list) {\n            this.active_list = [];\n        }\n        const index = this.active_list.findIndex((a_user) => a_user.id === user.id);\n        /* istanbul ignore else */\n        if (index < 0) {\n            this.active_list = [...this.active_list, user];\n        }\n        this.setValue(this.active_list);\n        this.search_str = '';\n    }\n\n    /**\n     * Remove user from the user list\n     * @param user\n     */\n    public removeUser(user: User) {\n        this.active_list = this.active_list.filter((a_user) => a_user.id !== user.id);\n        this.setValue(this.active_list);\n    }\n\n    /**\n     * Load CSV file and populate the user list with the contents\n     * @param event File input field event\n     */\n    public addUsersFromFile(event) {\n        /* istanbul ignore else */\n        if (event.target) {\n            const file = event.target.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    this.processCsvData((evt.srcElement as any).result);\n                    event.target.value = '';\n                });\n                reader.addEventListener('error', (_) =>\n                    this._service.notifyError('Error reading file.')\n                );\n            }\n        }\n    }\n\n    /**\n     * Process raw CSV data and save user data to attendee list\n     * @param data CSV data\n     */\n    private processCsvData(data: string) {\n        const list = csvToJson(data) || [];\n        const id = this._users.current.staff_code;\n        list.forEach((el) => {\n            el.name = el.name || `${el.first_name} ${el.last_name}`;\n            const display = (el.name || `${Math.floor(Math.random() * 9999_9999)}`)\n                .split(' ')\n                .join('_')\n                .toLowerCase();\n            /* istanbul ignore else */\n            if (!el.email) {\n                el.email = `${display}+${id}@guest.mckinsey.com`;\n            }\n            el.type = 'external';\n            this.addUser(new User(el));\n        });\n    }\n\n    /* istanbul ignore next */\n    /** Download template CSV file */\n    public downloadCSVTemplate() {\n        const template = `Organisation Name,First Name,Last Name,Email,Phone\\nFake Org,John,Smith,john.smith@example.com,01234567898`;\n        downloadFile('template.csv', template);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User[]): void {\n        this.active_list = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User[]) {\n        this.active_list = value;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User[]) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User[]) => void): void {\n        this._onTouch = fn;\n    }\n}\n","<div class=\"user-list-field\" form-field [attr.disabled]=\"disabled\">\n    <mat-form-field appearance=\"outline\">\n        <input\n            matInput\n            name=\"user-search\"\n            [(ngModel)]=\"search_str\"\n            (ngModelChange)=\"search$.next($event)\"\n            [disabled]=\"disabled\"\n            placeholder=\"Search for user...\"\n            i18n-placeholder\n            [matAutocomplete]=\"auto\"\n        />\n        <div class=\"prefix\" matPrefix>\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'search' }\"\n            ></app-icon>\n        </div>\n        <div class=\"suffix\" matSuffix *ngIf=\"loading\">\n            <mat-spinner diameter=\"16\"></mat-spinner>\n        </div>\n    </mat-form-field>\n    <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"addUser($event.option.value)\">\n        <mat-option *ngFor=\"let option of user_list\" [value]=\"option\">\n            <div class=\"name\">{{ option.name }}</div>\n            <div class=\"email\">{{ option.email }}</div>\n        </mat-option>\n    </mat-autocomplete>\n    <div class=\"actions\">\n        <button type=\"button\" name=\"new-contact\" matRipple (tapped)=\"new_user.emit()\" i18n=\"Add new external attendee\">\n            New Contact\n        </button>\n        <button type=\"button\" name=\"upload-csv\" matRipple i18n=\"Upload attendee list from CSV file\">\n            Upload CSV\n            <input type=\"file\" (change)=\"addUsersFromFile($event)\" />\n        </button>\n        <button type=\"button\" name=\"download-template\" matRipple (tapped)=\"downloadCSVTemplate()\" i18n=\"Download template CSV file\">\n            CSV Template\n        </button>\n    </div>\n    <div class=\"user-list\">\n        <mat-chip-list\n            aria-label=\"User List\"\n            *ngIf=\"active_list && active_list.length; else empty_state\"\n        >\n            <mat-chip\n                *ngFor=\"let user of active_list\"\n                [id]=\"user.email\"\n                [color]=\"user.external ? 'accent' : 'primary'\"\n                [removable]=\"true\"\n                (removed)=\"removeUser(user)\"\n            >\n                {{ user.name }}\n                <app-icon\n                    matChipRemove\n                    [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"\n                ></app-icon>\n            </mat-chip>\n        </mat-chip-list>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div i18n=\"Attendee empty state\">No attendees</div>\n</ng-template>\n","import { Component, OnInit, forwardRef, Input } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { Subject, Observable, of } from 'rxjs';\nimport { switchMap, debounceTime, distinctUntilChanged, map, catchError } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { filterList, matchToHighlight } from 'src/app/shared/utilities/general.utilities';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: 'a-user-search-field',\n    templateUrl: './user-search-field.component.html',\n    styleUrls: ['./user-search-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserSearchFieldComponent),\n            multi: true\n        }\n    ]\n})\nexport class UserSearchFieldComponent extends BaseDirective implements OnInit, ControlValueAccessor {\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Limit available options to these */\n    @Input() public options: User[];\n    /** Currently selected user */\n    public active_user: User;\n    /** User list to display */\n    public user_list: User[];\n    /** Whether user list is loading */\n    public loading: boolean;\n    /** Current display value of the search input field  */\n    public search_str: string;\n    /** List of users from an API search */\n    public search_results$: Observable<User[]>;\n    /** Subject holding the value of the search */\n    public search$ = new Subject<string>();\n\n    /** Form control on change handler */\n    private _onChange: (_: User) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User) => void;\n\n    constructor(private _users: UsersService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(400),\n            distinctUntilChanged(),\n            switchMap(query => {\n                this.loading = true;\n                return this.options && this.options.length > 0\n                    ? Promise.resolve(this.options)\n                    : query.length >= 3\n                        ? (this._users.query({ q: query.slice(0, 3), cache: 60 * 1000 }) as Promise<User[]>)\n                        : Promise.resolve([]);\n            }),\n            catchError((err) => of([])),\n            map((list: User[]) => {\n                this.loading = false;\n                return filterList(this.search_str, list, ['name', 'email']);\n            })\n        );\n        // Process API results\n        this.subscription('search_results', this.search_results$.subscribe(list => {\n            this.user_list = list;\n            this.user_list.forEach((i: any) => {\n                i.match_name = matchToHighlight(i.match_name);\n                i.match_email = matchToHighlight(i.match_email);\n                return i;\n            });\n        }));\n    }\n\n    /**\n     * Reset the search string back to the name of the active user\n     */\n    public resetSearchString() {\n        if (this.active_user) {\n            this.search_str = this.active_user.name;\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User): void {\n        this.active_user = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n        this.resetSearchString();\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User) {\n        this.active_user = value;\n        this.resetSearchString();\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User) => void): void {\n        this._onTouch = fn;\n    }\n}\n","<div class=\"user-search-field\" form-field>\n    <mat-form-field appearance=\"outline\">\n        <input\n            matInput\n            name=\"user-search\"\n            [(ngModel)]=\"search_str\"\n            (ngModelChange)=\"search$.next($event)\"\n            [disabled]=\"disabled\"\n            placeholder=\"Search for user...\"\n            i18n-placeholder\n            [matAutocomplete]=\"auto\"\n            (blur)=\"resetSearchString()\"\n        />\n        <div class=\"prefix\" matPrefix>\n            <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'search' }\"></app-icon>\n        </div>\n        <div class=\"suffix\" matSuffix *ngIf=\"loading\">\n            <mat-spinner diameter=\"16\"></mat-spinner>\n        </div>\n    </mat-form-field>\n    <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"setValue($event.option.value)\">\n        <mat-option *ngFor=\"let option of user_list\" [value]=\"option\">\n            <div class=\"name\">{{ option.name }}</div>\n            <div class=\"email\">{{ option.email }}</div>\n        </mat-option>\n    </mat-autocomplete>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\n\nimport { BaseDirective } from '../../base.directive';\n\n@Component({\n    selector: 'feedback',\n    templateUrl: './feedback.template.html',\n    styleUrls: ['./feedback.styles.scss']\n})\nexport class FeedbackComponent extends BaseDirective implements OnInit {\n    /** Name of the currently active page */\n    public current_page: string;\n\n    constructor(private _router: Router) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.timeout('Getting Title', () => this.updateRoute(document.title));\n        this._router.events.subscribe((event: NavigationEnd) => {\n            /* istanbul ignore else */\n            if (event instanceof NavigationEnd) {\n                this.timeout('Getting Title', () => this.updateRoute(document.title));\n            }\n        });\n    }\n\n    public updateRoute(location) {\n        location = location.substr(0, location.indexOf(' |'));\n        this.current_page = location;\n    }\n}\n","<a [href]=\"'mailto:converge_feedback@mckinsey.com?subject=Feedback for page: ' + current_page\">\n    <div class=\"feedback-button\">\n        <span class=\"text\" i18n>Feedback</span>\n        <span class=\"icon\">\n            <app-icon [icon]=\"{class:'material-icons', content: 'feedback'}\"></app-icon>\n        </span>\n    </div>\n</a>\n","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from '../../base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { ApplicationLink } from '../../utilities/settings.interfaces';\n\n@Component({\n    selector: 'a-footer-menu',\n    templateUrl: './footer-menu.component.html',\n    styleUrls: ['./footer-menu.component.scss']\n})\nexport class FooterMenuComponent extends BaseDirective implements OnInit {\n\n    /** Tiles to display on the home page */\n    public tiles: ApplicationLink[] = [];\n\n    constructor(private _service: ApplicationService) {\n        super();\n    }\n\n    /** Angular Component initialisation lifecycle hook */\n    public ngOnInit(): void {\n        this._service.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.tiles = this._service.setting('app.home.tiles') || [];\n        });\n    }\n}\n","<div class=\"footer-menu\" *ngIf=\"tiles && tiles.length\">\n    <ng-container *ngFor=\"let item of tiles\">\n        <a *ngIf=\"item.route\" [routerLink]=\"[item.route]\" routerLinkActive=\"active\">\n            <div class=\"tile\">\n                <div class=\"icon\">\n                    <app-icon [icon]=\"item.icon\"></app-icon>\n                </div>\n                <div class=\"text\">{{ item.name }}</div>\n            </div>\n        </a>\n        <a *ngIf=\"!item.route\" [href]=\"item.link | safe: 'url'\">\n            <div class=\"tile\">\n                <div class=\"icon\">\n                    <app-icon [icon]=\"item.icon\"></app-icon>\n                </div>\n                <div class=\"text\">{{ item.name }}</div>\n            </div>\n        </a>\n    </ng-container>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from '../../../base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { NewUserModalComponent } from 'src/app/overlays/new-user-modal/new-user-modal.component';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\nimport { User } from 'src/app/services/data/users/user.class';\nimport {\n    SpaceSelectModalComponent,\n    SpaceSelectModalData,\n} from 'src/app/overlays/space-select-modal/space-select-modal.component';\nimport {\n    RecurrenceModalData,\n    RecurrenceModalComponent,\n} from 'src/app/overlays/recurrence-modal/recurrence-modal.component';\n\nimport * as dayjs from 'dayjs';\nimport { UsersService } from 'src/app/services/data/users/users.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\n@Component({\n    selector: 'a-booking-form',\n    templateUrl: './booking-form.component.html',\n    styleUrls: ['./booking-form.component.scss'],\n})\nexport class BookingFormComponent extends BaseDirective {\n    /** Form fields for booking */\n    @Input() public form: FormGroup;\n    /** List of available users to host bookings */\n    public user_list: User[] = [];\n\n    constructor(\n        private _service: ApplicationService,\n        private _users: UsersService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._users.initialised.pipe(first((_) => _)).subscribe(() => {\n            const user: User = this._users.current;\n            const delegates = user.delegates.map(\n                (email) => this._users.find(email) || new User({ email, name: email.split('@')[0] })\n            );\n            this.user_list = [user].concat(delegates);\n        });\n    }\n\n    /** Display string for the recurrence value of the booking */\n    public get recurrence(): string {\n        const recurrence = this.form.controls.recurrence\n            ? this.form.controls.recurrence.value\n            : null;\n        const periods = ['None', 'Daily', 'Weekly', 'Biweekly', 'Monthly'];\n        if (!recurrence || !recurrence.period || (recurrence.period as any) >= periods.length) {\n            return 'No recurrence';\n        }\n        const period =\n            typeof recurrence.period === 'string' ? recurrence.period : periods[recurrence.period];\n        const end = recurrence.end\n            ? `until ${dayjs(recurrence.end).format('DD MMM YYYY')}`\n            : 'forever';\n        return `${period} ${end}`;\n    }\n\n    /** Whether notes and description should use the HTML editor */\n    public get use_html(): boolean {\n        return this._service.setting('app.booking.html_body') || false;\n    }\n\n    /** List of available types for bookings */\n    public get booking_types(): Identity[] {\n        return this._service.setting('app.booking.booking_types') || [];\n    }\n\n    /** Display string for the list of active spaces */\n    public get spaces(): string {\n        const spaces = this.form.controls.space_list.value || [];\n        const space = spaces[0];\n        return spaces.length === 1\n            ? space.name\n            : spaces.length > 1\n            ? `${spaces.length} spaces selected`\n            : 'No Spaces selected';\n    }\n\n    /**\n     * Open modal to change the space details for the booking\n     */\n    public openSpacesModal(): void {\n        const ref = this._dialog.open<SpaceSelectModalComponent, SpaceSelectModalData>(\n            SpaceSelectModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                maxWidth: '95vw',\n                data: {\n                    spaces: this.form.controls.space_list.value,\n                    date: this.form.controls.date.value,\n                    duration: this.form.controls.duration.value,\n                    host: this.form.controls.organiser.value,\n                    multiple: true,\n                },\n            }\n        );\n        this.subscription(\n            'new_spaces',\n            ref.componentInstance.event.subscribe((event) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    let space_list = this.form.controls.space_list.value || [];\n                    space_list = event.metadata;\n                    this.form.controls.space_list.setValue(unique(space_list, 'id'));\n                    ref.close();\n                    this.unsub('new_spaces');\n                }\n            })\n        );\n    }\n\n    /**\n     * Open modal to change the recurrence details for the booking\n     */\n    public openRecurrenceModal() {\n        const ref = this._dialog.open<RecurrenceModalComponent, RecurrenceModalData>(\n            RecurrenceModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                maxWidth: '95vw',\n                data: {\n                    details: this.form.controls.recurrence.value,\n                    date: this.form.controls.date.value,\n                },\n            }\n        );\n        this.subscription(\n            'recurrence',\n            ref.componentInstance.event.subscribe((event) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    this.form.controls.recurrence.setValue(\n                        event.metadata && event.metadata.period !== 'none' ? event.metadata : {}\n                    );\n                    ref.close();\n                    this.unsub('recurrence');\n                }\n            })\n        );\n    }\n\n    /**\n     * Open modal to change the recurrence details for the booking\n     */\n    public openNewUserModal() {\n        const ref = this._dialog.open<NewUserModalComponent>(NewUserModalComponent, {\n            width: 'auto',\n            height: 'auto',\n        });\n        this.subscription(\n            'new_user',\n            ref.componentInstance.event.subscribe((event) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    const attendees = this.form.controls.attendees.value || [];\n                    attendees.push(event.metadata);\n                    this.form.controls.attendees.setValue(unique(attendees, 'email'));\n                    ref.close();\n                    this.unsub('new_user');\n                }\n            })\n        );\n    }\n}\n","<div class=\"booking-form\" *ngIf=\"form\" [formGroup]=\"form\">\n    <div\n        class=\"field\"\n        *ngIf=\"form.controls.id && form.controls.id.value && form.controls.space_list\"\n    >\n        <label for=\"spaces\" i18n=\"Booking form spaces label\">Spaces: </label>\n        <an-action-field\n            name=\"spaces\"\n            [placeholder]=\"spaces\"\n            (onAction)=\"openSpacesModal()\"\n        ></an-action-field>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.title\">\n        <label\n            for=\"title\"\n            [class.error]=\"form.controls.title.invalid && form.controls.title.touched\"\n            i18n=\"Booking form title label\"\n        >\n            Title<span>*</span>:\n        </label>\n        <mat-form-field appearance=\"outline\">\n            <input matInput name=\"title\" placeholder=\"Meeting Title\" i18n-placeholder formControlName=\"title\" />\n\n            <mat-error *ngIf=\"form.controls.title.invalid\" i18n=\"Booking form title error\"\n                >Title is required</mat-error\n            >\n        </mat-form-field>\n    </div>\n    <div class=\"group date\">\n        <div class=\"field\" *ngIf=\"form.controls.date\">\n            <label for=\"date\" i18n=\"Booking form date label\">Date: </label>\n            <a-date-field name=\"date\" formControlName=\"date\"></a-date-field>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.recurrence\">\n            <label for=\"recurrence\" i18n=\"Booking form recurrence label\">Recurrence: </label>\n            <an-action-field\n                name=\"recurrence\"\n                [placeholder]=\"recurrence\"\n                (onAction)=\"openRecurrenceModal()\"\n            ></an-action-field>\n        </div>\n    </div>\n    <div class=\"group time\">\n        <div class=\"field\" *ngIf=\"form.controls.date\">\n            <label for=\"start-time\" i18n=\"Booking form start time label\">Start Time: </label>\n            <a-time-field\n                name=\"start-time\"\n                [disabled]=\"form.controls.all_day?.value\"\n                [ngModel]=\"form.controls.date.value\"\n                (ngModelChange)=\"form.controls.date.setValue($event)\"\n                [ngModelOptions]=\"{ standalone: true }\"\n            ></a-time-field>\n            <div class=\"error info\" *ngIf=\"form.controls.date.touched && form.controls.date.invalid\">\n                Date and time must be in the future\n            </div>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.duration\">\n            <div class=\"label-group\">\n                <label for=\"duration\" i18n=\"Booking form duration label\">Duration: </label>\n                <mat-checkbox\n                    formControlName=\"all_day\"\n                    *ngIf=\"form.controls.all_day\"\n                    i18n=\"Booking form all day label\"\n                    >All day booking</mat-checkbox\n                >\n            </div>\n            <a-duration-field\n                name=\"duration\"\n                [max]=\"720\"\n                [disabled]=\"form.controls.all_day?.value\"\n                [time]=\"form.controls.date?.value\"\n                formControlName=\"duration\"\n            ></a-duration-field>\n            <div class=\"error info\" *ngIf=\"form.controls.duration.touched && form.controls.duration.invalid\">\n                Duration is invalid. End time must be in the future\n            </div>\n        </div>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.organiser\">\n        <label for=\"organiser\" i18n=\"Booking form organiser label\">Host: </label>\n        <mat-form-field appearance=\"outline\">\n            <mat-select\n                name=\"organiser\"\n                formControlName=\"organiser\"\n                [placeholder]=\"form.controls.organiser.value.name || form.controls.organiser.value.email\"\n            >\n                <mat-option *ngFor=\"let user of user_list\" [value]=\"user\">\n                    {{ user.name || user.email }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.attendees\">\n        <label for=\"attendees\" i18n=\"Booking form attendees label\">Attendees: </label>\n        <a-user-list-field\n            name=\"attendees\"\n            formControlName=\"attendees\"\n            (newUser)=\"openNewUserModal()\"\n        ></a-user-list-field>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.type && booking_types.length > 1\">\n        <label for=\"booking-type\" i18n=\"Booking form booking type label\">Booking Type: </label>\n        <mat-form-field appearance=\"outline\">\n            <mat-select name=\"booking-type\" formControlName=\"type\">\n                <mat-option *ngFor=\"let type of booking_types\" [value]=\"type.id\">\n                    {{ type.name }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.needs_space\">\n        <mat-checkbox formControlName=\"needs_space\" i18n=\"Booking form need space label\"\n            >Need a meeting space?</mat-checkbox\n        >\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.has_catering\">\n        <mat-checkbox\n            [disabled]=\"!form.controls.needs_space.value\"\n            formControlName=\"has_catering\"\n            i18n=\"Booking form need catering label\"\n        >\n            Need catering?\n        </mat-checkbox>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.body\">\n        <label for=\"body\" i18n=\"Booking form notes label\">Notes: </label>\n        <mat-form-field name=\"body\" appearance=\"outline\" *ngIf=\"!use_html; else html_editor\">\n            <textarea\n                matInput\n                name=\"description\"\n                placeholder=\"Meeting Description\"\n                i18n-placeholder\n                formControlName=\"body\"\n            ></textarea>\n        </mat-form-field>\n        <ng-template #html_editor>\n            <editor formControlName=\"body\"></editor>\n        </ng-template>\n    </div>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'user-form',\n  templateUrl: './user-form.component.html',\n  styleUrls: ['./user-form.component.scss']\n})\nexport class UserFormComponent {\n    /** Group of form fields used for creating the system */\n    @Input() public form: FormGroup;\n}\n","<div class=\"user form\" *ngIf=\"form\">\n    <form [formGroup]=\"form\">\n        <div class=\"field\" *ngIf=\"form.controls.name\">\n            <label\n                for=\"first-name\"\n                [class.error]=\"form.controls.name.invalid && form.controls.name.touched\"\n                i18n=\"User form first name label\"\n                >First Name:</label\n            >\n            <mat-form-field appearance=\"outline\">\n                <input\n                    matInput\n                    name=\"first-name\"\n                    placeholder=\"First name\"\n                    i18n-placeholder\n                    formControlName=\"first_name\"\n                />\n                <mat-error i18n=\"User form first name error\">First name is required</mat-error>\n            </mat-form-field>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.name\">\n            <label\n                for=\"system-name\"\n                [class.error]=\"form.controls.name.invalid && form.controls.name.touched\"\n                i18n=\"User form last name label\"\n                >Last Name:</label\n            >\n            <mat-form-field appearance=\"outline\">\n                <input\n                    matInput\n                    name=\"last-name\"\n                    placeholder=\"Last name\"\n                    i18n-placeholder\n                    formControlName=\"last_name\"\n                />\n                <mat-error i18n=\"User form last name error\">Last name is required</mat-error>\n            </mat-form-field>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.email\">\n            <label\n                for=\"email\"\n                [class.error]=\"form.controls.email.invalid && form.controls.email.touched\"\n                i18n=\"User form email label\"\n                >Email<span>*</span>:</label\n            >\n            <mat-form-field appearance=\"outline\">\n                <input matInput name=\"email\" placeholder=\"Email Address\" i18n-placeholder formControlName=\"email\" />\n                <mat-error i18n=\"User form email error\">A valid email is required</mat-error>\n            </mat-form-field>\n        </div>\n    </form>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from '../../utilities/settings.interfaces';\nimport { BaseDirective } from '../../base.directive';\n\n@Component({\n    selector: 'app-icon',\n    templateUrl: './icon.component.html',\n    styleUrls: ['./icon.component.scss']\n})\nexport class IconComponent extends BaseDirective {\n    @Input() public icon: ApplicationIcon;\n}\n","<div class=\"app-icon\" *ngIf=\"icon\">\n    <i *ngIf=\"icon.type !== 'img'\" [class]=\"icon.class\">{{ icon.content }}</i>\n    <img *ngIf=\"icon.type === 'img'\" [src]=\"icon.src | safe:'resource'\" />\n</div>","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from '../../base.directive';\nimport { ApplicationIcon } from '../../utilities/settings.interfaces';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent extends BaseDirective implements OnInit {\n    /** Logo of the application organisation */\n    public logo: ApplicationIcon;\n    /** Whether the user credentials are being checked */\n    public loading: boolean;\n    /** Form fields for the login form */\n    public form: FormGroup;\n\n    constructor(private _service: ApplicationService, private _users: UsersService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.loading = true;\n        this.form = new FormGroup({\n            username: new FormControl('', [Validators.required]),\n            password: new FormControl('', [Validators.required]),\n        });\n        this._service.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.loading = false;\n            this.logo = this._service.setting('app.logo_light') || { type: 'icon' };\n        });\n    }\n\n    /** Perform user login */\n    public login() {\n        this.loading = true;\n        const form = this.form.value;\n        this._users.login({\n            username: form.username,\n            password: form.password\n        }, { form: true }).then(() => {\n            this.loading = false;\n        }, () => {\n            this.loading = false;\n            this.form.controls.password.setErrors({ check: true });\n        });\n    }\n\n}\n","<div class=\"login\">\n    <div class=\"login-form\">\n        <form [formGroup]=\"form\">\n            <div class=\"header\" [style.background-color]=\"logo?.background\">\n                <div class=\"logo\">\n                    <i *ngIf=\"logo?.type === 'icon'\" [class]=\"logo.class\">{{ logo.content }}</i>\n                    <img *ngIf=\"logo?.type === 'img'\" [src]=\"logo.src | safe: 'resource'\" />\n                </div>\n            </div>\n            <div class=\"body\">\n                <ng-container *ngIf=\"!loading; else loading_state\">\n                    <div class=\"field\">\n                        <label\n                            for=\"username\"\n                            [class.error]=\"\n                                form.controls.username.invalid && form.controls.username.touched\n                            \"\n                            i18n=\"Login form username label\"\n                        >\n                            Username:\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"username\"\n                                placeholder=\"Username/Email\"\n                                i18n-placeholder\n                                formControlName=\"username\"\n                            />\n                            <mat-error i18n=\"Login form username error\"\n                                >Username is required</mat-error\n                            >\n                        </mat-form-field>\n                    </div>\n                    <div class=\"field\">\n                        <label\n                            for=\"password\"\n                            [class.error]=\"\n                                form.controls.password.invalid && form.controls.password.touched\n                            \"\n                            i18n=\"Login form password label\"\n                        >\n                            Password:\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"password\"\n                                placeholder=\"Password\"\n                                i18n-placeholder\n                                formControlName=\"password\"\n                                (keyup.enter)=\"login()\"\n                            />\n                            <mat-error i18n=\"Login form password error\"\n                                >Invalid username or password</mat-error\n                            >\n                        </mat-form-field>\n                    </div>\n                </ng-container>\n            </div>\n            <div class=\"footer\" *ngIf=\"!loading\">\n                <button mat-button (tapped)=\"login()\" i18n=\"Login action\">Login</button>\n            </div>\n        </form>\n    </div>\n</div>\n<ng-template #loading_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <mat-spinner diameter=\"64\"></mat-spinner>\n        </div>\n        <div class=\"text\" i18n=\"Checking login status\">Checking user credentials...</div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { BuildingLevel } from 'src/app/services/data/organisation/level.class';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\n@Component({\n    selector: 'a-map-controls',\n    templateUrl: './map-controls.component.html',\n    styleUrls: ['./map-controls.component.scss']\n})\nexport class MapControlsComponent extends BaseDirective implements OnInit {\n    /** ID of the active building */\n    @Input() public building: string;\n    /** ID of the active level */\n    @Input() public level: string;\n    /** Emitter for changes to the active level */\n    @Output() public levelChange = new EventEmitter<string>();\n    /** List of available buildings */\n    public building_list: Building[] = [];\n    /** List of available levels */\n    public level_list: BuildingLevel[] = [];\n\n    public get can_select_building(): boolean {\n        return !!this._service.setting('app.explore.can_select_building');\n    }\n\n    constructor(\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _service: ApplicationService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._org.listen('buildings').pipe(first(_ => _ && _.length)).subscribe(() => {\n            this.subscription(\n                'route.query',\n                this._route.queryParamMap.subscribe(params => {\n                    /* istanbul ignore else */\n                    if (params.has('level')) {\n                        const level_id = params.get('level');\n                        const level = this._org.levelWithID(level_id);\n                        this.level = level.id;\n                        this.setBuilding(level.building_id);\n                        this.levelChange.emit(this.level);\n                        this.clearTimeout('check_building');\n                    }\n                })\n            );\n            this.building_list = this._org.buildings;\n            this.timeout('check_building', () => {\n                /* istanbul ignore else */\n                if (!this.building) {\n                    this.setBuilding(this._org.building.id);\n                }\n                this.levelChange.emit(this.level);\n            });\n        });\n    }\n\n    public setBuilding(bld_id: string) {\n        const building = this._org.buildings.find(bld => bld.id === bld_id);\n        /* istanbul ignore else */\n        if (building) {\n            this.building = bld_id;\n            this.level_list = building.levels;\n            /* istanbul ignore else */\n            if (this.level_list.length && !this.level_list.find(lvl => lvl.id === this.level)) {\n                this.updateLevel(this.level_list[0].id);\n            }\n        }\n    }\n\n    public updateLevel(lvl_id: string) {\n        this.level = lvl_id;\n        this.levelChange.emit(this.level);\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParamsHandling: 'merge',\n            queryParams: { level: lvl_id }\n        });\n    }\n}\n","<div class=\"map-controls\">\n    <mat-form-field\n        class=\"map\"\n        appearance=\"outline\"\n        *ngIf=\"can_select_building && building_list.length > 1\"\n    >\n        <mat-select [value]=\"building\" (valueChange)=\"setBuilding($event)\">\n            <mat-option *ngFor=\"let bld of building_list\" [value]=\"bld.id\">\n                {{ bld.name }}\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n    <mat-form-field class=\"map\" appearance=\"outline\">\n        <mat-select [(value)]=\"level\" (valueChange)=\"updateLevel($event)\">\n            <mat-option *ngFor=\"let level of level_list\" [value]=\"level.id\">\n                {{ level.name }}\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from '../../base.directive';\nimport { OverlayMenuSettings, ApplicationLink } from '../../utilities/settings.interfaces';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-overlay-menu',\n    templateUrl: './overlay-menu.component.html',\n    styleUrls: ['./overlay-menu.component.scss']\n})\nexport class OverlayMenuComponent extends BaseDirective {\n    /** Whether to show the menu */\n    @Input() public show: boolean;\n    /** Emitter for changes to show */\n    @Output() public showChange = new EventEmitter<boolean>();\n\n    /** List of links to display on the menu */\n    public get menu_items(): ApplicationLink[] {\n        const settings = this._service.setting('app.general.menu') || { items: [] };\n        return settings.items || [];\n    }\n\n    /** Copyright details for the application */\n    public get copyright(): string {\n        return (this._service.setting('app.general.menu') || {}).copyright || '';\n    }\n\n    public get settings() {\n        const settings = this._service.setting('app.general.menu') || { position: '' };\n        return settings;\n    }\n\n    constructor(private _service: ApplicationService) {\n        super();\n    }\n\n    /** Current year to display for copyright */\n    public get year(): number {\n        return dayjs().year();\n    }\n\n    /** Close the overlay menu */\n    public close() {\n        this.show = false;\n        this.showChange.emit(this.show);\n    }\n\n    public delayedClose() {\n        this.timeout('close', () => this.close(), 50);\n    }\n\n    public cancelClose() {\n        this.timeout('cancel_close', () => this.clearTimeout('close'), 10);\n    }\n}\n","<div\n    class=\"overlay-menu\"\n    [class.left]=\"settings?.position === 'left'\"\n    [class.middle]=\"settings?.position === 'middle'\"\n    [class.show]=\"show\"\n    (tapped)=\"delayedClose()\"\n>\n    <div class=\"menu\" (tapped)=\"cancelClose()\">\n        <div class=\"header\">\n            <div class=\"location\"></div>\n            <button mat-icon-button (tapped)=\"close()\">\n                <app-icon\n                    [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"\n                ></app-icon>\n            </button>\n        </div>\n        <div class=\"body\">\n            <ul>\n                <ng-container *ngFor=\"let item of menu_items\">\n                    <ng-container *ngIf=\"item.route; else external_link\">\n                        <a\n                            [routerLink]=\"[item.route]\"\n                            routerLinkActive=\"active\"\n                            [queryParams]=\"item.query_params\"\n                        >\n                            <li>\n                                <div class=\"text\">{{ item.name }}</div>\n                                <app-icon\n                                    [icon]=\"{\n                                        type: 'icon',\n                                        class: 'material-icons',\n                                        content: 'keyboard_arrow_right'\n                                    }\"\n                                ></app-icon>\n                            </li>\n                        </a>\n                        <ng-container *ngIf=\"item.children && item.children.length\">\n                            <a\n                                *ngFor=\"let sub_item of item.children\"\n                                class=\"sub-link\"\n                                [routerLink]=\"[sub_item.route]\"\n                                routerLinkActive=\"active\"\n                                [queryParams]=\"sub_item.query_params\"\n                            >\n                                <li>\n                                    <div class=\"text\">{{ sub_item.name }}</div>\n                                    <app-icon\n                                        [icon]=\"{\n                                            type: 'icon',\n                                            class: 'material-icons',\n                                            content: 'keyboard_arrow_right'\n                                        }\"\n                                    ></app-icon>\n                                </li>\n                            </a>\n                        </ng-container>\n                    </ng-container>\n                    <ng-template #external_link>\n                        <a [href]=\"item.link | safe: 'url'\">\n                            <li>\n                                <div class=\"text\">{{ item.name }}</div>\n                                <app-icon\n                                    [icon]=\"{\n                                        type: 'icon',\n                                        class: 'material-icons',\n                                        content: 'exit_to_app'\n                                    }\"\n                                ></app-icon>\n                            </li>\n                        </a>\n                    </ng-template>\n                </ng-container>\n            </ul>\n        </div>\n        <div class=\"footer\" *ngIf=\"copyright\" i18n=\"Copyright\">\n            Copyright &copy; {{ year }} {{ copyright }}\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, Input, ContentChildren, Output, EventEmitter } from '@angular/core';\nimport { ApplicationIcon } from '../../utilities/settings.interfaces';\nimport { BaseDirective } from '../../base.directive';\n\nexport interface PopoutAction extends ApplicationIcon {\n    /** ID of the action */\n    id: string;\n}\n\n@Component({\n    selector: 'a-popout-menu',\n    templateUrl: './popout-menu.component.html',\n    styleUrls: ['./popout-menu.component.scss']\n})\nexport class PopoutMenuComponent extends BaseDirective {\n    /** List of available actions */\n    @Input() public actions: PopoutAction[] = [];\n    /** Emitter for user actions */\n    @Output() public action = new EventEmitter<string>();\n    /** Whether actions should show */\n    public show: boolean;\n\n    public close() {\n        this.timeout('close', () => {\n            this.show = false;\n        });\n    }\n}\n","<button\n    mat-icon-button\n    [class.small]=\"true\"\n    name=\"action\"\n    *ngFor=\"let item of actions; let i = index\"\n    [style.top]=\"show ? (-110 * i - 60) + '%' : ''\"\n    (tapped)=\"action.emit(item.id); show = false\"\n>\n    <app-icon [icon]=\"item\"></app-icon>\n</button>\n<button mat-icon-button name=\"menu\" [class.show]=\"show\" (tapped)=\"show = !show\" (window:click)=\"show ? close() : ''\">\n    <app-icon [icon]=\"{ class: 'material-icons', content: show ? 'add' : 'more_vert' }\"></app-icon>\n</button>\n","import { Component, OnInit, Input, EventEmitter, Output, ViewChild, ElementRef, SimpleChanges, OnChanges } from '@angular/core';\nimport { BaseDirective } from '../../base.directive';\n\n@Component({\n    selector: 'a-searchbar',\n    templateUrl: './searchbar.component.html',\n    styleUrls: ['./searchbar.component.scss']\n})\nexport class SearchbarComponent extends BaseDirective implements OnChanges {\n    /** Current contents of the searchbar input */\n    @Input('value') public value: string;\n    /** Current contents of the searchbar input */\n    @Input() public placeholder: string;\n    /** Whether external changes are being processed */\n    @Input() public loading: boolean;\n    /** Whether external changes are being processed */\n    @Input() public autofocus: boolean;\n    /** Emitter for changes to the searchbar value */\n    @Output() public valueChange = new EventEmitter<string>();\n    /** Input field reference */\n    @ViewChild('input', { static: true }) private input_field: ElementRef<HTMLInputElement>;\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.autofocus && this.autofocus) {\n            this.focusField()\n        }\n    }\n\n    public focusField() {\n        /* istanbul ignore else */\n        if (this.input_field && this.input_field.nativeElement) {\n            this.input_field.nativeElement.focus();\n        }\n    }\n}\n","<div class=\"searchbar\" tabindex=\"0\" (focus)=\"focusField()\" (click)=\"focusField()\">\n    <div class=\"prefix\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'search' }\"></app-icon>\n    </div>\n    <div class=\"input\">\n        <input #input\n            type=\"text\"\n            [(ngModel)]=\"value\"\n            (ngModelChange)=\"valueChange.emit($event)\"\n            [placeholder]=\"placeholder || 'Search...'\"\n            i18n-placeholder\n        />\n    </div>\n    <div class=\"suffix\" *ngIf=\"loading\">\n        <mat-spinner diameter=\"32\"></mat-spinner>\n    </div>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from '../../base.directive';\nimport { ApplicationIcon } from '../../utilities/settings.interfaces';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n    selector: 'a-topbar-header',\n    templateUrl: './topbar-header.component.html',\n    styleUrls: ['./topbar-header.component.scss']\n})\nexport class TopbarHeaderComponent extends BaseDirective implements OnInit {\n    /** Logo of the application organisation */\n    public logo: ApplicationIcon;\n    /** Whether to show menu */\n    @Input() public menu: boolean;\n    /** Name of the page being rendered */\n    @Input() public page: string;\n    /** Emiiter for changes to menu state */\n    @Output() public menuChange = new EventEmitter<boolean>();\n    /** Whether to reverse the side of the menu icon */\n    public reverse: boolean;\n    /** Current page title */\n    public title: string;\n\n    constructor(private _service: ApplicationService, private _dialog: MatDialog) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.logo = this._service.setting('app.logo_light') || { type: 'icon' };\n            this.reverse = this._service.setting('app.general.menu.position') === 'left';\n            this.title = this._service.get('title');\n            this.subscription('title', () =>\n                this._service.listen('title', value => (this.title = value))\n            );\n        });\n    }\n\n    /** Set menu state to `true` */\n    public showMenu() {\n        this.menu = true;\n        this.menuChange.emit(this.menu);\n    }\n\n    public closeModals() {\n        this._dialog.closeAll();\n    }\n}\n","<div [class]=\"'topbar-header ' + page + (reverse ? ' reverse' : '')\">\n    <div class=\"block home\">\n        <a [routerLink]=\"['/home']\" (click)=\"closeModals()\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'home' }\"></app-icon>\n        </a>\n    </div>\n    <div class=\"block icon\">\n        <div class=\"text\">Converge |</div>\n        <div class=\"logo\" *ngIf=\"logo\">\n            <i *ngIf=\"logo.type === 'icon'\" [class]=\"logo.class\">{{ logo.content }}</i>\n            <img *ngIf=\"logo.type === 'img'\" [src]=\"logo.src | safe: 'resource'\" />\n        </div>\n    </div>\n    <div class=\"block title\">\n        <div class=\"title\">Converge | {{ title }}</div>\n    </div>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { User } from 'src/app/services/data/users/user.class';\n\n@Component({\n    selector: 'a-user-avatar',\n    templateUrl: './user-avatar.component.html',\n    styleUrls: ['./user-avatar.component.scss']\n})\nexport class UserAvatarComponent {\n    /** User to display avatar for */\n    @Input() public user: User;\n\n    public get initials(): string {\n        if (!this.user) {\n            return 'NA';\n        }\n        const parts = this.user.name.split(' ');\n        return parts.length > 1\n            ? `${parts[0][0]}${parts[parts.length - 1][0]}`\n            : this.user.name.slice(0, 2);\n    }\n}\n","<div class=\"user-avatar\" *ngIf=\"user\" [attr.user-id]=\"user.id\">\n    <div class=\"initials\" *ngIf=\"!user.image; else image_state\">{{ initials }}</div>\n</div>\n<ng-template #image_state>\n    <img [src]=\"user.image | safe: 'resource'\" />\n</ng-template>\n","import { trigger, transition, style, animate, state } from '@angular/animations';\n\nexport const ANIMATION_SHOW_ENTER_LEAVE = trigger('show', [\n    transition(':enter', [\n        style({ opacity: 0, height: 0 }),\n        animate(300, style({ opacity: 1, height: '*' }))\n    ]),\n    transition(':leave', [\n        style({ opacity: 1, height: '*' }),\n        animate(300, style({ opacity: 0, height: 0 }))\n    ])\n]);\n\nexport const ANIMATION_SHOW_CONTRACT_EXPAND = trigger('show', [\n    state('show', style({ opacity: 1, height: '*' })),\n    state('hide', style({ opacity: 0, height: 0 })),\n    transition('show <=> hide', animate('200ms ease-in'))\n]);\n","\nimport { MockHttpRequestHandler } from '@placeos/ts-client';\n\nimport { generateMockBooking } from 'src/app/services/data/bookings/booking.utilities';\nimport { randomInt, unique } from '../../utilities/general.utilities';\nimport { MOCK_SPACES } from './spaces.mock';\nimport { MOCK_USERS } from './users.mock';\nimport { API } from './common.mock';\n\nimport * as dayjs from 'dayjs';\n\nwindow.control = window.control || {};\nwindow.control.systems = window.control.systems || {};\nwindow.control.handlers = window.control.handlers || [];\n\nexport const MOCK_BOOKINGS = Array(200)\n    .fill(0)\n    .map(i => {\n        const rooms = unique(Array(randomInt(4))\n            .fill(0)\n            .map(i => MOCK_SPACES[Math.floor(Math.random() * MOCK_SPACES.length)]), 'id');\n        // Set the organiser with the generated user list\n        const organiser = randomInt(9999) % 10 === 0 ? MOCK_USERS[MOCK_USERS.length - 1] : MOCK_USERS[randomInt(MOCK_USERS.length)];\n        // Set the attendees with the generated user list\n        const attendees = unique(\n            Array(randomInt(20))\n                .fill(0)\n                .map(i => MOCK_USERS[randomInt(MOCK_USERS.length)]),\n            'email'\n        );\n        return generateMockBooking({\n            organiser,\n            attendees,\n            room_ids: rooms.map(i => i.email)\n        });\n    });\n\nMOCK_SPACES.forEach(i => i.bookings = MOCK_BOOKINGS.filter(j => j.room_ids.indexOf(i.email) >= 0));\n\n// Handler for bookings index\nwindow.control.handlers.push({\n    path: `${API}/bookings`,\n    metadata: MOCK_BOOKINGS,\n    method: 'GET',\n    callback: event => {\n        const user = MOCK_USERS[MOCK_USERS.length - 1];\n        let data = !event.query_params.email\n            ? MOCK_BOOKINGS.filter(\n                  i => i.organiser.email === user.email || i.organiser === user.email || i.attendees.reduce((a, v) => a || v.email === user.email, false)\n              )\n            : MOCK_BOOKINGS.filter(\n                  i =>\n                  i.organiser.email === event.query_params.email ||\n                  (i.organiser as any) === event.query_params.email ||\n                      i.attendees.reduce((a, v) => a || v.email === event.query_params.email, false)\n            );\n        // Filter bookings between a given period\n        if (event.query_params.from) {\n            const start = dayjs(+event.query_params.from * 1000);\n            const end = event.query_params.to ? dayjs(+event.query_params.to * 1000).endOf('m') : start.endOf('d');\n            data = data.filter(i => {\n                const bkn_start = dayjs(i.start_epoch * 1000).startOf('m').second(1);\n                const bkn_end = dayjs(i.end_epoch * 1000);\n                return (bkn_start.isAfter(start, 's') && bkn_start.isBefore(end, 'm')) || (bkn_end.isAfter(start, 'm') && bkn_end.isBefore(end, 's'));\n            });\n        }\n        return data;\n    }\n} as MockHttpRequestHandler);\n\n// Handler for bookings show\nwindow.control.handlers.push({\n    path: `${API}/bookings/:id`,\n    metadata: MOCK_BOOKINGS,\n    method: 'GET',\n    callback: event => {\n        if (event.route_params.id) {\n            const booking = MOCK_BOOKINGS.find(i => i.id === event.route_params.id || i.icaluid === event.route_params.id);\n            if (booking) {\n                return booking;\n            } else {\n                throw { status: 404, message: 'Booking not found.' }\n            }\n        } else {\n            throw { status: 400, message: 'Invalid booking ID' };\n        }\n    }\n} as MockHttpRequestHandler);\n\n// Handler for new bookings\nwindow.control.handlers.push({\n    path: `${API}/bookings`,\n    metadata: MOCK_BOOKINGS,\n    method: 'POST',\n    callback: (event) => {\n        if (event.body) {\n            event.body.id = `bkn-${randomInt(9_999_999)}`;\n            event.body.icaluid = `ical-${event.body.id}`;\n            console.log('New Event:', event.body);\n            MOCK_BOOKINGS.push(event.body);\n            MOCK_SPACES.forEach(space => space.bookings = MOCK_BOOKINGS.filter(booking => booking.room_ids.indexOf(space.email) >= 0));\n            return event.body;\n        } else {\n            throw { status: 500, message: 'Invalid booking data' };\n        }\n    }\n} as MockHttpRequestHandler);\n\n// Handler for updating existing bookings\nwindow.control.handlers.push({\n    path: `${API}/bookings/:id`,\n    metadata: MOCK_BOOKINGS,\n    method: 'PUT',\n    callback: (event) => {\n        if (event.route_params.id) {\n            const index = MOCK_BOOKINGS.findIndex(i => i.id === event.route_params.id || i.icaluid === event.route_params.id);\n            if (index >= 0) {\n                MOCK_BOOKINGS[index] = event.body;\n                MOCK_SPACES.forEach(i => i.bookings = MOCK_BOOKINGS.filter(j => (j.room_ids).indexOf(i.email) >= 0));\n                return event.body;\n            } else {\n                throw { status: 404, message: 'Booking not found' };\n            }\n        } else\n            throw { status: 500, message: 'Invalid booking ID' };\n    }\n} as MockHttpRequestHandler);\n\n// Handler for deleting exisiting bookings\nwindow.control.handlers.push({\n    path: `${API}/bookings/:id`,\n    metadata: MOCK_BOOKINGS,\n    method: 'DELETE',\n    callback: (event) => {\n        if (event.route_params.id) {\n            const index = MOCK_BOOKINGS.findIndex(i => i.id === event.route_params.id || i.icaluid === event.route_params.id);\n            if (index >= 0) {\n                MOCK_BOOKINGS.splice(index, 1);\n                MOCK_SPACES.forEach(i => i.bookings = MOCK_BOOKINGS.filter(j => j.room_ids.indexOf(i.email) >= 0));\n            } else {\n                throw { status: 404, message: 'Booking not found' };\n            }\n        } else\n            throw { status: 500, message: 'Invalid booking ID' };\n    }\n} as MockHttpRequestHandler);\n","\nimport { MockHttpRequestHandler } from '@placeos/ts-client';\n\nimport { MOCK_ORG } from './organisation.mock';\nimport { DOMAIN } from './common.mock';\n\nwindow.control = window.control || {};\nwindow.control.systems = window.control.systems || {};\nwindow.control.handlers = window.control.handlers || [];\n\nexport const MOCK_BUILDINGS = [{\n    id: 'zone_bld-01',\n    zone_id: 'zone_bld-01',\n    name: 'Sydney',\n    settings: {\n        discovery_info: {\n            timezone: 'Australia/Sydney',\n            neighbourhoods: {\n                'zone_lvl-01': {\n                    'Test Searchable': 'Device_Bench'\n                }\n            },\n            visitor_space: `sydney-01.02@${DOMAIN}`,\n            levels: [\n                {\n                    level_id: 'zone_lvl-33',\n                    level_name: 'Level 1',\n                    number: 1,\n                    map_url: 'assets/maps/sydney/level_33.svg',\n                    floor_type: 'staff',\n                },\n                {\n                    level_id: 'zone_lvl-35',\n                    level_name: 'Level 2',\n                    number: 2,\n                    map_url: 'assets/maps/sydney/level_35.svg',\n                    floor_type: 'client',\n                },\n                {\n                    level_id: 'zone_lvl-36',\n                    level_name: 'Level 2',\n                    number: 2,\n                    map_url: 'assets/maps/sydney/level_36.svg',\n                    floor_type: 'client',\n                }\n            ],\n        },\n    },\n}, {\n    id: 'zone_bld-02',\n    zone_id: 'zone_bld-02',\n    name: 'London Post',\n    settings: {\n        discovery_info: {\n            timezone: 'Europe/London',\n            visitor_space: `london-01.02@${DOMAIN}`,\n            levels: [\n                {\n                    level_id: 'zone_lvl-10',\n                    level_name: 'Level 10',\n                    number: 1,\n                    map_url: 'assets/maps/london_jermyn/level_10.svg',\n                    floor_type: 'staff',\n                },\n                {\n                    level_id: 'zone_lvl-11',\n                    level_name: 'Level 11',\n                    number: 11,\n                    map_url: 'assets/maps/london_jermyn/level_11.svg',\n                    floor_type: 'client',\n                }\n            ],\n        },\n    },\n}];\n\nMOCK_BUILDINGS.push({ ...MOCK_BUILDINGS[0], name: 'London' });\n\nMOCK_ORG[0].discovery_info.buildings = MOCK_BUILDINGS;\n\nsetTimeout(() => {\n    window.control.handlers.push({\n        path: '/api/engine/v2/zones',\n        metadata: MOCK_BUILDINGS,\n        callback: (event) => {\n            if (event.query_params.tags === 'building') {\n                return { total: MOCK_BUILDINGS.length, results: MOCK_BUILDINGS };\n            } else if (event.query_params.tags === 'org') {\n                return { total: MOCK_ORG.length, results: MOCK_ORG };\n            } else if (event.query_params.tags === 'level') {\n                return { total: 0, results: [] };\n            }\n        }\n    } as MockHttpRequestHandler);\n});\n","\n/** Domain of the organisation */\nexport const DOMAIN = 'acaprojects.com';\n/** Endpoint where the staff API is located */\nexport const API = '/api/staff';\n","import { MockHttpRequestHandler } from '@placeos/ts-client';\n\nimport { MOCK_USERS } from \"./users.mock\";\nimport { MOCK_SPACES } from './spaces.mock';\nimport { MOCK_BUILDINGS } from './buildings.mock';\nimport { randomInt } from '../../utilities/general.utilities';\nimport { generateMockLocation } from 'src/app/services/data/location/location.utilities';\n\nexport const MOCK_LOCATIONS: any[] = [];\n\nconst spaces = MOCK_SPACES.map(space => space.map_id);\nconst levels = MOCK_BUILDINGS.reduce((lvls, bld) => {\n    bld.settings.discovery_info.levels.forEach(lvl => lvls.push(lvl.level_id));\n    return lvls;\n}, []);\n\nfor (const user of MOCK_USERS) {\n    if (user.location || randomInt(99999) % 2 === 0) {\n        user.location = generateMockLocation(null, spaces, levels);\n        MOCK_LOCATIONS.push(user.location);\n    }\n}\n\nsetTimeout(() => {\n    window.control.handlers.push({\n        path: '/api/staff/people/:email',\n        metadata: MOCK_LOCATIONS,\n        callback: (event) => {\n            if (event.route_params.email) {\n                const user = MOCK_USERS.find(user => user.email === event.route_params.email || user.id === event.route_params.email);\n                if (user) {\n                    return user.location;\n                }\n            }\n            throw { status: 404, message: `Unable to locate user with email ${event.route_params.email}` };\n        }\n    } as MockHttpRequestHandler);\n});\n\n\n","export const MOCK_ORG = [\n    {\n        send_acceptance: true,\n        discovery_info: {\n            buildings: []\n        }\n    }\n];\n","import { generateMockSpace } from 'src/app/services/data/spaces/space.utilities';\nimport { API } from './common.mock';\nimport { MockHttpRequestHandler } from '@placeos/ts-client';\n\nimport * as dayjs from 'dayjs';\n\nwindow.control = window.control || {};\nwindow.control.systems = window.control.systems || {};\nwindow.control.handlers = window.control.handlers || [];\n\nexport const MOCK_SPACES = [\n    { id: '35.02', name: 'SYD-35-Durack-internal-05-DV', zones: ['zone_bld-01', 'zone_lvl-35'] },\n    { id: '35.02', name: 'SYD-36-Trickett-internal-05-DV', zones: ['zone_bld-01', 'zone_lvl-36'] },\n    { id: '33.02', name: 'SYD-33West-Wedding Cake-10V', zones: ['zone_bld-01', 'zone_lvl-33'] },\n    { id: '33.03', name: 'SYD-33West-Pinchgut-05DV', zones: ['zone_bld-01', 'zone_lvl-33'] },\n    { id: '10.02', name: 'LON-10-10_02_Village_green', zones: ['zone_bld-01', 'zone_lvl-10'] },\n    { id: '10.47', name: 'LON-10-EC10_10_47_Gallery', zones: ['zone_bld-01', 'zone_lvl-10'] },\n    { id: '11.07', name: 'LON-11-EC11_11_07_Client', zones: ['zone_bld-01', 'zone_lvl-11'] },\n    { id: '11.10', name: 'LON-11-EC11_11_10_Client', zones: ['zone_bld-01', 'zone_lvl-11'] }\n].map((space_data: any) => {\n    const space = generateMockSpace({\n        ...space_data,\n        map_id: `area-${space_data.id}-status`,\n        id: `sys_rm-${space_data.id}`,\n        name: `${space_data.name}`\n    });\n    window.control.systems[space.id] = {\n        Bookings: [\n            {\n                today: space.bookings\n            }\n        ]\n    };\n    return space;\n});\n\n// Add handler for users index\nwindow.control.handlers.push({\n    path: `${API}/rooms`,\n    metadata: MOCK_SPACES,\n    callback: event => {\n        let results = MOCK_SPACES;\n        if (event.query_params.q) {\n            const query = event.query_params.q.toLowerCase();\n            results = results.filter(\n                i =>\n                    (i.id || '').toLowerCase().indexOf(query) >= 0 ||\n                    (i.name || '').toLowerCase().indexOf(query) >= 0 ||\n                    (i.email || '').toLowerCase().indexOf(query) >= 0\n            );\n        }\n        // Remove rooms without given zones from results\n        if (event.query_params.zone_ids) {\n            const zone_ids = event.query_params.zone_ids.split(',');\n            results = results.filter(i => {\n                let count = 0;\n                for (const zone of zone_ids) {\n                    if (i.zones.indexOf(zone) >= 0) {\n                        count++;\n                    }\n                }\n                return count >= zone_ids.length;\n            });\n        }\n        // Remove rooms without given ids from results\n        if (event.query_params.room_ids) {\n            const room_ids = event.query_params.room_ids.split(',');\n            results = results.filter(i => room_ids.indexOf(i.id) >= 0);\n        }\n        // Update availability status of each room results\n        if (event.query_params.available_from) {\n            const from = dayjs(+event.query_params.available_from * 1000);\n            const to = dayjs(+event.query_params.available_to * 1000);\n            results.forEach(space => {\n                for (const booking of space.bookings) {\n                    const start = dayjs(booking.start_epoch * 1000);\n                    const end = dayjs(booking.end_epoch * 1000);\n                    if (\n                        (from.isAfter(start, 'm') && from.isBefore(end, 'm')) ||\n                        (to.isAfter(start, 'm') && to.isBefore(end, 'm')) ||\n                        (start.isAfter(from, 'm') && start.isBefore(to, 'm'))\n                    ) {\n                        space.settings = { available: false };\n                    } else {\n                        space.settings = { available: true };\n                    }\n                }\n            });\n        }\n        return results;\n    }\n} as MockHttpRequestHandler);\n","\nimport { MockHttpRequestHandler } from '@placeos/ts-client';\n\nimport { generateMockUser } from 'src/app/services/data/users/user.utilities';\nimport { API } from './common.mock';\n\nwindow.control = window.control || {};\nwindow.control.systems = window.control.systems || {};\nwindow.control.handlers = window.control.handlers || [];\n\nexport const MOCK_USERS = Array(Math.floor(Math.random() * 300 + 100)).fill(0)\n    .map(i => generateMockUser());\nexport const MOCK_CONTACTS = Array(Math.floor(Math.random() * 300 + 100)).fill(0)\n    .map(i => generateMockUser({ external: true }));\n\nexport const PREDEFINED_USERS = [\n    'Jonathan McFarlane',\n    'Stephen Von Takach',\n    'Alex Sorafumo',\n    'Candy Russo',\n    'Cristina Boston',\n    'Eugene Murphy',\n    'Ben Hoad',\n    'Kim Burgess',\n    'Desk Test',\n    'Space Test',\n    'Wireless Test',\n    'Zo-Kalar'\n];\n\n// Add predefined user to user list\nfor (const user of PREDEFINED_USERS) {\n    const id = user.split(' ').join('.').toLowerCase();\n    const new_user = generateMockUser({ id, name: user });\n    new_user.location = true;\n    MOCK_USERS.push(new_user);\n}\n\n// Add handler for users index\nwindow.control.handlers.push({\n    path: `${API}/users`,\n    metadata: MOCK_USERS,\n    callback: (event) => {\n        if (event.query_params.q) {\n            const query = event.query_params.q.toLowerCase();\n            return MOCK_USERS.filter(i =>\n                (i.id || '').toLowerCase().indexOf(query) >= 0 ||\n                (i.name || '').toLowerCase().indexOf(query) >= 0 ||\n                (i.email || '').toLowerCase().indexOf(query) >= 0\n            );\n        }\n        return MOCK_USERS;\n    }\n} as MockHttpRequestHandler);\n\n// Add handler for users show\nwindow.control.handlers.push({\n    path: `${API}/users/:id`,\n    metadata: MOCK_USERS,\n    callback: (event) => {\n        const user = MOCK_USERS.find(i => i.id === event.route_params.id || i.name === event.route_params.id || i.email === event.route_params.id);\n        if (user) {\n            return user;\n        } else if (event.route_params.id === 'current') {\n            return MOCK_USERS[MOCK_USERS.length - 1];\n        }\n        throw { status: 404, message: 'User not found' };\n    }\n} as MockHttpRequestHandler);\n\n// Add handler for contacts index\nwindow.control.handlers.push({\n    path: `${API}/contacts`,\n    metadata: MOCK_CONTACTS,\n    callback: (event) => {\n        if (event.query_params.q) {\n            const query = event.query_params.q.toLowerCase();\n            return MOCK_CONTACTS.filter(i =>\n                (i.id || '').toLowerCase().indexOf(query) >= 0 ||\n                (i.name || '').toLowerCase().indexOf(query) >= 0 ||\n                (i.email || '').toLowerCase().indexOf(query) >= 0\n            );\n        }\n        return MOCK_USERS;\n    }\n} as MockHttpRequestHandler);\n\n// Add handler for contacts show\nwindow.control.handlers.push({\n    path: `${API}/contacts/:id`,\n    metadata: MOCK_USERS,\n    callback: (event) => {\n        const user = MOCK_USERS.find(i => i.id === event.route_params.id || i.name === event.route_params.id);\n        if (user) {\n            return user;\n        }\n        throw { status: 404, message: 'User not found' };\n    }\n} as MockHttpRequestHandler);\n\n\n","\nimport { createSystem } from './systems.mock';\n\nimport './api/organisation.mock';\nimport './api/buildings.mock';\nimport './api/users.mock';\nimport './api/spaces.mock';\nimport './api/bookings.mock';\nimport './api/locations.mock';\n\nwindow.control = window.control || {};\nwindow.control.systems = {\n    ...window.control.systems,\n    ['sys-B0']: createSystem('sys-B0')\n} || {};\nwindow.control.handlers = window.control.handlers || [];\n","\n\nimport { generateMockSpace } from \"../../services/data/spaces/space.utilities\";\nimport { setMockBookingStartDatetime } from \"../../services/data/bookings/booking.utilities\";\n\nimport * as dayjs from 'dayjs';\n\nexport interface IBookingPanelBindings {\n    /** Whether user input is enabled */\n    touch_enabled: boolean;\n    /** Number of seconds before a meeting can be started, being truthy enables start/stop and auto-cancellations */\n    timeout?: number;\n    /** Number of seconds after the start of a meeting when it is auto-cancelled, overrides `timeout` value */\n    cancel_timeout?: number;\n    /** Whether to display hearing assistance UI elements */\n    has_accessability?: boolean;\n    /** URL to embed into the control modal when opened */\n    control_url?: string;\n    /** Whether to display catering UI elements */\n    has_catering?: boolean;\n    /** Whether to hide booking details(title and host) */\n    hide_details?: boolean;\n    /** Whether to hide the title of the displayed bookings */\n    hide_title?: boolean;\n    /** Whether to hide user(host) details */\n    hide_user?: boolean;\n    /** Whether to hide timeline availability */\n    hide_availability?: boolean;\n    /** Whether to disable booking from the UI */\n    booking_disabled?: boolean;\n    /** Whether booking future meetings are allowed */\n    no_timeline_bookings?: boolean;\n    /** Time before the booking end with which the current booking is endable in ms from UTC epoch */\n    is_endable?: number;\n    /** Whether to automatically ask user starting the current meeting */\n    ask_start?: boolean;\n    /** Whether to automatically ask user about ending the active meeting */\n    ask_end?: boolean;\n    /** Default meeting title if the displayed meeting doesn't have one */\n    default_title?: string;\n    /** Hide all meeting related details */\n    hide_all?: boolean;\n    /** Title of the active space */\n    title?: string;\n    /** Description of the active space */\n    description?: string;\n    /** URL of an icon image to display on the UI */\n    icon?: string;\n    /** Whether the space status is displayed on the right */\n    flip_status?: boolean;\n    /** Whether bookings can be automatically cancelled once they expire */\n    can_cancel?: boolean;\n    /** Minimum bookable duration in minutes */\n    min_duration?: number;\n    /** Maximum bookable duration in minutes */\n    max_duration?: number;\n    /** Start time of the business day with format `HH:mm` */\n    business_start?: string;\n    /** End time of the business day with format `HH:mm` */\n    business_end?: string;\n\n}\n\nconst LETTERS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('');\nconst NUMBERS = '0123456789'.split('');\n\nlet index = 0;\n\nconst SPACE_LIST: any[] = [];\n\nconst IMAGES: string[] = ['large_down', 'large_up', 'small_down', 'small_up'];\n\n/**\n * Create mock engine booking module with appropriate bookings and space data\n */\nexport function createSystem(id?: string) {\n    id = id || `sys-${LETTERS[Math.floor(index / NUMBERS.length)]}${NUMBERS[(index++) % NUMBERS.length]}`;\n    setMockBookingStartDatetime(dayjs().minute(-50).valueOf());\n    const space = generateMockSpace({ id });\n    SPACE_LIST.push(space);\n\n    const booking_bindings: IBookingPanelBindings = {\n        touch_enabled: true,\n        timeout: 300,\n        cancel_timeout: 600,\n        has_catering: true,\n        control_url: 'https://aca.im/demo/aca/control/',\n        icon: `/assets/img/${IMAGES[Math.floor(Math.random() * IMAGES.length)]}.png`\n    };\n\n    const today = dayjs();\n    const desk_bindings = {\n        'zone_lvl-01:bookings': {\n            'SYD.1.09.E': {\n                [today.format('YYYY-MM-DD')]: {\n                    // 'first@acaprojects.com': {\n                    'zo-kalar@acaprojects.com': {\n                        start: today.subtract(1, 'h').unix(),\n                        end: today.add(1, 'h').unix(),\n                        checked_in: true\n                    }\n                },\n                [today.add(1, 'd').format('YYYY-MM-DD')]: {\n                    'second@acaprojects.com': {\n                        start: today.add(1, 'd').subtract(1, 'h').unix(),\n                        end: today.add(1, 'd').add(1, 'h').unix()\n                    }\n                }\n            },\n            'SYD.1.09.F': {},\n            'SYD.1.09.G': {}\n        },\n        'zone_lvl-02:bookings': {\n            'SYD.2.01.A': {\n                [today.format('YYYY-MM-DD')]: {\n                    'first@acaprojects.com': {\n                        start: today.subtract(1, 'h').unix(),\n                        end: today.add(1, 'h').unix(),\n                        checked_in: true\n                    }\n                },\n                [today.add(1, 'd').format('YYYY-MM-DD')]: {\n                    'second@acaprojects.com': {\n                        start: today.add(1, 'd').subtract(1, 'h').unix(),\n                        end: today.add(1, 'd').add(1, 'h').unix()\n                    }\n                }\n            },\n            'SYD.2.01.B': {},\n            'SYD.2.01.C': {}\n        }\n    };\n\n    const system = {\n        id, name: space.name,\n        Bookings: [],\n        DeskManagement: [{\n            'zone_lvl-01:desk_ids': ['SYD.1.09.E', 'SYD.1.09.F', 'SYD.1.09.G']\n        }],\n        DeskBookings: []\n    };\n    system.Bookings.push({\n        ...booking_bindings,\n        room_name: space.name,\n        today: space.bookings,\n        $start_meeting: (time: number) => {\n            system.Bookings[0].last_meeting_started = time;\n        },\n        $cancel_meeting: (time: number, reason: string) => {\n            const list = system.Bookings[0].today;\n            system.Bookings[0].today = list.filter(i => i.date !== time);\n        },\n        $waiter_call: () => {\n            console.log(`[MOCK][${id}] Waiter called...`);\n        }\n    });\n    system.DeskBookings.push({\n        ...desk_bindings,\n        $book: (email: string, desk: string, date: number) => {\n            console.log('[MOCK] Book called');\n        },\n        $check_in: (email: string, desk: string) => {\n            system.DeskBookings[0]['zone_lvl-01:bookings'][desk][dayjs().format('YYYY-MM-DD')][email].checked_in = true;\n        },\n        $check_out: (email: string, desk: string) => {\n            console.log(`[MOCK]Check out called`);\n        },\n    });\n    return system;\n}\n","\nimport { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { EditorModule } from '@tinymce/tinymce-angular';\nimport { ComposerModule } from '@placeos/composer';\n\nimport { ScrollingModule } from '@angular/cdk/scrolling';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatTabsModule } from '@angular/material/tabs';\n\nimport { APipesModule } from '@acaprojects/ngx-pipes';\nimport { AInteractiveMapModule } from '@acaprojects/ngx-interactive-map';\nimport { ACustomEventsModule } from '@acaprojects/ngx-custom-events';\nimport { ADatePickerModule } from '@acaprojects/ngx-date-picker';\n\nimport { BaseDirective } from './base.directive';\nimport { LoginComponent } from './components/login/login.component';\nimport { IconComponent } from './components/icon/icon.component';\nimport { TopbarHeaderComponent } from './components/topbar-header/topbar-header.component';\nimport { OverlayMenuComponent } from './components/overlay-menu/overlay-menu.component';\nimport { FooterMenuComponent } from './components/footer-menu/footer-menu.component';\nimport { SearchbarComponent } from './components/searchbar/searchbar.component';\nimport { UserAvatarComponent } from './components/user-avatar/user-avatar.component';\nimport { MapControlsComponent } from './components/map-controls/map-controls.component';\nimport { PopoutMenuComponent } from './components/popout-menu/popout-menu.component';\nimport { FeedbackComponent } from './components/feedback/feedback.component'\n\nimport { UserFormComponent } from './components/forms/user-form/user-form.component';\nimport { BookingFormComponent } from './components/forms/booking-form/booking-form.component';\n\nimport { UserSearchFieldComponent } from './components/custom-fields/user-search-field/user-search-field.component';\nimport { TimeFieldComponent } from './components/custom-fields/time-field/time-field.component';\nimport { DurationFieldComponent } from './components/custom-fields/duration-field/duration-field.component';\nimport { DateFieldComponent } from './components/custom-fields/date-field/date-field.component';\nimport { ActionFieldComponent } from './components/custom-fields/action-field/action-field.component';\nimport { UserListFieldComponent } from './components/custom-fields/user-list-field/user-list-field.component';\nimport { CounterComponent } from './components/custom-fields/counter/counter.component';\n\nconst COMPONENTS: Type<any>[] = [\n    BaseDirective,\n    LoginComponent,\n    IconComponent,\n    TopbarHeaderComponent,\n    OverlayMenuComponent,\n    FooterMenuComponent,\n    SearchbarComponent,\n    UserAvatarComponent,\n\n    UserFormComponent,\n    BookingFormComponent,\n\n    MapControlsComponent,\n    PopoutMenuComponent,\n    FeedbackComponent\n];\n\nconst ENTRY_COMPONENT: Type<any>[] = [\n    DateFieldComponent,\n    ActionFieldComponent,\n    TimeFieldComponent,\n    DurationFieldComponent,\n    UserSearchFieldComponent,\n    UserListFieldComponent,\n    CounterComponent,\n];\n\nconst MATERIAL_MODULES: any[] = [\n    MatButtonModule,\n    MatSnackBarModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatChipsModule,\n    MatRippleModule,\n    MatMenuModule,\n    MatCheckboxModule,\n    MatTooltipModule,\n    MatRadioModule,\n    MatTabsModule\n];\n\nconst CDK_MODULES: any[] = [\n    ScrollingModule\n];\n\n@NgModule({\n    declarations: [\n        ...COMPONENTS,\n        ...ENTRY_COMPONENT,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        APipesModule,\n        AInteractiveMapModule,\n        ADatePickerModule,\n        ACustomEventsModule,\n        RouterModule,\n        EditorModule,\n        ComposerModule,\n        ...MATERIAL_MODULES,\n        ...CDK_MODULES\n    ],\n    exports: [\n        APipesModule,\n        AInteractiveMapModule,\n        ACustomEventsModule,\n        ADatePickerModule,\n        ...COMPONENTS,\n        ...ENTRY_COMPONENT,\n        ...MATERIAL_MODULES,\n        ...CDK_MODULES\n    ]\n})\nexport class SharedContentModule {}\n","import { HashMap } from \"./types.utilities\";\n\n/**\n * Convert map into a query string\n * @param map Key value pairs to convert\n */\nexport function toQueryString(map: HashMap) {\n    let str = '';\n    if (map) {\n        for (const key in map) {\n            if (map.hasOwnProperty(key) && map[key] !== undefined && map[key] !== null) {\n                str += `${(str ? '&' : '')}${key}=${map[key]}`;\n            }\n        }\n    }\n    return str;\n}\n","\nimport { humaniseDuration } from './general.utilities';\n\nimport { User } from '../../services/data/users/user.class';\nimport { Space } from '../../services/data/spaces/space.class';\n\nimport * as dayjs from 'dayjs';\n\n// attendees: FormFormatters.attendees(user),\n// date: FormFormatters.date,\n// room: FormFormatters.space,\n// recurrence: FormFormatters.recurrence\n\n/**\n * Get function to create formatted string for a list of users with a host\n * @param host Host user\n */\nexport function formatAttendeesWithHost(host: User): (_: User[]) => string {\n    return (l) => formatAttendees(l, host);\n}\n\n/**\n * Create formatted string from a list of users\n * @param list List of users\n * @param host Owner of the list of users\n */\nexport function formatAttendees(list: User[], host?: User) {\n    let attendee_str: string = '';\n    if (list && list.length > 0) {\n        const users = [...list];\n        if (host) {\n            const result = users.find(a => a.email === host.email);\n            if (result) {\n                users.splice(users.indexOf(result), 1);\n            }\n        }\n        const length = users.length + (host ? 1 : 0);\n        attendee_str = `${length} Attendee${length === 1 ? '' : 's'}; ${host ? host.name : ''}`;\n        for (const item of users) {\n            if (attendee_str) {\n                attendee_str += ', ';\n            }\n            attendee_str += item.name;\n        }\n        attendee_str = attendee_str.replace('; ,', ';');\n    }\n    return attendee_str;\n}\n\n/**\n * Create date formatted string for given date\n * @param date Date to format\n */\nexport function formatDate(date: number) {\n    return dayjs(date).format('DD MMMM YYYY');\n}\n\n/**\n * Create time formatted string for given date\n * @param date Date to format\n */\nexport function formatTime(date: number) {\n    return dayjs(date).format('h:mm A');\n}\n\n/**\n * Create formatted string for a period of given duration\n * @param duration Period duration in minutes\n */\nexport function formatPeriodWithDuration(duration: number) {\n    return (t) => formatPeriod(t, duration);\n}\n\n/**\n * Create formatted string for a period of given duration\n * @param timestamp Start hours and minutes of the period in the format `HH:mm`\n * @param duration Period duration in minutes\n */\nexport function formatPeriod(timestamp: string, duration: number = 60) {\n    const parts = timestamp.split(':');\n    const date = dayjs().hour(+parts[0]).minute(+parts[1]);\n    return `${date.format('h:mm A')} - ${date.add(duration, 'm').format('h:mm A')} (${humaniseDuration(duration)})`;\n}\n\n/**\n * Create formatted human readable string for a given duration\n * @param duration Duration in minutes\n */\nexport function formatDuration(duration: number) {\n    return humaniseDuration(duration);\n}\n\n/** Human readable names of applicable recurrence periods */\nexport const RECURRENCE_PERIODS: string[] = ['None', 'Daily', 'Weekly', 'Monthly', 'Yearly'];\n\n/**\n * Create human readable string for recurrence metadata\n * @param value\n */\nexport function formatRecurrence(value: { period: string | number, end: number }) {\n    if (!value || !value.period || value.period as any >= RECURRENCE_PERIODS.length) {\n        return 'No recurrence';\n    }\n    const period = typeof value.period === 'string' ? value.period : RECURRENCE_PERIODS[value.period];\n    const end = value.end ? `until ${dayjs(value.end).format('DD MMM YYYY')}` : 'forever';\n    return `${period} ${end}`;\n}\n\n/**\n * Create human readable string for a room or list of rooms\n * @param list List of spaces/rooms\n */\nexport function formatSpaces(list: Space | Space[]) {\n    if (!list || (list instanceof Array && list.length <= 0)) {\n        return 'No selected space';\n    }\n    if (list instanceof Array) {\n        return list.length === 1 ? list[0].name : `${list.length} Space${list.length !== 1 ? 's' : ''}`;\n    } else {\n        const capacity = list.capacity ? '(' + list.capacity + ' ' + (list.capacity === 1 ? 'person' : 'people') + ')' : '';\n        return `${list.name} ${capacity}`;\n    }\n}\n","import { HashMap, Point } from './types.utilities';\n\nimport * as dayjs from 'dayjs';\n\nexport function getItemWithKeys(keys: string[], map: HashMap) {\n    const key = keys.shift();\n    if (map[key]) {\n        return keys.length > 0 ? getItemWithKeys(keys, map[key]) : map[key];\n    }\n    return null;\n}\n\n/* istanbul ignore next */\n/**\n * Checks whether the platform is a mobile device.\n */\nexport function isMobileDevice(): boolean {\n    const r = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i;\n    return !!navigator.userAgent.match(r);\n}\n\n/* istanbul ignore next */\n/**\n * Checks whether the browser is Mobile Safari.\n */\nexport function isMobileSafari(): boolean {\n    const agent = navigator.userAgent;\n    return !!(\n        agent.match(/iPhone|iPad|iPod/) &&\n        agent.match(/AppleWebKit/) &&\n        !agent.match('CriOS')\n    );\n}\n\n/* istanbul ignore next */\n/**\n * Checks whether the browser is Android Chrome.\n */\nexport function isAndroidChrome(): boolean {\n    const agent = navigator.userAgent;\n    return !!(agent.match(/Android/) && agent.match(/Chrome/));\n}\n\n/**\n * Generate string representation of a number with zeros padding the length\n * @param value Number to pad with zeros\n * @param length Length of the resulting string\n */\nexport function padZero(value: number, length: number): string {\n    let str = value.toString();\n    while (str.length < length) {\n        str = '0' + str;\n    }\n    return str;\n}\n\n/**\n * Remove duplicates from the given array\n * @param array List of items to remove duplicates from\n * @param key Key on array objects to compare for uniqueness\n */\nexport function unique(array: any[], key: string = '') {\n    return array.filter(\n        (el, pos, arr) =>\n            el &&\n            arr.indexOf(\n                key ? arr.find((i) => i && i[key] === el[key]) : arr.find((i) => i === el)\n            ) === pos\n    );\n}\n\n/**\n * Convert duration to human readable string\n * @param duration Duration in minutes\n * @param short Whether to use short form of duration words e.g. hours as h\n */\nexport function humaniseDuration(duration: number, short: boolean = false) {\n    if (!duration || duration < 0) {\n        return '';\n    }\n    const h = Math.floor(duration / 60);\n    let d = `${h >= 1 ? h + (short ? 'h' : ' hour' + (h === 1 ? '' : 's')) : ''}`;\n    if (duration % 60 !== 0) {\n        if (d) {\n            d += short ? ' ' : ', ';\n        }\n        const m = duration % 60;\n        d += `${m >= 1 ? m + (short ? 'm' : ' minute' + (m === 1 ? '' : 's')) : ''}`;\n    }\n    return d;\n}\n\n/**\n * Get a filtered list of items\n * @param filter Value to filter on\n * @param items List of results to filter\n * @param fields Fields to check for matches on each item\n */\nexport function filterList<T = HashMap>(\n    filter: string,\n    items?: T[],\n    fields: string[] = ['id']\n): T[] {\n    let results: any[];\n    // Tokenise filter string\n    const filters = (filter || '').toLowerCase().split(' ');\n    const list = {};\n    for (const f of filters) {\n        /* istanbul ignore else */\n        if (f) {\n            /* istanbul ignore else */\n            if (!list[f]) {\n                list[f] = 0;\n            }\n            list[f]++;\n        }\n    }\n    // Group similar tokens\n    const parts = [];\n    for (const f in list) {\n        /* istanbul ignore else */\n        if (list.hasOwnProperty(f)) {\n            parts.push({ word: f, count: list[f], regex: new RegExp(f, 'gi') });\n        }\n    }\n    parts.sort((a, b) => b.word.length - a.word.length || a.word.localeCompare(b.word));\n    const item_list = JSON.parse(JSON.stringify(items || []));\n    /* istanbul ignore else */\n    if (filter) {\n        results = item_list.filter((item) => {\n            let match_count = 0;\n            item.match_index = 65535;\n            item.match = '';\n            const field_list = {};\n            // Initialise field match variables\n            for (const f of fields) {\n                field_list[f] = {\n                    value: (item[f] || '').toLowerCase(),\n                    index: 65536,\n                    matched: 0,\n                };\n            }\n            // Search for matches with the tokenised filter string\n            for (const i of parts) {\n                /* istanbul ignore else */\n                if (i.word) {\n                    // Check fields for matches\n                    for (const f of fields) {\n                        const field = field_list[f];\n                        const index = field.value.indexOf(i.word);\n                        field.index = index < field.index ? index : field.index;\n                        field.matches = (field.value.match(i.regex) || []).length;\n                        field.value = field.value.replace(i.regex, ' ');\n                    }\n                    // Update token match count\n                    for (const f of fields) {\n                        const field = field_list[f];\n                        /* istanbul ignore else */\n                        if (field.matches >= i.count) {\n                            match_count++;\n                            // Update field matches\n                            let changed = 0;\n                            const tokens = (item[`match_${f}`] || item[f] || '').split(' ');\n                            for (const k of tokens) {\n                                /* istanbul ignore else */\n                                if (changed >= i.count) {\n                                    break;\n                                }\n                                /* istanbul ignore else */\n                                if (k.toLowerCase().indexOf(i.word) >= 0 && k.indexOf('`') < 0) {\n                                    tokens[tokens.indexOf(k)] = k.replace(i.regex, '`$&`');\n                                    changed++;\n                                }\n                            }\n                            item[`match_${f}`] = tokens.join(' ');\n                            break;\n                        }\n                    }\n                }\n            }\n            // Get field with the most relevent match\n            for (const f of fields) {\n                const field = field_list[f];\n                /* istanbul ignore else */\n                if (field.index < item.match_index && field.index >= 0) {\n                    item.match_index = field.index;\n                    item.match = f;\n                }\n            }\n            return item.match_index >= 0 && item.match && match_count >= parts.length;\n        });\n    } else {\n        results = item_list;\n    }\n    // Sort by order of relevence then name\n    results.sort((a, b) => {\n        const diff = a.match_index - b.match_index;\n        return diff === 0 ? a.name.localeCompare(b.name) : diff;\n    });\n    return results;\n}\n\n/**\n * Convert a match string from `filterList` to renderable HTML\n * @param str Match string to change\n */\nexport function matchToHighlight(str: string): string {\n    /* istanbul ignore else */\n    if (str) {\n        str = str.replace(/\\`[a-zA-Z0-9\\@\\.\\_]*\\`/g, '<span class=\"highlight\">$&</span>');\n        str = str.replace(/\\`/g, '');\n    }\n    return str;\n}\n\n/**\n * Convert time string to ms from UTC epoch for today\n * @param time Time string in the format `HH:mm`\n */\nexport function timeToDate(time: string): number {\n    const parts = time.split(':');\n    const date = dayjs()\n        .hour(+parts[0])\n        .minute(+parts[1])\n        .startOf('m');\n    return date.valueOf();\n}\n\n/**\n * Generate a random number\n * @param ceil Biggest value to generate not inclusive\n * @param floor Smallest value to generate. Defaults to 0\n */\nexport function randomInt(ceil: number, floor: number = 0) {\n    return Math.floor(Math.random() * (ceil - floor)) + floor;\n}\n\n/** Get time format string for locale */\nexport function timeFormatString(): string {\n    return is24HourTime() ? 'HH:mm' : 'h:mm A';\n}\n\n/** Whether locale string is displayed in 24 hour time */\nexport function is24HourTime(): boolean {\n    const date = new Date();\n    const localeString = date.toLocaleTimeString();\n    return localeString.indexOf('AM') < 0 && localeString.indexOf('PM') < 0;\n}\n\n/**\n * Downloads a file to the users computer with the given filename and contents\n * @param filename Name of the file to download\n * @param contents Contents of the file to download\n */\nexport function downloadFile(filename: string, contents: string) {\n    const element = document.createElement('a');\n    element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(contents));\n    element.setAttribute('download', filename);\n\n    element.style.display = 'none';\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n}\n\n/**\n * Parse raw CSV data into a JSON object\n * @param csv CSV data to parse\n */\nexport function csvToJson(csv: string) {\n    const lines = csv.split('\\n');\n    let fields = lines.splice(0, 1)[0].split(',');\n    fields = fields.map((v) => v.replace('\\r', ''));\n    const list: any[] = [];\n    for (const line of lines) {\n        let parts = line.split(',');\n        parts = parts.map((v) => v.replace('\\r', ''));\n        /* istanbul ignore else */\n        if (parts.length >= fields.length) {\n            const item: any = {};\n            for (let i = 0; i <= parts.length; i++) {\n                let part = null;\n                part = parts[i];\n                /* istanbul ignore else */\n                if (part !== undefined) {\n                    item[(fields[i] || '').split(' ').join('_').toLowerCase()] = part;\n                }\n            }\n            list.push(item);\n        }\n    }\n\n    return list;\n}\n\n/**\n * Convert javascript array to CSV string\n * @param json Javascript array to convert\n */\nexport function jsonToCsv(json: HashMap[]) {\n    /* istanbul ignore else */\n    if (json instanceof Array && json.length > 0) {\n        const keys = Object.keys(json[0]);\n        const valid_keys = keys.filter((key) => json[0].hasOwnProperty(key));\n        return `${valid_keys.join(',')}\\n${json\n            .map((item) => valid_keys.map((key) => item[key]).join(','))\n            .join('\\n')}`;\n    }\n    return '';\n}\n\n/* istanbul ignore next */\n/**\n * detect IE\n * returns version of IE or false, if browser is not Internet Explorer\n */\nexport function detectIE() {\n    var ua = window.navigator.userAgent;\n\n    var msie = ua.indexOf('MSIE ');\n    if (msie > 0) {\n        // IE 10 or older => return version number\n        return parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\n    }\n\n    var trident = ua.indexOf('Trident/');\n    if (trident > 0) {\n        // IE 11 => return version number\n        var rv = ua.indexOf('rv:');\n        return parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);\n    }\n\n    var edge = ua.indexOf('Edge/');\n    if (edge > 0) {\n        // Edge (IE 12+) => return version number\n        return parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);\n    }\n\n    // other browser\n    return false;\n}\n\n/**\n * Grab point details from mouse or touch event\n * @param event Event to grab details from\n */\nexport function eventToPoint(event: MouseEvent | TouchEvent): Point {\n    if (!event) {\n        return { x: -1, y: -1 };\n    }\n    if (event instanceof MouseEvent) {\n        return { x: event.clientX, y: event.clientY };\n    } else {\n        return event.touches && event.touches.length > 0\n            ? { x: event.touches[0].clientX, y: event.touches[0].clientY }\n            : { x: -1, y: -1 };\n    }\n}\n\n/**\n * Flatten nested array\n * @param an_array Array to flatten\n */\nexport function flatten<T = any>(an_array: T[]) {\n    const stack = [...an_array];\n    const res = [];\n    while (stack.length) {\n        // pop value from stack\n        const next = stack.pop();\n        if (Array.isArray(next)) {\n            // push back array items, won't modify the original input\n            stack.push(...next);\n        } else {\n            res.push(next);\n        }\n    }\n    // reverse to restore input order\n    return res.reverse();\n}\n","import { AbstractControl } from '@angular/forms';\n\nimport { User } from '../../services/data/users/user.class';\n\nimport * as dayjs from 'dayjs';\n\nconst HAS_ERROR = true;\n\n/**\n * Check that control value is a date that is the same or after from date\n * @param control Angular form control\n * @param is_from Comparison date(ms from UTC epoch). Defaults to the current time\n */\nexport function validateDate(control: AbstractControl, is_from: number = dayjs().valueOf()) {\n    const from = dayjs(is_from);\n    const date = dayjs(control.value || undefined);\n    return date.isBefore(from, 'd') ? { date: HAS_ERROR, message: 'Booking needs to be made in the future' } : null;\n}\n\n/**\n * Build start time validation function\n * @param date Date of the time to check\n * @param is_from Comparison date(ms from UTC epoch). Defaults to the current time\n */\nexport function buildValidateStartTime(date: number, is_from: number = dayjs().valueOf()) {\n    return (c) => validateStartTime(c, date, is_from);\n}\n\n/**\n * Check that control value time is after the comparison date time\n * @param control Angular form control\n * @param date Date of the time to check\n * @param is_from Comparison date(ms from UTC epoch). Defaults to the current time\n */\nexport function validateStartTime(control: AbstractControl, date: number, is_from: number = dayjs().valueOf()) {\n    const now = dayjs(is_from);\n    const parts = control.value.split(':');\n    const date_obj = dayjs(date).hour(+parts[0]).minute(+parts[1]);\n    return date_obj.isBefore(now, 'm') ? { start: HAS_ERROR, message: 'Booking time needs to be made in the future' } : null;\n}\n\nexport function buildValidateDuration(min: number = 30, max: number = 240) {\n    return (c) => validateDuration(c, min, max);\n}\n\nexport function validateDuration(control: AbstractControl, min: number = 30, max: number = 240) {\n    if (control.value < (min || 30)) {\n        return { duration: HAS_ERROR, message: `Minimum booking duration is ${min} minute${min === 1 ? 's' : ''}` };\n    } else if (control.value > (max || 480)) {\n        return { length: HAS_ERROR, message: `Maximum booking duration is ${max} minute${max === 1 ? 's' : ''}` };\n    }\n    return null;\n}\n\nexport function buildValidateAttendees(host: User, min: number = 0) {\n    return (c) => validateAttendees(c, host, min);\n}\n\nexport function validateAttendees(control: AbstractControl, host: User, min: number = 0) {\n    if (!control || !(control.value instanceof Array)) {\n        return min > 0\n            ? { invalid: true, message: `Minimum of ${min} attendee${min === 1 ? ' is' : 's are'} required other than you` }\n            : null;\n    }\n    const list: User[] = control.value;\n    if (host) {\n        const result = list.find(a => a.email === host.email);\n        if (result) { list.splice(list.indexOf(result), 1); }\n    }\n    return list.length >= min ? null : {\n        count: true,\n        message: `Minimum of ${min} attendee${min === 1 ? ' is' : 's are'} required other than you`\n    };\n}\n\nexport function validateEndTime(date_control: AbstractControl) {\n    return (control: AbstractControl) => {\n        const date = dayjs(date_control ? date_control.value : undefined).add(control.value || 60, 'm');\n        return date.isBefore(dayjs(), 'm') ? { end_time: true } : null;\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router, NavigationEnd, NavigationStart } from '@angular/router';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\n\nexport interface BookingFlowEvent {\n    /** Type of flow event */\n    type: 'previous' | 'next' | 'reset' | 'close' | 'error';\n    /** Step which the event was emitted from */\n    step: string;\n    /** Additional metadata for the event */\n    metadata?: HashMap;\n}\n\n@Component({\n    selector: 'app-bookings',\n    templateUrl: './bookings.component.html',\n    styleUrls: ['./bookings.component.scss'],\n})\nexport class BookingsComponent extends BaseDirective implements OnInit {\n    /** Booking flow */\n    public flow: 'spaces' | 'desks';\n    /** Whether to show the overlay menu */\n    public show_menu: boolean;\n\n    constructor(\n        private _service: ApplicationService,\n        private _route: ActivatedRoute,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.title = 'Book';\n        this.subscription(\n            'route.params',\n            this._route.paramMap.subscribe((params) => {\n                /* istanbul ignore else */\n                if (params.has('flow')) {\n                    this.flow = params.get('flow') as any;\n                }\n            })\n        );\n        this.subscription(\n            'router.events',\n            this._router.events.subscribe((event) => {\n                /* istanbul ignore else */\n                if (event instanceof NavigationStart) {\n                    /* istanbul ignore else */\n                    if (event.url.indexOf('book') < 0) {\n                        localStorage.removeItem('ACA_STAFF.booking_form_data');\n                    }\n                }\n            })\n        );\n    }\n}\n","<div class=\"booking page\">\n    <header class=\"header\">\n        <a-topbar-header [(menu)]=\"show_menu\"></a-topbar-header>\n    </header>\n    <main class=\"body\">\n        <ng-container [ngSwitch]=\"flow\">\n            <booking-desk-flow *ngSwitchCase=\"'desks'\"></booking-desk-flow>\n            <booking-space-flow *ngSwitchDefault></booking-space-flow>\n        </ng-container>\n    </main>\n    <footer class=\"footer\">\n        <a-footer-menu></a-footer-menu>\n    </footer>\n</div>\n<a-overlay-menu [(show)]=\"show_menu\"></a-overlay-menu>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Route } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ComposerModule } from '@placeos/composer';\n\nimport { BookingsComponent } from './bookings.component';\nimport { SharedContentModule } from 'src/app/shared/shared.module';\nimport { BookingSpaceFlowComponent } from './space-flow/space-flow.component';\nimport { BookingSpaceFlowFormComponent } from './space-flow/form/form.component';\nimport { BookingFindSpaceComponent } from './space-flow/find-space/find-space.component';\nimport { BookingSpaceItemComponent } from './space-flow/find-space/item/item.component';\nimport { BookingSpaceFiltersComponent } from './space-flow/find-space/filters/filters.component';\nimport { BookingCateringComponent } from './space-flow/catering/catering.component';\nimport { BookingCateringOrderListComponent } from './space-flow/catering/order-list/order-list.component';\nimport { BookingCateringOrderDetailsComponent } from './space-flow/catering/order-details/order-details.component';\nimport { CateringOrderListItemComponent } from './space-flow/catering/order-list/item/item.component';\nimport { CateringMenuCategoryComponent } from './space-flow/catering/order-details/category/category.component';\nimport { BookingCateringConfirmModalComponent } from './overlays/catering-confirm-modal/catering-confirm-modal.component';\nimport { CateringMenuItemComponent } from './space-flow/catering/order-details/item/item.component';\nimport { PackageOptionsModalComponent } from './overlays/package-options-modal/package-options-modal.component';\nimport { RequirementDetailsModalComponent } from './overlays/requirement-details-modal/requirement-details-modal.component';\nimport { CateringDetailsModalComponent } from './overlays/catering-details-modal/catering-details-modal.component';\nimport { RecurrenceSpacesModalComponent } from './overlays/recurrence-spaces-modal/recurrence-spaces-modal.component';\n\nconst ROUTES: Route[] = [\n    { path: ':flow', component: BookingsComponent },\n    { path: ':flow/:step', component: BookingsComponent },\n    { path: '', redirectTo: 'spaces' }\n];\n\n@NgModule({\n    declarations: [\n        BookingsComponent,\n        BookingSpaceFlowComponent,\n        BookingSpaceFlowFormComponent,\n        BookingFindSpaceComponent,\n        BookingSpaceItemComponent,\n        BookingSpaceFiltersComponent,\n        BookingCateringComponent,\n        BookingCateringOrderListComponent,\n        BookingCateringOrderDetailsComponent,\n        CateringOrderListItemComponent,\n        CateringMenuCategoryComponent,\n        BookingCateringConfirmModalComponent,\n        CateringMenuItemComponent,\n        PackageOptionsModalComponent,\n        RequirementDetailsModalComponent,\n        CateringDetailsModalComponent,\n        RecurrenceSpacesModalComponent,\n    ],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(ROUTES),\n        SharedContentModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ComposerModule\n    ]\n})\nexport class BookingsModule {}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { HashMap, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { humaniseDuration } from 'src/app/shared/utilities/general.utilities';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { UsersService } from 'src/app/services/data/users/users.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nimport * as dayjs from 'dayjs';\nimport { RECURRENCE_PERIODS } from 'src/app/shared/utilities/formatting.utilities';\n\n@Component({\n    selector: 'a-booking-confirm-modal',\n    templateUrl: './booking-confirm.component.html',\n    styleUrls: ['./booking-confirm.component.scss'],\n})\nexport class BookingConfirmComponent extends BaseDirective {\n    /** Emitter for user actions on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Display string for changes are being processed */\n    public loading: string;\n    /** Whether space availability is being checked */\n    public checking_available: boolean;\n    /** Whether to show all attendees */\n    public show_attendees: boolean;\n    /** Whether to show all attendees */\n    public show_locations: boolean;\n    /** Whether to show all catering orders */\n    public show_orders: boolean;\n    /** Whether booking has succeeded */\n    public success: boolean;\n\n    /** Whether booking needs to be accepted */\n    public get is_request(): boolean {\n        const options = {\n            date: this.booking.changes.date || this.booking.date,\n            duration: this.booking.changes.duration || this.booking.duration,\n            host: this.organiser,\n        };\n        console.log('Spaces:', this.spaces);\n        return this.spaces.reduce((request, space) => request || space.byRequest(options), false);\n    }\n\n    /** Booking to confirm changes to */\n    public get booking(): Booking {\n        return this._data.booking;\n    }\n\n    /** Title of the displayed event */\n    public get title(): string {\n        return this.booking.changes.title || this.booking.title;\n    }\n\n    /** Display string of when the event will occur */\n    public get when(): string {\n        const date_value = this.booking.changes.date || this.booking.date;\n        const duration_value = this.booking.changes.duration || this.booking.duration;\n        const all_day = this.booking.changes.all_day || this.booking.all_day;\n        const date = dayjs(date_value);\n        const end = date.add(duration_value, 'm');\n        if (all_day || duration_value > 23 * 60) {\n            return `${date.format('DD MMM YYYY')} - All Day`;\n        } else {\n            if (date.isSame(end, 'd')) {\n                return `${date.format('DD MMM YYYY, h:mm A')} - ${end.format('h:mm A')}`;\n            } else {\n                return `${date.format('DD MMM YYYY, h:mm A')} - ${end.format(\n                    'DD MMM YYYY, h:mm A'\n                )}`;\n            }\n        }\n    }\n\n    /** Display string for the event's duration */\n    public get duration(): string {\n        const duration_value = this.booking.changes.duration || this.booking.duration;\n        return humaniseDuration(duration_value);\n    }\n\n    /** Reccurence Range */\n    public get recurrence_range(): string {\n        if (!this.booking || !this.booking.recurrence || !this.booking.recurrence.period) {\n            return '';\n        }\n        const start = dayjs(this.booking.recurrence.start).format('MMMM DD, YYYY');\n        const end = dayjs(this.booking.recurrence.end).format('MMMM DD, YYYY');\n        return `${start} until ${end}`;\n    }\n\n    public get recurrence_period(): string {\n        if (!this.booking || !this.booking.recurrence) {\n            return '';\n        }\n        return this.booking.recurrence.period;\n    }\n\n    /** List of spaces associated with the event */\n    public get spaces(): readonly Space[] {\n        return (this.booking.changes.space_list || this.booking.space_list).map(\n            (space) => new Space(space)\n        );\n    }\n\n    /** List of attendees associated with the event not including the host */\n    public get attendees(): User[] {\n        const attendees = this.booking.changes.attendees || this.booking.attendees;\n        return attendees.filter((i) => i.email !== this.organiser.email);\n    }\n\n    /** Host of the event */\n    public get organiser(): User {\n        return this.booking.changes.organiser || this.booking.organiser || this._users.current;\n    }\n\n    /** Details about the event */\n    public get notes(): string {\n        return this.booking.changes.body || this.booking.body;\n    }\n\n    /** List of catering orders in the booking */\n    public get catering(): CateringOrder[] {\n        return (this.booking.changes.catering || this.booking.catering).map((order) => {\n            const space: any = this.spaces.find((a_space) => a_space.id === order.location_id) || {\n                level: {},\n            };\n            const building: any =\n                this._org.buildings.find((bld) => bld.id === space.level.id) || {};\n            return new CateringOrder({ ...order, location: space.name, symbol: building.currency });\n        });\n    }\n\n    /** Map of changes to the booking */\n    public get changes(): HashMap<boolean> {\n        /* istanbul ignore else */\n        if (!this.booking.id) {\n            return {};\n        }\n        const changes = this.booking.changes;\n        return Object.keys(changes).reduce((map, key) => {\n            /* istanbul ignore else */\n            if (changes[key]) {\n                map[key] = changes[key] !== this.booking[key];\n            }\n            return map;\n        }, {});\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<BookingConfirmComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: { booking: Booking },\n        private _service: ApplicationService,\n        private _org: OrganisationService,\n        private _users: UsersService,\n        private _spaces: SpacesService,\n        private _router: Router\n    ) {\n        super();\n        /* istanbul ignore else */\n        if (!this._data.booking) {\n            this._service.notifyError('No booking data to confirm');\n            this._dialog_ref.close();\n        }\n    }\n\n    /**\n     * Save booking changes\n     */\n    public saveChanges() {\n        this.loading = 'Checking availability of selected spaces';\n        this._dialog_ref.disableClose = true;\n        const onError = (message) => (err) => {\n            this.loading = null;\n            this._dialog_ref.disableClose = false;\n            this._service.notifyError(`${message}. Error: ${err}`);\n        };\n        this.checkSpaceAvailability().then(() => {\n            this.loading = 'Processing booking request...';\n            this.booking.save().then(() => {\n                this.loading = null;\n                this.success = true;\n                this._dialog_ref.disableClose = false;\n                this.event.emit({ reason: 'done' });\n                this._service.notifySuccess(\n                    `Successfully ${this.booking.id ? 'updated' : 'created'} booking`\n                );\n            }, onError(`Error ${this.booking.id ? 'updating' : 'creating'} booking`));\n        }, onError('Error checking space availability'));\n    }\n\n    public newBooking() {\n        localStorage.removeItem('ACA_STAFF.booking_form_data');\n        this._router.navigate(['/book', 'spaces']);\n        this._dialog_ref.close();\n    }\n\n    /**\n     * Check whether the selected spaces are available for the selected time period\n     */\n    public checkSpaceAvailability(): Promise<void> {\n        const spaces = this.spaces;\n        /* istanbul ignore else */\n        if (\n            (this.booking.id && !this.changes.date && !this.changes.duration) ||\n            (spaces && spaces.length <= 0)\n        ) {\n            return Promise.resolve();\n        }\n        return new Promise((resolve, reject) => {\n            this._spaces\n                .available({\n                    room_ids: spaces.map((space) => space.id).join(','),\n                    date: this.booking.changes.date || this.booking.date,\n                    duration: this.booking.changes.duration || this.booking.duration,\n                })\n                .then(\n                    (space_list) => {\n                        for (const space of space_list) {\n                            /* istanbul ignore else */\n                            if (!space.was_available) {\n                                return reject(\n                                    `${space.name} is not available at the select time period.`\n                                );\n                            }\n                        }\n                        resolve();\n                    },\n                    (err) => reject(err)\n                );\n        });\n    }\n}\n","<mat-dialog-content *ngIf=\"!loading && booking; else load_state\">\n    <main>\n        <button name=\"close\" mat-icon-button mat-dialog-close>\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"\n            ></app-icon>\n        </button>\n        <div class=\"details\">\n            <img\n                [src]=\"\n                    success\n                        ? is_request\n                            ? 'assets/img/requested.svg'\n                            : 'assets/img/confirmed.svg'\n                        : 'assets/img/edit.svg'\n                \"\n            />\n            <div class=\"text\">\n                <span i18n=\"Booking confirm header\">Booking Details</span>\n                <span *ngIf=\"success && !is_request\" class=\"success\" i18n=\"Booking confirmed\">&nbsp;Confirmed!</span>\n                <span class=\"request\" *ngIf=\"success && is_request\" i18n=\"Booking requested\"\n                    >&nbsp;Requested!</span\n                >\n            </div>\n            <div class=\"info\" *ngIf=\"success && is_request\" i18n=\"Booking requested description\">\n                Please await confirmation of room\n            </div>\n        </div>\n        <div class=\"field\" name=\"title\">\n            <label i18n=\"Booking confirm title label\"\n                >Title<span *ngIf=\"changes.title\">*</span>:</label\n            >\n            <div class=\"value\">{{ title || 'No title' }}</div>\n        </div>\n        <div class=\"field\" name=\"when\">\n            <label i18n=\"Booking confirm when label\"\n                >When<span *ngIf=\"changes.date\">*</span>:</label\n            >\n            <div class=\"value\">{{ when }}</div>\n        </div>\n        <div class=\"field\" name=\"duration\">\n            <label i18n=\"Booking confirm duration label\"\n                >Duration<span *ngIf=\"changes.duration\">*</span>:</label\n            >\n            <div class=\"value\">{{ duration }}</div>\n        </div>\n        <div class=\"field\" name=\"recurrence\" *ngIf=\"recurrence_range\">\n            <label i18n=\"Booking Confirm Recurrence label\">\n                Recurrence<span *ngIf=\"changes.date\">*</span>:\n            </label>\n            <div class=\"value\">{{ recurrence_period }} from {{ recurrence_range }}</div>\n        </div>\n        <div class=\"field multi\" name=\"location\">\n            <label i18n=\"Booking confirm locations label\"\n                >Locations({{ spaces.length || '0' }})<span *ngIf=\"changes.location\">*</span\n                >:</label\n            >\n            <div class=\"value\">\n                <div class=\"list\" [class.shown]=\"show_locations\">\n                    <div class=\"list-item\" *ngFor=\"let item of spaces\" [title]=\"item?.name\">\n                        <div class=\"text\">{{ item?.name }}</div>\n                    </div>\n                    <div\n                        class=\"list-item\"\n                        *ngIf=\"!spaces.length\"\n                        i18n=\"Booking confirm locations empty label\"\n                    >\n                        No Locations\n                    </div>\n                </div>\n                <button\n                    class=\"show\"\n                    *ngIf=\"spaces.length > 5\"\n                    (touchrelease)=\"show_locations = !show_locations\"\n                    i18n=\"Booking confirm locations show more label\"\n                >\n                    {{ show_locations ? 'Hide' : 'Show' }} Locations\n                </button>\n            </div>\n        </div>\n        <div class=\"field\" name=\"host\">\n            <label i18n=\"Booking confirm host label\"\n                >Host<span *ngIf=\"changes.organiser_email\">*</span>:</label\n            >\n            <div class=\"value\">{{ organiser?.name || organiser?.email }}</div>\n        </div>\n        <div class=\"field\" name=\"attendees\">\n            <label i18n=\"Booking confirm attendees label\"\n                >Attendees({{ attendees.length || '0' }})<span *ngIf=\"changes.attendees\">*</span\n                >:</label\n            >\n            <div class=\"value\">\n                <span\n                    *ngIf=\"!attendees || !attendees.length\"\n                    i18n=\"Booking confirm attendees empty label\"\n                    >&lt;No Attendees&gt;</span\n                >\n                <div class=\"list\" [class.shown]=\"show_attendees\">\n                    <div\n                        class=\"list-item\"\n                        *ngFor=\"let item of attendees\"\n                        [title]=\"item?.name + (item?.email ? '\\n' + item.email : '')\"\n                    >\n                        <div class=\"text\">\n                            <div class=\"name\">{{ item.name }}</div>\n                            <div class=\"email\" *ngIf=\"item.email\">\n                                <a [href]=\"'mailto:' + item.email + '?subject=' + booking.title\">{{\n                                    item.email\n                                }}</a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <button\n                    class=\"show\"\n                    *ngIf=\"attendees.length > 5\"\n                    (touchrelease)=\"show_attendees = !show_attendees\"\n                    i18n=\"Booking confirm attendees show more label\"\n                >\n                    {{ show_attendees ? 'Hide' : 'Show' }} Attendees\n                </button>\n            </div>\n        </div>\n        <div class=\"field\" name=\"notes\">\n            <label i18n=\"Booking confirm notes label\"\n                >Notes<span *ngIf=\"changes.body\">*</span>:</label\n            >\n            <div class=\"value\" [innerHTML]=\"notes || 'No notes'\"></div>\n        </div>\n        <div class=\"field\" name=\"catering\">\n            <label i18n=\"Booking confirm catering label\"\n                >Catering Orders({{ catering.length || '0' }})<span *ngIf=\"changes.catering\">*</span\n                >:</label\n            >\n            <div class=\"value\">\n                <div class=\"list\" [class.shown]=\"show_orders\">\n                    <div class=\"list-item\" *ngFor=\"let order of catering\">\n                        <div class=\"text\">\n                            <div class=\"name\">{{ order.location || '&lt;Removed&gt;' }}</div>\n                            <div class=\"email\">\n                                {{ order.item_count }} item{{ order.item_count === 1 ? '' : '' }} |\n                                {{ order.total / 100 | currency: order.symbol }}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <button\n                    class=\"show\"\n                    *ngIf=\"catering.length > 5\"\n                    (touchrelease)=\"show_orders = !show_orders\"\n                    i18n=\"Booking confirm catering show more label\"\n                >\n                    {{ show_attendees ? 'Hide' : 'Show' }} Orders\n                </button>\n            </div>\n        </div>\n        <div class=\"info\" *ngIf=\"booking?.id\" i18n=\"Booking confirm changes label\">\n            * - changed fields\n        </div>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading\">\n    <footer>\n        <ng-container *ngIf=\"!success; else success_actions\">\n            <button mat-button name=\"edit\" class=\"inverse\" mat-dialog-close i18n=\"Booking confirm edit action\">\n                Edit\n            </button>\n            <button mat-button name=\"save\" (tapped)=\"saveChanges()\" i18n=\"Booking confirm save action\">\n                Save\n            </button>\n        </ng-container>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <main>\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">\n                {{ loading }}\n            </div>\n        </div>\n    </main>\n</ng-template>\n<ng-template #success_actions>\n    <button\n        mat-button\n        class=\"inverse\"\n        name=\"new\"\n        (tapped)=\"newBooking()\"\n        i18n=\"Booking confirm another booking action\"\n    >\n        New Booking\n    </button>\n    <button\n        button\n        mat-button\n        mat-dialog-close\n        name=\"to-schedule\"\n        i18n=\"Booking confirm view schedule action\"\n    >\n        My Day\n    </button>\n</ng-template>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { FormGroup, FormControl } from '@angular/forms';\n\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\nimport * as dayjs from 'dayjs';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\nexport interface CateringConfirmModalData {\n    form: FormGroup;\n    date: number;\n}\n\n@Component({\n    selector: 'a-catering-confirm-modal',\n    templateUrl: './catering-confirm-modal.component.html',\n    styleUrls: ['./catering-confirm-modal.component.scss'],\n})\nexport class BookingCateringConfirmModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user actions on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of selected items for the order */\n    public item_list: CateringItem[] = [];\n\n    /** Space selected for delivery */\n    public get space(): Space {\n        return this._data.form && this._data.form.controls.space\n            ? this._data.form.controls.space.value\n            : ({} as any);\n    }\n    /** Delivery time for the order */\n    public get delivery_time(): string {\n        const date = dayjs(this._data.date);\n        return date.format('h:mm A');\n    }\n\n    /** Form field for order items */\n    public get item_field(): FormControl {\n        return this._data.form.controls.items as any;\n    }\n\n    /** Total cost of the order */\n    public get order_cost(): number {\n        return this.item_list.reduce((amount, item) => amount + item.amount * item.unit_price, 0);\n    }\n\n    /** Currency symbol for the selected space */\n    public get symbol(): string {\n        /* istanbul ignore else */\n        if (!this.space || !this.space.level) {\n            return 'USD';\n        }\n        const building = this._org.buildings.find(\n            (bld) => bld.id === this.space.level.building_id\n        ) || { currency: 'USD' };\n        return building.currency;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _org: OrganisationService,\n        private _dialog_ref: MatDialogRef<BookingCateringConfirmModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringConfirmModalData\n    ) {\n        super();\n        if (!this._data.form) {\n            this._service.notifyError('No form data for order');\n            this._dialog_ref.close();\n        }\n    }\n\n    public ngOnInit(): void {\n        /* istanbul ignore else */\n        if (this._data.form.controls.items) {\n            this.subscription(\n                'item_list',\n                this._data.form.controls.items.valueChanges.subscribe((items) => {\n                    /* istanbul ignore else */\n                    if (!items || items.length <= 0) {\n                        this._dialog_ref.close();\n                    }\n                })\n            );\n        }\n        this.item_list = this._data.form.controls.items.value.map((item) => new CateringItem(item));\n    }\n}\n","<header>\n    <div class=\"heading\" i18n=\"Catering confirm order header\">Confirm Catering Order</div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main>\n        <div class=\"details\">\n            Delivering to <span>{{ space.name || '&lt;Unset&gt;' }}</span> at <span>{{ delivery_time }}</span>\n        </div>\n        <div class=\"list\">\n            <a-catering-order-item\n                *ngFor=\"let item of item_list\"\n                [field]=\"item_field\"\n                [subitem]=\"true\"\n                [item]=\"item\"\n                [symbol]=\"symbol\"\n            ></a-catering-order-item>\n        </div>\n        <div class=\"total\">\n            <label>Order Total:</label>\n            <div class=\"value\">{{ order_cost / 100 | currency:symbol }}</div>\n        </div>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button (tapped)=\"event.emit({ reason: 'done' })\" i18n=\"Catering confirm save action\">Save Order</button>\n    </footer>\n</mat-dialog-actions>\n","import { Component, OnInit, Inject, Output, EventEmitter, ViewChild, ElementRef } from '@angular/core';\nimport { FormGroup, AbstractControl, FormControl } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { HashMap, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { BookingNote } from 'src/app/services/data/bookings/booking.interfaces';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\n\nimport * as dayjs from 'dayjs';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\nexport interface CateringDetailsModalData {\n    spaces: Space[];\n    notes_field: AbstractControl;\n    catering: AbstractControl;\n}\n\n@Component({\n    selector: 'a-catering-details-modal',\n    templateUrl: './catering-details-modal.component.html',\n    styleUrls: ['./catering-details-modal.component.scss'],\n})\nexport class CateringDetailsModalComponent implements OnInit {\n    /** Emitter for modal events */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Mapping of spaces to notes */\n    public notes: HashMap<string> = {};\n    /** Mapping of spaces to cost codes */\n    public codes: HashMap<string> = {};\n    /** Mapping of spaces to estimated head count */\n    public head_counts: HashMap<string> = {};\n    /** Mapping of spaces to form fields */\n    public form: HashMap<FormGroup> = {};\n    /** Map of spaces to whether they need a charge code */\n    public needs_charge_code: HashMap<boolean> = {};\n    /** Index of the active space */\n    public active_space: number = 0;\n\n    @ViewChild('content', { static: true }) private _content_el: ElementRef<HTMLElement>;\n\n    /** List of selected spaces */\n    public get space_list(): Space[] {\n        return this._data.spaces || [];\n    }\n\n    public get active_form(): FormGroup {\n        return this.form[this.space_list[this.active_space].id];\n    }\n\n    /** Whether form fields are valid */\n    public get is_valid(): boolean {\n        return this.space_list.reduce((valid, space) => valid && this.form[space.id].valid, true);\n    }\n\n    constructor(\n        private _users: UsersService,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringDetailsModalData\n    ) {}\n\n    public ngOnInit(): void {\n        const note_list = this._data.notes_field.value.filter(\n            (note: BookingNote) => note.type === 'catering'\n        );\n        this.notes = note_list.reduce((map, note) => {\n            map[note.space] = note.message;\n            return map;\n        }, {});\n        this.codes = this._data.catering.value.reduce((map, order: CateringOrder) => {\n            map[order.location_id] = order.charge_code;\n            return map;\n        }, {});\n        this.generateFormFields();\n    }\n\n    public submit(): void {\n        this.space_list.forEach((space) => this.form[space.id].markAllAsTouched());\n        /* istanbul ignore else */\n        if (this.is_valid) {\n            // Update notes\n            const notes = this._data.notes_field.value.filter(\n                (note: BookingNote) => note.type !== 'catering'\n            );\n            const new_notes = this.space_list.map(\n                (space) =>\n                    ({\n                        author: this._users.current.name,\n                        type: 'catering',\n                        message: this.form[space.id].controls.notes.value,\n                        space: space.id,\n                        date: dayjs().valueOf(),\n                    } as BookingNote)\n            );\n            this._data.notes_field.setValue(notes.concat(new_notes).filter((note) => note.message));\n            const orders = this._data.catering.value.map(\n                (order) =>\n                    new CateringOrder({\n                        ...order,\n                        charge_code: this.form[order.location_id].controls.code.value,\n                    })\n            );\n            this._data.catering.setValue(orders);\n            this.event.emit({ reason: 'done' });\n        } else {\n            this._scrollToBottom();\n        }\n    }\n\n    /** Generate form fields for each space */\n    private generateFormFields(): void {\n        for (const space of this.space_list) {\n            this.form[space.id] = new FormGroup({\n                notes: new FormControl(this.notes[space.id] || ''),\n                code: new FormControl(this.codes[space.id] || ''),\n            });\n        }\n    }\n\n    /** Scroll the content container to the bottom */\n    private _scrollToBottom(): void {\n        this._content_el.nativeElement.scrollTo({\n            top: this._content_el.nativeElement.scrollHeight,\n            left: 0,\n            behavior: 'smooth',\n        });\n    }\n}\n","<div class=\"header\">\n    <div class=\"tabs\">\n        <mat-tab-group [(selectedIndex)]=\"active_space\">\n            <mat-tab *ngFor=\"let space of space_list\">\n                <ng-template mat-tab-label>\n                    <span [class.error]=\"form[space.id].invalid && form[space.id].touched\">{{\n                        space.name + (form[space.id].invalid && form[space.id].touched ? '*' : '')\n                    }}</span>\n                </ng-template>\n            </mat-tab>\n        </mat-tab-group>\n    </div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</div>\n<mat-dialog-content>\n    <main>\n        <div class=\"details\">\n            <img src=\"assets/img/food-notes.svg\" />\n            <div class=\"text\">Please specify any allergies or gluten intolerances</div>\n        </div>\n        <form *ngIf=\"space_list[active_space] && active_form\" [formGroup]=\"active_form\">\n            <div class=\"field\">\n                <label for=\"equipment-notes\" i18n=\"Catering details equipment notes label\">\n                    (eg - allergies, in tolerances, no ice in drinks etc) Additional requests are\n                    handled in confidence.\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"equipment-notes\"\n                        formControlName=\"notes\"\n                        placeholder=\"Add notes here...\"\n                        i18n-placeholder\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label\n                    for=\"charge-code\"\n                    [class.error]=\"\n                        active_form.controls.code.touched && active_form.controls.code.invalid\n                    \"\n                    i18n=\"Catering details charge code label\"\n                >\n                    Charge Code<span *ngIf=\"needs_charge_code[space_list[active_space].id]\">*</span>\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"charge-code\"\n                        formControlName=\"code\"\n                        placeholder=\"Charge Code\"\n                        i18n-placeholder\n                    />\n                    <mat-error i18n=\"Catering details charge code error\">\n                        Charge Code is required\n                    </mat-error>\n                    <mat-hint i18n=\"Catering details charge code hint\">\n                        <span>Note:</span> Your booking will be confirmed before you are charged.\n                    </mat-hint>\n                </mat-form-field>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button (tapped)=\"submit()\" i18n=\"Catering details save action\">\n            Add to booking\n        </button>\n    </footer>\n</mat-dialog-actions>\n","import { Component, Output, EventEmitter, Inject } from '@angular/core';\n\nimport { DialogEvent, HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\n\nexport interface PackageOptionsModalData {\n    item: CateringCategory;\n}\n\nexport function checkItemRequirements(category: CateringCategory): boolean {\n    const items = category.items;\n    return category.must_select >= items.length\n        ? items.reduce((valid, item) => valid && checkItemRequirements(item as any), true)\n        : items.reduce((amount, item) => (amount + item.amount ? 1 : 0), 0) ===\n              category.must_select;\n}\n\nexport function getActiveItems(category: CateringCategory): HashMap<string> {\n    let map = {};\n    if (category.items) {\n        const item = category.items.find(item  => item.amount > 0);\n        if (item) {\n            map[category.id] = item.id;\n        }\n        category.items.forEach(item => map = { ...map, ...getActiveItems(item as any) })\n    }\n    return map;\n}\n\n@Component({\n    selector: 'a-package-options-modal',\n    templateUrl: './package-options-modal.component.html',\n    styleUrls: ['./package-options-modal.component.scss']\n})\nexport class PackageOptionsModalComponent {\n    /** Emitter for user actions on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    /** Item to select options for */\n    public get item(): CateringCategory {\n        return this._data.item;\n    }\n\n    /** Whether package requirements have been met */\n    public get requirements_met(): boolean {\n        return checkItemRequirements(this.item);\n    }\n\n    public get active_items(): HashMap<string> {\n        return getActiveItems(this.item);\n    }\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: PackageOptionsModalData) {}\n\n    /**\n     * Update the list of selected items\n     */\n    public updateAmount(a_package: CateringCategory, option: CateringItem, state: boolean) {\n        if (state) {\n            const needed = a_package.must_select;\n            const active = a_package.items.filter(an_item => an_item.amount > 0).length;\n            if (active >= needed) {\n                const item = a_package.items.find(an_item => an_item.amount > 0);\n                item.setAmount(0);\n            }\n            option.setAmount(1);\n        } else {\n            option.setAmount(0);\n        }\n    }\n}\n","<header>\n    <h3 i18n=\"Catering package options header\">Package Options</h3>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main>\n        <ng-container *ngTemplateOutlet=\"item_display; context: { package: item }\"></ng-container>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button [disabled]=\"!requirements_met\" (tapped)=\"event.emit({ reason: 'done' })\" i18n=\"Catering package options save action\">\n            Confirm Options\n        </button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #item_display let-package=\"package\">\n    <ng-container *ngIf=\"package.items && package.items.length\">\n        <mat-radio-group [ngModel]=\"active_items[package.id]\">\n            <div class=\"item\" *ngFor=\"let option of package.items\" [attr.to-select]=\"option.must_select\">\n            <ng-container\n                *ngIf=\"\n                    package.must_select &&\n                    package.must_select < package.items.length &&\n                    !option.must_select\n                \"\n            >\n                <mat-checkbox\n                    *ngIf=\"package.must_select > 1\"\n                    [checked]=\"!!option.amount\"\n                    (change)=\"updateAmount(package, option, $event.checked)\"\n                >\n                    {{ option.name }}\n                </mat-checkbox>\n                <mat-radio-button\n                    *ngIf=\"package.must_select === 1\"\n                    [value]=\"option.id\"\n                    (change)=\"updateAmount(package, option, true)\"\n                >\n                    {{ option.name }}\n                </mat-radio-button>\n            </ng-container>\n            <ng-container *ngIf=\"package.must_select >= package.items.length || option.must_select\">\n                {{ option.name }}\n            </ng-container>\n            <ng-container\n                *ngTemplateOutlet=\"item_display; context: { package: option }\"\n            ></ng-container>\n        </div>\n    </mat-radio-group>\n    </ng-container>\n</ng-template>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialog } from '@angular/material/dialog';\n\nimport { Space, RecurrenceAvailability } from 'src/app/services/data/spaces/space.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { SpaceSelectModalComponent, SpaceSelectModalData } from 'src/app/overlays/space-select-modal/space-select-modal.component';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\nimport { BookingRecurrenceSpaceDetails } from 'src/app/services/data/bookings/booking.interfaces';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\n\nimport * as dayjs from 'dayjs';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nexport interface RecurrenceSpacesModalData {\n    /** Space that has recurrence unavailability */\n    space: Space;\n    /** Duration of the booking */\n    duration: number;\n    /** Duration of the booking */\n    host: User;\n    /** List of current conflict matchups */\n    conflicts: BookingRecurrenceSpaceDetails[];\n}\n\nexport interface OccurrenceDetails extends RecurrenceAvailability {\n    /** Display string for the occurence datetime */\n    date_string: string;\n    /** Name of the space that replaces the space on this occurrence */\n    replaced_by: string;\n}\n\n@Component({\n    selector: 'a-recurrence-spaces-modal',\n    templateUrl: './recurrence-spaces-modal.component.html',\n    styleUrls: ['./recurrence-spaces-modal.component.scss']\n})\nexport class RecurrenceSpacesModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for modal events */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of occurence details for space booking */\n    public occurrences: OccurrenceDetails[] = [];\n    /** List of space details for occurrences */\n    public space_details: BookingRecurrenceSpaceDetails[] = []\n\n    /** Space to setup recurrence for */\n    public get space(): Space {\n        return this._data.space;\n    }\n\n    /** Whether all occurences have a valid space */\n    public get occurrences_valid(): boolean {\n        return this.occurrences.reduce((valid, event) => valid && (event.available || !!event.replaced_by), true);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: RecurrenceSpacesModalData,\n        private _dialog: MatDialog,\n        private _spaces: SpacesService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.space_details = [].concat(this._data.conflicts || []);\n        this.updateOccurrences();\n    }\n\n    public save() {\n        this.event.emit({ reason: 'done', metadata: this.space_details });\n    }\n\n    public selectSpace(occurrence: OccurrenceDetails) {\n        const ref = this._dialog.open<SpaceSelectModalComponent, SpaceSelectModalData>(\n            SpaceSelectModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                maxWidth: '95vw',\n                data: {\n                    spaces: [],\n                    zone_ids: this.space.level.building_id,\n                    date: occurrence.date * 1000,\n                    duration: this._data.duration,\n                    host: this._data.host,\n                    multiple: false\n                }\n            }\n        );\n        this.subscription(\n            'new_spaces',\n            ref.componentInstance.event.subscribe(event => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    const space = event.metadata[0];\n                    /* istanbul ignore else */\n                    if (space) {\n                        this.space_details.unshift({\n                            date: occurrence.date,\n                            space: space.email,\n                            replaces: this.space.email\n                        });\n                        this.space_details = unique(this.space_details, 'date');\n                    }\n                    this.updateOccurrences();\n                    ref.close();\n                    this.unsub('new_spaces');\n                }\n            })\n        );\n    }\n\n    private updateOccurrences() {\n        this.occurrences = this._data.space.recurr_available.map(event => {\n            const space_details = this.space_details.find(details => details.date === event.date && details.replaces === this.space.email);\n            const email = (space_details || {}).space;\n            const space = this._spaces.find(email) || { email, name: email };\n            return {\n                ...event,\n                date_string: dayjs(event.date * 1000).format('dddd, DD MMMM YYYY'),\n                replaced_by: space.name\n            }\n        });\n    }\n}\n","<header>\n    <div class=\"heading\" i18n=\"Space recurrence header\">Recurrence - {{ space.name }}</div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main>\n        <div class=\"info\" i18n=\"Space recurrence information\">\n            * Select individual dates to update selected space\n        </div>\n        <div class=\"item\" *ngFor=\"let item of occurrences\">\n            <div class=\"date\">{{ item.date_string }}</div>\n            <div class=\"action\">\n                <button\n                    mat-button\n                    [class.inverse]=\"!item.available && !item.replaced_by\"\n                    (tapped)=\"selectSpace(item)\"\n                >\n                    <div class=\"content\">\n                        {{ item.replaced_by || (item.available ? space.name : 'Find Room') }}\n                    </div>\n                </button>\n            </div>\n        </div>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button\n            mat-button\n            [disabled]=\"!occurrences_valid\"\n            (tapped)=\"save()\"\n            i18n=\"Space recurrence save action\"\n        >\n            Add to Booking\n        </button>\n    </footer>\n</mat-dialog-actions>\n","import {\n    Component,\n    OnInit,\n    Inject,\n    Output,\n    EventEmitter,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { FormGroup, Validators, AbstractControl, FormControl } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { HashMap, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { BookingNote } from 'src/app/services/data/bookings/booking.interfaces';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\nimport * as dayjs from 'dayjs';\n\nexport interface RequirementDetailsModalData {\n    spaces: Space[];\n    notes_field: AbstractControl;\n    codes_field: AbstractControl;\n    head_counts_field: AbstractControl;\n}\n\n@Component({\n    selector: 'a-requirement-details-modal',\n    templateUrl: './requirement-details-modal.component.html',\n    styleUrls: ['./requirement-details-modal.component.scss'],\n})\nexport class RequirementDetailsModalComponent implements OnInit {\n    /** Emitter for modal events */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Mapping of spaces to notes */\n    public notes: HashMap<string> = {};\n    /** Mapping of spaces to cost codes */\n    public codes: HashMap<string> = {};\n    /** Mapping of spaces to estimated head count */\n    public head_counts: HashMap<string> = {};\n    /** Mapping of spaces to form fields */\n    public form: HashMap<FormGroup> = {};\n    /** Map of spaces to whether they need a charge code */\n    public needs_charge_code: HashMap<boolean> = {};\n    /** Index of the active space */\n    public active_space: number = 0;\n\n    @ViewChild('content', { static: true }) private _content_el: ElementRef<HTMLElement>;\n\n    /** List of selected spaces */\n    public get space_list(): Space[] {\n        return this._data.spaces;\n    }\n\n    public get active_form(): FormGroup {\n        return this.form[this.space_list[this.active_space].id];\n    }\n\n    /** Whether form fields are valid */\n    public get is_valid(): boolean {\n        return this.space_list.reduce((valid, space) => valid && this.form[space.id].valid, true);\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _users: UsersService,\n        @Inject(MAT_DIALOG_DATA) private _data: RequirementDetailsModalData\n    ) {}\n\n    public ngOnInit(): void {\n        const note_list = this._data.notes_field.value.filter(\n            (note: BookingNote) => note.type === 'equipment'\n        );\n        this.notes = note_list.reduce((map, note) => {\n            map[note.space] = note.message;\n            return map;\n        }, {});\n        this.codes = { ...this._data.codes_field.value };\n        this.head_counts = { ...this._data.head_counts_field.value };\n        this.generateFormFields();\n    }\n\n    public submit(): void {\n        this.space_list.forEach((space) => this.form[space.id].markAllAsTouched());\n        /* istanbul ignore else */\n        if (this.is_valid) {\n            // Update notes\n            const notes = this._data.notes_field.value.filter(\n                (note: BookingNote) => note.type !== 'equipment'\n            );\n            const new_notes = this.space_list.map(\n                (space) =>\n                    ({\n                        author: this._users.current.name,\n                        type: 'equipment',\n                        message: this.form[space.id].controls.notes.value,\n                        space: space.id,\n                        date: dayjs().valueOf(),\n                    } as BookingNote)\n            );\n            this._data.notes_field.setValue(notes.concat(new_notes).filter((note) => note.message));\n            this._data.codes_field.setValue(\n                this.space_list.reduce((map, space) => {\n                    map[space.id] = this.form[space.id].controls.code.value;\n                    return map;\n                }, {})\n            );\n            this._data.head_counts_field.setValue(\n                this.space_list.reduce((map, space) => {\n                    map[space.id] = this.form[space.id].controls.head_count.value;\n                    return map;\n                }, {})\n            );\n            this.event.emit({ reason: 'done' });\n        } else {\n            this._scrollToBottom();\n        }\n    }\n\n    /** Generate form fields for each space */\n    private generateFormFields(): void {\n        for (const space of this.space_list) {\n            const building = this._org.buildings.find((bld) => bld.id === space.level.building_id);\n            this.needs_charge_code[space.id] = building.required.equipment_code;\n            this.form[space.id] = new FormGroup({\n                notes: new FormControl(this.notes[space.id] || ''),\n                code: new FormControl(\n                    this.codes[space.id] || '',\n                    building.required.equipment_code ? [Validators.required] : []\n                ),\n                head_count: new FormControl(this.head_counts[space.id] || '', [\n                    Validators.required,\n                ]),\n            });\n        }\n    }\n\n    /** Scroll the content container to the bottom */\n    private _scrollToBottom(): void {\n        this._content_el.nativeElement.scrollTo({\n            top: this._content_el.nativeElement.scrollHeight,\n            left: 0,\n            behavior: 'smooth',\n        });\n    }\n}\n","<div class=\"header\">\n    <div class=\"tabs\">\n        <mat-tab-group [(selectedIndex)]=\"active_space\">\n            <mat-tab *ngFor=\"let space of space_list\">\n                <ng-template mat-tab-label>\n                    <span [class.error]=\"form[space.id] && form[space.id].invalid && form[space.id].touched\">{{\n                        space.name + (form[space.id] && form[space.id].invalid && form[space.id].touched ? '*' : '')\n                    }}</span>\n                </ng-template>\n            </mat-tab>\n        </mat-tab-group>\n    </div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</div>\n<mat-dialog-content #content>\n    <main>\n        <div class=\"details\">\n            <img src=\"assets/img/equipment.svg\" />\n            <div class=\"text\" i18n=\"Booking equipment information\">\n                Would you like to add equipment to your booking's spaces?\n            </div>\n        </div>\n        <form *ngIf=\"space_list[active_space] && active_form\" [formGroup]=\"active_form\">\n            <div class=\"field\">\n                <label for=\"equipment-notes\" i18n=\"Booking equipment notes label\">\n                    (eg - particular room configurations or specific equipment etc) Additional\n                    requests are handled in confidence\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"equipment-notes\"\n                        formControlName=\"notes\"\n                        placeholder=\"Add notes here...\"\n                        i18n-placeholder\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"fieldset\">\n                <div class=\"field\">\n                    <label\n                        for=\"charge-code\"\n                        [class.error]=\"\n                            active_form.controls.code.touched && active_form.controls.code.invalid\n                        \"\n                        i18n=\"Booking equipment charge code label\"\n                    >\n                        Charge Code<span *ngIf=\"needs_charge_code[space_list[active_space].id]\"\n                            >*</span\n                        >\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"charge-code\"\n                            formControlName=\"code\"\n                            placeholder=\"Charge Code\"\n                            i18n-placeholder\n                        />\n                        <mat-hint i18n=\"Booking equipment charge code hint\">\n                            <span>Note:</span> Your booking will be confirmed before you are\n                            charged.\n                        </mat-hint>\n                        <mat-error i18n=\"Booking equipment charge code error\">\n                            Charge Code is required\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"field\">\n                    <label\n                        for=\"head-count\"\n                        [class.error]=\"\n                            active_form.controls.head_count.touched &&\n                            active_form.controls.head_count.invalid\n                        \"\n                        i18n=\"Booking equipment headcount label\"\n                    >\n                        Headcount Estimate<span>*</span>\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"head-count\"\n                            formControlName=\"head_count\"\n                            type=\"number\"\n                            placeholder=\"e.g. 12\"\n                            i18n-placeholder\n                        />\n                        <mat-hint i18n=\"Booking equipment headcount hint\">\n                            <span>Note:</span> This estimate is used to calculate catering and/or\n                            assign rooms. Please keep updated of any changes.\n                        </mat-hint>\n                        <mat-error i18n=\"Booking equipment headcount error\">\n                            Headcount Estimate is required\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button (tapped)=\"submit()\">Add to booking</button>\n    </footer>\n</mat-dialog-actions>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { BookingFlowEvent } from '../../bookings.component';\nimport { CateringOrder } from '../../../../services/data/catering/catering-order.class';\nimport { Space } from 'src/app/services/data/spaces/space.class';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'booking-catering',\n    templateUrl: './catering.component.html',\n    styleUrls: ['./catering.component.scss'],\n})\nexport class BookingCateringComponent {\n    /** Form fields for the booking */\n    @Input() public form: FormGroup;\n    /** Emitter for flow update events */\n    @Output() public event = new EventEmitter<BookingFlowEvent>();\n    /** Active order to display details for */\n    public active_order: CateringOrder;\n\n    /** Field for storing catering details */\n    public get catering_field() {\n        return this.form && this.form.controls.catering ? this.form.controls.catering : null;\n    }\n\n    /** List of spaces selected for the booking */\n    public get space_list(): Space[] {\n        return this.form && this.form.controls.space_list\n            ? this.form.controls.space_list.value\n            : [];\n    }\n\n    /** Date of the booking */\n    public get date(): number {\n        return this.form && this.form.controls.date\n            ? this.form.controls.date.value\n            : dayjs().startOf('m').valueOf();\n    }\n\n    /** Duration of the booking */\n    public get duration(): number {\n        return this.form && this.form.controls.duration ? this.form.controls.duration.value : 60;\n    }\n\n    /** Whether booking is all day */\n    public get all_day(): boolean {\n        return this.form && this.form.controls.all_day && this.form.controls.all_day.value;\n    }\n\n    /** Create a new catering order */\n    public newOrder(): void {\n        const order = new CateringOrder({});\n        this.active_order = order;\n    }\n\n    /** Handle changes to catering order */\n    public handleOrderEvent(order: CateringOrder) {\n        /* istanbul ignore else */\n        if (order) {\n            const orders = this.form.controls.catering.value;\n            const index = orders.findIndex((an_order) => order.id === an_order.id);\n            if (index < 0) {\n                orders.push(order);\n            } else {\n                orders.splice(index, 1, order);\n            }\n            this.form.controls.catering.setValue(orders);\n        }\n        this.active_order = null;\n    }\n}\n","<div class=\"catering\">\n    <ng-container *ngIf=\"!active_order; else order_display\">\n        <a-catering-order-list\n            [catering]=\"catering_field\"\n            [date]=\"date\"\n            [all_day]=\"all_day\"\n            (order)=\"$event ? (active_order = $event) : newOrder()\"\n            (event)=\"event.emit($event)\"\n        ></a-catering-order-list>\n    </ng-container>\n</div>\n<ng-template #order_display>\n    <a-catering-order-details\n        [space_list]=\"space_list\"\n        [order]=\"active_order\"\n        [date]=\"date\"\n        [duration]=\"duration\"\n        [all_day]=\"all_day\"\n        (event)=\"$event ? handleOrderEvent($event) : active_order = null\"\n    ></a-catering-order-details>\n</ng-template>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\n\n@Component({\n    selector: 'a-category-display',\n    templateUrl: './category.component.html',\n    styleUrls: ['./category.component.scss']\n})\nexport class CateringMenuCategoryComponent implements OnInit {\n    /** Category to display details for */\n    @Input() public category: CateringCategory;\n    /** Form control for the list of order items */\n    @Input() public items: FormControl;\n    /** Currency symbol for the active space */\n    @Input() public symbol: string;\n    /** Whether item should be disabled if not available anytime */\n    @Input() public disabled: boolean;\n    /** Emitter for close events */\n    @Output() public close = new EventEmitter<void>();\n\n    constructor() {}\n\n    ngOnInit(): void {}\n}\n","\n<div class=\"header\">\n    <div class=\"content\">\n        <button mat-icon-button (tapped)=\"close.emit()\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'arrow_back' }\"></app-icon>\n        </button>\n        <div class=\"name\">{{ category?.name }}</div>\n    </div>\n</div>\n<ng-container *ngIf=\"category.items && category.items.length; else empty_state\">\n    <div class=\"item\" *ngFor=\"let item of category.items\">\n        <a-catering-order-item [disabled]=\"disabled\" [symbol]=\"symbol\" [item]=\"item\" [field]=\"items\"></a-catering-order-item>\n    </div>\n</ng-container>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\" i18n=\"Catering category empty label\">Category contains no available items</div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { FormControl } from '@angular/forms';\n\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { ANIMATION_SHOW_CONTRACT_EXPAND } from 'src/app/shared/globals/angular-animations';\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { PackageOptionsModalComponent } from 'src/app/shell/bookings/overlays/package-options-modal/package-options-modal.component';\n\n@Component({\n    selector: 'a-catering-order-item',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss'],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class CateringMenuItemComponent extends BaseDirective implements OnChanges {\n    /** Whether item is a child of another */\n    @Input() public subitem: boolean;\n    /** Item to display */\n    @Input() public item: CateringCategory;\n    /** Field for storing items */\n    @Input() public field: FormControl;\n    /** Current symbol for the selected space */\n    @Input() public symbol: string;\n    /** Whether item should be disabled if not available anytime */\n    @Input() public disabled: boolean;\n    /** Whether to show children items */\n    public show_children: boolean;\n\n    /** List of contents of the package */\n    public get contents(): string {\n        return this.item.items\n            ? this.item.items.reduce((list, item) => {\n                  /* istanbul ignore else */\n                  if (list) {\n                      list += '\\n\\n';\n                  }\n                  return (list += `${item.name}${\n                      (item as any).items\n                          ? (item as any).items.reduce(\n                                (a_list, an_item) =>\n                                    (a_list += `\\n ${an_item.amount ? '✓' : '•'} ${an_item.name} `),\n                                ''\n                            )\n                          : ''\n                  } ${item.amount ? '✓' : ''}`);\n              }, '')\n            : '';\n    }\n\n    constructor(private _service: ApplicationService, private _dialog: MatDialog) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.field && this.field) {\n            const list = this.field.value;\n            const item = list.find((an_item) => an_item.id === this.item.id);\n            this.item.setAmount(item ? item.amount : 0);\n            this.subscription(\n                'field_change',\n                this.field.valueChanges.subscribe((list) => {\n                    const item = list.find((an_item) => an_item.id === this.item.id);\n                    this.item.setAmount(item ? item.amount : 0);\n                })\n            );\n        }\n    }\n\n    /**\n     * Update the amount of the item in the order\n     * @param value New amount\n     */\n    public updateAmount(value: number) {\n        /* istanbul ignore else */\n        if (this.field) {\n            const list: CateringItem[] = this.field.value;\n            const item = list.find((an_item) => an_item.id === this.item.id);\n            if (item) {\n                this.item.setAmount(value);\n                item.setAmount(value);\n            } else {\n                const amount = this.item.amount;\n                this.item.setAmount(value);\n                if (this.item.package && amount < value && this.item.items.length) {\n                    this.selectPackageOptions().then(\n                        (confirmed_item) => {\n                            list.push(new CateringItem(confirmed_item));\n                            this.field.setValue(list.filter((an_item) => an_item.amount));\n                        },\n                        () => {\n                            this.item.setAmount(999);\n                            this.timeout('amount', () => this.item.setAmount(0), 5);\n                            this._service.notifyWarn(\n                                'Package options not selected. Item removed from order'\n                            );\n                        }\n                    );\n                } else {\n                    list.push(new CateringItem(this.item));\n                }\n            }\n            this.field.setValue(list.filter((an_item) => an_item.amount));\n        }\n    }\n\n    /** Reselect package options */\n    public updatePackageOptions(): void {\n        this.selectPackageOptions().then(\n            () => null,\n            () => null\n        );\n    }\n\n    /**\n     * Open modal for user to select package options\n     */\n    private selectPackageOptions(): Promise<CateringCategory> {\n        return new Promise((resolve, reject) => {\n            const ref = this._dialog.open(PackageOptionsModalComponent, {\n                maxWidth: '95vw',\n                data: {\n                    item: new CateringCategory(this.item),\n                },\n            });\n            let done = false;\n            ref.componentInstance.event.subscribe((event) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    done = true;\n                    resolve(ref.componentInstance.item);\n                    ref.close();\n                }\n            });\n            ref.afterClosed().subscribe(() => {\n                /* istanbul ignore else */\n                if (!done) {\n                    reject();\n                }\n            });\n        });\n    }\n}\n","<div\n    class=\"catering-item\"\n    *ngIf=\"item\"\n    [class.subitem]=\"subitem\"\n    [attr.disabled]=\"disabled && !item.can_order_anytime\"\n>\n    <div\n        class=\"image\"\n        *ngIf=\"!subitem\"\n        [style.background-image]=\"'url(' + item.image_path + ')'\"\n    ></div>\n    <div class=\"details\">\n        <div class=\"name\">{{ item.name }}</div>\n        <div class=\"description\">{{ item.package ? '[Package] ' : '' }}{{ item.description }}</div>\n        <div class=\"options\">\n            <div class=\"option price mobile-only\" *ngIf=\"item.unit_price\">\n                {{ item.unit_price / 100 | currency: symbol }}\n            </div>\n            <div\n                class=\"option\"\n                *ngIf=\"item.package && item.items.length && !item.must_select\"\n                [matTooltip]=\"contents\"\n                i18n=\"Catering order item available options label\"\n            >\n                { item.items.length, plural, =1 { Contains {{ item.items.length }} item } other {\n                Contains {{ item.items.length }} items } }\n            </div>\n            <div\n                class=\"option\"\n                *ngIf=\"item.package && item.must_select && item.amount > 0\"\n                [matTooltip]=\"contents\"\n            >\n                {{ item.must_select }}\n                <span class=\"not-mobile\" i18n=\"Catering order item selected options label\">\n                    Selected\n                </span>\n            </div>\n            <button\n                mat-button\n                *ngIf=\"item.package && item.must_select && item.amount > 0\"\n                (tapped)=\"updatePackageOptions()\"\n                i18n=\"Catering order item options change action\"\n            >\n                Customise\n            </button>\n        </div>\n    </div>\n    <div class=\"option price not-mobile\" *ngIf=\"item.unit_price\">\n        {{ item.unit_price / 100 | currency: symbol }}\n    </div>\n    <a-counter\n        *ngIf=\"!item.items || item.package\"\n        [ngModel]=\"item.amount\"\n        (ngModelChange)=\"updateAmount($event)\"\n    ></a-counter>\n    <button\n        mat-icon-button\n        *ngIf=\"item.items && item.items.length && !item.package\"\n        (tapped)=\"show_children = !show_children\"\n    >\n        <app-icon\n            [icon]=\"{\n                class: 'material-icons',\n                content: show_children ? 'keyboard_arrow_up' : 'keyboard_arrow_down'\n            }\"\n        ></app-icon>\n    </button>\n</div>\n<div class=\"children\" [@show]=\"show_children ? 'show' : 'hide'\">\n    <a-catering-order-item\n        *ngFor=\"let sub_item of item.items\"\n        [subitem]=\"true\"\n        [symbol]=\"symbol\"\n        [item]=\"sub_item\"\n        [field]=\"field\"\n    ></a-catering-order-item>\n</div>\n","import { Component, OnInit, Input, SimpleChanges, Output, EventEmitter } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { FormGroup, FormControl } from '@angular/forms';\n\nimport { CateringOrder } from '../../../../../services/data/catering/catering-order.class';\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { Identity, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport {\n    BookingCateringConfirmModalComponent,\n    CateringConfirmModalData,\n} from '../../../overlays/catering-confirm-modal/catering-confirm-modal.component';\nimport { CateringMenuService } from 'src/app/services/data/catering/catering-menu.service';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nimport * as dayjs from 'dayjs';\nimport spacetime from 'spacetime';\n\n@Component({\n    selector: 'a-catering-order-details',\n    templateUrl: './order-details.component.html',\n    styleUrls: ['./order-details.component.scss'],\n})\nexport class BookingCateringOrderDetailsComponent extends BaseDirective implements OnInit {\n    /** Catering order to edit details of */\n    @Input() public order: CateringOrder;\n    /** Booking date */\n    @Input() public date: number;\n    /** Booking duration */\n    @Input() public duration: number;\n    /** Booking duration */\n    @Input() public space_list: Space[];\n    /** Whether booking is all day */\n    @Input() public all_day: boolean;\n    /** Emitter for changes to the catering order */\n    @Output() public event = new EventEmitter<CateringOrder>();\n    /** Form controls for order */\n    public form: FormGroup;\n    /** List of available catering item categories */\n    public category_list: CateringCategory[] = [];\n    /** Active category to display details for */\n    public active_category: CateringCategory;\n    /** List of available times for delivering catering */\n    public available_times: Identity[] = [];\n    /** Whether the menu is loading */\n    public loading: boolean;\n\n    /** Whether user is able to order from the currently selected space */\n    public get can_order(): boolean {\n        return (\n            (this.active_building.has_catering || this.category_list.length) &&\n            (!this.within_restricted_time || this.has_available_items)\n        );\n    }\n\n    /** Building associated with the selected space */\n    public get active_building(): Building {\n        const form_controls = (this.form || { controls: { space: { value: '' } } }).controls;\n        const space: Space = form_controls.space.value || { level: {} };\n        return this._org.buildings.find(\n            (bld) => space.level.building_id === bld.id\n        ) || { catering_restricted_from: 0 } as any;\n    }\n\n    /** Currency code for the active building */\n    public get symbol(): string {\n        return this.active_building.currency || 'USD';\n    }\n\n    /** Number of items in the order */\n    public get item_count(): number {\n        return this.form\n            ? this.form.controls.items.value.reduce((total, item) => total + item.amount, 0)\n            : 0;\n    }\n\n    /** Whether booking time is outside of catering hours */\n    public get out_of_hours(): boolean {\n        return this.form.controls.start.value < 0;\n    }\n\n    /** Whether booking is with the restricted ordering period */\n    public get within_restricted_time(): boolean {\n        const building = this.active_building;\n        /* istanbul ignore else */\n        if (!building.catering_restricted_from || building.catering_restricted_from <= 0) {\n            return false;\n        }\n        const date = dayjs();\n        const restricted = dayjs(this.date).subtract(building.catering_restricted_from, 'h');\n        return date.isAfter(restricted, 's');\n    }\n\n    /** Whether items are available for order at anytime */\n    public get has_available_items(): boolean {\n        return this.category_list.reduce(\n            (available, category) => available || category.can_order_anytime,\n            false\n        );\n    }\n\n    constructor(private _org: OrganisationService, private _spaces: SpacesService, private _menu: CateringMenuService, private _dialog: MatDialog) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.loadMenu();\n        this.generateAvailableTimes();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.date || changes.duration) {\n            this.generateAvailableTimes();\n            /* istanbul ignore else */\n            if (\n                this.form &&\n                !this.available_times.find((time) => time.id === this.form.controls.start.value)\n            ) {\n                this.form.controls.start.setValue(this.available_times[0].id);\n            }\n        }\n        /* istanbul ignore else */\n        if (changes.space_list) {\n            /* istanbul ignore else */\n            if (this.form && this.space_list && !this.form.controls.space.value) {\n                this.form.controls.space.setValue(this.space_list[0]);\n            }\n        }\n        /* istanbul ignore else */\n        if (changes.order && this.order) {\n            this.initForm();\n        }\n    }\n\n    public initForm() {\n        console.log('Order:', this.order);\n        this.form = new FormGroup({\n            id: new FormControl(this.order.id),\n            booking_date: new FormControl(\n                this.all_day ? dayjs(this.date).startOf('d').valueOf() : this.date\n            ),\n            space: new FormControl(\n                this._spaces.find(this.order.location_id) || this.space_list[0]\n            ),\n            location_id: new FormControl(this.order.location_id || this.space_list[0].id),\n            start: new FormControl(this.order.delivery_time || this.available_times[0].id),\n            items: new FormControl(this.order.items.map((item) => new CateringItem(item))),\n        });\n        this.subscription(\n            'space_change',\n            this.form.controls.space.valueChanges.subscribe((space) => {\n                this.form.controls.location_id.setValue(space.id);\n                this.generateAvailableTimes();\n                if (\n                    !this.available_times.find((time) => time.id === this.form.controls.start.value)\n                ) {\n                    this.form.controls.start.setValue(this.available_times[0].id);\n                }\n                this.form.controls.items.setValue([]);\n                this.loadMenu();\n            })\n        );\n        this.generateAvailableTimes();\n        if (\n            this.form &&\n            !this.available_times.find((time) => time.id === this.form.controls.start.value)\n        ) {\n            this.form.controls.start.setValue(this.available_times[0].id);\n        }\n    }\n\n    public confirmOrder() {\n        const ref = this._dialog.open<\n            BookingCateringConfirmModalComponent,\n            CateringConfirmModalData\n        >(BookingCateringConfirmModalComponent, {\n            maxWidth: '95vw',\n            data: {\n                date: this.date,\n                form: this.form,\n            },\n        });\n        this.subscription(\n            'confirm_event',\n            ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    const order = new CateringOrder(this.form.value);\n                    this.event.emit(order);\n                    ref.close();\n                }\n            })\n        );\n        ref.afterClosed().subscribe(() => this.unsub('confirm_event'));\n    }\n\n    private loadMenu() {\n        const space: Space = this.form ? this.form.controls.space.value : null;\n        /* istanbul ignore else */\n        if (!space) {\n            return;\n        }\n        this.loading = true;\n        this._menu.query({ room_id: space.id }).then(\n            (list) => {\n                this.loading = false;\n                this.category_list = list.map((i) => new CateringCategory(i));\n            },\n            () => (this.loading = false)\n        );\n    }\n\n    /** Generate a list of available delivery times for the given booking time */\n    private generateAvailableTimes() {\n        const start_date = this.all_day ? dayjs(this.date).startOf('d') : dayjs(this.date);\n        let { start, end } = this.generateStartAndEndTimes();\n        start = start.minute(Math.ceil(start.minute() / 5) * 5);\n        this.available_times = [];\n        while (start.isBefore(end, 'm')) {\n            this.available_times.push({\n                id: Math.abs(start_date.diff(start, 'm')),\n                name: start.format('h:mm A'),\n            });\n            start = start.add(5, 'm');\n        }\n        /* istanbul ignore else */\n        if (this.available_times.length === 0) {\n            this.available_times.push({ id: -1, name: 'Out of hours' });\n        }\n    }\n\n    private generateStartAndEndTimes(): { start: dayjs.Dayjs; end: dayjs.Dayjs } {\n        let start = dayjs(this.date);\n        /* istanbul ignore else */\n        if (this.all_day) {\n            start = start.startOf('d');\n        }\n        let end = this.all_day ? start.endOf('d') : start.add(this.duration, 'm');\n        let building_time = spacetime(start.toDate());\n        // const space: Space = this.form ? this.form.controls.space.value : null;\n        // if (space) {\n        //     const building = this._service.Organisation.buildings.find((bld) =>bld.id === space.level.building_id);\n        //     if (building && building.timezone) {\n        //         building_time = building_time.goto(building.timezone);\n        //     }\n        // }\n        building_time = building_time.hour(7);\n        const as_dayjs = dayjs(building_time.toLocalDate());\n        if (start.isBefore(as_dayjs, 'm')) {\n            start = as_dayjs;\n            end = start.add(13, 'h');\n        } else {\n            const possible_end = as_dayjs.hour(20);\n            if (end.isAfter(possible_end)) {\n                end = possible_end;\n            }\n        }\n        return { start, end };\n    }\n}\n","<div class=\"catering order-details\">\n    <div class=\"header\" *ngIf=\"form\">\n        <form [formGroup]=\"form\">\n            <div class=\"field\">\n                <label i18n=\"Catering order location label\">Deliver to:</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select formControlName=\"space\">\n                        <mat-option *ngFor=\"let space of space_list\" [value]=\"space\">\n                            {{ space.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"start\" i18n=\"Catering order delivery time label\">At:</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select name=\"start\" formControlName=\"start\">\n                        <mat-option *ngFor=\"let time of available_times\" [value]=\"time.id\">\n                            {{ time.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </form>\n    </div>\n    <div class=\"body\" *ngIf=\"!loading; else load_state\">\n        <ng-container *ngIf=\"!active_category; else category_display\">\n            <div class=\"contents\" *ngIf=\"can_order && category_list.length; else empty_state\">\n                <button\n                    mat-button\n                    class=\"category\"\n                    *ngFor=\"let item of category_list\"\n                    [style.background-image]=\"'url(' + item.image_path + ')'\"\n                    [disabled]=\"within_restricted_time && !item.can_order_anytime\"\n                    (tapped)=\"active_category = item\"\n                >\n                    <div class=\"overlay\"></div>\n                    <div class=\"name\">{{ item.name }}</div>\n                </button>\n            </div>\n        </ng-container>\n    </div>\n    <div class=\"footer\">\n        <button mat-button class=\"inverse\" (tapped)=\"event.emit()\" i18n=\"Catering order cancel action\">Back</button>\n        <button mat-button name=\"confirm\" [disabled]=\"!item_count || out_of_hours\" (tapped)=\"confirmOrder()\" i18n=\"Catering order confirm action\">\n            Confirm Order({{ item_count || '0' }})\n        </button>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div class=\"empty-state center\">\n        <div class=\"icon\">\n            <img alt=\"No Catering Available\" src=\"assets/img/no-catering.svg\" />\n        </div>\n        <p i18n=\"Catering order unavailable\">\n            Catering is <span class=\"bold\">not available</span> for this booking.<br />\n            Catering must be ordered within business hours\n            <span *ngIf=\"active_building?.catering_restricted_from\" class=\"bold\">\n                at least {{ active_building?.catering_restricted_from || '0' }} hours in advance for\n                meetings\n            </span>\n            at {{ active_building?.name }}.\n        </p>\n    </div>\n</ng-template>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"48\"></mat-spinner>\n            </div>\n            <div class=\"text\" i18n=\"Catering order loading label\">Loading menu for {{ active_building?.name }}...</div>\n        </div>\n    </div>\n</ng-template>\n<ng-template #category_display>\n    <a-category-display\n        [category]=\"active_category\"\n        [symbol]=\"symbol\"\n        [items]=\"form.controls.items\"\n        [disabled]=\"within_restricted_time\"\n        (close)=\"active_category = null\"\n    ></a-category-display>\n</ng-template>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'catering-order-list-item',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss'],\n})\nexport class CateringOrderListItemComponent {\n    /** Catering order to display */\n    @Input() order: CateringOrder;\n    /** Selected datetime */\n    @Input() date: number;\n    /** Emitter for edit events */\n    @Output() public edit = new EventEmitter<void>();\n    /** Emitter for delete events */\n    @Output() public delete = new EventEmitter<void>();\n\n    /** Space selected for delivery */\n    public get space(): string {\n        const space = this._spaces.find((this.order || {}).location_id) || { name: '' };\n        return space.name || '<No Location>';\n    }\n    /** Delivery time for the order */\n    public get delivery_time(): string {\n        /* istanbul ignore else */\n        if (!this.order) {\n            return '<Meeting Start>';\n        }\n        const date = dayjs(this.order.booking_date).add(\n            (this.order.changes ? this.order.delivery_time : null) || this.order.delivery_time,\n            'm'\n        );\n        return date.format('h:mm A');\n    }\n\n    /** Total cost of the order */\n    public get order_cost(): number {\n        const items = (this.order || { items: [] }).items as any;\n        return items.reduce((amount, item) => amount + item.amount * item.unit_price, 0);\n    }\n\n    /** Number of items in the order */\n    public get item_count(): number {\n        const items = (this.order || { items: [] }).items as any;\n        return items.reduce((amount, item) => amount + item.amount, 0);\n    }\n\n    /** Currency symbol for the selected space */\n    public get symbol(): string {\n        const space = this._spaces.find((this.order || {}).location_id);\n        /* istanbul ignore else */\n        if (!space || !space.level) {\n            return 'USD';\n        }\n        const building = this._org.buildings.find((bld) => bld.id === space.level.building_id) || {\n            currency: 'USD',\n        };\n        return building.currency;\n    }\n\n    constructor(private _spaces: SpacesService, private _org: OrganisationService) {}\n}\n","<div class=\"details\" i18n=\"Catering order item delivery details\">\n    Deliver to <span>{{ space }}</span> at <span>{{ delivery_time }}</span>\n</div>\n<div class=\"group\">\n    <div class=\"cost\">\n        {{ item_count }}\n        <span i18n=\"Items\">{ item_count, plural, =1 { item } other { items } }</span>\n    </div>\n    <div class=\"cost\">{{ order_cost / 100 | currency: symbol }}</div>\n</div>\n<div class=\"actions\">\n    <button mat-icon-button name=\"edit\" (tapped)=\"edit.emit()\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'edit' }\"></app-icon>\n    </button>\n    <button mat-icon-button name=\"delete\" class=\"inverse\" (tapped)=\"delete.emit()\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'delete' }\"></app-icon>\n    </button>\n</div>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { CateringOrder } from '../../../../../services/data/catering/catering-order.class';\nimport { BookingFlowEvent } from '../../../bookings.component';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-catering-order-list',\n    templateUrl: './order-list.component.html',\n    styleUrls: ['./order-list.component.scss']\n})\nexport class BookingCateringOrderListComponent {\n    /** Form field for storing catering orders */\n    @Input() public catering: FormControl;\n    /** Selected datetime for the booking */\n    @Input() public date: number;\n    /** Whether booking is all day */\n    @Input() public all_day: boolean;\n    /** Emitter for flow update events */\n    @Output() public event = new EventEmitter<BookingFlowEvent>();\n    /** Emiiter for order events */\n    @Output() public order = new EventEmitter<CateringOrder>();\n\n    /** List of orders in the booking */\n    public get orders(): CateringOrder[] {\n        /* istanbul ignore else */\n        if (!this.catering) {\n            return [];\n        }\n        const orders = this.catering.value;\n        orders.forEach(\n            order =>\n                (order.booking_date = this.all_day\n                    ? dayjs(this.date)\n                          .startOf('d')\n                          .valueOf()\n                    : this.date)\n        );\n        return orders;\n    }\n\n    /** Emit event for a new catering order */\n    public newOrder() {\n        this.order.emit();\n    }\n\n    /** Emit event for editing existing order */\n    public editOrder(order: CateringOrder) {\n        this.order.emit(order);\n    }\n\n    /** Remove order from the list */\n    public deleteOrder(order: CateringOrder) {\n        const orders = this.orders;\n        const index = orders.findIndex(an_order => order.id === an_order.id);\n        /* istanbul ignore else */\n        if (index >= 0) {\n            orders.splice(index, 1);\n            this.catering.setValue(orders);\n        }\n    }\n\n    /**\n     * Proceed to the next step in the space booking flow\n     */\n    public next(): void {\n        this.event.emit({ type: 'next', step: 'catering' });\n    }\n\n    /** Move flow to previous step */\n    public previous(): void {\n        this.event.emit({ type: 'previous', step: 'catering' });\n    }\n}\n","<div class=\"catering order-list\">\n    <div class=\"header\">\n        <h3 i18n=\"Catering order list header\">Catering Orders</h3>\n    </div>\n    <div class=\"body\">\n        <ng-container *ngIf=\"orders && orders.length; else empty_state\">\n            <div class=\"list\">\n                <catering-order-list-item\n                    *ngFor=\"let order of orders\"\n                    [order]=\"order\"\n                    [date]=\"date\"\n                    (edit)=\"editOrder(order)\"\n                    (delete)=\"deleteOrder(order)\"\n                ></catering-order-list-item>\n            </div>\n            <button mat-button name=\"new\" (tapped)=\"newOrder()\" i18n=\"Catering order list add action\">\n                Add Order\n            </button>\n        </ng-container>\n    </div>\n    <div class=\"footer\">\n        <button\n            mat-button\n            class=\"inverse\"\n            name=\"previous\"\n            (tapped)=\"previous()\"\n            i18n=\"Catering order list cancel action\"\n        >\n            Back\n        </button>\n        <button mat-button name=\"next\" (tapped)=\"next()\" i18n=\"Catering order list continue action\">\n            Next\n        </button>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\" i18n=\"Catering order list empty label\">No catering orders</div>\n        <button mat-button name=\"new\" (tapped)=\"newOrder()\" i18n=\"Catering order list add action\">\n            Add Order\n        </button>\n    </div>\n</ng-template>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\n\nimport * as dayjs from 'dayjs';\nimport { ANIMATION_SHOW_CONTRACT_EXPAND } from 'src/app/shared/globals/angular-animations';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\n@Component({\n    selector: 'booking-space-filters',\n    templateUrl: './filters.component.html',\n    styleUrls: ['./filters.component.scss'],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND]\n})\nexport class BookingSpaceFiltersComponent extends BaseDirective implements OnInit {\n    /** Date selected for the booking */\n    @Input() public date: FormControl;\n    /** List of location IDs being filtered on */\n    @Input() public locations: string[] = [];\n    /** Emitter for changes to location filter */\n    @Output() public locationsChange = new EventEmitter<string[]>();\n    /** List of available buildings */\n    public building_list: Building[] = [];\n    /** Whether to show the location list */\n    public show_locations: boolean;\n\n    /** Whether active date is current day */\n    public get is_today(): boolean {\n        const date = dayjs(this.date.value);\n        return dayjs().isSame(date, 'd');\n    }\n\n    /** Display string for the selected date */\n    public get date_display(): string {\n        const date = dayjs(this.date.value);\n        return this.is_today ? 'Today' : date.format('DD MMM YYYY');\n    }\n\n    /** List of filtered location */\n    public get location_list(): Building[] {\n        return this.locations.map(id => this.building_list.find(bld => bld.id === id));\n    }\n\n    constructor(private _org: OrganisationService) {\n        super();\n    }\n\n    public changeDate(amount: number) {\n        let date = dayjs(this.date.value).add(amount, 'd');\n        const now = dayjs().startOf('m');\n        if (date.isBefore(now, 's')) {\n            date = now;\n        }\n        this.date.setValue(date.valueOf());\n    }\n\n    public ngOnInit(): void {\n        this.subscription('buildings', this._org.listen('buildings').subscribe((bld_list) => {\n            this.building_list = bld_list;\n        }));\n    }\n\n    /**\n     * Update location filter to include the given building\n     * @param building Building to add\n     */\n    public addLocationFilter(building: Building): void {\n        this.locations.push(building.id);\n        this.locations = unique(this.locations);\n        this.locationsChange.emit(this.locations);\n    }\n\n    /**\n     * Remove location from the active filters\n     * @param building Building to remove\n     */\n    public removeLocationFilter(building: Building) {\n        this.locations.splice(\n            this.locations.findIndex(id => building.id === id),\n            1\n        );\n        this.locationsChange.emit(this.locations);\n    }\n}\n","<div class=\"space-filters\" *ngIf=\"date\">\n    <div class=\"actions\">\n        <div class=\"date\">\n            <button mat-icon-button [disabled]=\"is_today\" (tapped)=\"changeDate(-1)\">\n                <app-icon\n                    [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_left' }\"\n                ></app-icon>\n            </button>\n            <div class=\"text\">{{ date_display }}</div>\n            <button mat-icon-button (tapped)=\"changeDate(1)\">\n                <app-icon\n                    [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_right' }\"\n                ></app-icon>\n            </button>\n        </div>\n        <div class=\"location-list\" [matMenuTriggerFor]=\"locationMenu\">\n            <div class=\"inner\" (tapped)=\"show_locations = !show_locations\">\n                <img src=\"assets/img/location-img.svg\" />\n                <div class=\"text\" i18n=\"Booking space filters locations label\">\n                    Select locations(s)\n                </div>\n                <app-icon\n                    [icon]=\"{\n                        class: 'material-icons',\n                        content: 'keyboard_arrow_' + (show_locations ? 'up' : 'down')\n                    }\"\n                ></app-icon>\n            </div>\n        </div>\n    </div>\n    <div class=\"filters\" *ngIf=\"location_list && location_list.length\">\n        <mat-chip-list aria-label=\"Location Filters\">\n            <mat-chip\n                *ngFor=\"let building of location_list\"\n                [id]=\"building.id\"\n                color=\"primary\"\n                [removable]=\"true\"\n                (removed)=\"removeLocationFilter(building)\"\n            >\n                {{ building.name }}\n                <app-icon\n                    matChipRemove\n                    [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"\n                ></app-icon>\n            </mat-chip>\n        </mat-chip-list>\n    </div>\n</div>\n<mat-menu #locationMenu=\"matMenu\" class=\"dark-mode\">\n    <button mat-menu-item (click)=\"$event.stopPropagation()\" *ngFor=\"let building of building_list\">\n        <mat-checkbox\n            (change)=\"$event.checked ? addLocationFilter(building) : removeLocationFilter(building)\"\n        >\n            <div class=\"building-name\">\n                <div class=\"code\">{{ building.code }}</div>\n                <div class=\"name\">{{ building.name }}</div>\n                <div class=\"address\">{{ building.address }}</div>\n            </div>\n        </mat-checkbox>\n    </button>\n</mat-menu>\n","import {\n    Component,\n    OnInit,\n    Input,\n    SimpleChanges,\n    EventEmitter,\n    Output,\n    OnChanges\n} from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { debounceTime, distinctUntilChanged, switchMap, catchError, map, first } from 'rxjs/operators';\nimport { Observable, of, Subject } from 'rxjs';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Space, ISpaceAvailabilityOptions } from 'src/app/services/data/spaces/space.class';\nimport { BookingFlowEvent } from '../../bookings.component';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'booking-find-space',\n    templateUrl: './find-space.component.html',\n    styleUrls: ['./find-space.component.scss']\n})\nexport class BookingFindSpaceComponent extends BaseDirective implements OnInit, OnChanges {\n    /** Form control for setting the active space */\n    @Input() public spaces: FormControl;\n    /** Form group for booking */\n    @Input() public form: FormGroup;\n    /** Emitter for flow update events */\n    @Output() public event = new EventEmitter<BookingFlowEvent>();\n\n    /** List of spaces available during the required period */\n    public space_list: Space[] = [];\n    /** List of users from an API search */\n    public search_results$: Observable<Space[]>;\n    /** Whether space list is loading */\n    public loading: boolean;\n    /** List of zones to filter the spaces on */\n    public zone_ids: string[] = [];\n    /** Subject holding the value of the search */\n    public readonly change$ = new Subject<string>();\n\n    /**  Whether multiple spaces are allowed to be selected */\n    public get multiple(): boolean {\n        return this._service.setting('app.booking.multiple_spaces');\n    }\n\n    constructor(private _service: ApplicationService, private _spaces: SpacesService, private _org: OrganisationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._spaces.initialised.pipe(first(_ => _)).subscribe(() => {\n            // Listen for input changes\n            this.search_results$ = this.change$.pipe(\n                debounceTime(400),\n                distinctUntilChanged(),\n                switchMap(_ => {\n                    this.loading = true;\n                    const recurrence = this.form.controls.recurrence ? this.form.controls.recurrence.value : null;\n                    const recurrence_properties = recurrence && recurrence.period && recurrence.period !== 'None' ? {\n                        recurr_period: (recurrence.period || '').toLowerCase(),\n                        recurr_end: dayjs(recurrence.end).unix()\n                    } : {};\n                    const query: ISpaceAvailabilityOptions = {\n                        date: this.form.controls.date.value,\n                        duration: this.form.controls.duration.value,\n                        zone_ids: this._org.building.id,\n                        bookable: true,\n                        ...recurrence_properties\n                    };\n                    /* istanbul ignore else */\n                    if (this.zone_ids && this.zone_ids.length) {\n                        query.zone_ids = this.zone_ids.join(',');\n                    }\n                    return this._spaces.available(query);\n                }),\n                catchError(_ => of([])),\n                map((list: Space[]) => {\n                    this.loading = false;\n                    return list;\n                })\n            );\n            // Process API results\n            this.subscription(\n                'search_results',\n                this.search_results$.subscribe(list => {\n                    this.space_list = list;\n                    this.space_list.sort((a, b) => this.sort(a, b));\n                })\n            );\n            this.change$.next('');\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.form) {\n            const onChange = _ => this.change$.next(_);\n            /* istanbul ignore else */\n            if (this.form.controls.date) {\n                this.subscription(\n                    'date_field',\n                    this.form.controls.date.valueChanges.subscribe(onChange)\n                );\n            }\n            /* istanbul ignore else */\n            if (this.form.controls.duration) {\n                this.subscription(\n                    'duration_field',\n                    this.form.controls.duration.valueChanges.subscribe(onChange)\n                );\n            }\n        }\n    }\n\n    /**\n     * Update the selected space list\n     * @param space Space to add/toggle in the selected list\n     */\n    public selectSpace(space: Space) {\n        if (this.multiple) {\n            const list = this.spaces.value;\n            if (list.find(item => item.id === space.id)) {\n                this.spaces.setValue(list.filter(item => item.id !== space.id));\n            } else {\n                this.spaces.setValue(list.concat([space]));\n            }\n        } else {\n            this.spaces.setValue([space]);\n            this.event.emit({ type: 'next', step: 'search' });\n        }\n    }\n\n    /**\n     * Proceed to the next step in the space booking flow\n     */\n    public next(): void {\n        this.event.emit({ type: 'next', step: 'search' });\n    }\n\n    /** Move flow to previous step */\n    public previous(): void {\n        this.event.emit({ type: 'previous', step: 'search' });\n    }\n\n    /**\n     * Compare two spaces to determine order\n     * @param space_a\n     * @param space_b\n     */\n    private sort(space_a: Space, space_b: Space) {\n        const bld = this._org.buildings.find(bld => bld.id === space_a.level.building_id);\n        const bld_b = this._org.buildings.find(bld => bld.id === space_b.level.building_id);\n        if (bld && bld !== bld_b) {\n            return (bld.name || '').localeCompare(bld_b.name || '');\n        }\n        const sort_order = (bld.sort_order ? [...bld.sort_order] : []).reverse();\n        for (const zone_id of sort_order) {\n            if (zone_id === '*') { continue; }\n            const a_has_zone = space_a.zones.indexOf(zone_id) >= 0;\n            const b_has_zone = space_b.zones.indexOf(zone_id) >= 0;\n            if (a_has_zone && !b_has_zone) {\n                return 1;\n            } else if (b_has_zone && !a_has_zone) {\n                return -1;\n            }\n        }\n        return (space_a.name || '').localeCompare(space_b.name || '');\n    }\n\n}\n","<div class=\"find-space\">\n    <div class=\"background\"></div>\n    <div class=\"header\">\n        <booking-space-filters\n            [date]=\"form.controls.date\"\n            [(locations)]=\"zone_ids\"\n            (locationsChange)=\"change$.next($event)\"\n        ></booking-space-filters>\n    </div>\n    <ng-container *ngIf=\"!loading; else load_state\">\n        <cdk-virtual-scroll-viewport\n            *ngIf=\"space_list && space_list.length; else empty_state\"\n            [itemSize]=\"130\"\n        >\n            <ng-container *cdkVirtualFor=\"let space of space_list\">\n                <a-booking-space-item\n                    [form]=\"form\"\n                    [space]=\"space\"\n                    [multi]=\"multiple\"\n                    (select)=\"selectSpace(space)\"\n                ></a-booking-space-item>\n            </ng-container>\n        </cdk-virtual-scroll-viewport>\n    </ng-container>\n    <div class=\"footer\">\n        <div class=\"box\">\n            <button\n                mat-button\n                class=\"inverse\"\n                name=\"previous\"\n                (tapped)=\"previous()\"\n                i18n=\"Booking spaces cancel action\"\n            >\n                Back\n            </button>\n            <button\n                mat-button\n                *ngIf=\"multiple\"\n                name=\"next\"\n                [disabled]=\"!spaces.value || !spaces.value.length\"\n                (tapped)=\"next()\"\n                i18n=\"Booking spaces continue action\"\n            >\n                Next\n            </button>\n        </div>\n    </div>\n</div>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"48\"></mat-spinner>\n            </div>\n            <div class=\"text\" i18n=\"Booking spaces loading label\">\n                Checking space availability...\n            </div>\n        </div>\n    </div>\n</ng-template>\n<ng-template #empty_state>\n    <div class=\"body\">\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n            </div>\n            <div class=\"text\" i18n=\"Booking spaces empty label\">\n                No spaces available for the selected time\n            </div>\n        </div>\n    </div>\n</ng-template>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { FormGroup } from '@angular/forms';\n\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { ViewRoomModalComponent } from 'src/app/overlays/view-room-modal/view-room-modal.component';\nimport {\n    RecurrenceSpacesModalComponent,\n    RecurrenceSpacesModalData,\n} from '../../../overlays/recurrence-spaces-modal/recurrence-spaces-modal.component';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport {\n    BookingRecurrenceDetails,\n    BookingRecurrenceSpaceDetails,\n} from 'src/app/services/data/bookings/booking.interfaces';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: 'a-booking-space-item',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss'],\n})\nexport class BookingSpaceItemComponent extends BaseDirective {\n    /** Space to display */\n    @Input() public space: Space;\n    /** Form fields for booking */\n    @Input() public form: FormGroup;\n    /** Whether multiple spaces are able to be selected */\n    @Input() public multi: boolean;\n    /** Emitter for select actions on the */\n    @Output() public select = new EventEmitter<void>();\n\n    /** Whether space image should be displayed */\n    public get show_image() {\n        return this._service.setting('app.space_display.show_images');\n    }\n\n    /** Whether this space is selected */\n    public get selected(): boolean {\n        /* istanbul ignore else */\n        if (!this.form && this.space) {\n            return false;\n        }\n        return (\n            this.form.controls.space_list &&\n            !!(this.form.controls.space_list.value || []).find(\n                (space) => space.id === this.space.id\n            )\n        );\n    }\n\n    /** Whether space is booked by request */\n    public get is_request(): boolean {\n        /* istanbul ignore else */\n        if (!this.form) {\n            return false;\n        }\n        return this.space.byRequest({\n            date: this.form.controls.date.value,\n            duration: this.form.controls.duration.value,\n            host: this.form.controls.organiser.value || this._users.current,\n        });\n    }\n\n    public get availability(): string {\n        const count = this.space.recurr_available.reduce(\n            (count, ocurrence) => count + (ocurrence.available ? 1 : 0),\n            0\n        );\n        return count >= this.space.recurr_available.length\n            ? 'all'\n            : `${count} of ${this.space.recurr_available.length}`;\n    }\n\n    /** Display location of the space */\n    public get location(): string {\n        /* istanbul ignore else */\n        if (!this.space) {\n            return 'Unable to determine location';\n        }\n        const level = this.space.level;\n        const bld = this._org.buildings.find((building) => building.id === level.building_id);\n        return `${bld ? bld.name + ', ' : ''}${level.name}`;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _org: OrganisationService,\n        private _users: UsersService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    /**\n     * Open the modal to show the location of a space\n     * @param space Space to show the location\n     */\n    public locate() {\n        this._dialog.open(ViewRoomModalComponent, {\n            width: 'auto',\n            height: 'auto',\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: { space: this.space },\n        });\n    }\n\n    public selectSpace() {\n        if (!this.space.recurr_available || this.availability === 'all' || this.selected) {\n            this.select.emit();\n        } else {\n            const ref = this._dialog.open<\n                RecurrenceSpacesModalComponent,\n                RecurrenceSpacesModalData\n            >(RecurrenceSpacesModalComponent, {\n                width: 'auto',\n                height: 'auto',\n                maxWidth: '95vw',\n                maxHeight: '95vh',\n                data: {\n                    space: this.space,\n                    duration: this.form.controls.duration.value,\n                    host: this.form.controls.organiser.value,\n                    conflicts: this.form.controls.recurrence.value.conflicts || [],\n                },\n            });\n            this.subscription(\n                'recurr_conflicts',\n                ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                    /* istanbul ignore else */\n                    if (event.reason === 'done') {\n                        const recurr: BookingRecurrenceDetails = this.form.controls.recurrence\n                            .value;\n                        const conflict_list: BookingRecurrenceSpaceDetails[] =\n                            recurr.conflicts || [];\n                        for (const item of event.metadata) {\n                            const index = conflict_list.findIndex(\n                                (event) =>\n                                    event.date === item.date && event.replaces === item.replaces\n                            );\n                            if (index >= 0) {\n                                conflict_list.splice(index, 1, item);\n                            } else {\n                                conflict_list.push(item);\n                            }\n                        }\n                        this.form.controls.recurrence.setValue({\n                            ...recurr,\n                            conflicts: conflict_list,\n                        });\n                        this.select.emit();\n                        ref.close();\n                    }\n                })\n            );\n        }\n    }\n}\n","<div class=\"space-details\" *ngIf=\"space\" [class.with-image]=\"show_image\">\n    <div class=\"details\">\n        <div\n            class=\"image\"\n            *ngIf=\"space.image\"\n            [style.background-image]=\"'url(' + space.image + ')'\"\n        ></div>\n        <div class=\"overlay\"></div>\n        <div class=\"name\">{{ space.name }}</div>\n        <div class=\"info\">\n            <div class=\"location\">{{ location }}</div>\n            <div class=\"capacity\">\n                <app-icon\n                    [icon]=\"{ type: 'icon', class: 'material-icons', content: 'account_circle' }\"\n                ></app-icon>\n                {{ space.capacity || '0' }}\n            </div>\n        </div>\n        <div\n            class=\"info recurr\"\n            *ngIf=\"space.recurr_available && space.recurr_available.length\"\n            i18n=\"Booking space availability label\"\n        >\n            Available for&nbsp;<span>{{ availability }}</span\n            >&nbsp;meeting ocurrences\n        </div>\n    </div>\n    <div class=\"actions\">\n        <button\n            mat-button\n            name=\"select\"\n            [class.inverse]=\"multi && !selected\"\n            [class.request]=\"is_request\"\n            (tapped)=\"selectSpace()\"\n        >\n            {{ multi ? (selected ? 'Remove' : 'Select') : is_request ? 'Request' : 'Book' }}\n        </button>\n        <button mat-button class=\"inverse\" name=\"locate\" (tapped)=\"locate()\" i18n=\"Booking space locate action\">\n            Map\n        </button>\n    </div>\n</div>\n","import { Component, Input, Output, EventEmitter, ViewChild, ElementRef } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { BookingFlowEvent } from '../../bookings.component';\n\n@Component({\n    selector: 'booking-spaces-form',\n    templateUrl: './form.component.html',\n    styleUrls: ['./form.component.scss']\n})\nexport class BookingSpaceFlowFormComponent {\n    /** Booking form fields */\n    @Input() public form: FormGroup;\n    /** Whether form is not the first page in the flow */\n    @Input() public can_return: boolean = false;\n    /** Emitter for flow update events */\n    @Output() public event = new EventEmitter<BookingFlowEvent>();\n\n    @ViewChild('container', { static: true }) private container: ElementRef<HTMLDivElement>;\n\n    /** Move flow to next step */\n    public next(): void {\n        this.form.markAllAsTouched();\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            this.event.emit({ type: 'next', step: 'form' });\n        } else if (this.container) {\n            this.container.nativeElement.scrollIntoView({\n                behavior: 'smooth',\n                block: 'start',\n                inline: 'nearest'\n            });\n        }\n    }\n\n    /** Move flow to previous step */\n    public previous(): void {\n        this.event.emit({ type: 'previous', step: 'form' });\n    }\n\n    /** Reset form to initial state */\n    public resetForm(): void {\n        this.event.emit({ type: 'reset', step: 'form' });\n    }\n}\n","<div class=\"booking-form\" #container>\n    <div class=\"header\">\n        <h3 i18n=\"Booking form header\">New Booking</h3>\n        <button mat-icon-button name=\"reset\" (tapped)=\"resetForm()\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'refresh' }\"></app-icon>\n        </button>\n    </div>\n    <form [formGroup]=\"form\" (ngSubmit)=\"next()\">\n        <div class=\"body\">\n            <a-booking-form [form]=\"form\"></a-booking-form>\n        </div>\n        <div class=\"footer\">\n            <button mat-button type=\"button\" name=\"return\" *ngIf=\"can_return\" class=\"inverse\" (tapped)=\"previous()\" i18n=\"Booking form cancel action\">Back</button>\n            <button mat-button type=\"submit\" name=\"next\" i18n=\"Booking form continue action\">Next</button>\n        </div>\n    </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { generateBookingForm } from 'src/app/services/data/bookings/booking.utilities';\nimport {\n    AvailableBookingFields,\n    BookingFlowSettings,\n} from 'src/app/shared/utilities/settings.interfaces';\nimport { HashMap, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { BookingFlowEvent } from '../bookings.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { BookingConfirmComponent } from '../overlays/booking-confirm/booking-confirm.component';\nimport { first } from 'rxjs/operators';\nimport {\n    RequirementDetailsModalComponent,\n    RequirementDetailsModalData,\n} from '../overlays/requirement-details-modal/requirement-details-modal.component';\nimport {\n    CateringDetailsModalComponent,\n    CateringDetailsModalData,\n} from '../overlays/catering-details-modal/catering-details-modal.component';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: 'booking-space-flow',\n    templateUrl: './space-flow.component.html',\n    styleUrls: ['./space-flow.component.scss'],\n})\nexport class BookingSpaceFlowComponent extends BaseDirective implements OnInit {\n    /** Form fields */\n    public form: FormGroup;\n    /** Form data store */\n    public booking: Booking;\n    /** Step of the booking flow that is currently active */\n    public flow_step: string;\n    /** Application settings for bookings */\n    public settings: BookingFlowSettings;\n\n    /** List of available booking fields for the form */\n    public get available_fields(): AvailableBookingFields[] {\n        return this.settings.show_fields || [];\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _spaces: SpacesService,\n        private _users: UsersService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._spaces.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.settings = this._service.setting('app.booking');\n            this.subscription(\n                'route.params',\n                this._route.paramMap.subscribe((params) => {\n                    /* istanbul ignore else */\n                    if (params.has('step')) {\n                        this.flow_step = params.get('step');\n                    }\n                })\n            );\n            this.loadFormData();\n        });\n    }\n\n    /**\n     * Handle events from child components\n     * @param event Booking flow event\n     */\n    public handleFlowEvent(event: BookingFlowEvent) {\n        switch (event.type) {\n            case 'next':\n                this.toNextFlowStep(event);\n                break;\n            case 'previous':\n                this.toPreviousFlowStep(event);\n                break;\n            case 'reset':\n                this.resetForm();\n                break;\n        }\n    }\n\n    private toNextFlowStep(event: BookingFlowEvent) {\n        const space_list = this.form.controls.space_list.value;\n        switch (event.step) {\n            case 'search':\n                if (\n                    space_list &&\n                    space_list.length &&\n                    this.settings.multiple_spaces &&\n                    (!event.metadata || !event.metadata.ref || event.metadata.ref !== 'equipment')\n                ) {\n                    this.openEquipmentDetailsModal();\n                } else {\n                    if (this.form.controls.has_catering && this.form.controls.has_catering.value) {\n                        this.navigate('catering');\n                    } else {\n                        this.navigate('form');\n                        this.confirmBooking();\n                    }\n                }\n                break;\n            case 'catering':\n                const order_list = this.form.controls.catering.value;\n                if (\n                    order_list &&\n                    order_list.length &&\n                    (!event.metadata || !event.metadata.ref || event.metadata.ref !== 'details')\n                ) {\n                    this.openCateringDetailsModal();\n                } else {\n                    this.navigate('form');\n                    this.confirmBooking();\n                }\n                break;\n            default:\n                if (\n                    !this.form.controls.needs_space ||\n                    (this.form.controls.needs_space.value && (!space_list || !space_list.length || !this.form.controls.id.value))\n                ) {\n                    this.navigate('search');\n                } else {\n                    this.confirmBooking();\n                }\n                break;\n        }\n    }\n\n    private toPreviousFlowStep(event: BookingFlowEvent) {\n        switch (event.step) {\n            case 'search':\n                this.navigate('form');\n                break;\n            case 'catering':\n                this.navigate('search');\n                break;\n        }\n    }\n\n    private navigate(route: string) {\n        this._router.navigate(['book', 'spaces', route], {\n            queryParamsHandling: 'preserve',\n        });\n        this.flow_step = route;\n    }\n\n    /** Clear user changes to the form data */\n    private resetForm() {\n        this.booking.clearPendingChanges();\n        delete this.form;\n        this.form = generateBookingForm(\n            this.booking,\n            this._users.current,\n            this.available_fields\n        );\n    }\n\n    /**\n     * Load existing form data or generate a new booking form\n     */\n    private loadFormData(): void {\n        let form_data: HashMap = {};\n        /* istanbul ignore else */\n        if (localStorage) {\n            const form_string = localStorage.getItem('ACA_STAFF.booking_form_data');\n            /* istanbul ignore else */\n            if (form_string) {\n                try {\n                    form_data = JSON.parse(form_string);\n                } catch (e) {}\n            }\n        }\n        this.booking = new Booking(form_data);\n        this.subscription(\n            'form_changes',\n            this.booking.changeEvents.subscribe(() => this.saveFormData())\n        );\n        this.form = generateBookingForm(\n            this.booking,\n            this._users.current,\n            this.available_fields\n        );\n        /* istanbul ignore else */\n        /** Add local pending data */\n        if (form_data && !form_data.id) {\n            for (const key in form_data) {\n                if (this.form.controls[key]) {\n                    this.form.controls[key].setValue(form_data[key]);\n                } else if (this.booking.hasOwnProperty('')) {\n                    this.booking.storePendingChange(key as any, form_data[key]);\n                }\n            }\n        }\n        /* istanbul ignore else */\n        if (form_data && form_data.room_ids && this.form.controls.space_list) {\n            this.form.controls.space_list.setValue(\n                form_data.room_ids.map((id) => this._spaces.find(id) || { id, name: id })\n            );\n        }\n    }\n\n    private saveFormData() {\n        /* istanbul ignore else */\n        if (localStorage && this.booking) {\n            localStorage.setItem(\n                'ACA_STAFF.booking_form_data',\n                JSON.stringify(this.booking.toJSON(true))\n            );\n        }\n    }\n\n    /** Open modal for adding equipment requirements to booking */\n    private openEquipmentDetailsModal() {\n        const ref = this._dialog.open<\n            RequirementDetailsModalComponent,\n            RequirementDetailsModalData\n        >(RequirementDetailsModalComponent, {\n            maxWidth: '95vw',\n            width: '32em',\n            data: {\n                spaces: this.form.controls.space_list.value,\n                notes_field: this.form.controls.notes,\n                codes_field: this.form.controls.equipment_codes,\n                head_counts_field: this.form.controls.expected_attendees,\n            },\n        });\n        this.subscription(\n            'modal_events',\n            ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    this.toNextFlowStep({\n                        type: 'next',\n                        step: 'search',\n                        metadata: { ref: 'equipment' },\n                    });\n                    ref.close();\n                }\n            })\n        );\n        ref.afterClosed().subscribe(() => this.unsub('modal_events'));\n    }\n\n    /** Open modal for adding equipment requirements to booking */\n    private openCateringDetailsModal() {\n        const ref = this._dialog.open<CateringDetailsModalComponent, CateringDetailsModalData>(\n            CateringDetailsModalComponent,\n            {\n                maxWidth: '95vw',\n                width: '32em',\n                data: {\n                    spaces: this.form.controls.space_list.value,\n                    notes_field: this.form.controls.notes,\n                    catering: this.form.controls.catering,\n                },\n            }\n        );\n        this.subscription(\n            'modal_events',\n            ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    this.toNextFlowStep({\n                        type: 'next',\n                        step: 'catering',\n                        metadata: { ref: 'details' },\n                    });\n                    ref.close();\n                }\n            })\n        );\n        ref.afterClosed().subscribe(() => this.unsub('modal_events'));\n    }\n\n    /**\n     * Open modal to confirm the booking details\n     */\n    private confirmBooking() {\n        /* istanbul ignore else */\n        if (!this.booking.has_changes) {\n            this._service.notifyInfo('No changes have been made to booking');\n            return;\n        }\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            const dialog_ref = this._dialog.open(BookingConfirmComponent, {\n                width: '32em',\n                maxWidth: '95vw',\n                maxHeight: '95vh',\n                data: { booking: this.booking },\n            });\n            dialog_ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    this._router.navigate(['/schedule']);\n                }\n            });\n        }\n    }\n}\n","<div class=\"space-flow\">\n    <ng-container [ngSwitch]=\"flow_step\">\n        <ng-container *ngSwitchCase=\"'search'\">\n            <booking-find-space\n                *ngIf=\"form\"\n                [spaces]=\"form.controls.space_list\"\n                [form]=\"form\"\n                (event)=\"handleFlowEvent($event)\"\n            ></booking-find-space>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"'catering'\">\n            <booking-catering\n                *ngIf=\"form\"\n                [form]=\"form\"\n                (event)=\"handleFlowEvent($event)\"\n            ></booking-catering>\n        </ng-container>\n        <ng-container *ngSwitchDefault>\n            <booking-spaces-form\n                *ngIf=\"form\"\n                [form]=\"form\"\n                (event)=\"handleFlowEvent($event)\"\n            ></booking-spaces-form>\n        </ng-container>\n    </ng-container>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\n@Component({\n    selector: 'app-explore',\n    templateUrl: './explore.component.html',\n    styleUrls: ['./explore.component.scss']\n})\nexport class ExploreComponent extends BaseDirective implements OnInit {\n    /** Whether to show the overlay menu */\n    public show_menu: boolean;\n\n    constructor(private _service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.title = 'Maps';\n    }\n}\n","<div class=\"explore page\">\n    <header class=\"header\">\n        <a-topbar-header [(menu)]=\"show_menu\"></a-topbar-header>\n    </header>\n    <main class=\"body\">\n        <explore-map-view></explore-map-view>\n    </main>\n    <footer class=\"footer\">\n        <a-footer-menu></a-footer-menu>\n    </footer>\n</div>\n<a-overlay-menu [(show)]=\"show_menu\"></a-overlay-menu>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Route } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\n\nimport { ComposerModule } from '@placeos/composer';\nimport { AInteractiveMapModule } from '@acaprojects/ngx-interactive-map';\n\nimport { ExploreComponent } from './explore.component';\nimport { SharedContentModule } from 'src/app/shared/shared.module';\nimport { MapViewComponent } from './map-view/map-view.component';\nimport { ExploreSpaceStatusComponent } from './status-managers/space-status.component';\nimport { ExploreDeskStatusComponent } from './status-managers/desk-status.component';\nimport { ZoomControlsComponent } from './zoom-controls/zoom-controls.component';\nimport { ExploreSpaceInfoComponent } from './overlays/space-info/space-info.component';\nimport { ExploreSearchComponent } from './search/search.component';\nimport { ExploreMapLegendComponent } from './map-legend/map-legend.component';\nimport { TimelineComponent } from './timeline/timeline.component';\nimport { ExploreBookingModalComponent } from './overlays/booking-modal/booking-modal.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: ExploreComponent },\n    { path: ':search_type', component: ExploreComponent }\n];\n\n@NgModule({\n    declarations: [\n        ExploreComponent,\n        MapViewComponent,\n        ExploreSpaceStatusComponent,\n        ExploreDeskStatusComponent,\n        ZoomControlsComponent,\n        ExploreSpaceInfoComponent,\n        ExploreSearchComponent,\n        ExploreMapLegendComponent,\n        TimelineComponent,\n        ExploreBookingModalComponent\n    ],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(ROUTES),\n        SharedContentModule,\n        AInteractiveMapModule,\n        ComposerModule,\n        FormsModule\n    ]\n})\nexport class ExploreModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { MapLegendItem, ExploreMapSettings } from 'src/app/shared/utilities/settings.interfaces';\nimport { ANIMATION_SHOW_CONTRACT_EXPAND } from 'src/app/shared/globals/angular-animations';\n\n@Component({\n    selector: 'a-map-legend',\n    templateUrl: './map-legend.component.html',\n    styleUrls: ['./map-legend.component.scss'],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND]\n})\nexport class ExploreMapLegendComponent extends BaseDirective implements OnInit {\n    /** Mapping of legend item groups */\n    public legend_items: HashMap<MapLegendItem[]> = {};\n    /** Mapping of map colours */\n    public colours: HashMap<string> = {};\n    /** Whether group names should be displayed */\n    public show_group_names: boolean;\n    /** Whether the legend items should be shown */\n    public show_legend = false;\n\n    /** List of group names for legend items */\n    public get group_names(): string[] {\n        return Object.keys(this.legend_items);\n    }\n\n    constructor(private _service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.initialised.pipe(first(_ => _)).subscribe(() => {\n            const explore_settings: ExploreMapSettings =\n                this._service.setting('app.explore') || ({} as any);\n            this.legend_items = explore_settings.legend || {};\n            this.colours = explore_settings.colors || {};\n            this.show_group_names = !!explore_settings.show_legend_group_names;\n        });\n    }\n}\n","<div class=\"map-legend\" *ngIf=\"group_names && group_names.length\">\n    <div class=\"tag\">\n        <div class=\"title\" (tapped)=\"show_legend = !show_legend\">\n            <div class=\"text\" i18n=\"Explore legend label\">{{ show_legend ? 'Hide' : 'Show' }} Legend</div>\n            <app-icon\n                [icon]=\"{\n                    class: 'material-icons',\n                    content: show_legend ? 'arrow_drop_up' : 'arrow_drop_down'\n                }\"\n            ></app-icon>\n        </div>\n    </div>\n    <div\n        class=\"contents\"\n        [@show]=\"show_legend ? 'show' : 'hide'\"\n        [style.padding-bottom]=\"show_legend ? '1em' : ''\"\n        [style.padding-bottom]=\"show_legend ? '.5em' : ''\"\n        [style.overflow]=\"show_legend ? 'hidden auto' : 'hidden'\"\n    >\n        <ul>\n            <ng-container *ngFor=\"let group of group_names\">\n                <li class=\"group\" *ngIf=\"show_group_names\">\n                    <div class=\"bar\"></div>\n                    <div class=\"name\">{{ group }}</div>\n                    <div class=\"bar\"></div>\n                </li>\n                <li class=\"item\" name=\"item.key\" *ngFor=\"let item of legend_items[group]\">\n                    <div class=\"ref\">\n                        <ng-container *ngIf=\"item.icon; else colour_display\">\n                            <app-icon [icon]=\"item.icon\"></app-icon>\n                        </ng-container>\n                        <ng-template #colour_display>\n                            <div\n                                class=\"colour\"\n                                [style.background-color]=\"item.color || colours[item.key]\"\n                            ></div>\n                        </ng-template>\n                    </div>\n                    <div class=\"name\">{{ item.name }}</div>\n                </li>\n            </ng-container>\n        </ul>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MapPinComponent } from '@acaprojects/ngx-interactive-map';\nimport { first } from 'rxjs/operators';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { MapStatus, MapListener } from '../status-managers/status.interfaces';\nimport { HashMap, Point } from 'src/app/shared/utilities/types.utilities';\nimport { MapFeature } from '@acaprojects/ngx-interactive-map/lib/helpers/map.interfaces';\nimport { MapRadiusComponent } from '@acaprojects/ngx-interactive-map';\nimport { ExploreMapSettings } from 'src/app/shared/utilities/settings.interfaces';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    BookingRulesModalComponent,\n    BookingRulesModalData,\n} from 'src/app/overlays/booking-rules-modal/booking-rules-modal.component';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: 'explore-map-view',\n    templateUrl: './map-view.component.html',\n    styleUrls: ['./map-view.component.scss'],\n})\nexport class MapViewComponent extends BaseDirective implements OnInit {\n    /** Zoom level of the map */\n    public zoom: number;\n    /** Center offset of the map */\n    public center: Point = { x: 0.5, y: 0.5 };\n    /** Mapping of elements to CSS styles */\n    public style_map: HashMap<HashMap<string | number>> = {};\n    /** List of listeners for the map */\n    public listeners: MapListener[] = [];\n    /** List of features to render on the map */\n    public features: MapFeature[] = [];\n    /** ID of the active level to display on the map */\n    public active_level: string;\n    /** Mapping of status lists to types */\n    public status_map: { spaces?: MapStatus[]; desks?: MapStatus[]; zones?: MapStatus[] } = {};\n    /** Mapping of listener lists to types */\n    public listener_map: {\n        spaces?: MapListener[];\n        desks?: MapListener[];\n        zones?: MapListener[];\n    } = {};\n    /** Mapping of features lists to types */\n    public feature_map: {\n        spaces?: MapFeature[];\n        desks?: MapFeature[];\n        zones?: MapFeature[];\n    } = {};\n    /** Message to display over the map */\n    public message: string;\n    /** Whether location data is loading */\n    public loading: boolean;\n    /** Point or element on the map to focus */\n    public focus: string | Point;\n    /** Feature on the map to focus */\n    public focus_feature: MapFeature;\n    /** Current shown time */\n    public date: number;\n    /** Application settings for the explore component */\n    public settings: ExploreMapSettings;\n\n    /** URL of the active map */\n    public get map_url(): string {\n        const level = this._org.levelWithID(this.active_level) || { map_url: '' };\n        return level.map_url || '';\n    }\n\n    /** Whether current level has booking rules associated with it */\n    public get has_booking_rules(): boolean {\n        const level = this._org.levelWithID(this.active_level) || {\n            building_id: '',\n        };\n        return !!(this._org.buildings.find((bld) => bld.id === level.building_id) || {})\n            .booking_details;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _route: ActivatedRoute,\n        private _dialog: MatDialog,\n        private _org: OrganisationService,\n        private _users: UsersService,\n        private _spaces: SpacesService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._spaces.initialised.pipe(first((_) => _)).subscribe(() => {\n            /* istanbul ignore else */\n            if (!this.active_level) {\n                const bld = this._org.building;\n                if (bld && bld.levels.length) {\n                    this.active_level = bld.levels[0].id;\n                }\n            }\n            this.settings = this._service.setting('app.explore') || {};\n            this.subscription(\n                'route.query',\n                this._route.queryParamMap.subscribe((params) => {\n                    /* istanbul ignore else */\n                    if (params.has('space')) {\n                        this.loadSpaceLocation(params.get('space'));\n                    }\n                    /* istanbul ignore else */\n                    if (params.has('user')) {\n                        this.loadUserLocation(params.get('user')).then(\n                            (user) => {\n                                this.loading = false;\n                                this.message = this.focus\n                                    ? ''\n                                    : `Unable to locate ${user ? user.name : params.get('user')}`;\n                            },\n                            (err) => {\n                                this.loading = false;\n                                this.message = `Unable to locate user`;\n                                /* istanbul ignore else */\n                                if (err && err.status !== 404) {\n                                    this._service.notifyError(\n                                        `Error loading user location. ${err.message}`\n                                    );\n                                }\n                            }\n                        );\n                    }\n                })\n            );\n        });\n    }\n\n    public openBookingRulesModal() {\n        const level = this._org.levelWithID(this.active_level) || {\n            building_id: '',\n        };\n        const building: Building =\n            this._org.buildings.find((bld) => bld.id === level.building_id) || ({} as any);\n        this._dialog.open<BookingRulesModalComponent, BookingRulesModalData>(\n            BookingRulesModalComponent,\n            {\n                data: {\n                    building,\n                },\n            }\n        );\n    }\n\n    /**\n     * Process changes to statuses\n     */\n    public processStatuses() {\n        const styles: HashMap<HashMap<string | number>> = {};\n        (this.status_map.spaces || []).forEach((space) => (styles[`#${space.id}`] = space.styles));\n        (this.status_map.desks || []).forEach((desk) => (styles[`#${desk.id}`] = desk.styles));\n        (this.status_map.zones || []).forEach((zone) => (styles[`#${zone.id}`] = zone.styles));\n        this.style_map = styles;\n    }\n\n    /**\n     * Process changes to statuses\n     */\n    public processListeners() {\n        let listeners: MapListener[] = [];\n        listeners = listeners.concat(this.listener_map.spaces || []);\n        listeners = listeners.concat(this.listener_map.desks || []);\n        listeners = listeners.concat(this.listener_map.zones || []);\n        this.listeners = listeners;\n    }\n\n    /**\n     * Process changes to statuses\n     */\n    public processFeatures() {\n        let features: MapFeature[] = [];\n        /* istanbul ignore else */\n        if (this.focus_feature) {\n            features = features.concat([this.focus_feature]);\n        }\n        features = features.concat(this.feature_map.spaces || []);\n        features = features.concat(this.feature_map.desks || []);\n        features = features.concat(this.feature_map.zones || []);\n        this.features = features;\n    }\n\n    /**\n     * Load and store location details for the space\n     * @param space_id Engine system ID of the space to locate\n     */\n    private loadSpaceLocation(space_id: string) {\n        const space = this._spaces.find(space_id);\n        /* istanbul ignore else */\n        if (space) {\n            this.message = `Loading location of ${space.name}`;\n            this.loading = true;\n            this.active_level = space.level.id;\n            this.focus = `area-${space.map_id}-status`;\n            this.focus_feature = {\n                id: `area-${space.map_id}-status`,\n                coordinates: null,\n                content: MapPinComponent,\n                data: {\n                    text: space.name,\n                },\n            };\n            this.zoom = 1;\n            this.loading = false;\n            this.message = '';\n            console.log('Focus:', this.focus_feature)\n            this.processFeatures();\n        }\n    }\n\n    /**\n     * Load and store the location for the user\n     * @param user_email Email address of the selected user\n     */\n    private async loadUserLocation(user_email: string) {\n        this.focus = null;\n        this.focus_feature = null;\n        this.loading = true;\n        this.message = `Loading user details...`;\n        const user = await this._users.show(user_email);\n        /* istanbul ignore else */\n        if (!user) return user;\n        this.message = `Loading location for ${user.name}...`;\n        const location = await user.locate();\n        /* istanbul ignore else */\n        if (!location) return user;\n        this.active_level = location.level.id;\n        if (location.fixed) {\n            this.focus = location.id;\n            this.focus_feature = {\n                id: location.id,\n                coordinates: null,\n                content: MapPinComponent,\n                data: {\n                    text: `${user.name} is here`,\n                },\n            };\n            this.zoom = 1;\n        } else {\n            this.focus = {\n                x: location.x,\n                y: location.y,\n            };\n            this.focus_feature = {\n                coordinates: {\n                    x: location.x,\n                    y: location.y,\n                },\n                content: MapRadiusComponent,\n                data: {\n                    text: `${user.name} is here`,\n                    diameter: location.confidence || 5,\n                },\n            };\n        }\n        this.zoom = 1;\n        this.loading = false;\n        this.message = '';\n        this.processFeatures();\n        return user;\n    }\n}\n","<div class=\"map-view\">\n    <div class=\"header\">\n        <explore-search></explore-search>\n    </div>\n    <div class=\"body\">\n        <div class=\"status-list\" hidden>\n            <i\n                space-status\n                [zone]=\"active_level\"\n                [date]=\"date\"\n                (status)=\"status_map.spaces = $event; processStatuses()\"\n                (listeners)=\"listener_map.spaces = $event; processListeners()\"\n                (features)=\"feature_map.spaces = $event; processFeatures()\"\n            ></i>\n            <i desk-status [zone]=\"active_level\" (status)=\"status_map.desks = $event; processStatuses()\"></i>\n        </div>\n        <a-map-controls overlay [(level)]=\"active_level\" (levelChange)=\"zoom = 1; center = { x: .5, y: .5 }\"></a-map-controls>\n        <button mat-icon-button class=\"rules\" name=\"booking-rules\" *ngIf=\"has_booking_rules\" (tapped)=\"openBookingRulesModal()\">i</button>\n        <a-map\n            [(zoom)]=\"zoom\"\n            [(center)]=\"center\"\n            [src]=\"map_url\"\n            [css]=\"style_map\"\n            [listeners]=\"listeners\"\n            [features]=\"features\"\n            [focus]=\"focus\"\n        >\n            <mat-spinner diameter=\"32\"></mat-spinner>\n        </a-map>\n        <a-zoom-controls overlay [(zoom)]=\"zoom\" [(position)]=\"center\"></a-zoom-controls>\n        <a-map-legend overlay></a-map-legend>\n        <div class=\"message\" *ngIf=\"message\">\n            <div class=\"text\">{{ message }}</div>\n            <div class=\"loader\">\n                <mat-progress-bar mode=\"indeterminate\" *ngIf=\"loading\"></mat-progress-bar>\n            </div>\n        </div>\n    </div>\n    <a-timeline *ngIf=\"settings?.show_timeline\" [(date)]=\"date\"></a-timeline>\n</div>\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { generateBookingForm, statusFromBookings } from 'src/app/services/data/bookings/booking.utilities';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { UsersService } from 'src/app/services/data/users/users.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nimport * as dayjs from 'dayjs';\n\nexport interface ExploreBookingModalData {\n    /** Unix epoch in ms of the booking start time */\n    date: number;\n    /** Space to make the booking in */\n    space: Space;\n    /** List of bookings for the active space at the current time */\n    bookings: Booking[];\n}\n\n@Component({\n    selector: 'a-explore-booking-modal',\n    templateUrl: './booking-modal.component.html',\n    styleUrls: ['./booking-modal.component.scss']\n})\nexport class ExploreBookingModalComponent extends BaseDirective {\n    /**  */\n    public booking: Booking;\n    /** Form fields for new ad-hoc booking */\n    public form: FormGroup;\n    /** Form contents to display */\n    public state: 'info' | 'form' = 'info';\n    /** Description of the current loading state */\n    public loading: string;\n    /** String of time until next booking */\n    public available_until: string;\n    /** Whether booking was successful */\n    public success: boolean;\n\n    public get is_requesting(): boolean {\n        const booking = this.booking.toJSON(true);\n        return this.space.byRequest({\n            date: this.booking.changes.date || this.booking.date || dayjs(this._data.date).valueOf(),\n            duration: this.booking.changes.duration || this.booking.duration || 30,\n            host: booking.organiser || this._users.current\n        });\n    }\n\n    /** Display string for the selected date */\n    public get date(): string {\n        const date = dayjs(this._data.date);\n        return date.format('DD MMM YYYY');\n    }\n\n    /** Display string for the selected time */\n    public get time(): string {\n        const date = dayjs(this._data.date);\n        return date.format('h:mm A');\n    }\n\n    /** Selected space */\n    public get space(): Space {\n        return this._data.space;\n    }\n\n    /** Whether space is being booked for now */\n    public get is_now(): boolean {\n        const now = dayjs();\n        const date = dayjs(this._data.date);\n        return now.isSame(date, 'm') || now.isAfter(date, 'm');\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ExploreBookingModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: ExploreBookingModalData,\n        private _router: Router,\n        private _service: ApplicationService,\n        private _users: UsersService,\n        private _spaces: SpacesService\n    ) {\n        super();\n        const date = dayjs(this._data.date);\n        this.booking = new Booking({\n            title: 'Ad-Hoc Booking',\n            date: date.valueOf(),\n            duration: 30,\n            room_ids: [this._data.space.id]\n        });\n        const status = statusFromBookings(\n            this._data.bookings,\n            this.space.bookable,\n            this.space.byRequest({\n                date: this._data.date,\n                duration: 30,\n                host: this._users.current\n            }),\n            this._data.date\n        );\n        this.available_until = status.available_until;\n    }\n\n    /**\n     * Move onto the next step of the booking flow\n     */\n    public next() {\n        if (!this.is_now) {\n            const booking = this.booking.toJSON(true);\n            localStorage.setItem('ACA_STAFF.booking_form_data', JSON.stringify({ id: 'ad-hoc', ...booking }));\n            this._router.navigate(['/book', 'space'], { queryParams: { back: '/explore' } });\n            this._dialog_ref.close();\n        } else {\n            this.form = generateBookingForm(this.booking, this._users.current, [\n                'space_list',\n                'organiser',\n                'title',\n                'duration'\n            ]);\n            this.state = 'form';\n        }\n    }\n\n    public book() {\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            this.loading = 'Checking space availability...';\n            this.checkSpaceAvailability().then(\n                () => {\n                    this.booking.save().then(\n                        () => {\n                            this.loading = null;\n                            this.success = true;\n                            this.timeout('close', () => this._dialog_ref.close(), 5000);\n                        },\n                        err => {\n                            this.loading = null;\n                            this._service.notifyError(\n                                `Error ${this.booking.id ? 'updating' : 'creating'} booking: ${err.message || err}}`\n                            );\n                        }\n                    );\n                },\n                err => {\n                    this.loading = null;\n                    this._service.notifyError(`Error checking space availability: ${err.message || err}`);\n                }\n            );\n        }\n    }\n\n    /**\n     * Check whether the selected spaces are available for the selected time period\n     */\n    private checkSpaceAvailability(): Promise<void> {\n        const spaces: Space[] = this.booking.changes.space_list || this.booking.space_list;\n        return new Promise((resolve, reject) => {\n            this._spaces.available({\n                room_ids: spaces.map(space => space.id).join(','),\n                date: this.booking.changes.date || this.booking.date,\n                duration: this.booking.changes.duration || this.booking.duration\n            }).then(\n                space_list => {\n                    for (const space of space_list) {\n                        if (!space.was_available) {\n                            return reject(\n                                `${space.name} is not available at the select time period.`\n                            );\n                        }\n                    }\n                    resolve();\n                },\n                err => reject(err)\n            );\n        });\n    }\n}\n","<ng-container *ngIf=\"!success; else done_state\">\n    <header mat-dialog-title [class.request]=\"is_requesting\">\n        <ng-container *ngIf=\"state !== 'form'\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'add' }\"></app-icon>\n            <div class=\"text\">\n                Book <span>{{ space?.name }}</span> {{ is_now ? 'from now' : 'at ' + time }}\n            </div>\n        </ng-container>\n        <ng-container *ngIf=\"state === 'form'\">\n            <div class=\"text\">\n                Book <span>{{ space?.name }}</span>\n            </div>\n        </ng-container>\n    </header>\n    <mat-dialog-content>\n        <main *ngIf=\"!loading; else load_state\">\n            <ng-container [ngSwitch]=\"state\">\n                <ng-container *ngSwitchCase=\"'form'\">\n                    <a-booking-form [form]=\"form\"></a-booking-form>\n                </ng-container>\n                <ng-container *ngSwitchDefault>\n                    <div class=\"details\">\n                        <p>{{ available_until }}</p>\n                        <p *ngIf=\"is_requesting\" i18n=\"Explore booking request details\">\n                            This space requires approval to reserve\n                        </p>\n                    </div>\n                </ng-container>\n            </ng-container>\n        </main>\n    </mat-dialog-content>\n    <mat-dialog-actions *ngIf=\"!loading\">\n        <footer>\n            <button mat-button class=\"inverse\" mat-dialog-close>Cancel</button>\n            <button mat-button (tapped)=\"state === 'form' ? book() : next()\">\n                {{ state === 'form' ? (is_requesting ? 'Request' : 'Book') : 'Yes' }}\n            </button>\n        </footer>\n    </mat-dialog-actions>\n    <ng-template #load_state>\n        <main>\n            <div class=\"info-block\">\n                <div class=\"icon\">\n                    <mat-spinner diameter=\"48\"></mat-spinner>\n                </div>\n                <div class=\"text\">{{ loading || 'Processing request...' }}</div>\n            </div>\n        </main>\n    </ng-template>\n</ng-container>\n<ng-template #done_state>\n    <header class=\"success\" [class.request]=\"is_requesting\">\n        <div class=\"text\">\n            <ng-container *ngIf=\"is_requesting\" i18n=\"Explore booking request sent\">\n                Request for <span>{{ space?.name }}</span> sent\n            </ng-container>\n            <ng-container *ngIf=\"!is_requesting\" i18n=\"Explore booking made\">\n                Booked <span>{{ space?.name }}</span>\n                {{ is_now ? 'from now' : 'at ' + time }}\n            </ng-container>\n        </div>\n        <app-icon\n            [icon]=\"{ class: 'material-icons', content: is_requesting ? 'send' : 'done' }\"\n        ></app-icon>\n    </header>\n</ng-template>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {\n    MAP_OVERLAY_DATA,\n    MAP_LOCATION\n} from '@acaprojects/ngx-interactive-map';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { statusFromBookings } from 'src/app/services/data/bookings/booking.utilities';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Point } from 'src/app/shared/utilities/types.utilities';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\nexport interface SpaceInfoData {\n    /** Current time to show details for */\n    date?: number;\n    /** Space to show details for */\n    space: Space;\n    /** Active bookings for the space */\n    bookings: Booking[];\n}\n\n@Component({\n    selector: 'a-space-info',\n    templateUrl: './space-info.component.html',\n    styleUrls: ['./space-info.component.scss']\n})\nexport class ExploreSpaceInfoComponent extends BaseDirective implements OnInit {\n    /** Status of the space */\n    public status: string;\n    /** String of time until next booking */\n    public available_until: string;\n\n    /** Named position of the element location on the map */\n    public get quadrant(): 'top left' | 'top right' | 'bottom left' | 'bottom right' {\n        /* istanbul ignore if */\n        if (!this._position) {\n            return 'top left';\n        }\n        if (this._position.y < .5) {\n            if (this._position.x < .5) {\n                return 'top left';\n            } else {\n                return 'top right';\n            }\n        } else {\n            if (this._position.x < .5) {\n                return 'bottom left';\n            } else {\n                return 'bottom right';\n            }\n        }\n    }\n\n    /** CSS class for the current status of the space */\n    public get status_class(): string {\n        return (this.status || '')\n            .toLowerCase()\n            .split(' ')\n            .join('-');\n    }\n\n    /** Space to display on the component */\n    public get space(): Space {\n        /* istanbul ignore if */\n        if (!this._data) {\n            return null;\n        }\n        return this._data.space;\n    }\n\n    /** List of bookings from the space for the currently displayed time */\n    public get bookings(): Booking[] {\n        /* istanbul ignore if */\n        if (!this._data) {\n            return [];\n        }\n        return this._data.bookings || [];\n    }\n\n    constructor(\n        @Inject(MAP_OVERLAY_DATA) private _data: SpaceInfoData,\n        @Inject(MAP_LOCATION) private _position: Point,\n        private _users: UsersService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.processBookings();\n        this.interval('update_bookings', () => this.processBookings(), 60 * 1000);\n    }\n\n    /**\n     * Calculate availability of space based off given bookings\n     */\n    public processBookings(): void {\n        /* istanbul ignore if */\n        if (!this.space) {\n            return;\n        }\n        const status = statusFromBookings(\n            this.bookings,\n            this.space.bookable,\n            this.space.byRequest({\n                date: this._data.date,\n                duration: 30,\n                host: this._users.current\n            }),\n            this._data.date\n        );\n        this.status = status.status;\n        this.available_until = status.available_until;\n    }\n}\n","<div *ngIf=\"space\" [id]=\"space.id\" [class]=\"'space-info ' + quadrant\">\n    <div class=\"arrow\"></div>\n    <div class=\"details\">\n        <div class=\"name\">{{ space.name }}</div>\n        <div class=\"availability\">\n            <div name=\"status\" [class]=\"status_class\">{{ status }}</div>\n            <div name=\"available-until\" *ngIf=\"status_class !== 'not-bookable'\">{{ available_until }}</div>\n        </div>\n    </div>\n</div>","import {\n    Component,\n    OnInit,\n    Input,\n    OnChanges,\n    SimpleChanges,\n    ViewChild,\n    ElementRef\n} from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { catchError, debounceTime, distinctUntilChanged, switchMap, map, first } from 'rxjs/operators';\nimport { Observable, Subject, of } from 'rxjs';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { UsersService } from 'src/app/services/data/users/users.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nimport * as dayjs from 'dayjs';\n\n// TODO: Add handling for role users. e.g. Fire Wardens, First Aiders\n// TODO: Add handling for searching for features\n// TODO: Add handling for searching for desks\n\n@Component({\n    selector: 'explore-search',\n    templateUrl: './search.component.html',\n    styleUrls: ['./search.component.scss']\n})\nexport class ExploreSearchComponent extends BaseDirective implements OnInit, OnChanges {\n    /** Type of data to show when searching */\n    @Input() public type: 'space' | 'user' | 'feature' | 'desk' | 'any';\n    /** Whether external changes are being processed */\n    @Input() public autofocus: boolean;\n    /** Display string for the placeholder of the search input */\n    @Input() public placeholder: string;\n    /** Whether search data is loading */\n    public loading: boolean;\n    /** Search filter value */\n    public search_str: string;\n    /** List of users from an API search */\n    public search_results$: Observable<(User | Space)[]>;\n    /** Post search and filtering list of items */\n    public results: (User | Space)[] = [];\n    /** Subject holding the value of the search */\n    public search$ = new Subject<string>();\n\n    /** Input field reference */\n    @ViewChild('input', { static: false }) private input_field: ElementRef<HTMLInputElement>;\n\n    constructor(\n        private _users: UsersService,\n        private _spaces: SpacesService,\n        private _route: ActivatedRoute,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._spaces.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.subscription(\n                'route.params',\n                this._route.paramMap.subscribe(params => {\n                    if (params.has('search_type')) {\n                        this.type = params.get('search_type') as any;\n                    }\n                })\n            );\n            // Listen for input changes\n            this.search_results$ = this.search$.pipe(\n                debounceTime(300),\n                distinctUntilChanged(),\n                switchMap(query => {\n                    this.loading = true;\n                    return query.length >= 3 && (this.type === 'user' || this.type === 'any')\n                        ? (this._users.query({\n                              q: query.slice(0, 3),\n                              cache: 60 * 1000\n                          }) as Promise<User[]>)\n                        : Promise.resolve([]);\n                }),\n                catchError(err => of([])),\n                map((users: User[]) => {\n                    const spaces = this._spaces.filter(_ => true);\n                    const search = (this.search_str || '').toLowerCase();\n                    const filter = item =>\n                        (item.name || '').toLowerCase().indexOf(search) >= 0 ||\n                        (item.email || '').toLowerCase().indexOf(search) >= 0;\n                    let result_list = [];\n                    if (this.type === 'space') {\n                        result_list = spaces;\n                    } else if (this.type === 'user') {\n                        result_list = users;\n                    } else {\n                        result_list = (spaces as any).concat(users);\n                    }\n                    this.loading = false;\n                    return result_list.filter(filter);\n                })\n            );\n            // Process API results\n            this.subscription(\n                'search_results',\n                this.search_results$.subscribe(list => {\n                    this.results = list;\n                    list.sort((a, b) => (a.name || '').localeCompare(b.name));\n                    console.log('List:', list);\n                })\n            );\n            this.search$.next(`${dayjs().valueOf()}`);\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.autofocus && this.autofocus) {\n            this.focusField();\n        }\n    }\n\n    public focusField() {\n        /* istanbul ignore else */\n        if (this.input_field && this.input_field.nativeElement) {\n            this.input_field.nativeElement.focus();\n        }\n    }\n\n    /**\n     * Update the selected item to display the location for on the map\n     * @param item Space or User to display location for\n     */\n    public selectOption(item: User | Space) {\n        if (item instanceof Space) {\n            this._router.navigate([], {\n                relativeTo: this._route,\n                queryParams: { space: item.id },\n                queryParamsHandling: 'merge'\n            });\n        } else {\n            this._router.navigate([], {\n                relativeTo: this._route,\n                queryParams: { user: item.email },\n                queryParamsHandling: 'merge'\n            });\n        }\n        this.search_str = item.name;\n    }\n}\n","<div class=\"searchbar\" *ngIf=\"type\" tabindex=\"0\" (focus)=\"focusField()\" (click)=\"focusField()\">\n    <div class=\"prefix\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'search' }\"></app-icon>\n    </div>\n    <div class=\"input\">\n        <input\n            #input\n            type=\"text\"\n            [(ngModel)]=\"search_str\"\n            (ngModelChange)=\"search$.next($event)\"\n            [matAutocomplete]=\"auto\"\n            [placeholder]=\"placeholder || 'Search...'\"\n        />\n    </div>\n    <div class=\"suffix\">\n        <mat-spinner *ngIf=\"loading\" diameter=\"32\"></mat-spinner>\n    </div>\n</div>\n<mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"selectOption($event.option.value)\">\n    <mat-option *ngFor=\"let option of results\" [value]=\"option\">\n        <div class=\"name\">{{ option.name }}</div>\n        <div class=\"email\">{{ (option.level ? option.level.name : option.email) }}&nbsp;</div>\n    </mat-option>\n</mat-autocomplete>\n","import { Component, Output, EventEmitter, OnInit, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { MapStatus } from './status.interfaces';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\n@Component({\n    selector: '[desk-status]',\n    template: `\n        <ng-content></ng-content>\n        <div class=\"bindings\" *ngIf=\"system_id\">\n            <!-- BINDINGS -->\n            <i binding [(model)]=\"in_use\" [sys]=\"system_id\" mod=\"DeskManagement\" [bind]=\"zone\" (modelChange)=\"calculateStatus()\"></i>\n            <i binding [(model)]=\"id_list\" [sys]=\"system_id\" mod=\"DeskManagement\" [bind]=\"zone + ':desk_ids'\" (modelChange)=\"calculateStatus()\"></i>\n            <i binding [(model)]=\"reserved\" [sys]=\"system_id\" mod=\"DeskManagement\" [bind]=\"zone + ':reserved'\" (modelChange)=\"calculateStatus()\"></i>\n            <i binding [(model)]=\"occupied\" [sys]=\"system_id\" mod=\"DeskManagement\" [bind]=\"zone + ':occupied_count'\"></i>\n            <i binding [(model)]=\"free\" [sys]=\"system_id\" mod=\"DeskManagement\" [bind]=\"zone + ':free_count'\"></i>\n            <!-- REMOTE EXECUTIONS -->\n            <i binding [(model)]=\"checkin\" [sys]=\"system_id\" mod=\"DeskManagement\" exec=\"manual_checkin\" [params]=\"[checkin]\"></i>\n            <i binding [(model)]=\"cancel\" [sys]=\"system_id\" mod=\"DeskManagement\" exec=\"cancel_reservation\" [params]=\"[]\"></i>\n        </div>\n    `\n})\nexport class ExploreDeskStatusComponent extends BaseDirective implements OnChanges {\n    /** ID of the active level */\n    @Input() public zone: string;\n    /** ID of the desk to checkin */\n    @Input() public checkin: string;\n    /** Emitter for changes to the desk status */\n    @Output() public status = new EventEmitter<MapStatus[]>();\n    /** ID of the desk management system */\n    public system_id: string;\n    /** List of desks for the active level */\n    public id_list: string[];\n    /** List of desk IDs in use on the active level */\n    public in_use: string[];\n    /** List of desk IDs that are reserved on the active level */\n    public reserved: string[];\n    /** Number of occupied desks on the active level */\n    public occupied: number = 0;\n    /** Number of free desks on the active level */\n    public free: number = 0;\n    /** Mapping of colours to statuses */\n    public colour_map: HashMap<string> = {};\n    /** Toggle for cancelling desk reservations */\n    public cancel: boolean;\n\n    constructor(private _service: ApplicationService, private _org: OrganisationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.colour_map = this._service.setting('app.explore.colors') || {};\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.zone) {\n            this.loadDesks();\n        }\n    }\n\n    public calculateStatus() {\n        const desk_list = this.id_list || [];\n        const status_list: MapStatus[] = [];\n        for (const desk_id of desk_list) {\n            const in_use = (this.in_use || []).find(id => id === desk_id);\n            const reserved = (this.reserved || []).find(id => id === desk_id);\n            const status = in_use ? 'unavailable' : reserved ? 'reserved' : 'available';\n            status_list.push({\n                id: desk_id,\n                styles: {\n                    fill: this.colour_map[`desk-${status}`],\n                    stroke: this.colour_map[`desk-${status}-stroke`],\n                },\n                status_id: status\n            });\n        }\n        this.status.emit(status_list);\n    }\n\n    private loadDesks() {\n        const level = this._org.levelWithID(this.zone);\n        if (!level) { return ; }\n        const building = this._org.buildings.find(bld => bld.id === level.building_id);\n        if (!building) { return; }\n        const desk_management = building.systems.desk_management;\n        if (!desk_management) { return; }\n        this.system_id = desk_management;\n    }\n}\n","import {\n    Component,\n    Input,\n    Output,\n    EventEmitter,\n    OnInit,\n    OnDestroy,\n    SimpleChanges,\n    OnChanges,\n} from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { ExploreSpaceInfoComponent } from '../overlays/space-info/space-info.component';\nimport { MapStatus, MapListener, SpaceStatus } from './status.interfaces';\n\nimport * as dayjs from 'dayjs';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    ExploreBookingModalComponent,\n    ExploreBookingModalData,\n} from '../overlays/booking-modal/booking-modal.component';\nimport { MapFeature } from '@acaprojects/ngx-interactive-map/lib/helpers/map.interfaces';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: '[space-status]',\n    template: `\n        <div class=\"bindings\" *ngIf=\"space_list && is_today\">\n            <i\n                *ngFor=\"let space of space_list\"\n                binding\n                [sys]=\"space.id\"\n                mod=\"Bookings\"\n                bind=\"today\"\n                (modelChange)=\"processSpaceBookings(space, $event)\"\n            ></i>\n        </div>\n        <ng-content></ng-content>\n    `,\n})\nexport class ExploreSpaceStatusComponent extends BaseDirective\n    implements OnInit, OnChanges, OnDestroy {\n    /** ID of the zone to grab the spaces */\n    @Input() public zone: string;\n    /** Updates the status based of the given time. Unix epoch in milliseconds */\n    @Input() public date: number;\n    /** Emitter for changes to the space status */\n    @Output() public status = new EventEmitter<MapStatus[]>();\n    /** Emitter for changes to the space status */\n    @Output() public listeners = new EventEmitter<MapListener[]>();\n    /** Emitter for changes to the space status */\n    @Output() public features = new EventEmitter<MapFeature[]>();\n    /** List of spaces to grab the statuses for */\n    public space_list: Space[] = [];\n    /** Mapping of spaces to active bookings */\n    public active_bookings: HashMap<Booking[]> = {};\n    /** Mapping of colours to statuses */\n    public colour_map: HashMap<string> = {};\n\n    /** Whether selected date time is the current day */\n    public get is_today() {\n        return dayjs().isSame(dayjs(this.date), 'd');\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _users: UsersService,\n        private _spaces: SpacesService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.colour_map = this._service.setting('app.explore.colors') || {};\n            this.subscription(\n                'spaces',\n                this._spaces.listen('list').subscribe(() => this.loadSpaces())\n            );\n            this.interval(\n                'update_status',\n                () => {\n                    this.updateSpaceBookings();\n                    this.calculateStatus();\n                },\n                60 * 1000\n            );\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.zone || changes.date) {\n            this.loadSpaces();\n        }\n        if (changes.zone) {\n            this.clearSpaces();\n        }\n    }\n\n    public ngOnDestroy() {\n        this.clearSpaces();\n    }\n\n    /**\n     * Determine the availability statuses for all the spaces in the set zone\n     */\n    public calculateStatus() {\n        this.timeout('process_statuses', () => {\n            const statuses: MapStatus[] = [];\n            for (const space of this.space_list) {\n                const status = this.getStatus(space, this.date);\n                const id =\n                    space.map_id.indexOf('area') < 0 ? `area-${space.map_id}-status` : space.map_id;\n                statuses.push({\n                    id,\n                    styles: {\n                        fill: this.colour_map[`space-${status}`] || '#000',\n                        opacity: 0.6,\n                    },\n                    status_id: status,\n                });\n            }\n            this.status.emit(statuses);\n        });\n    }\n\n    /**\n     * Get the status of the space at the set time\n     * @param space Space to get the status for\n     */\n    private getStatus(space: Space, datetime?: number): SpaceStatus {\n        if (!space.bookable) {\n            return 'not-bookable';\n        }\n        const bookings = this.active_bookings[space.id] || [];\n        const date = dayjs(datetime).startOf('m').second(1);\n        const current_booking = bookings.find((booking) => {\n            const start = dayjs(booking.date).startOf('m');\n            const end = start.add(booking.duration, 'm');\n            return date.isAfter(start, 's') && date.isBefore(end, 'm');\n        });\n        if (current_booking) {\n            return 'unavailable';\n        }\n        const options = {\n            date: dayjs(this.date).valueOf(),\n            duration: 30,\n            host: this._users.current,\n        };\n        const rules = space.rulesFor(options);\n        if (rules.hide) {\n            return 'not-bookable';\n        } else if (!rules.auto_approve) {\n            return 'requestable';\n        }\n        return 'available';\n    }\n\n    /**\n     * Process raw booking data for the given space\n     * @param space Space associated with the bookings\n     * @param data List of booking data\n     */\n    public processSpaceBookings(space: Space, data: HashMap[]) {\n        this.timeout(\n            `space-${space.id}`,\n            () => {\n                const bookings = (data || []).map(\n                    (bkn_data) => new Booking({ ...bkn_data, room_ids: [space.id] })\n                );\n                this.active_bookings[space.id] = bookings;\n                this.calculateStatus();\n            },\n            10\n        );\n    }\n\n    /**\n     * Update the booking data for space on future dates\n     */\n    public updateSpaceBookings() {\n        /* istanbul ignore else */\n        if (this.is_today) {\n            return;\n        }\n        this.timeout(\n            'update_spaces',\n            () => {\n                const date = dayjs(this.date).startOf('d');\n                this._spaces\n                    .query({\n                        from: date.unix(),\n                        to: date.endOf('d').unix(),\n                        show_declined: false,\n                        zone_ids: this.zone,\n                        cache: 10 * 1000,\n                    })\n                    .then((spaces) => {\n                        spaces.forEach((space) =>\n                            this.processSpaceBookings(space, [...space.bookings])\n                        );\n                    });\n            },\n            50\n        );\n    }\n\n    /**\n     * Load listeners for space data\n     */\n    private loadSpaces() {\n        this.space_list = this._spaces.filter((space) => space.zones.indexOf(this.zone) >= 0);\n        const listeners: MapListener[] = [];\n        for (const space of this.space_list) {\n            const id =\n                space.map_id.indexOf('area') < 0 ? `area-${space.map_id}-status` : space.map_id;\n            listeners.push({\n                id,\n                event: 'mouseenter',\n                callback: () => this.showSpaceInfo(space),\n            });\n            listeners.push({\n                id,\n                event: 'mouseleave',\n                callback: () => this.features.emit([]),\n            });\n            if (space.bookable) {\n                listeners.push({\n                    id,\n                    event: 'click',\n                    callback: () => this.openBookingModal(space),\n                });\n            }\n        }\n        this.listeners.emit(listeners);\n        this.updateSpaceBookings();\n        this.calculateStatus();\n    }\n\n    /**\n     * Clear current space and booking data\n     */\n    private clearSpaces() {\n        delete this.active_bookings;\n        this.active_bookings = {};\n    }\n\n    /**\n     * Update features to include space info for a space\n     * @param space Space to show details for\n     */\n    private showSpaceInfo(space: Space) {\n        const id = space.map_id.indexOf('area') < 0 ? `area-${space.map_id}-status` : space.map_id;\n        this.features.emit([\n            {\n                id,\n                coordinates: null,\n                content: ExploreSpaceInfoComponent,\n                data: {\n                    space,\n                    bookings: this.active_bookings[space.id],\n                    date: this.date,\n                },\n            },\n        ]);\n    }\n\n    /**\n     * Open explore booking modal for the given space\n     * @param space Space to make booking for\n     */\n    private openBookingModal(space: Space) {\n        const status = this.getStatus(space, this.date);\n        if (status !== 'unavailable' && status !== 'not-bookable') {\n            this._dialog.open<ExploreBookingModalComponent, ExploreBookingModalData>(\n                ExploreBookingModalComponent,\n                {\n                    width: 'auto',\n                    height: 'auto',\n                    data: {\n                        date: this.date,\n                        space,\n                        bookings: this.active_bookings[space.id],\n                    },\n                }\n            );\n        } else {\n            this._service.notifyInfo(\n                `${space.name} is unavailable at the selected time. Please select another space or time and try again.`\n            );\n        }\n    }\n}\n","import {\n    Component,\n    OnInit,\n    Input,\n    Output,\n    EventEmitter,\n    ElementRef,\n    Renderer2,\n    ViewChild,\n} from '@angular/core';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Identity, Point } from 'src/app/shared/utilities/types.utilities';\n\nimport * as dayjs from 'dayjs';\nimport { eventToPoint } from 'src/app/shared/utilities/general.utilities';\n\nconst BLOCK_SIZE = 30;\nconst MINUTES_IN_DAY = 24 * 60;\n\n@Component({\n    selector: 'a-timeline',\n    templateUrl: './timeline.component.html',\n    styleUrls: ['./timeline.component.scss'],\n})\nexport class TimelineComponent extends BaseDirective implements OnInit {\n    /** Currently selected datetime */\n    @Input() public date: number;\n    /** Emitter for changes to the selected datetime */\n    @Output() public dateChange = new EventEmitter<number>();\n    /** List of time blocks to select */\n    public blocks: Identity[] = [];\n    /** Starting point for time move events */\n    private _start_position: Point;\n    /** Bounding box of the timeline container */\n    private _box: ClientRect;\n\n    /** Whether selected date time is the current day */\n    public get is_today() {\n        return dayjs().isSame(dayjs(this.date), 'd');\n    }\n\n    /** Offset of the current time from the start of the day */\n    public get offset() {\n        const date = dayjs();\n        const diff = date.diff(date.startOf('d'), 'm');\n        return (diff / MINUTES_IN_DAY) * 100;\n    }\n\n    /** Details of the currently selected datetime */\n    public get active_time(): Identity {\n        const date = dayjs(this.date);\n        const diff = date.diff(date.startOf('d'), 'm');\n        return {\n            id: date.isSame(dayjs(), 'd') ? 'Today' : date.format('DD MMM YYYY'),\n            name: date.format('h:mm A'),\n            left: (diff / MINUTES_IN_DAY) * 100,\n        };\n    }\n\n    @ViewChild('container', { static: true }) private _container: ElementRef<HTMLDivElement>;\n\n    constructor(private _renderer: Renderer2) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.blocks = this.generateBlocks();\n        this.checkDate();\n        this.interval('check_date', () => this.checkDate(), 15 * 1000);\n    }\n\n    /**\n     * Generate the display blocks for the timeline\n     */\n    public generateBlocks(): Identity[] {\n        const start = dayjs().startOf('d');\n        const end = start.endOf('d');\n        const blocks: Identity[] = [];\n        let current_time = start;\n        while (current_time.isBefore(end)) {\n            const is_hour = current_time.minute() === 0;\n            blocks.push({\n                id: current_time.format('HH:mm'),\n                name: is_hour ? current_time.format('h') : '',\n                is_hour,\n                left: (current_time.diff(start, 'm') / MINUTES_IN_DAY) * 100,\n            });\n            current_time = current_time.add(BLOCK_SIZE, 'm');\n        }\n        return blocks;\n    }\n\n    /**\n     * Change the date of the active date time\n     * @param amount Number of days to change by\n     */\n    public changeDate(amount: number = 1) {\n        let date = dayjs(this.date);\n        date = date.add(amount, 'd');\n        const now = dayjs();\n        this.date = date.isBefore(now, 'm') ? now.valueOf() : date.valueOf();\n        this.dateChange.emit(this.date);\n    }\n\n    public startMove(event: MouseEvent | TouchEvent) {\n        const position = eventToPoint(event);\n        this._start_position = position;\n        this._box = this._container.nativeElement.getBoundingClientRect();\n        const type = event instanceof MouseEvent ? 'mouse' : 'touch';\n        this.subscription(\n            'move',\n            this._renderer.listen('window', `${type}move`, (e) => this.onMove(e))\n        );\n        this.subscription(\n            'end',\n            this._renderer.listen('window', `${type === 'mouse' ? 'mouseup' : 'touchend'}`, (e) => {\n                this.unsub('move');\n                this.unsub('end');\n            })\n        );\n    }\n\n    public onMove(event: MouseEvent | TouchEvent) {\n        const position = eventToPoint(event);\n        const y_change = (this._start_position.x - position.x) / this._box.width;\n        const time_change = -Math.round(y_change * MINUTES_IN_DAY);\n        /* istanbul ignore else */\n        if (time_change !== 0) {\n            let old_date = dayjs(this.date);\n            let date = old_date;\n            date = date.add(time_change, 'm');\n            date = date.minute(Math.floor(Math.round(date.minute() / 5)) * 5);\n            this.date = date.valueOf();\n            this.dateChange.emit(this.date);\n            /* istanbul ignore else */\n            if (Math.abs(old_date.diff(date, 'm')) > 0) {\n                this._start_position = position;\n            }\n            this.checkDate();\n        }\n    }\n\n    /** Check that active datetime is not in the past */\n    private checkDate() {\n        const date = dayjs(this.date);\n        let now = dayjs();\n        now = now.minute(Math.floor(Math.ceil(now.minute() / 5)) * 5);\n        /* istanbul ignore else */\n        if (date.isBefore(now, 'm')) {\n            this.date = now.valueOf();\n            this.dateChange.emit(this.date);\n        }\n    }\n}\n","<div class=\"not-mobile\">\n    <div class=\"timeline\" explore #container>\n        <div\n            class=\"block\"\n            *ngFor=\"let item of blocks\"\n            [class.hour]=\"item.is_hour\"\n            [style.left]=\"item.left + '%'\"\n        >\n            <div class=\"text\">{{ item.name }}</div>\n            <div class=\"bar\"></div>\n        </div>\n    </div>\n    <div class=\"offset\" *ngIf=\"is_today\" [style.width]=\"offset + '%'\"></div>\n    <div class=\"active-time\" [style.left]=\"active_time.left + '%'\">\n        <div class=\"bar\"></div>\n        <div class=\"date\">\n            <button mat-icon-button [disabled]=\"is_today\" (tapped)=\"changeDate(-1)\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_left' }\"></app-icon>\n            </button>\n            <div class=\"text\" (mousedown)=\"startMove($event)\" (touchstart)=\"startMove($event)\">{{ active_time.id }}</div>\n            <button mat-icon-button (tapped)=\"changeDate()\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_right' }\"></app-icon>\n            </button>\n        </div>\n        <div class=\"time\" (mousedown)=\"startMove($event)\" (touchstart)=\"startMove($event)\">{{ active_time.name }}</div>\n        <div class=\"triangle\"></div>\n    </div>\n</div>\n<div class=\"pickers mobile-only\">\n    <a-date-field [(ngModel)]=\"date\" offset=\"top\" (ngModelChange)=\"dateChange.emit($event)\"></a-date-field>\n    <a-time-field [(ngModel)]=\"date\" (ngModelChange)=\"dateChange.emit($event)\"></a-time-field>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { Point } from 'src/app/shared/utilities/types.utilities';\n\n@Component({\n    selector: 'a-zoom-controls',\n    templateUrl: './zoom-controls.component.html',\n    styleUrls: ['./zoom-controls.component.scss']\n})\nexport class ZoomControlsComponent implements OnInit {\n    /** Current zoom level of the map */\n    @Input() public zoom: number;\n    /** Current center position of the map */\n    @Input() public position: Point;\n    /** Emitter for changes to the zoom value */\n    @Output() public zoomChange = new EventEmitter<number>();\n    /** Emitter for changes to the position */\n    @Output() public positionChange = new EventEmitter<Point>();\n\n    public min_zoom: number = 1;\n\n    public max_zoom: number = 10;\n\n    constructor() {}\n\n    public ngOnInit(): void {\n\n    }\n\n    public zoomIn() {\n        this.zoom = (this.zoom || this.min_zoom) * 1.2;\n        if (this.zoom > this.max_zoom) {\n            this.zoom = this.max_zoom;\n        }\n        this.zoomChange.emit(this.zoom);\n    }\n\n    public zoomOut() {\n        this.zoom = (this.zoom || this.min_zoom) * (1 / 1.2);\n        if (this.zoom < this.min_zoom) {\n            this.zoom = this.min_zoom;\n        }\n        this.zoomChange.emit(this.zoom);\n    }\n\n    public reset() {\n        this.zoom = this.min_zoom;\n        this.position = { x: 0.5, y: 0.5 };\n        this.zoomChange.emit(this.zoom);\n        this.positionChange.emit(this.position);\n    }\n}\n","<div class=\"zoom-control\">\n    <button mat-icon-button name=\"zoom-in\" (tapped)=\"zoomIn()\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'add' }\"></app-icon>\n    </button>\n    <button mat-icon-button name=\"zoom-out\" (tapped)=\"zoomOut()\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'remove' }\"></app-icon>\n    </button>\n    <button mat-icon-button name=\"reset\" (tapped)=\"reset()\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'replay' }\"></app-icon>\n    </button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { HomePageSettings, ApplicationLink } from 'src/app/shared/utilities/settings.interfaces';\n\n@Component({\n    selector: 'app-home',\n    templateUrl: './home.component.html',\n    styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent extends BaseDirective implements OnInit {\n    /** Settings for the home page */\n    public settings: HomePageSettings;\n    /** Whether to show the overlay menu */\n    public show_menu: boolean;\n    /** Tiles to display on the home page */\n    public get tiles(): ApplicationLink[] {\n        return (this.settings || { tiles: [] }).tiles || [];\n    }\n\n    /** Min width of a tile */\n    public get tile_width(): number {\n        const tiles = this.tiles;\n        if (tiles.length > 2) {\n            return 49;\n        }\n        return 99;\n    }\n\n    /** Height of each tile */\n    public get tile_height(): number {\n        const tiles = this.tiles;\n        if (tiles.length > 2) {\n            return 100 / ((tiles.length + tiles.length % 2) / 2 );\n        }\n        return 50;\n    }\n\n    constructor(private _service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.title = 'Home';\n        this._service.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.settings = this._service.setting('app.home') || {};\n        });\n    }\n}\n","<div class=\"home-page\">\n    <header class=\"header\">\n        <a-topbar-header [(menu)]=\"show_menu\" page=\"home\"></a-topbar-header>\n    </header>\n    <main class=\"body\">\n        <div class=\"bg-img\">\n            <img src=\"assets/img/mckinsey_lines.svg\">\n        </div>\n        <div\n            class=\"tile\"\n            *ngFor=\"let item of tiles; let i = index\"\n            [attr.name]=\"item.name\"\n            [style.min-width]=\"tile_width + '%'\"\n            [style.height]=\"(tile_height) * (i === 0 ? 4 / 3 : 2 / 3) + '%'\"\n        >\n            <a *ngIf=\"item.link\" [href]=\"item.link\">\n                <div class=\"inner\">\n                    <app-icon [icon]=\"item.icon\"></app-icon>\n                    <div class=\"text\">{{ item.name }}</div>\n                </div>\n            </a>\n            <a *ngIf=\"!item.link\" [routerLink]=\"[item.route]\" routerLinkActive=\"active\">\n                <div class=\"inner\">\n                    <app-icon [icon]=\"item.icon\"></app-icon>\n                    <div class=\"text\">{{ item.name }}</div>\n                </div>\n            </a>\n        </div>\n    </main>\n    <footer class=\"footer\"></footer>\n</div>\n<a-overlay-menu [(show)]=\"show_menu\"></a-overlay-menu>\n","import { Component, ViewChild, Output, EventEmitter } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport { first } from 'rxjs/operators';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { BookingLike } from './list-item/list-item.component';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { UsersService } from 'src/app/services/data/users/users.service';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nimport * as dayjs from 'dayjs';\n\nexport interface EventPair {\n    id: string;\n    date: number;\n}\n\n@Component({\n    selector: 'schedule-event-list',\n    templateUrl: './event-list.component.html',\n    styleUrls: ['./event-list.component.scss'],\n})\nexport class ScheduleEventListComponent extends BaseDirective {\n    /** Emitter  */\n    @Output('eventList') public event_list = new EventEmitter<EventPair[]>();\n    /** List of items to display on the event list */\n    public events: BookingLike[] = [];\n    /** Update promise */\n    public event_promise: Promise<void>;\n    /** Whether bookings are being updated */\n    public loading: boolean;\n    /** Number of days to render in the list from the current date */\n    public shown_offset: number = 7;\n    /** Offset of the date to show events for */\n    public date_offset: number = 0;\n    /** Whether to show the calendar tooltip */\n    public show_calendar: boolean;\n    /** Date to scroll to on next update */\n    public scroll_to: string;\n    /** Current UTC epoch */\n    public now: number = dayjs().valueOf();\n    /** Current UTC epoch */\n    public date: number;\n    /** Whether list is displaying the top of the first item */\n    public at_top: boolean = true;\n    /** List of users available to view schedules for */\n    public user_list: User[] = [];\n    /** Active user to display schedule for */\n    public active_user: User;\n\n    /** Viewport for the scrollable area of the list */\n    @ViewChild(CdkVirtualScrollViewport, { static: true })\n    private scroll_viewport: CdkVirtualScrollViewport;\n\n    @ViewChild(MatMenuTrigger, { static: true }) trigger: MatMenuTrigger;\n\n    constructor(\n        private _users: UsersService,\n        private _bookings: BookingsService,\n        private _spaces: SpacesService,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._spaces.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.subscription(\n                'route.query',\n                this._route.queryParamMap.subscribe((params) => {\n                    /* istanbul ignore else */\n                    if (params.has('email')) {\n                        this.active_user =\n                            this._users.find(params.get('email')) ||\n                            new User({ email: params.get('email') });\n                    }\n                })\n            );\n            this.updateEvents();\n            this.interval('update_events', () => this.updateEvents(), 10 * 1000);\n            this.subscription(\n                'scroll',\n                this.scroll_viewport.elementScrolled().subscribe(() => this.onScroll())\n            );\n            this.subscription(\n                'delegate_list',\n                this._users.listen('delegates').subscribe((list) => {\n                    /* istanbul ignore else */\n                    if (list && list[0]) {\n                        this.user_list = [this._users.current].concat(list);\n                        /* istanbul ignore else */\n                        if (!this.active_user) {\n                            this.active_user = this.user_list[0];\n                        }\n                    }\n                })\n            );\n        });\n    }\n\n    /**\n     * Update the list of events for the currently visible period\n     */\n    public updateEvents() {\n        /* istanbul ignore else */\n        if (!this.event_promise) {\n            this.event_promise = new Promise((resolve) => {\n                const start = dayjs().add(this.date_offset, 'd').startOf('d');\n                const end = start.add(7, 'd').endOf('d');\n                this.loading = true;\n                this._bookings\n                    .query({\n                        email:\n                            (this.active_user ? this.active_user.email : '') ||\n                            this._users.current.email,\n                        from: start.unix(),\n                        to: end.unix(),\n                    })\n                    .then(\n                        (list: Booking[]) => {\n                            this._bookings.updateList(this._bookings.filter(), list);\n                            const old_events = this.events.filter((i) => {\n                                const date = dayjs(i.date);\n                                return (\n                                    i.type !== 'date' &&\n                                    i.type !== 'empty' &&\n                                    (date.isBefore(start, 's') || date.isAfter(end, 's'))\n                                );\n                            });\n                            this.events = this.processEvents(list, old_events);\n                            // Update event list for view listing\n                            const event_list = this.events.filter(\n                                (i) => i.type !== 'date' && i.type !== 'empty'\n                            );\n                            this.event_list.emit(\n                                event_list.map((i) => ({ id: i.id, date: i.date }))\n                            );\n                            // Scroll to date if needed\n                            this.timeout('scroll_to', () => this.scrollTo());\n                            this.loading = false;\n                            delete this.event_promise;\n                        },\n                        () => {\n                            this.loading = false;\n                            delete this.event_promise;\n                        }\n                    );\n            });\n        }\n        return this.event_promise;\n    }\n\n    /**\n     * Process list of new items and merge with the old\n     * @param list List of new bookings to generate event blocks for\n     * @param old_events List of relevant old event blocks\n     */\n    public processEvents(list: Booking[], old_events: BookingLike[]): BookingLike[] {\n        let events: BookingLike[] = [];\n        const now = dayjs();\n        let date = dayjs().startOf('d');\n        const end = date.add(this.shown_offset, 'd').endOf('d');\n        for (; date.isBefore(end); date = date.add(1, 'd')) {\n            const date_str = date.format('YYYY-MM-DD');\n            // Add date block\n            events.push({\n                id: date_str,\n                type: 'date',\n                order_id: date_str,\n                title: date.format('dddd, DD MMM'),\n                is_today: date.isSame(now, 'd'),\n                date: date.valueOf(),\n            });\n            const filter_fn: (_: BookingLike) => boolean = (i) => {\n                const day = dayjs(i.date);\n                return day.isAfter(date, 's') && day.isBefore(date.endOf('d'), 's');\n            };\n            // Add events for today to list\n            const new_items = list.filter(filter_fn as any);\n            const old_items = old_events.filter(filter_fn as any);\n            if (new_items.length || old_items.length) {\n                events = events.concat(new_items as any).concat(old_items);\n            } else {\n                // Add block for no events if so\n                events.push({\n                    id: `${date_str}-empty`,\n                    type: 'empty',\n                    order_id: date_str,\n                    title: `No items for ${date.format('dddd, DD MMM')}`,\n                    is_today: date.isSame(now, 'd'),\n                    date: date.valueOf() + 1,\n                });\n            }\n        }\n        events.sort((a, b) => a.date - b.date);\n        events = unique(events, 'id');\n        return events;\n    }\n\n    /**\n     * Handle scrolling on the event list\n     */\n    public onScroll() {\n        /* istanbul ignore else */\n        if (!this.event_promise) {\n            this.show_calendar = false;\n            const range = this.scroll_viewport.getRenderedRange();\n            const dist = range.end - range.start;\n            const nearest = this.events[range.start];\n            this.at_top = range.start === 0 && this.scroll_viewport.measureScrollOffset() < 5;\n            this.date_offset = dayjs(nearest.date).diff(dayjs(), 'd') - 1;\n            this.date = dayjs((this.events[dist + range.start] || {}).date)\n                .subtract(1, 'd')\n                .valueOf();\n            /* istanbul ignore else */\n            if (range.end > this.events.length - 7) {\n                this.shown_offset += 3;\n                this.updateEvents();\n            }\n        }\n    }\n\n    /**\n     * Update the date offset\n     * @param date UTC milliseconds epoch of new date offset\n     */\n    public updateDate(date: number) {\n        const day = dayjs(date);\n        this.date_offset = day.diff(dayjs(), 'd') - 1;\n        this.shown_offset = Math.max(this.shown_offset, this.date_offset + 3);\n        this.scroll_to = day.format('YYYY-MM-DD');\n        delete this.event_promise;\n        this.show_calendar = false;\n        this.date = dayjs().add(this.date_offset, 'd').valueOf();\n        this.updateEvents();\n    }\n\n    /** Close the menu popup with the date picker */\n    public closeDatePicker() {\n        this.trigger.closeMenu();\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(item: BookingLike, index: number) {\n        return item ? item.id : null;\n    }\n\n    /**\n     * Scroll to a previously defined date on the event list\n     */\n    private scrollTo() {\n        /* istanbul ignore else */\n        if (this.scroll_to) {\n            const index = this.events.findIndex((i) => i.id === this.scroll_to);\n            /* istanbul ignore else */\n            if (index > -1) {\n                this.scroll_viewport.scrollToIndex(index, 'smooth');\n                this.scroll_to = null;\n            }\n        }\n    }\n}\n","<div class=\"event-list\">\n    <div class=\"header dark-mode\" [class.scrolled]=\"!at_top\">\n        <div class=\"user\">\n            <mat-form-field appearance=\"outline\" *ngIf=\"user_list && user_list.length > 1\" >\n                <mat-select #select [(value)]=\"active_user\" (valueChange)=\"updateEvents($event)\">\n                    <mat-option *ngFor=\"let user of user_list\" [value]=\"user\">\n                        {{ user?.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"flex\"></div>\n        <div class=\"date\">\n            <button mat-icon-button [matMenuTriggerFor]=\"appMenu\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'event' }\"></app-icon>\n            </button>\n        </div>\n    </div>\n    <div class=\"progress\">\n        <mat-progress-bar mode=\"indeterminate\" *ngIf=\"loading\"></mat-progress-bar>\n    </div>\n    <div class=\"body\">\n        <cdk-virtual-scroll-viewport itemSize=\"80\" class=\"viewport\" (scroll)=\"onScroll()\">\n            <ng-container *cdkVirtualFor=\"let item of events; trackBy: trackByFn\">\n                <schedule-event-item [attr.id]=\"item.id | slice:0:10\" [user]=\"active_user\" [event]=\"item\"></schedule-event-item>\n            </ng-container>\n        </cdk-virtual-scroll-viewport>\n    </div>\n    <div class=\"footer\"></div>\n</div>\n<mat-menu #appMenu=\"matMenu\">\n    <div mat-menu-item class=\"date-picker\" (click)=\"$event.stopPropagation()\">\n        <a-date-picker\n            [(ngModel)]=\"date\"\n            (ngModelChange)=\"updateDate($event); closeDatePicker()\"\n        ></a-date-picker>\n    </div>\n</mat-menu>\n","import { Component, Input } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport {\n    MeetingDetailsOverlayComponent,\n    MeetingDetailsModalData,\n} from 'src/app/overlays/meeting-details-overlay/meeting-details-overlay.component';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { User } from 'src/app/services/data/users/user.class';\n\nimport * as dayjs from 'dayjs';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\nexport interface BookingLike {\n    /** ID of the item */\n    id: string;\n    /** Sorting weight of the item */\n    order_id: string;\n    /** Type of item to render */\n    type: 'date' | 'event' | 'empty';\n    /** Whether the event is on the current date */\n    is_today: boolean;\n    /** Title of the event */\n    title: string;\n    /** Date in UTC milliseconds */\n    date: number;\n    /** Current state of the booking */\n    status?: 'future' | 'upcoming' | 'done' | 'started' | 'in_progress';\n\n    [key: string]: any;\n}\n\n@Component({\n    selector: 'schedule-event-item',\n    templateUrl: './list-item.component.html',\n    styleUrls: ['./list-item.component.scss'],\n})\nexport class ScheduleEventListItemComponent extends BaseDirective {\n    /** Booking to display */\n    @Input() public event: BookingLike;\n    /** User who's schedule is being viewed */\n    @Input() public user: User;\n\n    public get in_progress(): boolean {\n        return this.event.status === 'in_progress';\n    }\n\n    public get date_display(): string {\n        const date = dayjs(this.event.date);\n        const now = dayjs();\n        return now.isSame(date, 'd') ? 'Today' : date.format('DD MMM YYYY');\n    }\n\n    /** Display location of the booking event */\n    public get location(): string {\n        const booking: Booking = this.event as any;\n        return (booking.space_list || [booking.space]).map((i) => i.name).join(', ');\n    }\n\n    /** Image name to display for the event */\n    public get type_image(): string {\n        const booking: Booking = this.event as any;\n        return booking.has_visitors ? 'external' : 'book_room';\n    }\n\n    public get time(): string {\n        const booking: Booking = this.event as any;\n        return booking.all_day || booking.duration > 23 * 60\n            ? 'All Day'\n            : dayjs(booking.date).format('h:mm A');\n    }\n\n    /** Status of the current booking */\n    public get status(): 'approved' | 'tentative' | 'declined' | '' {\n        const statuses = this.event.approval_status || {};\n        const spaces = this.event.space_list || [];\n        for (const space of spaces) {\n            const status = statuses[space.id] || '';\n            if (status.indexOf('tentative') >= 0 || status.indexOf('not') === 0) {\n                return 'tentative';\n            } else if (status.indexOf('declined') >= 0) {\n                return 'declined';\n            }\n        }\n        const location = this.event.location || '';\n        const location_lower = (typeof location === 'string' ? location : '').toLowerCase();\n        if (location_lower.indexOf('tentative') >= 0) {\n            return 'tentative';\n        } else if (location_lower.indexOf('declined') >= 0) {\n            return 'declined';\n        }\n        return spaces.length ? 'approved' : '';\n    }\n\n    constructor(private _dialog: MatDialog, private _users: UsersService) {\n        super();\n    }\n\n    public openDetailsModal() {\n        /* istanbul ignore else */\n        if (this.event instanceof Booking) {\n            this._dialog.open<MeetingDetailsOverlayComponent, MeetingDetailsModalData>(\n                MeetingDetailsOverlayComponent,\n                {\n                    maxHeight: 'auto',\n                    maxWidth: 'auto',\n                    width: 'auto',\n                    height: 'auto',\n                    hasBackdrop: false,\n                    closeOnNavigation: true,\n                    data: {\n                        booking: this.event,\n                        as_delegate: this._users.current.email === (this.user || {}).email,\n                        delegate: this.user.email,\n                        is_first: false,\n                        is_last: false,\n                    },\n                }\n            );\n        }\n    }\n}\n","<div [class]=\"'event-item ' + event.type + ' ' + status\" *ngIf=\"event\" [attr.id]=\"event.id\">\n    <ng-container [ngSwitch]=\"event.type\">\n        <div *ngSwitchCase=\"'date'\" class=\"day display\">{{ event.title }}</div>\n        <div *ngSwitchCase=\"'empty'\" class=\"emptied display\">\n            No events for {{ date_display }}\n        </div>\n        <div *ngSwitchDefault class=\"event display\">\n            <a (tapped)=\"openDetailsModal()\">\n                <div class=\"content\">\n                    <div class=\"time\">\n                        <div>{{ time }}</div>\n                        <div class=\"info\" *ngIf=\"in_progress\">In Progress</div>\n                    </div>\n                    <div class=\"icon\">\n                        <img [src]=\"'assets/img/' + type_image + '.svg'\" />\n                    </div>\n                    <div class=\"details\">\n                        <div class=\"title text\">{{ event.title }}</div>\n                        <div class=\"location text\">\n                            <img src=\"assets/img/location.svg\">\n                            <div class=\"text\">{{ location || event.location_name || 'No location' }}</div>\n                        </div>\n                    </div>\n                </div>\n            </a>\n        </div>\n    </ng-container>\n</div>\n","\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { EventPair } from './event-list/event-list.component';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\n\n@Component({\n    selector: 'app-schedule',\n    templateUrl: './schedule.template.html',\n    styleUrls: ['./schedule.styles.scss'],\n})\nexport class ScheduleComponent extends BaseDirective implements OnInit {\n    /** Name of the page to render */\n    public page: string;\n    /** ID of the event item to view */\n    public id: string;\n    /** Current list of loaded events */\n    public events: EventPair[];\n    /** Whether to show menu */\n    public show_menu = false;\n\n    /** ID of the event after the active event */\n    public get next(): string {\n        if (this.events) {\n            const index = this.events.findIndex(i => this.id === i.id) + 1;\n            if (index > -1 && this.events[index]) {\n                return this.events[index].id;\n            }\n        }\n        return '';\n    }\n\n    /** ID of the event before the active event */\n    public get previous(): string {\n        if (this.events) {\n            const index = this.events.findIndex(i => this.id === i.id) - 1;\n            if (index > -1 && this.events[index]) {\n                return this.events[index].id;\n            }\n        }\n        return '';\n    }\n\n    constructor(private _route: ActivatedRoute, private _service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription('route.route', this._route.paramMap.subscribe((params) => {\n            if (params.has('page')) {\n                this.page = params.get('page');\n            }\n            if (params.has('id')) {\n                this.id = params.get('id');\n            }\n        }));\n        this.loadEvents();\n        this._service.title = 'My Day';\n    }\n\n    /**\n     * Update local event listing\n     * @param event_list New list of events\n     */\n    public updateEvents(event_list: EventPair[]) {\n        this.events = event_list;\n        this.saveEvents();\n    }\n\n    /**\n     * Save the current event listing\n     */\n    public saveEvents() {\n        if (localStorage) {\n            localStorage.setItem('STAFF.events', JSON.stringify(this.events || []));\n        }\n    }\n\n    /**\n     * Load the last saved event listing\n     */\n    public loadEvents() {\n        if (localStorage) {\n            const data = localStorage.getItem('STAFF.events');\n            this.events = JSON.parse(data || '[]');\n        }\n    }\n}\n","<div class=\"schedule page\">\n    <header class=\"header\">\n        <a-topbar-header [(menu)]=\"show_menu\"></a-topbar-header>\n    </header>\n    <main class=\"body\">\n        <ng-container [ngSwitch]=\"page\">\n            <ng-container *ngSwitchCase=\"'view'\">\n                <schedule-view-event [id]=\"id\" [next]=\"next\" [previous]=\"previous\"></schedule-view-event>\n            </ng-container>\n            <ng-container *ngSwitchDefault>\n                <schedule-event-list (eventList)=\"updateEvents($event)\"></schedule-event-list>\n            </ng-container>\n        </ng-container>\n    </main>\n    <footer class=\"footer\">\n        <a-footer-menu></a-footer-menu>\n    </footer>\n</div>\n<a-overlay-menu [(show)]=\"show_menu\"></a-overlay-menu>","\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { RouterModule } from '@angular/router';\nimport { ComposerModule } from '@placeos/composer';\n\nimport { ROUTES } from './schedule.routes';\nimport { SharedContentModule } from 'src/app/shared/shared.module';\n\nimport { ScheduleComponent } from './schedule.component';\nimport { ScheduleEventListComponent } from './event-list/event-list.component';\nimport { ScheduleViewEventComponent } from './view-event/view-event.component';\nimport { ScheduleEventListItemComponent } from './event-list/list-item/list-item.component';\nimport { EventDetailsComponent } from './view-event/event-details/event-details.component';\nimport { EventEditComponent } from './view-event/event-edit/event-edit.component';\n\n@NgModule({\n    declarations: [\n        ScheduleComponent,\n        ScheduleViewEventComponent,\n        ScheduleEventListComponent,\n        ScheduleEventListItemComponent,\n        EventDetailsComponent,\n        EventEditComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ComposerModule,\n        FormsModule,\n        ReactiveFormsModule,\n        RouterModule.forChild(ROUTES),\n        SharedContentModule,\n        ScrollingModule\n    ]\n})\nexport class ScheduleModule { }\n","import { Routes } from '@angular/router';\n\nimport { ScheduleComponent } from './schedule.component';\n\nexport const ROUTES: Routes = [\n    { path: '', component: ScheduleComponent },\n    { path: ':page', component: ScheduleComponent },\n    { path: ':page/:id', component: ScheduleComponent },\n    { path: '**', redirectTo: '' }\n];\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { humaniseDuration } from 'src/app/shared/utilities/general.utilities';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { ViewRoomModalComponent } from 'src/app/overlays/view-room-modal/view-room-modal.component';\n\nimport * as dayjs from 'dayjs';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: 'schedule-event-details',\n    templateUrl: './event-details.component.html',\n    styleUrls: ['./event-details.component.scss']\n})\nexport class EventDetailsComponent extends BaseDirective {\n    /** Booking to display */\n    @Input() event: Booking;\n    /** Emitter for action on the display view */\n    @Output() change = new EventEmitter();\n    /** Emitter for changes to the loading state */\n    @Output() loading = new EventEmitter();\n    /** Toggle for activating checkin */\n    public checked_in: boolean;\n    /** Mapping of spaces to last checkin time */\n    public last_start: { [id: string]: number } = {};\n    /** Whether to show full locations list */\n    public show_locations: boolean;\n    /** Whether to show full attendee list */\n    public show_attendees: boolean;\n\n    /** Title of the displayed event */\n    public get title(): string {\n        if (!this.event) {\n            return '';\n        }\n        return this.event.title;\n    }\n\n    /** Display string of when the event will occur */\n    public get when(): string {\n        if (!this.event) {\n            return 'Unable to determine.';\n        }\n        const date = dayjs(this.event.date);\n        const end = date.add(this.event.duration || 60, 'm');\n        if (this.event.all_day || this.event.duration > 23 * 60) {\n            return `${date.format('DD MMM YYYY')} - All Day`;\n        } else {\n            if (date.isSame(end, 'd')) {\n                return `${date.format('DD MMM YYYY, h:mm A')} - ${end.format('h:mm A')}`;\n            } else {\n                return `${date.format('DD MMM YYYY, h:mm A')} - ${end.format(\n                    'DD MMM YYYY, h:mm A'\n                )}`;\n            }\n        }\n    }\n\n    /** Display string for the event's duration */\n    public get duration(): string {\n        if (!this.event) {\n            return 'Unable to determine';\n        }\n        return humaniseDuration(this.event.duration || 60);\n    }\n\n    /** List of spaces associated with the event */\n    public get spaces(): Space[] {\n        if (!this.event) {\n            return [];\n        }\n        return this.event.space_list;\n    }\n\n    /** List of attendees associated with the event not including the host */\n    public get attendees(): User[] {\n        if (!this.event) {\n            return [];\n        }\n        return this.event.attendees.filter(i => i.email !== this.organiser.email);\n    }\n\n    /** Host of the event */\n    public get organiser(): User {\n        if (!this.event) {\n            return this._users.current;\n        }\n        return this.event.organiser || this._users.current;\n    }\n\n    /** Whether the user is allowed to edit the event */\n    public get can_edit(): boolean {\n        const organiser = this.organiser;\n        const user = this._users.current;\n        return organiser.email === user.email && this.status !== 'done';\n    }\n\n    /** Details about the event */\n    public get notes(): string {\n        if (!this.event) {\n            return '';\n        }\n        return this.event.description || '';\n    }\n\n    /** Status of the event */\n    public get status(): 'future' | 'upcoming' | 'done' | 'started' | 'in_progress' {\n        if (this.event) {\n            const now = dayjs();\n            const date = dayjs(this.event.date);\n            /* istanbul ignore else */\n            if (now.isBefore(date.subtract(15, 'm'), 'm')) {\n                return 'future';\n            } else if (now.isBefore(date, 'm')) {\n                return 'upcoming';\n            } else if (now.isBefore(date.add(15, 'm'), 'm')) {\n                return 'started';\n            } else if (now.isBefore(date.add(this.event.duration, 'm'), 'm')) {\n                return 'in_progress';\n            }\n        }\n        return 'done';\n    }\n\n    /** Whether the user has checkin to all the spaces in the event */\n    public get is_checked_in(): boolean {\n        return this.spaces.reduce(\n            (a, v) => a && this.event.date <= (this.last_start[v.id] || 0),\n            true\n        );\n    }\n\n    /** Whether the spaces can be controlled */\n    public get can_control(): boolean {\n        return this.spaces.length > 0 && this.status !== 'future' && this.status !== 'done';\n    }\n\n    /** Whether the user is able to checkin to the event */\n    public get can_checkin(): boolean {\n        return this.spaces.length > 0 && (this.status === 'upcoming' || this.status === 'started');\n    }\n\n    constructor(private _users: UsersService, private _dialog: MatDialog, private _router: Router) {\n        super();\n    }\n\n    /**\n     * Open the modal to show the location of a space\n     * @param space Space to show the location\n     */\n    public locate(space: Space) {\n        /* istanbul ignore else */\n        if (space) {\n            this._dialog.open(ViewRoomModalComponent, {\n                width: 'auto',\n                height: 'auto',\n                maxWidth: '95vw',\n                maxHeight: '95vh',\n                data: { space }\n            });\n        }\n    }\n\n    /**\n     * Enter edit mode for the booking\n     */\n    public edit(): void {\n        this.change.emit({ type: 'edit' });\n    }\n\n    /**\n     * Checkin the current booking\n     */\n    public checkin(): void {\n        this.checked_in = !this.checked_in;\n    }\n\n    /**\n     * Store the booking data and navigate to the booking form\n     */\n    public duplicate(): void {\n        /* istanbul ignore else */\n        if (localStorage) {\n            const booking = this.event.duplicate();\n            localStorage.setItem('STAFF.booking_form', JSON.stringify(booking));\n        }\n        this.change.emit({ type: 'duplicate' });\n        this._router.navigate(['/book']);\n    }\n}\n","<div class=\"event-details\">\n    <div class=\"bindings\">\n        <ng-container *ngFor=\"let space of spaces\">\n            <ng-container *ngIf=\"space?.level?.id\">\n                <i\n                    binding\n                    [(model)]=\"last_start[space.id]\"\n                    [sys]=\"space.id\"\n                    mod=\"Booking\"\n                    bind=\"last_meeting_started\"\n                ></i>\n                <i\n                    binding\n                    [(model)]=\"checkin\"\n                    [sys]=\"space.id\"\n                    mod=\"Booking\"\n                    exec=\"start_meeting\"\n                    [params]=\"[event.date]\"\n                ></i>\n            </ng-container>\n        </ng-container>\n    </div>\n    <div class=\"body\">\n        <div class=\"field\" name=\"title\">\n            <label>Title:</label>\n            <div class=\"value\">{{ title }}</div>\n        </div>\n        <div class=\"field\" name=\"when\">\n            <label>When:</label>\n            <div class=\"value\">{{ when }}</div>\n        </div>\n        <div class=\"field\" name=\"duration\">\n            <label>Duration:</label>\n            <div class=\"value\">{{ duration }}</div>\n        </div>\n        <div class=\"field multi\" name=\"location\">\n            <label>Locations({{ spaces.length || '0' }}):</label>\n            <div class=\"value\">\n                <div class=\"list\" [class.shown]=\"show_locations\">\n                    <div\n                        class=\"list-item\"\n                        *ngFor=\"let item of spaces\"\n                        [title]=\"item?.name + ' - ' + (item?.status || 'Approved')\"\n                    >\n                        <div class=\"status\"></div>\n                        <div class=\"text\">{{ item?.name }}</div>\n                        <button class=\"show\" *ngIf=\"item?.map_id\" name=\"map\" (tapped)=\"locate(item)\">\n                            Map\n                        </button>\n                        <a\n                            class=\"show\"\n                            *ngIf=\"item?.support_url && can_control\"\n                            name=\"control\"\n                            [href]=\"item.support_url\"\n                            target=\"_blank\"\n                            >Control</a\n                        >\n                    </div>\n                    <div class=\"list-item\" *ngIf=\"!spaces.length\">No Location</div>\n                </div>\n                <button\n                    class=\"show\"\n                    *ngIf=\"spaces.length > 5\"\n                    (touchrelease)=\"show_locations = !show_locations\"\n                >\n                    {{ show_locations ? 'Hide' : 'Show' }} Locations\n                </button>\n            </div>\n        </div>\n        <div class=\"field\" name=\"host\">\n            <label>Host:</label>\n            <div class=\"value\">{{ organiser.name }}</div>\n        </div>\n        <div class=\"field multi\" name=\"attendees\">\n            <label>Attendees({{ attendees.length || '0' }}):</label>\n            <div class=\"value\">\n                <div class=\"list\" [class.shown]=\"show_attendees\">\n                    <div\n                        class=\"list-item\"\n                        *ngFor=\"let item of attendees\"\n                        [title]=\"\n                            item?.name +\n                            ' - ' +\n                            (item?.status || 'Accepted') +\n                            (item?.email ? '\\n' + item.email : '')\n                        \"\n                    >\n                        <div class=\"status\"></div>\n                        <div class=\"text\">\n                            <div class=\"name\">{{ item.name }}</div>\n                            <div class=\"email\" *ngIf=\"item.email\">\n                                <a [href]=\"'mailto:' + item.email + '?subject=' + event.title\">{{\n                                    item.email\n                                }}</a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <button\n                    class=\"show\"\n                    *ngIf=\"attendees.length > 5\"\n                    (touchrelease)=\"show_attendees = !show_attendees\"\n                >\n                    {{ show_attendees ? 'Hide' : 'Show' }} Attendees\n                </button>\n            </div>\n        </div>\n        <div class=\"field\" name=\"notes\">\n            <label>Notes:</label>\n            <div class=\"value\" [innerHTML]=\"notes\"></div>\n        </div>\n        <div class=\"field\" *ngIf=\"event && event.has_catering\" name=\"catering\">\n            <label>Catered:</label>\n            <div class=\"value\">Yes</div>\n        </div>\n    </div>\n    <div class=\"footer\">\n        <button\n            mat-button\n            *ngIf=\"can_checkin\"\n            name=\"checkin\"\n            [class]=\"\n                status === 'done' && !is_checked_in\n                    ? 'error no-events'\n                    : is_checked_in\n                    ? 'success no-events'\n                    : ''\n            \"\n            (tapped)=\"checkin()\"\n        >\n            <div class=\"text\">\n                {{\n                    status === 'done' && !is_checked_in\n                        ? 'Cancelled'\n                        : is_checked_in\n                        ? 'Checked in'\n                        : 'Checkin'\n                }}\n            </div>\n        </button>\n        <button mat-button *ngIf=\"can_edit\" name=\"edit\" (tapped)=\"edit()\">Edit</button>\n        <button mat-button *ngIf=\"can_edit\" name=\"duplicate\" (tapped)=\"duplicate()\">Duplicate</button>\n    </div>\n</div>\n","import { Component, OnInit, EventEmitter, Input, Output, SimpleChanges, OnChanges, OnDestroy } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { generateBookingForm } from 'src/app/services/data/bookings/booking.utilities';\nimport { BookingConfirmComponent } from 'src/app/shell/bookings/overlays/booking-confirm/booking-confirm.component';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: 'schedule-event-edit',\n    templateUrl: './event-edit.component.html',\n    styleUrls: ['./event-edit.component.scss']\n})\nexport class EventEditComponent extends BaseDirective implements OnInit, OnChanges, OnDestroy {\n    /** Booking to display */\n    @Input() public event: Booking;\n    /** Emitter for action on the display view */\n    @Output() public change = new EventEmitter<{ type: string }>();\n    /** Emitter for changes to the loading state */\n    @Output() public loading = new EventEmitter<string>();\n    /** Form field data */\n    public form: FormGroup;\n\n    constructor(private _service: ApplicationService, private _users: UsersService, private _dialog: MatDialog) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        /* istanbul ignore else */\n        if (this.event) {\n            this.form = generateBookingForm(\n                this.event,\n                this._users.current,\n                this._service.setting('app.booking.show_fields') || []\n            );\n        }\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.event && this.event) {\n            /* istanbul ignore else */\n            if (this.form && changes.event.previousValue) {\n                (changes.event.previousValue as Booking).emit('item_saved');\n            }\n            this.form = generateBookingForm(\n                this.event,\n                this._users.current,\n                this._service.setting('app.booking.show_fields') || []\n            );\n        }\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        /* istanbul ignore else */\n        if (this.form && this.event) {\n            this.event.emit('item_saved');\n        }\n    }\n\n    /**\n     * Exit the edit form\n     */\n    public cancel() {\n        this.change.emit({ type: 'cancel' });\n    }\n\n    /**\n     * Save changes to the booking\n     */\n    public save() {\n        /* istanbul ignore else */\n        if (!this.event.has_changes) {\n            this._service.notifyInfo('No changes have been made to booking');\n            return;\n        }\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            const dialog_ref = this._dialog.open(BookingConfirmComponent, {\n                width: '32em',\n                maxWidth: '95vw',\n                maxHeight: '95vh',\n                data: { booking: this.event }\n            });\n            dialog_ref.componentInstance.event.subscribe(event => {\n                /* istanbul ignore else */\n                if (event.reason === 'success') {\n                    this.change.emit({ type: 'view' });\n                }\n            });\n        }\n    }\n}\n","<div class=\"event-edit\">\n    <form *ngIf=\"form\" [formGroup]=\"form\" (ngSubmit)=\"save()\">\n        <div class=\"body\">\n            <a-booking-form [form]=\"form\"></a-booking-form>\n        </div>\n        <div class=\"footer\">\n            <button mat-button type=\"button\" class=\"inverse\" name=\"cancel\" (tapped)=\"cancel()\">\n                Cancel\n            </button>\n            <button mat-button type=\"submit\">Save</button>\n        </div>\n    </form>\n</div>\n","import { Component, OnInit, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\n\n@Component({\n    selector: 'schedule-view-event',\n    templateUrl: './view-event.component.html',\n    styleUrls: ['./view-event.component.scss'],\n})\nexport class ScheduleViewEventComponent extends BaseDirective implements OnChanges, OnInit {\n    /** ID of the current booking to display */\n    @Input() public id: string;\n    /** ID of the next booking */\n    @Input() public next: string;\n    /** ID of the previous booking */\n    @Input() public previous: string;\n    /** Booking to display */\n    public event: Booking;\n    /** Whether booking data is being loaded */\n    public loading: string;\n    /** Whether booking is being edited */\n    public editing: boolean;\n\n    constructor(\n        private _service: ApplicationService,\n        private _bookings: BookingsService,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'arrow_right',\n            this._service.Hotkeys.listen(['ArrowRight'], () => this.nextBooking())\n        );\n        this.subscription(\n            'arrow_left',\n            this._service.Hotkeys.listen(['ArrowLeft'], () => this.previousBooking())\n        );\n        this.subscription(\n            'changes',\n            this._bookings.listen('list').subscribe(() => this.loadEvent())\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.id && this.id) {\n            this.event = null;\n            this.editing = false;\n            this.loading = '';\n            this.loadEvent();\n        }\n    }\n\n    /**\n     * Load the details of the active event\n     */\n    public loadEvent() {\n        this.loading = 'Loading booking data...';\n        let booking = this._bookings.find(this.id);\n        if (booking) {\n            this.event = booking;\n            this.loading = '';\n        } else {\n            this._bookings.show(this.id, {}).then(\n                (bkn) => {\n                    this.loading = '';\n                    this.event = bkn;\n                },\n                () => {\n                    this.loading = '';\n                    this._service.notifyError(`Failed to loaded booking data<br>ID: ${this.id}`);\n                    this._router.navigate(['/schedule']);\n                }\n            );\n        }\n    }\n\n    /**\n     * View the next booking in the list\n     */\n    public nextBooking() {\n        /* istanbul ignore else */\n        if (this.next && !this.editing) {\n            this._router.navigate(['/schedule', 'view', this.next]);\n        }\n    }\n\n    /**\n     * View the previous booking in the list\n     */\n    public previousBooking() {\n        /* istanbul ignore else */\n        if (this.previous && !this.editing) {\n            this._router.navigate(['/schedule', 'view', this.previous]);\n        }\n    }\n\n    /**\n     * Handle changes to sub-components\n     */\n    public onChange(event: { type: string }): void {\n        /* istanbul ignore else */\n        if (event.type === 'edit') {\n            this.editing = true;\n        } else if (event.type === 'view' || event.type === 'cancel') {\n            this.editing = false;\n        }\n    }\n}\n","<div class=\"event-display\">\n    <div class=\"header\">\n        <div class=\"icon\"></div>\n        <div class=\"details\">\n            <a mat-icon-button name=\"previous\" [routerLink]=\"['/schedule', 'view', previous]\" [class.disabled]=\"!previous\">\n                <div class=\"left icon\">\n                    <i class=\"material-icons\">keyboard_arrow_left</i>\n                </div>\n            </a>\n            <div class=\"title\">{{ event ? event.title || 'No title' : '????' }}</div>\n            <a mat-icon-button name=\"next\" [routerLink]=\"['/schedule', 'view', next]\" [class.disabled]=\"!next\">\n                <div class=\"right icon\">\n                    <i class=\"material-icons\">keyboard_arrow_right</i>\n                </div>\n            </a>\n        </div>\n        <a mat-icon-button [routerLink]=\"['/schedule']\">\n            <div class=\"icon\">\n                <i class=\"material-icons\">close</i>\n            </div>\n        </a>\n    </div>\n    <div class=\"body\">\n        <div class=\"content\">\n            <ng-container *ngIf=\"loading\">\n                <div class=\"no-item center\">\n                    <div class=\"icon\">\n                        <mat-spinner diameter=\"48\"></mat-spinner>\n                    </div>\n                    <div class=\"text\">\n                        {{ loading }}\n                    </div>\n                </div>\n            </ng-container>\n            <div [class.hide]=\"loading\">\n                <ng-container *ngIf=\"!editing; else edit_form\">\n                    <schedule-event-details [event]=\"event\" (change)=\"onChange($event)\" (loading)=\"loading = $event\"></schedule-event-details>\n                </ng-container>\n                <ng-template #edit_form>\n                    <schedule-event-edit [event]=\"event\" (change)=\"onChange($event)\" (loading)=\"loading = $event\"></schedule-event-edit>\n                </ng-template>\n            </div>\n        </div>\n    </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from '../shared/base.directive';\nimport { ApplicationService } from '../services/app.service';\nimport { ApplicationLoadingState, LoadingState } from '../shared/utilities/types.utilities';\nimport { ApplicationIcon } from '../shared/utilities/settings.interfaces';\nimport { UsersService } from '../services/data/users/users.service';\n\n@Component({\n    selector: 'app-shell-wrapper',\n    templateUrl: './shell.component.html',\n    styleUrls: ['./shell.component.scss'],\n})\nexport class ShellWrapperComponent extends BaseDirective implements OnInit {\n    /** Loading state of the application */\n    public loading_state: ApplicationLoadingState;\n    /** Logo of the application organisation */\n    public logo: ApplicationIcon;\n\n    constructor(private _service: ApplicationService, private _users: UsersService) {\n        super();\n    }\n\n    /** Whether the user needs to login */\n    public get show_login(): boolean {\n        return !this._users.is_logged_in;\n    }\n\n    /** Whether a module is still loading data */\n    public get is_loading(): boolean {\n        if (this.loading_state) {\n            for (const mod in this.loading_state) {\n                if (this.loading_state[mod] && this.loading_state[mod].state === 'loading') {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    /** List of modules with a loading state */\n    public get loading_state_list(): LoadingState[] {\n        const list: LoadingState[] = [];\n        for (const mod in this.loading_state) {\n            if (this.loading_state[mod]) {\n                list.push(this.loading_state[mod]);\n            }\n        }\n        return list;\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'loading',\n            this._service.listen<ApplicationLoadingState>('loading', (loading) => {\n                this.loading_state = loading;\n            })\n        );\n        this._service.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.logo = this._service.setting('app.logo_light') || { type: 'icon' };\n        });\n    }\n}\n","\n<div class=\"shell\">\n    <div class=\"view\" *ngIf=\"!show_login\">\n        <router-outlet></router-outlet>\n    </div>\n    <div class=\"login-module\" *ngIf=\"show_login\">\n        <app-login></app-login>\n    </div>\n    <div class=\"loading-block\" *ngIf=\"is_loading\">\n        <div class=\"info-block\">\n            <div class=\"header\" [style.background-color]=\"logo?.background\">\n                <div class=\"logo\">\n                    <i *ngIf=\"logo?.type === 'icon'\" [class]=\"logo.class\">{{ logo.content }}</i>\n                    <img *ngIf=\"logo?.type === 'img'\" [src]=\"logo.src | safe:'resource'\" />\n                </div>\n            </div>\n            <div class=\"item\" *ngFor=\"let item of loading_state_list\">\n                <div class=\"message\">{{ item.message }}</div>\n                <div class=\"icon\">\n                    <ng-container [ngSwitch]=\"item.state\">\n                        <ng-container *ngSwitchCase=\"'complete'\">\n                            <i class=\"material-icons success\">done</i>\n                        </ng-container>\n                        <ng-container *ngSwitchCase=\"'failed'\">\n                            <i class=\"material-icons failure\">close</i>\n                        </ng-container>\n                        <ng-container *ngSwitchDefault>\n                            <mat-spinner diameter=\"16\"></mat-spinner>\n                        </ng-container>\n                    </ng-container>\n                </div>\n            </div>\n        </div>\n    </div>\n    <feedback></feedback>\n</div>\n","export const environment = {\n  production: true\n};\n","// IMPORTANT: THIS FILE IS AUTO GENERATED! DO NOT MANUALLY EDIT OR CHECKIN!\n/* tslint:disable */\nexport const VERSION = {\n    \"dirty\": false,\n    \"raw\": \"f74edea\",\n    \"hash\": \"f74edea\",\n    \"distance\": null,\n    \"tag\": null,\n    \"semver\": null,\n    \"suffix\": \"f74edea\",\n    \"semverString\": null,\n    \"version\": \"0.0.0\",\n    \"core_version\": \"1.0.0\",\n    \"time\": 1590388269134\n};\n/* tslint:enable */\n","\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}