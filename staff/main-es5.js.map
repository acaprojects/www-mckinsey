{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/overlays/booking-rules-modal/booking-rules-modal.component.ts","webpack:///src/app/overlays/booking-rules-modal/booking-rules-modal.template.html","webpack:///src/app/overlays/confirm-modal/confirm-modal.component.ts","webpack:///src/app/overlays/confirm-modal/confirm-modal.component.html","webpack:///src/app/overlays/meeting-details-overlay/catering/catering.component.ts","webpack:///src/app/overlays/meeting-details-overlay/catering/catering.component.html","webpack:///src/app/overlays/meeting-details-overlay/display/display.component.ts","webpack:///src/app/overlays/meeting-details-overlay/display/display.component.html","webpack:///src/app/overlays/meeting-details-overlay/meeting-details-overlay.component.ts","webpack:///src/app/overlays/meeting-details-overlay/meeting-details-overlay.template.html","webpack:///src/app/overlays/meeting-details-overlay/space/space.component.ts","webpack:///src/app/overlays/meeting-details-overlay/space/space.component.html","webpack:///src/app/overlays/new-user-modal/new-user-modal.component.ts","webpack:///src/app/overlays/new-user-modal/new-user-modal.component.html","webpack:///src/app/overlays/overlays.module.ts","webpack:///src/app/overlays/recurrence-modal/recurrence-modal.component.ts","webpack:///src/app/overlays/recurrence-modal/recurrence-modal.component.html","webpack:///src/app/overlays/space-select-modal/space-select-modal.component.ts","webpack:///src/app/overlays/space-select-modal/space-select-modal.component.html","webpack:///src/app/overlays/time-extension/time-extension.component.ts","webpack:///src/app/overlays/time-extension/time-extension.component.html","webpack:///src/app/overlays/view-room-modal/view-room-modal.component.ts","webpack:///src/app/overlays/view-room-modal/view-room-modal.component.html","webpack:///src/app/services/app.service.ts","webpack:///src/app/services/data/base-api.class.ts","webpack:///src/app/services/data/base.service.ts","webpack:///src/app/services/data/bookings/booking.class.ts","webpack:///src/app/services/data/bookings/booking.utilities.ts","webpack:///src/app/services/data/bookings/bookings.service.ts","webpack:///src/app/services/data/catering/catering-category.class.ts","webpack:///src/app/services/data/catering/catering-item.class.ts","webpack:///src/app/services/data/catering/catering-menu.service.ts","webpack:///src/app/services/data/catering/catering-order.class.ts","webpack:///src/app/services/data/location/location.class.ts","webpack:///src/app/services/data/organisation/building.class.ts","webpack:///src/app/services/data/organisation/level.class.ts","webpack:///src/app/services/data/organisation/organisation.class.ts","webpack:///src/app/services/data/organisation/organisation.service.ts","webpack:///src/app/services/data/service-manager.class.ts","webpack:///src/app/services/data/spaces/space.class.ts","webpack:///src/app/services/data/spaces/space.utilities.ts","webpack:///src/app/services/data/spaces/spaces.service.ts","webpack:///src/app/services/data/users/user.class.ts","webpack:///src/app/services/data/users/user.utilities.ts","webpack:///src/app/services/data/users/users.service.ts","webpack:///src/app/services/hotkeys.service.ts","webpack:///src/app/services/settings.service.ts","webpack:///src/app/shared/base.class.ts","webpack:///src/app/shared/base.directive.ts","webpack:///src/app/shared/components/alert-banner/alert-banner.component.ts","webpack:///src/app/shared/components/base-template.component.ts","webpack:///src/app/shared/components/custom-fields/action-field/action-field.component.ts","webpack:///src/app/shared/components/custom-fields/action-field/action-field.component.html","webpack:///src/app/shared/components/custom-fields/counter/counter.component.ts","webpack:///src/app/shared/components/custom-fields/counter/counter.component.html","webpack:///src/app/shared/components/custom-fields/date-field/date-field.component.ts","webpack:///src/app/shared/components/custom-fields/date-field/date-field.component.html","webpack:///src/app/shared/components/custom-fields/duration-field/duration-field.component.ts","webpack:///src/app/shared/components/custom-fields/duration-field/duration-field.component.html","webpack:///src/app/shared/components/custom-fields/time-field/time-field.component.ts","webpack:///src/app/shared/components/custom-fields/time-field/time-field.component.html","webpack:///src/app/shared/components/custom-fields/user-list-field/user-list-field.component.ts","webpack:///src/app/shared/components/custom-fields/user-list-field/user-list-field.component.html","webpack:///src/app/shared/components/custom-fields/user-search-field/user-search-field.component.ts","webpack:///src/app/shared/components/custom-fields/user-search-field/user-search-field.component.html","webpack:///src/app/shared/components/empty-card/informational-image.component.ts","webpack:///src/app/shared/components/footer-menu/footer-menu.component.ts","webpack:///src/app/shared/components/footer-menu/footer-menu.component.html","webpack:///src/app/shared/components/forms/booking-form/booking-form.component.ts","webpack:///src/app/shared/components/forms/booking-form/booking-form.component.html","webpack:///src/app/shared/components/forms/user-form/user-form.component.ts","webpack:///src/app/shared/components/forms/user-form/user-form.component.html","webpack:///src/app/shared/components/icon/icon.component.ts","webpack:///src/app/shared/components/icon/icon.component.html","webpack:///src/app/shared/components/login/login.component.ts","webpack:///src/app/shared/components/login/login.component.html","webpack:///src/app/shared/components/map-controls/map-controls.component.ts","webpack:///src/app/shared/components/map-controls/map-controls.component.html","webpack:///src/app/shared/components/overlay-menu/overlay-menu.component.ts","webpack:///src/app/shared/components/overlay-menu/overlay-menu.component.html","webpack:///src/app/shared/components/popout-menu/popout-menu.component.ts","webpack:///src/app/shared/components/popout-menu/popout-menu.component.html","webpack:///src/app/shared/components/searchbar/searchbar.component.ts","webpack:///src/app/shared/components/searchbar/searchbar.component.html","webpack:///src/app/shared/components/topbar-header/topbar-header.component.ts","webpack:///src/app/shared/components/user-avatar/user-avatar.component.ts","webpack:///src/app/shared/components/user-avatar/user-avatar.component.html","webpack:///src/app/shared/globals/angular-animations.ts","webpack:///src/app/shared/mocks/api/bookings.mock.ts","webpack:///src/app/shared/mocks/api/buildings.mock.ts","webpack:///src/app/shared/mocks/api/catering-menu.mock.ts","webpack:///src/app/shared/mocks/api/common.mock.ts","webpack:///src/app/shared/mocks/api/locations.mock.ts","webpack:///src/app/shared/mocks/api/organisation.mock.ts","webpack:///src/app/shared/mocks/api/spaces.mock.ts","webpack:///src/app/shared/mocks/api/users.mock.ts","webpack:///src/app/shared/mocks/index.ts","webpack:///src/app/shared/mocks/systems.mock.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/shared/utilities/api.utilities.ts","webpack:///src/app/shared/utilities/formatting.utilities.ts","webpack:///src/app/shared/utilities/general.utilities.ts","webpack:///src/app/shared/utilities/spec-helpers.ts","webpack:///src/app/shared/utilities/urls.ts","webpack:///src/app/shared/utilities/validation.utilities.ts","webpack:///src/app/shell/bookings/bookings.component.ts","webpack:///src/app/shell/bookings/bookings.component.html","webpack:///src/app/shell/bookings/bookings.module.ts","webpack:///src/app/shell/bookings/overlays/booking-confirm/booking-confirm.component.ts","webpack:///src/app/shell/bookings/overlays/booking-confirm/booking-confirm.component.html","webpack:///src/app/shell/bookings/overlays/catering-confirm-modal/catering-confirm-modal.component.ts","webpack:///src/app/shell/bookings/overlays/catering-confirm-modal/catering-confirm-modal.component.html","webpack:///src/app/shell/bookings/overlays/catering-details-modal/catering-details-modal.component.ts","webpack:///src/app/shell/bookings/overlays/catering-details-modal/catering-details-modal.component.html","webpack:///src/app/shell/bookings/overlays/package-options-modal/package-options-modal.component.ts","webpack:///src/app/shell/bookings/overlays/package-options-modal/package-options-modal.component.html","webpack:///src/app/shell/bookings/overlays/recurrence-spaces-modal/recurrence-spaces-modal.component.ts","webpack:///src/app/shell/bookings/overlays/recurrence-spaces-modal/recurrence-spaces-modal.component.html","webpack:///src/app/shell/bookings/overlays/requirement-details-modal/requirement-details-modal.component.ts","webpack:///src/app/shell/bookings/overlays/requirement-details-modal/requirement-details-modal.component.html","webpack:///src/app/shell/bookings/space-flow/catering/catering.component.ts","webpack:///src/app/shell/bookings/space-flow/catering/catering.component.html","webpack:///src/app/shell/bookings/space-flow/catering/order-details/category/category.component.ts","webpack:///src/app/shell/bookings/space-flow/catering/order-details/category/category.component.html","webpack:///src/app/shell/bookings/space-flow/catering/order-details/item/item.component.ts","webpack:///src/app/shell/bookings/space-flow/catering/order-details/item/item.component.html","webpack:///src/app/shell/bookings/space-flow/catering/order-details/order-details.component.ts","webpack:///src/app/shell/bookings/space-flow/catering/order-details/order-details.component.html","webpack:///src/app/shell/bookings/space-flow/catering/order-list/item/item.component.ts","webpack:///src/app/shell/bookings/space-flow/catering/order-list/item/item.component.html","webpack:///src/app/shell/bookings/space-flow/catering/order-list/order-list.component.ts","webpack:///src/app/shell/bookings/space-flow/catering/order-list/order-list.component.html","webpack:///src/app/shell/bookings/space-flow/find-space/filters/filters.component.ts","webpack:///src/app/shell/bookings/space-flow/find-space/filters/filters.component.html","webpack:///src/app/shell/bookings/space-flow/find-space/find-space.component.ts","webpack:///src/app/shell/bookings/space-flow/find-space/find-space.component.html","webpack:///src/app/shell/bookings/space-flow/find-space/item/item.component.ts","webpack:///src/app/shell/bookings/space-flow/find-space/item/item.component.html","webpack:///src/app/shell/bookings/space-flow/form/form.component.ts","webpack:///src/app/shell/bookings/space-flow/form/form.component.html","webpack:///src/app/shell/bookings/space-flow/space-flow.component.ts","webpack:///src/app/shell/bookings/space-flow/space-flow.component.html","webpack:///src/app/shell/explore/explore.component.ts","webpack:///src/app/shell/explore/explore.component.html","webpack:///src/app/shell/explore/explore.module.ts","webpack:///src/app/shell/explore/map-legend/map-legend.component.ts","webpack:///src/app/shell/explore/map-legend/map-legend.component.html","webpack:///src/app/shell/explore/map-view/map-view.component.ts","webpack:///src/app/shell/explore/map-view/map-view.component.html","webpack:///src/app/shell/explore/overlays/booking-modal/booking-modal.component.ts","webpack:///src/app/shell/explore/overlays/booking-modal/booking-modal.component.html","webpack:///src/app/shell/explore/overlays/space-info/space-info.component.ts","webpack:///src/app/shell/explore/overlays/space-info/space-info.component.html","webpack:///src/app/shell/explore/search/search.component.ts","webpack:///src/app/shell/explore/search/search.component.html","webpack:///src/app/shell/explore/status-managers/desk-status.component.ts","webpack:///src/app/shell/explore/status-managers/space-status.component.ts","webpack:///src/app/shell/explore/timeline/timeline.component.ts","webpack:///src/app/shell/explore/timeline/timeline.component.html","webpack:///src/app/shell/explore/zoom-controls/zoom-controls.component.ts","webpack:///src/app/shell/explore/zoom-controls/zoom-controls.component.html","webpack:///src/app/shell/home/home.component.ts","webpack:///src/app/shell/home/home.component.html","webpack:///src/app/shell/schedule/event-list/event-list.component.ts","webpack:///src/app/shell/schedule/event-list/event-list.component.html","webpack:///src/app/shell/schedule/event-list/list-item/list-item.component.ts","webpack:///src/app/shell/schedule/event-list/list-item/list-item.component.html","webpack:///src/app/shell/schedule/schedule.component.ts","webpack:///src/app/shell/schedule/schedule.template.html","webpack:///src/app/shell/schedule/schedule.module.ts","webpack:///src/app/shell/schedule/schedule.routes.ts","webpack:///src/app/shell/schedule/view-event/event-details/event-details.component.ts","webpack:///src/app/shell/schedule/view-event/event-details/event-details.component.html","webpack:///src/app/shell/schedule/view-event/event-edit/event-edit.component.ts","webpack:///src/app/shell/schedule/view-event/event-edit/event-edit.component.html","webpack:///src/app/shell/schedule/view-event/view-event.component.ts","webpack:///src/app/shell/schedule/view-event/view-event.component.html","webpack:///src/app/shell/shell.component.ts","webpack:///src/app/shell/shell.component.html","webpack:///src/environments/environment.ts","webpack:///src/environments/settings.ts","webpack:///src/environments/version.ts","webpack:///src/hmr.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","ShellWrapperComponent","children","HomeComponent","loadChildren","m","BookingsModule","ExploreModule","ScheduleModule","redirectTo","AppRoutingModule","RouterModule","forRoot","useHash","NgModule","imports","AppComponent","_app","_org","_spaces","_bookings","detectIE","location","href","origin","pathname","Component","selector","templateUrl","styleUrls","encapsulation","ViewEncapsulation","None","AppModule","provide","MAT_LABEL_GLOBAL_OPTIONS","useValue","BrowserModule","BrowserAnimationsModule","ServiceWorkerModule","register","enabled","environment","production","HttpClientModule","FormsModule","ComposerModule","SharedOverlaysModule","SharedContentModule","declarations","providers","bootstrap","BookingRulesModalComponent","_data","event","EventEmitter","interval","_content_el","nativeElement","scrollTop","timeout","clearInterval","building","name","details","booking_details","rules","info","custom_html","map_rules","other_rules","Object","reduce","a","v","push","title","contact","link","BaseDirective","MAT_DIALOG_DATA","Inject","Output","ViewChild","CONFIRM_METADATA","height","width","maxHeight","maxWidth","ConfirmModalComponent","_dialog","emit","reason","content","action","icon","MeetingDetailsCateringComponent","catering","filter","order","location_id","space","email","bld","buildings","find","zones","includes","currency","the_note","booking","notes","note","type","message","orders","length","charge_code","Input","MeetingDetailsDisplayComponent","_users","on_event","last_start","the_space","open","ViewRoomModalComponent","data","date","dayjs","end","add","duration","all_day","format","isSame","humaniseDuration","space_list","attendees","i","organiser","current","creator","formatRecurrence","recurrence","user","status","body","now","isBefore","subtract","attendee_statuses","approval_status","spaces","MeetingDetailsOverlayComponent","_dialog_ref","_service","_router","metadata","can_delete","as_delegate","ref","date_string","has_recurrence","subscription","componentInstance","subscribe","deleteMeeting","close","unsub","deleteSeries","new_booking","Booking","toJSON","icaluid","navigate","localStorage","setItem","JSON","stringify","loading","TimeExtensionModalComponent","afterClosed","form","generateBookingForm","RequirementDetailsModalComponent","controls","value","notes_field","codes_field","equipment_codes","head_counts_field","expected_attendees","updated_booking","room_ids","map","save","err","notifyError","editMeeting","params","host_email","user_email","delegate","room_id","start","Math","floor","method","decline","notifySuccess","series_id","is_last","is_first","period","delegates","isAfter","MeetingDetailsSpaceComponent","space_notes","NewUserModalComponent","User","generateUserForm","markAllAsTouched","valid","setValue","random","new_user","first_name","last_name","OVERLAYS","BookingConfirmComponent","RecurrenceModalComponent","CommonModule","ReactiveFormsModule","LibraryModule","SpaceSelectModalComponent","RECURRENCE_METADATA","periods","disableClose","end_date","endOf","startOf","FormGroup","FormControl","valueOf","Validators","required","search$","Subject","selected_spaces","request_map","types","loadHost","concat","search_results$","pipe","debounceTime","distinctUntilChanged","switchMap","_","zone_ids","active_building","available","join","catchError","of","list","selected","rulesFor","host","hide","active_type","_space","sort","b","update","level","building_id","space_types","next","unique","a_space","options","forEach","byRequest","show","multiple","MAX_EXTENSION","durations","checkAvailability","extension","notifyInfo","room","ignore","hide_bookings","extended","block","features","focus_feature","map_id","coordinates","MapPinComponent","back","fore","ApplicationService","_app_ref","_zone","_title","_cache","_settings","_hotkeys","_composer","_snackbar","_analytics","_subjects","_observers","set","isStable","first","run","log","setupCache","waitForSettings","key","get","on_action","snackbar_ref","panelClass","afterDismissed","dismiss","onAction","msg","console","debug","notify","error","warn","args","stream","force","BehaviorSubject","getValue","asObservable","initialised","init","setupComposer","_initialised","window","application","composer","state","settings","protocol","domain","hostname","port","url","use_domain","route","mock","getItem","config","scope","auth_uri","token_uri","redirect_uri","handle_login","local_login","setup","isEnabled","hash","activateUpdate","activated","reload","setInterval","checkForUpdate","bindings","title_suffix","setting","setTitle","getTitle","auth","api_endpoint","is_initialised","BaseClass","Injectable","providedIn","BaseDataClass","raw_data","event_subject","events","_server_names","zone_id","toLowerCase","reject","promise","d","task_name","parameters","task","obj","_changes","_timers","_intervals","_subscriptions","new_key","substr","undefined","ServiceManager","serviceFor","BaseAPIService","_subscribers","_promises","_compare","_list_filter","_name","_api_route","load","engine","endpoint","predicate","query_params","update_list","cache","query","toQueryString","result","http","Array","process","results","new_item","updateList","form_data","post","analyticsEvent","post_data","_task","request","put","removeItem","q","label","raw_item","old_list","compareFn","new_list","mixed_list","item","found","time_changed","_display","subject","time","start_epoch","Start","minute","ceil","end_epoch","End","diff","description","booking_type","visitors","_attendees","organizer","active_user","booked_by","location_name","breakdown","recurr","Date","getTime","seriesMasterId","equipment_code","checked_in","checkins","notify_users","author","space_ids","_space_list","space_service","Space","show_as","CateringOrder","has_catering","unix","auto_approve","indexOf","mergeCateringOrders","old_date","from_room","display","declined","tentative","external","order_list","delivery_time","items","flatten","MINUTE","HOUR","DAY","WEEK","MONTH","DURATION_MAP","month","months","week","weeks","day","days","hour","hours","minutes","initialTime","mockDate","BOOKING_COUNT","BOOKING_DATE","setMockBookingStartDatetime","getFreeBookingSlots","min_size","slots","bkn_start","bkn_end","abs","getNextFreeBookingSlot","second","use_fields","user_service","current_user","fields","booking_date","needs_space","setValidators","validateEndTime","disable","isFuture","updateValueAndValidity","list_length","valueChanges","expected","matches","codes","new_expected","new_codes","space_needed","simplified_fields","handleAllDay","enable","control","rulesForSpace","space_rules_for_user","match","hasOwnProperty","zone","rule_block","checkRules","recurr_end","conditions","ruleset","max_length","stringToMinutes","min_length","count","counter","condition","groups","j","last_location","check","durationGreaterThanOrEqual","getMinLength","rule_list","values","min","min_block","el","duration_1","duration_2","str","parts","split","statusFromBookings","bookings","bookable","requestable","free_slots","bkn","next_free_slot","slot","currently_free","time_until_next_block","free_tomorrow","free_today","available_until","timeFormatString","timePeriodsIntersect","start1","end1","start2","end2","BookingsService","setService","localeCompare","CateringCategory","is_category","must_select","order_anytime","CateringItem","_amount","instance_id","parent_categories","from_month","available_from","to_month","available_to","prior_notice","notice","unit_price","price","supplier_cost","minimum_quantity","max","maximum_quantity","category_ids","categories","image_path","catering_type","amount","allergy","cateringItems","filteredCateringItems","c","out_of_stock","availableItems","anytime","can_order_anytime","CateringMenuService","kitchen","pantry","symbol","with_changes","total","MapLocation","desk_id","x","normalise","x_max","y","service","Organisation","BuildingLevel","levelWithID","fixed","confidence","at_desk","empty","Building","disc_info","discovery_info","extras","extra_id","extra_name","loan_items","levels","_roles","roles","_lockers","lockers","locker_structure","_systems","systems","_phone_numbers","phone_numbers","_location","longitude","latitude","catering_hours","searchables","neighbourhoods","lvl","lvl_features","feature","level_id","address","booking_rules","catering_restricted_from","requires_equipment_code","requires_expected_attendees","timezone","holding_bay","visitor_space","sort_order","getItemWithKeys","bld_id","level_name","lower_name","num","replace","toUpperCase","short_name","map_url","floor_type","available_buildings","OrganisationService","_organisation","ids","bld_list","_active_building","organisation","loadOrganisation","loadBuildings","loadLevels","loadSpaceTypes","tags","org_data","limit","bld_data","lvl_data","type_data","_service_list","index","findIndex","provider","provideFor","splice","OPTION_DEFAULTS","long_name","book_type","can_search","searchable","can_control","controlable","hourly_rate","cost_hour","capacity","recurr_available","occurence","was_available","support_url","image","raw_bookings","_extras","linked_spaces","linked_rooms","bookingsFor","availabilityOptionsToQuery","blds","bld_b","reverse","a_has_zone","b_has_zone","SpacesService","respond","available_spaces","linked","_desk_bookings","windows_id","visitor","phone","mobile","business_unit","department","organisation_id","organisation_name","staff_code","fmno","officeLocation","desk","l","UsersService","uhttp","token","expiry","client_id","Md5","hashStr","sessionStorage","go","tries","locate","loadDelegates","promises","all","INVALID_STANDALONE_KEYS","HotkeysService","keydown_states","keydown_observers","combo_end","registered_combos","addEventListener","mapKey","last_down","preventDefault","combo","combination","validCombination","last_key","updateCombinationEndList","presses","key_list","non_meta","SettingsService","_app_name","_overrides","_observables","VERSION","built","isSameDay","semver","DEFAULT_SETTINGS","override_settings","override","slice","clearTimeout","fn","delay","Function","setTimeout","Subscription","unsubscribe","destroy","Directive","AlertMode","AlertBannerComponent","mode","Warning","Coachmark","template","BaseTemplateComponent","vcRef","isRendered","attemptViewEmbed","createEmbeddedView","TemplateRef","ActionFieldComponent","show_tooltip","performAction","CounterComponent","step","useInput","previous_value","ctrl_key","shift_key","new_value","Number","isNaN","_onChange","_onTouch","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","remove","DateFieldComponent","_from","position","offset","new_date","from","disabled","_trigger","closeMenu","openMenu","_to","menuOpen","MatMenuTrigger","openDatePicker","$event","stopPropagation","closeDatePicker","DurationFieldComponent","specialPreprops","duration_options","generateDurationOptions","changes","blocks","option","TimeFieldComponent","no_past_times","show_select","_time_options","generateAvailableTimes","select_field","focus","openedChange","datestamp","show_past","showSelect","UserListFieldComponent","filterList","search_str","user_list","match_name","matchToHighlight","match_email","active_list","a_user","target","file","files","reader","FileReader","readAsText","evt","processCsvData","srcElement","csvToJson","addUser","downloadFile","addUsersFromFile","downloadCSVTemplate","UserSearchFieldComponent","resetSearchString","src","InformationalImageComponent","FooterMenuComponent","tiles","BookingFormComponent","from_date","UserFormComponent","IconComponent","LoginComponent","username","password","logo","login","setErrors","MapControlsComponent","_route","levelChange","building_details","building_list","level_list","listen","queryParamMap","has","setBuilding","updateLevel","lvl_id","relativeTo","queryParams","OverlayMenuComponent","showChange","copyright","year","delayedClose","cancelClose","PopoutMenuComponent","actions","SearchbarComponent","valueChange","autofocus","focusField","input_field","TopbarHeaderComponent","router","menuChange","updateRoute","document","NavigationEnd","currentPage","menu","closeAll","Urls","Help","generateFeedbackUrl","goToHome","goToHelp","UserAvatarComponent","ANIMATION_SHOW_ENTER_LEAVE","trigger","transition","style","opacity","animate","ANIMATION_SHOW_CONTRACT_EXPAND","handlers","MOCK_BOOKINGS","fill","rooms","predictableRandomInt","MOCK_SPACES","MOCK_USERS","generateMockBooking","API","callback","route_params","MOCK_BUILDINGS","DOMAIN","is_before","number","MOCK_ORG","MOCK_MENU","menu_zone","MOCK_LOCATIONS","lvls","generateMockLocation","send_acceptance","space_data","generateMockSpace","Bookings","today","generateMockUser","MOCK_CONTACTS","PREDEFINED_USERS","faker","seed","createSystem","LETTERS","NUMBERS","SPACE_LIST","IMAGES","booking_bindings","touch_enabled","cancel_timeout","control_url","desk_bindings","system","DeskManagement","DeskBookings","room_name","$start_meeting","last_meeting_started","$cancel_meeting","$waiter_call","$book","$check_in","$check_out","COMPONENTS","ENTRY_COMPONENT","MATERIAL_MODULES","MatButtonModule","MatSnackBarModule","MatDialogModule","MatFormFieldModule","MatInputModule","MatProgressSpinnerModule","MatProgressBarModule","MatAutocompleteModule","MatSelectModule","MatChipsModule","MatRippleModule","MatMenuModule","MatCheckboxModule","MatTooltipModule","MatRadioModule","MatTabsModule","CDK_MODULES","ScrollingModule","APipesModule","AInteractiveMapModule","ADatePickerModule","ACustomEventsModule","EditorModule","formatAttendeesWithHost","formatAttendees","attendee_str","users","formatDate","formatTime","formatPeriodWithDuration","t","formatPeriod","timestamp","formatDuration","RECURRENCE_PERIODS","formatSpaces","app_name","colors","shift","isMobileDevice","r","navigator","userAgent","isMobileSafari","agent","isAndroidChrome","padZero","toString","array","pos","arr","short","h","filters","f","word","regex","RegExp","item_list","parse","match_count","match_index","field_list","matched","field","changed","tokens","k","timeToDate","randomInt","is24HourTime","localeString","toLocaleTimeString","querySelector","getAttribute","language","filename","contents","element","createElement","setAttribute","encodeURIComponent","appendChild","click","removeChild","csv","lines","line","part","jsonToCsv","json","valid_keys","ua","msie","parseInt","substring","trident","rv","edge","eventToPoint","MouseEvent","clientX","clientY","touches","an_array","stack","res","pop","isArray","xmur3","rand","sfc32","imul","charCodeAt","SERVICE","generateMockAppService","jest","notifyWarn","navigateBack","Composer","Hotkeys","Users","generateMockDataService","generateMockBuilding","Locations","Base","Menu","Spaces","Reports","CateringItems","CateringCategories","booking_list","mockReturnValue","addFrom","removeFrom","clearList","removeFromList","accept","checkin","is_logged_in","mockImplementation","SPACE_COUNT","overrides","firstName","lastName","USER_DOMAIN","commerce","productName","business","lorem","paragraph","city","BLD_COUNT","LVL_COUNT","generateMockLevel","test","nested","level2","org","USER_COUNT","USER_EMAILS","company","companyName","delegate_count","phoneNumber","avatar","fixed_locations","maps","ORG_COUNT","generateMockOrganisation","page","Feedback","HAS_ERROR","validateDate","is_from","buildValidateStartTime","validateStartTime","date_obj","buildValidateDuration","validateDuration","buildValidateAttendees","validateAttendees","invalid","date_control","end_time","BookingsComponent","paramMap","flow","NavigationStart","ROUTES","forChild","BookingSpaceFlowComponent","BookingSpaceFlowFormComponent","BookingFindSpaceComponent","BookingSpaceItemComponent","BookingSpaceFiltersComponent","BookingCateringComponent","BookingCateringOrderListComponent","BookingCateringOrderDetailsComponent","CateringOrderListItemComponent","CateringMenuCategoryComponent","BookingCateringConfirmModalComponent","CateringMenuItemComponent","PackageOptionsModalComponent","CateringDetailsModalComponent","RecurrenceSpacesModalComponent","old_booking","is_request","checkSpaceAvailability","success","date_value","duration_value","head_counts","needs_charge_code","active_space","note_list","generateFormFields","is_valid","new_notes","_scrollToBottom","minLength","scrollTo","top","scrollHeight","left","behavior","active_form","errors","minlength","submit","checkItemRequirements","category","getActiveItems","a_package","needed","active","an_item","setAmount","occurrences","space_details","conflicts","updateOccurrences","replaced_by","occurrence","unshift","replaces","head_count","active_order","an_order","hasSelectionRequirements","getActiveList","updatePackageSelection","selectPackageOptions","confirmed_item","cart_item","active_items","done","a_list","animations","_menu","category_list","available_times","matched_items","search","group","initForm","_input_el","show_search","loadMenu","within_restricted_time","start_date","generateStartAndEndTimes","building_time","space_email","toDate","as_dayjs","possible_end","has_available_items","out_of_hours","form_controls","expired","confirmOrder","edit","previous","locations","locationsChange","loadLocations","storeLocations","is_today","BannerMode","change$","hasLoaded","bannerMode","request_id","recurrence_properties","recurr_period","resp","rulesCount","OfficeRules","SearchFilters","onChange","take","OfficeContacts","select","conflict_list","ocurrence","can_return","container","scrollIntoView","inline","resetForm","flow_step","loadFormData","toNextFlowStep","toPreviousFlowStep","multiple_spaces","openEquipmentDetailsModal","confirmBooking","openCateringDetailsModal","markAsDirty","queryParamsHandling","form_string","available_fields","saveFormData","dialog_ref","show_fields","ExploreComponent","MapViewComponent","ExploreSpaceStatusComponent","ExploreDeskStatusComponent","ZoomControlsComponent","ExploreSpaceInfoComponent","ExploreSearchComponent","ExploreMapLegendComponent","ExploreTimelineComponent","ExploreBookingModalComponent","legend_items","colours","show_legend","explore_settings","legend","show_group_names","show_legend_group_names","center","style_map","listeners","status_map","listener_map","feature_map","active_level","processFeatures","loadSpaceLocation","loadUserLocation","styles","desks","space_id","text","zoom","MapRadiusComponent","diameter","processStatuses","processListeners","is_now","updateRequirements","makeBooking","resolved","_position","processBookings","MAP_OVERLAY_DATA","MAP_LOCATION","result_list","_showing_option","occupied","free","colour_map","loadDesks","desk_list","id_list","status_list","in_use","reserved","stroke","status_id","desk_management","system_id","active_bookings","loadSpaces","updateSpaceBookings","calculateStatus","clearSpaces","statuses","getStatus","datetime","bkn_data","to","show_declined","processSpaceBookings","showSpaceInfo","openBookingModal","BLOCK_SIZE","MINUTES_IN_DAY","_renderer","dateChange","generateBlocks","checkDate","current_time","is_hour","_start_position","_box","_container","getBoundingClientRect","onMove","y_change","time_change","round","changeDate","startMove","zoomChange","positionChange","min_zoom","max_zoom","zoomIn","zoomOut","reset","showBanner","LearnMore","ScheduleEventListComponent","event_list","shown_offset","date_offset","at_top","updateEvents","scroll_viewport","elementScrolled","onScroll","event_promise","old_events","processEvents","date_str","date_events","order_id","filter_fn","new_items","old_items","show_calendar","range","getRenderedRange","dist","nearest","measureScrollOffset","scroll_to","date_picker_open","scrollToIndex","CdkVirtualScrollViewport","preventClickthrough","updateDate","ScheduleEventListItemComponent","viewing","deleted","hasBackdrop","closeOnNavigation","has_visitors","approved","ScheduleComponent","show_menu","loadEvents","saveEvents","ScheduleViewEventComponent","EventDetailsComponent","EventEditComponent","change","duplicate","previousValue","dirty","nextBooking","previousBooking","loadEvent","editing","loading_state","mod","hmr","general","home","background","help","columns","booking_types","html_body","desk_start","space_display","show_images","directory","show_avatars","min_search_length","explore","can_select_building","show_timeline","General","app","logo_light","logo_dark","heap_io","app_id","force_ssl","secure_cookie","disable_text_capture","cookie_path","hmrBootstrap","ngModule","hot","dispose","appRef","injector","ApplicationRef","elements","components","makeVisible","createNewHosts","enableProdMode","platformBrowser","bootstrapModule"],"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ShellWrapperComponent } from './shell/shell.component';\nimport { HomeComponent } from './shell/home/home.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ShellWrapperComponent,\n        children: [\n            { path: 'home', component: HomeComponent },\n            {\n                path: 'book',\n                loadChildren: () =>\n                    import('./shell/bookings/bookings.module').then(m => m.BookingsModule)\n            },\n            {\n                path: 'explore',\n                loadChildren: () =>\n                    import('./shell/explore/explore.module').then(m => m.ExploreModule)\n            },\n            // {\n            //     path: 'control',\n            //     loadChildren: () =>\n            //         import('./shell/control/control.module').then(m => m.ControlModule)\n            // },\n            // {\n            //     path: 'directory',\n            //     loadChildren: () =>\n            //         import('./shell/directory/directory.module').then(m => m.DirectoryModule)\n            // },\n            {\n                path: 'schedule',\n                loadChildren: () =>\n                    import('./shell/schedule/schedule.module').then(m => m.ScheduleModule)\n            },\n            // {\n            //     path: 'help',\n            //     loadChildren: () => import('./shell/help/help.module').then(m => m.HelpModule)\n            // },\n            { path: '**', redirectTo: 'home' }\n        ]\n    },\n    { path: '**', redirectTo: 'home' }\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, { useHash: true })],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { detectIE } from './shared/utilities/general.utilities';\nimport { ApplicationService } from './services/app.service';\nimport { OrganisationService } from './services/data/organisation/organisation.service';\nimport { SpacesService } from './services/data/spaces/spaces.service';\nimport { BookingsService } from './services/data/bookings/bookings.service';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: [\n        './styles/app.component.scss',\n        './styles/custom-element.styles.scss',\n        './styles/native-element.styles.scss',\n    ],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class AppComponent {\n    constructor(\n        private _app: ApplicationService,\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _bookings: BookingsService\n    ) {\n        if (detectIE() && detectIE() < 12) {\n            location.href = `${location.origin}${location.pathname}assets/not-supported.html`;\n            return;\n        }\n    }\n}\n","<div class=\"app\">\n    <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { MAT_LABEL_GLOBAL_OPTIONS } from '@angular/material/core';\n\nimport './shared/mocks';\n\nimport { ComposerModule } from '@placeos/composer';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\n\nimport { SharedOverlaysModule } from './overlays/overlays.module';\nimport { SharedContentModule } from './shared/shared.module';\n\nimport { ShellWrapperComponent } from './shell/shell.component';\nimport { HomeComponent } from './shell/home/home.component';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        ShellWrapperComponent,\n        HomeComponent,\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        AppRoutingModule,\n        ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production }),\n        HttpClientModule,\n        FormsModule,\n        ComposerModule,\n        SharedOverlaysModule,\n        SharedContentModule\n    ],\n    providers: [\n        { provide: MAT_LABEL_GLOBAL_OPTIONS, useValue: {float: 'nevet'} }\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, ElementRef, EventEmitter, Inject, Output, ViewChild } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { DialogEvent, HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { BookingRuleDetails, Building } from 'src/app/services/data/organisation/building.class';\n\n\nexport interface BookingRulesModalData {\n    building: Building;\n}\n\n@Component({\n    selector: 'booking-rules-modal',\n    templateUrl: './booking-rules-modal.template.html',\n    styleUrls: ['./booking-rules-modal.styles.scss'],\n})\nexport class BookingRulesModalComponent extends BaseDirective {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    @ViewChild('content', { static: true }) private _content_el: ElementRef<HTMLElement>;\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: BookingRulesModalData) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.interval('scroll', () => {\n            if (this._content_el) this._content_el.nativeElement.scrollTop = 0;\n        }, 10);\n        this.timeout('scroll', () => this.clearInterval('scroll'), 201);\n    }\n\n    /** Name of the set building */\n    public get location(): string {\n        const building: Building = this._data.building;\n        return building.name || '';\n    }\n\n    /** Booking rule details */\n    public get rules(): string[] {\n        const building: Building = this._data.building;\n        const details: BookingRuleDetails = building.booking_details;\n        return details.rules || [] as any;\n    }\n\n    /** Booking rule details */\n    public get info(): string {\n        const building: Building = this._data.building;\n        const details: BookingRuleDetails = building.booking_details;\n        return details.info || '';\n    }\n\n    public get customHtml(): string | undefined {\n        const building: Building = this._data.building;\n        const details: BookingRuleDetails = building.booking_details;\n        return details.custom_html;\n    }\n\n    /** Booking map rule details */\n    public get map_rules(): string[] {\n        const building: Building = this._data.building;\n        const details: BookingRuleDetails = building.booking_details;\n        return details.map_rules || [] as any;\n    }\n\n    /** Other special booking rules */\n    public get other_rules(): { title: string, rules: string[] }[] {\n        const building: Building = this._data.building;\n        const details: BookingRuleDetails = building.booking_details;\n        const rules: HashMap = (details as any).other_rules || {};\n        return Object.keys(rules).reduce((a, v) => {\n            a.push({ title: v, rules: rules[v] || [] });\n            return a;\n        }, []);\n    }\n\n    public get contact(): string {\n        const building: Building = this._data.building;\n        const details: BookingRuleDetails = building.booking_details;\n        return details.contact || '';\n    }\n\n    public get link(): { url?: string, name?: string } {\n        const building: Building = this._data.building;\n        const details: BookingRuleDetails = building.booking_details;\n        return details.link || {};\n    }\n}\n","<mat-dialog-content #content>\n    <main>\n        <div class=\"header\">Booking in {{location}}</div>\n        <div class=\"info\">{{ info || 'You may request restricted rooms but they will need to be approved by an admin' }}</div>\n        <div class=\"rules\" *ngIf=\"!customHtml\">\n            <ul>\n                <li *ngFor=\"let item of rules\" [innerHTML]=\"item | safe\"></li>\n            </ul>\n            <ng-container *ngIf=\"other_rules\">\n                <ng-container *ngFor=\"let ruleset of other_rules\">\n                    {{ ruleset.title }}\n                    <ul>\n                        <li *ngFor=\"let item of ruleset.rules\" [innerHTML]=\"item | safe\"></li>\n                    </ul>\n                </ng-container>\n            </ng-container>\n            <ng-container>\n                When booking from Maps:\n                <ul *ngIf=\"!map_rules || map_rules.length <= 0; else rules_list\">\n                    <li>Rooms showing yellow are restricted and must be requested</li>\n                    <li>Rooms showing green are available to book for one hour</li>\n                    <li>Rooms showing red are booked</li>\n                    <li>Rooms showing grey are not bookable but may be used if they are empty</li>\n                </ul>\n                <ng-template #rules_list>\n                    <ul>\n                        <li *ngFor=\"let item of map_rules\">{{item}}</li>\n                    </ul>\n                </ng-template>\n            </ng-container>\n        </div>\n        <div class=\"rules\" *ngIf=\"customHtml\" [innerHTML]=\"customHtml | safe\">\n        </div>\n        <div class=\"contact\" *ngIf=\"contact\">\n            For more info email:<br><a [href]=\"'mailto:' + contact + '?subject=' + location + ' Booking Rules'\">{{contact}}</a>\n        </div>\n        <div class=\"contact\" *ngIf=\"link.url\">\n            <a [href]=\"link.url | safe:'url'\">{{link.name}}</a>\n        </div>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button mat-dialog-close>Ok</button>\n    </footer>\n</mat-dialog-actions>\n\n","import { Component, Output, EventEmitter, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { ApplicationIcon } from '../../shared/utilities/settings.interfaces';\nimport { DialogEvent } from '../../shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\nexport interface ConfirmModalData {\n    /** Title of the modal */\n    title: string;\n    /** Contents of the modal */\n    content: string;\n    /** Text displaed on the confirmation button */\n    action?: string;\n    /** Icon to display on the modal */\n    icon: ApplicationIcon;\n}\n\nexport const CONFIRM_METADATA = {\n    height: 'auto',\n    width: '24em',\n    maxHeight: 'calc(100vh - 2em)',\n    maxWidth: 'calc(100vw - 2em)'\n};\n\n@Component({\n    selector: 'confirm-modal',\n    templateUrl: './confirm-modal.component.html',\n    styleUrls: ['./confirm-modal.component.scss']\n})\nexport class ConfirmModalComponent extends BaseDirective {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Loading state */\n    public loading: string;\n\n    /** Title of the confirm modal */\n    public get title(): string {\n        return (this._data ? this._data.title : null) || 'Confirm';\n    }\n\n    /** Body of the confirm modal */\n    public get content(): string {\n        return (this._data ? this._data.content : null) || 'Are you sure?';\n    }\n\n    /** Display text on the confirm button */\n    public get action(): string {\n        return (this._data ? this._data.action : null) || 'Ok';\n    }\n\n    /** Display icon properties */\n    public get icon(): ApplicationIcon {\n        return (this._data ? this._data.icon : null) || null;\n    }\n\n    constructor(\n        private _dialog: MatDialogRef<ConfirmModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: ConfirmModalData\n    ) {\n        super();\n    }\n    /**\n     * User confirmation of the content of the modal\n     */\n    public accept() {\n        this.event.emit({ reason: 'done' });\n    }\n}\n","<header>\n    <h3 mat-dialog-title>{{ title || 'Confirm' }}</h3>\n</header>\n<mat-dialog-content>\n    <div class=\"body\" *ngIf=\"!loading; else load_state\">\n        <app-icon *ngIf=\"icon\" [icon]=\"icon\"></app-icon>\n        <div class=\"content\">\n            <p [innerHTML]=\"content || 'Are you sure?'\"></p>\n        </div>\n    </div>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading\">\n    <footer>\n        <button mat-button class=\"inverse\" mat-dialog-close i18n=\"Close confirm modal\">Cancel</button>\n        <button mat-button name=\"accept\" (click)=\"accept()\">{{ action || 'Ok' }}</button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </div>\n</ng-template>\n","import { Component, Input } from '@angular/core';\n\nimport { CateringOrder } from '../../../services/data/catering/catering-order.class';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\n@Component({\n    selector: 'meeting-details-catering',\n    templateUrl: './catering.component.html',\n    styleUrls: ['./catering.component.scss'],\n})\nexport class MeetingDetailsCateringComponent {\n    /** List of catering orders */\n    @Input() public catering: CateringOrder[];\n    /** Active space to display */\n    @Input() public space: Space;\n    /** Active space to display */\n    @Input() public booking: Booking;\n    /** Whether all orders should be shown */\n    public show_orders: boolean;\n\n    constructor(private _org: OrganisationService) { }\n\n    /** List of orders for the active space */\n    public get orders(): CateringOrder[] {\n        return (this.catering || []).filter((order) => order.location_id === this.space.email);\n    }\n\n    public get symbol() {\n        const bld = this._org.buildings.find(bld => this.space.zones.includes(bld.id));\n        return bld?.currency || '';\n    }\n\n    /** Charge code for orders in the active space */\n    public get notes(): string {\n        const the_note = this.booking.notes.find(\n            (note) => note.type === 'catering' && note.space === this.space.email\n        );\n        return the_note ? the_note.message : '<No notes>';\n    }\n\n    /** Charge code for orders in the active space */\n    public get charge_code(): string {\n        return this.orders.length > 0\n            ? this.orders[0].charge_code || '<No charge code>'\n            : '<No charge code>';\n    }\n}\n","<div class=\"catering-details\" *ngIf=\"catering && space\" [attr.space-id]=\"space.id\">\n    <div class=\"field multi\" name=\"orders\">\n        <label>Orders({{ orders.length || '0' }}):</label>\n        <div class=\"value\">\n            <div class=\"list\" [class.shown]=\"show_orders\">\n                <div\n                    class=\"list-item\"\n                    *ngFor=\"let order of orders\"\n                    [title]=\"\"\n                >\n                    <div class=\"name\">Deliver at {{ order.deliver_at_time }}</div>\n                    <div class=\"email\">{{ order.item_count }} item{{ order.item_count === 1 ? '' : 's' }}</div>\n                    <div class=\"details\">\n                        <div class=\"items\">\n                            <div class=\"item\" *ngFor=\"let item of order.items\">\n                                <div class=\"name\">{{ item.name }}</div>\n                                <div class=\"amount\">x{{ item.amount || '0' }}</div>\n                            </div>\n                        </div>\n                        <div class=\"total\"><span>Total:</span> {{ order.total / 100 | currency:symbol }}</div>\n                    </div>\n                </div>\n            </div>\n            <button\n                class=\"show\"\n                *ngIf=\"orders.length > 5\"\n                (click)=\"show_orders = !show_orders\"\n            >\n                {{ show_orders ? 'Hide' : 'Show' }} Orders\n            </button>\n        </div>\n    </div>\n    <div class=\"field\" name=\"requirements\">\n        <label>Requirements:</label>\n        <div class=\"value\">{{ notes }}</div>\n    </div>\n    <div class=\"field\" name=\"charge-code\">\n        <label>Charge Code:</label>\n        <div class=\"value\">{{ charge_code }}</div>\n    </div>\n</div>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { ViewRoomModalComponent } from '../../view-room-modal/view-room-modal.component';\nimport {\n    RECURRENCE_PERIODS,\n    formatRecurrence,\n} from '../../../shared/utilities/formatting.utilities';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { DialogEvent, HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { humaniseDuration } from 'src/app/shared/utilities/general.utilities';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { UsersService } from 'src/app/services/data/users/users.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'meeting-details-display',\n    templateUrl: './display.component.html',\n    styleUrls: ['./display.component.scss'],\n})\nexport class MeetingDetailsDisplayComponent extends BaseDirective {\n    @Input() event: Booking;\n    /** Emitter for events on the component */\n    @Output('event') on_event = new EventEmitter<DialogEvent>();\n    /** Toggle for activating checkin */\n    public checked_in: boolean;\n    /** Mapping of spaces to last checkin time */\n    public last_start: { [id: string]: number } = {};\n    /** Whether to show full locations list */\n    public show_locations: boolean;\n    /** Whether to show full attendee list */\n    public show_attendees: boolean;\n\n    /** Title of the displayed event */\n    public get title(): string {\n        return this.event.title || '';\n    }\n\n    /** Display string of when the event will occur */\n    public get when(): string {\n        const date = dayjs(this.event.date);\n        const end = date.add(this.event.duration || 60, 'm');\n        if (\n            (this.event.all_day && this.event.duration < 25 * 60) ||\n            this.event.duration === 24 * 60\n        ) {\n            return `${date.format('DD MMM YYYY')} - All Day`;\n        } else {\n            if (date.isSame(end, 'd')) {\n                return `${date.format('DD MMM YYYY, h:mm A')} - ${end.format('h:mm A')}`;\n            } else {\n                return `${date.format('DD MMM YYYY, h:mm A')} - ${end.format(\n                    'DD MMM YYYY, h:mm A'\n                )}`;\n            }\n        }\n    }\n\n    /** Whether booking has catering */\n    public get has_catering(): boolean {\n        return this.event && this.event.catering && this.event.catering.length >= 0;\n    }\n\n    /** Display string for the event's duration */\n    public get duration(): string {\n        if (!this.event) {\n            return 'Unable to determine';\n        }\n        return humaniseDuration(this.event.duration || 60);\n    }\n\n    /** List of spaces associated with the event */\n    public get spaces(): Space[] {\n        return this.event.space_list || (this.event.space ? [this.event.space] : []);\n    }\n\n    /** List of attendees associated with the event not including the host */\n    public get attendees(): User[] {\n        return this.event.attendees.filter((i) => i.email !== this.organiser.email) || [];\n    }\n\n    /** Host of the event */\n    public get organiser(): User {\n        return this.event.organiser || this._users.current;\n    }\n\n    /** Host of the event */\n    public get created_by(): User {\n        return this.event.creator || this._users.current;\n    }\n\n    /** Display string for the recurrence value of the booking */\n    public get recurrence(): string {\n        return formatRecurrence(this.event.recurrence);\n    }\n\n    /** Whether the user is allowed to edit the event */\n    public get can_edit(): boolean {\n        const organiser = this.organiser;\n        const user = this._users.current;\n        return organiser.email === user.email && this.status !== 'done';\n    }\n\n    /** Details about the event */\n    public get notes(): string {\n        return this.event.body || '';\n    }\n\n    /** Status of the event */\n    public get status(): 'future' | 'upcoming' | 'done' | 'started' | 'in_progress' {\n        if (this.event) {\n            const now = dayjs();\n            const date = dayjs(this.event.date);\n            if (now.isBefore(date.subtract(15, 'm'), 'm')) {\n                return 'future';\n            } else if (now.isBefore(date, 'm')) {\n                return 'upcoming';\n            } else if (now.isBefore(date.add(15, 'm'), 'm')) {\n                return 'started';\n            } else if (now.isBefore(date.add(this.event.duration, 'm'), 'm')) {\n                return 'in_progress';\n            }\n        }\n        return 'done';\n    }\n\n    /** Mapping of attendees and spaces to acceptance status */\n    public get status_map(): HashMap<'accepted' | 'tentative' | 'declined'> {\n        const attendee_statuses: HashMap<'accepted' | 'tentative' | 'declined'> = {};\n        for (const email in this.event.approval_status) {\n            if (email) {\n                switch (this.event.approval_status[email]) {\n                    case 'declined':\n                        attendee_statuses[email] = 'declined';\n                        break;\n                    case 'accepted':\n                        attendee_statuses[email] = 'accepted';\n                        break;\n                    default:\n                        attendee_statuses[email] = 'tentative';\n                        break;\n                }\n            }\n        }\n        return attendee_statuses;\n    }\n\n    /** Whether the user has checkin to all the spaces in the event */\n    public get is_checked_in(): boolean {\n        return this.spaces.reduce(\n            (a, v) => a && this.event.date <= (this.last_start[v.id] || 0),\n            true\n        );\n    }\n\n    /** Whether the spaces can be controlled */\n    public get can_control(): boolean {\n        return this.spaces.length > 0 && this.status !== 'future' && this.status !== 'done';\n    }\n\n    /** Whether the user is able to checkin to the event */\n    public get can_checkin(): boolean {\n        return this.spaces.length > 0 && (this.status === 'upcoming' || this.status === 'started');\n    }\n\n    constructor(\n        private _spaces: SpacesService,\n        private _users: UsersService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    /**\n     * Open the modal to show the location of a space\n     * @param space Space to show the location\n     */\n    public locate(space: Space) {\n        if (space) {\n            const the_space = this._spaces.find(space.id) || space;\n            this._dialog.open(ViewRoomModalComponent, {\n                width: 'auto',\n                height: 'auto',\n                maxWidth: '95vw',\n                maxHeight: '95vh',\n                data: { space: the_space },\n            });\n        }\n    }\n}\n","<div class=\"event-details\">\n    <div class=\"field\" name=\"title\">\n        <label>Title:</label>\n        <div class=\"value\">{{ title }}</div>\n    </div>\n    <div class=\"field\" name=\"when\">\n        <label>When:</label>\n        <div class=\"value\">{{ when }}</div>\n    </div>\n    <div\n        class=\"field\"\n        *ngIf=\"event.recurrence && event.recurrence.period !== 'none'\"\n        name=\"recurrence\"\n    >\n        <label>Reccurrence:</label>\n        <div class=\"value\">\n            {{ recurrence }}\n        </div>\n    </div>\n    <div class=\"field\" name=\"duration\">\n        <label>Duration:</label>\n        <div class=\"value\">{{ duration }}</div>\n    </div>\n    <div class=\"field multi\" name=\"location\">\n        <label>Locations({{ spaces.length || '0' }}):</label>\n        <div class=\"value\">\n            <div class=\"list\" [class.shown]=\"show_locations\">\n                <div\n                    class=\"list-item\"\n                    *ngFor=\"let item of spaces\"\n                    [title]=\"item?.name + ' - ' + (status_map[item?.email] || 'Approved')\"\n                >\n                    <div [class]=\"'status ' + status_map[item?.email]\">\n                        <div class=\"text\">{{ status_map[item?.email] }}</div>\n                    </div>\n                    <div class=\"text\">{{ item?.name }}</div>\n                    <button class=\"show\" *ngIf=\"item?.map_id\" (click)=\"locate(item)\">\n                        Map\n                    </button>\n                </div>\n                <div class=\"list-item\" *ngIf=\"!spaces.length\">No Location</div>\n            </div>\n            <button\n                class=\"show\"\n                *ngIf=\"spaces.length > 5\"\n                (click)=\"show_locations = !show_locations\"\n            >\n                {{ show_locations ? 'Hide' : 'Show' }} Locations\n            </button>\n        </div>\n    </div>\n    <div class=\"field\" name=\"host\">\n        <label>Host:</label>\n        <div class=\"value\">{{ organiser.name }}</div>\n    </div>\n    <div class=\"field\" name=\"host\" *ngIf=\"created_by && created_by.email !== organiser.email\">\n        <label>Booked by:</label>\n        <div class=\"value\">{{ created_by.name }}</div>\n    </div>\n    <div class=\"field multi\" name=\"attendees\">\n        <label>Attendees({{ attendees.length || '0' }}):</label>\n        <div class=\"value\">\n            <div class=\"list\" [class.shown]=\"show_attendees\">\n                <div\n                    class=\"list-item\"\n                    *ngFor=\"let item of attendees\"\n                    [title]=\"\n                        item?.name +\n                        ' - ' +\n                        (status_map[item?.email] || 'Accepted') +\n                        (item?.email ? '\\n' + item.email : '')\n                    \"\n                >\n                    <div [class]=\"'status ' + status_map[item?.email]\">\n                        <div class=\"text\">{{ status_map[item?.email] }}</div>\n                    </div>\n                    <div class=\"text\">\n                        <div class=\"name\">{{ item.name }}</div>\n                        <div class=\"email\" *ngIf=\"item.email\">\n                            <a [href]=\"'mailto:' + item.email + '?subject=' + event.title\">{{\n                                item.email\n                            }}</a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <button\n                class=\"show\"\n                *ngIf=\"attendees.length > 5\"\n                (click)=\"show_attendees = !show_attendees\"\n            >\n                {{ show_attendees ? 'Hide' : 'Show' }} Attendees\n            </button>\n        </div>\n    </div>\n    <div class=\"field\" name=\"notes\">\n        <label>Notes:</label>\n        <div class=\"value\" [innerHTML]=\"notes | sanitize\"></div>\n    </div>\n    <div class=\"field\" *ngIf=\"has_catering\" name=\"catering\">\n        <label>Catered:</label>\n        <div class=\"value\">{{ event.catering.length ? 'Yes' : 'No' }}</div>\n    </div>\n</div>\n","import { Component, OnDestroy, Output, EventEmitter, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport {\n    ConfirmModalComponent,\n    ConfirmModalData,\n    CONFIRM_METADATA,\n} from '../confirm-modal/confirm-modal.component';\nimport { TimeExtensionModalComponent } from '../time-extension/time-extension.component';\nimport {\n    RequirementDetailsModalComponent,\n    RequirementDetailsModalData,\n} from 'src/app/shell/bookings/overlays/requirement-details-modal/requirement-details-modal.component';\nimport { generateBookingForm } from 'src/app/services/data/bookings/booking.utilities';\n\nimport * as dayjs from 'dayjs';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\nexport interface MeetingDetailsModalData {\n    /** Meeting to display on the modal */\n    booking: Booking;\n    /** Whether local user is able act on behalf of the host */\n    as_delegate: boolean;\n    /** Email address of the associated delegate */\n    delegate: string;\n    /** Whether booking is the first in the list */\n    is_first: boolean;\n    /** Whether booking is the last in the list */\n    is_last: boolean;\n}\n\n/*istanbul ignore next */\n@Component({\n    selector: 'meeting-details-overlay',\n    templateUrl: './meeting-details-overlay.template.html',\n    styleUrls: ['./meeting-details-overlay.styles.scss'],\n})\nexport class MeetingDetailsOverlayComponent extends BaseDirective implements OnDestroy {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Display string of the loading state of the meeting */\n    public loading: string;\n    /** Whether booking is being edited */\n    public edit: boolean;\n\n    /** Active booking to display */\n    public get booking(): Booking {\n        return this._data.booking;\n    }\n\n    /** Whether booking is the first in the list */\n    public get is_last(): boolean {\n        return this._data.is_last;\n    }\n\n    /** Whether booking is the last in the list */\n    public get is_first(): boolean {\n        return this._data.is_first;\n    }\n\n    /** List of spaces associated with the event */\n    public get space_list(): Space[] {\n        return this.booking.space_list || (this.booking.space ? [this.booking.space] : []);\n    }\n\n    public get has_recurrence(): boolean {\n        return !!(this.booking.recurrence && this.booking.recurrence.period);\n    }\n\n    /** Whether user is able to edit the booking */\n    public get can_edit(): boolean {\n        const user = this._users.current;\n        return (\n            this.booking.organiser.email === user.email ||\n            (this._data.as_delegate && user.delegates.includes(this.booking.organiser.email))\n        );\n    }\n\n    /** Whether booking is in progress */\n    public get in_progress(): boolean {\n        if (!this.booking) {\n            return false;\n        }\n        const now = dayjs();\n        const start = dayjs(this.booking.date);\n        const end = start.add(this.booking.duration, 'm');\n        return now.isAfter(start, 's') && now.isBefore(end, 'm');\n    }\n\n    /** Whether booking has ended */\n    public get has_ended(): boolean {\n        if (!this.booking) {\n            return false;\n        }\n        const now = dayjs();\n        const start = dayjs(this.booking.date);\n        const end = start.add(this.booking.duration, 'm');\n        return now.isAfter(end, 's');\n    }\n\n    /** Whether booking has a space associated with it */\n    public get has_space(): boolean {\n        if (!this.space_list || !this.space_list.length) {\n            return false;\n        }\n        for (const space of this.space_list) {\n            if (space) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _dialog_ref: MatDialogRef<MeetingDetailsOverlayComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: MeetingDetailsModalData,\n        private _service: ApplicationService,\n        private _users: UsersService,\n        private _bookings: BookingsService,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    /**\n     * Show the next meeting in the list\n     */\n    public nextBooking() {\n        this.event.emit({ reason: 'action', metadata: 'next' });\n    }\n\n    /** Show the previous meeting in the list */\n    public previousBooking() {\n        this.event.emit({ reason: 'action', metadata: 'previous' });\n    }\n\n    /** Open confirmation modal for deleting the meeting */\n    public confirmDeleteMeeting(): void {\n        const can_delete =\n            this._data.as_delegate || this.booking.organiser.email === this._users.current.email;\n        const ref = this._dialog.open<ConfirmModalComponent, ConfirmModalData>(\n            ConfirmModalComponent,\n            {\n                ...CONFIRM_METADATA,\n                data: {\n                    title: `${can_delete ? 'Delete' : 'Decline'} meeting`,\n                    icon: { type: 'icon', class: 'material-icons', content: 'delete' },\n                    content: `\n                        <p>Are you sure you want to ${can_delete ? 'delete' : 'decline'} this meeting on ${\n                            this.booking.date_string\n                        }${this.has_recurrence ? ' from your series' : ''}?</p>\n                        <p>All attendees will be notified.</p>\n                    `,\n                },\n            }\n        );\n        this.subscription(\n            'confirm',\n            ref.componentInstance.event.subscribe((event) => {\n                if (event.reason === 'done') {\n                    this.deleteMeeting();\n                    ref.close();\n                    this.unsub('confirm');\n                }\n            })\n        );\n    }\n\n    /** Open confirmation modal for deleting the series of bookings */\n    public confirmDeleteSeries(): void {\n        if (!this.booking.recurrence) {\n            return;\n        }\n        const can_delete =\n            this._data.as_delegate || this.booking.organiser.email === this._users.current.email;\n        const ref = this._dialog.open<ConfirmModalComponent, ConfirmModalData>(\n            ConfirmModalComponent,\n            {\n                ...CONFIRM_METADATA,\n                data: {\n                    title: `${can_delete ? 'Delete' : 'Decline'} series`,\n                    icon: { type: 'icon', class: 'material-icons', content: 'delete' },\n                    content: `\n                        <p>All bookings in the series will be ${can_delete ? 'deleted' : 'declined'}. Are you sure you want to ${can_delete ? 'delete' : 'decline'} the series?</p>\n                        <p>All attendees will be notified.</p>\n                    `,\n                },\n            }\n        );\n        this.subscription(\n            'confirm',\n            ref.componentInstance.event.subscribe((event) => {\n                if (event.reason === 'done') {\n                    this.deleteSeries();\n                    ref.close();\n                    this.unsub('confirm');\n                }\n            })\n        );\n    }\n\n    /** Navigate the booking with the details of the current booking set */\n    public duplicateMeeting(): void {\n        const new_booking = new Booking({ ...this.booking.toJSON(), id: 'ad-hoc', icaluid: '' });\n        this._router.navigate(['/book']);\n        if (localStorage) {\n            localStorage.setItem('ACA_STAFF.booking_form_data', JSON.stringify(new_booking));\n        }\n        this._dialog_ref.close();\n    }\n\n    /** Open modal to extend the length of the meeting */\n    public extendMeeting() {\n        this.loading = 'Extending meeting...';\n        const ref = this._dialog.open(TimeExtensionModalComponent, {\n            ...CONFIRM_METADATA,\n            data: { booking: this.booking },\n        });\n        ref.afterClosed().subscribe(() => (this.loading = null));\n    }\n\n    public editMeetingRequirements() {\n        const form = generateBookingForm(this.booking, [\n            'space_list',\n            'notes',\n            'equipment_codes',\n            'expected_attendees',\n        ] as any);\n        const ref = this._dialog.open<\n            RequirementDetailsModalComponent,\n            RequirementDetailsModalData\n        >(RequirementDetailsModalComponent, {\n            maxWidth: '95vw',\n            width: '32em',\n            data: {\n                spaces: form.controls.space_list.value,\n                notes_field: form.controls.notes,\n                codes_field: form.controls.equipment_codes,\n                head_counts_field: form.controls.expected_attendees,\n            },\n        });\n        this.subscription(\n            'modal_events',\n            ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                if (event.reason === 'done') {\n                    this.loading = 'Updating space requirements...';\n                    const updated_booking = new Booking({\n                        ...this.booking,\n                        ...form.value,\n                        room_ids: form.value.space_list.map((space) => space.id),\n                    });\n                    updated_booking.save().then(\n                        (new_booking: Booking) => {\n                            this._data.booking = new_booking;\n                            this.loading = null;\n                        },\n                        (err) => {\n                            this.loading = null;\n                            this._service.notifyError(\n                                `Error updating space requirements. Error: ${err.message || err}`\n                            );\n                        }\n                    );\n                    ref.close();\n                }\n            })\n        );\n        ref.afterClosed().subscribe(() => this.unsub('modal_events'));\n    }\n\n    /**\n     * Open booking form to catering section\n     */\n    public editMeetingCatering() {\n        this.editMeeting(false);\n        this._router.navigate(['/book', 'space', 'catering']);\n        this._dialog_ref.close();\n    }\n\n    /**\n     * Open booking form to edit details\n     */\n    public editMeeting(navigate: boolean = true) {\n        if (localStorage) {\n            localStorage.setItem('ACA_STAFF.booking_form_data', JSON.stringify(this.booking));\n        }\n        if (navigate) {\n            this._router.navigate(['/book']);\n            this._dialog_ref.close();\n        }\n    }\n\n    /** Delete the meeting */\n    private deleteMeeting() {\n        const can_delete =\n            this._data.as_delegate || this.booking.organiser.email === this._users.current.email;\n            this.loading = `${can_delete ? 'Deleting' : 'Declining'} meeting...`;\n        const params: any = [this.booking.id, {\n            icaluid: this.booking.icaluid,\n            host_email: this.booking.organiser.email,\n            user_email: this._data.as_delegate ? this._data.delegate : this._users.current.email,\n            room_id: this.booking.space?.id,\n            start: Math.floor(this.booking.date / 1000),\n        }];\n        const method = can_delete ? this._bookings.delete(params[0], params[1]) : this._bookings.decline(params[0], params[1]);\n        method.then(\n            () => {\n                this._service.notifySuccess(`Successfully ${can_delete ? 'deleted' : 'declined'} meeting.`);\n                this.event.emit({ reason: 'action' });\n                this.loading = null;\n                this._dialog_ref.close();\n            },\n            (err) => {\n                this.loading = null;\n                this._service.notifyError(`Error ${can_delete ? 'deleting' : 'declining'} meeting. Error: ${err.message || err}`);\n            }\n        );\n    }\n\n    /** Delete series */\n    private deleteSeries() {\n        const can_delete =\n            this._data.as_delegate || this.booking.organiser.email === this._users.current.email;\n        this.loading = `${can_delete ? 'Deleting' : 'Declining'} series...`;\n        const params: any = [this.booking.recurrence.series_id, {\n            icaluid: this.booking.icaluid,\n            host_email: this.booking.organiser.email,\n            user_email: this._data.as_delegate ? this._data.delegate : this._users.current.email,\n            room_id: this.booking.space?.id,\n            start: Math.floor(this.booking.date / 1000),\n        }];\n        const method = can_delete ? this._bookings.delete(params[0], params[1]) : this._bookings.decline(params[0], params[1]);\n        method.then(\n            () => {\n                this._service.notifySuccess(`Successfully ${can_delete ? 'deleted' : 'declined'} series.`);\n                this.event.emit({ reason: 'action' });\n                this.loading = null;\n                this._dialog_ref.close();\n            },\n            (err) => {\n                this.loading = null;\n                this._service.notifyError(`Error ${can_delete ? 'deleting' : 'declining'} series. Error: ${err.message || err}`);\n            }\n        );\n    }\n}\n","<header class=\"custom\">\n    <div class=\"details\">\n        <!-- <button mat-icon-button [disabled]=\"is_first\" (click)=\"previousBooking()\">\n            <app-icon\n                [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_left' }\"\n            ></app-icon>\n        </button> -->\n        <div class=\"text\">{{ booking?.title || '&lt;No Title&gt;' }}</div>\n        <!-- <button mat-icon-button [disabled]=\"is_last\" (click)=\"nextBooking()\">\n            <app-icon\n                [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_right' }\"\n            ></app-icon>\n        </button> -->\n        <button mat-icon-button mat-dialog-close class=\"fixed\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </button>\n    </div>\n    <div class=\"actions\">\n        <button mat-button name=\"delete\" *ngIf=\"!has_ended\" (click)=\"confirmDeleteMeeting()\">\n            <div class=\"flex\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'delete' }\"></app-icon>\n                <div class=\"text\">\n                    {{ can_edit ? 'Delete' : 'Decline'}}\n                    <span *ngIf=\"has_recurrence\">Occurrence</span>\n                </div>\n            </div>\n        </button>\n        <button\n            mat-button\n            name=\"delete-recurr\"\n            *ngIf=\"has_recurrence\"\n            (click)=\"confirmDeleteSeries()\"\n        >\n            <div class=\"flex\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'delete' }\"></app-icon>\n                <div class=\"text\">{{ can_edit ? 'Delete' : 'Decline'}} Series</div>\n            </div>\n        </button>\n        <button mat-button name=\"duplicate\" *ngIf=\"can_edit\" (click)=\"duplicateMeeting()\">\n            <div class=\"flex\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'add' }\"></app-icon>\n                <div class=\"text\">Duplicate</div>\n            </div>\n        </button>\n        <button\n            mat-button\n            name=\"extend\"\n            *ngIf=\"in_progress && has_space && can_edit\"\n            (click)=\"extendMeeting()\"\n        >\n            <div class=\"flex\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'timelapse' }\"></app-icon>\n                <div class=\"text\">Extend</div>\n            </div>\n        </button>\n    </div>\n</header>\n<mat-dialog-content>\n    <main class=\"custom\" *ngIf=\"!loading; else load_state\">\n        <ng-container *ngIf=\"!edit; else edit_form\">\n            <div class=\"card\">\n                <div class=\"header\">Event Details</div>\n                <meeting-details-display [event]=\"booking\"></meeting-details-display>\n                <div class=\"flex\" *ngIf=\"!has_ended && !in_progress && can_edit\">\n                    <button mat-button (click)=\"editMeeting()\">Edit</button>\n                </div>\n            </div>\n            <ng-container *ngFor=\"let space of space_list\">\n                <div class=\"card\" *ngIf=\"space && space.id\">\n                    <div class=\"header\">Space Details</div>\n                    <meeting-details-space\n                        [booking]=\"booking\"\n                        [space]=\"space\"\n                    ></meeting-details-space>\n                    <div class=\"flex\" *ngIf=\"!has_ended && can_edit\">\n                        <button\n                            mat-button\n                            name=\"requirements\"\n                            (click)=\"editMeetingRequirements()\"\n                        >\n                            Edit Room Requirements\n                        </button>\n                    </div>\n                    <div class=\"header\">Catering Details</div>\n                    <meeting-details-catering\n                        [catering]=\"booking.catering\"\n                        [booking]=\"booking\"\n                        [space]=\"space\"\n                    ></meeting-details-catering>\n                    <div class=\"flex\" *ngIf=\"!has_ended && can_edit\">\n                        <button\n                            mat-button\n                            name=\"catering\"\n                            (click)=\"editMeetingCatering()\"\n                        >\n                            Edit Catering Orders\n                        </button>\n                    </div>\n                </div>\n            </ng-container>\n        </ng-container>\n    </main>\n</mat-dialog-content>\n<ng-template #edit_form>\n    <meeting-details-form></meeting-details-form>\n</ng-template>\n<ng-template #load_state>\n    <main class=\"custom\">\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </main>\n</ng-template>\n","import { Component, Input } from '@angular/core';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { Space } from 'src/app/services/data/spaces/space.class';\n\n\n@Component({\n    selector: 'meeting-details-space',\n    templateUrl: './space.component.html',\n    styleUrls: ['./space.component.scss'],\n})\nexport class MeetingDetailsSpaceComponent {\n    /** Active Space to display details for */\n    @Input() public space: Space;\n    /** Booking associated with the space */\n    @Input() public booking: Booking;\n\n    /** Latest equipment requirement notes for the active space */\n    public get notes(): string {\n        const space_notes = (this.booking.notes || []).filter(note => note.space === this.space.email && note.type !== 'catering-private');\n        return space_notes.length ? space_notes[space_notes.length - 1].message : '<No requirements>';\n    }\n\n    /** Latest equipment charge code for the active space */\n    public get charge_code(): string {\n        return (this.booking.equipment_codes || {})[this.space.email] || '<No charge code>';\n    }\n\n    /** Expected number of attendees for the active space */\n    public get expected_attendees(): number {\n        return (this.booking.expected_attendees || {})[this.space.email] || 0;\n    }\n}\n","<div class=\"space-details\" *ngIf=\"space\" [attr.space-id]=\"space.id\">\n    <div class=\"field\" name=\"space-name\">\n        <label>Space:</label>\n        <div class=\"value\">{{ space.name }}</div>\n    </div>\n    <div class=\"field\" name=\"requirements\">\n        <label>Requirements (Private Notes):</label>\n        <div class=\"value\">{{ notes }}</div>\n    </div>\n    <div class=\"field\" name=\"charge-code\">\n        <label>Charge Code:</label>\n        <div class=\"value\">{{ charge_code }}</div>\n    </div>\n    <div class=\"field\" name=\"expected-attendees\">\n        <label>Expected Attendees:</label>\n        <div class=\"value\">{{ expected_attendees }}</div>\n    </div>\n</div>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormGroup } from '@angular/forms';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { generateUserForm } from 'src/app/services/data/users/user.utilities';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { DialogEvent } from '../../shared/utilities/types.utilities';\n\n@Component({\n  selector: 'new-user-modal',\n  templateUrl: './new-user-modal.component.html',\n  styleUrls: ['./new-user-modal.component.scss']\n})\nexport class NewUserModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for the new user */\n    public form: FormGroup;\n    /** New user data store */\n    public user: User;\n    /** Whether user details are being saved */\n    public loading: boolean;\n\n    public ngOnInit(): void {\n        this.user = new User();\n        this.form = generateUserForm(this.user);\n    }\n\n    public saveChanges() {\n        this.form.markAllAsTouched();\n        if (this.form.valid) {\n            if (!this.form.controls.email.value) {\n                this.form.controls.email.setValue(`${Math.floor(Math.random() * 99999)}@guest.mckinsey.com`);\n            }\n            const new_user = new User({\n                ...this.form.value,\n                name: `${this.form.value.first_name} ${this.form.value.last_name}`,\n                type: 'external'\n            });\n            this.event.emit({ reason: 'done', metadata: new_user });\n        }\n    }\n\n}\n","<header>\n    <h3 mat-dialog-title>Add External Attendee</h3>\n    <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<div class=\"body\" *ngIf=\"!loading; else load_state\">\n    <user-form [form]=\"form\"></user-form>\n</div>\n<footer *ngIf=\"!loading\">\n    <button mat-button class=\"inverse\" mat-dialog-close>Cancel</button>\n    <button mat-button (click)=\"saveChanges()\">Save</button>\n</footer>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">\n                Saving attendee...\n            </div>\n        </div>\n    </div>\n</ng-template>\n\n","\nimport { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { SharedContentModule } from '../shared/shared.module';\n\nimport { ConfirmModalComponent } from './confirm-modal/confirm-modal.component';\nimport { ViewRoomModalComponent } from './view-room-modal/view-room-modal.component';\nimport { NewUserModalComponent } from './new-user-modal/new-user-modal.component';\nimport { BookingRulesModalComponent } from './booking-rules-modal/booking-rules-modal.component';\n\nimport { BookingConfirmComponent } from '../shell/bookings/overlays/booking-confirm/booking-confirm.component';\nimport { MeetingDetailsOverlayComponent } from './meeting-details-overlay/meeting-details-overlay.component';\nimport { MeetingDetailsCateringComponent } from './meeting-details-overlay/catering/catering.component';\nimport { MeetingDetailsDisplayComponent } from './meeting-details-overlay/display/display.component';\nimport { MeetingDetailsSpaceComponent } from './meeting-details-overlay/space/space.component';\nimport { TimeExtensionModalComponent } from './time-extension/time-extension.component';\nimport { SpaceSelectModalComponent } from './space-select-modal/space-select-modal.component';\nimport { RecurrenceModalComponent } from './recurrence-modal/recurrence-modal.component';\nimport { LibraryModule } from '@acaprojects/ngx-pipes';\n\nconst OVERLAYS: Type<any>[] = [\n    ConfirmModalComponent,\n    ViewRoomModalComponent,\n    BookingConfirmComponent,\n    NewUserModalComponent,\n    BookingRulesModalComponent,\n    MeetingDetailsOverlayComponent,\n    TimeExtensionModalComponent,\n    RecurrenceModalComponent\n];\n\n@NgModule({\n    declarations: [\n        ...OVERLAYS,\n        MeetingDetailsCateringComponent,\n        MeetingDetailsDisplayComponent,\n        MeetingDetailsSpaceComponent,\n        SpaceSelectModalComponent\n    ],\n    imports: [\n        CommonModule,\n        SharedContentModule,\n        FormsModule,\n        ReactiveFormsModule,\n        LibraryModule,\n    ],\n    exports: [\n        ...OVERLAYS\n    ]\n})\nexport class SharedOverlaysModule {}\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\nimport { DialogEvent, Identity } from '../../shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { BookingRecurrenceDetails } from 'src/app/services/data/bookings/booking.interfaces';\nimport dayjs = require('dayjs');\n\nexport interface RecurrenceModalData {\n    /** Current recurrence details */\n    details: BookingRecurrenceDetails;\n    /** Currently set date for the booking */\n    date: number;\n}\n\nexport const RECURRENCE_METADATA = {\n    height: 'auto',\n    width: '24em',\n    maxHeight: 'calc(100vh - 2em)',\n    maxWidth: 'calc(100vw - 2em)',\n};\n\n@Component({\n    selector: 'recurrence-modal',\n    templateUrl: './recurrence-modal.component.html',\n    styleUrls: ['./recurrence-modal.component.scss'],\n})\nexport class RecurrenceModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for recurrence */\n    public form: FormGroup;\n    /** Loading state */\n    public loading: string;\n    /** Available recurrence periods */\n    public periods: Identity[] = [\n        { id: 'none', name: 'None' },\n        { id: 'daily', name: 'Daily' },\n        { id: 'weekly', name: 'Weekly' },\n        { id: 'biweekly', name: 'Biweekly' },\n        { id: 'monthly', name: 'Monthly' },\n    ];\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: RecurrenceModalData,\n        private _dialog_ref: MatDialogRef<RecurrenceModalComponent>\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._dialog_ref.disableClose = true;\n        const end_date = dayjs(this._data.details.end * 1000 || this._data.date)\n            .endOf('d')\n            .startOf('m');\n        this.form = new FormGroup({\n            period: new FormControl(this._data.details.period || 'none'),\n            end: new FormControl(end_date.valueOf(), [Validators.required]),\n        });\n    }\n\n    /**\n     * User confirmation of the content of the modal\n     */\n    public save() {\n        this.form.markAllAsTouched();\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            this.loading = 'Adding recurrence data to booking...';\n            const end = this.form.value.end;\n            this.event.emit({\n                reason: 'done',\n                metadata: {\n                    ...this._data.details,\n                    ...this.form.value,\n                    end: Math.floor(end / 1000),\n                },\n            });\n        }\n    }\n}\n","<header>\n    <div class=\"heading\" mat-dialog-title>Booking Recurrence</div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main *ngIf=\"!loading; else load_state\">\n        <form *ngIf=\"form\" [formGroup]=\"form\">\n            <div class=\"field\" *ngIf=\"form.controls.period && periods.length > 1\">\n                <label for=\"period\">Period: </label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select name=\"period\" formControlName=\"period\" placeholder=\"None\">\n                        <mat-option *ngFor=\"let type of periods\" [value]=\"type.id\">\n                            {{ type.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.end\">\n                <label\n                    for=\"end\"\n                    [class.error]=\"form.controls.end.errors && form.controls.end.touched\"\n                >\n                    End Date<span>*</span>:\n                </label>\n                <a-date-field name=\"end\" formControlName=\"end\"></a-date-field>\n                <div\n                    class=\"error-message\"\n                    *ngIf=\"form.controls.end.errors && form.controls.end.touched\"\n                >\n                    End date needs to be in the future\n                </div>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading\">\n    <footer>\n        <button mat-button (click)=\"save()\">Add to Booking</button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </div>\n</ng-template>\n","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Observable, of, Subject } from 'rxjs';\nimport { catchError, debounceTime, distinctUntilChanged, map, switchMap } from 'rxjs/operators';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { Space, SpaceBookingRuleOptions } from 'src/app/services/data/spaces/space.class';\nimport { sort } from 'src/app/services/data/spaces/space.utilities';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { UsersService } from 'src/app/services/data/users/users.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\nimport { DialogEvent, HashMap, Identity } from 'src/app/shared/utilities/types.utilities';\n\n\nexport interface SpaceSelectModalData {\n    /** List of selected spaces */\n    spaces: Space[];\n    /** Start time for availability of spaces */\n    date: number;\n    /** Duration of the availability block to look for */\n    duration: number;\n    /** Host of the booking being made */\n    host: User;\n    /** Whether multiple spaces can be selected */\n    multiple: boolean;\n    /** Force zone ids */\n    zone_ids?: string;\n}\n\n@Component({\n    selector: 'a-space-select-modal',\n    templateUrl: './space-select-modal.component.html',\n    styleUrls: ['./space-select-modal.component.scss'],\n})\nexport class SpaceSelectModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether space list is being loaded */\n    public loading: boolean;\n    /** List of available spaces to select from */\n    public spaces: Space[] = [];\n    /** Active building to filter spaces on */\n    public active_building: Building;\n    /** Active building to filter spaces on */\n    public active_type: Identity;\n    /** List of items from an API search */\n    public search_results$: Observable<Space[]>;\n    /** Subject holding the value of the search */\n    public readonly search$ = new Subject<string>();\n    /** List of currently selected spaces */\n    public selected_spaces: Space[] = [];\n    /** Mapping as to whether a space is by request */\n    public request_map: HashMap<boolean> = {};\n    /** Whether selected list should be shown on mobile */\n    public show_list: boolean;\n\n    public host: User;\n\n    /** List of available buildings */\n    public types: Identity[] = [];\n\n    /** List of available buildings */\n    public get buildings(): Building[] {\n        return this._org.buildings;\n    }\n\n    /** Whether multiple spaces can be selected */\n    public get multiple(): boolean {\n        return !!this._data.multiple;\n    }\n\n    public get has_zone(): boolean {\n        return !!this._data.zone_ids;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _users: UsersService,\n        private _spaces: SpacesService,\n        @Inject(MAT_DIALOG_DATA) private _data: SpaceSelectModalData\n    ) {\n        super();\n\n    }\n\n    public ngOnInit(): void {\n        this.loadHost();\n        this.selected_spaces = [].concat(this._data.spaces || []);\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(400),\n            distinctUntilChanged(),\n            switchMap((_) => {\n                this.loading = true;\n                const zone_ids: string[] = [];\n                /* istanbul ignore else */\n                if (this.active_building) {\n                    zone_ids.push(this.active_building.id);\n                }\n                return this._spaces.available({\n                    zone_ids: this._data.zone_ids || zone_ids.join(','),\n                    date: this._data.date,\n                    duration: this._data.duration,\n                });\n            }),\n            catchError((_) => of([])),\n            map((list: Space[]) => {\n                this.loading = false;\n                const selected = this.selected_spaces;\n                return list.filter((space: any) => {\n                    const rules = space.rulesFor({\n                        date: this._data.date,\n                        duration: this._data.duration,\n                        host: this.host || this._data.host,\n                    });\n                    return (\n                        rules.hide !== true &&\n                        (this.active_type && this.active_type.id\n                            ? space.zones.includes(`${this.active_type.id}`)\n                            : true) &&\n                        !selected.find((_space) => _space.id === space.id)\n                    );\n                });\n            })\n        );\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe((list) => {\n                this.spaces = list;\n                this.spaces.sort((a, b) => sort(a, b, this._org.buildings));\n                this.update();\n            })\n        );\n        this.active_building = this._data.spaces?.length\n            ? this._org.buildings.find((i) => i.id === this._data.spaces[0].level.building_id)\n            : this._org.building;\n        this.types = [{ id: '', name: 'Any Space Type' } as any].concat(\n            this._org.space_types || []\n        );\n        this.active_type = this.types[0];\n        this.search$.next('');\n    }\n\n    /** Add space to selected list */\n    public addSpace(space: Space) {\n        this.selected_spaces.push(space);\n        this.selected_spaces = unique(this.selected_spaces, 'id');\n    }\n\n    /** Remove space from selected list */\n    public removeSpace(space: Space) {\n        this.selected_spaces = this.selected_spaces.filter((a_space) => a_space.id !== space.id);\n    }\n\n    /** Emit current state of the selected list */\n    public save(list: Space[]) {\n        this.event.emit({ reason: 'done', metadata: list });\n    }\n\n    private update() {\n        const map = {};\n        const options: SpaceBookingRuleOptions = {\n            date: this._data.date,\n            duration: this._data.duration,\n            host: this._data.host,\n        };\n        this.selected_spaces.forEach((space) => (map[space.id] = space.byRequest(options)));\n        this.spaces.forEach((space) => (map[space.id] = space.byRequest(options)));\n        this.request_map = map;\n    }\n\n    private async loadHost() {\n        this.host = await this._users.show(this._data.host.email);\n    }\n}\n","<header>\n    <div class=\"heading\">Select meeting space{{ multiple ? 's' : '' }}</div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main>\n        <div class=\"block available\">\n            <ng-container *ngIf=\"!has_zone\">\n                <mat-form-field appearance=\"outline\" *ngIf=\"buildings && buildings.length > 1\">\n                    <mat-select\n                        #select\n                        [(value)]=\"active_building\"\n                        (valueChange)=\"search$.next(active_building.id + '|' + active_type.id)\"\n                    >\n                        <mat-option *ngFor=\"let building of buildings\" [value]=\"building\">\n                            {{ building.code }} - {{ building.name\n                            }}{{ building.address ? ', ' + building.address : '' }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\" *ngIf=\"types && types.length > 1\">\n                    <mat-select\n                        #select\n                        [(value)]=\"active_type\"\n                        (valueChange)=\"search$.next(active_building.id + '|' + active_type.id)\"\n                    >\n                        <mat-option *ngFor=\"let type of types\" [value]=\"type\">\n                            {{ type?.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </ng-container>\n            <div class=\"list\">\n                <ng-container *ngIf=\"!loading; else load_state\">\n                    <ng-container *ngIf=\"spaces && spaces.length; else empty_state\">\n                        <div class=\"item\" *ngFor=\"let space of spaces\">\n                            <div class=\"details\">\n                                <div class=\"name\">{{ space.name }}</div>\n                                <div class=\"info\">{{ space.level.name }}</div>\n                            </div>\n                            <div class=\"capacity\">\n                                <app-icon\n                                    [icon]=\"{ type: 'icon', class: 'material-icons', content: 'account_circle' }\"\n                                ></app-icon>\n                                <div class=\"text\">{{ space.capacity || '0' }}</div>\n                            </div>\n                            <div class=\"actions\">\n                                <button\n                                    [class.request]=\"request_map[space.id]\"\n                                    name=\"add\"\n                                    mat-button\n                                    (click)=\"multiple ? addSpace(space) : save([space])\"\n                                >\n                                    {{ request_map[space.id] ? 'Request' : 'Select' }}\n                                </button>\n                            </div>\n                        </div>\n                    </ng-container>\n                </ng-container>\n            </div>\n        </div>\n        <div class=\"block selected\" *ngIf=\"multiple\" [class.show]=\"show_list\">\n            <h3>Selected spaces</h3>\n            <div class=\"list\">\n                <ng-container\n                    *ngIf=\"selected_spaces && selected_spaces.length; else empty_select_state\"\n                >\n                    <div class=\"item\" *ngFor=\"let space of selected_spaces\">\n                        <div\n                            class=\"icon\"\n                            [class.request]=\"request_map[space.id]\"\n                            [matTooltip]=\"\n                                request_map[space.id]\n                                    ? 'Bookings in this space need to be approved by a member of the concierge team'\n                                    : ''\n                            \"\n                        >\n                            <app-icon\n                                [icon]=\"{\n                                    class: 'material-icons',\n                                    content: request_map[space.id] ? 'warning' : 'done'\n                                }\"\n                            ></app-icon>\n                        </div>\n                        <div class=\"details\">\n                            <div class=\"name\">{{ space.name }}</div>\n                            <div class=\"info\">{{ space.level.name }}</div>\n                        </div>\n                        <div class=\"capacity\">\n                            <app-icon\n                                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'account_circle' }\"\n                            ></app-icon>\n                            <div class=\"text\">{{ space.capacity || '0' }}</div>\n                        </div>\n                        <div class=\"actions\">\n                            <button mat-icon-button name=\"remove\" (click)=\"removeSpace(space)\">\n                                <app-icon\n                                    [icon]=\"{ class: 'material-icons', content: 'close' }\"\n                                ></app-icon>\n                            </button>\n                        </div>\n                    </div>\n                </ng-container>\n            </div>\n            <footer>\n                <button mat-button name=\"next\" (click)=\"save(this.selected_spaces)\">Add to booking</button>\n            </footer>\n            <button mat-icon-button [class.close]=\"true\" [class.mobile-only]=\"true\" (click)=\"show_list = false\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n            </button>\n            <div class=\"tag mobile-only\">\n                <button mat-icon-button (click)=\"show_list = true\">\n                    <app-icon [icon]=\"{ class: 'material-icons', content: 'list' }\"></app-icon>\n                </button>\n            </div>\n        </div>\n    </main>\n</mat-dialog-content>\n<ng-template #load_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <mat-spinner diameter=\"48\"></mat-spinner>\n        </div>\n        <div class=\"text\">Loading available spaces...</div>\n    </div>\n</ng-template>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">No available spaces</div>\n    </div>\n</ng-template>\n<ng-template #empty_select_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">No selected spaces</div>\n    </div>\n</ng-template>\n","import { Component, Output, EventEmitter, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { DialogEvent, Identity } from 'src/app/shared/utilities/types.utilities';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { humaniseDuration } from 'src/app/shared/utilities/general.utilities';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\n/** Maximum amount of time that the booking can be extended */\nconst MAX_EXTENSION = 60;\n\nexport interface TimeExtensionModalData {\n    booking: Booking;\n}\n\n@Component({\n    selector: 'time-extension',\n    templateUrl: './time-extension.component.html',\n    styleUrls: ['./time-extension.component.scss']\n})\nexport class TimeExtensionModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Duration options that the user can select */\n    public durations: Identity[] = [];\n    /** Display string for the loading state of the booking */\n    public loading: string;\n\n    public get booking(): Booking {\n        return this._data.booking;\n    }\n\n    constructor(\n        private _dialog: MatDialogRef<TimeExtensionModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: TimeExtensionModalData,\n        private _service: ApplicationService,\n        private _spaces: SpacesService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.checkAvailability(MAX_EXTENSION);\n    }\n\n    public checkAvailability(extension: number) {\n        if (extension <= 0) {\n            this._service.notifyInfo('Meeting is not available to be extended.');\n            this._dialog.close();\n            return;\n        }\n        this.loading = 'Checking availability of spaces...';\n        this._spaces.available({\n            room_ids: this.booking.space_list.map(room => room.id).join(','),\n            date: this.booking.date,\n            duration: this.booking.duration + extension,\n            ignore: this.booking.icaluid,\n            hide_bookings: true\n        }).then(\n            list => {\n                if (list.length >= this.booking.space_list.length) {\n                    this.durations = [];\n                    let extended = 15;\n                    while (extended <= extension) {\n                        this.durations.push({\n                            id: this.booking.duration + extended,\n                            name: ` Extend ${humaniseDuration(extended)}`\n                        });\n                        extended += 15;\n                    }\n                    this.loading = null;\n                } else {\n                    this.checkAvailability(extension - 15);\n                }\n            },\n            err => {\n                this._service.notifyError(`Error extending meeting. Error: ${err.message | err}`);\n                this._dialog.close();\n            }\n        );\n    }\n\n    /**\n     * Extend the meeting but the given duration\n     * @param block Duration block to update the meeting to\n     */\n    public extendMeeting(block: Identity) {\n        this.loading = 'Extending meeting...';\n        const new_booking = new Booking({ ...this.booking.toJSON(), duration: block.id });\n        new_booking.save().then(\n            (booking) => {\n                this.loading = null;\n                this._dialog.close();\n                this.event.emit({ reason: 'done', metadata: booking });\n            },\n            err => {\n                this._service.notifyError(`Error extending meeting. Error: ${err.message | err}`);\n            }\n        );\n    }\n}\n","<header>\n    <div class=\"text\">Extend meeting</div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{class:'material-icons', content: 'close'}\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main>\n        <ng-container *ngIf=\"!loading && durations; else loading_content\">\n            <button *ngFor=\"let item of durations\" mat-button name=\"action\" (click)=\"extendMeeting(item)\">\n                {{ item.name }}\n            </button>\n        </ng-container>\n    </main>\n</mat-dialog-content>\n<ng-template #loading_content>\n    <div class=\"info-block\">\n        <div class=\"icon\">\n            <mat-spinner *ngIf=\"loading\" diameter=\"32\"></mat-spinner>\n            <app-icon\n                *ngIf=\"!loading\"\n                [icon]=\"{class:'material-icons', content: 'event_busy'}\"\n            ></app-icon>\n        </div>\n        <div class=\"text\">\n            {{ loading || 'No available extensions' }}\n        </div>\n    </div>\n</ng-template>\n","import { Component, Output, EventEmitter, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { MapPinComponent } from '@acaprojects/ngx-interactive-map';\n\nimport { BaseDirective } from '../../shared/base.directive';\nimport { BuildingLevel } from '../../services/data/organisation/level.class';\nimport { Space } from '../../services/data/spaces/space.class';\nimport { MapFeature } from '@acaprojects/ngx-interactive-map/lib/helpers/map.interfaces';\nimport { Point } from 'src/app/shared/utilities/types.utilities';\n\n@Component({\n    selector: 'view-room-modal',\n    templateUrl: './view-room-modal.component.html',\n    styleUrls: ['./view-room-modal.component.scss'],\n})\nexport class ViewRoomModalComponent extends BaseDirective {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter();\n\n    public features: MapFeature[] = [];\n    /** Space to show the location of on the map */\n    public get space(): Space {\n        return this._data.space;\n    }\n\n    public get level(): BuildingLevel {\n        return this.space.level;\n    }\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: { space: Space }) {\n        super();\n        this.features = [this.focus_feature];\n    }\n\n    /** Point on map to focus on */\n    public get focus_feature(): MapFeature {\n        /* istanbul ignore else */\n        if (!this.space) {\n            return null;\n        }\n        return {\n            id: `area-${this.space.map_id}-status`,\n            coordinates: null,\n            content: MapPinComponent,\n            data: {\n                back: '#fff',\n                fore: '#d31145',\n            },\n        };\n    }\n\n    public get focus(): string | Point {\n        return this.focus_feature ? this.focus_feature.id : null;\n    }\n}\n","<header>\n    <h3 mat-dialog-title>Locate Space - <span>{{ space.name }}</span></h3>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <div class=\"body\" *ngIf=\"level\">\n        <a-map [src]=\"level?.map_url\" [features]=\"features\">\n            <mat-spinner diameter=\"64\"></mat-spinner>\n        </a-map>\n\n        <div class=\"level\">{{ level?.name }}</div>\n    </div>\n</mat-dialog-content>\n","import { Injectable, ApplicationRef, NgZone } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { SwUpdate } from '@angular/service-worker';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { first } from 'rxjs/operators';\n\nimport { ComposerService } from '@placeos/composer';\nimport { PlaceOSOptions } from '@placeos/ts-client';\nimport { HeapIoService } from '@acaprojects/ngx-heap-io';\n\nimport { Observable, BehaviorSubject, Subject, Subscription } from 'rxjs';\n\nimport { BaseClass } from '../shared/base.class';\nimport { SettingsService } from './settings.service';\nimport { ApplicationLoadingState } from '../shared/utilities/types.utilities';\n\nimport { HotkeysService } from './hotkeys.service';\nimport { ComposerSettings, ApplicationIcon } from '../shared/utilities/settings.interfaces';\nimport { ConsoleStream, log } from '../shared/utilities/general.utilities';\n\ndeclare global {\n    interface Window {\n        application: ApplicationService;\n        mock: {\n            enabled: boolean;\n            backend: any;\n        };\n    }\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ApplicationService extends BaseClass {\n    /** Map of state variables for Service */\n    protected _subjects: {\n        [key: string]: BehaviorSubject<any> | Subject<any>;\n    } = {};\n    /** Map of observables for state variables */\n    protected _observers: { [key: string]: Observable<any> } = {};\n\n    constructor(\n        private _app_ref: ApplicationRef,\n        private _zone: NgZone,\n        private _title: Title,\n        private _cache: SwUpdate,\n        private _settings: SettingsService,\n        private _hotkeys: HotkeysService,\n        private _composer: ComposerService,\n        private _snackbar: MatSnackBar,\n        private _analytics: HeapIoService,\n    ) {\n        super();\n        this.set('system', null);\n        this.set('title', 'Home');\n        this.set('loading', {});\n        this._app_ref.isStable.pipe(first(_ => _)).subscribe(() => {\n            this._zone.run(() => {\n                this.log('APP', `Application has stablised.`);\n                this.setupCache();\n                this.waitForSettings();\n            });\n        });\n    }\n\n    public get Bindings() {\n        return this._composer.bindings;\n    }\n    /** Analytics service */\n    public get Analytics() {\n        return {};\n    }\n    /** Hotkeys service */\n    public get Hotkeys() {\n        return this._hotkeys;\n    }\n\n    /**\n     * Get a setting from the settings service\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        return this._settings.get(key);\n    }\n\n    /**\n     * Title of the page\n     */\n    public set title(value: string) {\n        const title_suffix = this.setting('app.title');\n        this.set('title', value);\n        this._title.setTitle(`${value ? value + ' | ' : ''}${title_suffix}`);\n    }\n\n    /**\n     * Title of the page\n     */\n    public get title(): string {\n        return this._title.getTitle();\n    }\n\n    /** Root API Endpoint */\n    public get endpoint() {\n        return `/api/staff/`;\n    }\n\n    /** Root API Endpoint for engine */\n    public get engine_endpoint() {\n        return this._composer.auth.api_endpoint + '/';\n    }\n\n    /** Whether settings has been loaded */\n    public get has_settings(): boolean {\n        return this._settings.is_initialised;\n    }\n\n    /**\n     * Create notification popup\n     * @param type CSS Class to add to the notification\n     * @param message Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     * @param icon Icon to render to the left of the notification message\n     */\n    public notify(\n        type: string,\n        message: string,\n        action: string = 'OK',\n        on_action?: () => void,\n        icon: ApplicationIcon = {\n            type: 'icon',\n            class: 'material-icons',\n            content: 'info'\n        }\n    ): void {\n        const snackbar_ref = this._snackbar.open(message, action, {\n            panelClass: [type],\n            duration: 5000\n        });\n        this.subscription(\n            'snackbar_close',\n            snackbar_ref.afterDismissed().subscribe(() => {\n                this.unsub('snackbar_close');\n                this.unsub('notify');\n            })\n        );\n        if (action) {\n            on_action = on_action || (() => snackbar_ref.dismiss());\n            this.subscription(\n                'notify',\n                snackbar_ref.onAction().subscribe(() => on_action())\n            );\n        }\n    }\n\n    /**\n     * Create success notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifySuccess(msg: string, action?: string, on_action?: () => void): void {\n        const icon: ApplicationIcon = {\n            type: 'icon',\n            class: 'material-icons',\n            content: 'done'\n        };\n        console.debug(msg);\n        this.notify('success', msg, action, on_action, icon);\n    }\n\n    /**\n     * Create error notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifyError(msg: string, action?: string, on_action?: () => void): void {\n        const icon: ApplicationIcon = {\n            type: 'icon',\n            class: 'material-icons',\n            content: 'error'\n        };\n        console.error(msg);\n        this.notify('error', msg, action, on_action, icon);\n    }\n\n    /**\n     * Create warning notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifyWarn(msg: string, action?: string, on_action?: () => void): void {\n        const icon: ApplicationIcon = {\n            type: 'icon',\n            class: 'material-icons',\n            content: 'warning'\n        };\n        console.warn(msg);\n        this.notify('warn', msg, action, on_action, icon);\n    }\n\n    /**\n     * Create info notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifyInfo(msg: string, action?: string, on_action?: () => void): void {\n        console.info(msg);\n        this.notify('info', msg, action, on_action);\n    }\n\n    /**\n     * Log data to the browser console\n     * @param type Type of message\n     * @param msg Message body\n     * @param args array of argments to log to the console\n     * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\n     * @param force Whether to force message to be emitted when debug is disabled\n     */\n    public log(\n        type: string,\n        msg: string,\n        args?: any,\n        stream: ConsoleStream = 'debug',\n        force: boolean = false\n    ): void {\n        log(type, msg, args, stream, force);\n    }\n\n    /**\n     * Get the current value of the named property\n     * @param name Property name\n     */\n    public get<U = any>(name: string): U {\n        return this._subjects[name] && this._subjects[name] instanceof BehaviorSubject\n            ? (this._subjects[name] as BehaviorSubject<U>).getValue()\n            : null;\n    }\n\n    /**\n     * Listen to value change of the named property\n     * @param name Property name\n     * @param next Callback for value changes\n     */\n    public listen<U = any>(name: string, next: (_: U) => void): Subscription {\n        return this._observers[name] ? this._observers[name].subscribe(next) : null;\n    }\n\n    /**\n     * Update the value of the named property\n     * @param name Property name\n     * @param value New value\n     */\n    public set<U = any>(name: string, value: U): void {\n        if (!this._subjects[name]) {\n            this._subjects[name] = new BehaviorSubject<U>(value);\n            this._observers[name] = this._subjects[name].asObservable();\n        } else {\n            this._subjects[name].next(value);\n        }\n    }\n\n    /** Wait for settings to be initialised before setting up the application */\n    private waitForSettings() {\n        // Wait until the settings have loaded before initialising\n        this._settings.initialised.pipe(first(_ => _)).subscribe(() => this.init());\n    }\n\n    /**\n     * Initialise application services\n     */\n    private init(): void {\n        this.setupComposer();\n        // this.setupAnalytics();\n        this._composer.initialised.pipe(first(_ => _)).subscribe(() => {\n            this._initialised.next(true);\n        });\n        // Add service to window if in debug mode\n        if (window.debug) {\n            window.application = this;\n        }\n    }\n\n    /**\n     * Initialise the composer library comms\n     */\n    private setupComposer(): void {\n        this.log('SYSTEM', 'Setup up composer...');\n        const loading: ApplicationLoadingState = this.get('loading');\n        loading.composer = {\n            message: 'Initialising service connection',\n            state: 'loading'\n        };\n        this.set('loading', loading);\n        // Get application settings\n        const settings: ComposerSettings = this._settings.get('composer') || {};\n        const protocol = settings.protocol || location.protocol;\n        const host = settings.domain || location.hostname;\n        const port = settings.port || location.port;\n        const url = settings.use_domain ? `${protocol}//${host}:${port}` : location.origin;\n        const route = host.includes('localhost') && port === '4200' ? '' : settings.route || '';\n        const mock =\n            this._settings.get('mock') ||\n            location.href.includes('mock=true') ||\n            localStorage.getItem('mock') === 'true';\n        // Generate configuration object\n        const config: PlaceOSOptions = {\n            scope: 'public',\n            host: `${host}:${port}`,\n            auth_uri: `${url}/auth/oauth/authorize`,\n            token_uri: `${url}/auth/token`,\n            redirect_uri: `${location.origin}${route}/oauth-resp.html`,\n            handle_login: !settings.local_login,\n            mock\n        };\n        this._composer.setup(config);\n        loading.composer = {\n            message: 'Initialising service connection',\n            state: 'complete'\n        };\n        this.set('loading', loading);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Setup handler for cache change events\n     */\n    private setupCache() {\n        if (this._cache.isEnabled) {\n            this.subscription(\n                'cache_update',\n                this._cache.available.subscribe(event => {\n                    const current = `current version is ${event.current.hash}`;\n                    const available = `available version is ${event.available.hash}`;\n                    this.log('CACHE', `Update available: ${current} ${available}`);\n                    this.activateUpdate();\n                })\n            );\n            this.subscription(\n                'cache_activated',\n                this._cache.activated.subscribe(() => {\n                    this.log('CACHE', `Updates activated. Reloading...`);\n                    this.notifyInfo(\n                        'Newer version of the application is available',\n                        'Refresh',\n                        () => location.reload(true)\n                    );\n                })\n            );\n            setInterval(() => {\n                this.log('CACHE', `Checking for updates...`);\n                this._cache.checkForUpdate();\n            }, 5 * 60 * 1000);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update the cache and reload the page\n     *\n     */\n    private activateUpdate() {\n        if (this._cache.isEnabled) {\n            this.log('CACHE', `Activating changes to the cache...`);\n            this._cache.activateUpdate().then(() => {\n                this.notifyInfo('Newer version of the application is available', 'Refresh', () =>\n                    location.reload(true)\n                );\n            });\n        }\n    }\n}\n","import { Subject, Observable } from 'rxjs';\n\nimport { BaseClass } from '../../shared/base.class';\nimport { HashMap } from '../../shared/utilities/types.utilities';\nimport { ServiceManager, ServiceLike } from './service-manager.class';\n\nexport type ApiEventType = 'value_change' | 'item_saved' | 'reset' | 'other';\n\nexport interface ApiEvent<T = HashMap> {\n    type: ApiEventType;\n    metadata: T;\n}\n\n\nexport class BaseDataClass extends BaseClass {\n    /** Subject for emitting events on the object */\n    protected readonly event_subject = new Subject<ApiEvent>();\n    /** Observable for events on this object */\n    public readonly events = this.event_subject.asObservable();\n    /** Unique Identifier of the object */\n    public readonly id: string;\n    /** Human readable name of the object */\n    public readonly name: string;\n    /** Email address associated with the object */\n    public readonly email: string;\n    /** Map of local property names to server ones */\n    protected _server_names: HashMap<string> = {};\n    /** Service for managing model on the server */\n    protected get _service(): ServiceLike {\n        return ServiceManager.serviceFor(BaseDataClass);\n    }\n\n    constructor(raw_data: HashMap) {\n        super();\n        this.id = raw_data.id || raw_data.zone_id || raw_data.email || '';\n        this.name = raw_data.name || '';\n        this.email = `${raw_data.email || ''}`.toLowerCase();\n    }\n\n    /**\n     * Save pending changes to server\n     */\n    public save(): Promise<BaseDataClass> {\n        if (this._service) {\n            const form = this.toJSON();\n            return new Promise((resolve, reject) => {\n                const promise = this.id\n                    ? this._service.update(this.id, form)\n                    : this._service.add(form);\n                promise.then(\n                    (d) => {\n                        this.event_subject.next({ type: 'item_saved',  metadata: d });\n                        resolve(d);\n                    },\n                    (_) => reject(_)\n                );\n            });\n        } else {\n            Promise.reject('No service to process request');\n        }\n    }\n\n    /**\n     * Delete this item from the server\n     */\n    public delete(): Promise<void> {\n        if (this.id) {\n            return this._service.delete(this.id);\n        }\n    }\n\n    /**\n     * Run task for this item on the service\n     * @param task_name Name of the task\n     * @param parameters Parameters to pass to the task request\n     */\n    public runTask(task_name: string, parameters: HashMap): Promise<void> {\n        if (this.id) {\n            return this._service.task(this.id, task_name, parameters);\n        }\n    }\n    /**\n     * Convert object into plain object\n     */\n    public toJSON(this: BaseDataClass): HashMap {\n        const obj: any = { ...this };\n        // Remove local private members\n        delete obj._service;\n        delete obj._changes;\n        delete obj.event_subject;\n        delete obj.events;\n        // Remove parent private members\n        delete obj._timers;\n        delete obj._intervals;\n        delete obj._subscriptions;\n        delete obj._server_names;\n        delete obj._initialised;\n        // Convert remaining members to be public\n        const keys = Object.keys(obj);\n        for (const key of keys) {\n            if (key[0] === '_') {\n                const new_key = this._server_names[key.substr(1)] || key.substr(1);\n                obj[new_key] = obj[key];\n                delete obj[key];\n            } else if (obj[key] === undefined) {\n                delete obj[key];\n            }\n        }\n        return obj;\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): BaseDataClass {\n        return new BaseDataClass(this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): BaseDataClass {\n        return new BaseDataClass({ ...this, id: null, email: null });\n    }\n}\n","import { ComposerService } from '@placeos/composer';\nimport { BehaviorSubject, Observable, Subscription, Subscriber, Subject } from 'rxjs';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDataClass } from './base-api.class';\nimport { BaseClass } from '../../shared/base.class';\nimport { ApplicationService } from '../app.service';\nimport { HashMap } from '../../shared/utilities/types.utilities';\nimport { toQueryString } from '../../shared/utilities/api.utilities';\n\nexport interface IEngineResponse {\n    results: HashMap[];\n    total: number;\n}\n\nexport class BaseAPIService<T extends {} = BaseDataClass> extends BaseClass {\n    /** Application service */\n    public parent: ApplicationService;\n    /** Display name of the service */\n    protected _name: string;\n    /** API Route of the service */\n    protected _api_route: string;\n    /** Map of state variables for Service */\n    protected _subjects: { [key: string]: BehaviorSubject<any> | Subject<any> } = {};\n    /** Map of observables for state variables */\n    protected _observers: { [key: string]: Observable<any> } = {};\n    /** Map of poll subscribers for API endpoints */\n    protected _subscribers: { [key: string]: Subscriber<any> } = {};\n    /** Map of promises for Service */\n    protected _promises: { [key: string]: Promise<any> } = {};\n    /** Comparison function for service items */\n    protected _compare: (a: T, b: T) => boolean = (a, b) =>\n        a === b || (a as any).id === (b as any).id;\n    /** Default filter function for list method */\n    protected _list_filter: (a: T) => boolean = (a) => !!a;\n\n    /** Http Client */\n    protected get http() {\n        return this._composer.http;\n    }\n\n    constructor(protected _composer: ComposerService) {\n        super();\n        this._name = 'Base';\n        this._api_route = 'base';\n        this.set('list', []);\n    }\n\n    /**\n     * Initailise service\n     */\n    public init() {\n        this.load().then(\n            (_) => this._initialised.next(true),\n            (err) => this.timeout('init', () => this.init(), 1000)\n        );\n    }\n\n    /**\n     * Get API route for the service\n     * @param engine Whether endpoint is using the application API or engine API\n     */\n    public route(engine: boolean = false) {\n        const endpoint = engine\n            ? this._composer.auth.api_endpoint\n            : '/api/staff';\n        return `${endpoint}/${this._api_route}`;\n    }\n    /** API Route of the service */\n    public get api_route() {\n        return this._api_route;\n    }\n\n    /**\n     * Get the current value of the named property\n     * @param name Property name\n     */\n    public get<U = any>(name: string): U {\n        if (!this._observers[name]) {\n            this.set<U>(name, null);\n        }\n        return (this._subjects[name] as BehaviorSubject<U>).getValue();\n    }\n\n    /**\n     * Listen to value change of the named property\n     * @param name Property name\n     * @param next Callback for value changes\n     */\n    public listen<U = any>(name: string): Observable<U> {\n        if (!this._observers[name]) {\n            this.set<U>(name, null);\n        }\n        return this._observers[name];\n    }\n\n    /**\n     * Update the value of the named property\n     * @param name Property name\n     * @param value New value\n     */\n    protected set<U = any>(name: string, value: U): void {\n        if (!this._subjects[name]) {\n            this._subjects[name] = new BehaviorSubject<U>(value);\n            this._observers[name] = this._subjects[name].asObservable();\n        } else {\n            this._subjects[name].next(value);\n        }\n    }\n\n    /**\n     * Get list of loaded items\n     * @param predicate Function for filtering the list\n     */\n    public filter(predicate: (a: T) => boolean = this._list_filter): T[] {\n        const list = this.get<T[]>('list');\n        return list.filter(_ => predicate(_));\n    }\n\n    /**\n     * Get item with the given id from the loaded items\n     * @param id ID of the item\n     */\n    public find(id: string): T {\n        const list = this.get('list');\n        return list.find((i) => i.id === id || (i.email?.toLowerCase() === id?.toLowerCase()));\n    }\n\n    /**\n     * Query the index of the API route associated with this service\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public query(query_params: HashMap = { update_list: true }): Promise<T[]> {\n        let engine = false;\n        let cache = 1000;\n        /* istanbul ignore else */\n        if (query_params) {\n            engine = !!query_params.engine;\n            delete query_params.engine;\n            cache = query_params.cache || 1000;\n            delete query_params.cache;\n        }\n        const query = toQueryString(query_params);\n        const key = `query|${query}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise((resolve, reject) => {\n                const url = `${this.route(engine)}${query ? '?' + query : ''}`;\n                let result: T[] | HashMap[] = [];\n                this.http.get(url).subscribe(\n                    (d: IEngineResponse | HashMap[]) => {\n                        result =\n                            d && d instanceof Array\n                                ? d.map((i) => this.process(i))\n                                : d && !(d instanceof Array) && d.results\n                                ? (d.results as HashMap[])\n                                : [];\n                    },\n                    (e) => {\n                        reject(e);\n                        this._promises.new_item = null;\n                    },\n                    () => {\n                        if (\n                            (!query || (query_params && query_params.update_list)) &&\n                            result.length > 0 &&\n                            result[0] instanceof BaseDataClass\n                        ) {\n                            this.set('list', this.updateList(this.get('list'), result as T[]));\n                        }\n                        resolve(result);\n                        this.timeout(key, () => (this._promises[key] = null), cache);\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Query the API route for a sepecific item\n     * @param id ID of the item\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public show(id: string, query_params: HashMap = {}): Promise<T> {\n        let engine = false;\n        /* istanbul ignore else */\n        if (query_params) {\n            engine = !!query_params.engine;\n            delete query_params.engine;\n        }\n        const query = toQueryString(query_params);\n        const key = `show|${id}|${query}`;\n        /* istanbul ignore else */\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<T>((resolve, reject) => {\n                const url = `${this.route(engine)}/${id}${query ? '?' + query : ''}`;\n                let result: T = null;\n                this.http.get(url).subscribe(\n                    (d) => (result = this.process(d)),\n                    (e) => {\n                        reject(e);\n                        this._promises.new_item = null;\n                    },\n                    () => {\n                        resolve(result);\n                        this.timeout(key, () => (this._promises[key] = null), 1000);\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Make post request for a new item to the service\n     * @param form_data Data to post to the server\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public add(form_data: HashMap, query_params: HashMap = {}): Promise<T> {\n        /* istanbul ignore else */\n        if (!this._promises.new_item) {\n            this._promises.new_item = new Promise<T>((resolve, reject) => {\n                const query = toQueryString(query_params);\n                const url = `${this.route(query_params.engine)}${query ? '?' + query : ''}`;\n                let result: T = null;\n                this.http.post(url, form_data).subscribe(\n                    (d) => (result = this.process(d)),\n                    (e) => {\n                        reject(e);\n                        this.analyticsEvent(`create-${this._name.toLowerCase()}-failed`);\n                        this._promises.new_item = null;\n                    },\n                    () => {\n                        resolve(result);\n                        this.set('list', this.updateList(this.get('list'), [result]));\n                        this.analyticsEvent(`create-${this._name.toLowerCase()}-success`);\n                        this._promises.new_item = null;\n                    }\n                );\n            });\n        }\n        return this._promises.new_item;\n    }\n\n    /**\n     * Perform API task for the given item ID\n     * @param id ID of the item\n     * @param task_name Name of the task\n     * @param form_data Map of data to pass to the API\n     * @param method Verb to use for request\n     */\n    public task<U = any>(\n        id: string,\n        task_name: string,\n        form_data: HashMap = {},\n        method: 'post' | 'get' = 'post'\n    ): Promise<U> {\n        const query = toQueryString(form_data);\n        const key = `task|${id}|${task_name}|${query}`;\n        /* istanbul ignore else */\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<U>((resolve, reject) => {\n                const post_data = { ...form_data, id, _task: task_name };\n                const url = `${this.route(false)}/${id}/${task_name}`;\n                let result: any;\n                const request =\n                    method === 'post'\n                        ? this.http.post(url, post_data)\n                        : this.http.get(`${url}${query ? '?' + query : ''}`);\n                request.subscribe(\n                    (d) => (result = d),\n                    (e) => {\n                        reject(e);\n                        this.analyticsEvent(\n                            `${this._name.toLowerCase()}-task-${task_name}-failed`,\n                            id\n                        );\n                        delete this._promises[key];\n                    },\n                    () => {\n                        resolve(result as U);\n                        this.analyticsEvent(\n                            `${this._name.toLowerCase()}-task-${task_name}-success`,\n                            id\n                        );\n                        this.timeout(key, () => delete this._promises[key], 1000);\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n\n    /**\n     * Make put request for changes to the item with the given id\n     * @param id ID of the item being updated\n     * @param form_data New values for the item\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public update(id: string, form_data: HashMap, query_params: HashMap = {}): Promise<T> {\n        const key = `update|${id}`;\n        /* istanbul ignore else */\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<T>((resolve, reject) => {\n                const query = toQueryString(query_params);\n                const url = `${this.route(query_params.engine)}/${id}${query ? '?' + query : ''}`;\n                let result: T = null;\n                this.http.put(url, form_data).subscribe(\n                    (d) => (result = this.process(d)),\n                    (e) => {\n                        reject(e);\n                        this.analyticsEvent(`update-${this._name.toLowerCase()}-failed`, id);\n                        this._promises[key] = null;\n                    },\n                    () => {\n                        resolve(result);\n                        this.set(\n                            'list',\n                            this.updateList(this.removeItem(this.get('list'), { id } as any), [\n                                result,\n                            ])\n                        );\n                        this.analyticsEvent(`update-${this._name.toLowerCase()}-success`, id);\n                        this._promises[key] = null;\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Make delete request for the given item\n     * @param id ID of item\n     */\n    public delete(id: string, q: HashMap = {}): Promise<void> {\n        const key = `delete|${id}`;\n        /* istanbul ignore else */\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<void>((resolve, reject) => {\n                const query = toQueryString(q);\n                const url = `${this.route()}/${id}${query ? '?' + query : ''}`;\n                this.http.delete(url).subscribe(\n                    (_) => null,\n                    (e) => {\n                        reject(e);\n                        this._promises[key] = null;\n                    },\n                    () => {\n                        this.set('list', this.removeItem(this.get('list'), { id } as any));\n                        this._promises[key] = null;\n                        resolve();\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Load initial data for the service\n     */\n    protected async load(): Promise<void> {}\n\n    /**\n     * Post analytics event for this service\n     * @param action Name of the action to post\n     */\n    protected analyticsEvent(action: string, label?: string) {\n        // if (this.parent && this.parent.Analytics) {\n        //     this.parent.Analytics.track(this._name, { desc: `${this.parent.name.toLowerCase()}-${action}`, label });\n        // }\n    }\n\n    /**\n     * Convert raw API data into a valid API Object\n     * @param raw_item Raw API data\n     */\n    protected process(raw_item: HashMap): T {\n        return raw_item as T;\n    }\n\n    /**\n     * Update recorded list of items\n     * @param old_list Old list of items\n     * @param list List of updated items\n     * @param compareFn Function to compare items to remove duplicates\n     */\n    public updateList(\n        old_list: T[],\n        list: T[],\n        compareFn: (a: T, b: T) => boolean = this._compare\n    ): T[] {\n        /* istanbul ignore else */\n        if (!list || list.length === 0) {\n            return old_list;\n        }\n        const new_list: T[] = [];\n        const mixed_list = [...list, ...old_list];\n        /* istanbul ignore else */\n        if (!compareFn) {\n            compareFn = this._compare;\n        }\n        for (const item of mixed_list) {\n            const found = new_list.find((i) => compareFn(i, item));\n            /* istanbul ignore else */\n            if (!found) {\n                new_list.push(item);\n            }\n        }\n        return new_list;\n    }\n\n    /**\n     * Remove the given item from the given list\n     * @param list List of items\n     * @param item Item to remove\n     * @param compareFn Function to compare items\n     */\n    protected removeItem(list: T[], item: T, compareFn?: (a: T, b: T) => boolean) {\n        const new_list = [];\n        /* istanbul ignore else */\n        if (!compareFn) {\n            compareFn = this._compare;\n        }\n        list.forEach((i) => (compareFn(item, i) ? null : new_list.push(i)));\n        return new_list;\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\n\nimport { BookingNote, BookingRecurrenceDetails } from './booking.interfaces';\nimport { CateringOrder } from '../catering/catering-order.class';\nimport { User } from '../users/user.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\nimport { humaniseDuration, unique, flatten } from '../../../shared/utilities/general.utilities';\nimport { Space } from '../spaces/space.class';\nimport { ServiceManager } from '../service-manager.class';\n\nimport * as dayjs from 'dayjs';\n\nexport class Booking extends BaseDataClass {\n    /** Unique calendar event ID */\n    public readonly icaluid: string;\n    /** Subject or title of the booking */\n    public readonly title: string;\n    /** Unix timestamp of the booking start */\n    public readonly date: number;\n    /** Length of the booking in minutes */\n    public readonly duration: number;\n    /** Description or details of the booking */\n    public readonly body: string;\n    /** Type of booking */\n    public readonly class: string;\n    /** Whether the booking has catering associated with it */\n    public readonly has_catering: boolean;\n    /** List of catering orders for the booking */\n    public readonly catering: readonly CateringOrder[];\n    /** String location set in booking */\n    public readonly location_name: string;\n    /** Whether booking's duration covers all day */\n    public readonly all_day: boolean;\n    /** Details of the recurrence */\n    public readonly recurrence: BookingRecurrenceDetails;\n    /** Mapping of emails to approval statuses */\n    public readonly approval_status: HashMap<string>;\n    /** Host/Organiser of the booking */\n    public readonly organiser: User;\n    /** List of people invited to attend the booking */\n    public readonly attendees: User[];\n    /** Author of the booking */\n    public readonly creator: User;\n    /** List of notes associated with the booking */\n    public readonly notes: readonly BookingNote[];\n    /** Mapping of spaces to equipment charge codes */\n    public readonly equipment_codes: HashMap<string>;\n    /** Mapping of spaces to expected number of attendees */\n    public readonly expected_attendees: HashMap<number>;\n    /** Setup time before the meeting in minutes */\n    public readonly setup: HashMap<number>;\n    /** List of checked in attendees */\n    public readonly checked_in: string[];\n    /** Breakdown time after booking in minutes */\n    public readonly breakdown: HashMap<number>;\n    /** List of spaces associated with the booking */\n    public readonly space_list: Space[];\n    /** List of users to be notified on visitor arrivals */\n    public readonly notify_users: readonly string[];\n    /** Whether the time or duration has changed */\n    public time_changed = false;\n    /** Map of display strings */\n    private _display: HashMap<string> = {};\n    /** Service for managing Bookings */\n    protected get _service() {\n        return ServiceManager.serviceFor(Booking);\n    }\n\n    constructor(raw_data: HashMap = {}) {\n        super(raw_data);\n        this.icaluid = raw_data.icaluid || this.id || '';\n        this.title = raw_data.title || raw_data.subject || raw_data.Subject || '';\n        const time =\n            raw_data.date || raw_data.start_epoch * 1000 || raw_data.start * 1000 || raw_data.Start;\n        const start = dayjs(time).startOf('m');\n        this.date = !time\n            ? start.minute(Math.ceil(start.minute() / 5) * 5).valueOf()\n            : start.valueOf();\n        this.duration =\n            raw_data.duration ||\n            dayjs(raw_data.end_epoch * 1000 || raw_data.end * 1000 || raw_data.End).diff(\n                start,\n                'm'\n            ) ||\n            60;\n        // if it exists as a key, use the value directly.\n        // if we initialize without a value, switch to checking duration.\n        // This fixes MCK-826\n        if ('all_day' in raw_data) {\n            this.all_day = raw_data.all_day;\n        } else {\n            this.all_day = !!raw_data.all_day || this.duration > 23 * 60;\n        }\n        if (this.all_day) {\n            this.date = dayjs(this.date).startOf('d').valueOf();\n        }\n        this.body =\n            (typeof raw_data.body === 'string' ? raw_data.body : '') || raw_data.description;\n        this.class =\n            raw_data.booking_type ||\n            raw_data.class ||\n            (raw_data.visitors ? 'external' : null) ||\n            'internal';\n        this.attendees = (raw_data.attendees || raw_data._attendees || []).map((i) => new User(i));\n        this.organiser =\n            (raw_data.organizer || raw_data.organiser\n                ? new User(raw_data.organizer || raw_data.organiser)\n                : User.active_user) || new User();\n        this.creator =\n            raw_data.booked_by || raw_data.creator\n                ? new User(raw_data.booked_by || raw_data.creator)\n                : this.organiser;\n        this.location_name = raw_data.location_name || '';\n        this.setup = raw_data.setup || 0;\n        this.breakdown = raw_data.breakdown || 0;\n        this.recurrence = raw_data.recurrence || raw_data.recurr || {};\n        if (this.recurrence.end && this.recurrence.end < new Date().getTime()) {\n            (this as any).recurrence = {\n                ...this.recurrence,\n                start: this.recurrence.start,\n                end: this.recurrence.end,\n            };\n        }\n        this.recurrence = {\n            ...this.recurrence,\n            series_id: raw_data.seriesMasterId,\n        };\n        this.notes = raw_data.notes || [];\n        this.equipment_codes = raw_data.equipment_codes || raw_data.equipment_code || {};\n        this.expected_attendees = raw_data.expected_attendees || {};\n        this.approval_status = raw_data.approval_status || raw_data.status || {};\n        this.checked_in = raw_data.checked_in || raw_data.checkins || [];\n        this.notify_users = raw_data.notify_users || [];\n        if (raw_data.description && !this.notes.find((i) => i.type === 'description')) {\n            this.notes = [\n                ...this.notes,\n                {\n                    type: 'description',\n                    date: -1,\n                    message: raw_data.description,\n                    author: this.organiser.email,\n                },\n            ];\n        }\n        this._display = {\n            date: start.format('DD MMM YYYY'),\n            time: `${start.format('h:mma')} - ${dayjs(start)\n                .add(this.duration, 'm')\n                .format('h:mma')}`,\n            start: start.format('h:mma'),\n            end: dayjs(start).add(this.duration, 'm').format('h:mma'),\n            duration: humaniseDuration(this.duration),\n        };\n        const space_ids = unique(\n            raw_data.room_ids || raw_data.room_id || raw_data._space_list || []\n        );\n        const space_service = ServiceManager.serviceFor(Space);\n        if (space_service) {\n            this.space_list = space_ids.map((id) => {\n                return space_service.find(id) || new Space({ id, name: id, email: id });\n            });\n        } else {\n            this.space_list = space_ids.map((id) => new Space({ id, name: id, email: id }));\n        }\n        if (raw_data.show_as && raw_data.show_as === 'cancelled') {\n            this.space_list.forEach((space) => (this.approval_status[space.email] = 'declined'));\n        }\n        this.catering = (raw_data.catering instanceof Array ? raw_data.catering : []).map(\n            (i) => new CateringOrder(i)\n        );\n        this.has_catering = !!(raw_data.has_catering || (this.catering && this.catering.length));\n    }\n\n    /** Whether booking has been declined */\n    public get declined(): boolean {\n        if (this.location_name.toLowerCase().includes('decline')) {\n            return true;\n        }\n        for (const space of this.space_list) {\n            if ((this.approval_status[space.email] || '').indexOf('decline') >= 0) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /** Whether booking has been approved */\n    public get approved(): boolean {\n        return !this.declined && !this.tentative;\n    }\n\n    /** Whether booking is tentative */\n    public get tentative(): boolean {\n        for (const space of this.space_list) {\n            if (\n                this.approval_status[space.email] &&\n                this.approval_status[space.email].indexOf('tentative') >= 0\n            ) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /** Whether booking contains external visitors in the attendee list */\n    public get has_visitors(): boolean {\n        return this.attendees.reduce((a, v) => a || v.external, false);\n    }\n\n    /** Status of the booking */\n    public get status(): 'future' | 'upcoming' | 'done' | 'started' | 'in_progress' {\n        const now = dayjs();\n        const date = dayjs(this.date);\n        if (now.isBefore(date.subtract(15, 'm'), 'm')) {\n            return 'future';\n        } else if (now.isBefore(date, 'm')) {\n            return 'upcoming';\n        } else if (now.isBefore(date.add(15, 'm'), 'm')) {\n            return 'started';\n        } else if (now.isBefore(date.add(this.duration, 'm'), 'm')) {\n            return 'in_progress';\n        }\n        return 'done';\n    }\n\n    /** Description of the booking purpose */\n    public get description(): string {\n        const note = (this.notes || []).find((i) => i.type === 'description');\n        return note ? note.message : '';\n    }\n\n    /** Get the first space from the space list */\n    public get space(): Space {\n        return this.space_list[0] || ({ level: { name: '<No Location>' } } as any);\n    }\n\n    /** Display value for the date */\n    public get date_string(): string {\n        return this._display.date;\n    }\n    /** Display valuie for the start and end times of the booking */\n    public get time_period(): string {\n        return this._display.time;\n    }\n    /** Display value for the start time of the booking */\n    public get start_time(): string {\n        return this._display.start;\n    }\n    /** Display value for the end time of the booking */\n    public get end_time(): string {\n        return this._display.end;\n    }\n    /** Display value for the duration of the booking */\n    public get length_string(): string {\n        return this._display.duration;\n    }\n    /** Display value for the location of the booking */\n    public get location(): string {\n        return this.space_list.map((space) => space.name).join(', ') || 'No location set';\n    }\n    /** Display value for the level of the first space in the booking */\n    public get level(): string {\n        return this.space.level.name;\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): Booking {\n        return new Booking(this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): Booking {\n        return new Booking({\n            ...this.toJSON(),\n            id: null,\n            email: null,\n            icaluid: null,\n        });\n    }\n\n    /**\n     * Convert object into plain object\n     */\n    public toJSON(this: Booking): HashMap {\n        const data = super.toJSON();\n        const date = dayjs(data.date);\n        data.start = data.all_day ? date.startOf('d').unix() : date.unix();\n        data.end = date.add(data.duration || 60, 'm').unix();\n        data.auto_approve = data.space_list.map((space) => {\n            return !this.id || this.time_changed || !this.approval_status[space.email]\n                ? !space ||\n                      (space instanceof Space &&\n                          !space.byRequest({\n                              date: data.date,\n                              duration: data.duration,\n                              host: data.organiser,\n                          }))\n                : (this.approval_status[space.email] || '').indexOf('tentative') < 0;\n        });\n        if (data.body && !data.notes.find((note) => note.message === data.body)) {\n            data.notes = data.notes.filter((note) => note.type !== 'description');\n            data.notes.push({\n                type: 'description',\n                message: data.body,\n                author: this.creator.email,\n                date: dayjs().valueOf(),\n            } as BookingNote);\n            data.notes.sort((a, b) => b.date - a.date);\n        }\n        data.breakdown = data.breakdown || {};\n        data.setup = data.setup || {};\n        data.organiser = data.organiser.toJSON();\n        data.creator = data.creator.toJSON();\n        data.attendees = unique(\n            [data.organiser].concat(data.attendees.map((i) => i.toJSON())),\n            'email'\n        );\n        data.notify_users = [data.organiser.email];\n        data.room_ids = data.space_list.map((space) => space.email);\n        data.catering = data.catering.filter((order) => data.room_ids.includes(order.location_id));\n        data.catering = mergeCateringOrders(data.catering);\n        data.old_date = this.date;\n        if (data.id) {\n            data.from_room = this.space ? this.space.email : '';\n        }\n        data.description = data.body;\n        data.recurr = data.recurrence;\n        data.booking_type = data.class || data.booking_type;\n        if (data.all_day) {\n            data.all_day = date.format('YYYY-MM-DD');\n        }\n        delete data.class;\n        delete data.body;\n        delete data.type;\n        delete data.recurrence;\n        delete data.space_list;\n        delete data.date;\n        delete data.duration;\n        delete data.display;\n        delete data.email;\n        delete data.name;\n        return data;\n    }\n}\n\n/**\n * Merge catering orders with same time and location\n * @param order_list List of catering orders\n */\nexport function mergeCateringOrders(order_list: CateringOrder[]) {\n    for (let i = 0; i < order_list.length; i++) {\n        const orders = order_list.filter(\n            (order) =>\n                order.location_id === order_list[i].location_id &&\n                order.delivery_time === order_list[i].delivery_time\n        );\n        if (orders.length > 1) {\n            const new_list = order_list.filter(\n                (order) =>\n                    !(order.location_id === order_list[i].location_id &&\n                    order.delivery_time === order_list[i].delivery_time)\n            );\n            new_list.push(new CateringOrder({\n                ...order_list[i],\n                items: flatten(orders.map(order => order.items))\n            }));\n            order_list = new_list;\n            i = 0;\n        }\n    }\n    return order_list;\n}\n","import { AbstractControl, FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as dayjs from 'dayjs';\nimport { AvailableBookingFields } from 'src/app/shared/utilities/settings.interfaces';\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { validateEndTime } from 'src/app/shared/utilities/validation.utilities';\nimport { humaniseDuration, timeFormatString } from '../../../shared/utilities/general.utilities';\nimport { CateringOrder } from '../catering/catering-order.class';\nimport { ServiceManager } from '../service-manager.class';\nimport { User } from '../users/user.class';\nimport { Booking } from './booking.class';\nimport { BookingRule, SpaceCheckOptions, SpaceRuleOptions, SpaceRules } from './booking.interfaces';\nimport MockDate from 'mockdate';\n\nconst MINUTE = 1;\nconst HOUR = 60;\nconst DAY = 24 * HOUR;\nconst WEEK = 7 * DAY;\nconst MONTH = 30 * DAY;\n\nconst DURATION_MAP: { [duration: string]: number } = {\n    month: MONTH,\n    months: MONTH,\n    week: WEEK,\n    weeks: WEEK,\n    day: DAY,\n    days: DAY,\n    hour: HOUR,\n    hours: HOUR,\n    minute: MINUTE,\n    minutes: MINUTE,\n};\n\n/**\n * August 13, 2020 at 7:22:12 UTC\n */\nconst initialTime = 1597346532 * 1000;\n\nexport const mockDate = () => MockDate.set(initialTime);\n\nconst BOOKING_COUNT = 0;\nlet BOOKING_DATE = dayjs().hour(6).minute(0).subtract(1, 'd').startOf('m');\n\n/**\n * Set the initial time used for generating mock bookings\n * @param time New initial time as ms from UTC epoch\n */\nexport function setMockBookingStartDatetime(time: number) {\n    BOOKING_DATE = dayjs(time).startOf('m');\n}\n\nexport interface IBookingSlot {\n    start: number;\n    end: number;\n}\n\n/**\n * Generate a list of free time slots between the given bookings\n * @param list List of bookings to find slots between\n * @param min_size Minimum length of a free slot in minutes\n */\nexport function getFreeBookingSlots(list: Booking[], min_size: number = 30): IBookingSlot[] {\n    /* istanbul ignore else */\n    if (!list) {\n        return [\n            {\n                start: 0,\n                end: dayjs().startOf('m').valueOf() * 10,\n            },\n        ];\n    }\n    const slots: IBookingSlot[] = [];\n    let start = dayjs(0);\n    list.sort((a, b) => a.date - b.date);\n    for (const booking of list) {\n        const bkn_start = dayjs(booking.date);\n        const bkn_end = bkn_start.add(booking.duration, 'm');\n        if (bkn_start.isAfter(start)) {\n            const diff = Math.abs(bkn_start.diff(start, 'm'));\n            /* istanbul ignore else */\n            if (diff >= min_size) {\n                slots.push({ start: start.valueOf(), end: bkn_start.valueOf() });\n            }\n            start = bkn_end;\n        } else if (start.startOf('m').valueOf() === bkn_start.startOf('m').valueOf()) {\n            start = bkn_end;\n        }\n    }\n    slots.push({\n        start: start.valueOf(),\n        end: dayjs().startOf('m').valueOf() * 10,\n    });\n    return slots;\n}\n\n/**\n * Get the next free time slot from the given bookings\n * @param list List of bookings to find the next slot\n * @param date Date to find next slot after in ms since UTC epoch\n * @param min_size Minimum length of the free slot in minutes\n */\nexport function getNextFreeBookingSlot(\n    list: Booking[],\n    date: number = dayjs().valueOf(),\n    min_size: number = 30\n): IBookingSlot {\n    const slots = getFreeBookingSlots(list, min_size);\n    const time = dayjs(date).startOf('m').second(1);\n    for (const block of slots) {\n        const start = dayjs(block.start).startOf('m');\n        const end = dayjs(block.end).startOf('m');\n        if (start.isAfter(time, 's')) {\n            return block;\n        } else if (time.isBefore(end, 's')) {\n            const duration = end.diff(time, 'm');\n            /* istanbul ignore else */\n            if (duration >= min_size) {\n                return block;\n            }\n        }\n    }\n    return slots[slots.length - 1];\n}\n\n/**\n * Generate form fields for the given booking\n * @param booking Booking to generate form for\n * @param current_user Current user of the system to default as the host\n */\nexport function generateBookingForm(\n    booking: Booking,\n    use_fields: AvailableBookingFields[]\n): FormGroup {\n    if (!booking) {\n        throw Error('No booking passed');\n    }\n    const user_service = ServiceManager.serviceFor(User);\n    const current_user =\n        user_service.current ||\n        new User({ id: 'local-user', name: 'Local User', email: 'local@place.tech' });\n    const fields: HashMap<FormControl> = {\n        id: new FormControl(booking.id || ''),\n        space_list: new FormControl(booking.space_list, []),\n        date: new FormControl(booking.date, [Validators.required]),\n        duration: new FormControl(booking.duration),\n        organiser: new FormControl(booking.organiser || current_user, [Validators.required]),\n        attendees: new FormControl(booking.attendees, []),\n        title: new FormControl(booking.title || '', [Validators.required]),\n        booking_type: new FormControl(booking.class),\n        body: new FormControl(booking.body),\n        notes: new FormControl(booking.notes),\n        equipment_codes: new FormControl(booking.equipment_codes),\n        expected_attendees: new FormControl(booking.expected_attendees),\n        catering: new FormControl(\n            booking.catering.map(\n                (order) => new CateringOrder({ ...order, booking_date: booking.date })\n            )\n        ),\n        recurrence: new FormControl(booking.recurrence),\n        all_day: new FormControl(!!booking.all_day),\n        has_catering: new FormControl(!!booking.has_catering),\n        needs_space: new FormControl(true),\n    };\n    fields.duration.setValidators([Validators.required, validateEndTime(fields.date)]);\n    /* istanbul ignore else */\n    if (booking.id && booking.id !== 'ad-hoc') {\n        fields.organiser.disable();\n        /* istanbul ignore else */\n        if (dayjs(booking.date).isBefore(dayjs(), 'm')) {\n            fields.date.disable();\n        }\n    } else {\n        fields.date.setValidators([Validators.required, isFuture]);\n        fields.date.updateValueAndValidity();\n    }\n    let list_length = -1;\n    fields.space_list.valueChanges.subscribe((list) => {\n        const expected = fields.expected_attendees.value || {};\n        const matches = Object.keys(expected).filter((key) =>\n            list.find((space) => space.email === key)\n        ).length;\n        if (list && list.length && matches === 0) {\n            const codes = fields.equipment_codes.value || {};\n            if (Object.keys(expected).length >= 0 || Object.keys(codes).length >= 0) {\n                const key = Object.keys(expected)[0] || Object.keys(codes)[0];\n                const new_expected = {};\n                const new_codes = {};\n                const notes = fields.notes.value;\n                notes.forEach((note) => (note.space === key ? (note.space = list[0].email) : ''));\n                new_expected[list[0].email] = expected[key];\n                new_codes[list[0].email] = codes[key];\n                fields.expected_attendees.setValue(new_expected);\n                fields.equipment_codes.setValue(new_codes);\n            }\n        }\n        list_length = list.length;\n    });\n    fields.date.valueChanges.subscribe((_) => {\n        fields.duration.updateValueAndValidity();\n    });\n    fields.needs_space.valueChanges.subscribe((space_needed) => {\n        if (!space_needed) {\n            fields.space_list.setValue([]);\n        }\n    });\n    fields.has_catering.valueChanges.subscribe((has_catering) => {\n        if (!has_catering) {\n            fields.catering.setValue([]);\n        }\n    });\n    const simplified_fields: HashMap<FormControl> = [\n        'id',\n        'space_list',\n        'space_ids',\n        'notes',\n        'booking_type',\n        'equipment_codes',\n        'expected_attendees',\n        ...use_fields,\n    ].reduce((map, key) => {\n        /* istanbul ignore else */\n        if (fields[key]) {\n            map[key] = fields[key];\n        }\n        return map;\n    }, {});\n    if (simplified_fields.all_day) {\n        const handleAllDay = (value) => {\n            if (value) {\n                simplified_fields.date.setValidators([Validators.required]);\n                simplified_fields.date.updateValueAndValidity();\n                simplified_fields.duration.disable();\n            } else {\n                simplified_fields.date.setValidators([Validators.required, isFuture]);\n                simplified_fields.date.updateValueAndValidity();\n                simplified_fields.duration.enable();\n            }\n        };\n        simplified_fields.all_day.valueChanges.subscribe(handleAllDay);\n        handleAllDay(simplified_fields.all_day.value);\n    }\n    // Generate form group for booking item\n    const form = new FormGroup(simplified_fields);\n    return form;\n}\n/**\n * Validate whether date is in the future\n * @param control Control to check value\n */\nexport function isFuture(control: AbstractControl) {\n    const now = dayjs().startOf('m');\n    const date = dayjs(control.value);\n    return date.isBefore(now.subtract(5, 'm'), 's')\n        ? { date: 'Date needs to be in the future' }\n        : null;\n}\n\n/**\n * Get booking rules for the given user and space\n * @param user User to determine applicable rules\n * @param space Space to get rules for\n * @param time Booking start time in ms since UTC epoch\n * @param rules List of booking rules for the building\n */\nexport function rulesForSpace(options: SpaceRuleOptions): SpaceRules {\n    if (!options) {\n        throw Error('Options are needed to check for rule matches');\n    }\n    const space_rules_for_user: SpaceRules = {\n        auto_approve: true,\n        hide: true,\n    };\n    let match = false;\n    /* istanbul ignore else */\n    if (options.space) {\n        for (const type in options.rules) {\n            if (\n                options.rules.hasOwnProperty(type) &&\n                options.rules[type] instanceof Array &&\n                options.space.zones.find((zone) => zone === type)\n            ) {\n                for (const rule_block of options.rules[type]) {\n                    /* istanbul ignore else */\n                    if (\n                        checkRules({\n                            user: options.user,\n                            space: options.space,\n                            time: options.time,\n                            recurr_end: options.recurr_end,\n                            duration: options.duration,\n                            rules: rule_block.conditions,\n                        })\n                    ) {\n                        const ruleset = rule_block.rules;\n                        const conditions = rule_block.conditions;\n                        space_rules_for_user.hide = false;\n                        /* istanbul ignore else */\n                        if (conditions.max_length) {\n                            space_rules_for_user.max_length = stringToMinutes(\n                                conditions.max_length as string\n                            );\n                        }\n                        /* istanbul ignore else */\n                        if (conditions.min_length) {\n                            space_rules_for_user.min_length = stringToMinutes(\n                                conditions.min_length as string\n                            );\n                        }\n                        // NOTE: use max_length in conditions instead of book_length in rules\n                        // if (ruleset.book_length) {\n                        //     space_rules_for_user.max_length = stringToMinutes(ruleset.book_length as string);\n                        // }\n                        /* istanbul ignore else */\n                        if (ruleset.auto_approve !== undefined) {\n                            space_rules_for_user.auto_approve = ruleset.auto_approve;\n                        }\n                        match = true;\n                        break;\n                    }\n                }\n            }\n            /* istanbul ignore else */\n            if (!space_rules_for_user.hide) {\n                break;\n            }\n        }\n    }\n    if (!match) {\n        space_rules_for_user.hide = true;\n    }\n    return space_rules_for_user;\n}\n\n/**\n * Check if user matches the given ruleset\n * @param user User to determine applicable rules\n * @param space Space to get rules for\n * @param time Booking start time in ms since UTC epoch\n * @param rules List of booking rules for the building\n */\nfunction checkRules(options: SpaceCheckOptions): boolean {\n    /* istanbul ignore else */\n    if (options.rules) {\n        const time = dayjs(options.time);\n        const recurr = options.recurr_end ? dayjs(options.recurr_end) : dayjs();\n        const count = Object.keys(options.rules).length;\n        let matches = 0;\n        Object.keys(options.rules).forEach((key) => {\n            let counter = 0;\n            const condition: string[] =\n                options.rules[key] instanceof Array\n                    ? (options.rules[key] as [])\n                    : [options.rules[key] as string];\n            switch (key) {\n                case 'groups':\n                    /* istanbul ignore else */\n                    if (options.user && options.user.groups) {\n                        counter = 0;\n                        condition.forEach((i) =>\n                            options.user.groups.find((j) => j === i) ? counter++ : null\n                        );\n                        /* istanbul ignore else */\n                        if (counter > 0) {\n                            matches++;\n                        }\n                    }\n                    break;\n                case 'locations':\n                    /* istanbul ignore else */\n                    if (options.user && options.user.location) {\n                        counter = 0;\n                        condition.forEach((i) =>\n                            (options.user.last_location.name || '').indexOf(i) >= 0\n                                ? counter++\n                                : null\n                        );\n                        /* istanbul ignore else */\n                        if (counter >= options.rules[key].length) {\n                            matches++;\n                        }\n                    }\n                    break;\n                case 'is_before':\n                    /* istanbul ignore else */\n                    if (options.time) {\n                        const duration = stringToMinutes(condition[0]);\n                        const check = dayjs().add(duration, 'm');\n                        let match = time.isBefore(check, 'm');\n                        /* istanbul ignore else */\n                        if (recurr) {\n                            match = match && recurr.isBefore(check, 'm');\n                        }\n                        matches += match ? 1 : 0;\n                    }\n                    break;\n                case 'is_after':\n                    /* istanbul ignore else */\n                    if (options.time) {\n                        const duration = stringToMinutes(condition[0]);\n                        const check = dayjs().add(duration, 'm');\n                        time.isAfter(check, 'm') ? matches++ : '';\n                    }\n                    break;\n                case 'min_length':\n                    /* istanbul ignore else */\n                    if (options.duration) {\n                        matches += durationGreaterThanOrEqual(options.duration, condition[0]) ? 1 : 0;\n                    }\n                    break;\n                case 'max_length':\n                    /* istanbul ignore else */\n                    if (options.duration) {\n                        durationGreaterThanOrEqual(condition[0], options.duration) ? matches++ : '';\n                    }\n                    break;\n            }\n        });\n        return matches >= count;\n    }\n    return false;\n}\n\n/**\n * Get minimum duration from ruleset in minutes\n * Default to 5min\n */\nexport function getMinLength(rule_list: HashMap<BookingRule[]>): number {\n    return Object.values(rule_list).reduce((min, block) => {\n        const min_block = block.reduce((min_length, el) => {\n            if (el.conditions.min_length && stringToMinutes(el.conditions.min_length) > min) {\n                return stringToMinutes(el.conditions.min_length);\n            } else {\n                return min_length;\n            }\n        }, 5);\n        if (min_block > min) {\n            return min_block;\n        } else {\n            return min;\n        }\n    }, 5) as number;\n}\n\n/**\n * Whether the first input is greater than the last. Converts duration strings into minutes\n * @param duration_1 First input can be a number in minutes or a duration string e.g. `1 hour`\n * @param duration_2 Second input can be a number in minutes or a duration string e.g. `30 minutes`\n */\nexport function durationGreaterThanOrEqual(\n    duration_1: string | number,\n    duration_2: string | number\n) {\n    const first: number = typeof duration_1 === 'string' ? stringToMinutes(duration_1) : duration_1;\n    const second: number =\n        typeof duration_2 === 'string' ? stringToMinutes(duration_2) : duration_2;\n    return first >= second;\n}\n\n/**\n * Conver time string into minutes\n * @param str timestring e.g. `'1 day'`, `'15 minutes'`, `'2 weeks'`\n */\nexport function stringToMinutes(str: string): number {\n    const parts = str.split(' ');\n    return +parts[0] * DURATION_MAP[parts[1]];\n}\n\n/**\n * Get current status within bookings\n * @param bookings List of bookings\n * @param host Host of the new event\n * @param date Datetime of the new event\n */\nexport function statusFromBookings(\n    bookings: Booking[] = [],\n    bookable: boolean = true,\n    requestable: boolean = false,\n    date: number = dayjs().valueOf()\n) {\n    const free_slots = getFreeBookingSlots(bookings.filter((bkn) => !bkn.declined));\n    const now = dayjs(date);\n    const next_free_slot = free_slots.find((slot) => {\n        const start = dayjs(slot.start);\n        const end = dayjs(slot.end);\n        return start.isAfter(now) || (now.isAfter(start, 's') && now.isBefore(end, 'm'));\n    });\n    const start = dayjs(next_free_slot.start);\n    const end = dayjs(next_free_slot.end);\n    const currently_free = now.isAfter(start, 's') && now.isBefore(end, 'm');\n    const time_until_next_block = humaniseDuration(\n        currently_free ? end.diff(now, 'm') : start.diff(now, 'm'),\n        true\n    );\n    const free_tomorrow = !currently_free && !start.isSame(now, 'd');\n    const free_today = currently_free && !end.isSame(now, 'd');\n    return {\n        status: !bookable\n            ? 'Not Bookable'\n            : currently_free\n            ? requestable\n                ? 'Available by Request'\n                : 'Available'\n            : 'Meeting in Progress',\n        available_until: free_today\n            ? 'No meetings today'\n            : currently_free\n            ? `Free until ${end.format(timeFormatString())}(${time_until_next_block})`\n            : free_tomorrow\n            ? 'Unavailable today'\n            : `Free at ${start.format(timeFormatString())}(${time_until_next_block})`,\n    };\n}\n\nexport function timePeriodsIntersect(\n    start1: number,\n    end1: number,\n    start2: number,\n    end2: number,\n    type = ''\n) {\n    return (\n        (start1 >= start2 && start1 < end2) ||\n        (end1 > start2 && end1 <= end2) ||\n        (start2 >= start1 && start2 < end1) ||\n        (end2 > start1 && end2 <= end1)\n    );\n}\n","\nimport { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\n\nimport { BaseAPIService } from '../base.service';\nimport { Booking } from './booking.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\nimport { ServiceManager } from '../service-manager.class';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class BookingsService extends BaseAPIService<Booking> {\n    constructor(protected _composer: ComposerService) {\n        super(_composer);\n        ServiceManager.setService(Booking, this);\n        this._name = 'Bookings';\n        this._api_route = 'bookings';\n        this._compare = (a, b) => !(a.id || '').localeCompare(b.id) || !(a.icaluid || '').localeCompare(b.icaluid);\n    }\n\n    /**\n     * Save changes to the booking\n     * @param booking Booking update or add to the database\n     */\n    public save(booking: Booking): Promise<Booking> {\n        return booking.id ? this.update(booking.id, booking.toJSON()) : this.add(booking.toJSON());\n    }\n\n    public accept(id: string, fields?: HashMap) {\n        return this.task(id, 'accept', fields);\n    }\n\n    public decline(id: string, fields?: HashMap) {\n        return this.task(id, 'decline', fields);\n    }\n\n    protected process(raw_data: HashMap): Booking {\n        return new Booking(raw_data);\n    }\n}\n","import { CateringItem } from \"./catering-item.class\";\nimport { HashMap } from \"../../../shared/utilities/types.utilities\";\n\nexport class CateringCategory extends CateringItem {\n    /** Whether item is a category */\n    public is_category = true;\n\n    constructor(data: HashMap) {\n        super(data);\n        this.is_category = true;\n        (this as any).must_select = this.must_select || 0;\n        (this as any).order_anytime = !!data.order_anytime && this.package;\n    }\n\n    /**\n     * Convert class object into plain object\n     */\n    public toJSON(this: CateringItem): HashMap {\n        const obj = super.toJSON();\n        obj.order_anytime = !!obj.order_anytime && obj.package;\n        return obj;\n    }\n}\n","import { HashMap } from '../../../shared/utilities/types.utilities';\n\nexport interface CateringAvailability {\n    /** Month of the year that the item starts being available */\n    readonly from_month: number;\n    /** Month of the year that the item ends being available */\n    readonly to_month: number;\n}\n\nexport class CateringItem {\n    /** Unique ID of the catering item */\n    public readonly id: string;\n    /** Display name of the catering item */\n    public readonly name: string;\n    /** Description of the item */\n    public readonly description: string;\n    /** URL to the image associated with the item */\n    public readonly image_path: string;\n    /** Type of catering item */\n    public readonly catering_type: string;\n    /** Availability of the item */\n    public readonly available: CateringAvailability;\n    /** Time in hours that is needed to prepare the item beforehand */\n    public readonly prior_notice: number;\n    /** Cost of the item without decimals */\n    public readonly unit_price: number;\n    /** Cost of the item without decimals */\n    public readonly supplier_cost: number;\n    /** Minimum number this item allowed in an order */\n    public readonly minimum_quantity: number;\n    /** Maximum number this item allowed in an order */\n    public readonly maximum_quantity: number;\n    /** List of categories that the item is contained in */\n    public readonly parent_categories: readonly string[];\n    /** Allegen information associated with the item */\n    public readonly allergy: string;\n    /** Whether the supply of this item has run out */\n    public readonly out_of_stock: boolean;\n    /** Whether item can be ordered within the time limit set by the building */\n    public readonly order_anytime: boolean;\n    /** Number of child items that must be selected as part of the package */\n    public readonly must_select: number;\n    /** List of associated items */\n    public readonly items: CateringItem[];\n    public readonly availableItems: CateringItem[];\n    /** Whether child items are part of a package */\n    public readonly package: boolean;\n    /** List of zone ids associated with the category */\n    public readonly zones: readonly string[];\n    /** Number of this item in the assoicated order */\n    private _amount = 0;\n    /** Unique ID of the catering item */\n    private instance_id: string;\n    /** Whether item is a category */\n    public is_category: boolean = false;\n\n    public get can_order_anytime(): boolean {\n        return (\n            this.order_anytime ||\n            this.items.reduce(\n                (anytime, item) => anytime || item.can_order_anytime,\n                false,\n            )\n        );\n    }\n\n    /** Number of this item in the assoicated order */\n    public get amount(): number {\n        return this._amount || 0;\n    }\n\n    /** Total cost of the amount of items set */\n    public get total(): number {\n        return (this._amount * this.unit_price) || 0;\n    }\n\n    constructor(data: HashMap) {\n        this.instance_id = `item-${Math.floor(Math.random() * 999_999_999)}`;\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.is_category = data.is_category || !!(data.parent_categories || []).length || false;\n        this.available = {\n            from_month: (data.available ? data.available.from_month : data.available_from) || -1,\n            to_month: (data.available ? data.available.to_month : data.available_to) || -1,\n        };\n        this.description = data.description || '';\n        this.prior_notice = data.prior_notice || data.notice;\n        this.unit_price = data.unit_price || data.price || 0;\n        this.supplier_cost = data.supplier_cost;\n        this.minimum_quantity = Math.max(0, data.minimum_quantity || 0);\n        this.maximum_quantity = Math.max(1, data.maximum_quantity || 999);\n        this.parent_categories = data.category_ids || data.parent_categories || data.categories;\n        this.order_anytime = !!data.order_anytime;\n        this.image_path = data.image_path || '';\n        this.catering_type = data.catering_type;\n        this.must_select = data.must_select ?? 0;\n        this._amount = data._amount || data.amount || 0;\n        this.allergy = data.allergy || '';\n        const cateringItems: CateringItem[] = (data.items || []).map(item => new CateringItem(item));\n        this.items = cateringItems;\n        const filteredCateringItems = cateringItems.filter(c => !c.out_of_stock);\n        this.availableItems = filteredCateringItems;\n        this.out_of_stock = !!data.out_of_stock ||\n            // if original items are empty, we hit the bottom, so if we filter out items then its out of stock.\n            (cateringItems.length > 0 && filteredCateringItems.length === 0);\n        this.package = data.package === 'true' || data.package === true;\n        this.zones = data.zones && data.zones.length ? [...data.zones] : [];\n    }\n\n    public setAmount(amount: number = 0): void {\n        if (amount <= this._amount) {\n            if (amount < this.minimum_quantity) {\n                amount = 0;\n            }\n        } else {\n            if (amount < this.minimum_quantity) {\n                amount = this.minimum_quantity;\n            }\n        }\n        this._amount = Math.max(0, Math.min(this.maximum_quantity, amount));\n    }\n\n    /**\n     * Increase amount of the item the order\n     * @param amount Amount to increase by\n     */\n    public addToOrder(amount: number = 1) {\n        amount = Math.max(1, amount);\n        this._amount += amount;\n        if (this._amount < 0) {\n            this._amount = 0;\n        } else if (this._amount < this.minimum_quantity) {\n            this._amount = this.minimum_quantity;\n        } else if (this._amount > this.maximum_quantity) {\n            this._amount = this.maximum_quantity;\n        }\n    }\n\n    /**\n     * Decrease amount of the item the order\n     * @param amount Amount to decrease by\n     */\n    public removeFromOrder(amount: number = 1) {\n        amount = Math.max(1, amount);\n        this._amount -= amount;\n        if (this._amount < 0) {\n            this._amount = 0;\n        } else if (this._amount < this.minimum_quantity) {\n            this._amount = 0;\n        }\n    }\n\n    /**\n     * Convert class object into plain object\n     */\n    public toJSON(this: CateringItem): HashMap {\n        const obj: any = { ...this };\n        // Remove local private members\n        delete obj._changes;\n        delete obj._server_names;\n        // Convert remaining members to be public\n        obj.price = obj.unit_price;\n        obj.categories = obj.parent_categories;\n        const keys = Object.keys(obj);\n        for (const key of keys) {\n            if (key[0] === '_') {\n                const new_key = key.substr(1);\n                obj[new_key] = obj[key];\n                delete obj[key];\n            } else if (obj[key] === undefined) {\n                delete obj[key];\n            }\n        }\n        obj.items = obj.items.map((item: CateringItem) => item.toJSON());\n        return obj;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringCategory } from './catering-category.class';\nimport { BaseAPIService } from '../base.service';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CateringMenuService extends BaseAPIService<CateringItem | CateringCategory> {\n    constructor(protected _composer: ComposerService) {\n        super(_composer);\n        this._name = 'Catering Menu';\n        this._api_route = 'menu';\n    }\n\n    /**\n     * Convert user data to local format\n     * @param user User data\n     */\n    protected processItem(item: HashMap) {\n        return item.items ? new CateringCategory(item) : new CateringItem(item);\n    }\n}\n","import { CateringItem } from './catering-item.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\n\nimport { CateringCategory } from './catering-category.class';\nimport { Booking } from '../bookings/booking.class';\n\nimport * as dayjs from 'dayjs';\n\nexport type CateringOrderMutableProperties =\n    | 'items'\n    | 'location_id'\n    | 'location'\n    | 'delivery_time'\n    | 'charge_code'\n    | 'notes'\n    | 'status';\n\nexport type CateringOrderStatus = 'accepted' | 'preparing' | 'ready' | 'delivered' | 'cancelled';\n\nexport class CateringOrder {\n    /** Booking associated with the order */\n    public booking: Booking;\n    /** Whether the order status change is loading */\n    public loading: boolean;\n    /** Unique ID for the catering order */\n    readonly id: string;\n    /** Unique ID for the catering order */\n    readonly booking_id: string;\n    /** Number of minutes after the start of the associated meeting to delivery the order */\n    readonly booking_date: number = dayjs()\n        .startOf('m')\n        .valueOf();\n    /** Number of minutes after the start of the associated meeting to delivery the order */\n    readonly delivery_time: number = 0;\n    /** ID of the location to deliver the items to */\n    readonly location_id: string = '';\n    /** Display text for the location to deliver the items to */\n    readonly location: string = '';\n    /** Status of the catering order */\n    readonly status: CateringOrderStatus;\n    /** Whether items in the order need to be prepared in the kitchen */\n    readonly kitchen: boolean;\n    /** Whether items in the order are in the pantry */\n    readonly pantry: boolean;\n    /** List of items */\n    readonly items: readonly (CateringItem | CateringCategory)[] = [];\n    /** Creation time of the order */\n    readonly created_at: number;\n    /** Charge code associated with the order */\n    readonly charge_code: string;\n    /** Notes associated with the order */\n    readonly notes: string;\n    /** Mapping of properties to their changes */\n    private _changes: HashMap = {};\n    /** Map of local property names to server ones */\n    protected _server_names: HashMap<string> = {};\n    /** Currency code for the location of the order */\n    public symbol: string;\n    /** Whether the is an error with the order */\n    public error: boolean;\n\n    constructor(data: HashMap) {\n        this.id = data.id || `order-${Math.floor(Math.random() * 999_999_999)}`;\n        this.booking = data.booking;\n        this.delivery_time = typeof data.delivery_time === 'number' ? data.delivery_time : 0;\n        this.booking_date = data.booking_date;\n        this.location_id = data.location_id || data.location || (data.space ? data.space.id : '') || '';\n        this.location = data.location || (data.space ? data.space.name : '') || '';\n        this.status = data.status || 'accepted';\n        this.charge_code = data.charge_code || data.code;\n        this.notes = data.notes;\n        this.kitchen = data.kitchen instanceof Array ? !!data.kitchen.length : data.kitchen;\n        this.pantry = data.pantry instanceof Array ? !!data.pantry.length : data.pantry;\n        this.symbol = data.symbol || 'USD';\n        this.items = (data.items || [])\n            .map(item => (item.items ? new CateringCategory(item) : new CateringItem(item)))\n            .filter(item => !!item.amount);\n    }\n\n    /** Mapping of properties to their changes */\n    public get changes(): HashMap<any> {\n        return { ...this._changes } || {};\n    }\n\n    /** Display string for the types of items in the order */\n    public get type(): string {\n        let type = '';\n        /* istanbul ignore else */\n        if (this.kitchen) type += 'Kitchen';\n        /* istanbul ignore else */\n        if (this.pantry) {\n            /* istanbul ignore else */\n            if (type) type += ' + ';\n            type += 'Pantry';\n        }\n        return type;\n    }\n\n    /** Total cost of the order */\n    public get total(): number {\n        return this.items.reduce((total, item) => total + (item.total || 0), 0);\n    }\n\n    /** Total number of items in the order */\n    public get item_count(): number {\n        return this.items.reduce((total, item) => total + (item.amount || 0), 0);\n    }\n\n    /** Display string for the delivery time of the order */\n    public get deliver_at_time(): string {\n        const date = this.booking ? this.booking.date : this.booking_date;\n        return dayjs(date)\n            .add(this.delivery_time, 'm')\n            .format('h:mm A');\n    }\n\n    /** Display string for the delivery date of the order */\n    public get deliver_on_date(): string {\n        const date = this.booking ? this.booking.date : this.booking_date;\n        return dayjs(date)\n            .add(this.delivery_time, 'm')\n            .format('DD MMM YYYY');\n    }\n\n    /** Whether there are any pending changes to be saved */\n    public get has_changes(): boolean {\n        return !!Object.keys(this._changes).length;\n    }\n\n    /**\n     * Store pending changes for the given property\n     * @param name Property to update value\n     * @param value New value to save for property\n     */\n    public storePendingChanges(name: CateringOrderMutableProperties, value: any): void {\n        this._changes[name] = value;\n    }\n\n    /** Clear any changes waiting to be saved */\n    public clearPendingChanges() {\n        delete this._changes;\n        this._changes = {};\n    }\n\n    /**\n     * Convert class object into plain object\n     */\n    public toJSON(this: CateringOrder, with_changes: boolean = true): HashMap {\n        const obj: any = { ...this };\n        // Remove local private members\n        delete obj._changes;\n        delete obj._server_names;\n        // Remove local public members\n        delete obj.booking;\n        delete obj.loading;\n\n        // Convert remaining members to be public\n        const keys = Object.keys(obj);\n        for (const key of keys) {\n            if (key[0] === '_') {\n                const new_key = this._server_names[key.substr(1)] || key.substr(1);\n                obj[new_key] = obj[key];\n                delete obj[key];\n            } else if (obj[key] === undefined) {\n                delete obj[key];\n            }\n        }\n        obj.items = obj.items.map((item: CateringItem) => item.toJSON());\n        return with_changes ? { ...obj, ...this._changes } : obj;\n    }\n}\n","import { HashMap } from 'src/app/shared/utilities/types.utilities';\n\nimport { BuildingLevel } from '../organisation/level.class';\nimport { Organisation } from '../organisation/organisation.class';\nimport { ServiceManager } from '../service-manager.class';\n\nexport class MapLocation {\n    /** ID of the element on the associated map */\n    public readonly id?: string;\n    /** Name of the location */\n    public readonly name?: string;\n    /** X coordinate of the location */\n    public readonly x?: number;\n    /** Y coordinate of the location */\n    public readonly y?: number;\n    /** Level details for the location */\n    public readonly level: BuildingLevel;\n    /** Whether the position is fixed */\n    public readonly fixed: boolean;\n    /** Accuracy of the location when not fixed */\n    public readonly confidence?: number;\n    /** Whether location is at a desk */\n    public readonly at_desk?: boolean;\n    /** Whether location is set */\n    public readonly empty: boolean;\n    /** Service for managing buildings */\n    protected get _service() {\n        return ServiceManager.serviceFor(MapLocation);\n    }\n\n    /** Display string for the building and level of the location */\n    public get display(): string {\n        const service = ServiceManager.serviceFor(Organisation);\n        if (!service) {\n            return this.level.name;\n        }\n        const bld = service.buildings.find((bld) => bld.id === this.level.building_id);\n        return bld ? `${bld.name}, ${this.level.name}` : this.level.name;\n    }\n\n    /** Whether location is in a different building from the active one */\n    public get in_another_building(): boolean {\n        const service = ServiceManager.serviceFor(Organisation);\n        return service && service.building.id !== this.level.building_id;\n    }\n\n    constructor(raw_data: HashMap) {\n        this.id = raw_data.id || raw_data.map_id || raw_data.desk_id;\n        this.name = raw_data.name || '';\n        this.x = raw_data.x\n            ? Math.floor(this.normalise(raw_data.x, raw_data.x_max || 10000) * 10000)\n            : null;\n        this.y = raw_data.y\n            ? Math.floor(this.normalise(raw_data.y, raw_data.x_max || 10000) * 10000)\n            : null;\n        const service = ServiceManager.serviceFor(Organisation);\n        this.level =\n            raw_data.level instanceof BuildingLevel\n                ? raw_data.level\n                : service\n                ? service.levelWithID(raw_data.level)\n                : new BuildingLevel(raw_data.level);\n        this.fixed = this.x === null && this.y === null;\n        this.confidence = Math.max(5, Math.min(15, raw_data.confidence || 0));\n        this.at_desk = this.id && this.id.indexOf('area-') === 0;\n        this.empty = !(this.name && this.level && (this.id || this.x || this.y));\n    }\n\n    /** Normalise the given value within the max */\n    private normalise(value: number, max: number): number {\n        return value / (max * 1.0);\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport { HashMap, Identity } from '../../../shared/utilities/types.utilities';\nimport { getItemWithKeys } from '../../../shared/utilities/general.utilities';\nimport { BuildingLevel } from './level.class';\nimport { BookingRule } from '../bookings/booking.interfaces';\nimport { ServiceManager } from '../service-manager.class';\n\nexport interface IBuildingRoleUser {\n    name: string;\n    email: string;\n    phone: string;\n}\n\nexport interface LockerMap {\n    [zone: string]: {\n        [area: string]: {\n            [type: string]: (string | boolean)[][];\n        };\n    };\n}\n\nexport interface ICoordinates {\n    longitude: number;\n    latitude: number;\n}\n\nexport interface LevelFeature {\n    id: string;\n    level_id: string;\n    name: string;\n}\n\nexport interface BookingRuleDetails {\n    /** List of booking rules details for the building */\n    readonly rules: readonly string[];\n    /** Custom booking rules for the map */\n    readonly map_rules?: readonly string[];\n    /** Contact email address for the building */\n    readonly contact?: string;\n    /** Information string to display before the rule listings */\n    readonly info?: string;\n    /** Link for more details */\n    readonly link?: { url?: string, name?: string };\n    /**\n     * Allow buildings to define their own rules formats where needed or for special messages.\n     */\n    readonly custom_html?: string;\n}\n\nexport class Building extends BaseDataClass {\n    /** Service for managing buildings */\n    protected get _service() {\n        return ServiceManager.serviceFor(Building);\n    }\n\n    /** Engine Zone ID for the building */\n    public readonly zone_id: string;\n    /** Organisation Code for the building */\n    public readonly code: string;\n    /** Geographical address of the building */\n    public readonly address: string;\n    /** Details about the booking rules for the building */\n    public readonly booking_details: BookingRuleDetails;\n    /** Details about the booking rules for the building */\n    public readonly booking_rules: HashMap<readonly BookingRule[]>;\n    /** Number of hour before a booking catering is restricted */\n    public readonly catering_restricted_from: number;\n    /** Currency code for the country assoicated with the building */\n    public readonly currency: string;\n    /** Map of fields that are required on the form */\n    public readonly required: HashMap<boolean>;\n    /** IANA timezone database string for the location the building resides  */\n    public readonly timezone: string;\n    /** Whether catering is available in this building */\n    public readonly has_catering: boolean;\n    /** ID of the system used for the holding bay */\n    public readonly holding_bay: string;\n    /** ID of the system used for standalone visitors bookings */\n    public readonly visitor_space: string;\n    /** List of zones to determine sort order spaces */\n    public readonly sort_order: readonly string[];\n    /** Searchable map features */\n    public readonly searchables: readonly LevelFeature[];\n    /** List of available extras for the building */\n    public readonly extras: readonly Identity[];\n    /** List of available extra equipment for loan at the building */\n    public readonly loan_items: readonly Identity[];\n    /** List of available levels for the building */\n    public readonly levels: readonly BuildingLevel[];\n\n    public readonly catering_hours: { readonly start: number, readonly end: number };\n    /** Map of custom settings for the building */\n    private _settings: HashMap;\n    /** Map of roles and list of the associated users */\n    private _roles: HashMap<IBuildingRoleUser[]>;\n    /** Map of the locker ID arrays */\n    private _lockers: LockerMap;\n    /** Map of important system ids for the building */\n    private _systems: HashMap<string>;\n    /** Map of important phone numbers for the building */\n    private _phone_numbers: HashMap<string>;\n    /** Globe coordiates for the build */\n    private _location: ICoordinates;\n    /** List of zones associated with the building */\n    public readonly zones: readonly string[];\n\n    constructor(raw_data: HashMap) {\n        super(raw_data);\n        const settings = raw_data.settings || {};\n        const disc_info = settings.discovery_info || settings;\n        this.zone_id = raw_data.zone_id || raw_data.zone;\n        this.extras = (raw_data.extras || disc_info.extras || []).map(i => ({\n            id: i.extra_id || i.id,\n            name: i.extra_name || i.name,\n        }));\n        this.loan_items = (raw_data.loan_items || disc_info.loan_items || []).map(i => ({\n            id: i.extra_id || i.id,\n            name: i.extra_name || i.name,\n        }));\n        this.levels = (raw_data.levels || disc_info.levels || []).map(i => new BuildingLevel({\n            ...i,\n            building_id: this.id,\n        }));\n        this._roles = raw_data.roles || disc_info.roles || {};\n        this._lockers = raw_data.lockers || raw_data.locker_structure || disc_info.locker_structure || {};\n        this._systems = raw_data.systems || disc_info.systems || {};\n        this._settings = settings;\n        this._phone_numbers = raw_data.phone_numbers || disc_info.phone_numbers || {};\n        this._location = raw_data.location || disc_info.location || { longitude: null, latitude: null };\n        this.catering_hours = raw_data.catering_hours || disc_info.catering_hours || settings.catering_hours || {\n            start: 7,\n            end: 20,\n        };\n        const searchables = [];\n        if (raw_data.neighbourhoods) {\n            for (const lvl in raw_data.neighbourhoods) {\n                if (raw_data.neighbourhoods.hasOwnProperty(lvl)) {\n                    const lvl_features = raw_data.neighbourhoods[lvl] || {};\n                    for (const feature in lvl_features) {\n                        if (lvl_features.hasOwnProperty(feature)) {\n                            searchables.push({\n                                id: lvl_features[feature],\n                                name: feature,\n                                level_id: lvl,\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        this.searchables = searchables;\n        this.code = raw_data.code || disc_info.code || settings.code || '';\n        this.address = raw_data.address || disc_info.address || settings.address || '';\n        this.booking_details = raw_data.booking_details || disc_info.booking_details || settings.booking_details || {};\n        this.booking_rules = raw_data.booking_rules || disc_info.booking_rules || settings.booking_rules || {};\n        this.catering_restricted_from = raw_data.catering_restricted_from || disc_info.catering_restricted_from || settings.catering_restricted_from || 0;\n        this.currency = raw_data.currency || disc_info.currency || settings.currency || 'USD';\n        this.required = raw_data.required || disc_info.required || settings.required || {};\n        if (disc_info.requires_equipment_code) {\n            this.required.equipment_code = true;\n        }\n        if (disc_info.requires_expected_attendees) {\n            this.required.expected_attendees = true;\n        }\n        this.timezone = raw_data.timezone || disc_info.timezone || settings.timezone || '';\n        this.has_catering = raw_data.has_catering || disc_info.has_catering || settings.has_catering || false;\n        this.holding_bay = raw_data.holding_bay || disc_info.holding_bay || settings.holding_bay || '';\n        this.visitor_space = raw_data.visitor_space || disc_info.visitor_space || settings.visitor_space || '';\n        this.sort_order = raw_data.sort_order || disc_info.sort_order || settings.sort_order || [];\n    }\n\n    /**\n     * Get a custom building setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        const keys = key.split('.');\n        const value = getItemWithKeys(keys, this._settings);\n        return value;\n    }\n\n    /**\n     * Get list of users with the associated role\n     * @param name Role to find users for\n     */\n    public role(name: string): IBuildingRoleUser[] {\n        return [...(this._roles[name] || [])];\n    }\n\n    /**\n     * Get list of the names of available user role lists\n     */\n    public get role_names(): string[] {\n        return Object.keys(this._roles).filter(i => this._roles.hasOwnProperty(i));\n    }\n\n    /** Map of the locker ID arrays */\n    public get lockers(): LockerMap {\n        return { ...(this._lockers || {}) };\n    }\n\n    /** Map of important system ids for the building */\n    public get systems(): HashMap<string> {\n        return { ...(this._systems || {}) };\n    }\n\n    /** Map of important phone numbers for the building */\n    public get phone_numbers(): HashMap<string> {\n        return { ...(this._phone_numbers || {}) };\n    }\n\n    /** Real coordinates */\n    public get location(): ICoordinates {\n        return { ...this._location };\n    }\n\n    /**\n     * Get search map feature for the given level ID\n     * @param level_id ID of level to grab features for\n     */\n    public featuresForLevel(level_id: string): LevelFeature[] {\n        return (this.searchables || []).filter(i => i.level_id === level_id);\n    }\n\n    /**\n     * Building objects are readonly and cannot be changed\n     */\n    public async save(): Promise<Building> {\n        throw new Error('Building objects are readonly and cannot be changed');\n    }\n\n    /**\n     * Building objects are readonly and cannot be deleted\n     */\n    public async delete(): Promise<void> {\n        throw new Error('Building objects are readonly and cannot be deleted');\n    }\n}\n","import { HashMap } from 'src/app/shared/utilities/types.utilities';\n\n/** Building Level data */\nexport class BuildingLevel {\n    /** ID of the building level zone */\n    readonly id: string;\n    /** ID of the building zone associated with the level */\n    readonly building_id: string;\n    /** Name of the level */\n    readonly name: string;\n    /** Number or short identifier of the level */\n    readonly short_name: string;\n    /** Map URL for the level */\n    readonly map_url: string;\n    /** Usage type for the level */\n    readonly type: 'staff' | 'client' | 'any';\n    /** Setting for the level */\n    readonly settings: HashMap;\n\n    constructor(_data: HashMap = {}) {\n        this.id = _data.id || _data.level_id || '';\n        this.building_id = _data.bld_id || _data.building_id || '';\n        this.name = _data.name || _data.level_name || '';\n        const lower_name = this.name.toLowerCase();\n        const num = lower_name.indexOf('level') >= 0 ? lower_name.replace(/ ?level ?/gi, '') : lower_name.substr(0, 1).toUpperCase();\n        this.short_name = _data.short_name || num || '';\n        this.map_url = _data.map_url || '';\n        this.type = _data.type || _data.floor_type || 'any';\n        this.settings = _data.settings;\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\nimport { getItemWithKeys } from '../../../shared/utilities/general.utilities';\n\n/* istanbul ignore next */\n\nexport class Organisation extends BaseDataClass {\n    /** List of available building zone ids for the organisation */\n    public readonly available_buildings: readonly string[];\n    /** Map of custom settings for the building */\n    private _settings: HashMap;\n\n    constructor(raw_data: HashMap = {}) {\n        super(raw_data);\n        this._settings = raw_data.settings || {};\n        this.available_buildings = (raw_data.settings?.discovery_info?.buildings || []).map(\n            (bld) => bld.zone_id\n        );\n    }\n\n    /**\n     * Get a custom building setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        const keys = key.split('.');\n        const value = getItemWithKeys(keys, this._settings);\n        return value;\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { ComposerService } from '@placeos/composer';\n\nimport { BaseAPIService } from '../base.service';\nimport { Organisation } from './organisation.class';\nimport { Building } from './building.class';\nimport {\n    HashMap,\n    ApplicationLoadingState,\n    Identity,\n} from '../../../shared/utilities/types.utilities';\nimport { BuildingLevel } from './level.class';\nimport { User } from '../users/user.class';\nimport { first } from 'rxjs/operators';\nimport { ApplicationService } from '../../app.service';\nimport { ServiceManager } from '../service-manager.class';\nimport { UsersService } from '../users/users.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class OrganisationService extends BaseAPIService {\n    /** Organisation data for the application */\n    private _organisation: Organisation;\n    /** Actively displayed building */\n    private _active_building: string;\n\n    constructor(\n        protected _composer: ComposerService,\n        private _service: ApplicationService,\n        private _users: UsersService\n    ) {\n        super(_composer);\n        ServiceManager.setService(Organisation, this);\n        ServiceManager.setService(Building, this);\n        this._name = 'Organisation';\n        this._api_route = 'zones';\n        this.set('buildings', []);\n        this.set('active_building', null);\n        this._users.initialised.pipe(first((_) => _)).subscribe(() => this.init());\n    }\n\n    /**\n     * Add is not available on organisation service\n     */\n    public async add(form_data: HashMap, query_params?: HashMap): Promise<Organisation> {\n        throw new Error('Add is not available on the organisation service');\n    }\n\n    /**\n     * Update is not available on organisation service\n     */\n    public async update(\n        id: string,\n        form_data: HashMap,\n        query_params?: HashMap\n    ): Promise<Organisation> {\n        throw new Error('Update is not available on the organisation service');\n    }\n\n    /**\n     * Delete is not available on organisation service\n     */\n    public async delete(id: string): Promise<void> {\n        throw new Error('Delete is not available on the organisation service');\n    }\n\n    /**\n     * Get list of levels for the given building ID\n     * @param bld_id Building ID\n     */\n    public levels(bld_id: string): readonly BuildingLevel[] {\n        return (this.buildings.find((i) => i.id === bld_id) || ({} as Building)).levels;\n    }\n\n    /**\n     * Get a setting from the organisation or active building\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string) {\n        return this.building.setting(key) || this._organisation.setting(key);\n    }\n\n    /** Active building */\n    public get building(): Building {\n        return this.buildings.find((i) => i.id === this._active_building);\n    }\n\n    /** List of types of spaces */\n    public get space_types(): Identity[] {\n        return this.get('space_types') || [];\n    }\n\n    public set building(bld: Building) {\n        if (bld instanceof Building) {\n            this._active_building = bld.id;\n        } else {\n            this._active_building = bld;\n        }\n        this.set('active_building', this.building);\n        localStorage.setItem('PlaceOS.building', this._active_building);\n    }\n\n    /** List of buildings for the organisation */\n    public get buildings(): Building[] {\n        return this.get<Building[]>('buildings') || [];\n    }\n\n    /**\n     * Get list of available equipment\n     * @param id ID of the building to get the list from. i.e. Defaults to the active building\n     */\n    public getExtras(id: string, bld_id?: string) {\n        const bld = this.buildings.find((i) => i.id === bld_id) || this.building;\n        if (bld && id) {\n            return bld.extras.filter((i) => `${i.id}`.indexOf(id) >= 0);\n        }\n        return [];\n    }\n\n    /**\n     * Get the first level matching the list of given IDs\n     * @param ids List of ID to search with\n     */\n    public levelWithID(ids: string | string[]): BuildingLevel {\n        const list = ids instanceof Array ? ids : [ids];\n        const bld_list = this.buildings;\n        for (const id of list) {\n            for (const bld of bld_list) {\n                for (const lvl of bld.levels) {\n                    if (lvl.id === id) {\n                        return lvl;\n                    }\n                }\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Initialise service data\n     */\n    protected async load(): Promise<void> {\n        /* istanbul ignore else */\n        if (localStorage) {\n            this._active_building = localStorage.getItem(`STAFF.building`);\n        }\n        const loading: ApplicationLoadingState = this._service.get('loading') || {};\n        loading.organisation = { message: 'Loading organisation data', state: 'loading' };\n        await this.loadOrganisation();\n        loading.organisation = { message: 'Loading organisation data', state: 'complete' };\n        loading.buildings = { message: 'Loading building data', state: 'loading' };\n        this._service.set('loading', loading);\n        await this.loadBuildings();\n        loading.buildings = { message: 'Loading building data', state: 'complete' };\n        loading.levels = { message: 'Loading building floor data', state: 'loading' };\n        this._service.set('loading', loading);\n        await this.loadLevels();\n        loading.levels = { message: 'Loading building floor data', state: 'complete' };\n        this._service.set('loading', loading);\n        loading.space_types = { message: 'Loading space type data', state: 'loading' };\n        this._service.set('loading', loading);\n        await this.loadSpaceTypes();\n        loading.space_types = { message: 'Loading space type data', state: 'complete' };\n        this._service.set('loading', loading);\n        const user = this._users.current;\n        if (user) {\n            const id = localStorage.getItem('PlaceOS.building');\n            const building = this.buildings.find(bld => id && bld.id === id) || this.buildings.find((bld) => bld.code === user.location);\n            if (building) {\n                this._active_building = building.id;\n                this.set('active_building', building);\n            } else {\n                this._active_building = this.building.id;\n                this.set('active_building', this.building);\n            }\n        }\n    }\n\n    /**\n     * Load organisation data for application\n     */\n    public async loadOrganisation(): Promise<void> {\n        const org_data = await this.query({ tags: 'org', engine: true });\n        this._organisation = new Organisation(org_data[0]);\n        this.set('organisation', this._organisation);\n    }\n\n    /**\n     * Load building data for the organisation\n     */\n    public async loadBuildings(): Promise<void> {\n        const bld_data = await this.query({ tags: 'building', engine: true, limit: 1000 });\n        const buildings = (bld_data as HashMap[])\n            .map((i) => new Building(i))\n            .filter((bld) => this._organisation.available_buildings.includes(bld.id));\n        this.set('buildings', buildings);\n        /* istanbul ignore else */\n        if (!this._active_building && buildings && buildings.length > 0) {\n            this._active_building = buildings[0].id;\n        }\n    }\n\n    /**\n     * Load level data for the buildings\n     */\n    public async loadLevels(): Promise<void> {\n        const lvl_data = await this.query({ tags: 'level', engine: true, limit: 1000 });\n        const levels = (lvl_data as HashMap[]).map((i) => new BuildingLevel(i));\n        this.set('levels', levels);\n    }\n\n    /**\n     * Load space type data for the buildings\n     */\n    public async loadSpaceTypes(): Promise<void> {\n        const type_data = await this.query({ tags: 'room', engine: true, limit: 1000 });\n        const types = (type_data as HashMap[]).map((i) => ({ id: i.id, name: i.name }));\n        this.set('space_types', types);\n    }\n}\n","import { Type } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { BaseDataClass } from './base-api.class';\n\n\nexport interface ServiceLike<T = BaseDataClass> extends HashMap {\n    parent: any;\n    add: (_: HashMap) => Promise<T>;\n    update: (id: string, _: HashMap) => Promise<T>;\n    delete: (id: string, params?: HashMap) => Promise<void>;\n    task: (id: string, name: string, data: HashMap) => Promise<void>;\n    listen: <U = any>(prop: string) => Observable<U>;\n}\nexport interface ServiceProvider<T extends ServiceLike> {\n    provideFor: Type<any>;\n    useValue: T;\n}\n\nexport class ServiceManager {\n    /** Map of available services for child classes */\n    private static _service_list: ServiceProvider<any>[] = [];\n    /** Set the services used to handle data model requests */\n    public static setService(type: Type<any>, service: ServiceLike): void {\n        if (window.debug) {\n            (window as any).ServiceManager = this._service_list;\n        }\n        const index = ServiceManager._service_list.findIndex(provider => provider.provideFor === type);\n        if (index >= 0) {\n            ServiceManager._service_list.splice(index, 1, { provideFor: type, useValue: service });\n        } else {\n            ServiceManager._service_list.push({ provideFor: type, useValue: service });\n        }\n    }\n    /** Get the services used to handle data model requests */\n    public static serviceFor(type: Type<any>): ServiceLike<any> {\n        const provider = ServiceManager._service_list.find(provider => provider.provideFor === type) || { useValue: null };\n        return provider.useValue;\n    }\n\n    constructor() {\n        throw new Error('ServiceMananger is static class');\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport { HashMap, Identity } from '../../../shared/utilities/types.utilities';\nimport { Booking } from '../bookings/booking.class';\nimport { BuildingLevel } from '../organisation/level.class';\nimport { SpaceRules } from '../bookings/booking.interfaces';\nimport { rulesForSpace } from '../bookings/booking.utilities';\nimport { User } from '../users/user.class';\n\nimport * as dayjs from 'dayjs';\nimport { Building } from '../organisation/building.class';\nimport { Organisation } from '../organisation/organisation.class';\nimport { ServiceManager } from '../service-manager.class';\n\nexport interface ISpaceAvailabilityOptions {\n    /** Start date and time of the availability block */\n    date?: number;\n    /** Length of the availability block */\n    duration: number;\n    /**  */\n    id?: string;\n    /** List of spaces to look at the availability for */\n    room_ids?: string;\n    /** Whether the spaces looked at should be bookable */\n    bookable?: boolean;\n    /** List of spaces or zones to ignore */\n    ignore?: string;\n    /** List of zones to look at the availability for */\n    zone_ids?: string;\n    /** Whether space bookings should not be returned */\n    hide_bookings?: boolean;\n\n    clear?: boolean;\n}\n\nexport interface SpaceBookingRuleOptions {\n    date: number;\n    duration: number;\n    host: User;\n}\n\nconst OPTION_DEFAULTS: ISpaceAvailabilityOptions = {\n    duration: 60,\n};\n\nexport interface RecurrenceAvailability {\n    /** Unix epoch in seconds */\n    readonly date: number;\n    /** Whetehr space is available at this time */\n    readonly available: boolean;\n}\n\nexport class Space extends BaseDataClass {\n    /** Extends name for the space */\n    public readonly long_name: string;\n    /** CSS selector for the location of the space of the level's map */\n    public readonly map_id: string;\n    /** Type of space */\n    public readonly type: string;\n    /** Whether user can search for this space */\n    public readonly can_search: boolean;\n    /** Whether user can open the control URL if available */\n    public readonly can_control: boolean;\n    /** Hourly cost for using the space */\n    public readonly hourly_rate: number;\n    /** Whether space can be booked by users */\n    public readonly bookable: boolean;\n    /** People capacity of the space */\n    public readonly capacity: number;\n    /** Index to force order when sorting multiple spaces */\n    public readonly sort_priority: number;\n    /** Setup time for bookings in this space */\n    public readonly setup: number;\n    /** Breakdown time for bookings in this space */\n    public readonly breakdown: number;\n    /** Last returned availability result */\n    public readonly was_available: boolean;\n    /** URL for the control interface of the space */\n    public readonly support_url: boolean;\n    /** Display image for the space */\n    public readonly image: string;\n    /** List of recurrence occurrence availability details */\n    public readonly recurr_available: readonly RecurrenceAvailability[];\n    /** Engine zones associated with the space */\n    public readonly zones: readonly string[];\n    /** Bookings associated with the space */\n    public bookings: readonly Booking[];\n    /** List of ids for linked spaces */\n    public linked_spaces: readonly string[];\n    /** List of equipment available in the space */\n    private _extras: Identity[];\n\n    constructor(raw_data: HashMap = {}) {\n        super(raw_data);\n        const settings = raw_data.settings || {};\n\n        this.long_name = settings.long_name || raw_data.long_name;\n        this.map_id = settings.map_id || raw_data.map_id || '';\n        this.type =\n            settings.book_type ||\n            (this.level.settings || {}).book_type ||\n            raw_data.book_type ||\n            raw_data.type ||\n            'book';\n        this.can_search =\n            settings.searchable || raw_data.searchable || raw_data.can_search || false;\n        this.can_control =\n            settings.controlable || raw_data.controlable || raw_data.can_control || false;\n        this.hourly_rate = settings.cost_hour || raw_data.cost_hour || raw_data.hourly_rate || 0;\n        this.bookable = settings.bookable || raw_data.bookable || false;\n        this.setup = (settings.setup || 0) / 60 || raw_data.setup || 0;\n        this.breakdown = (settings.breakdown || 0) / 60 || raw_data.breakdown || 0;\n        this.capacity = raw_data.capacity || 0;\n        this.recurr_available = raw_data.recurr_available || settings.recurr_available || [];\n        const available = !!this.recurr_available.find((occurence) => !!occurence.available);\n        this.was_available =\n            settings.available ||\n            raw_data.available ||\n            available ||\n            false;\n        this.support_url = raw_data.support_url;\n        this.image = raw_data.image || '';\n\n        this.zones = raw_data.zones instanceof Array ? raw_data.zones : [];\n        const raw_bookings = settings.bookings || raw_data.bookings || [];\n        this.bookings = raw_bookings.map((bkn) => new Booking(bkn));\n        this._extras = [];\n        this.linked_spaces =\n            settings.linked_rooms || raw_data.linked_rooms || raw_data.linked_spaces || [];\n    }\n\n    /** Whether the space has a booking in progress */\n    public get in_use(): boolean {\n        return !!this.current;\n    }\n\n    /** Get any current in progress meeting */\n    public get current(): Booking {\n        const bookings = this.bookings;\n        for (const bkn of bookings) {\n            const status = bkn.status;\n            if (status === 'in_progress' || status === 'started') {\n                return bkn;\n            }\n        }\n        return null;\n    }\n\n    /** Get the next upcoming meeting */\n    public get next(): Booking {\n        const now = dayjs().valueOf();\n        const bookings = this.bookings;\n        for (const bkn of bookings) {\n            if (bkn.date > now) {\n                return bkn;\n            }\n        }\n        return null;\n    }\n\n    /** List of bookings for today */\n    public get todays_bookings(): readonly Booking[] {\n        return this.bookingsFor(dayjs().valueOf());\n    }\n\n    /** Level in which the space is associated */\n    public get level(): BuildingLevel {\n        const service = ServiceManager.serviceFor(Organisation);\n        return (service ? service.levelWithID(this.zones as any) : null) || new BuildingLevel({});\n    }\n\n    /**\n     * Get bookings for space\n     * @param date Date to filter bookings on\n     */\n    public bookingsFor(date?: number): readonly Booking[] {\n        const day = dayjs(date);\n        return this.bookings.filter((i) => {\n            const start = dayjs(i.date);\n            return start.isSame(day, 'd');\n        });\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): Space {\n        return new Space(this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): Space {\n        return new Space({ ...this, id: null, email: null, bookings: [] });\n    }\n\n    /**\n     * Generate the booking rules for space with given options\n     * @param options Conditions for generating the space rules\n     */\n    public rulesFor(options: SpaceBookingRuleOptions): SpaceRules {\n        const service = ServiceManager.serviceFor(Building);\n        const building = service?.buildings.find((bld) => this.zones.includes(bld.id));\n        if (!building) {\n            return { auto_approve: true, hide: false };\n        }\n        const { date, duration, host } = options;\n        const rules: SpaceRules = rulesForSpace({\n            time: date,\n            duration,\n            space: this,\n            user: host,\n            rules: building.booking_rules,\n        });\n        return rules;\n    }\n\n    /**\n     * Whether space can only be booked by request\n     * @param options Conditions for checking the space rules\n     */\n    public byRequest(options: SpaceBookingRuleOptions) {\n        const rules = this.rulesFor(options);\n        return !rules.auto_approve;\n    }\n}\n","import { HashMap } from '../../../shared/utilities/types.utilities';\nimport { ISpaceAvailabilityOptions, Space } from './space.class';\nimport { Building } from '../organisation/building.class';\n\nimport * as dayjs from 'dayjs';\n\nexport function availabilityOptionsToQuery(options: ISpaceAvailabilityOptions): HashMap {\n    let query: HashMap = {};\n    if (options) {\n        query = { ...options };\n        if (options.date) {\n            const date = dayjs(options.date).startOf('m');\n            query.available_from = date.unix();\n            query.available_to = date.add(options.duration || 60, 'm').unix();\n            delete query.date;\n            delete query.duration;\n        }\n    }\n    return query;\n}\n\n/**\n * Compare two spaces to determine order\n * @param first\n * @param second\n */\nexport function sort(first: Space, second: Space, blds: Building[] = []) {\n    const bld = blds.find(bld => first.zones.includes(bld.id));\n    const bld_b = blds.find(bld => second.zones.includes(bld.id));\n    if (bld) {\n        if (bld !== bld_b) {\n            return (bld.name).localeCompare(bld_b?.name);\n        }\n        const sort_order = [...bld.sort_order].reverse();\n        for (const zone_id of sort_order) {\n            if (zone_id === '*') { continue; }\n            const a_has_zone = first.zones.indexOf(zone_id) >= 0;\n            const b_has_zone = second.zones.indexOf(zone_id) >= 0;\n            if (a_has_zone && !b_has_zone) {\n                return 1;\n            } else if (b_has_zone && !a_has_zone) {\n                return -1;\n            }\n        }\n    }\n    return first.name.localeCompare(second.name);\n}\n","import { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\nimport { first } from 'rxjs/operators';\n\nimport { BaseAPIService } from '../base.service';\nimport { Space, ISpaceAvailabilityOptions } from './space.class';\nimport { HashMap, ApplicationLoadingState } from '../../../shared/utilities/types.utilities';\nimport { availabilityOptionsToQuery } from './space.utilities';\nimport { ServiceManager } from '../service-manager.class';\nimport { OrganisationService } from '../organisation/organisation.service';\nimport { ApplicationService } from '../../app.service';\n\nimport * as dayjs from 'dayjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SpacesService extends BaseAPIService<Space> {\n    constructor(protected _composer: ComposerService, private _org: OrganisationService, private _service: ApplicationService) {\n        super(_composer);\n        ServiceManager.setService(Space, this);\n        this._name = 'Space';\n        this._api_route = 'rooms';\n        this._compare = (a, b) => !a.id.localeCompare(b.id) || !a.email.localeCompare(b.email);\n        this._list_filter = (a: Space) => {\n            const bld = this._org.building;\n            return a.level.building_id === bld.id;\n        };\n        this._org.initialised.pipe(first((_) => _)).subscribe(() => this.init());\n    }\n\n    public async query(query: HashMap = {}) {\n        const list = await super.query(query);\n        if (!Object.keys(query).length) {\n            this.set('list', list);\n        }\n        return list;\n    }\n\n    /**\n     * Get available spaces\n     * @param options\n     */\n    public available(options: ISpaceAvailabilityOptions): Promise<Space[]> {\n        if (!options) {\n            throw new Error('Space avilability requires request options');\n        }\n        if (!options.date) {\n            options.date = dayjs()\n                .startOf('m')\n                .valueOf();\n        }\n        const key = `available|${options.id ? options.id : ''}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise((resolve, reject) => {\n                const respond = (list: Space[]) => {\n                    const available_spaces = list.filter(i => {\n                        const linked = list.filter(j => i.linked_spaces.indexOf(j.id) >= 0);\n                        return (\n                            i.was_available && linked.reduce((a, v) => a && v.was_available, true)\n                        );\n                    });\n                    delete this._promises[key];\n                    resolve(available_spaces);\n                };\n                const error = e => {\n                    reject(e);\n                    delete this._promises[key];\n                };\n                const query = availabilityOptionsToQuery(options);\n                if (options.id) {\n                    this.show(options.id, query).then(i => respond([i]), error);\n                } else {\n                    this.query(query).then(respond, error);\n                }\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Load initial data for the service\n     */\n    protected async load(): Promise<void> {\n        const loading: ApplicationLoadingState = this._service.get('loading') || {};\n        if (!loading.spaces) {\n            loading.spaces = { message: 'Loading space data', state: 'loading' };\n            this._service.set('loading', loading);\n        }\n        await this.query().catch(() => {\n            loading.spaces = { message: 'Loading space data', state: 'failed' };\n            this._service.set('loading', loading);\n        });\n        loading.spaces = { message: 'Loading space data', state: 'complete' };\n        this._service.set('loading', loading);\n    }\n\n    /**\n     * Convert raw data into API object\n     * @param raw_data Raw API data\n     */\n    protected process(raw_data: HashMap): Space {\n        return new Space(raw_data);\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport { HashMap, Identity } from '../../../shared/utilities/types.utilities';\nimport { MapLocation } from '../location/location.class';\nimport { ServiceManager } from '../service-manager.class';\n\nexport class User extends BaseDataClass {\n    /** Currently logged in user */\n    public static get active_user(): User {\n        const service = ServiceManager.serviceFor(User);\n        return service ? service.current : null;\n    }\n    /** First name of the user */\n    public readonly first_name: string;\n    /** Last name of the user */\n    public readonly last_name: string;\n    /** Windows user ID */\n    public readonly windows_id: string;\n    /** Type of user */\n    public readonly type: 'partner' | 'external' | 'internal';\n    /** Contact phone number of the user */\n    public readonly phone: string;\n    /** Organisational department the user is part of */\n    public readonly business_unit: string;\n    /** Whether user is external from the application's organisation */\n    public readonly external: boolean;\n    /** Organisational Identifier for the user */\n    public readonly staff_code: string;\n    /** Basic location descriptor for the user */\n    public readonly location: string;\n    /** List of users that this user can act on behalf */\n    public readonly delegates: readonly string[];\n    /** URL of the user's avatar image */\n    public readonly image: string;\n    /** List of user groups associated with this user */\n    public readonly groups: readonly string[];\n    /** Organisation the user is associated with */\n    private _organisation: Identity;\n\n    /** Map location of the user */\n    private _location: MapLocation;\n    /** List of desk bookings */\n    private _desk_bookings: HashMap = {};\n\n    constructor(raw_data: HashMap = {}) {\n        super(raw_data);\n        this.first_name = raw_data.first_name || '';\n        this.last_name = raw_data.last_name || '';\n        this.windows_id = raw_data.email || '';\n        this.type = raw_data.visitor ? 'external' : raw_data.type || 'internal';\n        this.phone = raw_data.phone || raw_data.mobile || '';\n        this.business_unit = raw_data.business_unit || raw_data.department || '';\n        this._organisation = raw_data.organisation || {\n            id: raw_data.organisation_id,\n            name: raw_data.organisation_name\n        };\n        this.external = this.type === 'external';\n        this._location = null;\n        this.image = raw_data.image || '';\n        this.staff_code = raw_data.staff_code || raw_data.fmno || '';\n        this.delegates = raw_data.delegates || [];\n        this._location = new MapLocation(\n            raw_data.location && raw_data.location instanceof Object\n                ? raw_data.location\n                : { name: raw_data.location }\n        );\n        this.groups = raw_data.groups || [];\n        this.location = raw_data.location || raw_data.officeLocation || '';\n    }\n\n    /** Organisation the user is associated with */\n    public get organisation() {\n        return this._organisation;\n    }\n\n    /** Map location of the user */\n    public get last_location(): MapLocation {\n        return new MapLocation(this._location || {})\n    }\n\n    /**\n     * Ask the server for the users current location\n     */\n    public locate(): Promise<MapLocation> {\n        const service: any = ServiceManager.serviceFor(MapLocation);\n        return new Promise((resolve, reject) => {\n            if (service) {\n                service.show(this.id, { desk: this.email }).then(\n                    l => {\n                        this._location = l;\n                        resolve(l);\n                    },\n                    e => reject(e)\n                );\n            } else {\n                resolve(null);\n            }\n        });\n    }\n\n    /**\n     * Whether user is available during the given period\n     * @param start Start time as a unix timestamp with milliseconds\n     * @param end End time as a unix timestamp with milliseconds\n     */\n    public available(start?: number, end?: number): Promise<boolean> {\n        return new Promise<boolean>(resolve => {\n            this._service.query({ email: this.email, start, end }).then(\n                l => resolve(l && l.length > 0),\n                _ => resolve(false)\n            );\n        });\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): User {\n        return new User(this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): User {\n        return new User({ ...this, id: null, email: null });\n    }\n\n    /**\n     * Convert object into plain object\n     */\n    public toJSON(this: User): HashMap {\n        const data = super.toJSON();\n        delete data.location;\n        return data;\n    }\n}\n","\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\nimport { HashMap } from '../../../shared/utilities/types.utilities';\nimport { User } from './user.class';\n\n/**\n * Generate form fields for the given user\n * @param user User to generate form for\n */\nexport function generateUserForm(user: User): FormGroup {\n    if (!user) {\n        throw Error('No user passed');\n    }\n    const fields: HashMap<FormControl> = {\n        id: new FormControl(user.id || ''),\n        name: new FormControl(user.name || ''),\n        first_name: new FormControl(user.first_name || ''),\n        last_name: new FormControl(user.last_name || ''),\n        email: new FormControl(user.email || '', [Validators.email])\n    };\n    // Generate form group for booking item\n    const form = new FormGroup(fields);\n    return form;\n}\n","import { Injectable } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { HttpClient } from '@angular/common/http';\nimport { ComposerService } from '@placeos/composer';\nimport { first } from 'rxjs/operators';\n\nimport { Md5 } from 'ts-md5/dist/md5';\n\nimport { BaseAPIService } from '../base.service';\nimport { User } from './user.class';\nimport { HashMap, ApplicationLoadingState } from '../../../shared/utilities/types.utilities';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\n\nimport * as dayjs from 'dayjs';\nimport { ApplicationService } from '../../app.service';\nimport { ServiceManager } from '../service-manager.class';\n\nexport interface ILoginOptions {\n    /** URL to post login request to */\n    url?: string;\n    /** Whether form data is passed in the body of the request */\n    form?: boolean;\n    /** Custom headers to pass into the post request */\n    headers?: HashMap<string>;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class UsersService extends BaseAPIService<User> {\n    constructor(\n        protected _composer: ComposerService,\n        protected uhttp: HttpClient,\n        protected location: Location,\n        private _service: ApplicationService\n    ) {\n        super(_composer);\n        ServiceManager.setService(User, this);\n        this._name = 'Users';\n        this._api_route = 'users';\n        this._compare = (a, b) => !a.id.localeCompare(b.id) || !a.email.localeCompare(b.email);\n        this.set('list', []);\n        this.set('current_user', new User({ id: 'local_user', name: 'Local User' }));\n        this._composer.initialised.pipe(first((_) => _)).subscribe(() => this.init());\n    }\n\n    /** Currently logged in user */\n    public get current(): User {\n        return this.get('current_user');\n    }\n\n    /** Whether the user has properly logged in */\n    public get is_logged_in(): boolean {\n        return this.current && this.current.id !== 'local_user';\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Sets the access token and expiry for the user\n     * @param token OAuth bearer token\n     * @param expiry Expiry epoch timestamp in ms\n     * @param reload Whether to reload the page after setting tokens\n     */\n    public setToken(token: string, expiry?: number, reload: boolean = true) {\n        if (!expiry) {\n            expiry = dayjs().add(7, 'd').endOf('d').valueOf();\n        }\n        const path = `${location.origin}${\n            this._service.setting('composer.route') || ''\n        }/oauth-resp.html`;\n        const client_id = Md5.hashStr(path);\n        if (sessionStorage) {\n            sessionStorage.setItem(`${client_id}_access_token`, token);\n            sessionStorage.setItem(`${client_id}_expires_at`, `${expiry}`);\n        }\n        if (localStorage) {\n            localStorage.setItem(`${client_id}_access_token`, token);\n            localStorage.setItem(`${client_id}_expires_at`, `${expiry}`);\n        }\n        if (reload) {\n            this.location.go(this.location.path());\n        }\n        return path;\n    }\n\n    /**\n     * Post login request to the API\n     * @param query_params Key value pairs to pass into\n     * @param options Options for the login request\n     */\n    public async login(query_params: HashMap, options: ILoginOptions = {}): Promise<void> { }\n\n    /**\n     * Load initial data for the service\n     */\n    protected load(tries: number = 0): Promise<void> {\n        const loading: ApplicationLoadingState = this._service.get('loading') || {};\n        loading.user = { message: 'Loading user credentials', state: 'loading' };\n        this._service.set('loading', loading);\n        this.set('status', 'loading');\n        return new Promise<void>((resolve) => {\n            this.show('current').then(\n                (current_user) => {\n                    this.set('status', 'available');\n                    this.set('current_user', current_user);\n                    if (this._service && this._service.setting('app.user.grab_api_details')) {\n                        this.show(current_user.email).then(\n                            (user) => {\n                                this.set('current_user', user);\n                                if (this._service.setting('app.user.update_location')) {\n                                    this.interval('location', () => user.locate(), 5000);\n                                }\n                                this.loadDelegates();\n                                resolve();\n                                loading.user = {\n                                    message: 'Loading user credentials',\n                                    state: 'complete',\n                                };\n                                this._service.set('loading', loading);\n                            },\n                            () =>\n                                this.timeout('load', () => this.load(++tries).then(() => resolve()), Math.min(3000, 300 * tries))\n                        );\n                    } else {\n                        if (this._service.setting('app.user.update_location')) {\n                            this.interval('location', () => current_user.locate(), 5000);\n                        }\n                        this.loadDelegates();\n                        resolve();\n                        loading.user = { message: 'Loading user credentials', state: 'complete' };\n                        this._service.set('loading', loading);\n                    }\n                },\n                () => this.timeout('load', () => this.load(++tries).then(() => resolve()), Math.min(3000, 300 * tries))\n            );\n        });\n    }\n\n    private async loadDelegates() {\n        const delegates = this.current.delegates || [];\n        const promises: Promise<User>[] = [];\n        for (const email of delegates) {\n            promises.push(this.show(email));\n        }\n        const list = await Promise.all(promises);\n        this.set('delegates', list);\n        this.set('list', unique(this.get('list').concat(list)));\n        return list;\n    }\n\n    /**\n     * Convert raw API data into a valid User Object\n     * @param raw_item Raw API data\n     */\n    protected process(raw_data: any): User {\n        return new User(raw_data);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\n\nimport { HashMap } from '../shared/utilities/types.utilities';\nimport { unique } from '../shared/utilities/general.utilities';\n\n/** List of keys that cannot be in a combination by themselves or with each other */\nconst INVALID_STANDALONE_KEYS: string[] = ['control', 'shift', 'alt', 'meta', 'os'];\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HotkeysService {\n    /** Map of subjects which store press states of keys */\n    private keydown_states: HashMap<BehaviorSubject<number>> = {};\n    /** Map of obserers for key state subjects */\n    private keydown_observers: HashMap<Observable<number>> = {};\n    /** List of keys at the end of a combination */\n    private combo_end: string[] = [];\n    /** List of registered hotkey combinations */\n    private registered_combos: string[][] = [];\n    /** Counter for the number of keydown events. Used for checking order of key presses */\n    private counter: number = 0;\n    /** Last key code to be pressed */\n    private last_down: string;\n\n    constructor() {\n        window.addEventListener('keydown', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            /* istanbul ignore else */\n            if (this.last_down !== code) {\n                /* istanbul ignore else */\n                if (!this.keydown_states[code]) {\n                    this.keydown_states[code] = new BehaviorSubject(null);\n                    this.keydown_observers[code] = this.keydown_states[code].asObservable();\n                }\n                this.keydown_states[code].next(++this.counter);\n                /* istanbul ignore else */\n                if (this.combo_end.indexOf(code) >= 0) {\n                    event.preventDefault();\n                }\n                this.last_down = code;\n            }\n        });\n\n        window.addEventListener('keyup', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            /* istanbul ignore else */\n            if (this.keydown_states[code]) {\n                this.keydown_states[code].next(null);\n            }\n            /* istanbul ignore else */\n            if (this.last_down === code) {\n                this.last_down = null;\n            }\n        });\n    }\n\n    /**\n     * Listen to the given key combination\n     * @param combo Array of key codes to listen to or a hotkey string e.g. `Alt+Shift+KeyK`\n     * @param next Callback for combination presses\n     */\n    public listen(combo: string | string[], next: () => void): Subscription {\n        combo = (combo instanceof Array ? combo : combo.split('+'));\n        const combination: string[] = combo.map(i => this.mapKey(i.toLowerCase()));\n        /* istanbul ignore else */\n        if (combination.length > 0 && this.validCombination(combination)) {\n            this.registered_combos.push(combination);\n            const last_key = combination[combination.length - 1];\n            /* istanbul ignore else */\n            if (!this.keydown_states[last_key]) {\n                this.keydown_states[last_key] = new BehaviorSubject(null);\n                this.keydown_observers[last_key] = this.keydown_states[last_key].asObservable();\n            }\n            this.updateCombinationEndList();\n            return this.keydown_observers[last_key].subscribe((count) => {\n                /* istanbul ignore else */\n                if (count) {\n                    const presses: number[] = [];\n                    /* istanbul ignore else */\n                    if (combination.length > 0) {\n                        // Check that keys are pressed\n                        for (const key of combination) {\n                            const state = this.keydown_states[key];\n                            presses.push(state ? state.getValue() || -1 : -1);\n                        }\n                        // Check that keys are pressed in the correct order\n                        for (let i = 0; i < combination.length - 1; i++) {\n                            if (presses[i] > presses[i + 1]) { return; }\n                        }\n                    }\n                    const total = presses.reduce((a, v) => a + (v > 0 ? 1 : -1), 0);\n                    /* istanbul ignore else */\n                    if (total >= combination.length) {\n                        next();\n                    }\n                }\n            });\n        }\n        return null;\n    }\n\n    /**\n     * Map key codes with multiple versions to simple form\n     * @param code Code to transform\n     */\n    private mapKey(code: string): string {\n        /* istanbul ignore else */\n        if (code.indexOf('alt') >= 0 || code.indexOf('shift') >= 0 || code.indexOf('control') >= 0) {\n            return code.replace('left', '').replace('right', '');\n        }\n        return code;\n    }\n\n    /**\n     * Update the list of the last keys in combinations to allow for prevent default actions on pre-existing hotkeys\n     */\n    private updateCombinationEndList(): void {\n        const key_list = [];\n        for (const combo of this.registered_combos) {\n            this.combo_end.push(combo[combo.length - 1]);\n        }\n        this.combo_end = unique(key_list);\n    }\n\n    /**\n     * Checks if the given hotkey combination is allowed and valid\n     * @param combo Array of key codes\n     */\n    private validCombination(combo: string[]): boolean {\n        let non_meta = 0;\n        for (const key of combo) {\n            /* istanbul ignore else */\n            if (INVALID_STANDALONE_KEYS.indexOf(key) < 0) {\n                non_meta++;\n            }\n        }\n        return non_meta > 0;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { format, isSameDay } from 'date-fns';\n\nimport { VERSION } from 'src/environments/version';\nimport { DEFAULT_SETTINGS } from 'src/environments/settings';\nimport { BaseClass } from '../shared/base.class';\nimport { HashMap } from '../shared/utilities/types.utilities';\nimport { getItemWithKeys, log } from '../shared/utilities/general.utilities';\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SettingsService extends BaseClass {\n    /** Name of the application */\n    private _app_name = 'PlaceOS';\n    /** List of override settings in order of priority */\n    private _overrides = new BehaviorSubject<HashMap[]>([]);\n    /** Mapping of behaviour subjects */\n    private _subjects: HashMap<BehaviorSubject<any>> = {};\n    /** Mapping of observables */\n    private _observables: HashMap<Observable<any>> = {};\n\n    /**\n     * @hidden\n     */\n    public set overrides(value: HashMap[]) {\n        this._overrides.next(value);\n    }\n\n    /** Get observable for key */\n    public listen<T = any>(name: string): Observable<T> {\n        if (!this._observables[name]) {\n            this._subjects[name] = new BehaviorSubject<T>(null);\n            this._observables[name] = this._subjects[name].asObservable();\n        }\n        return this._observables[name];\n    }\n\n    /** Update observable value for key */\n    public post<T>(name: string, value: T): void {\n        if (!this._observables[name]) {\n            this._subjects[name] = new BehaviorSubject<T>(null);\n            this._observables[name] = this._subjects[name].asObservable();\n        }\n        this._subjects[name].next(value);\n    }\n\n    public value<T = any>(name: string): T {\n        return !this._observables[name] ? null : this._subjects[name].getValue();\n    }\n\n    /** Page title */\n    public get title() {\n        return this._title.getTitle();\n    }\n    public set title(value: string) {\n        this._title.setTitle(`${value} | ${this._app_name}`);\n    }\n\n    constructor(private _title: Title) {\n        super();\n        const now = new Date();\n        const time = new Date(VERSION.time);\n        const built = isSameDay(now, time)\n            ? `Today at ${format(time, 'h:mma')}`\n            : format(time, 'do MMM yyyy, h:mma');\n        log('CORE', `${VERSION.semver}`, null, 'debug', true);\n        log('APP', `${VERSION.hash} | Built: ${built}`, null, 'debug', true);\n        this.init();\n    }\n\n    /**\n     * Initialise the settings\n     */\n    public async init() {\n        if (this.get('debug')) {\n            window.debug = true;\n        }\n        if (this.get('app')?.name) {\n            this._app_name = this.get('app').name;\n        }\n        log('Settings', 'Successfully loaded settings');\n        this._initialised.next(true);\n    }\n\n    /** Whether settings service has initialised */\n    public get app_name() {\n        return this._app_name;\n    }\n\n    /**\n     * Get a setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public get(key: string): any {\n        const keys = key.split('.');\n        if (keys[0] !== 'app') {\n            return getItemWithKeys(keys, DEFAULT_SETTINGS);\n        }\n        const override_settings = this._overrides.getValue();\n        for (const override of override_settings) {\n            const value = getItemWithKeys(keys.slice(1), override);\n            if (value != null) { return value; }\n        }\n        return getItemWithKeys(keys, DEFAULT_SETTINGS);\n    }\n}\n","import { Subscription, BehaviorSubject } from \"rxjs\";\n\nexport class BaseClass {\n    /** Store for named timers */\n    protected _timers: { [name: string]: number } = {};\n    /** Store for named intervals */\n    protected _intervals: { [name: string]: number } = {};\n    /** Store for named subscription unsub callbacks */\n    protected _subscriptions: { [name: string]: (Subscription | (() => void)) } = {};\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n\n    /** Observable of the initialised state of the object */\n    public get initialised(): BehaviorSubject<boolean> {\n        return this._initialised;\n    }\n    /** Whether the object has been initialised */\n    public get is_initialised(): boolean {\n        return this._initialised.getValue();\n    }\n\n    protected destroy() {\n        for (const key in this._timers) {\n            if (this._timers.hasOwnProperty(key)) {\n                this.clearTimeout(key);\n            }\n        }\n        for (const key in this._intervals) {\n            if (this._intervals.hasOwnProperty(key)) {\n                this.clearInterval(key);\n            }\n        }\n        for (const key in this._subscriptions) {\n            if (this._subscriptions.hasOwnProperty(key)) {\n                this.unsub(key);\n            }\n        }\n    }\n\n    /**\n     * Creates a named timer\n     * @param name Name of the timer\n     * @param fn Callback function for the timer\n     * @param delay Callback delay\n     */\n    protected timeout(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearTimeout(name);\n            this._timers[name] = <any>setTimeout(() => {\n                fn();\n                this._timers[name] = null;\n            }, delay);\n        } else {\n            throw new Error(\n                name ? 'Cannot create named timeout without a name' : 'Cannot create a timeout without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named timer\n     * @param name Timer name\n     */\n    protected clearTimeout(name: string) {\n        if (this._timers[name]) {\n            clearTimeout(this._timers[name]);\n            this._timers[name] = null;\n        }\n    }\n\n    /**\n     * Creates a named interval\n     * @param name Name of the interval\n     * @param fn Callback function for the interval\n     * @param delay Callback delay\n     */\n    protected interval(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearInterval(name);\n            this._intervals[name] = <any>setInterval(() => fn(), delay);\n        } else {\n            throw new Error(\n                name ? 'Cannot create named interval without a name' : 'Cannot create a interval without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named interval\n     * @param name Timer name\n     */\n    protected clearInterval(name: string) {\n        if (this._intervals[name]) {\n            clearInterval(this._intervals[name]);\n            this._intervals[name] = null;\n        }\n    }\n\n    /**\n     * Store named subscription\n     * @param name Name of the subscription\n     * @param unsub Unsubscribe callback or Subscription object\n     */\n    protected subscription(name: string, unsub: Subscription | (() => void)) {\n        this.unsub(name);\n        this._subscriptions[name] = unsub\n    }\n\n    /**\n     * Call unsubscribe callback with the given name\n     * @param name\n     */\n    protected unsub(name: string) {\n        if (this._subscriptions && this._subscriptions[name]) {\n            this._subscriptions[name] instanceof Subscription\n                ? (this._subscriptions[name] as Subscription).unsubscribe()\n                : (this._subscriptions[name] as any)();\n            this._subscriptions[name] = null;\n        }\n    }\n}\n","\nimport { Directive, OnDestroy } from '@angular/core';\nimport { BaseClass } from './base.class';\n\n@Directive({\n    selector: 'a-very-basic-component-base-that-should-not-be-used'\n})\nexport class BaseDirective extends BaseClass implements OnDestroy {\n    public ngOnDestroy(): void {\n        this.destroy();\n    }\n}\n\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { ApplicationIcon } from '../../utilities/settings.interfaces';\n\nexport enum AlertMode {\n    Warning = 'warning',\n    Coachmark = 'coachmark'\n}\n\n@Component({\n    selector: 'app-alert-banner',\n    template: `\n        <div class=\"alert-container {{mode}}\">\n            <div class=\"alert-icon-container {{mode}}\">\n                <i class=\"material-icons {{icon.class}}\">{{icon.content}}</i>\n            </div>\n            <div class=\"content-wrap\">\n                <span name=\"message\" class=\"message {{mode}}\">{{message}}</span>\n                <div class=\"actions-button-container\">\n                    <button name=\"action-button\" type=\"button\" mat-stroked-button\n                            color=\"{{materialColor}}\"\n                            (click)=\"action.emit($event)\">{{buttonText}}</button>\n                </div>\n            </div>\n            <button mat-icon-button name=\"close-button\" class=\"close-button\"\n                    aria-label=\"Close\"\n                    color=\"{{materialColor}}\"\n                    (click)=\"close.emit($event)\">\n                <app-icon\n                    [icon]=\"{ src: 'assets/img/' + closeIcon, type: 'img' }\"\n                ></app-icon>\n            </button>\n        </div>\n    `,\n    styleUrls: ['./alert-banner.component.scss'],\n})\nexport class AlertBannerComponent implements OnInit {\n\n    @Input()\n    public mode: AlertMode;\n\n    @Output()\n    public close = new EventEmitter<MouseEvent>();\n\n    @Output()\n    public action = new EventEmitter<MouseEvent>();\n\n    @Input()\n    public message: string;\n\n    @Input()\n    public buttonText: string;\n\n    public icon: ApplicationIcon;\n\n    public ngOnInit(): void {\n        // TODO: switch based on mode if necessary.\n        this.icon = { type: 'icon', class: 'alert-icon', content: 'warning' };\n    }\n\n    public get materialColor(): string {\n        switch (this.mode) {\n            case AlertMode.Warning:\n                return 'black';\n            case AlertMode.Coachmark:\n                return 'coachmark';\n            default:\n                return 'black';\n        }\n    }\n\n    public get closeIcon(): string {\n        switch (this.mode) {\n            case AlertMode.Coachmark:\n                return 'close_outline_coachmark.svg';\n            default:\n                return 'close_outline.svg';\n        }\n    }\n\n}\n","import {\n    AfterViewInit,\n    OnDestroy,\n    OnInit,\n    TemplateRef,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\n\n/**\n * A helper class for rendering embedded views (ng-template) as standalone components.\n *\n * If the view is lazy and does not render upon initialization,\n * it attempts embedding view again later.\n *\n * When testing a component directly that extends this class, its best to wrap the component\n * in a wrapper component for testing so that it can render itself.\n */\nexport class BaseTemplateComponent implements AfterViewInit, OnInit, OnDestroy {\n    @ViewChild(TemplateRef, { static: true })\n    public template: TemplateRef<any>;\n\n    private isRendered = false;\n\n    constructor(private vcRef: ViewContainerRef) {\n    }\n\n    public ngOnInit(): void {\n        // try early rendering\n        this.attemptViewEmbed();\n    }\n\n    public attemptViewEmbed() {\n        if (this.template && !this.isRendered) {\n            this.isRendered = true;\n            this.vcRef.createEmbeddedView(this.template);\n            return true;\n        }\n        return false;\n    }\n\n    public ngAfterViewInit(): void {\n        if (!this.isRendered) {\n            console.log('View not rendered yet, attempting to post initialization');\n            setTimeout(() => {\n                console.log('Timeout ended, trying again', this.template);\n                if (!this.attemptViewEmbed()) {\n                    console.log('Attempting render in after view initialization');\n                    setTimeout(() => {\n                        if (!this.attemptViewEmbed()) {\n                            console.error('FAILED TO LOAD TEMPLATE');\n                        }\n                    }, 1000);\n                }\n            });\n        }\n    }\n\n    public ngOnDestroy(): void {\n        this.isRendered = false;\n    }\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\n@Component({\n  selector: 'an-action-field',\n  templateUrl: './action-field.component.html',\n  styleUrls: ['./action-field.component.scss']\n})\nexport class ActionFieldComponent extends BaseDirective {\n    /** Name of the field */\n    @Input() public name: string;\n    /** Value to display on the field */\n    @Input() public placeholder: string;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Emitter for user interaction events */\n    @Output('onAction') public on_action = new EventEmitter();\n    /** Whether to show tooltip */\n    public show_tooltip = false;\n\n    /**\n     * Emit that the user has performed an action on the field\n     */\n    public performAction() {\n        this.show_tooltip = !this.show_tooltip;\n        this.on_action.emit();\n    }\n}\n","<div\n    class=\"action-field\"\n    role=\"button\"\n    [attr.disabled]=\"disabled\"\n    form-field\n    tabindex=\"0\"\n    (keydown.enter)=\"performAction()\"\n    (click)=\"performAction()\"\n>\n    <div class=\"display\">{{ placeholder }}</div>\n    <div class=\"icon\">\n        <app-icon\n            [icon]=\"{\n                type: 'icon',\n                class: 'material-icons',\n                content: show_tooltip ? 'arrow_drop_up' : 'arrow_drop_down'\n            }\"\n        ></app-icon>\n    </div>\n</div>\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n    selector: 'a-counter',\n    templateUrl: './counter.component.html',\n    styleUrls: ['./counter.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CounterComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CounterComponent implements ControlValueAccessor {\n    /** Size of a single step */\n    @Input() public step: number = 1;\n    /** Maximum amount for the counter */\n    @Input() public max: number = 10;\n    /** Minimum amount for the counter */\n    @Input() public min: number = 0;\n\n    @Input() public useInput = false;\n\n    /** Current value of the counter */\n    public value: number;\n    public previous_value: number = 0;\n    /** Whether shift key is being held by the user */\n    public shift_key: boolean;\n    /** Whether control key is being held by the user */\n    public ctrl_key: boolean;\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /**\n     * Add the `step` to the current value\n     */\n    public add() {\n        if (!this.value) {\n            this.value = this.min || 0;\n        }\n        const step = this.ctrl_key ? 100 : this.shift_key ? 10 : this.step || 1;\n        this.value += step;\n        if (this.value > this.max) {\n            this.value = this.max || 10;\n        }\n        this.setValue(this.value);\n    }\n\n    /** Remove the `step` from the current value */\n    public remove() {\n        if (!this.value) {\n            this.value = this.min || 0;\n        }\n        const step = this.ctrl_key ? 100 : this.shift_key ? 10 : this.step || 1;\n        this.value -= step;\n        if (this.value < this.min) {\n            this.value = this.min || 0;\n        }\n        this.setValue(this.value);\n    }\n\n    public onInputChange(new_value: string) {\n        let value = Number(new_value);\n        if (isNaN(value)) {\n            value = this.previous_value;\n        }\n        if (value < this.min) {\n            value = this.min || 0;\n        }\n        if (value > this.max) {\n            value = this.max || 10;\n        }\n        this.setValue(value);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.previous_value = new_value;\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.value = value;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n}\n","<div\n    class=\"counter\"\n    (window:keydown.shift)=\"shift_key = true\"\n    (window:keydown.control)=\"ctrl_key = true\"\n    (window:keydown.meta)=\"ctrl_key = true\"\n    (window:keyup.shift)=\"shift_key = false\"\n    (window:keyup.control)=\"ctrl_key = false\"\n    (window:keyup.meta)=\"ctrl_key = false\"\n>\n    <button mat-icon-button name=\"remove\" [disabled]=\"!value || value === min\" (click)=\"remove()\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'remove' }\"></app-icon>\n    </button>\n    <input\n        #inputValue\n        aria-label=\"value input\"\n        *ngIf=\"useInput\"\n        (keyup.enter)=\"onInputChange(inputValue.value)\"\n        (blur)=\"onInputChange(inputValue.value)\"\n        (ngModelChange)=\"onInputChange($event)\"\n        [(ngModel)]=\"value\"\n        class=\"value\"/>\n    <div class=\"value\" *ngIf=\"!useInput\" aria-label=\"value\">\n        {{value || '0'}}\n    </div>\n    <button mat-icon-button name=\"add\" [disabled]=\"value === max\" (click)=\"add()\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'add' }\"></app-icon>\n    </button>\n</div>\n","import { Component, OnInit, forwardRef, Input, ViewChild } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\nimport * as dayjs from 'dayjs';\nimport { MatMenuTrigger } from '@angular/material/menu';\n\n@Component({\n    selector: 'a-date-field',\n    templateUrl: './date-field.component.html',\n    styleUrls: ['./date-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateFieldComponent),\n            multi: true\n        }\n    ]\n})\nexport class DateFieldComponent extends BaseDirective implements OnInit, ControlValueAccessor {\n    /** Earliest date available the user is allowed to pick */\n    @Input('from') public _from: number = dayjs().valueOf();\n    /** Latest date available the user is allowed to pick */\n    @Input('to') public _to: number;\n    /** Position of the tooltip */\n    @Input() public position: 'right' | 'left' = 'right';\n    /** Offset of the tooltip */\n    @Input() public offset: 'top' | 'bottom' = 'bottom';\n    /** Whether form control is disabled */\n    @Input() public disabled: boolean;\n    /** Whether to show the calendar tooltip */\n    public show_tooltip: boolean;\n    /** Currently selected date */\n    public date: number;\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    @ViewChild(MatMenuTrigger, { static: true }) private _trigger: MatMenuTrigger;\n\n    /** First allowed date on the calendar */\n    public get from(): number {\n        return this._from || dayjs().startOf('d').valueOf();\n    }\n    /** Current date value */\n    public get until(): number {\n        return this._to || dayjs().endOf('d').add(1, 'y').valueOf();\n    }\n    /** Display value for the current date */\n    public get date_string(): string {\n        return dayjs(this.date).format('DD MMM YYYY');\n    }\n\n    /** Whether date picker is open */\n    public get is_open(): boolean {\n        return this._trigger.menuOpen;\n    }\n\n    public ngOnInit() {\n        this.date = dayjs().valueOf();\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number) {\n        // Keep hours and minutes of the old date\n        const old_date = dayjs(this.date);\n        let new_date = dayjs(new_value)\n            .hour(old_date.hour())\n            .minute(old_date.minute())\n            .valueOf();\n        // Check that new date is before from\n        if (new_date < this.from) {\n            new_date = this.from;\n        }\n        this.date = new_date;\n        if (this._onChange) {\n            this._onChange(new_date);\n        }\n        this.show_tooltip = false;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value;\n        this.show_tooltip = false;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /** Set the state of the tooltip to closed after delay */\n    public closeDatePicker() {\n        this._trigger.closeMenu();\n    }\n\n    /** Set the state of the tooltip to closed after delay */\n    public openDatePicker() {\n        this._trigger.openMenu();\n    }\n}\n","<div\n    class=\"date-field\"\n    role=\"button\"\n    form-field\n    tabindex=\"0\"\n    [class.active]=\"is_open\"\n    [attr.disabled]=\"disabled\"\n    (keydown.enter)=\"openDatePicker()\"\n    [matMenuTriggerFor]=\"appMenu\"\n>\n    <div class=\"display\">{{ date_string }}</div>\n    <div class=\"icon\">\n        <app-icon\n            [icon]=\"{\n                type: 'icon',\n                class: 'material-icons',\n                content: is_open ? 'arrow_drop_up' : 'arrow_drop_down'\n            }\"\n        ></app-icon>\n    </div>\n</div>\n<mat-menu #appMenu=\"matMenu\">\n    <div mat-menu-item class=\"date-picker\" (click)=\"$event.stopPropagation()\">\n        <a-date-picker\n            [ngModel]=\"date\"\n            [options]=\"{ from: from, to: until }\"\n            (ngModelChange)=\"setValue($event); closeDatePicker()\"\n        ></a-date-picker>\n    </div>\n</mat-menu>\n","import { Component, OnInit, forwardRef, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { humaniseDuration, timeFormatString } from 'src/app/shared/utilities/general.utilities';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-duration-field',\n    templateUrl: './duration-field.component.html',\n    styleUrls: ['./duration-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DurationFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DurationFieldComponent extends BaseDirective\n    implements OnInit, OnChanges, ControlValueAccessor {\n    /** Maximum duration option available */\n    @Input() public max: number = 240;\n    /** Minimum duration option available */\n    @Input() public min: number = 15;\n    /** Step value between options */\n    @Input() public step: number = 15;\n    /** Reference time for displaying next to durations */\n    @Input() public time: number;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Special case prepopulation i.e. out of step options */\n    @Input() public specialPreprops: Array<number> = [];\n\n    public duration: number = 60;\n    /** List of available duration options */\n    public duration_options: Identity[];\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    public ngOnInit(): void {\n        this.duration_options = this.generateDurationOptions(this.max, this.min, this.step);\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.max || changes.min || changes.step || changes.time) {\n            this.duration_options = this.generateDurationOptions(this.max, this.min, this.step);\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.duration = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(+new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.duration = value;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    private generateDurationOptions(max: number, min: number, step: number): Identity[] {\n        const blocks: Identity[] = [];\n        let time = min;\n        let date = this.time ? dayjs(this.time) : null;\n\n        // Add special case for 10min duration/prepropulation\n        for(const option of this.specialPreprops){\n            blocks.push({\n                id: option,\n                name: date\n                    ? `${date.add(option, 'm').format(timeFormatString())} (${humaniseDuration(option)})`\n                    : `${humaniseDuration(option)}`,\n            });\n        }\n\n\n\n        while (time <= max) {\n            blocks.push({\n                id: time,\n                name: date\n                    ? `${date.add(time, 'm').format(timeFormatString())} (${humaniseDuration(time)})`\n                    : `${humaniseDuration(time)}`,\n            });\n            time += step;\n        }\n        blocks.push({ id: 7 * 24 * 60, name: '1 week' });\n        return blocks;\n    }\n}\n","<div class=\"duration-field\" [attr.disabled]=\"disabled\">\n    <mat-form-field appearance=\"outline\">\n        <mat-select #select [value]=\"duration\" [disabled]=\"disabled\" (valueChange)=\"setValue($event)\">\n            <mat-option *ngFor=\"let option of duration_options\" [value]=\"option.id\">\n                {{ option.name }}\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n</div>\n","import { Component, forwardRef, Input, ViewChild, OnInit, SimpleChanges, OnChanges } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { MatSelect } from '@angular/material/select';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { timeFormatString } from 'src/app/shared/utilities/general.utilities';\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-time-field',\n    templateUrl: './time-field.component.html',\n    styleUrls: ['./time-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => TimeFieldComponent),\n            multi: true\n        }\n    ]\n})\nexport class TimeFieldComponent extends BaseDirective implements OnInit, OnChanges, ControlValueAccessor {\n    /** Time step between each allowed time option */\n    @Input() public step: number = 15;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Whether past times are allowed */\n    @Input() public no_past_times: boolean = true;\n    /** String representing the currently set time */\n    public date: number = dayjs().valueOf();\n    /** String representing the currently set time */\n    public time: string = dayjs().format('HH:mm');\n    /** Available time blocks for the selected date */\n    public _time_options: Identity[];\n    /** Whether select field should be shown */\n    public show_select: boolean;\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /** Select field for selecting the time */\n    @ViewChild('select') private select_field: MatSelect;\n\n    public ngOnInit(): void {\n        this.show_select = true;\n        this._time_options = this.generateAvailableTimes(this.date, !this.no_past_times, this.step);\n        this.timeout('hide', () => this.show_select = false);\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.no_past_times || changes.step) {\n            this._time_options = this.generateAvailableTimes(this.date, !this.no_past_times, this.step);\n        }\n    }\n\n    /** Available time blocks for the selected date */\n    public get time_options() {\n        const time = (this.time || '00:00').split(':');\n        const date = dayjs(this.date).hour(+time[0]).minute(+time[1]);\n        if (date.minute() % 15 !== 0 && !this._time_options.find(time => time.id === date.format('HH:mm'))) {\n            this._time_options.push({\n                name: `${date.format(timeFormatString())}`,\n                id: date.format('HH:mm')\n            });\n            this._time_options.sort((a, b) => `${a.id}`.localeCompare(`${b.id}`));\n        }\n        return this._time_options;\n    }\n\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        this.time = new_value;\n        if (this._onChange) {\n            const time = (this.time || '00:00').split(':');\n            const date = dayjs(this.date).hour(+time[0]).minute(+time[1]).startOf('m');\n            this._onChange(date.valueOf());\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value;\n        let date = dayjs(this.date).startOf('m');\n        date = date.minute(Math.ceil(date.minute() / 5) * 5);\n        this.time = date.format('HH:mm');\n        this._time_options = this.generateAvailableTimes(this.date, !this.no_past_times, this.step);\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    /**\n     * Show select field for time options\n     */\n    public showSelect() {\n        this.show_select = true;\n        this.timeout('on_shown', () => {\n            if (this.select_field) {\n                this.select_field.focus();\n                this.select_field.open();\n                this.subscription('listen_close', this.select_field.openedChange.subscribe((state) => {\n                    if (!state) {\n                        this.show_select = false;\n                    }\n                }));\n            }\n        })\n    }\n\n    /**\n     * Generate a list of time options for the given date\n     * @param datestamp Date to generate options for\n     * @param show_past Whether past times should be options\n     */\n    private generateAvailableTimes(datestamp: number, show_past: boolean, step: number = 15): Identity[] {\n        const now = dayjs();\n        let date = dayjs(datestamp);\n        const blocks = [];\n        if (show_past || date.isAfter(now, 'd')) {\n            date = date.startOf('d');\n        } else if (date.isAfter(now, 'm')) {\n            date = now;\n        }\n        date = date.minute(Math.ceil(date.minute() / step) * step);\n        const end = date.endOf('d');\n        // Add options for the rest of the day\n        while (date.isBefore(end, 'm')) {\n            blocks.push({\n                name: `${date.format(timeFormatString())}`,\n                id: date.format('HH:mm')\n            });\n            date = date.add(step, 'm');\n        }\n        return blocks;\n    }\n}\n","<div\n    class=\"time-field\"\n    role=\"button\"\n    [style.display]=\"show_select ? 'none' : ''\"\n    [attr.disabled]=\"disabled\"\n    form-field\n    tabindex=\"0\"\n    (keydown.enter)=\"showSelect()\"\n>\n    <div class=\"display\">\n        <input\n            matInput\n            type=\"time\"\n            [disabled]=\"disabled\"\n            [ngModel]=\"time\"\n            (ngModelChange)=\"setValue($event)\"\n        />\n    </div>\n    <div class=\"icon\" (click)=\"showSelect()\">\n        <app-icon\n            [icon]=\"{\n                type: 'icon',\n                class: 'material-icons',\n                content: show_select ? 'arrow_drop_up' : 'arrow_drop_down'\n            }\"\n        ></app-icon>\n    </div>\n</div>\n<mat-form-field appearance=\"outline\" *ngIf=\"show_select\">\n    <mat-select #select [value]=\"time\" [disabled]=\"disabled\" (valueChange)=\"setValue($event)\">\n        <mat-option *ngFor=\"let option of time_options\" [value]=\"option.id\">\n            {{ option.name }}\n        </mat-option>\n    </mat-select>\n</mat-form-field>\n","import { Component, OnInit, forwardRef, Output, EventEmitter, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subject, Observable, of } from 'rxjs';\nimport { switchMap, debounceTime, distinctUntilChanged, map, catchError } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport {\n    filterList,\n    matchToHighlight,\n    downloadFile,\n    csvToJson,\n} from 'src/app/shared/utilities/general.utilities';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: 'a-user-list-field',\n    templateUrl: './user-list-field.component.html',\n    styleUrls: ['./user-list-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UserListFieldComponent extends BaseDirective implements OnInit, ControlValueAccessor {\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Number of characters needed before a search will start */\n    @Input() public limit: number = 3;\n    /** Emitter for action to make a new user */\n    @Output('newUser') public new_user = new EventEmitter<void>();\n\n    /** User list to display */\n    public user_list: User[];\n    /** List of active selected users on the list */\n    public active_list: User[];\n    /** Whether user list is loading */\n    public loading: boolean;\n    /** String  */\n    public search_str: string;\n    /** List of users from an API search */\n    public search_results$: Observable<User[]>;\n    /** Subject holding the value of the search */\n    public search$ = new Subject<string>();\n\n    /** Form control on change handler */\n    private _onChange: (_: User[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User[]) => void;\n\n    constructor(private _service: ApplicationService, private _users: UsersService) {\n        super();\n    }\n\n    ngOnInit() {\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(400),\n            distinctUntilChanged(),\n            switchMap((query) => {\n                this.loading = true;\n                return query.length >= this.limit\n                    ? this._users.query({\n                          q: query.slice(0, Math.max(this.limit, 3)),\n                          cache: 60 * 1000,\n                      })\n                    : Promise.resolve([]);\n            }),\n            catchError((_) => of([])),\n            map((list: User[]) => {\n                this.loading = false;\n                return filterList(this.search_str, list, ['name', 'email']);\n            })\n        );\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe((list) => {\n                this.user_list = list;\n                this.user_list.forEach((i: any) => {\n                    i.match_name = matchToHighlight(i.match_name);\n                    i.match_email = matchToHighlight(i.match_email);\n                    return i;\n                });\n            })\n        );\n    }\n\n    /**\n     * Add user to the user list\n     * @param user\n     */\n    public addUser(user: User) {\n        /* istanbul ignore else */\n        if (!this.active_list) {\n            this.active_list = [];\n        }\n        const index = this.active_list.findIndex((a_user) => a_user.id === user.id);\n        /* istanbul ignore else */\n        if (index < 0) {\n            this.active_list = [...this.active_list, user];\n        }\n        this.setValue(this.active_list);\n        this.search_str = '';\n    }\n\n    /**\n     * Remove user from the user list\n     * @param user\n     */\n    public removeUser(user: User) {\n        this.active_list = this.active_list.filter((a_user) => a_user.id !== user.id);\n        this.setValue(this.active_list);\n    }\n\n    /**\n     * Load CSV file and populate the user list with the contents\n     * @param event File input field event\n     */\n    public addUsersFromFile(event) {\n        /* istanbul ignore else */\n        if (event.target) {\n            const file = event.target.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    this.processCsvData((evt.srcElement as any).result);\n                    event.target.value = '';\n                });\n                reader.addEventListener('error', (_) =>\n                    this._service.notifyError('Error reading file.')\n                );\n            }\n        }\n    }\n\n    /**\n     * Process raw CSV data and save user data to attendee list\n     * @param data CSV data\n     */\n    private processCsvData(data: string) {\n        const list = csvToJson(data) || [];\n        const id = this._users.current.staff_code;\n        list.forEach((el) => {\n            el.name = el.name || `${el.first_name} ${el.last_name}`;\n            const display = (el.name || `${Math.floor(Math.random() * 9999_9999)}`)\n                .split(' ')\n                .join('_')\n                .toLowerCase();\n            /* istanbul ignore else */\n            if (!el.email) {\n                el.email = `${display}+${id}@guest.mckinsey.com`;\n            }\n            el.type = 'external';\n            this.addUser(new User(el));\n        });\n    }\n\n    /* istanbul ignore next */\n    /** Download template CSV file */\n    public downloadCSVTemplate() {\n        const template = `Organisation Name,First Name,Last Name,Email,Phone\\nFake Org,John,Smith,john.smith@example.com,01234567898`;\n        downloadFile('template.csv', template);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User[]): void {\n        this.active_list = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User[]) {\n        this.active_list = value;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User[]) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User[]) => void): void {\n        this._onTouch = fn;\n    }\n}\n","<div class=\"user-list-field\" form-field [attr.disabled]=\"disabled\">\n    <mat-form-field appearance=\"outline\">\n        <input\n            matInput\n            name=\"user-search\"\n            type=\"text\"\n            [(ngModel)]=\"search_str\"\n            (ngModelChange)=\"search$.next($event)\"\n            [disabled]=\"disabled\"\n            placeholder=\"Search for user...\"\n            i18n-placeholder\n            [matAutocomplete]=\"auto\"\n        />\n        <div class=\"prefix\" matPrefix>\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'search' }\"\n            ></app-icon>\n        </div>\n        <div class=\"suffix\" matSuffix *ngIf=\"loading\">\n            <mat-spinner diameter=\"16\"></mat-spinner>\n        </div>\n    </mat-form-field>\n    <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"addUser($event.option.value)\">\n        <mat-option *ngFor=\"let option of user_list\" [value]=\"option\">\n            <div class=\"name\">{{ option.name }}</div>\n            <div class=\"email\">{{ option.email }}</div>\n        </mat-option>\n    </mat-autocomplete>\n    <div class=\"actions\">\n        <button type=\"button\" name=\"new-contact\" matRipple (click)=\"new_user.emit()\" i18n=\"Add new external attendee\">\n            Add External\n        </button>\n        <button type=\"button\" name=\"upload-csv\" matRipple i18n=\"Upload attendee list from CSV file\">\n            Upload CSV\n            <input type=\"file\" (change)=\"addUsersFromFile($event)\" />\n        </button>\n        <button type=\"button\" name=\"download-template\" matRipple (click)=\"downloadCSVTemplate()\" i18n=\"Download template CSV file\">\n            CSV Template\n        </button>\n    </div>\n    <div class=\"user-list\">\n        <mat-chip-list\n            aria-label=\"User List\"\n            *ngIf=\"active_list && active_list.length; else empty_state\"\n        >\n            <mat-chip\n                *ngFor=\"let user of active_list\"\n                [id]=\"user.email\"\n                [color]=\"user.external ? 'accent' : 'primary'\"\n                [removable]=\"true\"\n                (removed)=\"removeUser(user)\"\n            >\n                {{ user.name }}\n                <app-icon\n                    matChipRemove\n                    [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"\n                ></app-icon>\n            </mat-chip>\n        </mat-chip-list>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div i18n=\"Attendee empty state\">No attendees</div>\n</ng-template>\n","import { Component, OnInit, forwardRef, Input } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { Subject, Observable, of } from 'rxjs';\nimport { switchMap, debounceTime, distinctUntilChanged, map, catchError } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { filterList, matchToHighlight } from 'src/app/shared/utilities/general.utilities';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: 'a-user-search-field',\n    templateUrl: './user-search-field.component.html',\n    styleUrls: ['./user-search-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserSearchFieldComponent),\n            multi: true\n        }\n    ]\n})\nexport class UserSearchFieldComponent extends BaseDirective implements OnInit, ControlValueAccessor {\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Limit available options to these */\n    @Input() public options: User[];\n    /** Currently selected user */\n    public active_user: User;\n    /** User list to display */\n    public user_list: User[];\n    /** Whether user list is loading */\n    public loading: boolean;\n    /** Current display value of the search input field  */\n    public search_str: string;\n    /** List of users from an API search */\n    public search_results$: Observable<User[]>;\n    /** Subject holding the value of the search */\n    public search$ = new Subject<string>();\n\n    /** Form control on change handler */\n    private _onChange: (_: User) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User) => void;\n\n    constructor(private _users: UsersService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(400),\n            distinctUntilChanged(),\n            switchMap(query => {\n                this.loading = true;\n                return this.options && this.options.length > 0\n                    ? Promise.resolve(this.options)\n                    : query.length >= 3\n                        ? (this._users.query({ q: query.slice(0, 3), cache: 60 * 1000 }) as Promise<User[]>)\n                        : Promise.resolve([]);\n            }),\n            catchError((err) => of([])),\n            map((list: User[]) => {\n                this.loading = false;\n                return filterList(this.search_str, list, ['name', 'email']);\n            })\n        );\n        // Process API results\n        this.subscription('search_results', this.search_results$.subscribe(list => {\n            this.user_list = list;\n            this.user_list.forEach((i: any) => {\n                i.match_name = matchToHighlight(i.match_name);\n                i.match_email = matchToHighlight(i.match_email);\n                return i;\n            });\n        }));\n    }\n\n    /**\n     * Reset the search string back to the name of the active user\n     */\n    public resetSearchString() {\n        if (this.active_user) {\n            this.search_str = this.active_user.name;\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User): void {\n        this.active_user = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n        this.resetSearchString();\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User) {\n        this.active_user = value;\n        this.resetSearchString();\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User) => void): void {\n        this._onTouch = fn;\n    }\n}\n","<div class=\"user-search-field\" form-field>\n    <mat-form-field appearance=\"outline\">\n        <input\n            matInput\n            name=\"user-search\"\n            [(ngModel)]=\"search_str\"\n            (ngModelChange)=\"search$.next($event)\"\n            [disabled]=\"disabled\"\n            placeholder=\"Search for user...\"\n            i18n-placeholder\n            [matAutocomplete]=\"auto\"\n            (blur)=\"resetSearchString()\"\n        />\n        <div class=\"prefix\" matPrefix>\n            <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'search' }\"></app-icon>\n        </div>\n        <div class=\"suffix\" matSuffix *ngIf=\"loading\">\n            <mat-spinner diameter=\"16\"></mat-spinner>\n        </div>\n    </mat-form-field>\n    <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"setValue($event.option.value)\">\n        <mat-option *ngFor=\"let option of user_list\" [value]=\"option\">\n            <div class=\"name\">{{ option.name }}</div>\n            <div class=\"email\">{{ option.email }}</div>\n        </mat-option>\n    </mat-autocomplete>\n</div>\n","import { Component, Input, ViewContainerRef, ViewEncapsulation } from '@angular/core';\nimport { BaseTemplateComponent } from '../base-template.component';\n\n@Component(\n    {\n        selector: 'app-informational-image',\n        template: `\n            <ng-template>\n                <div class=\"body\">\n                    <div class=\"info-block\">\n                        <div class=\"image-wrapper\">\n                            <img src=\"{{src}}\">\n                        </div>\n                    </div>\n                </div>\n            </ng-template>\n        `,\n        styleUrls: ['./informational-image.component.scss'],\n        encapsulation: ViewEncapsulation.None,\n    },\n)\nexport class InformationalImageComponent extends BaseTemplateComponent {\n\n    @Input()\n    public src: string;\n\n    constructor(vcRef: ViewContainerRef) {\n        super(vcRef);\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from '../../base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { ApplicationLink } from '../../utilities/settings.interfaces';\n\n@Component({\n    selector: 'a-footer-menu',\n    templateUrl: './footer-menu.component.html',\n    styleUrls: ['./footer-menu.component.scss']\n})\nexport class FooterMenuComponent extends BaseDirective implements OnInit {\n\n    /** Tiles to display on the home page */\n    public tiles: ApplicationLink[] = [];\n\n    constructor(private _service: ApplicationService) {\n        super();\n    }\n\n    /** Angular Component initialisation lifecycle hook */\n    public ngOnInit(): void {\n        this._service.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.tiles = this._service.setting('app.home.tiles') || [];\n        });\n    }\n}\n","<div class=\"footer-menu\" *ngIf=\"tiles && tiles.length\">\n    <ng-container *ngFor=\"let item of tiles\">\n        <a *ngIf=\"item.route\" [routerLink]=\"[item.route]\" routerLinkActive=\"active\">\n            <div class=\"tile\">\n                <div class=\"icon\">\n                    <app-icon [icon]=\"item.icon\"></app-icon>\n                </div>\n                <div class=\"text\">{{ item.name }}</div>\n            </div>\n        </a>\n        <a *ngIf=\"!item.route\" [href]=\"item.link | safe: 'url'\">\n            <div class=\"tile\">\n                <div class=\"icon\">\n                    <app-icon [icon]=\"item.icon\"></app-icon>\n                </div>\n                <div class=\"text\">{{ item.name }}</div>\n            </div>\n        </a>\n    </ng-container>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from '../../../base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { NewUserModalComponent } from 'src/app/overlays/new-user-modal/new-user-modal.component';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\nimport { User } from 'src/app/services/data/users/user.class';\nimport {\n    SpaceSelectModalComponent,\n    SpaceSelectModalData,\n} from 'src/app/overlays/space-select-modal/space-select-modal.component';\nimport {\n    RecurrenceModalData,\n    RecurrenceModalComponent,\n} from 'src/app/overlays/recurrence-modal/recurrence-modal.component';\nimport { UsersService } from 'src/app/services/data/users/users.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nimport * as dayjs from 'dayjs';\nimport { formatRecurrence } from 'src/app/shared/utilities/formatting.utilities';\n\n@Component({\n    selector: 'a-booking-form',\n    templateUrl: './booking-form.component.html',\n    styleUrls: ['./booking-form.component.scss'],\n})\nexport class BookingFormComponent extends BaseDirective {\n    /** Form fields for booking */\n    @Input() public form: FormGroup;\n    /** List of available users to host bookings */\n    public user_list: User[] = [];\n    /** From date input for date field */\n    public from_date: number = dayjs().minute(Math.ceil(dayjs().minute() / 5) * 5).valueOf();\n\n    constructor(\n        private _service: ApplicationService,\n        private _users: UsersService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._users.initialised.pipe(first((_) => _)).subscribe(() => {\n            const user: User = this._users.current;\n            const delegates = user.delegates.map(\n                (email) => this._users.find(email) || new User({ email, name: email.split('@')[0] })\n            );\n            this.user_list = [user].concat(delegates);\n        });\n    }\n\n    /** Display string for the recurrence value of the booking */\n    public get recurrence(): string {\n        const recurrence = this.form.controls.recurrence\n            ? this.form.controls.recurrence.value\n            : null;\n        return formatRecurrence(recurrence);\n    }\n\n    /** Whether notes and description should use the HTML editor */\n    public get use_html(): boolean {\n        return this._service.setting('app.booking.html_body') || false;\n    }\n\n    /** List of available types for bookings */\n    public get booking_types(): Identity[] {\n        return this._service.setting('app.booking.booking_types') || [];\n    }\n\n    /** Display string for the list of active spaces */\n    public get spaces(): string {\n        const spaces = this.form.controls.space_list.value;\n        return spaces.length === 1\n            ? spaces[0].name\n            : spaces.length > 1\n            ? `${spaces.length} spaces selected`\n            : 'No Spaces selected';\n    }\n\n    /**\n     * Open modal to change the space details for the booking\n     */\n    public openSpacesModal(): void {\n        const ref = this._dialog.open<SpaceSelectModalComponent, SpaceSelectModalData>(\n            SpaceSelectModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                maxWidth: '95vw',\n                data: {\n                    spaces: this.form.controls.space_list.value,\n                    date: this.form.controls.date.value,\n                    duration: this.form.controls.duration.value,\n                    host: this.form.controls.organiser.value,\n                    multiple: true,\n                },\n            }\n        );\n        this.subscription(\n            'new_spaces',\n            ref.componentInstance.event.subscribe((event) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    let space_list = this.form.controls.space_list.value;\n                    space_list = event.metadata;\n                    this.form.controls.space_list.setValue(unique(space_list, 'id'));\n                    ref.close();\n                    this.unsub('new_spaces');\n                }\n            })\n        );\n    }\n\n    /**\n     * Open modal to change the recurrence details for the booking\n     */\n    public openRecurrenceModal() {\n        const ref = this._dialog.open<RecurrenceModalComponent, RecurrenceModalData>(\n            RecurrenceModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                maxWidth: '95vw',\n                data: {\n                    details: this.form.controls.recurrence.value,\n                    date: this.form.controls.date.value,\n                },\n            }\n        );\n        this.subscription(\n            'recurrence',\n            ref.componentInstance.event.subscribe((event) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    this.form.controls.recurrence.setValue(\n                        event.metadata && event.metadata.period !== 'none' ? event.metadata : {}\n                    );\n                    ref.close();\n                    this.unsub('recurrence');\n                }\n            })\n        );\n    }\n\n    /**\n     * Open modal to change the recurrence details for the booking\n     */\n    public openNewUserModal() {\n        const ref = this._dialog.open<NewUserModalComponent>(NewUserModalComponent, {\n            width: 'auto',\n            height: 'auto',\n        });\n        this.subscription(\n            'new_user',\n            ref.componentInstance.event.subscribe((event) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    const attendees = this.form.controls.attendees.value;\n                    attendees.push(event.metadata);\n                    this.form.controls.attendees.setValue(unique(attendees, 'email'));\n                    ref.close();\n                    this.unsub('new_user');\n                }\n            })\n        );\n    }\n}\n","<div class=\"booking-form\" *ngIf=\"form\" [formGroup]=\"form\">\n    <div\n        class=\"field\"\n        *ngIf=\"form.controls.id && form.controls.id.value && form.controls.space_list\"\n    >\n        <label for=\"spaces\" i18n=\"Booking form spaces label\">Spaces: </label>\n        <an-action-field\n            name=\"spaces\"\n            [placeholder]=\"spaces\"\n            (onAction)=\"openSpacesModal()\"\n        ></an-action-field>\n    </div>\n    <div class=\"field\" name=\"title\" *ngIf=\"form.controls.title\">\n        <label\n            for=\"title\"\n            [class.error]=\"form.controls.title.invalid && form.controls.title.touched\"\n            i18n=\"Booking form title label\"\n        >\n            Title<span>*</span>:\n        </label>\n        <mat-form-field appearance=\"outline\">\n            <input matInput name=\"title\" placeholder=\"Meeting Title\" i18n-placeholder formControlName=\"title\" />\n\n            <mat-error *ngIf=\"form.controls.title.invalid\" i18n=\"Booking form title error\"\n                >Title is required</mat-error\n            >\n        </mat-form-field>\n    </div>\n    <div class=\"group date\">\n        <div class=\"field\" name=\"date\" *ngIf=\"form.controls.date\">\n            <label for=\"date\" i18n=\"Booking form date label\">Date: </label>\n            <a-date-field [from]=\"from_date\" name=\"date\" formControlName=\"date\"></a-date-field>\n        </div>\n        <div class=\"field\" name=\"recurrence\" *ngIf=\"form.controls.recurrence\">\n            <label for=\"recurrence\" i18n=\"Booking form recurrence label\">Recurrence: </label>\n            <an-action-field\n                name=\"recurrence\"\n                [placeholder]=\"recurrence\"\n                (onAction)=\"openRecurrenceModal()\"\n            ></an-action-field>\n        </div>\n    </div>\n    <div class=\"group time\">\n        <div class=\"field\" name=\"start-time\" *ngIf=\"form.controls.date\">\n            <label for=\"start-time\" i18n=\"Booking form start time label\">Start Time: </label>\n            <a-time-field\n                name=\"start-time\"\n                [disabled]=\"form.controls.all_day?.value\"\n                [ngModel]=\"form.controls.date.value\"\n                (ngModelChange)=\"form.controls.date.setValue($event)\"\n                [ngModelOptions]=\"{ standalone: true }\"\n            ></a-time-field>\n            <div class=\"error info\" *ngIf=\"form.controls.date.touched && form.controls.date.invalid\">\n                Date and time must be in the future\n            </div>\n        </div>\n        <div class=\"field\" name=\"duration\" *ngIf=\"form.controls.duration\">\n            <div class=\"label-group\">\n                <label for=\"duration\" i18n=\"Booking form duration label\">Duration: </label>\n                <mat-checkbox\n                    formControlName=\"all_day\"\n                    *ngIf=\"form.controls.all_day\"\n                    i18n=\"Booking form all day label\"\n                    >All day booking</mat-checkbox\n                >\n            </div>\n            <a-duration-field\n                name=\"duration\"\n                [max]=\"720\"\n                [time]=\"form.controls.date?.value\"\n                formControlName=\"duration\"\n                [specialPreprops]=\"[10]\"\n            ></a-duration-field>\n            <div class=\"error info\" *ngIf=\"form.controls.duration.touched && form.controls.duration.invalid\">\n                Duration is invalid. End time must be in the future\n            </div>\n        </div>\n    </div>\n    <div class=\"field\" name=\"organiser\" *ngIf=\"form.controls.organiser\">\n        <label for=\"organiser\" i18n=\"Booking form organiser label\">Host: </label>\n        <mat-form-field appearance=\"outline\">\n            <mat-select\n                name=\"organiser\"\n                formControlName=\"organiser\"\n                [placeholder]=\"form.controls.organiser.value.name || form.controls.organiser.value.email\"\n            >\n                <mat-option *ngFor=\"let user of user_list\" [value]=\"user\">\n                    {{ user.name || user.email }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    </div>\n    <div class=\"field\" name=\"attendees\" *ngIf=\"form.controls.attendees\">\n        <label for=\"attendees\" i18n=\"Booking form attendees label\">Attendees: </label>\n        <a-user-list-field\n            name=\"attendees\"\n            formControlName=\"attendees\"\n            (newUser)=\"openNewUserModal()\"\n        ></a-user-list-field>\n    </div>\n    <div class=\"field\" name=\"booking-type\" *ngIf=\"form.controls.booking_type && booking_types.length > 1\">\n        <label for=\"booking-type\" i18n=\"Booking form booking type label\">Booking Type: </label>\n        <mat-form-field appearance=\"outline\">\n            <mat-select name=\"booking-type\" formControlName=\"booking_type\">\n                <mat-option *ngFor=\"let type of booking_types\" [value]=\"type.id\">\n                    {{ type.name }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    </div>\n    <div class=\"field\" name=\"need-space\" *ngIf=\"form.controls.needs_space\">\n        <mat-checkbox formControlName=\"needs_space\" i18n=\"Booking form need space label\"\n            >Need a meeting space?</mat-checkbox\n        >\n    </div>\n    <div class=\"field\" name=\"has-catering\" *ngIf=\"form.controls.has_catering\">\n        <mat-checkbox\n            [disabled]=\"!form.controls.needs_space.value\"\n            formControlName=\"has_catering\"\n            i18n=\"Booking form need catering label\"\n        >\n            Need catering?\n        </mat-checkbox>\n    </div>\n    <div class=\"field\" name=\"body\" *ngIf=\"form.controls.body\">\n        <label for=\"body\" i18n=\"Booking form notes label\">Notes: </label>\n        <mat-form-field name=\"body\" appearance=\"outline\" *ngIf=\"!use_html; else html_editor\">\n            <textarea\n                matInput\n                name=\"description\"\n                placeholder=\"Meeting Description\"\n                i18n-placeholder\n                formControlName=\"body\"\n            ></textarea>\n        </mat-form-field>\n        <ng-template #html_editor>\n            <editor formControlName=\"body\"></editor>\n        </ng-template>\n    </div>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'user-form',\n  templateUrl: './user-form.component.html',\n  styleUrls: ['./user-form.component.scss']\n})\nexport class UserFormComponent {\n    /** Group of form fields used for creating the system */\n    @Input() public form: FormGroup;\n}\n","<div class=\"user form\" *ngIf=\"form\">\n    <form [formGroup]=\"form\">\n        <div class=\"field\" *ngIf=\"form.controls.name\">\n            <label\n                for=\"first-name\"\n                [class.error]=\"form.controls.name.invalid && form.controls.name.touched\"\n                i18n=\"User form first name label\"\n                >First Name:</label\n            >\n            <mat-form-field appearance=\"outline\">\n                <input\n                    matInput\n                    name=\"first-name\"\n                    placeholder=\"First name\"\n                    i18n-placeholder\n                    formControlName=\"first_name\"\n                />\n                <mat-error i18n=\"User form first name error\">First name is required</mat-error>\n            </mat-form-field>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.name\">\n            <label\n                for=\"system-name\"\n                [class.error]=\"form.controls.name.invalid && form.controls.name.touched\"\n                i18n=\"User form last name label\"\n                >Last Name:</label\n            >\n            <mat-form-field appearance=\"outline\">\n                <input\n                    matInput\n                    name=\"last-name\"\n                    placeholder=\"Last name\"\n                    i18n-placeholder\n                    formControlName=\"last_name\"\n                />\n                <mat-error i18n=\"User form last name error\">Last name is required</mat-error>\n            </mat-form-field>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.email\">\n            <label\n                for=\"email\"\n                [class.error]=\"form.controls.email.invalid && form.controls.email.touched\"\n                i18n=\"User form email label\"\n                >Email:</label\n            >\n            <mat-form-field appearance=\"outline\">\n                <input matInput name=\"email\" placeholder=\"Email Address\" i18n-placeholder formControlName=\"email\" />\n                <mat-error i18n=\"User form email error\">A valid email is required</mat-error>\n            </mat-form-field>\n        </div>\n    </form>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from '../../utilities/settings.interfaces';\nimport { BaseDirective } from '../../base.directive';\n\n@Component({\n    selector: 'app-icon',\n    templateUrl: './icon.component.html',\n    styleUrls: ['./icon.component.scss']\n})\nexport class IconComponent extends BaseDirective {\n    @Input() public icon: ApplicationIcon;\n}\n","<div class=\"app-icon\" *ngIf=\"icon\">\n    <i *ngIf=\"icon.type !== 'img'\" [class]=\"icon.class\">{{ icon.content }}</i>\n    <img *ngIf=\"icon.type === 'img'\" [src]=\"icon.src | safe:'resource'\" />\n</div>\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from '../../base.directive';\nimport { ApplicationIcon } from '../../utilities/settings.interfaces';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent extends BaseDirective implements OnInit {\n    /** Logo of the application organisation */\n    public logo: ApplicationIcon;\n    /** Whether the user credentials are being checked */\n    public loading: boolean;\n    /** Form fields for the login form */\n    public form: FormGroup;\n\n    constructor(private _service: ApplicationService, private _users: UsersService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.loading = true;\n        this.form = new FormGroup({\n            username: new FormControl('', [Validators.required]),\n            password: new FormControl('', [Validators.required]),\n        });\n        this._service.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.loading = false;\n            this.logo = this._service.setting('app.logo_light') || { type: 'icon' };\n        });\n    }\n\n    /** Perform user login */\n    public login() {\n        this.loading = true;\n        const form = this.form.value;\n        this._users.login({\n            username: form.username,\n            password: form.password\n        }, { form: true }).then(() => {\n            this.loading = false;\n        }, () => {\n            this.loading = false;\n            this.form.controls.password.setErrors({ check: true });\n        });\n    }\n\n}\n","<div class=\"login\">\n    <div class=\"login-form\">\n        <form [formGroup]=\"form\">\n            <div class=\"header\" [style.background-color]=\"logo?.background\">\n                <div class=\"logo\">\n                    <i *ngIf=\"logo?.type === 'icon'\" [class]=\"logo.class\">{{ logo.content }}</i>\n                    <img *ngIf=\"logo?.type === 'img'\" [src]=\"logo.src | safe: 'resource'\" />\n                </div>\n            </div>\n            <div class=\"body\">\n                <ng-container *ngIf=\"!loading; else loading_state\">\n                    <div class=\"field\">\n                        <label\n                            for=\"username\"\n                            [class.error]=\"\n                                form.controls.username.invalid && form.controls.username.touched\n                            \"\n                            i18n=\"Login form username label\"\n                        >\n                            Username:\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"username\"\n                                placeholder=\"Username/Email\"\n                                i18n-placeholder\n                                formControlName=\"username\"\n                            />\n                            <mat-error i18n=\"Login form username error\"\n                                >Username is required</mat-error\n                            >\n                        </mat-form-field>\n                    </div>\n                    <div class=\"field\">\n                        <label\n                            for=\"password\"\n                            [class.error]=\"\n                                form.controls.password.invalid && form.controls.password.touched\n                            \"\n                            i18n=\"Login form password label\"\n                        >\n                            Password:\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"password\"\n                                placeholder=\"Password\"\n                                i18n-placeholder\n                                formControlName=\"password\"\n                                (keyup.enter)=\"login()\"\n                            />\n                            <mat-error i18n=\"Login form password error\"\n                                >Invalid username or password</mat-error\n                            >\n                        </mat-form-field>\n                    </div>\n                </ng-container>\n            </div>\n            <div class=\"footer\" *ngIf=\"!loading\">\n                <button mat-button (click)=\"login()\" i18n=\"Login action\">Login</button>\n            </div>\n        </form>\n    </div>\n</div>\n<ng-template #loading_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <mat-spinner diameter=\"64\"></mat-spinner>\n        </div>\n        <div class=\"text\" i18n=\"Checking login status\">Checking user credentials...</div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { BuildingLevel } from 'src/app/services/data/organisation/level.class';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\n@Component({\n    selector: 'a-map-controls',\n    templateUrl: './map-controls.component.html',\n    styleUrls: ['./map-controls.component.scss']\n})\nexport class MapControlsComponent extends BaseDirective implements OnInit {\n    /** ID of the active building */\n    @Input() public building: string;\n    /** ID of the active level */\n    @Input() public level: string;\n    /** Emitter for changes to the active level */\n    @Output() public levelChange = new EventEmitter<string>();\n    /** Details of the active building */\n    public building_details: Building = this._org.building;\n    /** List of available buildings */\n    public building_list: Building[] = [];\n    /** List of available levels */\n    public level_list: readonly BuildingLevel[] = [];\n\n    public get can_select_building(): boolean {\n        return !!this._service.setting('app.explore.can_select_building');\n    }\n\n    constructor(\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _service: ApplicationService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._org.listen('buildings').pipe(first(_ => !!_ && !!_.length)).subscribe(() => {\n            this.subscription(\n                'route.query',\n                this._route.queryParamMap.subscribe(params => {\n                    /* istanbul ignore else */\n                    if (params.has('level')) {\n                        const level_id = params.get('level');\n                        const level = this._org.levelWithID(level_id);\n                        this.level = level.id;\n                        this.setBuilding(level.building_id);\n                        this.levelChange.emit(this.level);\n                        this.clearTimeout('check_building');\n                    }\n                })\n            );\n            this.building_list = this._org.buildings;\n            this.timeout('check_building', () => {\n                /* istanbul ignore else */\n                if (!this.building) {\n                    this.setBuilding(this._org.building.id);\n                }\n                this.levelChange.emit(this.level);\n            });\n        });\n    }\n\n    public setBuilding(bld_id: string) {\n        const building = this._org.buildings.find(bld => bld.id === bld_id);\n        /* istanbul ignore else */\n        if (building) {\n            this.building_details = building;\n            this.building = bld_id;\n            this._org.building = building;\n            this.level_list = building.levels;\n            /* istanbul ignore else */\n            if (this.level_list.length && !this.level_list.find(lvl => lvl.id === this.level)) {\n                this.updateLevel(this.level_list[0].id);\n            }\n        }\n    }\n\n    public updateLevel(lvl_id: string) {\n        this.level = lvl_id;\n        this.levelChange.emit(this.level);\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { level: lvl_id }\n        });\n    }\n}\n","<div class=\"map-controls\">\n    <mat-form-field\n        class=\"map\"\n        appearance=\"outline\"\n        *ngIf=\"can_select_building && building_list.length > 1\"\n    >\n        <mat-select name=\"building\" [value]=\"building\" (valueChange)=\"setBuilding($event)\">\n            <mat-select-trigger> {{ building_details?.code }} - {{ building_details?.name }} </mat-select-trigger>\n            <mat-option *ngFor=\"let bld of building_list\" [value]=\"bld.id\">\n                <div class=\"building-name\">\n                    <div class=\"code\">{{ bld.code }}</div>\n                    <div class=\"name\">{{ bld.name }}</div>\n                    <div class=\"address\">{{ bld.address }}</div>\n                </div>\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n    <mat-form-field class=\"map\" appearance=\"outline\">\n        <mat-select name=\"level\" [(value)]=\"level\" (valueChange)=\"updateLevel($event)\">\n            <mat-option *ngFor=\"let level of level_list\" [value]=\"level.id\">\n                {{ level.name }}\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from '../../base.directive';\nimport { OverlayMenuSettings, ApplicationLink } from '../../utilities/settings.interfaces';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-overlay-menu',\n    templateUrl: './overlay-menu.component.html',\n    styleUrls: ['./overlay-menu.component.scss']\n})\nexport class OverlayMenuComponent extends BaseDirective {\n    /** Whether to show the menu */\n    @Input() public show: boolean;\n    /** Emitter for changes to show */\n    @Output() public showChange = new EventEmitter<boolean>();\n\n    /** List of links to display on the menu */\n    public get menu_items(): ApplicationLink[] {\n        const settings = this._service.setting('app.general.menu') || { items: [] };\n        return settings.items || [];\n    }\n\n    /** Copyright details for the application */\n    public get copyright(): string {\n        return (this._service.setting('app.general.menu') || {}).copyright || '';\n    }\n\n    public get settings() {\n        const settings = this._service.setting('app.general.menu') || { position: '' };\n        return settings;\n    }\n\n    constructor(private _service: ApplicationService) {\n        super();\n    }\n\n    /** Current year to display for copyright */\n    public get year(): number {\n        return dayjs().year();\n    }\n\n    /** Close the overlay menu */\n    public close() {\n        this.show = false;\n        this.showChange.emit(this.show);\n    }\n\n    public delayedClose() {\n        this.timeout('close', () => this.close(), 50);\n    }\n\n    public cancelClose() {\n        this.timeout('cancel_close', () => this.clearTimeout('close'), 10);\n    }\n}\n","<div\n    class=\"overlay-menu\"\n    [class.left]=\"settings?.position === 'left'\"\n    [class.middle]=\"settings?.position === 'middle'\"\n    [class.show]=\"show\"\n    (click)=\"delayedClose()\"\n>\n    <div class=\"menu\" (click)=\"cancelClose()\">\n        <div class=\"header\">\n            <div class=\"location\"></div>\n            <button mat-icon-button (click)=\"close()\">\n                <app-icon\n                    [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"\n                ></app-icon>\n            </button>\n        </div>\n        <div class=\"body\">\n            <ul>\n                <ng-container *ngFor=\"let item of menu_items\">\n                    <ng-container *ngIf=\"item.route; else external_link\">\n                        <a\n                            [routerLink]=\"[item.route]\"\n                            routerLinkActive=\"active\"\n                            [queryParams]=\"item.query_params\"\n                        >\n                            <li>\n                                <div class=\"text\">{{ item.name }}</div>\n                                <app-icon\n                                    [icon]=\"{\n                                        type: 'icon',\n                                        class: 'material-icons',\n                                        content: 'keyboard_arrow_right'\n                                    }\"\n                                ></app-icon>\n                            </li>\n                        </a>\n                        <ng-container *ngIf=\"item.children && item.children.length\">\n                            <a\n                                *ngFor=\"let sub_item of item.children\"\n                                class=\"sub-link\"\n                                [routerLink]=\"[sub_item.route]\"\n                                routerLinkActive=\"active\"\n                                [queryParams]=\"sub_item.query_params\"\n                            >\n                                <li>\n                                    <div class=\"text\">{{ sub_item.name }}</div>\n                                    <app-icon\n                                        [icon]=\"{\n                                            type: 'icon',\n                                            class: 'material-icons',\n                                            content: 'keyboard_arrow_right'\n                                        }\"\n                                    ></app-icon>\n                                </li>\n                            </a>\n                        </ng-container>\n                    </ng-container>\n                    <ng-template #external_link>\n                        <a [href]=\"item.link | safe: 'url'\">\n                            <li>\n                                <div class=\"text\">{{ item.name }}</div>\n                                <app-icon\n                                    [icon]=\"{\n                                        type: 'icon',\n                                        class: 'material-icons',\n                                        content: 'exit_to_app'\n                                    }\"\n                                ></app-icon>\n                            </li>\n                        </a>\n                    </ng-template>\n                </ng-container>\n            </ul>\n        </div>\n        <div class=\"footer\" *ngIf=\"copyright\" i18n=\"Copyright\">\n            Copyright &copy; {{ year }} {{ copyright }}\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, Input, ContentChildren, Output, EventEmitter } from '@angular/core';\nimport { ApplicationIcon } from '../../utilities/settings.interfaces';\nimport { BaseDirective } from '../../base.directive';\n\nexport interface PopoutAction extends ApplicationIcon {\n    /** ID of the action */\n    id: string;\n}\n\n@Component({\n    selector: 'a-popout-menu',\n    templateUrl: './popout-menu.component.html',\n    styleUrls: ['./popout-menu.component.scss']\n})\nexport class PopoutMenuComponent extends BaseDirective {\n    /** List of available actions */\n    @Input() public actions: PopoutAction[] = [];\n    /** Emitter for user actions */\n    @Output() public action = new EventEmitter<string>();\n    /** Whether actions should show */\n    public show: boolean;\n\n    public close() {\n        this.timeout('close', () => {\n            this.show = false;\n        });\n    }\n}\n","<button\n    mat-icon-button\n    [class.small]=\"true\"\n    name=\"action\"\n    *ngFor=\"let item of actions; let i = index\"\n    [style.top]=\"show ? (-110 * i - 60) + '%' : ''\"\n    (click)=\"action.emit(item.id); show = false\"\n>\n    <app-icon [icon]=\"item\"></app-icon>\n</button>\n<button mat-icon-button name=\"menu\" [class.show]=\"show\" (click)=\"show = !show\" (window:click)=\"show ? close() : ''\">\n    <app-icon [icon]=\"{ class: 'material-icons', content: show ? 'add' : 'more_vert' }\"></app-icon>\n</button>\n","import { Component, OnInit, Input, EventEmitter, Output, ViewChild, ElementRef, SimpleChanges, OnChanges } from '@angular/core';\nimport { BaseDirective } from '../../base.directive';\n\n@Component({\n    selector: 'a-searchbar',\n    templateUrl: './searchbar.component.html',\n    styleUrls: ['./searchbar.component.scss']\n})\nexport class SearchbarComponent extends BaseDirective implements OnChanges {\n    /** Current contents of the searchbar input */\n    @Input('value') public value: string;\n    /** Current contents of the searchbar input */\n    @Input() public placeholder: string;\n    /** Whether external changes are being processed */\n    @Input() public loading: boolean;\n    /** Whether external changes are being processed */\n    @Input() public autofocus: boolean;\n    /** Emitter for changes to the searchbar value */\n    @Output() public valueChange = new EventEmitter<string>();\n    /** Input field reference */\n    @ViewChild('input', { static: true }) private input_field: ElementRef<HTMLInputElement>;\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.autofocus && this.autofocus) {\n            this.focusField()\n        }\n    }\n\n    public focusField() {\n        /* istanbul ignore else */\n        if (this.input_field && this.input_field.nativeElement) {\n            this.input_field.nativeElement.focus();\n        }\n    }\n}\n","<div class=\"searchbar\" tabindex=\"0\" (focus)=\"focusField()\" (click)=\"focusField()\">\n    <div class=\"prefix\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'search' }\"></app-icon>\n    </div>\n    <div class=\"input\">\n        <input #input\n            type=\"text\"\n            [(ngModel)]=\"value\"\n            (ngModelChange)=\"valueChange.emit($event)\"\n            [placeholder]=\"placeholder || 'Search...'\"\n            i18n-placeholder\n        />\n    </div>\n    <div class=\"suffix\" *ngIf=\"loading\">\n        <mat-spinner diameter=\"32\"></mat-spinner>\n    </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from '../../base.directive';\nimport { ApplicationIcon } from '../../utilities/settings.interfaces';\nimport { MatDialog } from '@angular/material/dialog';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { generateFeedbackUrl, Urls } from '../../utilities/urls';\n\n@Component({\n    selector: 'a-topbar-header',\n    template: `\n        <div [class]=\"'topbar-header ' + page\">\n            <div class=\"block home\">\n                <button mat-icon-button name=\"home-button\" class=\"home-button\"\n                        [attr.aria-label]=\"'Home'\"\n                        (click)=\"goToHome()\">\n                    <img src=\"assets/img/home.svg\"/>\n                </button>\n            </div>\n            <div class=\"block company-logo-container\">\n                <div class=\"logo\" *ngIf=\"logo\">\n                    <i *ngIf=\"logo.type === 'icon'\" [class]=\"logo.class\"\n                       aria-label=\"McKinsey & Company\">{{ logo.content }}</i>\n                    <img *ngIf=\"logo.type === 'img'\" [src]=\"logo.src | safe: 'resource'\"\n                         aria-label=\"McKinsey & Company\"\n                    />\n                </div>\n            </div>\n            <div class=\"block actions-container\">\n                <button mat-icon-button name=\"feedback-button\" class=\"feedback-button\"\n                        matTooltip=\"Feedback\"\n                        [attr.aria-label]=\"'Feedback'\">\n                    <a [href]=\"feedback\" class=\"action-link\">\n                        <img src=\"assets/img/chat.svg\" alt=\"Feedback Icon\"/>\n                    </a>\n                </button>\n                <button mat-icon-button name=\"help-button\" class=\"help-button\"\n                        matTooltip=\"Help\"\n                        [attr.aria-label]=\"'Help'\"\n                        (click)=\"goToHelp()\">\n                    <img src=\"assets/img/question.svg\" alt=\"Help Icon\"/>\n                </button>\n            </div>\n        </div>\n    `,\n    styleUrls: ['./topbar-header.component.scss'],\n})\nexport class TopbarHeaderComponent extends BaseDirective implements OnInit {\n    /** Logo of the application organisation */\n    public logo: ApplicationIcon;\n    /** Whether to show menu */\n    @Input() public menu: boolean;\n    /** Name of the page being rendered */\n    @Input() public page: string;\n    /** Emiiter for changes to menu state */\n    @Output() public menuChange = new EventEmitter<boolean>();\n    /** Name of the currently active page */\n    public currentPage: string;\n\n    public get feedback() {\n        return generateFeedbackUrl(this.currentPage);\n    }\n\n    constructor(private _service: ApplicationService, private _dialog: MatDialog,\n                private router: Router) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.logo = this._service.setting('app.logo_dark') || { type: 'icon' };\n        });\n        this.timeout('Getting Title', () => this.updateRoute(document.title));\n        this.router.events.subscribe((event: NavigationEnd) => {\n            /* istanbul ignore else */\n            if (event instanceof NavigationEnd) {\n                this.timeout('Getting Title', () => this.updateRoute(document.title));\n            }\n        });\n    }\n\n    public updateRoute(location) {\n        location = location.substr(0, location.indexOf(' |'));\n        this.currentPage = location;\n    }\n\n    /** Set menu state to `true` */\n    public showMenu() {\n        this.menu = true;\n        this.menuChange.emit(this.menu);\n    }\n\n    public async goToHome() {\n        await this.router.navigate(['/']);\n        this._dialog.closeAll();\n    }\n\n    public goToHelp() {\n        window.open(Urls.Help);\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { User } from 'src/app/services/data/users/user.class';\n\n@Component({\n    selector: 'a-user-avatar',\n    templateUrl: './user-avatar.component.html',\n    styleUrls: ['./user-avatar.component.scss']\n})\nexport class UserAvatarComponent {\n    /** User to display avatar for */\n    @Input() public user: User;\n\n    public get initials(): string {\n        if (!this.user) {\n            return 'NA';\n        }\n        const parts = this.user.name.split(' ');\n        return parts.length > 1\n            ? `${parts[0][0]}${parts[parts.length - 1][0]}`\n            : this.user.name.slice(0, 2);\n    }\n}\n","<div class=\"user-avatar\" *ngIf=\"user\" [attr.user-id]=\"user.id\">\n    <div class=\"initials\" *ngIf=\"!user.image; else image_state\">{{ initials }}</div>\n</div>\n<ng-template #image_state>\n    <img [src]=\"user.image | safe: 'resource'\" />\n</ng-template>\n","import { trigger, transition, style, animate, state } from '@angular/animations';\n\nexport const ANIMATION_SHOW_ENTER_LEAVE = trigger('show', [\n    transition(':enter', [\n        style({ opacity: 0, height: 0 }),\n        animate(300, style({ opacity: 1, height: '*' }))\n    ]),\n    transition(':leave', [\n        style({ opacity: 1, height: '*' }),\n        animate(300, style({ opacity: 0, height: 0 }))\n    ])\n]);\n\nexport const ANIMATION_SHOW_CONTRACT_EXPAND = trigger('show', [\n    state('show', style({ opacity: 1, height: '*' })),\n    state('hide', style({ opacity: 0, height: 0 })),\n    transition('show <=> hide', animate('200ms ease-in'))\n]);\n","import { MockHttpRequestHandler } from '@placeos/ts-client';\n\nimport { predictableRandomInt, unique } from '../../utilities/general.utilities';\nimport { MOCK_SPACES } from './spaces.mock';\nimport { MOCK_USERS } from './users.mock';\nimport { API } from './common.mock';\nimport { generateMockBooking } from '../../utilities/spec-helpers';\n\nwindow.control = window.control || {};\nwindow.control.systems = window.control.systems || {};\nwindow.control.handlers = window.control.handlers || [];\n\nexport const MOCK_BOOKINGS = Array(200)\n    .fill(0)\n    .map((i) => {\n        const rooms = unique(\n            Array(predictableRandomInt(4))\n                .fill(0)\n                .map((i) => MOCK_SPACES[predictableRandomInt(MOCK_SPACES.length)]),\n            'id'\n        );\n        // Set the organiser with the generated user list\n        const organiser =\n        predictableRandomInt(9999) % 10 === 0\n                ? MOCK_USERS[MOCK_USERS.length - 1]\n                : MOCK_USERS[predictableRandomInt(MOCK_USERS.length)];\n        // Set the attendees with the generated user list\n        const attendees = unique(\n            Array(predictableRandomInt(20))\n                .fill(0)\n                .map((i) => MOCK_USERS[predictableRandomInt(MOCK_USERS.length)]),\n            'email'\n        );\n        return generateMockBooking({\n            organiser,\n            attendees,\n            room_ids: rooms.map((i) => i.email),\n        });\n    });\n\nMOCK_SPACES.forEach(\n    (i) => (i.bookings = MOCK_BOOKINGS.filter((j) => j.room_ids.indexOf(i.email) >= 0))\n);\n\n// Handler for bookings index\nwindow.control.handlers.push({\n    path: `${API}/bookings`,\n    metadata: MOCK_BOOKINGS,\n    method: 'GET',\n    callback: (event) => {\n        const user = MOCK_USERS[MOCK_USERS.length - 1];\n        console.log('User:', user.email);\n        let data = !event.query_params.email\n            ? MOCK_BOOKINGS.filter(\n                  (i) =>\n                      i.organiser.email === user.email ||\n                      i.organiser === user.email ||\n                      i.attendees.reduce((a, v) => a || v.email === user.email, false)\n              )\n            : MOCK_BOOKINGS.filter(\n                  (i) =>\n                      i.organiser.email === event.query_params.email ||\n                      (i.organiser as any) === event.query_params.email ||\n                      i.attendees.reduce((a, v) => a || v.email === event.query_params.email, false)\n              );\n        console.log('Data:', data);\n        // Filter bookings between a given period\n        // if (event.query_params.from) {\n        //     const start = dayjs(+event.query_params.from * 1000);\n        //     const end = event.query_params.to\n        //         ? dayjs(+event.query_params.to * 1000).endOf('m')\n        //         : start.endOf('d');\n        //     data = data.filter((i: any) => {\n        //         const bkn_start = dayjs(i.start_epoch * 1000 || i.start * 1000)\n        //             .startOf('m')\n        //             .second(1);\n        //         const bkn_end = dayjs(i.end_epoch * 1000 || i.end * 1000);\n        //         return (\n        //             (bkn_start.isAfter(start, 's') && bkn_start.isBefore(end, 'm')) ||\n        //             (bkn_end.isAfter(start, 'm') && bkn_end.isBefore(end, 's'))\n        //         );\n        //     });\n        // }\n        return data;\n    },\n} as MockHttpRequestHandler);\n\n// Handler for bookings show\nwindow.control.handlers.push({\n    path: `${API}/bookings/:id`,\n    metadata: MOCK_BOOKINGS,\n    method: 'GET',\n    callback: (event) => {\n        if (event.route_params.id) {\n            const booking = MOCK_BOOKINGS.find(\n                (i) => i.id === event.route_params.id || i.icaluid === event.route_params.id\n            );\n            if (booking) {\n                return booking;\n            } else {\n                throw { status: 404, message: 'Booking not found.' };\n            }\n        } else {\n            throw { status: 400, message: 'Invalid booking ID' };\n        }\n    },\n} as MockHttpRequestHandler);\n\n// Handler for new bookings\nwindow.control.handlers.push({\n    path: `${API}/bookings`,\n    metadata: MOCK_BOOKINGS,\n    method: 'POST',\n    callback: (event) => {\n        if (event.body) {\n            event.body.id = `bkn-${predictableRandomInt(9_999_999)}`;\n            event.body.icaluid = `ical-${event.body.id}`;\n            event.body.approval_status = {};\n            for (let i = 0; i < event.body.room_ids.length; i++) {\n                event.body.approval_status[event.body.room_ids[i]] = event.body.auto_approve[i]\n                    ? 'approved'\n                    : 'tentative';\n            }\n            MOCK_BOOKINGS.push(event.body);\n            MOCK_SPACES.forEach(\n                (space) =>\n                    (space.bookings = MOCK_BOOKINGS.filter(\n                        (booking) => booking.room_ids.indexOf(space.email) >= 0\n                    ))\n            );\n            return event.body;\n        } else {\n            throw { status: 500, message: 'Invalid booking data' };\n        }\n    },\n} as MockHttpRequestHandler);\n\n// Handler for updating existing bookings\nwindow.control.handlers.push({\n    path: `${API}/bookings/:id`,\n    metadata: MOCK_BOOKINGS,\n    method: 'PUT',\n    callback: (event) => {\n        if (event.route_params.id) {\n            const index = MOCK_BOOKINGS.findIndex(\n                (i) => i.id === event.route_params.id || i.icaluid === event.route_params.id\n            );\n            if (index >= 0) {\n                event.body.approval_status = {};\n                for (let i = 0; i < event.body.room_ids.length; i++) {\n                    event.body.approval_status[event.body.room_ids[i]] = event.body.auto_approve[i]\n                        ? 'approved'\n                        : 'tentative';\n                }\n                MOCK_BOOKINGS[index] = event.body;\n                MOCK_SPACES.forEach(\n                    (i) =>\n                        (i.bookings = MOCK_BOOKINGS.filter((j) => j.room_ids.indexOf(i.email) >= 0))\n                );\n                return event.body;\n            } else {\n                throw { status: 404, message: 'Booking not found' };\n            }\n        } else throw { status: 500, message: 'Invalid booking ID' };\n    },\n} as MockHttpRequestHandler);\n\n// Handler for deleting exisiting bookings\nwindow.control.handlers.push({\n    path: `${API}/bookings/:id`,\n    metadata: MOCK_BOOKINGS,\n    method: 'DELETE',\n    callback: (event) => {\n        if (event.route_params.id) {\n            const index = MOCK_BOOKINGS.findIndex(\n                (i) => i.id === event.route_params.id || i.icaluid === event.route_params.id\n            );\n            if (index >= 0) {\n                MOCK_BOOKINGS.splice(index, 1);\n                MOCK_SPACES.forEach(\n                    (i) =>\n                        (i.bookings = MOCK_BOOKINGS.filter((j) => j.room_ids.indexOf(i.email) >= 0))\n                );\n            } else {\n                throw { status: 404, message: 'Booking not found' };\n            }\n        } else throw { status: 500, message: 'Invalid booking ID' };\n    },\n} as MockHttpRequestHandler);\n","import { MockHttpRequestHandler } from '@placeos/ts-client';\n\nimport { MOCK_ORG } from './organisation.mock';\nimport { DOMAIN } from './common.mock';\n\nwindow.control = window.control || {};\nwindow.control.systems = window.control.systems || {};\nwindow.control.handlers = window.control.handlers || [];\n\nexport const MOCK_BUILDINGS = [\n    {\n        id: 'zone_bld-01',\n        zone_id: 'zone_bld-01',\n        name: 'Sydney',\n        settings: {\n            discovery_info: {\n                code: 'SYD',\n                timezone: 'Australia/Sydney',\n                neighbourhoods: {\n                    'zone_lvl-01': {\n                        'Test Searchable': 'Device_Bench',\n                    },\n                },\n                visitor_space: `sydney-01.02@${DOMAIN}`,\n                booking_rules: {\n                    'zone_lvl-33': [\n                        {\n                            conditions: {\n                                is_before: '60 days',\n                                max_length: '1 week',\n                            },\n                            rules: {\n                                auto_approve: false,\n                            },\n                        },\n                    ],\n                    'zone_lvl-35': [\n                        {\n                            conditions: {},\n                            rules: {\n                                auto_approve: false,\n                            },\n                        },\n                    ],\n                    'zone_lvl-36': [\n                        {\n                            conditions: {},\n                            rules: {\n                                auto_approve: true,\n                            },\n                        },\n                    ],\n                },\n                levels: [\n                    {\n                        level_id: 'zone_lvl-33',\n                        level_name: 'Level 33',\n                        number: 1,\n                        map_url: 'assets/maps/sydney/level_33.svg',\n                        floor_type: 'staff',\n                    },\n                    {\n                        level_id: 'zone_lvl-35',\n                        level_name: 'Level 35',\n                        number: 2,\n                        map_url: 'assets/maps/sydney/level_35.svg',\n                        floor_type: 'client',\n                    },\n                    {\n                        level_id: 'zone_lvl-36',\n                        level_name: 'Level 36',\n                        number: 2,\n                        map_url: 'assets/maps/sydney/level_36.svg',\n                        floor_type: 'client',\n                    },\n                ],\n            },\n        },\n    },\n    {\n        id: 'zone_bld-02',\n        zone_id: 'zone_bld-02',\n        name: 'London Post',\n        settings: {\n            discovery_info: {\n                code: 'LON',\n                timezone: 'Europe/London',\n                visitor_space: `london-01.02@${DOMAIN}`,\n                holding_bay: `11.10@${DOMAIN}`,\n                levels: [\n                    {\n                        level_id: 'zone_lvl-10',\n                        level_name: 'Level 10',\n                        number: 1,\n                        map_url: 'assets/maps/london/level_10.svg',\n                        floor_type: 'staff',\n                    },\n                    {\n                        level_id: 'zone_lvl-11',\n                        level_name: 'Level 11',\n                        number: 11,\n                        map_url: 'assets/maps/london/level_11.svg',\n                        floor_type: 'client',\n                    },\n                ],\n            },\n        },\n    },\n];\n\nMOCK_BUILDINGS.push({ ...MOCK_BUILDINGS[0], name: 'London' });\n\nMOCK_ORG[0].settings.discovery_info.buildings = MOCK_BUILDINGS;\n\n// setTimeout(() => {\n    window.control.handlers.push({\n        path: '/api/engine/v2/zones',\n        metadata: MOCK_BUILDINGS,\n        callback: (event) => {\n            if (event.query_params.tags === 'building') {\n                return { total: MOCK_BUILDINGS.length, results: MOCK_BUILDINGS };\n            } else if (event.query_params.tags === 'org') {\n                return { total: MOCK_ORG.length, results: MOCK_ORG };\n            } else if (event.query_params.tags === 'level') {\n                return { total: 0, results: [] };\n            }\n        },\n    } as MockHttpRequestHandler);\n// });\n","import { MockHttpRequestHandler } from '@placeos/ts-client';\nimport { API } from './common.mock';\nimport { MOCK_SPACES } from './spaces.mock';\n\nconst MOCK_MENU = {\n    'zone_bld-01': [\n        {\n            id: 'snacks',\n            name: 'Snacks',\n            items: [\n                { id: 'pretzels', name: 'Pretzels', price: 200 },\n                { id: 'cashews', name: 'Cashew', price: 400 },\n                { id: 'almonds', name: 'Almonds', price: 200 },\n                {\n                    id: 'chips',\n                    name: 'Chips',\n                    description: 'Pick 1',\n                    must_select: 1,\n                    package: true,\n                    price: 1000,\n                    items: [\n                        { id: 'cheezels', name: 'Cheezels' },\n                        { id: 'smiths_orginal', name: 'Smiths Orginal' },\n                        { id: 'smiths_chicken', name: 'Smiths Chicken' },\n                        { id: 'layz_orginal', name: 'Layz Orginal' },\n                    ],\n                },\n            ],\n        },\n        {\n            id: 'refresh',\n            name: 'Refreshments',\n            items: [\n                {\n                    id: 'drinks',\n                    name: 'Drink Package',\n                    description: 'Pick 3 types of drinks',\n                    must_select: 3,\n                    package: true,\n                    price: 1000,\n                    items: [\n                        { id: 'pepsi', name: 'Pepsi' },\n                        { id: 'solo', name: 'Solo' },\n                        { id: 'fanta', name: 'Fanta' },\n                        { id: 'coke_zero', name: 'Coke Zero' },\n                    ],\n                },\n                { id: 'pepsi', name: 'Pepsi', price: 80 },\n                { id: 'solo', name: 'Solo', price: 80 },\n                { id: 'fanta', name: 'Fanta', price: 80 },\n                { id: 'coke_zero', name: 'Coke Zero', price: 80 },\n            ],\n        },\n    ],\n    'zone_bld-02': [\n        {\n            id: 'snacks',\n            name: 'Snacks',\n            items: [\n                { id: 'pretzels', name: 'Pretzels', price: 200 },\n                { id: 'cashews', name: 'Cashew', price: 400 },\n                { id: 'almonds', name: 'Almonds', price: 200 },\n                {\n                    id: 'chips',\n                    name: 'Chips',\n                    description: 'Pick 1',\n                    must_select: 1,\n                    package: true,\n                    price: 1000,\n                    items: [\n                        { id: 'cheezels', name: 'Cheezels' },\n                        { id: 'smiths_orginal', name: 'Smiths Orginal' },\n                        { id: 'smiths_chicken', name: 'Smiths Chicken' },\n                        { id: 'layz_orginal', name: 'Layz Orginal' },\n                    ],\n                },\n            ],\n        },\n        {\n            id: 'refresh',\n            name: 'Refreshments',\n            items: [\n                { id: 'pepsi', name: 'Pepsi', price: 80 },\n                { id: 'solo', name: 'Solo', price: 80 },\n                { id: 'fanta', name: 'Fanta', price: 80 },\n                { id: 'coke_zero', name: 'Coke Zero', price: 80 },\n                {\n                    id: 'drinks',\n                    name: 'Drink Package',\n                    description: 'Pick 3 types of drinks',\n                    must_select: 3,\n                    package: true,\n                    price: 1000,\n                    items: [\n                        { id: 'pepsi', name: 'Pepsi' },\n                        { id: 'solo', name: 'Solo' },\n                        { id: 'fanta', name: 'Fanta' },\n                        { id: 'coke_zero', name: 'Coke Zero' },\n                    ],\n                },\n            ],\n        },\n        {\n            id: 'dinner',\n            name: 'Dinner',\n            items: [\n                {\n                    id: 'Schnitzel',\n                    name: 'Chicken Schnitzel',\n                    description: 'With a side of chips or salad',\n                    price: 1200,\n                    must_select: 1,\n                    items: [\n                        { item: 'chips', name: 'Chips' },\n                        { item: 'salad', name: 'Salad' },\n                    ],\n                },\n            ],\n        },\n    ],\n};\n\n// Handler for bookings show\nwindow.control.handlers.push({\n    path: `${API}/menu`,\n    metadata: [],\n    method: 'GET',\n    callback: (event) => {\n        if (event.query_params.room_id) {\n            const space = MOCK_SPACES.find(space => space.id == event.query_params.room_id);\n            if (space) {\n                const menu_zone = Object.keys(MOCK_MENU).find(key => space.zones.includes(key));\n                if (menu_zone) {\n                    return MOCK_MENU[menu_zone];\n                }\n            }\n        }\n        throw { status: 400, message: 'Invalid room ID' };\n    },\n} as MockHttpRequestHandler);\n","\n/** Domain of the organisation */\nexport const DOMAIN = 'acaprojects.com';\n/** Endpoint where the staff API is located */\nexport const API = '/api/staff';\n","import { MockHttpRequestHandler } from '@placeos/ts-client';\n\nimport { MOCK_USERS } from \"./users.mock\";\nimport { MOCK_SPACES } from './spaces.mock';\nimport { MOCK_BUILDINGS } from './buildings.mock';\nimport { predictableRandomInt } from '../../utilities/general.utilities';\nimport { generateMockLocation } from '../../utilities/spec-helpers';\n\nexport const MOCK_LOCATIONS: any[] = [];\n\nconst spaces = MOCK_SPACES.map(space => space.map_id);\nconst levels = MOCK_BUILDINGS.reduce((lvls, bld) => {\n    bld.settings.discovery_info.levels.forEach(lvl => lvls.push(lvl.level_id));\n    return lvls;\n}, []);\n\nfor (const user of MOCK_USERS) {\n    if (user.location || predictableRandomInt(99999) % 2 === 0) {\n        user.location = generateMockLocation(null, spaces, levels);\n        MOCK_LOCATIONS.push(user.location);\n    }\n}\n\nsetTimeout(() => {\n    window.control.handlers.push({\n        path: '/api/staff/people/:email',\n        metadata: MOCK_LOCATIONS,\n        callback: (event) => {\n            if (event.route_params.email) {\n                const user = MOCK_USERS.find(user => user.email === event.route_params.email || user.id === event.route_params.email);\n                if (user) {\n                    return user.location;\n                }\n            }\n            throw { status: 404, message: `Unable to locate user with email ${event.route_params.email}` };\n        }\n    } as MockHttpRequestHandler);\n});\n\n\n","\nexport const MOCK_ORG = [\n    {\n        settings: {\n            send_acceptance: true,\n            discovery_info: {\n                buildings: [],\n            },\n        },\n    },\n];\n","import { API, DOMAIN } from './common.mock';\nimport { MockHttpRequestHandler } from '@placeos/ts-client';\n\nimport { generateMockSpace } from '../../utilities/spec-helpers';\nimport { timePeriodsIntersect } from 'src/app/services/data/bookings/booking.utilities';\n\nwindow.control = window.control || {};\nwindow.control.systems = window.control.systems || {};\nwindow.control.handlers = window.control.handlers || [];\n\nexport const MOCK_SPACES = [\n    {\n        id: '35.06',\n        name: 'SYD-35-Durack-internal-05-DV',\n        zones: ['zone_bld-01', 'zone_lvl-35'],\n        bookable: true,\n    },\n    {\n        id: '3.08',\n        name: 'SYD-36-Trickett-internal-05-DV',\n        zones: ['zone_bld-01', 'zone_lvl-36'],\n        bookable: true,\n    },\n    {\n        id: '35.08',\n        name: 'SYD-35-Durack-internal-05-DV',\n        zones: ['zone_bld-01', 'zone_lvl-36'],\n        bookable: true,\n    },\n    {\n        id: '33.02',\n        name: 'SYD-33West-Wedding Cake-10V',\n        zones: ['zone_bld-01', 'zone_lvl-33'],\n        bookable: false,\n    },\n    {\n        id: '33.03',\n        name: 'SYD-33West-Pinchgut-05DV',\n        zones: ['zone_bld-01', 'zone_lvl-33'],\n        bookable: true,\n    },\n    { id: '10.02', name: 'LON-10-10_02_Village_green', zones: ['zone_bld-02', 'zone_lvl-10'] },\n    { id: '10.47', name: 'LON-10-EC10_10_47_Gallery', zones: ['zone_bld-02', 'zone_lvl-10'] },\n    { id: '11.07', name: 'LON-11-EC11_11_07_Client', zones: ['zone_bld-02', 'zone_lvl-11'] },\n    { id: '11.10', name: 'LON-11-EC11_11_10_Client', zones: ['zone_bld-02', 'zone_lvl-11'] },\n].map((space_data: any) => {\n    const space = generateMockSpace({\n        bookable: true,\n        ...space_data,\n        map_id: `${space_data.id}`,\n        id: `sys_rm-${space_data.id}`,\n        email: `${space_data.id}@${DOMAIN}`,\n        name: `${space_data.name}`,\n    });\n    window.control.systems[space.id] = {\n        Bookings: [\n            {\n                today: space.bookings,\n            },\n        ],\n    };\n    return space;\n});\n\n// Add handler for users index\nwindow.control.handlers.push({\n    path: `${API}/rooms`,\n    metadata: MOCK_SPACES,\n    callback: (event) => {\n        let results = MOCK_SPACES;\n        if (event.query_params.q) {\n            const query = event.query_params.q.toLowerCase();\n            results = results.filter(\n                (i) =>\n                    (i.id || '').toLowerCase().indexOf(query) >= 0 ||\n                    (i.name || '').toLowerCase().indexOf(query) >= 0 ||\n                    (i.email || '').toLowerCase().indexOf(query) >= 0\n            );\n        }\n        // Remove rooms without given zones from results\n        if (event.query_params.zone_ids) {\n            const zone_ids = event.query_params.zone_ids.split(',');\n            results = results.filter((i) => {\n                let count = 0;\n                for (const zone of zone_ids) {\n                    if (i.zones.indexOf(zone) >= 0) {\n                        count++;\n                    }\n                }\n                return count >= zone_ids.length;\n            });\n        }\n        // Remove rooms without given ids from results\n        if (event.query_params.room_ids) {\n            const room_ids = event.query_params.room_ids.split(',');\n            results = results.filter((i) => room_ids.indexOf(i.id) >= 0);\n        }\n        // Update availability status of each room results\n        if (event.query_params.available_from) {\n            results.forEach((space) => {\n                for (const booking of space.bookings) {\n                    if (\n                        timePeriodsIntersect(\n                            booking.start_epoch,\n                            booking.end_epoch,\n                            +event.query_params.available_from,\n                            +event.query_params.available_to\n                        )\n                    ) {\n                        space.settings = { available: false };\n                    } else {\n                        space.settings = { available: true };\n                    }\n                }\n            });\n        }\n        return results;\n    },\n} as MockHttpRequestHandler);\n","\nimport { MockHttpRequestHandler } from '@placeos/ts-client';\n\nimport { API } from './common.mock';\nimport { generateMockUser } from '../../utilities/spec-helpers';\nimport { predictableRandomInt } from '../../utilities/general.utilities';\n\nwindow.control = window.control || {};\nwindow.control.systems = window.control.systems || {};\nwindow.control.handlers = window.control.handlers || [];\n\nexport const MOCK_USERS = Array(Math.floor(predictableRandomInt(300) + 100)).fill(0)\n    .map(i => generateMockUser());\nexport const MOCK_CONTACTS = Array(Math.floor(predictableRandomInt(300) + 100)).fill(0)\n    .map(i => generateMockUser({ external: true }));\n\nexport const PREDEFINED_USERS = [\n    'Jonathan McFarlane',\n    'Stephen Von Takach',\n    'Alex Sorafumo',\n    'Candy Russo',\n    'Cristina Boston',\n    'Eugene Murphy',\n    'Ben Hoad',\n    'Kim Burgess',\n    'Desk Test',\n    'Space Test',\n    'Wireless Test',\n    'Zo-Kalar'\n];\n\n// Add predefined user to user list\nfor (const user of PREDEFINED_USERS) {\n    const id = user.split(' ').join('.').toLowerCase();\n    const new_user = generateMockUser({ id, name: user });\n    new_user.location = true;\n    MOCK_USERS.push(new_user);\n}\n\n// Add handler for users index\nwindow.control.handlers.push({\n    path: `${API}/users`,\n    metadata: MOCK_USERS,\n    callback: (event) => {\n        if (event.query_params.q) {\n            const query = event.query_params.q.toLowerCase();\n            return MOCK_USERS.filter(i =>\n                (i.id || '').toLowerCase().indexOf(query) >= 0 ||\n                (i.name || '').toLowerCase().indexOf(query) >= 0 ||\n                (i.email || '').toLowerCase().indexOf(query) >= 0\n            );\n        }\n        return MOCK_USERS;\n    }\n} as MockHttpRequestHandler);\n\n// Add handler for users show\nwindow.control.handlers.push({\n    path: `${API}/users/:id`,\n    metadata: MOCK_USERS,\n    callback: (event) => {\n        const user = MOCK_USERS.find(i => i.id === event.route_params.id || i.name === event.route_params.id || i.email === event.route_params.id);\n        if (user) {\n            return user;\n        } else if (event.route_params.id === 'current') {\n            return MOCK_USERS[MOCK_USERS.length - 1];\n        }\n        throw { status: 404, message: 'User not found' };\n    }\n} as MockHttpRequestHandler);\n\n// Add handler for contacts index\nwindow.control.handlers.push({\n    path: `${API}/contacts`,\n    metadata: MOCK_CONTACTS,\n    callback: (event) => {\n        if (event.query_params.q) {\n            const query = event.query_params.q.toLowerCase();\n            return MOCK_CONTACTS.filter(i =>\n                (i.id || '').toLowerCase().indexOf(query) >= 0 ||\n                (i.name || '').toLowerCase().indexOf(query) >= 0 ||\n                (i.email || '').toLowerCase().indexOf(query) >= 0\n            );\n        }\n        return MOCK_USERS;\n    }\n} as MockHttpRequestHandler);\n\n// Add handler for contacts show\nwindow.control.handlers.push({\n    path: `${API}/contacts/:id`,\n    metadata: MOCK_USERS,\n    callback: (event) => {\n        const user = MOCK_USERS.find(i => i.id === event.route_params.id || i.name === event.route_params.id);\n        if (user) {\n            return user;\n        }\n        throw { status: 404, message: 'User not found' };\n    }\n} as MockHttpRequestHandler);\n\n\n","\nimport { createSystem } from './systems.mock';\n\nimport './api/organisation.mock';\nimport './api/buildings.mock';\nimport './api/users.mock';\nimport './api/spaces.mock';\nimport './api/bookings.mock';\nimport './api/locations.mock';\nimport './api/catering-menu.mock';\n\nimport * as faker from 'faker';\n\nfaker.seed(2560);\n\nwindow.control = window.control || {};\nwindow.control.systems = {\n    ...window.control.systems,\n    ['sys-B0']: createSystem('sys-B0')\n} || {};\nwindow.control.handlers = window.control.handlers || [];\n","\n\nimport { setMockBookingStartDatetime } from \"../../services/data/bookings/booking.utilities\";\n\nimport * as dayjs from 'dayjs';\nimport { generateMockSpace } from '../utilities/spec-helpers';\n\nexport interface IBookingPanelBindings {\n    /** Whether user input is enabled */\n    touch_enabled: boolean;\n    /** Number of seconds before a meeting can be started, being truthy enables start/stop and auto-cancellations */\n    timeout?: number;\n    /** Number of seconds after the start of a meeting when it is auto-cancelled, overrides `timeout` value */\n    cancel_timeout?: number;\n    /** Whether to display hearing assistance UI elements */\n    has_accessability?: boolean;\n    /** URL to embed into the control modal when opened */\n    control_url?: string;\n    /** Whether to display catering UI elements */\n    has_catering?: boolean;\n    /** Whether to hide booking details(title and host) */\n    hide_details?: boolean;\n    /** Whether to hide the title of the displayed bookings */\n    hide_title?: boolean;\n    /** Whether to hide user(host) details */\n    hide_user?: boolean;\n    /** Whether to hide timeline availability */\n    hide_availability?: boolean;\n    /** Whether to disable booking from the UI */\n    booking_disabled?: boolean;\n    /** Whether booking future meetings are allowed */\n    no_timeline_bookings?: boolean;\n    /** Time before the booking end with which the current booking is endable in ms from UTC epoch */\n    is_endable?: number;\n    /** Whether to automatically ask user starting the current meeting */\n    ask_start?: boolean;\n    /** Whether to automatically ask user about ending the active meeting */\n    ask_end?: boolean;\n    /** Default meeting title if the displayed meeting doesn't have one */\n    default_title?: string;\n    /** Hide all meeting related details */\n    hide_all?: boolean;\n    /** Title of the active space */\n    title?: string;\n    /** Description of the active space */\n    description?: string;\n    /** URL of an icon image to display on the UI */\n    icon?: string;\n    /** Whether the space status is displayed on the right */\n    flip_status?: boolean;\n    /** Whether bookings can be automatically cancelled once they expire */\n    can_cancel?: boolean;\n    /** Minimum bookable duration in minutes */\n    min_duration?: number;\n    /** Maximum bookable duration in minutes */\n    max_duration?: number;\n    /** Start time of the business day with format `HH:mm` */\n    business_start?: string;\n    /** End time of the business day with format `HH:mm` */\n    business_end?: string;\n\n}\n\nconst LETTERS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('');\nconst NUMBERS = '0123456789'.split('');\n\nlet index = 0;\n\nconst SPACE_LIST: any[] = [];\n\nconst IMAGES: string[] = ['large_down', 'large_up', 'small_down', 'small_up'];\n\n/**\n * Create mock engine booking module with appropriate bookings and space data\n */\nexport function createSystem(id?: string) {\n    id = id || `sys-${LETTERS[Math.floor(index / NUMBERS.length)]}${NUMBERS[(index++) % NUMBERS.length]}`;\n    setMockBookingStartDatetime(dayjs().minute(-50).valueOf());\n    const space = generateMockSpace({ id });\n    SPACE_LIST.push(space);\n\n    const booking_bindings: IBookingPanelBindings = {\n        touch_enabled: true,\n        timeout: 300,\n        cancel_timeout: 600,\n        has_catering: true,\n        control_url: 'https://aca.im/demo/aca/control/',\n        icon: `/assets/img/${IMAGES[Math.floor(Math.random() * IMAGES.length)]}.png`\n    };\n\n    const today = dayjs();\n    const desk_bindings = {\n        'zone_lvl-01:bookings': {\n            'SYD.1.09.E': {\n                [today.format('YYYY-MM-DD')]: {\n                    // 'first@acaprojects.com': {\n                    'zo-kalar@acaprojects.com': {\n                        start: today.subtract(1, 'h').unix(),\n                        end: today.add(1, 'h').unix(),\n                        checked_in: true\n                    }\n                },\n                [today.add(1, 'd').format('YYYY-MM-DD')]: {\n                    'second@acaprojects.com': {\n                        start: today.add(1, 'd').subtract(1, 'h').unix(),\n                        end: today.add(1, 'd').add(1, 'h').unix()\n                    }\n                }\n            },\n            'SYD.1.09.F': {},\n            'SYD.1.09.G': {}\n        },\n        'zone_lvl-02:bookings': {\n            'SYD.2.01.A': {\n                [today.format('YYYY-MM-DD')]: {\n                    'first@acaprojects.com': {\n                        start: today.subtract(1, 'h').unix(),\n                        end: today.add(1, 'h').unix(),\n                        checked_in: true\n                    }\n                },\n                [today.add(1, 'd').format('YYYY-MM-DD')]: {\n                    'second@acaprojects.com': {\n                        start: today.add(1, 'd').subtract(1, 'h').unix(),\n                        end: today.add(1, 'd').add(1, 'h').unix()\n                    }\n                }\n            },\n            'SYD.2.01.B': {},\n            'SYD.2.01.C': {}\n        }\n    };\n\n    const system = {\n        id, name: space.name,\n        Bookings: [],\n        DeskManagement: [{\n            'zone_lvl-01:desk_ids': ['SYD.1.09.E', 'SYD.1.09.F', 'SYD.1.09.G']\n        }],\n        DeskBookings: []\n    };\n    system.Bookings.push({\n        ...booking_bindings,\n        room_name: space.name,\n        today: space.bookings,\n        $start_meeting: (time: number) => {\n            system.Bookings[0].last_meeting_started = time;\n        },\n        $cancel_meeting: (time: number, reason: string) => {\n            const list = system.Bookings[0].today;\n            system.Bookings[0].today = list.filter(i => i.date !== time);\n        },\n        $waiter_call: () => {\n            console.log(`[MOCK][${id}] Waiter called...`);\n        }\n    });\n    system.DeskBookings.push({\n        ...desk_bindings,\n        $book: (email: string, desk: string, date: number) => {\n            console.log('[MOCK] Book called');\n        },\n        $check_in: (email: string, desk: string) => {\n            system.DeskBookings[0]['zone_lvl-01:bookings'][desk][dayjs().format('YYYY-MM-DD')][email].checked_in = true;\n        },\n        $check_out: (email: string, desk: string) => {\n            console.log(`[MOCK]Check out called`);\n        },\n    });\n    return system;\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { EditorModule } from '@tinymce/tinymce-angular';\nimport { ComposerModule } from '@placeos/composer';\n\nimport { ScrollingModule } from '@angular/cdk/scrolling';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatTabsModule } from '@angular/material/tabs';\n\nimport { APipesModule } from '@acaprojects/ngx-pipes';\nimport { AInteractiveMapModule } from '@acaprojects/ngx-interactive-map';\nimport { ACustomEventsModule } from '@acaprojects/ngx-custom-events';\nimport { ADatePickerModule } from '@acaprojects/ngx-date-picker';\n\nimport { BaseDirective } from './base.directive';\nimport { LoginComponent } from './components/login/login.component';\nimport { IconComponent } from './components/icon/icon.component';\nimport { TopbarHeaderComponent } from './components/topbar-header/topbar-header.component';\nimport { OverlayMenuComponent } from './components/overlay-menu/overlay-menu.component';\nimport { FooterMenuComponent } from './components/footer-menu/footer-menu.component';\nimport { SearchbarComponent } from './components/searchbar/searchbar.component';\nimport { UserAvatarComponent } from './components/user-avatar/user-avatar.component';\nimport { MapControlsComponent } from './components/map-controls/map-controls.component';\nimport { PopoutMenuComponent } from './components/popout-menu/popout-menu.component';\nimport { AlertBannerComponent } from './components/alert-banner/alert-banner.component';\n\nimport { UserFormComponent } from './components/forms/user-form/user-form.component';\nimport { BookingFormComponent } from './components/forms/booking-form/booking-form.component';\n\nimport { UserSearchFieldComponent } from './components/custom-fields/user-search-field/user-search-field.component';\nimport { TimeFieldComponent } from './components/custom-fields/time-field/time-field.component';\nimport { DurationFieldComponent } from './components/custom-fields/duration-field/duration-field.component';\nimport { DateFieldComponent } from './components/custom-fields/date-field/date-field.component';\nimport { ActionFieldComponent } from './components/custom-fields/action-field/action-field.component';\nimport { UserListFieldComponent } from './components/custom-fields/user-list-field/user-list-field.component';\nimport { CounterComponent } from './components/custom-fields/counter/counter.component';\nimport { InformationalImageComponent } from './components/empty-card/informational-image.component';\n\nconst COMPONENTS: Type<any>[] = [\n    BaseDirective,\n    LoginComponent,\n    IconComponent,\n    TopbarHeaderComponent,\n    OverlayMenuComponent,\n    FooterMenuComponent,\n    SearchbarComponent,\n    UserAvatarComponent,\n\n    UserFormComponent,\n    BookingFormComponent,\n\n    MapControlsComponent,\n    PopoutMenuComponent,\n    AlertBannerComponent,\n    InformationalImageComponent,\n];\n\nconst ENTRY_COMPONENT: Type<any>[] = [\n    DateFieldComponent,\n    ActionFieldComponent,\n    TimeFieldComponent,\n    DurationFieldComponent,\n    UserSearchFieldComponent,\n    UserListFieldComponent,\n    CounterComponent,\n];\n\nconst MATERIAL_MODULES: any[] = [\n    MatButtonModule,\n    MatSnackBarModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatChipsModule,\n    MatRippleModule,\n    MatMenuModule,\n    MatCheckboxModule,\n    MatTooltipModule,\n    MatRadioModule,\n    MatTabsModule,\n];\n\nconst CDK_MODULES: any[] = [\n    ScrollingModule,\n];\n\n@NgModule({\n    declarations: [\n        ...COMPONENTS,\n        ...ENTRY_COMPONENT,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        APipesModule,\n        AInteractiveMapModule,\n        ADatePickerModule,\n        ACustomEventsModule,\n        RouterModule,\n        EditorModule,\n        ComposerModule,\n        ...MATERIAL_MODULES,\n        ...CDK_MODULES,\n    ],\n    exports: [\n        APipesModule,\n        AInteractiveMapModule,\n        ACustomEventsModule,\n        ADatePickerModule,\n        ...COMPONENTS,\n        ...ENTRY_COMPONENT,\n        ...MATERIAL_MODULES,\n        ...CDK_MODULES,\n    ],\n})\nexport class SharedContentModule {\n}\n","import { HashMap } from \"./types.utilities\";\n\n/**\n * Convert map into a query string\n * @param map Key value pairs to convert\n */\nexport function toQueryString(map: HashMap) {\n    let str = '';\n    if (map) {\n        for (const key in map) {\n            if (map.hasOwnProperty(key) && map[key] !== undefined && map[key] !== null) {\n                str += `${(str ? '&' : '')}${key}=${map[key]}`;\n            }\n        }\n    }\n    return str;\n}\n","\nimport { humaniseDuration } from './general.utilities';\n\nimport { User } from '../../services/data/users/user.class';\nimport { Space } from '../../services/data/spaces/space.class';\n\nimport * as dayjs from 'dayjs';\n\n// attendees: FormFormatters.attendees(user),\n// date: FormFormatters.date,\n// room: FormFormatters.space,\n// recurrence: FormFormatters.recurrence\n\n/**\n * Get function to create formatted string for a list of users with a host\n * @param host Host user\n */\nexport function formatAttendeesWithHost(host: User): (_: User[]) => string {\n    return (l) => formatAttendees(l, host);\n}\n\n/**\n * Create formatted string from a list of users\n * @param list List of users\n * @param host Owner of the list of users\n */\nexport function formatAttendees(list: User[], host?: User) {\n    let attendee_str: string = '';\n    if (list && list.length > 0) {\n        const users = [...list];\n        if (host) {\n            const result = users.find(a => a.email === host.email);\n            if (result) {\n                users.splice(users.indexOf(result), 1);\n            }\n        }\n        const length = users.length + (host ? 1 : 0);\n        attendee_str = `${length} Attendee${length === 1 ? '' : 's'}; ${host ? host.name : ''}`;\n        for (const item of users) {\n            if (attendee_str) {\n                attendee_str += ', ';\n            }\n            attendee_str += item.name;\n        }\n        attendee_str = attendee_str.replace('; ,', ';');\n    }\n    return attendee_str;\n}\n\n/**\n * Create date formatted string for given date\n * @param date Date to format\n */\nexport function formatDate(date: number) {\n    return dayjs(date).format('DD MMMM YYYY');\n}\n\n/**\n * Create time formatted string for given date\n * @param date Date to format\n */\nexport function formatTime(date: number) {\n    return dayjs(date).format('h:mm A');\n}\n\n/**\n * Create formatted string for a period of given duration\n * @param duration Period duration in minutes\n */\nexport function formatPeriodWithDuration(duration: number) {\n    return (t) => formatPeriod(t, duration);\n}\n\n/**\n * Create formatted string for a period of given duration\n * @param timestamp Start hours and minutes of the period in the format `HH:mm`\n * @param duration Period duration in minutes\n */\nexport function formatPeriod(timestamp: string, duration: number = 60) {\n    const parts = timestamp.split(':');\n    const date = dayjs().hour(+parts[0]).minute(+parts[1]);\n    return `${date.format('h:mm A')} - ${date.add(duration, 'm').format('h:mm A')} (${humaniseDuration(duration)})`;\n}\n\n/**\n * Create formatted human readable string for a given duration\n * @param duration Duration in minutes\n */\nexport function formatDuration(duration: number) {\n    return humaniseDuration(duration);\n}\n\n/** Human readable names of applicable recurrence periods */\nexport const RECURRENCE_PERIODS: string[] = ['None', 'Daily', 'Weekly', 'Monthly', 'Yearly'];\n\n/**\n * Create human readable string for recurrence metadata\n * @param value\n */\nexport function formatRecurrence(value: { period: string | number, end: number }) {\n    if (!value || !value.period || value.period as any >= RECURRENCE_PERIODS.length) {\n        return 'No recurrence';\n    }\n    let period = typeof value.period === 'string' ? value.period : RECURRENCE_PERIODS[value.period];\n    period = `${period[0].toUpperCase()}${period.substr(1)}`;\n    const end = value.end ? `until ${dayjs(value.end * 1000).format('DD MMM YYYY')}` : 'forever';\n    return `${period} ${end}`;\n}\n\n/**\n * Create human readable string for a room or list of rooms\n * @param list List of spaces/rooms\n */\nexport function formatSpaces(list: Space | Space[]) {\n    if (!list || (list instanceof Array && list.length <= 0)) {\n        return 'No selected space';\n    }\n    if (list instanceof Array) {\n        return list.length === 1 ? list[0].name : `${list.length} Space${list.length !== 1 ? 's' : ''}`;\n    } else {\n        const capacity = list.capacity ? '(' + list.capacity + ' ' + (list.capacity === 1 ? 'person' : 'people') + ')' : '';\n        return `${list.name} ${capacity}`;\n    }\n}\n","import { HashMap, Point } from './types.utilities';\n\nimport * as dayjs from 'dayjs';\n\n/** Available console output streams. */\nexport type ConsoleStream = 'debug' | 'warn' | 'log' | 'error' | 'info';\n\n/**\n * Log data to the browser console\n * @param type Type of message\n * @param msg Message body\n * @param args array of argments to log to the console\n * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\n * @param force Whether to force message to be emitted when debug is disabled\n */\nexport function log(\n    type: string,\n    msg: string,\n    args?: any,\n    stream: ConsoleStream = 'debug',\n    force: boolean = false,\n    app_name: string = 'STAFF'\n) {\n    if (window.debug || force) {\n        const colors: string[] = ['color: #E91E63', 'color: #3F51B5', 'color: default'];\n        if (args) {\n            console[stream](`%c[${app_name}]%c[${type}] %c${msg}`, ...colors, args);\n        } else {\n            console[stream](`%c[${app_name}]%c[${type}] %c${msg}`, ...colors);\n        }\n    }\n}\n\nexport function getItemWithKeys(keys: string[], map: HashMap) {\n    const key = keys.shift();\n    if (map[key]) {\n        return keys.length > 0 ? getItemWithKeys(keys, map[key]) : map[key];\n    }\n    return null;\n}\n\n/* istanbul ignore next */\n/**\n * Checks whether the platform is a mobile device.\n */\nexport function isMobileDevice(): boolean {\n    const r = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i;\n    return !!navigator.userAgent.match(r);\n}\n\n/* istanbul ignore next */\n/**\n * Checks whether the browser is Mobile Safari.\n */\nexport function isMobileSafari(): boolean {\n    const agent = navigator.userAgent;\n    return !!(\n        agent.match(/iPhone|iPad|iPod/) &&\n        agent.match(/AppleWebKit/) &&\n        !agent.match('CriOS')\n    );\n}\n\n/* istanbul ignore next */\n/**\n * Checks whether the browser is Android Chrome.\n */\nexport function isAndroidChrome(): boolean {\n    const agent = navigator.userAgent;\n    return !!(agent.match(/Android/) && agent.match(/Chrome/));\n}\n\n/**\n * Generate string representation of a number with zeros padding the length\n * @param value Number to pad with zeros\n * @param length Length of the resulting string\n */\nexport function padZero(value: number, length: number): string {\n    let str = value.toString();\n    while (str.length < length) {\n        str = '0' + str;\n    }\n    return str;\n}\n\n/**\n * Remove duplicates from the given array\n * @param array List of items to remove duplicates from\n * @param key Key on array objects to compare for uniqueness\n */\nexport function unique(array: any[], key: string = '') {\n    return array.filter(\n        (el, pos, arr) =>\n            el &&\n            arr.indexOf(\n                key ? arr.find((i) => i && i[key] === el[key]) : arr.find((i) => i === el)\n            ) === pos\n    );\n}\n\n/**\n * Convert duration to human readable string\n * @param duration Duration in minutes\n * @param short Whether to use short form of duration words e.g. hours as h\n */\nexport function humaniseDuration(duration: number, short: boolean = false) {\n    if (!duration || duration < 0) {\n        return '';\n    }\n    const h = Math.floor(duration / 60);\n    let d = `${h >= 1 ? h + (short ? 'h' : ' hour' + (h === 1 ? '' : 's')) : ''}`;\n    if (duration % 60 !== 0) {\n        if (d) {\n            d += short ? ' ' : ', ';\n        }\n        const m = duration % 60;\n        d += `${m >= 1 ? m + (short ? 'm' : ' minute' + (m === 1 ? '' : 's')) : ''}`;\n    }\n    return d;\n}\n\n/**\n * Get a filtered list of items\n * @param filter Value to filter on\n * @param items List of results to filter\n * @param fields Fields to check for matches on each item\n */\nexport function filterList<T = HashMap>(\n    filter: string,\n    items?: T[],\n    fields: string[] = ['id']\n): T[] {\n    let results: any[];\n    // Tokenise filter string\n    const filters = (filter || '').toLowerCase().split(' ');\n    const list = {};\n    for (const f of filters) {\n        /* istanbul ignore else */\n        if (f) {\n            /* istanbul ignore else */\n            if (!list[f]) {\n                list[f] = 0;\n            }\n            list[f]++;\n        }\n    }\n    // Group similar tokens\n    const parts = [];\n    for (const f in list) {\n        /* istanbul ignore else */\n        if (list.hasOwnProperty(f)) {\n            parts.push({ word: f, count: list[f], regex: new RegExp(f, 'gi') });\n        }\n    }\n    parts.sort((a, b) => b.word.length - a.word.length || a.word.localeCompare(b.word));\n    const item_list = JSON.parse(JSON.stringify(items || []));\n    /* istanbul ignore else */\n    if (filter) {\n        results = item_list.filter((item) => {\n            let match_count = 0;\n            item.match_index = 65535;\n            item.match = '';\n            const field_list = {};\n            // Initialise field match variables\n            for (const f of fields) {\n                field_list[f] = {\n                    value: (item[f] || '').toLowerCase(),\n                    index: 65536,\n                    matched: 0,\n                };\n            }\n            // Search for matches with the tokenised filter string\n            for (const i of parts) {\n                /* istanbul ignore else */\n                if (i.word) {\n                    // Check fields for matches\n                    for (const f of fields) {\n                        const field = field_list[f];\n                        const index = field.value.indexOf(i.word);\n                        field.index = index < field.index ? index : field.index;\n                        field.matches = (field.value.match(i.regex) || []).length;\n                        field.value = field.value.replace(i.regex, ' ');\n                    }\n                    // Update token match count\n                    for (const f of fields) {\n                        const field = field_list[f];\n                        /* istanbul ignore else */\n                        if (field.matches >= i.count) {\n                            match_count++;\n                            // Update field matches\n                            let changed = 0;\n                            const tokens = (item[`match_${f}`] || item[f] || '').split(' ');\n                            for (const k of tokens) {\n                                /* istanbul ignore else */\n                                if (changed >= i.count) {\n                                    break;\n                                }\n                                /* istanbul ignore else */\n                                if (k.toLowerCase().indexOf(i.word) >= 0 && k.indexOf('`') < 0) {\n                                    tokens[tokens.indexOf(k)] = k.replace(i.regex, '`$&`');\n                                    changed++;\n                                }\n                            }\n                            item[`match_${f}`] = tokens.join(' ');\n                            break;\n                        }\n                    }\n                }\n            }\n            // Get field with the most relevent match\n            for (const f of fields) {\n                const field = field_list[f];\n                /* istanbul ignore else */\n                if (field.index < item.match_index && field.index >= 0) {\n                    item.match_index = field.index;\n                    item.match = f;\n                }\n            }\n            return item.match_index >= 0 && item.match && match_count >= parts.length;\n        });\n    } else {\n        results = item_list;\n    }\n    // Sort by order of relevence then name\n    results.sort((a, b) => {\n        const diff = a.match_index - b.match_index;\n        return diff === 0 ? a.name.localeCompare(b.name) : diff;\n    });\n    return results;\n}\n\n/**\n * Convert a match string from `filterList` to renderable HTML\n * @param str Match string to change\n */\nexport function matchToHighlight(str: string): string {\n    /* istanbul ignore else */\n    if (str) {\n        str = str.replace(/\\`[a-zA-Z0-9\\@\\.\\_]*\\`/g, '<span class=\"highlight\">$&</span>');\n        str = str.replace(/\\`/g, '');\n    }\n    return str;\n}\n\n/**\n * Convert time string to ms from UTC epoch for today\n * @param time Time string in the format `HH:mm`\n */\nexport function timeToDate(time: string): number {\n    const parts = time.split(':');\n    const date = dayjs()\n        .hour(+parts[0])\n        .minute(+parts[1])\n        .startOf('m');\n    return date.valueOf();\n}\n\n/**\n * Generate a random number\n * @param ceil Biggest value to generate not inclusive\n * @param floor Smallest value to generate. Defaults to 0\n */\nexport function randomInt(ceil: number, floor: number = 0) {\n    return Math.floor(Math.random() * (ceil - floor)) + floor;\n}\n\n/** Get time format string for locale */\nexport function timeFormatString(): string {\n    return is24HourTime() ? 'HH:mm' : 'h:mm A';\n}\n\n/** Whether locale string is displayed in 24 hour time */\nexport function is24HourTime(): boolean {\n    const date = new Date();\n    const localeString = date.toLocaleTimeString(\n        document.querySelector('html').getAttribute('lang') || navigator.language\n    ).toLowerCase();\n    return localeString.indexOf('am') < 0 && localeString.indexOf('pm') < 0;\n}\n\n/* istanbul ignore next */\n/**\n * Downloads a file to the users computer with the given filename and contents\n * @param filename Name of the file to download\n * @param contents Contents of the file to download\n */\nexport function downloadFile(filename: string, contents: string) {\n    const element = document.createElement('a');\n    element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(contents));\n    element.setAttribute('download', filename);\n\n    element.style.display = 'none';\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n}\n\n/**\n * Parse raw CSV data into a JSON object\n * @param csv CSV data to parse\n */\nexport function csvToJson(csv: string) {\n    const lines = csv.split('\\n');\n    let fields = lines.splice(0, 1)[0].split(',');\n    fields = fields.map((v) => v.replace('\\r', ''));\n    const list: any[] = [];\n    for (const line of lines) {\n        let parts = line.split(',');\n        parts = parts.map((v) => v.replace('\\r', ''));\n        /* istanbul ignore else */\n        if (parts.length >= fields.length) {\n            const item: any = {};\n            for (let i = 0; i <= parts.length; i++) {\n                let part = null;\n                part = parts[i];\n                /* istanbul ignore else */\n                if (part !== undefined) {\n                    item[(fields[i] || '').split(' ').join('_').toLowerCase()] = part;\n                }\n            }\n            list.push(item);\n        }\n    }\n\n    return list;\n}\n\n/**\n * Convert javascript array to CSV string\n * @param json Javascript array to convert\n */\nexport function jsonToCsv(json: HashMap[]) {\n    /* istanbul ignore else */\n    if (json instanceof Array && json.length > 0) {\n        const keys = Object.keys(json[0]);\n        const valid_keys = keys.filter((key) => json[0].hasOwnProperty(key));\n        return `${valid_keys.join(',')}\\n${json\n            .map((item) => valid_keys.map((key) => item[key]).join(','))\n            .join('\\n')}`;\n    }\n    return '';\n}\n\n/* istanbul ignore next */\n/**\n * detect IE\n * returns version of IE or false, if browser is not Internet Explorer\n */\nexport function detectIE() {\n    var ua = window.navigator.userAgent;\n\n    var msie = ua.indexOf('MSIE ');\n    if (msie > 0) {\n        // IE 10 or older => return version number\n        return parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\n    }\n\n    var trident = ua.indexOf('Trident/');\n    if (trident > 0) {\n        // IE 11 => return version number\n        var rv = ua.indexOf('rv:');\n        return parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);\n    }\n\n    var edge = ua.indexOf('Edge/');\n    if (edge > 0) {\n        // Edge (IE 12+) => return version number\n        return parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);\n    }\n\n    // other browser\n    return false;\n}\n\n/**\n * Grab point details from mouse or touch event\n * @param event Event to grab details from\n */\nexport function eventToPoint(event: MouseEvent | TouchEvent): Point {\n    if (!event) {\n        return { x: -1, y: -1 };\n    }\n    if (event instanceof MouseEvent) {\n        return { x: event.clientX, y: event.clientY };\n    } else {\n        return event.touches && event.touches.length > 0\n            ? { x: event.touches[0].clientX, y: event.touches[0].clientY }\n            : { x: -1, y: -1 };\n    }\n}\n\n/* istanbul ignore next */\n/**\n * Flatten nested array\n * @param an_array Array to flatten\n */\nexport function flatten<T = any>(an_array: T[]) {\n    const stack = [...an_array];\n    const res = [];\n    while (stack.length) {\n        // pop value from stack\n        const next = stack.pop();\n        if (Array.isArray(next)) {\n            // push back array items, won't modify the original input\n            stack.push(...next);\n        } else {\n            res.push(next);\n        }\n    }\n    // reverse to restore input order\n    return res.reverse();\n}\n\nconst seed = xmur3('PlaceOS');\nconst rand = sfc32(0x9e3779b9, 0x243f6a88, 0xb7e15162, seed());\n\nexport function predictableRandomInt(ceil: number = 100, floor: number = 0) {\n    return Math.floor(rand() * (ceil - floor)) + floor;\n}\n\n// https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript\nfunction xmur3(str) {\n    for (var i = 0, h = 1779033703 ^ str.length; i < str.length; i++)\n        (h = Math.imul(h ^ str.charCodeAt(i), 3432918353)), (h = (h << 13) | (h >>> 19));\n    return function () {\n        h = Math.imul(h ^ (h >>> 16), 2246822507);\n        h = Math.imul(h ^ (h >>> 13), 3266489909);\n        return (h ^= h >>> 16) >>> 0;\n    };\n}\n\nfunction sfc32(a, b, c, d) {\n    return function () {\n        a >>>= 0;\n        b >>>= 0;\n        c >>>= 0;\n        d >>>= 0;\n        var t = (a + b) | 0;\n        a = b ^ (b >>> 9);\n        b = (c + (c << 3)) | 0;\n        c = (c << 21) | (c >>> 11);\n        d = (d + 1) | 0;\n        t = (t + d) | 0;\n        c = (c + t) | 0;\n        return (t >>> 0) / 4294967296;\n    };\n}\n","import { of, BehaviorSubject } from 'rxjs';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { Organisation } from 'src/app/services/data/organisation/organisation.class';\nimport { BaseDataClass } from 'src/app/services/data/base-api.class';\nimport { MapLocation } from 'src/app/services/data/location/location.class';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { ServiceManager } from 'src/app/services/data/service-manager.class';\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { HashMap } from './types.utilities';\nimport { predictableRandomInt, padZero, unique } from './general.utilities';\n\nimport * as faker from 'faker';\nimport * as dayjs from 'dayjs';\n\nlet SERVICE: any;\n\ndeclare global {\n    interface Jest { fn: () => any }\n};\n\ndeclare let jest: Jest;\n\n/* istanbul ignore file */\n\n/**\n * Generate a mocked version of the application service\n */\nexport function generateMockAppService() {\n    SERVICE = {\n        setting: jest.fn(),\n        notify: jest.fn(),\n        notifyInfo: jest.fn(),\n        notifyWarn: jest.fn(),\n        notifySuccess: jest.fn(),\n        notifyError: jest.fn(),\n        log: jest.fn(),\n        navigate: jest.fn(),\n        navigateBack: jest.fn(),\n        get: jest.fn(),\n        listen: jest.fn(),\n        set: jest.fn(),\n        Composer: { auth: { token: 'test' } },\n        Hotkeys: { listen: jest.fn() },\n        Users: generateMockDataService('UsersService'),\n        Organisation: {\n            levelWithID: jest.fn(),\n            listen: jest.fn(),\n            initialised: of(true),\n            building: new Building(generateMockBuilding({ id: 'bld-01' }))\n        },\n        Locations: generateMockDataService('LocationsService'),\n        Base: generateMockDataService('BaseService'),\n        Menu: generateMockDataService('CateringMenuService'),\n        Spaces: generateMockDataService('SpacesService'),\n        Bookings: generateMockDataService('BookingsService'),\n        Reports: generateMockDataService('ReportsService'),\n        CateringItems: generateMockDataService('CateringItemsService'),\n        CateringCategories: generateMockDataService('CateringCategoriesService'),\n        initialised: of(true)\n    };\n    ServiceManager.setService(BaseDataClass, SERVICE.Base);\n    ServiceManager.setService(Organisation, SERVICE.Organisation);\n    ServiceManager.setService(Building, SERVICE.Organisation);\n    ServiceManager.setService(User, SERVICE.Users);\n    ServiceManager.setService(Booking, SERVICE.Bookings);\n    ServiceManager.setService(Space, SERVICE.Spaces);\n    ServiceManager.setService(MapLocation, SERVICE.Locations);\n    ServiceManager.setService(CateringItem, SERVICE.CateringItems);\n    ServiceManager.setService(CateringCategory, SERVICE.CateringCategories);\n    SERVICE.Organisation.buildings = [SERVICE.Organisation.building];\n    SERVICE.Users.current = new User(generateMockUser());\n    SERVICE.Users.initialised = of(true);\n    SERVICE.Bookings.booking_list = new BehaviorSubject(new Array(10).fill(0).map(_ => new Booking(generateMockBooking())));\n    SERVICE.listen.mockReturnValue(of(null, []));\n    return SERVICE;\n}\n\nexport function generateMockDataService(name: string) {\n    const service = {\n        find: jest.fn(),\n        filter: jest.fn(),\n        listen: jest.fn(),\n        get: jest.fn(),\n        set: jest.fn(),\n        setting: jest.fn(),\n        query: jest.fn(),\n        show: jest.fn(),\n        add: jest.fn(),\n        save: jest.fn(),\n        remove: jest.fn(),\n        delete: jest.fn(),\n        update: jest.fn(),\n        addFrom: jest.fn(),\n        removeFrom: jest.fn(),\n        task: jest.fn(),\n        available: jest.fn(),\n        process: jest.fn(),\n        updateList: jest.fn(),\n        clearList: jest.fn(),\n        removeFromList: jest.fn(),\n        accept: jest.fn(),\n        decline: jest.fn(),\n        checkin: jest.fn(),\n        is_logged_in: false,\n        initialised: of(true),\n        name\n    };\n    service.save.mockImplementation(_ => Promise.resolve(new Booking(_)));\n    service.listen.mockReturnValue(of(null));\n    service.filter.mockReturnValue([]);\n    return service;\n}\n\nlet SPACE_COUNT: number = 0;\n\nexport function generateMockSpace(overrides: HashMap = {}): HashMap {\n    const id = `space-${SPACE_COUNT++}`;\n    const name = `${faker.name.firstName()} ${faker.name.lastName()} Space`;\n    const linked = Math.floor(predictableRandomInt(99999)) % 2 === 0 && SPACE_COUNT > 1;\n    return {\n        id,\n        name,\n        long_name: `${name} with an long name`,\n        map_id: `${SPACE_COUNT}`,\n        capacity: Math.floor(predictableRandomInt(20) + 1) * 2,\n        email: `${name.toLowerCase().split(' ').join('.')}@${USER_DOMAIN}`,\n        type: faker.commerce.productName(),\n        searchable: Math.floor(predictableRandomInt(99999)) % 2 === 0,\n        controlable: Math.floor(predictableRandomInt(99999)) % 2 === 0,\n        bookable: Math.floor(predictableRandomInt(99999)) % 2 === 0,\n        cost_hour: Math.floor(predictableRandomInt(300)) * 100,\n        setup: Math.floor(predictableRandomInt(6)) * 5,\n        breakdown: Math.floor(predictableRandomInt(6)) * 5,\n        zones: ['zone_lvl-0'],\n        support_url: `/control/#/${id}`,\n        bookings: Array(10).fill(0).map(i => generateMockBooking()),\n        linked_rooms: linked ? [`space-${Math.floor(predictableRandomInt(SPACE_COUNT - 1))}`] : [],\n        image: faker.image.business(),\n        ...overrides\n    };\n}\n\nlet BOOKING_COUNT = 0;\nlet BOOKING_DATE = dayjs().hour(6).minute(0).subtract(10, 'd').startOf('m');\n\n/**\n * Set the initial time used for generating mock bookings\n * @param time New initial time as ms from UTC epoch\n */\nexport function setMockBookingStartDatetime(time: number) {\n    BOOKING_DATE = dayjs(time).startOf('m');\n}\n\n/**\n * Create mock raw API data for a booking\n * @param override Overrides the properties of the generated booking with it's own\n */\nexport function generateMockBooking(override: HashMap = {}) {\n    const id = `booking-${BOOKING_COUNT++}`;\n    BOOKING_DATE = BOOKING_DATE.add(Math.floor(predictableRandomInt(4) + 2) * 15, 'm');\n    const start = BOOKING_DATE.valueOf();\n    const duration = Math.floor(predictableRandomInt(4) + 2) * 15;\n    BOOKING_DATE = BOOKING_DATE.add(Math.floor(predictableRandomInt(4)) * 15, 'm');\n    return {\n        id,\n        icaluid: padZero(Math.floor(predictableRandomInt(99999999)), 8),\n        title: `${faker.commerce.productName()} Meeting`,\n        attendees: Array(Math.floor(predictableRandomInt(5) + 2))\n            .fill(0)\n            .map((i) => generateMockUser(override.users)),\n        organiser: generateMockUser(),\n        start_epoch: dayjs(start).unix(),\n        end_epoch: dayjs(start).add(duration, 'm').unix(),\n        description: faker.lorem.paragraph(),\n        notes: [{ type: 'other', message: faker.lorem.paragraph() }],\n        location: faker.address.city(),\n        has_catering: Math.floor(predictableRandomInt(34567)) % 3 === 0,\n        booking_type: ['internal', 'training', 'setup', 'client', 'Interview'][predictableRandomInt(5)],\n        setup: { 'space-01': Math.max(0, (predictableRandomInt(12) - 6) * 5) },\n        breakdown: { 'space-01': Math.max(0, (predictableRandomInt(12) - 6) * 5) },\n        status: {},\n        catering: [],\n        room_ids: [],\n        ...override,\n    };\n}\n\nlet BLD_COUNT = 0;\nlet LVL_COUNT = 0;\n\n/**\n * Generate raw mock data for creating a building\n * @param id Forced ID for the mock\n */\nexport function generateMockBuilding(overrides: HashMap = {}): HashMap {\n    const id = `zone_bld-${BLD_COUNT++}`;\n    const levels = Array(10)\n        .fill(0)\n        .map(i => generateMockLevel());\n    const features: any = {};\n    for (const lvl of levels) {\n        const count = Math.floor(predictableRandomInt(3) + 2);\n        features[lvl.level_id] = {};\n        for (let i = 0; i < count; i++) {\n            features[lvl.level_id][faker.commerce.productName()] = `feature-${i + 1}`;\n        }\n    }\n    return {\n        id,\n        zone_id: id,\n        extras: Array(10)\n            .fill(0)\n            .map(i => {\n                const name = faker.commerce.productName();\n                return {\n                    extra_id: name\n                        .split(' ')\n                        .join('-')\n                        .toLowerCase(),\n                    extra_name: name\n                };\n            }),\n        loan_items: Array(10)\n            .fill(0)\n            .map(i => {\n                const name = faker.commerce.productName();\n                return {\n                    extra_id: name\n                        .split(' ')\n                        .join('-')\n                        .toLowerCase(),\n                    extra_name: name\n                };\n            }),\n        levels,\n        roles: {\n            'first-aiders': Array(10)\n                .fill(0)\n                .map(i => generateMockUser())\n        },\n        neighbourhoods: features,\n        settings: {\n            test: {\n                nested: {\n                    level2: true,\n                    org: false\n                }\n            }\n        },\n        ...overrides\n    };\n}\n\n/**\n * Generate raw mock data for a building level\n * @param id Forced ID for the mock\n * @param map_url Map URL for the level\n */\nexport function generateMockLevel(id?: string, map_url?: string): HashMap {\n    if (!id) {\n        id = `zone_lvl-${LVL_COUNT++}`;\n    }\n    return {\n        level_id: id,\n        level_name: `Level ${LVL_COUNT}`,\n        map_url\n    };\n}\n\nlet USER_COUNT = 0;\n\nexport let USER_DOMAIN = 'acaprojects.com';\n\nconst USER_EMAILS: string[] = [];\n\n/**\n * Generate raw mock data for a user\n * @param id Forced ID for the mock\n * @param name Forced name for the user\n * @param external Whether user is external of the organisation\n */\nexport function generateMockUser(override: HashMap = {}): HashMap {\n    const id = `user-${USER_COUNT++}`;\n    const name = `${faker.name.firstName()} ${faker.name.lastName()}`;\n    const external = override.external || !(predictableRandomInt(99999) % 2);\n    const organisation = external ? faker.company.companyName() : USER_DOMAIN.split('.')[0];\n    let delegates: string[] = [];\n    const delegate_count = Math.min(predictableRandomInt(4) + 1, USER_EMAILS.length);\n    for (let i = 0; i < delegate_count; i++) {\n        delegates.push(USER_EMAILS[Math.floor(predictableRandomInt(USER_EMAILS.length))]);\n    }\n    delegates = unique(delegates);\n    const email = `${name\n        .split(' ')\n        .join('.')\n        .toLowerCase()}@${external ? 'not-' : ''}${USER_DOMAIN}`;\n    USER_EMAILS.push(email);\n    return {\n        id,\n        name,\n        first_name: name.split(' ')[0],\n        last_name: name.split(' ')[1],\n        email,\n        phone: faker.phone.phoneNumber(),\n        visitor: external,\n        organisation: {\n            id: organisation\n                .split(' ')\n                .join('.')\n                .toLowerCase(),\n            name: organisation\n        },\n        department: faker.commerce.department(),\n        staff_code: padZero(Math.floor(predictableRandomInt(99999)), 5),\n        delegates,\n        image: faker.image.avatar(),\n        ...override\n    };\n}\n\nexport function generateMockLocation(overrides: HashMap, fixed_locations: string[], maps: string[]): HashMap {\n    const fixed = predictableRandomInt(999_999_999) % 2 === 0;\n    if (fixed && (!overrides || overrides.fixed)) {\n        return {\n            map_id: fixed_locations[predictableRandomInt(fixed_locations.length)],\n            level: maps[predictableRandomInt(maps.length)],\n            ...overrides\n        }\n    } else {\n        return {\n            x: predictableRandomInt(900, 100),\n            x_max: 1000,\n            y: predictableRandomInt(500, 100),\n            level: maps[predictableRandomInt(maps.length)],\n            confidence: predictableRandomInt(30),\n            ...overrides\n        }\n    }\n}\n\nlet ORG_COUNT = 0;\n\nexport function generateMockOrganisation(): HashMap {\n    const buildings = Array(3).fill(0).map(i => generateMockBuilding());\n    return {\n        id: `zone_org-${ORG_COUNT++}`,\n        name: `Organisation ${ORG_COUNT}`,\n        buildings,\n        settings: {\n            discovery_info: {\n                buildings\n            },\n            test: {\n                nested: {\n                    org: true\n                }\n            }\n        }\n    };\n}\n\n\n","export enum Urls {\n    LearnMore = 'https://our-firm.intranet.mckinsey.com/covid-portal/travel',\n    Feedback = 'mailto:converge_feedback@mckinsey.com?subject=Feedback for page: ',\n    Help = 'https://mckinsey.service-now.com/ghd/?id=product&sys_id=9a4fe901db46ff842bf5453f299619e9&search_term=converge',\n    OfficeContacts = 'https://our-firm.intranet.mckinsey.com/ourfirm/geographies',\n}\n\nexport const generateFeedbackUrl = (page: string) => {\n    return `${Urls.Feedback}${page}`;\n};\n","import { AbstractControl } from '@angular/forms';\n\nimport { User } from '../../services/data/users/user.class';\n\nimport * as dayjs from 'dayjs';\n\nconst HAS_ERROR = true;\n\n/**\n * Check that control value is a date that is the same or after from date\n * @param control Angular form control\n * @param is_from Comparison date(ms from UTC epoch). Defaults to the current time\n */\nexport function validateDate(control: AbstractControl, is_from: number = dayjs().valueOf()) {\n    const from = dayjs(is_from);\n    const date = dayjs(control.value || undefined);\n    return date.isBefore(from, 'd') ? { date: HAS_ERROR, message: 'Booking needs to be made in the future' } : null;\n}\n\n/**\n * Build start time validation function\n * @param date Date of the time to check\n * @param is_from Comparison date(ms from UTC epoch). Defaults to the current time\n */\nexport function buildValidateStartTime(date: number, is_from: number = dayjs().valueOf()) {\n    return (c) => validateStartTime(c, date, is_from);\n}\n\n/**\n * Check that control value time is after the comparison date time\n * @param control Angular form control\n * @param date Date of the time to check\n * @param is_from Comparison date(ms from UTC epoch). Defaults to the current time\n */\nexport function validateStartTime(control: AbstractControl, date: number, is_from: number = dayjs().valueOf()) {\n    const now = dayjs(is_from);\n    const parts = control.value.split(':');\n    const date_obj = dayjs(date).hour(+parts[0]).minute(+parts[1]);\n    return date_obj.isBefore(now, 'm') ? { start: HAS_ERROR, message: 'Booking time needs to be made in the future' } : null;\n}\n\nexport function buildValidateDuration(min: number = 30, max: number = 240) {\n    return (c) => validateDuration(c, min, max);\n}\n\nexport function validateDuration(control: AbstractControl, min: number = 30, max: number = 240) {\n    if (control.value < (min || 30)) {\n        return { duration: HAS_ERROR, message: `Minimum booking duration is ${min} minute${min === 1 ? 's' : ''}` };\n    } else if (control.value > (max || 480)) {\n        return { length: HAS_ERROR, message: `Maximum booking duration is ${max} minute${max === 1 ? 's' : ''}` };\n    }\n    return null;\n}\n\nexport function buildValidateAttendees(host: User, min: number = 0) {\n    return (c) => validateAttendees(c, host, min);\n}\n\nexport function validateAttendees(control: AbstractControl, host: User, min: number = 0) {\n    if (!control || !(control.value instanceof Array)) {\n        return min > 0\n            ? { invalid: true, message: `Minimum of ${min} attendee${min === 1 ? ' is' : 's are'} required other than you` }\n            : null;\n    }\n    const list: User[] = control.value;\n    if (host) {\n        const result = list.find(a => a.email === host.email);\n        if (result) { list.splice(list.indexOf(result), 1); }\n    }\n    return list.length >= min ? null : {\n        count: true,\n        message: `Minimum of ${min} attendee${min === 1 ? ' is' : 's are'} required other than you`\n    };\n}\n\nexport function validateEndTime(date_control: AbstractControl) {\n    return (control: AbstractControl) => {\n        const date = dayjs(date_control ? date_control.value : undefined).add(control.value || 60, 'm');\n        return date.isBefore(dayjs(), 'm') ? { end_time: true } : null;\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router, NavigationEnd, NavigationStart } from '@angular/router';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\n\nexport interface BookingFlowEvent {\n    /** Type of flow event */\n    type: 'previous' | 'next' | 'reset' | 'close' | 'error';\n    /** Step which the event was emitted from */\n    step: string;\n    /** Additional metadata for the event */\n    metadata?: HashMap;\n}\n\n@Component({\n    selector: 'app-bookings',\n    templateUrl: './bookings.component.html',\n    styleUrls: ['./bookings.component.scss'],\n})\nexport class BookingsComponent extends BaseDirective implements OnInit {\n    /** Booking flow */\n    public flow: 'spaces' | 'desks';\n    /** Whether to show the overlay menu */\n    public show_menu: boolean;\n\n    constructor(\n        private _service: ApplicationService,\n        private _route: ActivatedRoute,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.title = 'Book';\n        this.subscription(\n            'route.params',\n            this._route.paramMap.subscribe((params) => {\n                /* istanbul ignore else */\n                if (params.has('flow')) {\n                    this.flow = params.get('flow') as any;\n                }\n            })\n        );\n        this.subscription(\n            'router.events',\n            this._router.events.subscribe((event) => {\n                /* istanbul ignore else */\n                if (event instanceof NavigationStart) {\n                    /* istanbul ignore else */\n                    if (event.url.indexOf('book') < 0) {\n                        localStorage.removeItem('ACA_STAFF.booking_form_data');\n                    }\n                }\n            })\n        );\n    }\n}\n","<div class=\"booking page\">\n    <header class=\"header\">\n        <a-topbar-header [(menu)]=\"show_menu\"></a-topbar-header>\n    </header>\n    <main class=\"body\">\n        <ng-container [ngSwitch]=\"flow\">\n            <booking-desk-flow *ngSwitchCase=\"'desks'\"></booking-desk-flow>\n            <booking-space-flow *ngSwitchDefault></booking-space-flow>\n        </ng-container>\n    </main>\n    <footer class=\"footer\">\n        <a-footer-menu></a-footer-menu>\n    </footer>\n</div>\n<!-- <a-overlay-menu [(show)]=\"show_menu\"></a-overlay-menu> -->\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Route } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ComposerModule } from '@placeos/composer';\n\nimport { BookingsComponent } from './bookings.component';\nimport { SharedContentModule } from 'src/app/shared/shared.module';\nimport { BookingSpaceFlowComponent } from './space-flow/space-flow.component';\nimport { BookingSpaceFlowFormComponent } from './space-flow/form/form.component';\nimport { BookingFindSpaceComponent } from './space-flow/find-space/find-space.component';\nimport { BookingSpaceItemComponent } from './space-flow/find-space/item/item.component';\nimport { BookingSpaceFiltersComponent } from './space-flow/find-space/filters/filters.component';\nimport { BookingCateringComponent } from './space-flow/catering/catering.component';\nimport { BookingCateringOrderListComponent } from './space-flow/catering/order-list/order-list.component';\nimport { BookingCateringOrderDetailsComponent } from './space-flow/catering/order-details/order-details.component';\nimport { CateringOrderListItemComponent } from './space-flow/catering/order-list/item/item.component';\nimport { CateringMenuCategoryComponent } from './space-flow/catering/order-details/category/category.component';\nimport { BookingCateringConfirmModalComponent } from './overlays/catering-confirm-modal/catering-confirm-modal.component';\nimport { CateringMenuItemComponent } from './space-flow/catering/order-details/item/item.component';\nimport { PackageOptionsModalComponent } from './overlays/package-options-modal/package-options-modal.component';\nimport { RequirementDetailsModalComponent } from './overlays/requirement-details-modal/requirement-details-modal.component';\nimport { CateringDetailsModalComponent } from './overlays/catering-details-modal/catering-details-modal.component';\nimport { RecurrenceSpacesModalComponent } from './overlays/recurrence-spaces-modal/recurrence-spaces-modal.component';\n\nconst ROUTES: Route[] = [\n    { path: ':flow', component: BookingsComponent },\n    { path: ':flow/:step', component: BookingsComponent },\n    { path: '', redirectTo: 'spaces' }\n];\n\n@NgModule({\n    declarations: [\n        BookingsComponent,\n        BookingSpaceFlowComponent,\n        BookingSpaceFlowFormComponent,\n        BookingFindSpaceComponent,\n        BookingSpaceItemComponent,\n        BookingSpaceFiltersComponent,\n        BookingCateringComponent,\n        BookingCateringOrderListComponent,\n        BookingCateringOrderDetailsComponent,\n        CateringOrderListItemComponent,\n        CateringMenuCategoryComponent,\n        BookingCateringConfirmModalComponent,\n        CateringMenuItemComponent,\n        PackageOptionsModalComponent,\n        RequirementDetailsModalComponent,\n        CateringDetailsModalComponent,\n        RecurrenceSpacesModalComponent,\n    ],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(ROUTES),\n        SharedContentModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ComposerModule\n    ]\n})\nexport class BookingsModule {}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { humaniseDuration } from 'src/app/shared/utilities/general.utilities';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { UsersService } from 'src/app/services/data/users/users.service';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nimport * as dayjs from 'dayjs';\nimport { formatRecurrence } from 'src/app/shared/utilities/formatting.utilities';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\n\nexport interface BookingConfirmModalData {\n    old_booking: Booking;\n    booking: Booking;\n}\n\n@Component({\n    selector: 'a-booking-confirm-modal',\n    templateUrl: './booking-confirm.component.html',\n    styleUrls: ['./booking-confirm.component.scss'],\n})\nexport class BookingConfirmComponent extends BaseDirective {\n    /** Emitter for user actions on the modal */\n    @Output() public event = new EventEmitter();\n    /** Display string for changes are being processed */\n    public loading: string;\n    /** Whether space availability is being checked */\n    public checking_available: boolean;\n    /** Whether to show all attendees */\n    public show_attendees: boolean;\n    /** Whether to show all attendees */\n    public show_locations: boolean;\n    /** Whether to show all catering orders */\n    public show_orders: boolean;\n    /** Whether booking has succeeded */\n    public success: boolean;\n    /** Whether booking needs to be accepted */\n    public readonly is_request: boolean;\n\n    /** Booking to confirm changes to */\n    public get old_booking(): Booking {\n        return this._data.old_booking;\n    }\n\n    /** Booking to confirm changes to */\n    public get booking(): Booking {\n        return this._data.booking;\n    }\n\n    /** Active user */\n    public get user(): User {\n        return this._users.current;\n    }\n\n    /** Title of the displayed event */\n    public get title(): string {\n        return this.booking.title;\n    }\n\n    /** Display string of when the event will occur */\n    public get when(): string {\n        const date_value = this.booking.date;\n        const duration_value = this.booking.duration;\n        const all_day = this.booking.all_day;\n        const date = dayjs(date_value);\n        const end = date.add(duration_value, 'm');\n        if (all_day && duration_value < 25 * 60) {\n            return `${date.format('DD MMM YYYY')} - All Day`;\n        } else {\n            if (date.isSame(end, 'd')) {\n                return `${date.format('DD MMM YYYY, h:mm A')} - ${end.format('h:mm A')}`;\n            } else {\n                return `${date.format('DD MMM YYYY, h:mm A')} - ${end.format(\n                    'DD MMM YYYY, h:mm A'\n                )}`;\n            }\n        }\n    }\n\n    /** Display string for the recurrence value of the booking */\n    public get recurrence(): string {\n        return formatRecurrence(this.booking.recurrence);\n    }\n\n    /** Display string for the event's duration */\n    public get duration(): string {\n        const duration_value = this.booking.duration;\n        return this.booking.all_day ? 'All Day' : humaniseDuration(duration_value);\n    }\n\n    /** List of spaces associated with the event */\n    public get spaces(): Space[] {\n        return this.booking.space_list;\n    }\n\n    /** List of attendees associated with the event not including the host */\n    public get attendees(): User[] {\n        const attendees = this.booking.attendees;\n        return attendees.filter((i) => i.email !== this.organiser.email);\n    }\n\n    /** Host of the event */\n    public get organiser(): User {\n        return this.booking.organiser || this._users.current;\n    }\n\n    /** Host of the event */\n    public get equipment_codes(): HashMap<string> {\n        return this.booking.equipment_codes || {};\n    }\n\n    /** Host of the event */\n    public get catering_codes(): HashMap<string> {\n        const catering = this.catering;\n        const codes = {};\n        for (const order of this.catering) {\n            codes[order.location_id] = order.charge_code;\n        }\n        return codes;\n    }\n\n    /** Host of the event */\n    public get equipment_notes(): HashMap<string> {\n        return this.booking.notes\n            .filter((note) => note.type === 'equipment')\n            .reduce((map, notes) => {\n                map[notes.space] = notes.message;\n                return map;\n            }, {});\n    }\n\n    /** Details about the event */\n    public get notes(): string {\n        return this.booking.body;\n    }\n\n    /** List of catering orders in the booking */\n    public get catering(): CateringOrder[] {\n        return (this.booking.catering || []).map((order) => {\n            const space: any = this.spaces.find(\n                (a_space) => a_space.email === order.location_id\n            ) || {\n                level: {},\n            };\n            const building: any =\n                this._org.buildings.find((bld) => bld.id === space.level.building_id) || {};\n            return new CateringOrder({ ...order, location: space.name, symbol: building.currency });\n        });\n    }\n\n    /** Map of changes to the booking */\n    public get changes(): HashMap<boolean> {\n        return {};\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _users: UsersService,\n        private _org: OrganisationService,\n        private _bookings: BookingsService,\n        private _spaces: SpacesService,\n        private _router: Router,\n        private _dialog_ref: MatDialogRef<BookingConfirmComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: BookingConfirmModalData\n    ) {\n        super();\n        this.booking.time_changed =\n            this.old_booking &&\n            (this.old_booking.date !== this.booking.date ||\n                this.old_booking.duration !== this.booking.duration);\n        this.is_request = this._data.booking.toJSON().auto_approve.find(i => i === false) != null;\n    }\n\n    /**\n     * Save booking changes\n     */\n    public saveChanges() {\n        this.loading = 'Checking availability of selected spaces';\n        this._dialog_ref.disableClose = true;\n        this.checkSpaceAvailability().then(\n            () => {\n                this.loading = 'Processing booking request...';\n                this._bookings.save(this.booking).then(\n                    () => {\n                        this.loading = null;\n                        this.success = true;\n                        this._dialog_ref.disableClose = false;\n                        localStorage.removeItem('ACA_STAFF.booking_form_data');\n                        this.event.emit({ reason: 'done' });\n                        this._service.notifySuccess(\n                            `Successfully ${this.booking.id ? 'updated' : 'created'} booking`\n                        );\n                    },\n                    (err) => {\n                        this.loading = null;\n                        this._dialog_ref.disableClose = false;\n                        this._service.notifyError(\n                            `Error ${this.booking.id ? 'updating' : 'creating'} booking: ${err}`\n                        );\n                    }\n                );\n            },\n            (err) => {\n                this.loading = null;\n                this._dialog_ref.disableClose = false;\n                this._service.notifyError(`Error checking space availability: ${err}`);\n            }\n        );\n    }\n\n    public newBooking() {\n        this._router.navigate(['/book', 'spaces']);\n        this._dialog_ref.close();\n    }\n\n    public toSchedule() {\n        console.log('Booking:', this.booking);\n        this._router.navigate(['/schedule'], {\n            queryParams: { email: this.booking.organiser.email },\n        });\n        this._dialog_ref.close();\n    }\n\n    /**\n     * Check whether the selected spaces are available for the selected time period\n     */\n    public checkSpaceAvailability(): Promise<void> {\n        const spaces: Space[] = this.spaces;\n        if (\n            (this.booking.id &&\n                this.booking.date === this.old_booking.date &&\n                this.booking.duration === this.old_booking.duration) ||\n            (spaces && spaces.length <= 0)\n        ) {\n            return Promise.resolve();\n        }\n        return new Promise((resolve, reject) => {\n            const all_day = this.booking.all_day;\n            this._spaces\n                .available({\n                    room_ids: spaces.map((space) => space.id).join(','),\n                    date: all_day\n                        ? dayjs(this.booking.date).startOf('d').valueOf()\n                        : this.booking.date,\n                    duration: all_day ? 24 * 60 : this.booking.duration,\n                    ignore: this.booking.icaluid,\n                })\n                .then(\n                    (space_list) => {\n                        for (const space of space_list) {\n                            if (!space.was_available) {\n                                return reject(\n                                    `${space.name} is not available at the select time period.`\n                                );\n                            }\n                        }\n                        if (space_list.length < spaces.length) {\n                            return reject(\n                                `${spaces[0].name} is not available at the select time period.`\n                            );\n                        }\n                        resolve();\n                    },\n                    (err) => reject(err)\n                );\n        });\n    }\n}\n","<mat-dialog-content *ngIf=\"!loading; else load_state\">\n    <main>\n        <button name=\"close\" mat-icon-button mat-dialog-close>\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"\n            ></app-icon>\n        </button>\n        <div class=\"details\">\n            <img\n                [src]=\"\n                    success\n                        ? is_request\n                            ? 'assets/img/requested.svg'\n                            : 'assets/img/confirmed.svg'\n                        : 'assets/img/edit.svg'\n                \"\n            />\n            <div class=\"text\">\n                Booking Details\n                <span *ngIf=\"success && !is_request\">Confirmed!</span>\n                <span class=\"request\" *ngIf=\"success && is_request\">Requested!</span>\n            </div>\n            <div class=\"info\" *ngIf=\"success && is_request\">Please await confirmation of room</div>\n        </div>\n        <div class=\"field\" name=\"title\">\n            <label>Title<span *ngIf=\"changes.title\">*</span>:</label>\n            <div class=\"value\">{{ title || 'No title' }}</div>\n        </div>\n        <div class=\"field\" name=\"when\">\n            <label>When<span *ngIf=\"changes.date\">*</span>:</label>\n            <div class=\"value\">{{ when }}</div>\n        </div>\n        <div class=\"field\" name=\"when\">\n            <label>Recurrence<span *ngIf=\"changes.recurrence\">*</span>:</label>\n            <div class=\"value\">{{ recurrence }}</div>\n        </div>\n        <div class=\"field\" name=\"duration\">\n            <label>Duration<span *ngIf=\"changes.duration\">*</span>:</label>\n            <div class=\"value\">{{ duration }}</div>\n        </div>\n        <div class=\"field multi\" name=\"location\">\n            <label\n                >Locations({{ spaces.length || '0' }})<span *ngIf=\"changes.location\">*</span\n                >:</label\n            >\n            <div class=\"value\">\n                <div class=\"list\" [class.shown]=\"show_locations\">\n                    <div class=\"list-item\" *ngFor=\"let item of spaces\">\n                        <div class=\"text\" [title]=\"item?.name\">{{ item?.name }}</div>\n                        <div\n                            class=\"tooltip\"\n                            *ngIf=\"equipment_notes[item.email]\"\n                            [matTooltip]=\"equipment_notes[item.email]\"\n                        >\n                            Notes\n                        </div>\n                        <div\n                            class=\"tooltip\"\n                            *ngIf=\"equipment_codes[item.email]\"\n                            [matTooltip]=\"\n                                (equipment_codes[item.email]\n                                    ? 'Equipment ~ ' + equipment_codes[item.email]\n                                    : '') +\n                                (catering_codes[item.email] && equipment_codes[item.email]\n                                    ? '\\n'\n                                    : '') +\n                                (catering_codes[item.email]\n                                    ? 'Catering ~ ' + catering_codes[item.email]\n                                    : '')\n                            \"\n                        >\n                            Code\n                        </div>\n                    </div>\n                    <div class=\"list-item\" *ngIf=\"!spaces.length\">No Locations</div>\n                </div>\n                <button\n                    class=\"show\"\n                    *ngIf=\"spaces.length > 5\"\n                    (click)=\"show_locations = !show_locations\"\n                >\n                    {{ show_locations ? 'Hide' : 'Show' }} Locations\n                </button>\n            </div>\n        </div>\n        <div class=\"field\" name=\"host\">\n            <label>Host<span *ngIf=\"changes.organiser\">*</span>:</label>\n            <div class=\"value\">{{ organiser?.name || organiser?.email }}</div>\n        </div>\n        <div class=\"field\" name=\"host\" *ngIf=\"organiser && organiser.email !== user.email\">\n            <label>Booked by<span *ngIf=\"changes.organiser\">*</span>:</label>\n            <div class=\"value\">{{ user?.name || user?.email }}</div>\n        </div>\n        <div class=\"field\" name=\"attendees\">\n            <label\n                >Attendees({{ attendees.length || '0' }})<span *ngIf=\"changes.attendees\">*</span\n                >:</label\n            >\n            <div class=\"value\">\n                <span *ngIf=\"!attendees || !attendees.length\">&lt;No Attendees&gt;</span>\n                <div class=\"list\" [class.shown]=\"show_attendees\">\n                    <div\n                        class=\"list-item\"\n                        *ngFor=\"let item of attendees\"\n                        [title]=\"item?.name + (item?.email ? '\\n' + item.email : '')\"\n                    >\n                        <div class=\"text\">\n                            <div class=\"name\">{{ item.name }}</div>\n                            <div class=\"email\" *ngIf=\"item.email\">\n                                <a [href]=\"'mailto:' + item.email + '?subject=' + booking.title\">{{\n                                    item.email\n                                }}</a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <button\n                    class=\"show\"\n                    *ngIf=\"attendees.length > 5\"\n                    (click)=\"show_attendees = !show_attendees\"\n                >\n                    {{ show_attendees ? 'Hide' : 'Show' }} Attendees\n                </button>\n            </div>\n        </div>\n        <div class=\"field\" name=\"notes\">\n            <label>Notes<span *ngIf=\"changes.body\">*</span>:</label>\n            <div class=\"value\" [innerHTML]=\"notes || 'No notes'\"></div>\n        </div>\n        <div class=\"field\" name=\"catering\">\n            <label\n                >Catering Orders({{ catering.length || '0' }})<span *ngIf=\"changes.catering\">*</span\n                >:</label\n            >\n            <div class=\"value\">\n                <div class=\"list\" [class.shown]=\"show_orders\">\n                    <div class=\"list-item\" *ngFor=\"let order of catering\">\n                        <div class=\"text\">\n                            <div class=\"name\">{{ order.location || '&lt;Removed&gt;' }}</div>\n                            <div class=\"email\">\n                                {{ order.item_count }} item{{ order.item_count === 1 ? '' : '' }} |\n                                {{ order.total / 100 | currency: order.symbol }}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <button\n                    class=\"show\"\n                    *ngIf=\"attendees.length > 5\"\n                    (click)=\"show_orders = !show_orders\"\n                >\n                    {{ show_orders ? 'Hide' : 'Show' }} Catering orders\n                </button>\n            </div>\n        </div>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading\">\n    <footer>\n        <ng-container *ngIf=\"!success; else success_actions\">\n            <button mat-button class=\"inverse\" mat-dialog-close>Edit</button>\n            <button mat-button name=\"save\" (click)=\"saveChanges()\">Save</button>\n        </ng-container>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <main>\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">\n                {{ loading }}\n            </div>\n        </div>\n    </main>\n</ng-template>\n<ng-template #success_actions>\n    <button mat-button class=\"inverse\" name=\"new\" (click)=\"newBooking()\">New Booking</button>\n    <a button mat-button mat-dialog-close (click)=\"toSchedule()\">My Day</a>\n</ng-template>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { FormGroup, FormControl } from '@angular/forms';\n\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\nimport * as dayjs from 'dayjs';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nexport interface CateringConfirmModalData {\n    all_day: boolean;\n    form: FormGroup;\n    date: number;\n}\n\n@Component({\n    selector: 'a-catering-confirm-modal',\n    templateUrl: './catering-confirm-modal.component.html',\n    styleUrls: ['./catering-confirm-modal.component.scss'],\n})\nexport class BookingCateringConfirmModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user actions on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of selected items for the order */\n    public item_list: CateringItem[] = [];\n\n    /** Space selected for delivery */\n    public get space(): Space {\n        return this._spaces.find(this._data.form?.controls?.location_id?.value);\n    }\n    /** Delivery time for the order */\n    public get delivery_time(): string {\n        let date = dayjs(this._data.date);\n        if (this._data.all_day) {\n            date = date.startOf('d');\n        }\n        if (this._data.form && this._data.form.controls.delivery_time) {\n            date = date.add(this._data.form.controls.delivery_time.value, 'm');\n        }\n        return date.format('h:mm A');\n    }\n\n    /** Form field for order items */\n    public get item_field(): FormControl {\n        return this._data.form.controls.items as any;\n    }\n\n    /** Total cost of the order */\n    public get order_cost(): number {\n        return this.item_list.reduce((amount, item) => amount + item.amount * item.unit_price, 0);\n    }\n\n    /** Currency symbol for the selected space */\n    public get symbol(): string {\n        /* istanbul ignore else */\n        if (!this.space || !this.space.level) {\n            return 'USD';\n        }\n        const building = this._org.buildings.find(\n            (bld) => bld.id === this.space.level.building_id\n        ) || { currency: 'USD' };\n        return building.currency;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _dialog_ref: MatDialogRef<BookingCateringConfirmModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringConfirmModalData\n    ) {\n        super();\n        if (!this._data.form) {\n            this._service.notifyError('No form data for order');\n            this._dialog_ref.close();\n        }\n    }\n\n    public ngOnInit(): void {\n        /* istanbul ignore else */\n        if (this._data.form.controls.items) {\n            this.subscription(\n                'item_list',\n                this._data.form.controls.items.valueChanges.subscribe((items) => {\n                    /* istanbul ignore else */\n                    if (!items || items.length <= 0) {\n                        this._dialog_ref.close();\n                    }\n                })\n            );\n        }\n        this.item_list = this._data.form.controls.items.value.map((item) => new CateringItem(item));\n    }\n}\n","<header>\n    <div class=\"heading\" i18n=\"Catering confirm order header\">Confirm Catering Order</div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main>\n        <div class=\"details\">\n            Delivering to <span>{{ space?.name || '&lt;Unset&gt;' }}</span> at <span>{{ delivery_time }}</span>\n        </div>\n        <div class=\"list\">\n            <a-catering-order-item\n                *ngFor=\"let item of item_list\"\n                [field]=\"item_field\"\n                [subitem]=\"true\"\n                [item]=\"item\"\n                [symbol]=\"symbol\"\n            ></a-catering-order-item>\n        </div>\n        <div class=\"total\">\n            <label>Order Total:</label>\n            <div class=\"value\">{{ order_cost / 100 | currency:symbol }}</div>\n        </div>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button (click)=\"event.emit({ reason: 'done' })\" i18n=\"Catering confirm save action\">Save Order</button>\n    </footer>\n</mat-dialog-actions>\n","import { Component, ElementRef, EventEmitter, Inject, OnInit, Output, ViewChild } from '@angular/core';\nimport { AbstractControl, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { DialogEvent, HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { BookingNote } from 'src/app/services/data/bookings/booking.interfaces';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\n\nimport * as dayjs from 'dayjs';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\nexport interface CateringDetailsModalData {\n    spaces: Space[];\n    notes_field: AbstractControl;\n    catering: AbstractControl;\n}\n\n@Component({\n    selector: 'a-catering-details-modal',\n    templateUrl: './catering-details-modal.component.html',\n    styleUrls: ['./catering-details-modal.component.scss'],\n})\nexport class CateringDetailsModalComponent implements OnInit {\n    /** Emitter for modal events */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Mapping of spaces to notes */\n    public notes: HashMap<string> = {};\n    /** Mapping of spaces to cost codes */\n    public codes: HashMap<string> = {};\n    /** Mapping of spaces to estimated head count */\n    public head_counts: HashMap<string> = {};\n    /** Mapping of spaces to form fields */\n    public form: HashMap<FormGroup> = {};\n    /** Map of spaces to whether they need a charge code */\n    public needs_charge_code: HashMap<boolean> = {};\n    /** Index of the active space */\n    public active_space: number = 0;\n\n    @ViewChild('content', { static: true }) private _content_el: ElementRef<HTMLElement>;\n\n    /** List of selected spaces */\n    public get space_list(): Space[] {\n        return (this._data.spaces || []).filter((space) =>\n            this._data.catering.value.find((order) => order.location_id === space.email),\n        );\n    }\n\n    public get active_form(): FormGroup {\n        return this.form[this.space_list[this.active_space].email];\n    }\n\n    public get invalid_charge_code(): boolean {\n        return this.active_form.controls.code.errors?.minlength;\n    }\n\n    /** Whether form fields are valid */\n    public get is_valid(): boolean {\n        return this.space_list.reduce(\n            (valid, space) => valid && this.form[space.email].valid,\n            true,\n        );\n    }\n\n    constructor(\n        private _users: UsersService,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringDetailsModalData,\n    ) {\n    }\n\n    public ngOnInit(): void {\n        const note_list = this._data.notes_field.value.filter(\n            (note: BookingNote) => note.type === 'catering',\n        );\n        this.notes = note_list.reduce((map, note) => {\n            map[note.space] = note.message;\n            return map;\n        }, {});\n        this.codes = this._data.catering.value.reduce((map, order: CateringOrder) => {\n            map[order.location_id] = order.charge_code;\n            return map;\n        }, {});\n        this.generateFormFields();\n    }\n\n    public submit(): void {\n        this.space_list.forEach((space) => this.form[space.email].markAllAsTouched());\n        /* istanbul ignore else */\n        if (this.is_valid) {\n            // Update notes\n            const notes = this._data.notes_field.value.filter(\n                (note: BookingNote) => note.type !== 'catering',\n            );\n            const new_notes = this.space_list.map(\n                (space) =>\n                    ({\n                        author: this._users.current.name,\n                        type: 'catering',\n                        message: this.form[space.email].controls.notes.value,\n                        space: space.email,\n                        date: dayjs().valueOf(),\n                    } as BookingNote),\n            );\n            this._data.notes_field.setValue(notes.concat(new_notes).filter((note) => note.message));\n            const orders = this._data.catering.value.map(\n                (order) =>\n                    new CateringOrder({\n                        ...order,\n                        charge_code: this.form[order.location_id]\n                            ? this.form[order.location_id].controls.code.value\n                            : '',\n                    }),\n            );\n            this._data.catering.setValue(orders);\n            this.event.emit({ reason: 'done' });\n        } else {\n            this._scrollToBottom();\n        }\n    }\n\n    /** Generate form fields for each space */\n    private generateFormFields(): void {\n        for (const space of this.space_list) {\n            this.form[space.email] = new FormGroup({\n                notes: new FormControl(this.notes[space.email] || ''),\n                code: new FormControl(this.codes[space.email] || '',\n                    this.needs_charge_code[space.email] ?\n                        [Validators.required, Validators.minLength(4)] : [Validators.minLength(4)]),\n            });\n        }\n    }\n\n    /** Scroll the content container to the bottom */\n    private _scrollToBottom(): void {\n        this._content_el?.nativeElement.scrollTo({\n            top: this._content_el.nativeElement.scrollHeight,\n            left: 0,\n            behavior: 'smooth',\n        });\n    }\n}\n","<div class=\"header\">\n    <div class=\"tabs\">\n        <mat-tab-group [(selectedIndex)]=\"active_space\">\n            <mat-tab\n                *ngFor=\"let space of space_list\"\n                [label]=\"space.name + (form[space.email].invalid && form[space.email].touched ? '*' : '')\"\n            ></mat-tab>\n        </mat-tab-group>\n    </div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</div>\n<mat-dialog-content>\n    <main>\n        <div class=\"details\">\n            <img src=\"assets/img/food-notes.svg\" />\n            <div class=\"text\">Please specify any allergies or gluten intolerances</div>\n        </div>\n        <form *ngIf=\"space_list[active_space] && active_form\" [formGroup]=\"active_form\">\n            <div class=\"field\">\n                <label for=\"equipment-notes\" i18n=\"Catering details equipment notes label\">\n                    (eg - allergies, in tolerances, no ice in drinks etc) Additional requests are\n                    handled in confidence.\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"equipment-notes\"\n                        formControlName=\"notes\"\n                        placeholder=\"Add notes here...\"\n                        i18n-placeholder\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label\n                    for=\"charge-code\"\n                    [class.error]=\"\n                        active_form.controls.code.touched && active_form.controls.code.invalid\n                    \"\n                    i18n=\"Catering details charge code label\"\n                >\n                    Charge Code<span *ngIf=\"needs_charge_code[space_list[active_space].email]\">*</span>\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"charge-code\"\n                        formControlName=\"code\"\n                        placeholder=\"Charge Code\"\n                        i18n-placeholder\n                    />\n                    <mat-hint i18n=\"Catering details charge code hint\">\n                        <span>Note:</span> Your booking will be confirmed before you are charged.\n                    </mat-hint>\n                    <mat-error i18n=\"Catering details charge code error\">\n                        {{ invalid_charge_code ? 'Valid Charge Code Required' : 'Charge Code is required'}}\n                    </mat-error>\n                </mat-form-field>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button (click)=\"submit()\" i18n=\"Catering details save action\">\n            Add to booking\n        </button>\n    </footer>\n</mat-dialog-actions>\n","import { Component, Output, EventEmitter, Inject } from '@angular/core';\n\nimport { DialogEvent, HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\n\nexport interface PackageOptionsModalData {\n    item: CateringCategory;\n}\n\nexport function checkItemRequirements(category: CateringCategory): boolean {\n    const items = category.items || [];\n    return category.must_select >= items.length\n        ? items.reduce((valid, item) => valid && checkItemRequirements(item as any), true)\n        : items.reduce((amount, item) => amount + (item.amount ? 1 : 0), 0) ===\n              category.must_select;\n}\n\nexport function getActiveItems(category: CateringCategory): HashMap<string> {\n    let map = {};\n    if (category.items) {\n        const item = category.items.find(item  => item.amount > 0);\n        if (item) {\n            map[category.id] = item.id;\n        }\n        category.items.forEach(item => map = { ...map, ...getActiveItems(item as any) })\n    }\n    return map;\n}\n\n@Component({\n    selector: 'a-package-options-modal',\n    templateUrl: './package-options-modal.component.html',\n    styleUrls: ['./package-options-modal.component.scss']\n})\nexport class PackageOptionsModalComponent {\n    /** Emitter for user actions on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    /** Item to select options for */\n    public get item(): CateringCategory {\n        return this._data.item;\n    }\n\n    /** Whether package requirements have been met */\n    public get requirements_met(): boolean {\n        return checkItemRequirements(this.item);\n    }\n\n    public get active_items(): HashMap<string> {\n        return getActiveItems(this.item);\n    }\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: PackageOptionsModalData) {}\n\n    /**\n     * Update the list of selected items\n     */\n    public updateAmount(a_package: CateringCategory, option: CateringItem, state: boolean) {\n        if (state) {\n            const needed = a_package.must_select;\n            const active = a_package.items.filter(an_item => an_item.amount > 0).length;\n            if (active >= needed) {\n                const item = a_package.items.find(an_item => an_item.amount > 0);\n                item.setAmount(0);\n            }\n            option.setAmount(1);\n        } else {\n            option.setAmount(0);\n        }\n    }\n}\n","<header>\n    <h3 i18n=\"Catering package options header\">Package Options</h3>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main>\n        <ng-container *ngTemplateOutlet=\"item_display; context: { package: item }\"></ng-container>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button [disabled]=\"!requirements_met\" (click)=\"event.emit({ reason: 'done' })\" i18n=\"Catering package options save action\">\n            Confirm Options\n        </button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #item_display let-package=\"package\">\n    <ng-container *ngIf=\"package.availableItems && package.availableItems.length\">\n        <mat-radio-group [ngModel]=\"active_items[package.id]\">\n            <div class=\"item\" *ngFor=\"let option of package.availableItems\" [attr.to-select]=\"option.must_select\">\n            <ng-container\n                *ngIf=\"\n                    package.must_select &&\n                    package.must_select < package.items.length &&\n                    !option.must_select\n                \"\n            >\n                <mat-checkbox\n                    *ngIf=\"package.must_select > 1\"\n                    [checked]=\"!!option.amount\"\n                    (change)=\"updateAmount(package, option, $event.checked)\"\n                >\n                    {{ option.name }}\n                </mat-checkbox>\n                <mat-radio-button\n                    *ngIf=\"package.must_select === 1\"\n                    [value]=\"option.id\"\n                    (change)=\"updateAmount(package, option, true)\"\n                >\n                    {{ option.name }}\n                </mat-radio-button>\n            </ng-container>\n            <ng-container *ngIf=\"package.must_select >= package.items.length || option.must_select\">\n                {{ option.name }}\n            </ng-container>\n            <ng-container\n                *ngTemplateOutlet=\"item_display; context: { package: option }\"\n            ></ng-container>\n        </div>\n    </mat-radio-group>\n    </ng-container>\n</ng-template>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialog } from '@angular/material/dialog';\n\nimport { Space, RecurrenceAvailability } from 'src/app/services/data/spaces/space.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { SpaceSelectModalComponent, SpaceSelectModalData } from 'src/app/overlays/space-select-modal/space-select-modal.component';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\nimport { BookingRecurrenceSpaceDetails } from 'src/app/services/data/bookings/booking.interfaces';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\n\nimport * as dayjs from 'dayjs';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nexport interface RecurrenceSpacesModalData {\n    /** Space that has recurrence unavailability */\n    space: Space;\n    /** Duration of the booking */\n    duration: number;\n    /** Duration of the booking */\n    host: User;\n    /** List of current conflict matchups */\n    conflicts: BookingRecurrenceSpaceDetails[];\n}\n\nexport interface OccurrenceDetails extends RecurrenceAvailability {\n    /** Display string for the occurence datetime */\n    date_string: string;\n    /** Name of the space that replaces the space on this occurrence */\n    replaced_by: string;\n    /** Whether space needs to be requested */\n    is_request: boolean;\n}\n\n@Component({\n    selector: 'a-recurrence-spaces-modal',\n    templateUrl: './recurrence-spaces-modal.component.html',\n    styleUrls: ['./recurrence-spaces-modal.component.scss']\n})\nexport class RecurrenceSpacesModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for modal events */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of occurence details for space booking */\n    public occurrences: OccurrenceDetails[] = [];\n    /** List of space details for occurrences */\n    public space_details: BookingRecurrenceSpaceDetails[] = [];\n\n    /** Space to setup recurrence for */\n    public get space(): Space {\n        return this._data.space;\n    }\n\n    /** Whether all occurences have a valid space */\n    public get occurrences_valid(): boolean {\n        return this.occurrences.reduce((valid, event) => valid && (event.available || !!event.replaced_by), true);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: RecurrenceSpacesModalData,\n        private _dialog: MatDialog,\n        private _spaces: SpacesService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.space_details = [].concat(this._data.conflicts || []);\n        this.updateOccurrences();\n    }\n\n    public save() {\n        this.event.emit({\n            reason: 'done',\n            metadata: this.occurrences\n                .filter(i => i.replaced_by)\n                .map(i => this.space_details.find(j => j.date === i.date))\n        });\n    }\n\n    public selectSpace(occurrence: OccurrenceDetails) {\n        const ref = this._dialog.open<SpaceSelectModalComponent, SpaceSelectModalData>(\n            SpaceSelectModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                maxWidth: '95vw',\n                data: {\n                    spaces: [],\n                    zone_ids: this.space.level.building_id,\n                    date: occurrence.date * 1000,\n                    duration: this._data.duration,\n                    host: this._data.host,\n                    multiple: false\n                }\n            }\n        );\n        this.subscription(\n            'new_spaces',\n            ref.componentInstance.event.subscribe(event => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    const space = event.metadata[0];\n                    /* istanbul ignore else */\n                    if (space) {\n                        this.space_details.unshift({\n                            date: occurrence.date,\n                            space: space.email,\n                            replaces: this.space.email\n                        });\n                        this.space_details = unique(this.space_details, 'date');\n                    }\n                    this.updateOccurrences();\n                    ref.close();\n                    this.unsub('new_spaces');\n                }\n            })\n        );\n    }\n\n    private updateOccurrences() {\n        this.occurrences = this._data.space.recurr_available.map(event => {\n            const space_details = this.space_details.find(details => details.date === event.date && details.replaces === this.space.email);\n            const email = (space_details || {}).space;\n            const space = this._spaces.find(email) ||\n                {\n                    email,\n                    name: email,\n                    byRequest: () => this.space.byRequest({\n                        date: event.date * 1000,\n                        duration: this._data.duration,\n                        host: this._data.host\n                    })\n                };\n            return {\n                ...event,\n                date_string: dayjs(event.date * 1000).format('dddd, DD MMMM YYYY'),\n                replaced_by: space.name,\n                is_request: space.byRequest({\n                    date: event.date * 1000,\n                    duration: this._data.duration,\n                    host: this._data.host\n                })\n            };\n        });\n    }\n}\n","<header>\n    <div class=\"heading\" i18n=\"Space recurrence header\">Recurrence - {{ space.name }}</div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main>\n        <div class=\"info\" i18n=\"Space recurrence information\">\n            * Select individual dates to update selected space\n        </div>\n        <div class=\"item\" *ngFor=\"let item of occurrences; let i = index\">\n            <div class=\"date\">{{ item.date_string }}</div>\n            <div class=\"action\">\n                <button\n                    *ngIf=\"i !== 0; else space_name\"\n                    [title]=\"item.replaced_by || (item.available ? space.name : 'Room Name')\"\n                    mat-button\n                    [class.request]=\"item.is_request\"\n                    [class.inverse]=\"!item.available && !item.replaced_by\"\n                    (click)=\"selectSpace(item)\"\n                >\n                    <div class=\"content\">\n                        {{ item.replaced_by || (item.available ? space.name : 'Find Room') }}\n                    </div>\n                </button>\n                <ng-template #space_name><span>{{ space.name }}</span></ng-template>\n            </div>\n        </div>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button\n            mat-button\n            [disabled]=\"!occurrences_valid\"\n            (click)=\"save()\"\n            i18n=\"Space recurrence save action\"\n        >\n            Add to Booking\n        </button>\n    </footer>\n</mat-dialog-actions>\n","import { Component, ElementRef, EventEmitter, Inject, OnInit, Output, ViewChild } from '@angular/core';\nimport { AbstractControl, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { DialogEvent, HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { BookingNote } from 'src/app/services/data/bookings/booking.interfaces';\n\nimport * as dayjs from 'dayjs';\nimport { UsersService } from 'src/app/services/data/users/users.service';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\nexport interface RequirementDetailsModalData {\n    spaces: Space[];\n    notes_field: AbstractControl;\n    codes_field: AbstractControl;\n    head_counts_field: AbstractControl;\n    standalone?: boolean;\n    recurrence?: boolean;\n}\n\n@Component({\n    selector: 'a-requirement-details-modal',\n    templateUrl: './requirement-details-modal.component.html',\n    styleUrls: ['./requirement-details-modal.component.scss'],\n})\nexport class RequirementDetailsModalComponent implements OnInit {\n    /** Emitter for modal events */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Mapping of spaces to notes */\n    public notes: HashMap<string> = {};\n    /** Mapping of spaces to cost codes */\n    public codes: HashMap<string> = {};\n    /** Mapping of spaces to estimated head count */\n    public head_counts: HashMap<string> = {};\n    /** Mapping of spaces to form fields */\n    public form: HashMap<FormGroup> = {};\n    /** Map of spaces to whether they need a charge code */\n    public needs_charge_code: HashMap<boolean> = {};\n    /** Index of the active space */\n    public active_space: number = 0;\n\n    @ViewChild('content', { static: true }) private _content_el: ElementRef<HTMLElement>;\n\n    /** List of selected spaces */\n    public get space_list(): Space[] {\n        return this._data.spaces;\n    }\n\n    public get has_recurrence(): boolean {\n        return this._data.recurrence;\n    }\n\n    public get active_form(): FormGroup {\n        return this.form[this.space_list[this.active_space].email];\n    }\n\n    public get invalid_charge_code(): boolean {\n        return this.active_form.controls.code.errors?.minlength;\n    }\n\n    /** Whether form fields are valid */\n    public get is_valid(): boolean {\n        return this.space_list.reduce((valid, space) => valid && this.form[space.email].valid, true);\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _users: UsersService,\n        @Inject(MAT_DIALOG_DATA) private _data: RequirementDetailsModalData,\n    ) {\n    }\n\n    public ngOnInit(): void {\n        const note_list = this._data.notes_field.value\n            .filter((note: BookingNote) => note.type === 'equipment');\n        this.notes = note_list.reduce((map, note) => {\n            map[note.space] = note.message;\n            return map;\n        }, {});\n        this.codes = { ...this._data.codes_field.value };\n        this.head_counts = { ...this._data.head_counts_field.value };\n        this.generateFormFields();\n    }\n\n    public submit(): void {\n        this.space_list.forEach(space => this.form[space.email].markAllAsTouched());\n        /* istanbul ignore else */\n        if (this.is_valid) {\n            // Update notes\n            const notes = this._data.notes_field.value\n                .filter((note: BookingNote) => note.type !== 'equipment');\n            const new_notes = this.space_list.map(space => ({\n                author: this._users.current.name,\n                type: 'equipment',\n                message: this.form[space.email].controls.notes.value,\n                space: space.email,\n                date: dayjs().valueOf(),\n            } as BookingNote));\n            this._data.notes_field.setValue(notes.concat(new_notes).filter(note => note.message));\n            this._data.codes_field.setValue(this.space_list.reduce((map, space) => {\n                map[space.email] = this.form[space.email].controls.code.value;\n                return map;\n            }, {}));\n            this._data.head_counts_field.setValue(this.space_list.reduce((map, space) => {\n                map[space.email] = this.form[space.email].controls.head_count.value;\n                return map;\n            }, {}));\n            this.event.emit({ reason: 'done' });\n        } else {\n            console.log('Scroll:', this._content_el.nativeElement, this._content_el.nativeElement.scrollHeight);\n            this._content_el.nativeElement.scrollTo({\n                top: this._content_el.nativeElement.scrollHeight,\n                left: 0,\n                behavior: 'smooth',\n            });\n        }\n    }\n\n    /** Generate form fields for each space */\n    private generateFormFields(): void {\n        for (const space of this.space_list) {\n            const building = this._org.buildings.find(\n                bld => bld.id === space.level.building_id,\n            );\n            this.needs_charge_code[space.email] = building?.required?.equipment_code || false;\n            this.form[space.email] = new FormGroup({\n                notes: new FormControl(this.notes[space.email] || ''),\n                code: new FormControl(\n                    this.codes[space.email] || '',\n                    this.needs_charge_code[space.email] ?\n                        [Validators.required, Validators.minLength(4)] : [Validators.minLength(4)],\n                ),\n                head_count: new FormControl(this.head_counts[space.email] || '', [Validators.required]),\n            });\n        }\n    }\n}\n","<div class=\"header\">\n    <div class=\"tabs\">\n        <mat-tab-group [(selectedIndex)]=\"active_space\">\n            <mat-tab *ngFor=\"let space of space_list\">\n                <ng-template mat-tab-label>\n                    <span [class.error]=\"form[space.email].invalid && form[space.email].touched\">\n                        {{\n                        space.name +\n                        (form[space.email].invalid && form[space.email].touched ? '*' : '')\n                        }}\n                    </span>\n                </ng-template>\n            </mat-tab>\n        </mat-tab-group>\n    </div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</div>\n<mat-dialog-content #content>\n    <main>\n        <div class=\"details\">\n            <img src=\"assets/img/equipment.svg\"/>\n            <div class=\"text\" i18n=\"Booking equipment information\">\n                {{\n                has_recurrence\n                    ? 'To update headcount information, add equipment or catering, please edit individual meeting occurences in My Day'\n                    : \"Would you like to add equipment to your booking's spaces?\"\n                }}\n            </div>\n        </div>\n        <form *ngIf=\"space_list[active_space] && active_form\" [formGroup]=\"active_form\">\n            <div class=\"field\" *ngIf=\"!has_recurrence\">\n                <label for=\"equipment-notes\" i18n=\"Booking equipment notes label\">\n                    (eg - particular room configurations or specific equipment etc) Additional\n                    requests are handled in confidence\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"equipment-notes\"\n                        formControlName=\"notes\"\n                        placeholder=\"Add notes here...\"\n                        i18n-placeholder\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"fieldset\">\n                <div\n                    class=\"field\"\n                    name=\"charge-code\"\n                    *ngIf=\"!has_recurrence || needs_charge_code[space_list[active_space].email]\"\n                >\n                    <label\n                        for=\"charge-code\"\n                        [class.error]=\"\n                            active_form.controls.code.touched && active_form.controls.code.invalid\n                        \"\n                        i18n=\"Booking equipment charge code label\"\n                    >\n                        Charge Code<span *ngIf=\"needs_charge_code[space_list[active_space].email]\"\n                    >*</span\n                    >\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"charge-code\"\n                            formControlName=\"code\"\n                            placeholder=\"Charge Code\"\n                            i18n-placeholder\n                        />\n                        <mat-hint i18n=\"Booking equipment charge code hint\">\n                            <span>Note:</span> Your booking will be confirmed before you are\n                            charged.\n                        </mat-hint>\n                        <mat-error i18n=\"Catering details charge code error\">\n                            {{ invalid_charge_code ? 'Valid Charge Code Required' : 'Charge Code is required'}}\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"field\" name=\"head-count\">\n                    <label\n                        for=\"head-count\"\n                        [class.error]=\"\n                            active_form.controls.head_count.touched &&\n                            active_form.controls.head_count.invalid\n                        \"\n                        i18n=\"Booking equipment headcount label\"\n                    >\n                        Headcount Estimate<span>*</span>\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"head-count\"\n                            formControlName=\"head_count\"\n                            type=\"number\"\n                            placeholder=\"e.g. 12\"\n                            i18n-placeholder\n                        />\n                        <mat-hint i18n=\"Booking equipment headcount hint\">\n                            <span>Note:</span> This estimate is used to calculate catering and/or\n                            assign rooms. Please keep updated of any changes.\n                        </mat-hint>\n                        <mat-error i18n=\"Booking equipment headcount error\">\n                            Headcount Estimate is required\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button (click)=\"submit()\">Add to booking</button>\n    </footer>\n</mat-dialog-actions>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { BookingFlowEvent } from '../../bookings.component';\nimport { CateringOrder } from '../../../../services/data/catering/catering-order.class';\nimport { Space } from 'src/app/services/data/spaces/space.class';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'booking-catering',\n    templateUrl: './catering.component.html',\n    styleUrls: ['./catering.component.scss'],\n})\nexport class BookingCateringComponent {\n    /** Form fields for the booking */\n    @Input() public form: FormGroup;\n    /** Emitter for flow update events */\n    @Output() public event = new EventEmitter<BookingFlowEvent>();\n    /** Active order to display details for */\n    public active_order: CateringOrder;\n\n    /** Field for storing catering details */\n    public get catering_field() {\n        return this.form && this.form.controls.catering ? this.form.controls.catering : null;\n    }\n\n    /** List of spaces selected for the booking */\n    public get space_list(): Space[] {\n        return this.form && this.form.controls.space_list\n            ? this.form.controls.space_list.value\n            : [];\n    }\n\n    /** Date of the booking */\n    public get date(): number {\n        return this.form && this.form.controls.date\n            ? this.form.controls.date.value\n            : dayjs().startOf('m').valueOf();\n    }\n\n    /** Duration of the booking */\n    public get duration(): number {\n        return this.form && this.form.controls.duration ? this.form.controls.duration.value : 60;\n    }\n\n    /** Whether booking is all day */\n    public get all_day(): boolean {\n        return this.form && this.form.controls.all_day && this.form.controls.all_day.value;\n    }\n\n    /** Create a new catering order */\n    public newOrder(): void {\n        const order = new CateringOrder({});\n        this.active_order = order;\n    }\n\n    /** Handle changes to catering order */\n    public handleOrderEvent(order: CateringOrder) {\n        /* istanbul ignore else */\n        if (order) {\n            const orders = this.form.controls.catering.value;\n            const index = orders.findIndex((an_order) => order.id === an_order.id);\n            if (index < 0) {\n                orders.push(order);\n            } else {\n                orders.splice(index, 1, order);\n            }\n            this.form.controls.catering.setValue(orders);\n        }\n        this.active_order = null;\n    }\n}\n","<div class=\"catering\">\n    <ng-container *ngIf=\"!active_order; else order_display\">\n        <a-catering-order-list\n            [space_list]=\"space_list\"\n            [catering]=\"catering_field\"\n            [date]=\"date\"\n            [all_day]=\"all_day\"\n            (order)=\"$event ? (active_order = $event) : newOrder()\"\n            (event)=\"event.emit($event)\"\n        ></a-catering-order-list>\n    </ng-container>\n</div>\n<ng-template #order_display>\n    <a-catering-order-details\n        [space_list]=\"space_list\"\n        [order]=\"active_order\"\n        [date]=\"date\"\n        [duration]=\"duration\"\n        [all_day]=\"all_day\"\n        (event)=\"$event ? handleOrderEvent($event) : active_order = null\"\n    ></a-catering-order-details>\n</ng-template>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\n\n@Component({\n    selector: 'a-category-display',\n    templateUrl: './category.component.html',\n    styleUrls: ['./category.component.scss']\n})\nexport class CateringMenuCategoryComponent {\n    /** Category to display details for */\n    @Input() public category: CateringCategory;\n    /** Form control for the list of order items */\n    @Input() public items: FormControl;\n    /** Currency symbol for the active space */\n    @Input() public symbol: string;\n    /** Whether item should be disabled if not available anytime */\n    @Input() public disabled: boolean;\n    /** Whether to show smaller version of component */\n    @Input() public compact: boolean;\n    /** Emitter for close events */\n    @Output() public close = new EventEmitter<void>();\n}\n","<div class=\"header\">\n    <div class=\"content\">\n        <button mat-icon-button (click)=\"close.emit()\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'arrow_back' }\"></app-icon>\n        </button>\n        <div class=\"name\">{{ category?.name }}</div>\n    </div>\n</div>\n<ng-container *ngIf=\"category.availableItems && category.availableItems.length; else empty_state\">\n    <div class=\"item\" *ngFor=\"let item of category.availableItems\">\n        <a-catering-order-item\n            [compact]=\"compact\"\n            [disabled]=\"disabled\"\n            [symbol]=\"symbol\"\n            [item]=\"item\"\n            [field]=\"items\"\n        ></a-catering-order-item>\n    </div>\n</ng-container>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\" i18n=\"Catering category empty label\">\n            Category contains no available items\n        </div>\n    </div>\n</ng-template>\n","import { Component, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { FormControl } from '@angular/forms';\n\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { ANIMATION_SHOW_CONTRACT_EXPAND } from 'src/app/shared/globals/angular-animations';\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { PackageOptionsModalComponent } from 'src/app/shell/bookings/overlays/package-options-modal/package-options-modal.component';\n\nfunction hasSelectionRequirements(category: CateringCategory) {\n    return (\n        category.must_select < category.items.length ||\n        (category.must_select === category.items.length &&\n            category.items.find((item: any) => item.items && item.must_select < item.items.length))\n    );\n}\n\nfunction getActiveList(category: CateringCategory) {\n    const items = category.items || [];\n    let list = items.filter((item) => item.amount > 0).map((item) => item.id);\n    for (const item of items) {\n        if ((item as any).items && (item as any).items.length) {\n            list = list.concat(getActiveList(item as any));\n        }\n    }\n    return list;\n}\n\n@Component({\n    selector: 'a-catering-order-item',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss'],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class CateringMenuItemComponent extends BaseDirective implements OnChanges {\n    /** Whether item is a child of another */\n    @Input() public subitem: boolean;\n    /** Item to display */\n    @Input() public item: CateringCategory;\n    /** Field for storing items */\n    @Input() public field: FormControl;\n    /** Current symbol for the selected space */\n    @Input() public symbol: string;\n    /** Whether item should be disabled if not available anytime */\n    @Input() public disabled: boolean;\n    /** Whether to show smaller version of component */\n    @Input() public compact: boolean;\n    /** Whether to show children items */\n    public show_children: boolean;\n\n    /** List of contents of the package */\n    public get contents(): string {\n        return this.item.items\n            ? this.item.items.reduce((list, item) => {\n                  /* istanbul ignore else */\n                  if (list) {\n                      list += '\\n\\n';\n                  }\n                  return (list += `${item.name}${\n                      (item as any).items\n                          ? (item as any).items.reduce(\n                                (a_list, an_item) =>\n                                    (a_list += `\\n ${an_item.amount ? '✓' : '•'} ${an_item.name} `),\n                                ''\n                            )\n                          : ''\n                  } ${item.amount ? '✓' : ''}`);\n              }, '')\n            : '';\n    }\n\n    constructor(private _service: ApplicationService, private _dialog: MatDialog) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.field && this.field) {\n            const list = this.field.value;\n            const item = list.find((an_item) => an_item.id === this.item.id);\n            this.item.setAmount(item ? item.amount : 0);\n            this.subscription(\n                'field_change',\n                this.field.valueChanges.subscribe((list) => {\n                    const item = list.find((an_item) => an_item.id === this.item.id);\n                    this.item.setAmount(item ? item.amount : 0);\n                    this.updatePackageSelection();\n                })\n            );\n        }\n    }\n\n    /**\n     * Update the amount of the item in the order\n     * @param value New amount\n     */\n    public updateAmount(value: number) {\n        /* istanbul ignore else */\n        if (this.field) {\n            const list: CateringItem[] = this.field.value;\n            const item = list.find((an_item) => an_item.id === this.item.id);\n            if (item) {\n                this.item.setAmount(value);\n                item.setAmount(value);\n            } else {\n                const amount = this.item.amount;\n                this.item.setAmount(value);\n                if (\n                    this.item.package &&\n                    amount < value &&\n                    this.item.items &&\n                    this.item.items.length &&\n                    hasSelectionRequirements(this.item)\n                ) {\n                    this.selectPackageOptions().then(\n                        (confirmed_item) => {\n                            list.push(new CateringCategory(confirmed_item));\n                            this.field.setValue(list.filter((an_item) => an_item.amount));\n                        },\n                        () => {\n                            this.item.setAmount(999);\n                            this.timeout('amount', () => this.item.setAmount(0), 5);\n                            this._service.notifyWarn(\n                                'Package options not selected. Item removed from order'\n                            );\n                        }\n                    );\n                } else {\n                    list.push(new CateringItem(this.item));\n                }\n            }\n            this.field.setValue(list.filter((an_item) => an_item.amount));\n        }\n    }\n\n    public updatePackageSelection() {\n        const cart_item = this.field.value.find((item) => item.id === this.item.id);\n        if (cart_item) {\n            const active_items = getActiveList(cart_item);\n            this.timeout(\n                'update_package',\n                () => {\n                    this.item.items.forEach((item) => {\n                        item.setAmount(active_items.includes(item.id) ? 1 : 0);\n                        if ((item as any).items) {\n                            (item as any).items.forEach((item) => {\n                                item.setAmount(active_items.includes(item.id) ? 1 : 0);\n                            });\n                        }\n                    });\n                },\n                5\n            );\n        }\n    }\n\n    /** Reselect package options */\n    public updatePackageOptions(): void {\n        this.selectPackageOptions().then(\n            () => null,\n            () => null\n        );\n    }\n\n    /**\n     * Open modal for user to select package options\n     */\n    private selectPackageOptions(): Promise<CateringCategory> {\n        return new Promise((resolve, reject) => {\n            const ref = this._dialog.open(PackageOptionsModalComponent, {\n                maxWidth: '95vw',\n                data: {\n                    item: new CateringCategory(this.item),\n                },\n            });\n            let done = false;\n            ref.componentInstance.event.subscribe((event) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    done = true;\n                    resolve(ref.componentInstance.item);\n                    ref.close();\n                }\n            });\n            ref.afterClosed().subscribe(() => {\n                /* istanbul ignore else */\n                if (!done) {\n                    reject();\n                }\n            });\n        });\n    }\n}\n","<div\n    class=\"catering-item\"\n    *ngIf=\"item && !item.out_of_stock\"\n    [class.compact]=\"compact\"\n    [class.subitem]=\"subitem\"\n    [attr.disabled]=\"disabled && !item.can_order_anytime\"\n>\n    <div\n        class=\"image\"\n        *ngIf=\"!subitem\"\n        [style.background-image]=\"'url(' + item.image_path + ')'\"\n    ></div>\n    <div class=\"details\">\n        <div class=\"name\">{{ item.name }}</div>\n        <div class=\"description\">{{ item.package ? '[Package] ' : '' }}{{ item.description }}</div>\n        <div class=\"options\">\n            <div class=\"option price mobile-only\" *ngIf=\"item.unit_price\">\n                {{ item.unit_price / 100 | currency: symbol }}\n            </div>\n            <div\n                class=\"option\"\n                *ngIf=\"item.package && item.availableItems.length && !item.must_select\"\n                [matTooltip]=\"contents\"\n                i18n=\"Catering order item available options label\"\n            >\n                { item.availableItems.length, plural, =1 { Contains {{ item.availableItems.length }} item } other {\n                Contains {{ item.availableItems.length }} items } }\n            </div>\n            <div\n                class=\"option\"\n                *ngIf=\"item.package && item.must_select && item.amount > 0\"\n                [matTooltip]=\"contents\"\n            >\n                {{ item.must_select }}\n                <span class=\"not-mobile\" i18n=\"Catering order item selected options label\">\n                    Selected\n                </span>\n            </div>\n            <button\n                mat-button\n                *ngIf=\"item.package && item.must_select && item.amount > 0\"\n                (click)=\"updatePackageOptions()\"\n                i18n=\"Catering order item options change action\"\n            >\n                Customise\n            </button>\n        </div>\n    </div>\n    <div class=\"option price not-mobile\" *ngIf=\"item.unit_price\">\n        {{ item.unit_price / 100 | currency: symbol }}\n    </div>\n    <a-counter\n        *ngIf=\"!item.availableItems.length || item.package\"\n        [useInput]=\"item.must_select === 0 || item.availableItems.length === 0\"\n        [max]=\"item.maximum_quantity\"\n        [ngModel]=\"item.amount\"\n        (ngModelChange)=\"updateAmount($event)\"\n    ></a-counter>\n    <button\n        mat-icon-button\n        *ngIf=\"item.availableItems && item.availableItems.length && !item.package\"\n        (click)=\"show_children = !show_children\"\n    >\n        <app-icon\n            [icon]=\"{\n                class: 'material-icons',\n                content: show_children ? 'keyboard_arrow_up' : 'keyboard_arrow_down'\n            }\"\n        ></app-icon>\n    </button>\n</div>\n<div class=\"children\" [@show]=\"show_children ? 'show' : 'hide'\">\n    <a-catering-order-item\n        *ngFor=\"let sub_item of item.availableItems\"\n        [compact]=\"compact\"\n        [subitem]=\"true\"\n        [symbol]=\"symbol\"\n        [item]=\"sub_item\"\n        [disabled]=\"disabled\"\n        [field]=\"field\"\n    ></a-catering-order-item>\n</div>\n","import { Component, ElementRef, EventEmitter, Input, OnInit, Output, SimpleChanges, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { toDate } from 'date-fns-tz';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { DialogEvent, Identity } from 'src/app/shared/utilities/types.utilities';\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { CateringMenuService } from 'src/app/services/data/catering/catering-menu.service';\nimport { padZero } from 'src/app/shared/utilities/general.utilities';\nimport {\n    BookingCateringConfirmModalComponent, CateringConfirmModalData,\n} from '../../../overlays/catering-confirm-modal/catering-confirm-modal.component';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-catering-order-details',\n    templateUrl: './order-details.component.html',\n    styleUrls: ['./order-details.component.scss'],\n})\nexport class BookingCateringOrderDetailsComponent extends BaseDirective implements OnInit {\n    /** Catering order to edit details of */\n    @Input() public order: CateringOrder;\n    /** Booking date */\n    @Input() public date: number;\n    /** Booking duration */\n    @Input() public duration: number;\n    /** Booking duration */\n    @Input() public space_list: Space[];\n    /** Whether booking is all day */\n    @Input() public all_day: boolean;\n    /** Whether top header details should be shown */\n    @Input() public hide_details: boolean;\n    /** Whether to show smaller version of component */\n    @Input() public compact: boolean;\n    /** Emitter for changes to the catering order */\n    @Output() public event = new EventEmitter<CateringOrder>();\n    /** Form controls for order */\n    public form: FormGroup;\n    /** List of available catering item categories */\n    public category_list: CateringCategory[] = [];\n    /** Active category to display details for */\n    public active_category: CateringCategory;\n    /** List of available times for delivering catering */\n    public available_times: Identity[] = [];\n    /** Whether the menu is loading */\n    public loading: boolean;\n    /** Whether the search input should be shown */\n    public show_search: boolean;\n    /** Current search string for filtering */\n    public readonly search$ = new BehaviorSubject('');\n    /** List of menu items that match the search string */\n    public matched_items: CateringItem[] = [];\n\n    @ViewChild('input') private _input_el: ElementRef<HTMLInputElement>;\n\n    /** Whether user is able to order from the currently selected space */\n    public get can_order(): boolean {\n        return (\n            (this.active_building.has_catering || this.category_list.length) &&\n            (!this.within_restricted_time || this.has_available_items) &&\n            !this.out_of_hours\n        );\n    }\n\n    /** Building associated with the selected space */\n    public get active_building(): Building {\n        const form_controls = (this.form || { controls: { location_id: { value: '' } } }).controls;\n        const space: Space =\n            this.space_list.find((space) => space.email == form_controls.location_id.value) ||\n            ({ level: {} } as any);\n        return (\n            this._org.buildings.find((bld) => space.level.building_id === bld.id) ||\n            ({ catering_restricted_from: 0 } as any)\n        );\n    }\n\n    /** Currency code for the active building */\n    public get symbol(): string {\n        return this.active_building.currency || 'USD';\n    }\n\n    /** Number of items in the order */\n    public get item_count(): number {\n        return this.form\n            ? this.form.controls.items.value.reduce((total, item) => total + item.amount, 0)\n            : 0;\n    }\n\n    /* istanbul ignore next */\n    /** Whether booking time is outside of catering hours */\n    public get out_of_hours(): boolean {\n        return this.form.controls.delivery_time.value < 0;\n    }\n\n    /** Whether booking is with the restricted ordering period */\n    public get within_restricted_time(): boolean {\n        const expired = dayjs().add(this.active_building.catering_restricted_from, 'h').startOf('m');\n        return dayjs(this.date).isBefore(expired);\n    }\n\n    /** Whether items are available for order at anytime */\n    public get has_available_items(): boolean {\n        return this.category_list.reduce(\n            (available, category) => available || category.can_order_anytime,\n            false,\n        );\n    }\n\n    constructor(\n        private _menu: CateringMenuService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.generateAvailableTimes();\n        this.subscription('search', this.search$.pipe(map((str) => {\n            const search = str.toLowerCase();\n            const items = [];\n            for (const category of this.category_list) {\n                if (category.items) {\n                    for (const group of category.items) {\n                        if ((group as any).items) {\n                            if (\n                                (group as any).package &&\n                                (group.name.toLowerCase().includes(search) ||\n                                    (group as any).items.find((item) =>\n                                        item.name.toLowerCase().includes(search),\n                                    ))\n                            ) {\n                                items.push(group);\n                            } else {\n                                for (const item of (group as any).items) {\n                                    if (item.name.toLowerCase().includes(search)) {\n                                        items.push(item);\n                                    }\n                                }\n                            }\n                        } else {\n                            if (group.name.toLowerCase().includes(search)) {\n                                items.push(group);\n                            }\n                        }\n                    }\n                }\n            }\n            return items;\n        })).subscribe((items) => this.matched_items = items));\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.date || changes.duration) {\n            this.generateAvailableTimes();\n            /* istanbul ignore else */\n            if (\n                this.form &&\n                !this.available_times.find(\n                    (time) => time.id === this.form.controls.delivery_time.value,\n                )\n            ) {\n                this.form.controls.delivery_time.setValue(this.available_times[0].id);\n            }\n        }\n        /* istanbul ignore else */\n        if (changes.space_list) {\n            /* istanbul ignore else */\n            if (this.form && this.space_list && !this.form.controls.location_id.value) {\n                this.form.controls.location_id.setValue(this.space_list[0].email);\n            }\n        }\n        /* istanbul ignore else */\n        if (changes.order && this.order) {\n            this.initForm();\n        }\n    }\n\n    public focusSearch() {\n        if (this._input_el && this.show_search) {\n            this._input_el.nativeElement.focus();\n        }\n    }\n\n    public initForm() {\n        this.form = new FormGroup({\n            id: new FormControl(this.order.id),\n            booking_date: new FormControl(\n                this.all_day ? dayjs(this.date).startOf('d').valueOf() : this.date,\n            ),\n            location_id: new FormControl(this.order.location_id || this.space_list[0].email),\n            delivery_time: new FormControl(this.order.delivery_time || this.available_times[0].id),\n            items: new FormControl(this.order.items.map((item) => new CateringItem(item))),\n        });\n        this.subscription(\n            'space_change',\n            this.form.controls.location_id.valueChanges.subscribe((space) => {\n                this.generateAvailableTimes();\n                if (\n                    !this.available_times.find(\n                        (time) => time.id === this.form.controls.delivery_time.value,\n                    )\n                ) {\n                    this.form.controls.delivery_time.setValue(this.available_times[0].id);\n                }\n                this.form.controls.items.setValue([]);\n                this.loadMenu();\n            }),\n        );\n        this.loadMenu();\n        this.generateAvailableTimes();\n        if (\n            this.form &&\n            !this.available_times.find((time) => time.id === this.form.controls.delivery_time.value)\n        ) {\n            this.form.controls.delivery_time.setValue(this.available_times[0].id);\n        }\n        console.log('In restricted time:', this.within_restricted_time);\n    }\n\n    public confirmOrder() {\n        const ref = this._dialog.open<BookingCateringConfirmModalComponent,\n            CateringConfirmModalData>(BookingCateringConfirmModalComponent, {\n            maxWidth: '95vw',\n            data: {\n                all_day: this.all_day,\n                date: this.date,\n                form: this.form,\n            },\n        });\n        this.subscription(\n            'confirm_event',\n            ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    const order = new CateringOrder({ ...this.order, ...this.form.value });\n                    this.event.emit(order);\n                    ref.close();\n                }\n            }),\n        );\n        ref.afterClosed().subscribe(() => this.unsub('confirm_event'));\n    }\n\n    private loadMenu() {\n        const space = this.space_list.find(\n            (space) => space.email === this.form.controls.location_id.value,\n        );\n        this.loading = true;\n        this._menu\n            .query({ zone_id: this._org.buildings.find((bld) => space.zones.includes(bld.id)).id })\n            .then(\n                (list) => {\n                    this.loading = false;\n                    this.category_list = list.map((i) => new CateringCategory(i))\n                        .filter(c => !c.out_of_stock);\n                },\n                () => (this.loading = false),\n            );\n    }\n\n    /** Generate a list of available delivery times for the given booking time */\n    private generateAvailableTimes() {\n        const start_date = this.all_day ? dayjs(this.date).startOf('d') : dayjs(this.date);\n        let { start, end } = this.generateStartAndEndTimes();\n        start = start.minute(Math.ceil(start.minute() / 5) * 5);\n        this.available_times = [];\n        while (start.isBefore(end, 'm')) {\n            this.available_times.push({\n                id: Math.abs(start_date.diff(start, 'm')),\n                name: start.format('h:mm A'),\n            });\n            start = start.add(5, 'm');\n        }\n        /* istanbul ignore else */\n        if (this.available_times.length === 0) {\n            this.available_times.push({ id: -1, name: 'Out of hours' });\n        }\n    }\n\n    private generateStartAndEndTimes(): { start: dayjs.Dayjs; end: dayjs.Dayjs } {\n        let start = dayjs(this.date);\n        const now = dayjs();\n        /* istanbul ignore else */\n        if (this.all_day) {\n            start = start.isSame(now, 'd') ? now : start.startOf('d');\n        }\n        let end = this.all_day ? start.endOf('d') : start.add(this.duration, 'm');\n        let building_time = dayjs();\n        const space_email = this.form ? this.form.controls.location_id.value : null;\n        let catering_hours = { start: 7, end: 20 };\n        building_time = building_time.minute(0).hour(catering_hours.start);\n        if (space_email) {\n            const space = this.space_list.find((space) => space.email === space_email);\n            const building = this._org.buildings.find((bld) => space?.zones.includes(bld.id));\n            catering_hours = building?.catering_hours || catering_hours;\n            building_time = building_time.minute(0).hour(catering_hours.start);\n            if (building && building.timezone) {\n                const hour = padZero(Math.floor(catering_hours.start), 2);\n                const minute = padZero(Math.floor(catering_hours.start * 60) % 60, 2);\n                building_time = dayjs(\n                    toDate(`${start.format(`YYYY-MM-DD`)}T${hour}:${minute} ${building.timezone}`),\n                );\n            }\n        }\n        const as_dayjs = dayjs(building_time);\n        if (this.all_day || this.duration >= (catering_hours.end - catering_hours.start) * 60) {\n            if (start.isBefore(as_dayjs, 'm')) {\n                start = as_dayjs;\n                end = start.add(catering_hours.end - catering_hours.start, 'h');\n            }\n        }\n        if (start.isBefore(as_dayjs, 'm')) {\n            start = as_dayjs;\n        }\n        const possible_end = building_time.add(catering_hours.end - catering_hours.start, 'h');\n        if (end.isAfter(possible_end, 'm')) {\n            end = possible_end;\n        }\n        return { start, end };\n    }\n}\n","<div class=\"catering order-details\" [class.compact]=\"compact\">\n    <div class=\"header\" *ngIf=\"form\">\n        <form [formGroup]=\"form\">\n            <div class=\"field\" *ngIf=\"!hide_details\">\n                <label i18n=\"Catering order location label\">Deliver to:</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select formControlName=\"location_id\">\n                        <mat-option *ngFor=\"let space of space_list\" [value]=\"space.email\">\n                            {{ space.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"!hide_details\">\n                <label for=\"start\" i18n=\"Catering order delivery time label\">At:</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select name=\"start\" formControlName=\"delivery_time\">\n                        <mat-option *ngFor=\"let time of available_times\" [value]=\"time.id\">\n                            {{ time.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"search\" [class.min]=\"hide_details\">\n                <button\n                    mat-icon-button\n                    [disabled]=\"!can_order\"\n                    (click)=\"\n                        show_search = !show_search;\n                        !show_search ? search$.next('') : '';\n                        focusSearch()\n                    \"\n                >\n                    <app-icon\n                        [icon]=\"{\n                            class: 'material-icons',\n                            content: show_search ? 'close' : 'search'\n                        }\"\n                    ></app-icon>\n                </button>\n                <div class=\"search-input\" [class.show]=\"show_search || compact\">\n                    <div class=\"input\">\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                #input\n                                matInput\n                                [ngModel]=\"search$ | async\"\n                                (ngModelChange)=\"search$.next($event)\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                placeholder=\"Search for items...\"\n                            />\n                        </mat-form-field>\n                    </div>\n                </div>\n            </div>\n        </form>\n    </div>\n    <div class=\"body\" [class.is-search]=\"search$ | async\" *ngIf=\"!loading; else load_state\">\n        <ng-container *ngIf=\"search$ | async; else menu\">\n            <div class=\"item\" *ngFor=\"let item of matched_items\">\n                <a-catering-order-item\n                    [compact]=\"compact\"\n                    [disabled]=\"within_restricted_time && !item.can_order_anytime\"\n                    [symbol]=\"symbol\"\n                    [item]=\"item\"\n                    [field]=\"form.controls.items\"\n                ></a-catering-order-item>\n            </div>\n        </ng-container>\n        <ng-template #menu>\n            <ng-container *ngIf=\"!active_category; else category_display\">\n                <div class=\"contents\" *ngIf=\"can_order && category_list.length; else empty_state\">\n                    <button\n                        mat-button\n                        class=\"category\"\n                        *ngFor=\"let item of category_list\"\n                        [style.background-image]=\"'url(' + item.image_path + ')'\"\n                        [disabled]=\"within_restricted_time && !item.can_order_anytime\"\n                        (click)=\"active_category = item\"\n                    >\n                        <div class=\"overlay\"></div>\n                        <div class=\"name\">{{ item.name }}</div>\n                    </button>\n                </div>\n            </ng-container>\n        </ng-template>\n    </div>\n    <div class=\"footer\">\n        <button\n            mat-button\n            name=\"previous\"\n            class=\"inverse\"\n            (click)=\"event.emit()\"\n            i18n=\"Catering order cancel action\"\n        >\n            Back\n        </button>\n        <button\n            mat-button\n            name=\"next\"\n            [disabled]=\"!item_count || out_of_hours\"\n            (click)=\"confirmOrder()\"\n            i18n=\"Catering order confirm action\"\n        >\n            Confirm Order({{ item_count || '0' }})\n        </button>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div class=\"empty-state center\">\n        <div class=\"icon\">\n            <img alt=\"No Catering Available\" src=\"assets/img/no-catering.svg\" />\n        </div>\n        <p i18n=\"Catering order unavailable\">\n            Catering is <span class=\"bold\">not available</span> for this booking.<br />\n            Catering must be ordered within business hours at {{ active_building?.name }}.\n        </p>\n    </div>\n</ng-template>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"48\"></mat-spinner>\n            </div>\n            <div class=\"text\" i18n=\"Catering order loading label\">\n                Loading menu for {{ active_building?.name }}...\n            </div>\n        </div>\n    </div>\n</ng-template>\n<ng-template #category_display>\n    <a-category-display\n        [compact]=\"compact\"\n        [category]=\"active_category\"\n        [symbol]=\"symbol\"\n        [items]=\"form.controls.items\"\n        [disabled]=\"within_restricted_time\"\n        (close)=\"active_category = null\"\n    ></a-category-display>\n</ng-template>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\nimport * as dayjs from 'dayjs';\nimport { Space } from 'src/app/services/data/spaces/space.class';\n\n@Component({\n    selector: 'catering-order-list-item',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss'],\n})\nexport class CateringOrderListItemComponent {\n    /** Catering order to display */\n    @Input() order: CateringOrder;\n    /**  */\n    @Input() public space_list: Space[];\n    /** Selected datetime */\n    @Input() date: number;\n    /** Emitter for edit events */\n    @Output() public edit = new EventEmitter<void>();\n    /** Emitter for delete events */\n    @Output() public delete = new EventEmitter<void>();\n\n    public get space_in_booking(): boolean {\n        return !!(this.space_list || []).find(space => space.email === this.order.location_id);\n    }\n    /** Space selected for delivery */\n    public get space(): string {\n        const space = this._spaces.find((this.order || {}).location_id) || { name: '' };\n        return space.name || '<No Location>';\n    }\n    /** Delivery time for the order */\n    public get delivery_time(): string {\n        /* istanbul ignore else */\n        if (!this.order) {\n            return '<Meeting Start>';\n        }\n        const date = dayjs(this.order.booking_date).add(\n            (this.order.changes ? this.order.delivery_time : null) || this.order.delivery_time,\n            'm'\n        );\n        return date.format('h:mm A');\n    }\n\n    /** Total cost of the order */\n    public get order_cost(): number {\n        const items = (this.order || { items: [] }).items as any;\n        return items.reduce((amount, item) => amount + item.amount * item.unit_price, 0);\n    }\n\n    /** Number of items in the order */\n    public get item_count(): number {\n        const items = (this.order || { items: [] }).items as any;\n        return items.reduce((amount, item) => amount + item.amount, 0);\n    }\n\n    /** Currency symbol for the selected space */\n    public get symbol(): string {\n        const space = this._spaces.find((this.order || {}).location_id);\n        /* istanbul ignore else */\n        if (!space || !space.level) {\n            return 'USD';\n        }\n        const building = this._org.buildings.find((bld) => bld.id === space.level.building_id) || {\n            currency: 'USD',\n        };\n        return building.currency;\n    }\n\n    constructor(private _spaces: SpacesService, private _org: OrganisationService) {}\n}\n","<div class=\"details\" i18n=\"Catering order item delivery details\">\n    Deliver to <span>{{ space }}</span> at <span>{{ delivery_time }}</span>\n</div>\n<div class=\"group\">\n    <div class=\"cost\">\n        {{ item_count }}\n        <span i18n=\"Items\">{ item_count, plural, =1 { item } other { items } }</span>\n    </div>\n    <div class=\"cost\">{{ order_cost / 100 | currency: symbol }}</div>\n</div>\n<div class=\"actions\">\n    <button\n        mat-icon-button\n        name=\"edit\"\n        [class.warn]=\"!space_in_booking\"\n        (click)=\"edit.emit()\"\n        [matTooltip]=\"\n            !space_in_booking\n                ? 'Space for this order is not in the booking anymore. On confirmation this order will be removed unless the space is re-added.'\n                : ''\n        \"\n    >\n        <app-icon\n            [icon]=\"{ class: 'material-icons', content: space_in_booking ? 'edit' : 'warning' }\"\n        ></app-icon>\n    </button>\n    <button mat-icon-button name=\"delete\" class=\"inverse\" (click)=\"delete.emit()\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'delete' }\"></app-icon>\n    </button>\n</div>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { CateringOrder } from '../../../../../services/data/catering/catering-order.class';\nimport { BookingFlowEvent } from '../../../bookings.component';\n\nimport * as dayjs from 'dayjs';\nimport { Space } from 'src/app/services/data/spaces/space.class';\n\n@Component({\n    selector: 'a-catering-order-list',\n    templateUrl: './order-list.component.html',\n    styleUrls: ['./order-list.component.scss']\n})\nexport class BookingCateringOrderListComponent {\n    /** Form field for storing catering orders */\n    @Input() public catering: FormControl;\n    /** Selected datetime for the booking */\n    @Input() public date: number;\n    /**  */\n    @Input() public space_list: Space[];\n    /** Whether booking is all day */\n    @Input() public all_day: boolean;\n    /** Emitter for flow update events */\n    @Output() public event = new EventEmitter<BookingFlowEvent>();\n    /** Emiiter for order events */\n    @Output() public order = new EventEmitter<CateringOrder>();\n\n    /** List of orders in the booking */\n    public get orders(): CateringOrder[] {\n        /* istanbul ignore else */\n        if (!this.catering) {\n            return [];\n        }\n        const orders = this.catering.value;\n        orders.forEach(\n            order =>\n                (order.booking_date = this.all_day\n                    ? dayjs(this.date)\n                          .startOf('d')\n                          .valueOf()\n                    : this.date)\n        );\n        return orders;\n    }\n\n    /** Emit event for a new catering order */\n    public newOrder() {\n        this.order.emit();\n    }\n\n    /** Emit event for editing existing order */\n    public editOrder(order: CateringOrder) {\n        this.order.emit(order);\n    }\n\n    /** Remove order from the list */\n    public deleteOrder(order: CateringOrder) {\n        const orders = this.orders;\n        const index = orders.findIndex(an_order => order.id === an_order.id);\n        /* istanbul ignore else */\n        if (index >= 0) {\n            orders.splice(index, 1);\n            this.catering.setValue(orders);\n        }\n    }\n\n    /**\n     * Proceed to the next step in the space booking flow\n     */\n    public next(): void {\n        this.event.emit({ type: 'next', step: 'catering' });\n    }\n\n    /** Move flow to previous step */\n    public previous(): void {\n        this.event.emit({ type: 'previous', step: 'catering' });\n    }\n}\n","<div class=\"catering order-list\">\n    <div class=\"header\">\n        <h3 i18n=\"Catering order list header\">Catering Orders</h3>\n    </div>\n    <div class=\"body\">\n        <ng-container *ngIf=\"orders && orders.length; else empty_state\">\n            <div class=\"list\">\n                <catering-order-list-item\n                    *ngFor=\"let order of orders\"\n                    [space_list]=\"space_list\"\n                    [order]=\"order\"\n                    [date]=\"date\"\n                    (edit)=\"editOrder(order)\"\n                    (delete)=\"deleteOrder(order)\"\n                ></catering-order-list-item>\n            </div>\n            <button mat-button name=\"new\" (click)=\"newOrder()\" i18n=\"Catering order list add action\">\n                Add Order\n            </button>\n        </ng-container>\n    </div>\n    <div class=\"footer\">\n        <button\n            mat-button\n            class=\"inverse\"\n            name=\"previous\"\n            (click)=\"previous()\"\n            i18n=\"Catering order list cancel action\"\n        >\n            Back\n        </button>\n        <button mat-button name=\"next\" (click)=\"next()\" i18n=\"Catering order list continue action\">\n            Next\n        </button>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\" i18n=\"Catering order list empty label\">No catering orders</div>\n        <button mat-button name=\"new\" (click)=\"newOrder()\" i18n=\"Catering order list add action\">\n            Add Order\n        </button>\n    </div>\n</ng-template>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\n\nimport * as dayjs from 'dayjs';\nimport { ANIMATION_SHOW_CONTRACT_EXPAND } from 'src/app/shared/globals/angular-animations';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\n\n@Component({\n    selector: 'booking-space-filters',\n    templateUrl: './filters.component.html',\n    styleUrls: ['./filters.component.scss'],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND]\n})\nexport class BookingSpaceFiltersComponent extends BaseDirective implements OnInit {\n    /** Date selected for the booking */\n    @Input() public date: FormControl;\n    /** List of location IDs being filtered on */\n    @Input() public locations: string[] = [];\n    /** Emitter for changes to location filter */\n    @Output() public locationsChange = new EventEmitter<string[]>();\n    /** List of available buildings */\n    public building_list: Building[] = [];\n    /** Whether to show the location list */\n    public show_locations: boolean;\n\n    /** Whether active date is current day */\n    public get is_today(): boolean {\n        const date = dayjs(this.date.value);\n        return dayjs().isSame(date, 'd');\n    }\n\n    /** Display string for the selected date */\n    public get date_display(): string {\n        const date = dayjs(this.date.value);\n        return this.is_today ? 'Today' : date.format('DD MMM YYYY');\n    }\n\n    /** List of filtered location */\n    public get location_list(): Building[] {\n        return this.locations.map(id => this.building_list.find(bld => bld.id === id));\n    }\n\n    public get building_selected(): HashMap<boolean> {\n        const map = {};\n        for (const id of this.locations) {\n            map[id] = true;\n        }\n        return map;\n    }\n\n    constructor(private _org: OrganisationService) {\n        super();\n    }\n\n    public changeDate(amount: number) {\n        let date = dayjs(this.date.value).add(amount, 'd');\n        const now = dayjs().startOf('m');\n        if (date.isBefore(now, 's')) {\n            date = now;\n        }\n        this.date.setValue(date.valueOf());\n    }\n\n    public ngOnInit(): void {\n        this.loadLocations();\n        this.subscription('buildings', this._org.listen('buildings').subscribe((bld_list) => {\n            this.building_list = bld_list;\n        }));\n    }\n\n    /**\n     * Update location filter to include the given building\n     * @param building Building to add\n     */\n    public addLocationFilter(building: Building): void {\n        this.locations.push(building.id);\n        this.locations = unique(this.locations);\n        this.locationsChange.emit(this.locations);\n        this.storeLocations();\n    }\n\n    /**\n     * Remove location from the active filters\n     * @param building Building to remove\n     */\n    public removeLocationFilter(building: Building) {\n        this.locations.splice(\n            this.locations.findIndex(id => building.id === id),\n            1\n        );\n        this.locationsChange.emit([...this.locations]);\n        this.storeLocations();\n    }\n\n    private loadLocations() {\n        if (localStorage) {\n            const filters = localStorage.getItem('BOOKING.filters');\n            if (!filters) { return; }\n            try {\n                this.locations = JSON.parse(filters);\n            } catch(e) {\n                this.locations = [];\n            }\n        }\n        this.locationsChange.emit(this.locations);\n    }\n\n    private storeLocations() {\n        if (localStorage) {\n            localStorage.setItem('BOOKING.filters', JSON.stringify(this.locations));\n        }\n    }\n}\n","<div class=\"space-filters\" *ngIf=\"date\">\n    <div class=\"actions\">\n        <div class=\"date\">\n            <button mat-icon-button [disabled]=\"is_today\" (click)=\"changeDate(-1)\">\n                <app-icon\n                    [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_left' }\"\n                ></app-icon>\n            </button>\n            <div class=\"text\">{{ date_display }}</div>\n            <button mat-icon-button (click)=\"changeDate(1)\">\n                <app-icon\n                    [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_right' }\"\n                ></app-icon>\n            </button>\n        </div>\n        <div class=\"location-list\" [matMenuTriggerFor]=\"locationMenu\">\n            <div class=\"inner\" (click)=\"show_locations = !show_locations\">\n                <img src=\"assets/img/location-img.svg\" />\n                <div class=\"text\" i18n=\"Booking space filters locations label\">\n                    Select locations(s)\n                </div>\n                <app-icon\n                    [icon]=\"{\n                        class: 'material-icons',\n                        content: 'keyboard_arrow_' + (show_locations ? 'up' : 'down')\n                    }\"\n                ></app-icon>\n            </div>\n        </div>\n    </div>\n    <div class=\"filters\" *ngIf=\"location_list && location_list.length\">\n        <mat-chip-list aria-label=\"Location Filters\">\n            <mat-chip\n                *ngFor=\"let building of location_list\"\n                [id]=\"building.id\"\n                color=\"primary\"\n                [removable]=\"true\"\n                (removed)=\"removeLocationFilter(building)\"\n            >\n                {{ building.name }}\n                <app-icon\n                    matChipRemove\n                    [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"\n                ></app-icon>\n            </mat-chip>\n        </mat-chip-list>\n    </div>\n</div>\n<mat-menu #locationMenu=\"matMenu\" class=\"dark-mode\">\n    <button mat-menu-item (click)=\"$event.stopPropagation()\" *ngFor=\"let building of building_list\">\n        <mat-checkbox\n            [ngModel]=\"building_selected[building.id]\"\n            (change)=\"$event.checked ? addLocationFilter(building) : removeLocationFilter(building)\"\n        >\n            <div class=\"building-name\">\n                <div class=\"code\">{{ building.code }}</div>\n                <div class=\"name\">{{ building.name }}</div>\n                <div class=\"address\">{{ building.address }}</div>\n            </div>\n        </mat-checkbox>\n    </button>\n</mat-menu>\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { catchError, debounceTime, distinctUntilChanged, first, map, switchMap, take } from 'rxjs/operators';\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { ISpaceAvailabilityOptions, Space } from 'src/app/services/data/spaces/space.class';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { randomInt } from 'src/app/shared/utilities/general.utilities';\nimport { sort } from 'src/app/services/data/spaces/space.utilities';\nimport { BookingFlowEvent } from '../../bookings.component';\n\nimport * as dayjs from 'dayjs';\nimport { AlertMode } from '../../../../shared/components/alert-banner/alert-banner.component';\nimport { Urls } from '../../../../shared/utilities/urls';\n\nexport enum BannerMode {\n    None,\n    OfficeRules,\n    SearchFilters\n}\n\n@Component({\n    selector: 'booking-find-space',\n    templateUrl: './find-space.component.html',\n    styleUrls: ['./find-space.component.scss'],\n})\nexport class BookingFindSpaceComponent extends BaseDirective implements OnInit, OnChanges {\n    public AlertMode = AlertMode;\n\n    /** Form control for setting the active space */\n    @Input() public spaces: FormControl;\n    /** Form group for booking */\n    @Input() public form: FormGroup;\n    /** Emitter for flow update events */\n    @Output() public event = new EventEmitter<BookingFlowEvent>();\n\n    /** List of spaces available during the required period */\n    public space_list: Space[] = [];\n    /** List of users from an API search */\n    public search_results$: Observable<Space[]>;\n    /** Whether space list is loading */\n    public loading: boolean;\n    /** List of zones to filter the spaces on */\n    public zone_ids: string[] = [];\n    /** Subject holding the value of the search */\n    public readonly change$ = new Subject<string>();\n\n    public hasLoaded = false;\n    public bannerMode = new BehaviorSubject<BannerMode>(BannerMode.None);\n\n    public get showBanner(): Observable<boolean> {\n        return this.bannerMode.pipe(map(value => value !== BannerMode.None));\n    }\n\n    public get bannerMessage(): Observable<string> {\n        return this.bannerMode.pipe(map(value => {\n            switch (value) {\n                case BannerMode.OfficeRules:\n                    return 'No rooms available due to local office rules applied. ' +\n                        'Please, contact local admin for more information.';\n                case BannerMode.SearchFilters:\n                    return 'There are no available rooms for the selected date and/or time.';\n                case BannerMode.None:\n                    return '';\n            }\n        }));\n    }\n\n    public get bannerButtonText(): Observable<string> {\n        return this.bannerMode.pipe(map(value => {\n            switch (value) {\n                case BannerMode.OfficeRules:\n                    return 'Show Office Contacts';\n                case BannerMode.SearchFilters:\n                    return 'Return to Search';\n                case BannerMode.None:\n                    return '';\n            }\n        }));\n    }\n\n    /**  Whether multiple spaces are allowed to be selected */\n    public get multiple(): boolean {\n        return this._service.setting('app.booking.multiple_spaces');\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _spaces: SpacesService,\n        private _org: OrganisationService,\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._spaces.initialised.pipe(first((_) => _)).subscribe(() => {\n            let request_id = 0;\n            // Listen for input changes\n            this.search_results$ = this.change$.pipe(\n                debounceTime(400),\n                distinctUntilChanged(),\n                switchMap((_) => {\n                    this.loading = true;\n                    request_id = randomInt(9999_9999);\n                    const recurrence = this.form.controls.recurrence\n                        ? this.form.controls.recurrence.value\n                        : null;\n                    const recurrence_properties =\n                        recurrence?.period && recurrence.period !== 'None'\n                            ? {\n                                recurr_period: (recurrence.period || '').toLowerCase(),\n                                recurr_end: dayjs(recurrence.end * 1000)\n                                    .endOf('d')\n                                    .unix(),\n                            }\n                            : {};\n                    const date = dayjs(this.form.controls.date.value);\n                    const query: ISpaceAvailabilityOptions = {\n                        date: this.form.controls.all_day.value\n                            ? date.startOf('d').valueOf()\n                            : date.valueOf(),\n                        duration: this.form.controls.all_day.value\n                            ? 24 * 60\n                            : this.form.controls.duration.value,\n                        zone_ids: this._org.building.id,\n                        bookable: true,\n                        ...recurrence_properties,\n                    };\n                    /* istanbul ignore else */\n                    if (this.zone_ids && this.zone_ids.length) {\n                        query.zone_ids = this.zone_ids.join(',');\n                    }\n                    const id = request_id;\n                    return this._spaces.available(query).then(async (list) => ({ id, list }));\n                }),\n                catchError((_) => of({ id: request_id, list: [] })),\n                map((resp: { id: number; list: Space[] }) => {\n                    this.loading = false;\n                    this.hasLoaded = true;\n                    const list = resp.id === request_id ? resp.list : this.space_list;\n                    const recurrence = this.form.controls.recurrence\n                        ? this.form.controls.recurrence.value\n                        : null;\n                    const date = dayjs(this.form.controls.date.value);\n                    return recurrence?.period && recurrence.period !== 'None'\n                        ? list.filter((space) =>\n                            space.recurr_available.find(\n                                (block) =>\n                                    block.available && dayjs(block.date * 1000).isSame(date, 'd'),\n                            ),\n                        )\n                        : list;\n                }),\n            );\n            // Process API results\n            this.subscription(\n                'search_results',\n                this.search_results$.subscribe((list) => {\n                    // count if a booking was filtered out for rule, or availability\n                    // we will change the mode to match whichever is largest.\n                    let rulesCount = 0;\n                    this.space_list = list.filter((space) => {\n                        const rules = space.rulesFor({\n                            date: this.form.controls.date.value,\n                            duration: this.form.controls.all_day.value\n                                ? 24 * 60\n                                : this.form.controls.duration.value,\n                            host: this.form.controls.organiser.value,\n                        });\n                        const hide = rules.hide;\n                        if (hide) {\n                            rulesCount += hide ? 1 : 0;\n                            return false;\n                        }\n                        for (const zone of this.zone_ids) {\n                            if (space.zones.includes(zone)) {\n                                return true;\n                            }\n                        }\n                        return !this.zone_ids.length;\n                    });\n                    this.space_list.sort((a, b) => sort(a, b, this._org.buildings));\n                    if (rulesCount > 0 && !this.space_list.length) {\n                        this.bannerMode.next(BannerMode.OfficeRules);\n                    } else if (!this.space_list.length) {\n                        this.bannerMode.next(BannerMode.SearchFilters);\n                    } else {\n                        this.bannerMode.next(BannerMode.None);\n                    }\n                }),\n            );\n            this.change$.next('');\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.form) {\n            const onChange = (_) => this.change$.next(_);\n            /* istanbul ignore else */\n            if (this.form.controls.date) {\n                this.subscription(\n                    'date_field',\n                    this.form.controls.date.valueChanges.subscribe(onChange),\n                );\n            }\n            /* istanbul ignore else */\n            if (this.form.controls.duration) {\n                this.subscription(\n                    'duration_field',\n                    this.form.controls.duration.valueChanges.subscribe(onChange),\n                );\n            }\n        }\n    }\n\n    /**\n     * Update the selected space list\n     * @param space Space to add/toggle in the selected list\n     */\n    public selectSpace(space: Space) {\n        if (this.multiple) {\n            const list = this.spaces.value;\n            if (list.find((item) => item.id === space.id)) {\n                this.spaces.setValue(list.filter((item) => item.id !== space.id));\n            } else {\n                this.spaces.setValue(list.concat([space]));\n            }\n        } else {\n            this.spaces.setValue([space]);\n            this.event.emit({ type: 'next', step: 'search' });\n        }\n    }\n\n    /**\n     * Proceed to the next step in the space booking flow\n     */\n    public next(): void {\n        this.event.emit({ type: 'next', step: 'search' });\n    }\n\n    /** Move flow to previous step */\n    public previous(): void {\n        this.event.emit({ type: 'previous', step: 'search' });\n    }\n\n    public closeBanner() {\n        this.bannerMode.next(BannerMode.None);\n    }\n\n    public bannerActionButtonClick() {\n        this.bannerMode.pipe(take(1)).subscribe(value => {\n            switch (value) {\n                case BannerMode.OfficeRules:\n                    window.open(Urls.OfficeContacts);\n                    break;\n                case BannerMode.SearchFilters:\n                    this.previous();\n                    break;\n            }\n        });\n    }\n}\n","<div class=\"find-space\">\n    <div class=\"background\"></div>\n    <div class=\"header\">\n        <booking-space-filters\n            [date]=\"form?.controls?.date\"\n            [(locations)]=\"zone_ids\"\n            (locationsChange)=\"change$.next($event)\"\n        ></booking-space-filters>\n        <app-alert-banner\n            *ngIf=\"!loading && !space_list?.length && (showBanner | async) && hasLoaded\"\n            [mode]=\"AlertMode.Coachmark\"\n            message=\"{{bannerMessage | async}}\"\n            buttonText=\"{{bannerButtonText | async}}\"\n            (close)=\"closeBanner()\"\n            (action)=\"bannerActionButtonClick()\"\n        ></app-alert-banner>\n    </div>\n    <ng-container *ngIf=\"!loading; else load_state\">\n        <cdk-virtual-scroll-viewport\n            *ngIf=\"space_list && space_list.length && hasLoaded; else hasLoaded && empty_state\"\n            [itemSize]=\"141\"\n            minBufferPx=\"900\" maxBufferPx=\"1200\"\n        >\n            <ng-container *cdkVirtualFor=\"let space of space_list\">\n                <a-booking-space-item\n                    [form]=\"form\"\n                    [space]=\"space\"\n                    [multi]=\"multiple\"\n                    (select)=\"selectSpace(space)\"\n                ></a-booking-space-item>\n            </ng-container>\n        </cdk-virtual-scroll-viewport>\n    </ng-container>\n    <div class=\"footer\">\n        <div class=\"box\">\n            <button\n                mat-button\n                class=\"inverse\"\n                name=\"previous\"\n                (click)=\"previous()\"\n                i18n=\"Booking spaces cancel action\"\n            >\n                Back\n            </button>\n            <button\n                mat-button\n                *ngIf=\"multiple\"\n                name=\"next\"\n                [disabled]=\"!spaces.value || !spaces.value.length\"\n                (click)=\"next()\"\n                i18n=\"Booking spaces continue action\"\n            >\n                Next\n            </button>\n        </div>\n    </div>\n</div>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"48\"></mat-spinner>\n            </div>\n            <div class=\"text\" i18n=\"Booking spaces loading label\">\n                Checking space availability...\n            </div>\n        </div>\n    </div>\n</ng-template>\n<ng-template #empty_state>\n    <app-informational-image src=\"assets/img/no_space_results.svg\"></app-informational-image>\n</ng-template>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { FormGroup } from '@angular/forms';\n\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { ViewRoomModalComponent } from 'src/app/overlays/view-room-modal/view-room-modal.component';\nimport {\n    RecurrenceSpacesModalComponent,\n    RecurrenceSpacesModalData,\n} from '../../../overlays/recurrence-spaces-modal/recurrence-spaces-modal.component';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport {\n    BookingRecurrenceDetails,\n    BookingRecurrenceSpaceDetails,\n} from 'src/app/services/data/bookings/booking.interfaces';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: 'a-booking-space-item',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss'],\n})\nexport class BookingSpaceItemComponent extends BaseDirective {\n    /** Space to display */\n    @Input() public space: Space;\n    /** Form fields for booking */\n    @Input() public form: FormGroup;\n    /** Whether multiple spaces are able to be selected */\n    @Input() public multi: boolean;\n    /** Emitter for select actions on the */\n    @Output() public select = new EventEmitter<void>();\n\n    /** Whether space image should be displayed */\n    public get show_image() {\n        return this._service.setting('app.space_display.show_images');\n    }\n\n    /** Whether this space is selected */\n    public get selected(): boolean {\n        /* istanbul ignore else */\n        if (!this.form && this.space) {\n            return false;\n        }\n        return (\n            this.form.controls.space_list &&\n            !!(this.form.controls.space_list.value || []).find(\n                (space) => space.id === this.space.id\n            )\n        );\n    }\n\n    /** Whether space is booked by request */\n    public get is_request(): boolean {\n        /* istanbul ignore else */\n        if (!this.form) {\n            return false;\n        }\n        return this.space.byRequest({\n            date: this.form.controls.date.value,\n            duration: this.form.controls.duration.value,\n            host: this.form.controls.organiser.value || this._users.current,\n        });\n    }\n\n    public get availability(): string {\n        const count = this.space.recurr_available.reduce(\n            (count, ocurrence) => count + (ocurrence.available ? 1 : 0),\n            0\n        );\n        return count >= this.space.recurr_available.length\n            ? 'all'\n            : `${count} of ${this.space.recurr_available.length}`;\n    }\n\n    /** Display location of the space */\n    public get location(): string {\n        /* istanbul ignore else */\n        if (!this.space) {\n            return 'Unable to determine location';\n        }\n        const level = this.space.level;\n        const bld = this._org.buildings.find((building) => building.id === level.building_id);\n        return `${bld ? bld.name + ', ' : ''}${level.name}`;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _org: OrganisationService,\n        private _users: UsersService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    /**\n     * Open the modal to show the location of a space\n     * @param space Space to show the location\n     */\n    public locate() {\n        this._dialog.open(ViewRoomModalComponent, {\n            width: 'auto',\n            height: 'auto',\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: { space: this.space },\n        });\n    }\n\n    public selectSpace() {\n        if (!this.space.recurr_available || !this.space.recurr_available.length || this.selected) {\n            this.select.emit();\n        } else {\n            const ref = this._dialog.open<\n                RecurrenceSpacesModalComponent,\n                RecurrenceSpacesModalData\n            >(RecurrenceSpacesModalComponent, {\n                width: 'auto',\n                height: 'auto',\n                maxWidth: '95vw',\n                maxHeight: '95vh',\n                data: {\n                    space: this.space,\n                    duration: this.form.controls.all_day.value\n                        ? 24 * 60\n                        : this.form.controls.duration.value,\n                    host: this.form.controls.organiser.value,\n                    conflicts: this.form.controls.recurrence.value.conflicts || [],\n                },\n            });\n            this.subscription(\n                'recurr_conflicts',\n                ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                    /* istanbul ignore else */\n                    if (event.reason === 'done') {\n                        const recurr: BookingRecurrenceDetails = this.form.controls.recurrence\n                            .value;\n                        const conflict_list: BookingRecurrenceSpaceDetails[] = event.metadata.filter(\n                            (i) => i.space\n                        );\n                        this.form.controls.recurrence.setValue({\n                            ...recurr,\n                            conflicts: conflict_list,\n                        });\n                        this.form.controls.space_list.setValue([]);\n                        this.select.emit();\n                        ref.close();\n                    }\n                })\n            );\n        }\n    }\n}\n","<div class=\"space-details\" *ngIf=\"space\" [class.with-image]=\"show_image\">\n    <div class=\"details\">\n        <div\n            class=\"image\"\n            *ngIf=\"space.image\"\n            [style.background-image]=\"'url(' + space.image + ')'\"\n        ></div>\n        <div class=\"overlay\"></div>\n        <div class=\"name\">{{ space.name }}</div>\n        <div class=\"info\">\n            <div class=\"location\">{{ location }}</div>\n            <div class=\"capacity\">\n                <app-icon\n                    [icon]=\"{ type: 'icon', class: 'material-icons', content: 'account_circle' }\"\n                ></app-icon>\n                {{ space.capacity || '0' }}\n            </div>\n        </div>\n        <div\n            class=\"info recurr\"\n            *ngIf=\"space.recurr_available && space.recurr_available.length\"\n            i18n=\"Booking space availability label\"\n        >\n            Available for&nbsp;<span>{{ availability }}</span\n            >&nbsp;meeting ocurrences\n        </div>\n    </div>\n    <div class=\"actions\">\n        <button\n            mat-button\n            name=\"select\"\n            [class.inverse]=\"multi && !selected\"\n            [class.request]=\"is_request\"\n            (click)=\"selectSpace()\"\n        >\n            {{ multi ? (selected ? 'Remove' : is_request ? 'Request' : 'Select') : is_request ? 'Request' : 'Book' }}\n        </button>\n        <button mat-button class=\"inverse\" name=\"locate\" (click)=\"locate()\" i18n=\"Booking space locate action\">\n            Map\n        </button>\n    </div>\n</div>\n","import { Component, Input, Output, EventEmitter, ViewChild, ElementRef } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { BookingFlowEvent } from '../../bookings.component';\n\n@Component({\n    selector: 'booking-spaces-form',\n    templateUrl: './form.component.html',\n    styleUrls: ['./form.component.scss']\n})\nexport class BookingSpaceFlowFormComponent {\n    /** Booking form fields */\n    @Input() public form: FormGroup;\n    /** Whether form is not the first page in the flow */\n    @Input() public can_return: boolean = false;\n    /** Emitter for flow update events */\n    @Output() public event = new EventEmitter<BookingFlowEvent>();\n\n    @ViewChild('container', { static: true }) private container: ElementRef<HTMLDivElement>;\n\n    /** Move flow to next step */\n    public next(): void {\n        this.form.markAllAsTouched();\n        this.form.controls.date.updateValueAndValidity();\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            this.event.emit({ type: 'next', step: 'form' });\n        } else if (this.container) {\n            this.container.nativeElement.scrollIntoView({\n                behavior: 'smooth',\n                block: 'start',\n                inline: 'nearest'\n            });\n        }\n    }\n\n    /** Move flow to previous step */\n    public previous(): void {\n        this.event.emit({ type: 'previous', step: 'form' });\n    }\n\n    /** Reset form to initial state */\n    public resetForm(): void {\n        this.event.emit({ type: 'reset', step: 'form' });\n    }\n}\n","<div class=\"booking-form\" #container>\n    <div class=\"header\">\n        <h3 i18n=\"Booking form header\">\n            {{ form.controls.id && form.controls.id.value ? 'Edit' : 'New' }} Booking\n        </h3>\n        <button mat-icon-button name=\"reset\" (click)=\"resetForm()\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'refresh' }\"></app-icon>\n        </button>\n    </div>\n    <form [formGroup]=\"form\" (ngSubmit)=\"next()\">\n        <div class=\"body\">\n            <a-booking-form [form]=\"form\"></a-booking-form>\n        </div>\n        <div class=\"footer\">\n            <button\n                mat-button\n                type=\"button\"\n                name=\"return\"\n                *ngIf=\"can_return\"\n                class=\"inverse\"\n                (click)=\"previous()\"\n                i18n=\"Booking form cancel action\"\n            >\n                Back\n            </button>\n            <button mat-button type=\"submit\" name=\"next\" i18n=\"Booking form continue action\">\n                Next\n            </button>\n        </div>\n    </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { generateBookingForm } from 'src/app/services/data/bookings/booking.utilities';\nimport {\n    AvailableBookingFields,\n    BookingFlowSettings,\n} from 'src/app/shared/utilities/settings.interfaces';\nimport { HashMap, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { BookingFlowEvent } from '../bookings.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { BookingConfirmComponent } from '../overlays/booking-confirm/booking-confirm.component';\nimport { first } from 'rxjs/operators';\nimport {\n    RequirementDetailsModalComponent,\n    RequirementDetailsModalData,\n} from '../overlays/requirement-details-modal/requirement-details-modal.component';\nimport {\n    CateringDetailsModalComponent,\n    CateringDetailsModalData,\n} from '../overlays/catering-details-modal/catering-details-modal.component';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { Space } from 'src/app/services/data/spaces/space.class';\n\n@Component({\n    selector: 'booking-space-flow',\n    templateUrl: './space-flow.component.html',\n    styleUrls: ['./space-flow.component.scss'],\n})\nexport class BookingSpaceFlowComponent extends BaseDirective implements OnInit {\n    /** Form fields */\n    public form: FormGroup;\n    /** Form data store */\n    public booking: Booking;\n    /** Step of the booking flow that is currently active */\n    public flow_step: string;\n    /** Application settings for bookings */\n    public settings: BookingFlowSettings;\n\n    /** List of available booking fields for the form */\n    public get available_fields(): AvailableBookingFields[] {\n        return this.settings.show_fields || [];\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _spaces: SpacesService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._spaces.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.settings = this._service.setting('app.booking');\n            this.subscription(\n                'route.params',\n                this._route.paramMap.subscribe((params) => {\n                    /* istanbul ignore else */\n                    if (params.has('step')) {\n                        this.flow_step = params.get('step');\n                    }\n                })\n            );\n            this.loadFormData();\n        });\n    }\n\n    /**\n     * Handle events from child components\n     * @param event Booking flow event\n     */\n    public handleFlowEvent(event: BookingFlowEvent) {\n        switch (event.type) {\n            case 'next':\n                this.toNextFlowStep(event);\n                break;\n            case 'previous':\n                this.toPreviousFlowStep(event);\n                break;\n            case 'reset':\n                this.resetForm();\n                break;\n        }\n    }\n\n    private toNextFlowStep(event: BookingFlowEvent) {\n        const space_list = this.form.controls.space_list.value;\n        switch (event.step) {\n            case 'search':\n                console.log('Space List:', space_list);\n                if (\n                    space_list &&\n                    space_list.length &&\n                    this.settings.multiple_spaces &&\n                    (!event.metadata || !event.metadata.ref || event.metadata.ref !== 'equipment')\n                ) {\n                    this.openEquipmentDetailsModal();\n                } else {\n                    if (this.form.controls.has_catering && this.form.controls.has_catering.value) {\n                        this.navigate('catering');\n                    } else {\n                        this.navigate('form');\n                        this.confirmBooking();\n                    }\n                }\n                break;\n            case 'catering':\n                const order_list = this.form.controls.catering.value;\n                if (\n                    order_list &&\n                    order_list.length &&\n                    (!event.metadata || !event.metadata.ref || event.metadata.ref !== 'details')\n                ) {\n                    this.openCateringDetailsModal();\n                } else {\n                    this.navigate('form');\n                    this.confirmBooking();\n                }\n                break;\n            default:\n                this.form.markAsDirty();\n                if (\n                    !this.form.controls.needs_space ||\n                    (this.form.controls.needs_space.value &&\n                        (!space_list || !space_list.length || !this.form.controls.id.value))\n                ) {\n                    this.navigate('search');\n                } else if (this.form.controls.id?.value && space_list && space_list.length) {\n                    this.openEquipmentDetailsModal();\n                } else {\n                    this.confirmBooking();\n                }\n                break;\n        }\n    }\n\n    private toPreviousFlowStep(event: BookingFlowEvent) {\n        switch (event.step) {\n            case 'search':\n                this.navigate('form');\n                break;\n            case 'catering':\n                this.navigate('search');\n                break;\n        }\n    }\n\n    private navigate(route: string) {\n        this._router.navigate(['book', 'spaces', route], {\n            queryParamsHandling: 'preserve',\n        });\n        this.flow_step = route;\n    }\n\n    /** Clear user changes to the form data */\n    private resetForm() {\n        delete this.form;\n        delete this.booking;\n        localStorage.removeItem('ACA_STAFF.booking_form_data');\n        this.loadFormData();\n    }\n\n    /**\n     * Load existing form data or generate a new booking form\n     */\n    private loadFormData(): void {\n        let form_data: HashMap = {};\n        /* istanbul ignore else */\n        if (localStorage) {\n            const form_string = localStorage.getItem('ACA_STAFF.booking_form_data');\n            /* istanbul ignore else */\n            if (form_string) {\n                try {\n                    form_data = JSON.parse(form_string);\n                } catch (e) {}\n            }\n        }\n        this.booking = new Booking(form_data);\n        this.form = generateBookingForm(this.booking, this.available_fields);\n        this.subscription(\n            'form_changes',\n            this.form.valueChanges.subscribe(() => this.saveFormData())\n        );\n        /* istanbul ignore else */\n        if (form_data && form_data.room_ids && this.form.controls.space_list) {\n            this.form.controls.space_list.setValue(\n                form_data.room_ids.map((id) => this._spaces.find(id) || { id, name: id })\n            );\n        }\n    }\n\n    private saveFormData() {\n        /* istanbul ignore else */\n        if (localStorage && this.booking) {\n            localStorage.setItem(\n                'ACA_STAFF.booking_form_data',\n                JSON.stringify({\n                    ...this.booking.toJSON(),\n                    ...this.form.value,\n                    room_ids: (this.form.value.space_list as Space[]).map(space => space.id)\n                })\n            );\n        }\n    }\n\n    /** Open modal for adding equipment requirements to booking */\n    private openEquipmentDetailsModal() {\n        const space_list = [...this.form.controls.space_list.value];\n        if (\n            this.form.controls.recurrence?.value?.period &&\n            this.form.controls.recurrence?.value?.conflicts?.length > 0\n        ) {\n            this.form.controls.recurrence.value.conflicts.forEach(i => {\n                if (!space_list.find(space => space.email === i.space)) {\n                    space_list.push(this._spaces.find(i.space));\n                }\n            });\n        }\n        const recurrence = this.form.controls.recurrence.value;\n        const ref = this._dialog.open<\n            RequirementDetailsModalComponent,\n            RequirementDetailsModalData\n        >(RequirementDetailsModalComponent, {\n            maxWidth: '95vw',\n            width: '32em',\n            data: {\n                spaces: space_list,\n                notes_field: this.form.controls.notes,\n                codes_field: this.form.controls.equipment_codes,\n                head_counts_field: this.form.controls.expected_attendees,\n                recurrence: recurrence.period && !this.form.controls.id.value\n            },\n        });\n        this.subscription(\n            'modal_events',\n            ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    this.toNextFlowStep({\n                        type: 'next',\n                        step: 'search',\n                        metadata: { ref: 'equipment' },\n                    });\n                    ref.close();\n                }\n            })\n        );\n        ref.afterClosed().subscribe(() => this.unsub('modal_events'));\n    }\n\n    /** Open modal for adding equipment requirements to booking */\n    private openCateringDetailsModal() {\n        const ref = this._dialog.open<CateringDetailsModalComponent, CateringDetailsModalData>(\n            CateringDetailsModalComponent,\n            {\n                maxWidth: '95vw',\n                width: '32em',\n                data: {\n                    spaces: this.form.controls.space_list.value,\n                    notes_field: this.form.controls.notes,\n                    catering: this.form.controls.catering,\n                },\n            }\n        );\n        this.subscription(\n            'modal_events',\n            ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    this.toNextFlowStep({\n                        type: 'next',\n                        step: 'catering',\n                        metadata: { ref: 'details' },\n                    });\n                    ref.close();\n                }\n            })\n        );\n        ref.afterClosed().subscribe(() => this.unsub('modal_events'));\n    }\n\n    /**\n     * Open modal to confirm the booking details\n     */\n    private confirmBooking() {\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            const value = this.form.value;\n            const dialog_ref = this._dialog.open(BookingConfirmComponent, {\n                width: '32em',\n                maxWidth: '95vw',\n                maxHeight: '95vh',\n                data: {\n                    old_booking: this.booking,\n                    booking: new Booking({\n                        ...this.booking,\n                        ...value,\n                        room_ids: value.space_list.map((space) => space.id),\n                        id: this.booking.id === 'ad-hoc' ? '' : this.booking.id\n                    }),\n                },\n            });\n            dialog_ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    this.resetForm();\n                    this._router.navigate(['/book','spaces']);\n                }\n            });\n        }\n    }\n}\n","<div class=\"space-flow\">\n    <ng-container [ngSwitch]=\"flow_step\">\n        <ng-container *ngSwitchCase=\"'search'\">\n            <booking-find-space\n                *ngIf=\"form\"\n                [spaces]=\"form.controls.space_list\"\n                [form]=\"form\"\n                (event)=\"handleFlowEvent($event)\"\n            ></booking-find-space>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"'catering'\">\n            <booking-catering\n                *ngIf=\"form\"\n                [form]=\"form\"\n                (event)=\"handleFlowEvent($event)\"\n            ></booking-catering>\n        </ng-container>\n        <ng-container *ngSwitchDefault>\n            <booking-spaces-form\n                *ngIf=\"form\"\n                [form]=\"form\"\n                (event)=\"handleFlowEvent($event)\"\n            ></booking-spaces-form>\n        </ng-container>\n    </ng-container>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\n@Component({\n    selector: 'app-explore',\n    templateUrl: './explore.component.html',\n    styleUrls: ['./explore.component.scss']\n})\nexport class ExploreComponent extends BaseDirective implements OnInit {\n    /** Whether to show the overlay menu */\n    public show_menu: boolean;\n\n    constructor(private _service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.title = 'Maps';\n    }\n}\n","<div class=\"explore page\">\n    <header class=\"header\">\n        <a-topbar-header [(menu)]=\"show_menu\"></a-topbar-header>\n    </header>\n    <main class=\"body\">\n        <explore-map-view></explore-map-view>\n    </main>\n    <footer class=\"footer\">\n        <a-footer-menu></a-footer-menu>\n    </footer>\n</div>\n<!-- <a-overlay-menu [(show)]=\"show_menu\"></a-overlay-menu> -->\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Route } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\n\nimport { ComposerModule } from '@placeos/composer';\nimport { AInteractiveMapModule } from '@acaprojects/ngx-interactive-map';\n\nimport { ExploreComponent } from './explore.component';\nimport { SharedContentModule } from 'src/app/shared/shared.module';\nimport { MapViewComponent } from './map-view/map-view.component';\nimport { ExploreSpaceStatusComponent } from './status-managers/space-status.component';\nimport { ExploreDeskStatusComponent } from './status-managers/desk-status.component';\nimport { ZoomControlsComponent } from './zoom-controls/zoom-controls.component';\nimport { ExploreSpaceInfoComponent } from './overlays/space-info/space-info.component';\nimport { ExploreSearchComponent } from './search/search.component';\nimport { ExploreMapLegendComponent } from './map-legend/map-legend.component';\nimport { ExploreTimelineComponent } from './timeline/timeline.component';\nimport { ExploreBookingModalComponent } from './overlays/booking-modal/booking-modal.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: ExploreComponent },\n    { path: ':search_type', component: ExploreComponent }\n];\n\n@NgModule({\n    declarations: [\n        ExploreComponent,\n        MapViewComponent,\n        ExploreSpaceStatusComponent,\n        ExploreDeskStatusComponent,\n        ZoomControlsComponent,\n        ExploreSpaceInfoComponent,\n        ExploreSearchComponent,\n        ExploreMapLegendComponent,\n        ExploreTimelineComponent,\n        ExploreBookingModalComponent\n    ],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(ROUTES),\n        SharedContentModule,\n        AInteractiveMapModule,\n        ComposerModule,\n        FormsModule\n    ]\n})\nexport class ExploreModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { MapLegendItem, ExploreMapSettings } from 'src/app/shared/utilities/settings.interfaces';\nimport { ANIMATION_SHOW_CONTRACT_EXPAND } from 'src/app/shared/globals/angular-animations';\n\n@Component({\n    selector: 'a-map-legend',\n    templateUrl: './map-legend.component.html',\n    styleUrls: ['./map-legend.component.scss'],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND]\n})\nexport class ExploreMapLegendComponent extends BaseDirective implements OnInit {\n    /** Mapping of legend item groups */\n    public legend_items: HashMap<MapLegendItem[]> = {};\n    /** Mapping of map colours */\n    public colours: HashMap<string> = {};\n    /** Whether group names should be displayed */\n    public show_group_names: boolean;\n    /** Whether the legend items should be shown */\n    public show_legend = false;\n\n    /** List of group names for legend items */\n    public get group_names(): string[] {\n        return Object.keys(this.legend_items);\n    }\n\n    constructor(private _service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.initialised.pipe(first(_ => _)).subscribe(() => {\n            const explore_settings: ExploreMapSettings =\n                this._service.setting('app.explore') || ({} as any);\n            this.legend_items = explore_settings.legend || {};\n            this.colours = explore_settings.colors || {};\n            this.show_group_names = !!explore_settings.show_legend_group_names;\n        });\n    }\n}\n","<div class=\"map-legend\" *ngIf=\"group_names && group_names.length\">\n    <div class=\"tag\">\n        <div class=\"title\" (click)=\"show_legend = !show_legend\">\n            <div class=\"text\" i18n=\"Explore legend label\">{{ show_legend ? 'Hide' : 'Show' }} Legend</div>\n            <app-icon\n                [icon]=\"{\n                    class: 'material-icons',\n                    content: show_legend ? 'arrow_drop_up' : 'arrow_drop_down'\n                }\"\n            ></app-icon>\n        </div>\n    </div>\n    <div\n        class=\"contents\"\n        [@show]=\"show_legend ? 'show' : 'hide'\"\n        [style.padding-bottom]=\"show_legend ? '1em' : ''\"\n        [style.padding-bottom]=\"show_legend ? '.5em' : ''\"\n        [style.overflow]=\"show_legend ? 'hidden auto' : 'hidden'\"\n    >\n        <ul>\n            <ng-container *ngFor=\"let group of group_names\">\n                <li class=\"group\" *ngIf=\"show_group_names\">\n                    <div class=\"bar\"></div>\n                    <div class=\"name\">{{ group }}</div>\n                    <div class=\"bar\"></div>\n                </li>\n                <li class=\"item\" name=\"item.key\" *ngFor=\"let item of legend_items[group]\">\n                    <div class=\"ref\">\n                        <ng-container *ngIf=\"item.icon; else colour_display\">\n                            <app-icon [icon]=\"item.icon\"></app-icon>\n                        </ng-container>\n                        <ng-template #colour_display>\n                            <div\n                                class=\"colour\"\n                                [style.background-color]=\"item.color || colours[item.key]\"\n                            ></div>\n                        </ng-template>\n                    </div>\n                    <div class=\"name\">{{ item.name }}</div>\n                </li>\n            </ng-container>\n        </ul>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MapPinComponent } from '@acaprojects/ngx-interactive-map';\nimport { first } from 'rxjs/operators';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { MapStatus, MapListener } from '../status-managers/status.interfaces';\nimport { HashMap, Point } from 'src/app/shared/utilities/types.utilities';\nimport { MapFeature } from '@acaprojects/ngx-interactive-map/lib/helpers/map.interfaces';\nimport { MapRadiusComponent } from '@acaprojects/ngx-interactive-map';\nimport { ExploreMapSettings } from 'src/app/shared/utilities/settings.interfaces';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    BookingRulesModalComponent,\n    BookingRulesModalData,\n} from 'src/app/overlays/booking-rules-modal/booking-rules-modal.component';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: 'explore-map-view',\n    templateUrl: './map-view.component.html',\n    styleUrls: ['./map-view.component.scss'],\n})\nexport class MapViewComponent extends BaseDirective implements OnInit {\n    /** Zoom level of the map */\n    public zoom: number;\n    /** Center offset of the map */\n    public center: Point = { x: 0.5, y: 0.5 };\n    /** Mapping of elements to CSS styles */\n    public style_map: HashMap<HashMap<string | number>> = {};\n    /** List of listeners for the map */\n    public listeners: MapListener[] = [];\n    /** List of features to render on the map */\n    public features: MapFeature[] = [];\n    /** ID of the active level to display on the map */\n    public active_level: string;\n    /** Mapping of status lists to types */\n    public status_map: { spaces?: MapStatus[]; desks?: MapStatus[]; zones?: MapStatus[] } = {};\n    /** Mapping of listener lists to types */\n    public listener_map: {\n        spaces?: MapListener[];\n        desks?: MapListener[];\n        zones?: MapListener[];\n    } = {};\n    /** Mapping of features lists to types */\n    public feature_map: {\n        spaces?: MapFeature[];\n        desks?: MapFeature[];\n        zones?: MapFeature[];\n    } = {};\n    /** Message to display over the map */\n    public message: string;\n    /** Whether location data is loading */\n    public loading: boolean;\n    /** Point or element on the map to focus */\n    public focus: string | Point;\n    /** Feature on the map to focus */\n    public focus_feature: MapFeature;\n    /** Current shown time */\n    public date: number;\n    /** Application settings for the explore component */\n    public settings: ExploreMapSettings;\n\n    /** URL of the active map */\n    public get map_url(): string {\n        const level = this._org.levelWithID(this.active_level) || { map_url: '' };\n        return level.map_url || '';\n    }\n\n    /** Whether current level has booking rules associated with it */\n    public get has_booking_rules(): boolean {\n        const level = this._org.levelWithID(this.active_level) || {\n            building_id: '',\n        };\n        return !!(this._org.buildings.find((bld) => bld.id === level.building_id) || {})\n            .booking_details;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _dialog: MatDialog,\n        private _org: OrganisationService,\n        private _users: UsersService,\n        private _spaces: SpacesService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._spaces.initialised.pipe(first((_) => _)).subscribe(() => {\n            /* istanbul ignore else */\n            if (!this.active_level) {\n                const bld = this._org.building;\n                if (bld && bld.levels.length) {\n                    this.updateLevel(bld.levels[0].id);\n                }\n            }\n            this.settings = this._service.setting('app.explore') || {};\n            this.subscription(\n                'route.query',\n                this._route.queryParamMap.subscribe((params) => {\n                    this.focus_feature = null;\n                    this.processFeatures();\n                    /* istanbul ignore else */\n                    if (params.has('space')) {\n                        this.loadSpaceLocation(params.get('space'));\n                    }\n                    /* istanbul ignore else */\n                    if (params.has('user')) {\n                        this.loadUserLocation(params.get('user')).then(\n                            (user) => {\n                                this.loading = false;\n                                this.message = this.focus\n                                    ? ''\n                                    : `Unable to locate ${user ? user.name : params.get('user')}`;\n                            },\n                            (err) => {\n                                this.loading = false;\n                                this.message = `Unable to locate user`;\n                                /* istanbul ignore else */\n                                if (err && err.status !== 404) {\n                                    this._service.notifyError(\n                                        `Error loading user location. ${err.message}`\n                                    );\n                                }\n                            }\n                        );\n                    }\n                })\n            );\n        });\n    }\n\n    public openBookingRulesModal() {\n        const level = this._org.levelWithID(this.active_level) || {\n            building_id: '',\n        };\n        const building: Building =\n            this._org.buildings.find((bld) => bld.id === level.building_id) || ({} as any);\n        this._dialog.open<BookingRulesModalComponent, BookingRulesModalData>(\n            BookingRulesModalComponent,\n            {\n                data: {\n                    building,\n                },\n            }\n        );\n    }\n\n    /**\n     * Process changes to statuses\n     */\n    public processStatuses() {\n        const styles: HashMap<HashMap<string | number>> = {};\n        (this.status_map.spaces || []).forEach((space) => (styles[`#${space.id}`] = space.styles));\n        (this.status_map.desks || []).forEach((desk) => (styles[`#${desk.id}`] = desk.styles));\n        (this.status_map.zones || []).forEach((zone) => (styles[`#${zone.id}`] = zone.styles));\n        this.style_map = styles;\n    }\n\n    /**\n     * Process changes to statuses\n     */\n    public processListeners() {\n        let listeners: MapListener[] = [];\n        listeners = listeners.concat(this.listener_map.spaces || []);\n        listeners = listeners.concat(this.listener_map.desks || []);\n        listeners = listeners.concat(this.listener_map.zones || []);\n        this.listeners = listeners;\n    }\n\n    /**\n     * Process changes to statuses\n     */\n    public processFeatures() {\n        let features: MapFeature[] = [];\n        /* istanbul ignore else */\n        if (this.focus_feature) {\n            features = features.concat([this.focus_feature]);\n        }\n        features = features.concat(this.feature_map.spaces || []);\n        features = features.concat(this.feature_map.desks || []);\n        features = features.concat(this.feature_map.zones || []);\n        this.features = features;\n    }\n\n    /**\n     * Load and store location details for the space\n     * @param space_id Engine system ID of the space to locate\n     */\n    private loadSpaceLocation(space_id: string) {\n        const space = this._spaces.find(space_id);\n        console.log('Locate Space:', space_id, space);\n        /* istanbul ignore else */\n        if (space) {\n            this.message = `Loading location of ${space.name}`;\n            this.loading = true;\n            this.updateLevel(space.level.id);\n            this.focus = `area-${space.map_id}-status`;\n            this.focus_feature = {\n                id: `area-${space.map_id}-status`,\n                coordinates: null,\n                content: MapPinComponent,\n                data: {\n                    text: space.name,\n                },\n            };\n            this.zoom = 1;\n            this.loading = false;\n            this.message = '';\n            this.processFeatures();\n        }\n    }\n\n    /**\n     * Load and store the location for the user\n     * @param user_email Email address of the selected user\n     */\n    private async loadUserLocation(user_email: string) {\n        this.focus = null;\n        this.focus_feature = null;\n        this.loading = true;\n        this.message = `Loading user details...`;\n        const user = await this._users.show(user_email);\n        /* istanbul ignore else */\n        if (!user) return user;\n        this.message = `Loading location for ${user.name}...`;\n        const location = await user.locate();\n        /* istanbul ignore else */\n        if (!location) return user;\n        this.updateLevel(location.level.id);\n        if (location.fixed) {\n            this.focus = location.id;\n            this.focus_feature = {\n                id: location.id,\n                coordinates: null,\n                content: MapPinComponent,\n                data: {\n                    text: `${user.name} is here`,\n                },\n            };\n            this.zoom = 1;\n        } else {\n            this.focus = {\n                x: location.x,\n                y: location.y,\n            };\n            this.focus_feature = {\n                coordinates: {\n                    x: location.x,\n                    y: location.y,\n                },\n                content: MapRadiusComponent,\n                data: {\n                    text: `${user.name} is here`,\n                    diameter: location.confidence || 5,\n                },\n            };\n        }\n        this.zoom = 1;\n        this.loading = false;\n        this.message = '';\n        this.processFeatures();\n        return user;\n    }\n\n    public updateLevel(lvl_id: string) {\n        this.active_level = lvl_id;\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParamsHandling: 'merge',\n            queryParams: { level: lvl_id },\n        });\n    }\n}\n","<div class=\"map-view\">\n    <div class=\"header\">\n        <explore-search [level]=\"active_level\"></explore-search>\n    </div>\n    <div class=\"body\">\n        <div class=\"status-list\" hidden>\n            <i\n                space-status\n                [zone]=\"active_level\"\n                [date]=\"date\"\n                (status)=\"status_map.spaces = $event; processStatuses()\"\n                (listeners)=\"listener_map.spaces = $event; processListeners()\"\n                (features)=\"feature_map.spaces = $event; processFeatures()\"\n            ></i>\n            <i desk-status [zone]=\"active_level\" (status)=\"status_map.desks = $event; processStatuses()\"></i>\n        </div>\n        <a-map-controls overlay [(level)]=\"active_level\" (levelChange)=\"zoom = 1; center = { x: .5, y: .5 }\"></a-map-controls>\n        <button mat-icon-button class=\"rules\" name=\"booking-rules\" *ngIf=\"has_booking_rules\" (click)=\"openBookingRulesModal()\">i</button>\n        <a-map\n            [(zoom)]=\"zoom\"\n            [(center)]=\"center\"\n            [src]=\"map_url\"\n            [css]=\"style_map\"\n            [listeners]=\"listeners\"\n            [features]=\"features\"\n            [focus]=\"focus\"\n        >\n            <mat-spinner diameter=\"32\"></mat-spinner>\n        </a-map>\n        <a-zoom-controls overlay [(zoom)]=\"zoom\" [(position)]=\"center\"></a-zoom-controls>\n        <a-map-legend overlay></a-map-legend>\n        <div class=\"message\" *ngIf=\"message\">\n            <div class=\"text\">{{ message }}</div>\n            <div class=\"loader\">\n                <mat-progress-bar mode=\"indeterminate\" *ngIf=\"loading\"></mat-progress-bar>\n            </div>\n        </div>\n    </div>\n    <a-timeline *ngIf=\"settings?.show_timeline\" [(date)]=\"date\"></a-timeline>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog } from '@angular/material/dialog';\nimport { FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport {\n    generateBookingForm,\n    statusFromBookings,\n} from 'src/app/services/data/bookings/booking.utilities';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { UsersService } from 'src/app/services/data/users/users.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport {\n    RequirementDetailsModalComponent,\n    RequirementDetailsModalData,\n} from 'src/app/shell/bookings/overlays/requirement-details-modal/requirement-details-modal.component';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\n\nimport * as dayjs from 'dayjs';\n\nexport interface ExploreBookingModalData {\n    /** Unix epoch in ms of the booking start time */\n    date: number;\n    /** Space to make the booking in */\n    space: Space;\n    /** List of bookings for the active space at the current time */\n    bookings: Booking[];\n}\n\n@Component({\n    selector: 'a-explore-booking-modal',\n    templateUrl: './booking-modal.component.html',\n    styleUrls: ['./booking-modal.component.scss'],\n})\nexport class ExploreBookingModalComponent extends BaseDirective implements OnInit {\n    /**  */\n    public booking: Booking;\n    /** Form fields for new ad-hoc booking */\n    public form: FormGroup;\n    /** Form contents to display */\n    public state: 'info' | 'form' = 'info';\n    /** Description of the current loading state */\n    public loading: string;\n    /** String of time until next booking */\n    public available_until: string;\n    /** Whether booking was successful */\n    public success: boolean;\n\n    public get is_requesting(): boolean {\n        const booking = this.booking.toJSON();\n        return this.space.byRequest({\n            date: this.booking.date,\n            duration: this.booking.duration,\n            host: booking.organiser,\n        });\n    }\n\n    /** Display string for the selected time */\n    public get time(): string {\n        const date = dayjs(this._data.date);\n        return date.format('h:mm A');\n    }\n\n    /** Selected space */\n    public get space(): Space {\n        return this._data.space;\n    }\n\n    /** Whether space is being booked for now */\n    public get is_now(): boolean {\n        const now = dayjs();\n        const date = dayjs(this._data.date);\n        return Math.abs(now.diff(date, 'm')) < 5;\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ExploreBookingModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: ExploreBookingModalData,\n        private _router: Router,\n        private _dialog: MatDialog,\n        private _service: ApplicationService,\n        private _users: UsersService,\n        private _spaces: SpacesService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        const date = dayjs(this._data.date);\n        this.booking = new Booking({\n            title: 'Ad-Hoc Booking',\n            date: date.valueOf(),\n            duration: 30,\n            room_ids: [this._data.space.id],\n        });\n        const status = statusFromBookings(\n            this._data.bookings,\n            this.space.bookable,\n            this.space.byRequest({\n                date: this._data.date,\n                duration: 30,\n                host: this._users.current,\n            }),\n            this._data.date\n        );\n        this.available_until = status.available_until;\n    }\n\n    /**\n     * Move onto the next step of the booking flow\n     */\n    public next() {\n        if (!this.is_now) {\n            const booking = this.booking.toJSON();\n            localStorage.setItem(\n                'ACA_STAFF.booking_form_data',\n                JSON.stringify({ ...booking, id: 'ad-hoc' })\n            );\n            console.log('Booking:', booking);\n            this._router.navigate(['/book', 'space'], { queryParams: { back: '/explore' } });\n            this._dialog_ref.close();\n        } else {\n            this.form = generateBookingForm(this.booking, [\n                'space_list',\n                'organiser',\n                'title',\n                'duration',\n            ]);\n            this.state = 'form';\n        }\n    }\n\n    public book() {\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            this.updateRequirements().then(() => this.makeBooking());\n        }\n    }\n\n    private updateRequirements() {\n        return new Promise((resolve, reject) => {\n            const space_list = [...this.form.controls.space_list.value];\n            let resolved = false;\n            const ref = this._dialog.open<\n                RequirementDetailsModalComponent,\n                RequirementDetailsModalData\n            >(RequirementDetailsModalComponent, {\n                maxWidth: '95vw',\n                width: '32em',\n                data: {\n                    spaces: space_list,\n                    notes_field: this.form.controls.notes,\n                    codes_field: this.form.controls.equipment_codes,\n                    head_counts_field: this.form.controls.expected_attendees,\n                },\n            });\n            this.subscription(\n                'modal_events',\n                ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                    /* istanbul ignore else */\n                    if (event.reason === 'done') {\n                        this.unsub('closed');\n                        resolve();\n                        ref.close();\n                    }\n                })\n            );\n            this.subscription('closed', ref.afterClosed().subscribe(() => reject()));\n        });\n    }\n\n    private makeBooking() {\n        this.loading = 'Checking space availability...';\n        this.checkSpaceAvailability().then(\n            () => {\n                const new_booking = new Booking({\n                    ...this.booking,\n                    ...this.form.value,\n                    room_ids: [this._data.space.id],\n                });\n                new_booking.save().then(\n                    () => {\n                        this.loading = null;\n                        this.success = true;\n                        this.timeout('close', () => this._dialog_ref.close(), 5000);\n                    },\n                    (err) => {\n                        this.loading = null;\n                        this._service.notifyError(\n                            `Error ${this.booking.id ? 'updating' : 'creating'} booking: ${\n                                err.message || err\n                            }}`\n                        );\n                    }\n                );\n            },\n            (err) => {\n                this.loading = null;\n                this._service.notifyError(\n                    `Error checking space availability: ${err.message || err}`\n                );\n            }\n        );\n    }\n\n    /**\n     * Check whether the selected spaces are available for the selected time period\n     */\n    private checkSpaceAvailability(): Promise<void> {\n        const spaces: Space[] = this.booking.space_list;\n        return new Promise((resolve, reject) => {\n            this._spaces\n                .available({\n                    room_ids: spaces.map((space) => space.id).join(','),\n                    date: this.booking.date,\n                    duration: this.booking.duration,\n                })\n                .then(\n                    (space_list) => {\n                        for (const space of space_list) {\n                            if (!space.was_available) {\n                                return reject(\n                                    `${space.name} is not available at the select time period.`\n                                );\n                            }\n                        }\n                        resolve();\n                    },\n                    (err) => reject(err)\n                );\n        });\n    }\n}\n","<ng-container *ngIf=\"!success; else done_state\">\n    <header mat-dialog-title [class.request]=\"is_requesting\">\n        <ng-container *ngIf=\"state !== 'form'\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'add' }\"></app-icon>\n            <div class=\"text\">\n                Book <span>{{ space?.name }}</span> {{ is_now ? 'from now' : 'at ' + time }}\n            </div>\n        </ng-container>\n        <ng-container *ngIf=\"state === 'form'\">\n            <div class=\"text\">\n                Book <span>{{ space?.name }}</span>\n            </div>\n        </ng-container>\n    </header>\n    <mat-dialog-content>\n        <main *ngIf=\"!loading; else load_state\">\n            <ng-container [ngSwitch]=\"state\">\n                <ng-container *ngSwitchCase=\"'form'\">\n                    <a-booking-form [form]=\"form\"></a-booking-form>\n                </ng-container>\n                <ng-container *ngSwitchDefault>\n                    <div class=\"details\">\n                        <p>{{ available_until }}</p>\n                        <p *ngIf=\"is_requesting\" i18n=\"Explore booking request details\">\n                            This space requires approval to reserve\n                        </p>\n                    </div>\n                </ng-container>\n            </ng-container>\n        </main>\n    </mat-dialog-content>\n    <mat-dialog-actions *ngIf=\"!loading\">\n        <footer>\n            <button mat-button class=\"inverse\" mat-dialog-close>Cancel</button>\n            <button mat-button name=\"next\" (click)=\"state === 'form' ? book() : next()\">\n                {{ state === 'form' ? (is_requesting ? 'Request' : 'Book') : 'Yes' }}\n            </button>\n        </footer>\n    </mat-dialog-actions>\n    <ng-template #load_state>\n        <main>\n            <div class=\"info-block\">\n                <div class=\"icon\">\n                    <mat-spinner diameter=\"32\"></mat-spinner>\n                </div>\n                <div class=\"text\">{{ loading || 'Processing request...' }}</div>\n            </div>\n        </main>\n    </ng-template>\n</ng-container>\n<ng-template #done_state>\n    <header class=\"success\" [class.request]=\"is_requesting\">\n        <div class=\"text\">\n            <ng-container *ngIf=\"is_requesting\" i18n=\"Explore booking request sent\">\n                Request for <span>{{ space?.name }}</span> sent\n            </ng-container>\n            <ng-container *ngIf=\"!is_requesting\" i18n=\"Explore booking made\">\n                Booked <span>{{ space?.name }}</span>\n                {{ is_now ? 'from now' : 'at ' + time }}\n            </ng-container>\n        </div>\n        <app-icon\n            [icon]=\"{ class: 'material-icons', content: is_requesting ? 'send' : 'done' }\"\n        ></app-icon>\n    </header>\n</ng-template>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {\n    MAP_OVERLAY_DATA,\n    MAP_LOCATION\n} from '@acaprojects/ngx-interactive-map';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { statusFromBookings } from 'src/app/services/data/bookings/booking.utilities';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Point } from 'src/app/shared/utilities/types.utilities';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\nexport interface SpaceInfoData {\n    /** Current time to show details for */\n    date?: number;\n    /** Space to show details for */\n    space: Space;\n    /** Active bookings for the space */\n    bookings: Booking[];\n}\n\n@Component({\n    selector: 'a-space-info',\n    templateUrl: './space-info.component.html',\n    styleUrls: ['./space-info.component.scss']\n})\nexport class ExploreSpaceInfoComponent extends BaseDirective implements OnInit {\n    /** Status of the space */\n    public status: string;\n    /** String of time until next booking */\n    public available_until: string;\n\n    /** Named position of the element location on the map */\n    public get quadrant(): 'top left' | 'top right' | 'bottom left' | 'bottom right' {\n        /* istanbul ignore if */\n        if (!this._position) {\n            return 'top left';\n        }\n        if (this._position.y < .5) {\n            if (this._position.x < .5) {\n                return 'top left';\n            } else {\n                return 'top right';\n            }\n        } else {\n            if (this._position.x < .5) {\n                return 'bottom left';\n            } else {\n                return 'bottom right';\n            }\n        }\n    }\n\n    /** CSS class for the current status of the space */\n    public get status_class(): string {\n        return (this.status || '')\n            .toLowerCase()\n            .split(' ')\n            .join('-');\n    }\n\n    /** Space to display on the component */\n    public get space(): Space {\n        /* istanbul ignore if */\n        if (!this._data) {\n            return null;\n        }\n        return this._data.space;\n    }\n\n    /** List of bookings from the space for the currently displayed time */\n    public get bookings(): Booking[] {\n        /* istanbul ignore if */\n        if (!this._data) {\n            return [];\n        }\n        return this._data.bookings || [];\n    }\n\n    constructor(\n        @Inject(MAP_OVERLAY_DATA) private _data: SpaceInfoData,\n        @Inject(MAP_LOCATION) private _position: Point,\n        private _users: UsersService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.processBookings();\n        this.interval('update_bookings', () => this.processBookings(), 60 * 1000);\n    }\n\n    /**\n     * Calculate availability of space based off given bookings\n     */\n    public processBookings(): void {\n        /* istanbul ignore if */\n        if (!this.space) {\n            return;\n        }\n        const rules = this.space.rulesFor({\n            date: this._data.date,\n            duration: 30,\n            host: this._users.current\n        });\n        const status = statusFromBookings(\n            this.bookings,\n            this.space.bookable && !rules.hide,\n            !rules.auto_approve,\n            this._data.date\n        );\n        this.status = status.status;\n        this.available_until = status.available_until;\n    }\n}\n","<div *ngIf=\"space\" [id]=\"space.id\" [class]=\"'space-info ' + quadrant\">\n    <div class=\"arrow\"></div>\n    <div class=\"details\">\n        <div class=\"name\">{{ space.name }}</div>\n        <div class=\"availability\">\n            <div name=\"status\" [class]=\"status_class\">{{ status }}</div>\n            <div name=\"available-until\" *ngIf=\"status_class !== 'not-bookable'\">{{ available_until }}</div>\n        </div>\n    </div>\n</div>","import {\n    Component,\n    OnInit,\n    Input,\n    OnChanges,\n    SimpleChanges,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    switchMap,\n    map,\n    first,\n} from 'rxjs/operators';\nimport { Observable, Subject, of } from 'rxjs';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { UsersService } from 'src/app/services/data/users/users.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nimport * as dayjs from 'dayjs';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\n// TODO: Add handling for role users. e.g. Fire Wardens, First Aiders\n// TODO: Add handling for searching for features\n// TODO: Add handling for searching for desks\n\n@Component({\n    selector: 'explore-search',\n    templateUrl: './search.component.html',\n    styleUrls: ['./search.component.scss'],\n})\nexport class ExploreSearchComponent extends BaseDirective implements OnInit, OnChanges {\n    /** Type of data to show when searching */\n    @Input() public type: 'space' | 'user' | 'feature' | 'desk' | 'any';\n    /** Whether external changes are being processed */\n    @Input() public autofocus: boolean;\n    /** Display string for the placeholder of the search input */\n    @Input() public placeholder: string;\n    /** ID of the active level */\n    @Input() public level: string = '';\n    /** Whether search data is loading */\n    public loading: boolean;\n    /** Search filter value */\n    public search_str: string;\n    /** List of users from an API search */\n    public search_results$: Observable<(User | Space)[]>;\n    /** Post search and filtering list of items */\n    public results: (User | Space)[] = [];\n    /** Subject holding the value of the search */\n    public search$ = new Subject<string>();\n    /** Whether an option was selected recently */\n    private _showing_option: boolean;\n\n    /** Input field reference */\n    @ViewChild('input', { static: false }) private input_field: ElementRef<HTMLInputElement>;\n\n    constructor(\n        private _users: UsersService,\n        private _spaces: SpacesService,\n        private _route: ActivatedRoute,\n        private _org: OrganisationService,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._spaces.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.subscription(\n                'route.params',\n                this._route.paramMap.subscribe((params) => {\n                    if (params.has('search_type')) {\n                        this.type = params.get('search_type') as any;\n                    }\n                })\n            );\n            // Listen for input changes\n            this.search_results$ = this.search$.pipe(\n                debounceTime(300),\n                distinctUntilChanged(),\n                switchMap((query) => {\n                    this.loading = true;\n                    return query.length >= 3 && (this.type === 'user' || this.type === 'any')\n                        ? (this._users.query({\n                              q: query.slice(0, 3),\n                              cache: 60 * 1000,\n                          }) as Promise<User[]>)\n                        : Promise.resolve([]);\n                }),\n                catchError((err) => of([])),\n                map((users: User[]) => {\n                    const level = this._org.levelWithID([this.level]);\n                    const spaces = this._spaces.filter((space) =>\n                        level\n                            ? space.zones.includes(\n                                  this._org.buildings.find((bld) => bld.id === level.building_id).id\n                              )\n                            : true\n                    );\n                    const search = (this.search_str || '').toLowerCase();\n                    const filter = (item) =>\n                        (item.name || '').toLowerCase().indexOf(search) >= 0 ||\n                        (item.email || '').toLowerCase().indexOf(search) >= 0;\n                    let result_list = [];\n                    if (this.type === 'space') {\n                        result_list = spaces;\n                    } else if (this.type === 'user') {\n                        result_list = users;\n                    } else {\n                        result_list = (spaces as any).concat(users);\n                    }\n                    this.loading = false;\n                    return result_list.filter(filter);\n                })\n            );\n            // Process API results\n            this.subscription(\n                'search_results',\n                this.search_results$.subscribe((list) => {\n                    this.results = list;\n                    list.sort((a, b) => (a.name || '').localeCompare(b.name));\n                })\n            );\n            this.search$.next(`${dayjs().valueOf()}`);\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.autofocus && this.autofocus) {\n            this.focusField();\n        }\n        /* istanbul ignore else */\n        if (changes.level) {\n            if (!this._showing_option) {\n                this.search_str = '';\n            }\n            this.search$.next(this.level);\n        }\n    }\n\n    public focusField() {\n        /* istanbul ignore else */\n        if (this.input_field && this.input_field.nativeElement) {\n            this.input_field.nativeElement.focus();\n        }\n    }\n\n    public checkEmpty(filter: string) {\n        this.timeout('empty', () => {\n            if (!filter) {\n                this._router.navigate([], {\n                    relativeTo: this._route,\n                    queryParams: { space: undefined, user: undefined },\n                    queryParamsHandling: 'merge',\n                });\n            }\n        });\n    }\n\n    /**\n     * Update the selected item to display the location for on the map\n     * @param item Space or User to display location for\n     */\n    public selectOption(item: User | Space) {\n        if (item instanceof Space) {\n            this._router.navigate([], {\n                relativeTo: this._route,\n                queryParams: { space: item.id },\n                queryParamsHandling: 'merge',\n            });\n        } else {\n            this._router.navigate([], {\n                relativeTo: this._route,\n                queryParams: { user: item.email },\n                queryParamsHandling: 'merge',\n            });\n        }\n        this._showing_option = true;\n        this.timeout('selected_option', () => this._showing_option = false, 1000);\n    }\n}\n","<div class=\"searchbar\" *ngIf=\"type\" tabindex=\"0\" (focus)=\"focusField()\" (click)=\"focusField()\">\n    <div class=\"prefix\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'search' }\"></app-icon>\n    </div>\n    <div class=\"input\">\n        <input\n            #input\n            type=\"text\"\n            [(ngModel)]=\"search_str\"\n            (ngModelChange)=\"search$.next($event); checkEmpty($event)\"\n            [matAutocomplete]=\"auto\"\n            [placeholder]=\"placeholder || 'Search...'\"\n        />\n    </div>\n    <div class=\"suffix\">\n        <button\n            mat-icon-button\n            *ngIf=\"!loading && search_str\"\n            (click)=\"search_str = ''; search$.next(''); checkEmpty('')\"\n        >\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </button>\n        <mat-spinner *ngIf=\"loading\" diameter=\"32\"></mat-spinner>\n    </div>\n</div>\n<mat-autocomplete #auto=\"matAutocomplete\">\n    <mat-option *ngFor=\"let option of results\" [value]=\"option.name\" (click)=\"selectOption(option)\">\n        <div class=\"name\">{{ option.name }}</div>\n        <div class=\"email\">{{ option.level ? option.level.name : option.email }}&nbsp;</div>\n    </mat-option>\n</mat-autocomplete>\n","import { Component, Output, EventEmitter, OnInit, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { MapStatus } from './status.interfaces';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\n@Component({\n    selector: '[desk-status]',\n    template: `\n        <ng-content></ng-content>\n        <div class=\"bindings\" *ngIf=\"system_id\">\n            <!-- BINDINGS -->\n            <i binding [(model)]=\"in_use\" [sys]=\"system_id\" mod=\"DeskManagement\" [bind]=\"zone\" (modelChange)=\"calculateStatus()\"></i>\n            <i binding [(model)]=\"id_list\" [sys]=\"system_id\" mod=\"DeskManagement\" [bind]=\"zone + ':desk_ids'\" (modelChange)=\"calculateStatus()\"></i>\n            <i binding [(model)]=\"reserved\" [sys]=\"system_id\" mod=\"DeskManagement\" [bind]=\"zone + ':reserved'\" (modelChange)=\"calculateStatus()\"></i>\n            <i binding [(model)]=\"occupied\" [sys]=\"system_id\" mod=\"DeskManagement\" [bind]=\"zone + ':occupied_count'\"></i>\n            <i binding [(model)]=\"free\" [sys]=\"system_id\" mod=\"DeskManagement\" [bind]=\"zone + ':free_count'\"></i>\n            <!-- REMOTE EXECUTIONS -->\n            <i binding [(model)]=\"checkin\" [sys]=\"system_id\" mod=\"DeskManagement\" exec=\"manual_checkin\" [params]=\"[checkin]\"></i>\n            <i binding [(model)]=\"cancel\" [sys]=\"system_id\" mod=\"DeskManagement\" exec=\"cancel_reservation\" [params]=\"[]\"></i>\n        </div>\n    `\n})\nexport class ExploreDeskStatusComponent extends BaseDirective implements OnChanges {\n    /** ID of the active level */\n    @Input() public zone: string;\n    /** ID of the desk to checkin */\n    @Input() public checkin: string;\n    /** Emitter for changes to the desk status */\n    @Output() public status = new EventEmitter<MapStatus[]>();\n    /** ID of the desk management system */\n    public system_id: string;\n    /** List of desks for the active level */\n    public id_list: string[];\n    /** List of desk IDs in use on the active level */\n    public in_use: string[];\n    /** List of desk IDs that are reserved on the active level */\n    public reserved: string[];\n    /** Number of occupied desks on the active level */\n    public occupied: number = 0;\n    /** Number of free desks on the active level */\n    public free: number = 0;\n    /** Mapping of colours to statuses */\n    public colour_map: HashMap<string> = {};\n    /** Toggle for cancelling desk reservations */\n    public cancel: boolean;\n\n    constructor(private _service: ApplicationService, private _org: OrganisationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.colour_map = this._service.setting('app.explore.colors') || {};\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.zone) {\n            this.loadDesks();\n        }\n    }\n\n    public calculateStatus() {\n        const desk_list = this.id_list || [];\n        const status_list: MapStatus[] = [];\n        for (const desk_id of desk_list) {\n            const in_use = (this.in_use || []).find(id => id === desk_id);\n            const reserved = (this.reserved || []).find(id => id === desk_id);\n            const status = in_use ? 'unavailable' : reserved ? 'reserved' : 'available';\n            status_list.push({\n                id: desk_id,\n                styles: {\n                    fill: this.colour_map[`desk-${status}`],\n                    stroke: this.colour_map[`desk-${status}-stroke`],\n                },\n                status_id: status\n            });\n        }\n        this.status.emit(status_list);\n    }\n\n    private loadDesks() {\n        const level = this._org.levelWithID(this.zone);\n        if (!level) { return ; }\n        const building = this._org.buildings.find(bld => bld.id === level.building_id);\n        if (!building) { return; }\n        const desk_management = building.systems.desk_management;\n        if (!desk_management) { return; }\n        this.system_id = desk_management;\n    }\n}\n","import {\n    Component,\n    Input,\n    Output,\n    EventEmitter,\n    OnInit,\n    OnDestroy,\n    SimpleChanges,\n    OnChanges,\n} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\nimport { MapFeature } from '@acaprojects/ngx-interactive-map/lib/helpers/map.interfaces';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { ExploreSpaceInfoComponent } from '../overlays/space-info/space-info.component';\nimport { MapStatus, MapListener, SpaceStatus } from './status.interfaces';\nimport {\n    ExploreBookingModalComponent,\n    ExploreBookingModalData,\n} from '../overlays/booking-modal/booking-modal.component';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { UsersService } from 'src/app/services/data/users/users.service';\nimport { statusFromBookings } from 'src/app/services/data/bookings/booking.utilities';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: '[space-status]',\n    template: `\n        <div class=\"bindings\" *ngIf=\"space_list && is_today\">\n            <i\n                *ngFor=\"let space of space_list\"\n                binding\n                [sys]=\"space.id\"\n                mod=\"Bookings\"\n                bind=\"today\"\n                (modelChange)=\"processSpaceBookings(space, $event)\"\n            ></i>\n        </div>\n        <ng-content></ng-content>\n    `,\n})\nexport class ExploreSpaceStatusComponent extends BaseDirective\n    implements OnInit, OnChanges, OnDestroy {\n    /** ID of the zone to grab the spaces */\n    @Input() public zone: string;\n    /** Updates the status based of the given time. Unix epoch in milliseconds */\n    @Input() public date: number;\n    /** Emitter for changes to the space status */\n    @Output() public status = new EventEmitter<MapStatus[]>();\n    /** Emitter for changes to the space status */\n    @Output() public listeners = new EventEmitter<MapListener[]>();\n    /** Emitter for changes to the space status */\n    @Output() public features = new EventEmitter<MapFeature[]>();\n    /** List of spaces to grab the statuses for */\n    public space_list: Space[] = [];\n    /** Mapping of spaces to active bookings */\n    public active_bookings: HashMap<Booking[]> = {};\n    /** Mapping of colours to statuses */\n    public colour_map: HashMap<string> = {};\n\n    /** Whether selected date time is the current day */\n    public get is_today() {\n        return dayjs().isSame(dayjs(this.date), 'd');\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _users: UsersService,\n        private _spaces: SpacesService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._spaces.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.colour_map = this._service.setting('app.explore.colors') || {};\n            this.subscription(\n                'spaces',\n                this._spaces.listen('list').subscribe(() => this.loadSpaces())\n            );\n            this.interval(\n                'update_status',\n                () => {\n                    this.updateSpaceBookings();\n                    this.calculateStatus();\n                },\n                60 * 1000\n            );\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.zone || changes.date) {\n            this.timeout('load', () => this.loadSpaces());\n        }\n        if (changes.zone) {\n            this.clearSpaces();\n        }\n    }\n\n    public ngOnDestroy() {\n        this.clearSpaces();\n    }\n\n    /**\n     * Determine the availability statuses for all the spaces in the set zone\n     */\n    public calculateStatus() {\n        this.timeout('process_statuses', () => {\n            const statuses: MapStatus[] = [];\n            for (const space of this.space_list) {\n                const status = this.getStatus(space, this.date);\n                const id =\n                    `${space.map_id}`.indexOf('area') < 0\n                        ? `area-${space.map_id}-status`\n                        : space.map_id;\n                statuses.push({\n                    id,\n                    styles: {\n                        fill: this.colour_map[`space-${status}`] || '#000',\n                        opacity: 0.6,\n                    },\n                    status_id: status,\n                });\n            }\n            this.status.emit(statuses);\n        });\n    }\n\n    /**\n     * Get the status of the space at the set time\n     * @param space Space to get the status for\n     */\n    private getStatus(space: Space, datetime?: number): SpaceStatus {\n        if (!space.bookable) {\n            return 'not-bookable';\n        }\n        const date = dayjs(datetime || this.date).valueOf();\n        const options = {\n            date,\n            duration: 30,\n            host: this._users.current,\n        };\n        const rules = space.rulesFor(options);\n        const status = statusFromBookings(\n            this.active_bookings[space.id],\n            space.bookable && !rules.hide,\n            !rules.auto_approve,\n            date\n        );\n        switch (status.status) {\n            case 'Not Bookable':\n                return 'not-bookable';\n            case 'Meeting in Progress':\n                return 'unavailable';\n            case 'Available by Request':\n                return 'requestable';\n            default:\n                return 'available';\n        }\n    }\n\n    /**\n     * Process raw booking data for the given space\n     * @param space Space associated with the bookings\n     * @param data List of booking data\n     */\n    public processSpaceBookings(space: Space, data: HashMap[]) {\n        this.timeout(\n            `space-${space.id}`,\n            () => {\n                const bookings = (data || []).map(\n                    (bkn_data) => new Booking({ ...bkn_data, room_ids: [space.id] })\n                );\n                this.active_bookings[space.id] = bookings;\n                this.calculateStatus();\n            },\n            10\n        );\n    }\n\n    /**\n     * Update the booking data for space on future dates\n     */\n    public updateSpaceBookings() {\n        /* istanbul ignore else */\n        if (this.is_today) {\n            return;\n        }\n        this.timeout(\n            'update_spaces',\n            () => {\n                const date = dayjs(this.date).startOf('d');\n                this._spaces\n                    .query({\n                        from: date.unix(),\n                        to: date.endOf('d').unix(),\n                        show_declined: false,\n                        zone_ids: this.zone,\n                        cache: 10 * 1000,\n                    })\n                    .then((spaces) => {\n                        spaces.forEach((space) =>\n                            this.processSpaceBookings(space, [...space.bookings])\n                        );\n                    });\n            },\n            50\n        );\n    }\n\n    /**\n     * Load listeners for space data\n     */\n    private loadSpaces() {\n        this.space_list = this._spaces.filter((space) => space.zones.indexOf(this.zone) >= 0);\n        const listeners: MapListener[] = [];\n        for (const space of this.space_list) {\n            const id =\n                `${space.map_id}`.indexOf('area') < 0\n                    ? `area-${space.map_id}-status`\n                    : space.map_id;\n            listeners.push({\n                id,\n                event: 'mouseenter',\n                callback: () => this.showSpaceInfo(space),\n            });\n            listeners.push({\n                id,\n                event: 'mouseleave',\n                callback: () => this.features.emit([]),\n            });\n            if (space.bookable) {\n                listeners.push({\n                    id,\n                    event: 'click',\n                    callback: () => this.openBookingModal(space),\n                });\n                listeners.push({\n                    id,\n                    event: 'touchend',\n                    callback: () => this.openBookingModal(space),\n                });\n            }\n        }\n        this.listeners.emit(listeners);\n        this.updateSpaceBookings();\n        this.calculateStatus();\n    }\n\n    /**\n     * Clear current space and booking data\n     */\n    private clearSpaces() {\n        delete this.active_bookings;\n        this.active_bookings = {};\n    }\n\n    /**\n     * Update features to include space info for a space\n     * @param space Space to show details for\n     */\n    private showSpaceInfo(space: Space) {\n        const id =\n            `${space.map_id}`.indexOf('area') < 0 ? `area-${space.map_id}-status` : space.map_id;\n        this.features.emit([\n            {\n                id,\n                coordinates: null,\n                content: ExploreSpaceInfoComponent,\n                data: {\n                    space,\n                    bookings: this.active_bookings[space.id],\n                    date: this.date,\n                },\n            },\n        ]);\n    }\n\n    /**\n     * Open explore booking modal for the given space\n     * @param space Space to make booking for\n     */\n    private openBookingModal(space: Space) {\n        const status = this.getStatus(space, this.date);\n        if (status !== 'unavailable' && status !== 'not-bookable') {\n            this._dialog.open<ExploreBookingModalComponent, ExploreBookingModalData>(\n                ExploreBookingModalComponent,\n                {\n                    width: 'auto',\n                    height: 'auto',\n                    maxWidth: '95vw',\n                    data: {\n                        date: this.date,\n                        space,\n                        bookings: this.active_bookings[space.id],\n                    },\n                }\n            );\n        } else {\n            this._service.notifyInfo(\n                `${space.name} is unavailable at the selected time. Please select another space or time and try again.`\n            );\n        }\n    }\n}\n","import {\n    Component,\n    OnInit,\n    Input,\n    Output,\n    EventEmitter,\n    ElementRef,\n    Renderer2,\n    ViewChild,\n} from '@angular/core';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Identity, Point } from 'src/app/shared/utilities/types.utilities';\n\nimport * as dayjs from 'dayjs';\nimport { eventToPoint } from 'src/app/shared/utilities/general.utilities';\n\nconst BLOCK_SIZE = 30;\nconst MINUTES_IN_DAY = 24 * 60;\n\n@Component({\n    selector: 'a-timeline',\n    templateUrl: './timeline.component.html',\n    styleUrls: ['./timeline.component.scss'],\n})\nexport class ExploreTimelineComponent extends BaseDirective implements OnInit {\n    /** Currently selected datetime */\n    @Input() public date: number;\n    /** Emitter for changes to the selected datetime */\n    @Output() public dateChange = new EventEmitter<number>();\n    /** List of time blocks to select */\n    public blocks: Identity[] = [];\n    /** Starting point for time move events */\n    private _start_position: Point;\n    /** Bounding box of the timeline container */\n    private _box: ClientRect;\n\n    /** Whether selected date time is the current day */\n    public get is_today() {\n        return dayjs().isSame(dayjs(this.date), 'd');\n    }\n\n    /** Offset of the current time from the start of the day */\n    public get offset() {\n        const date = dayjs();\n        const diff = date.diff(date.startOf('d'), 'm');\n        return (diff / MINUTES_IN_DAY) * 100;\n    }\n\n    /** Details of the currently selected datetime */\n    public get active_time(): Identity {\n        const date = dayjs(this.date);\n        const diff = date.diff(date.startOf('d'), 'm');\n        return {\n            id: date.isSame(dayjs(), 'd') ? 'Today' : date.format('DD MMM YYYY'),\n            name: date.format('h:mm A'),\n            left: (diff / MINUTES_IN_DAY) * 100,\n        };\n    }\n\n    @ViewChild('container', { static: true }) private _container: ElementRef<HTMLDivElement>;\n\n    constructor(private _renderer: Renderer2) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.blocks = this.generateBlocks();\n        this.checkDate();\n        this.interval('check_date', () => this.checkDate(), 15 * 1000);\n    }\n\n    /**\n     * Generate the display blocks for the timeline\n     */\n    public generateBlocks(): Identity[] {\n        const start = dayjs().startOf('d');\n        const end = start.endOf('d');\n        const blocks: Identity[] = [];\n        let current_time = start;\n        while (current_time.isBefore(end)) {\n            const is_hour = current_time.minute() === 0;\n            blocks.push({\n                id: current_time.format('HH:mm'),\n                name: is_hour ? current_time.format('h') : '',\n                is_hour,\n                left: (current_time.diff(start, 'm') / MINUTES_IN_DAY) * 100,\n            });\n            current_time = current_time.add(BLOCK_SIZE, 'm');\n        }\n        return blocks;\n    }\n\n    /**\n     * Change the date of the active date time\n     * @param amount Number of days to change by\n     */\n    public changeDate(amount: number = 1) {\n        let date = dayjs(this.date);\n        date = date.add(amount, 'd');\n        const now = dayjs();\n        this.date = date.isBefore(now, 'm') ? now.valueOf() : date.valueOf();\n        this.dateChange.emit(this.date);\n    }\n\n    public startMove(event: MouseEvent | TouchEvent) {\n        const position = eventToPoint(event);\n        this._start_position = position;\n        this._box = this._container.nativeElement.getBoundingClientRect();\n        const type = event instanceof MouseEvent ? 'mouse' : 'touch';\n        this.subscription(\n            'move',\n            this._renderer.listen('window', `${type}move`, (e) => this.onMove(e))\n        );\n        this.subscription(\n            'end',\n            this._renderer.listen('window', `${type === 'mouse' ? 'mouseup' : 'touchend'}`, (e) => {\n                this.unsub('move');\n                this.unsub('end');\n            })\n        );\n    }\n\n    public onMove(event: MouseEvent | TouchEvent) {\n        const position = eventToPoint(event);\n        const y_change = (this._start_position.x - position.x) / this._box.width;\n        const time_change = -Math.round(y_change * MINUTES_IN_DAY);\n        /* istanbul ignore else */\n        if (time_change !== 0) {\n            let old_date = dayjs(this.date);\n            let date = old_date;\n            date = date.add(time_change, 'm');\n            date = date.minute(Math.floor(Math.round(date.minute() / 5)) * 5);\n            this.date = date.valueOf();\n            this.dateChange.emit(this.date);\n            /* istanbul ignore else */\n            if (Math.abs(old_date.diff(date, 'm')) > 0) {\n                this._start_position = position;\n            }\n            this.checkDate();\n        }\n    }\n\n    /** Check that active datetime is not in the past */\n    private checkDate() {\n        const date = dayjs(this.date);\n        let now = dayjs();\n        now = now.minute(Math.floor(Math.ceil(now.minute() / 5)) * 5);\n        /* istanbul ignore else */\n        if (date.isBefore(now, 'm')) {\n            this.date = now.valueOf();\n            this.dateChange.emit(this.date);\n        }\n    }\n}\n","<div class=\"not-mobile\">\n    <div class=\"timeline\" explore #container>\n        <div\n            class=\"block\"\n            *ngFor=\"let item of blocks\"\n            [class.hour]=\"item.is_hour\"\n            [style.left]=\"item.left + '%'\"\n        >\n            <div class=\"text\">{{ item.name }}</div>\n            <div class=\"bar\"></div>\n        </div>\n    </div>\n    <div class=\"offset\" *ngIf=\"is_today\" [style.width]=\"offset + '%'\"></div>\n    <div class=\"active-time\" [style.left]=\"active_time.left + '%'\">\n        <div class=\"bar\"></div>\n        <div class=\"date\">\n            <button mat-icon-button name=\"previous-day\" [disabled]=\"is_today\" (click)=\"changeDate(-1)\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_left' }\"></app-icon>\n            </button>\n            <div class=\"text\" (mousedown)=\"startMove($event)\" (touchstart)=\"startMove($event)\">{{ active_time.id }}</div>\n            <button mat-icon-button name=\"next-day\" (click)=\"changeDate()\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_right' }\"></app-icon>\n            </button>\n        </div>\n        <div class=\"time\" (mousedown)=\"startMove($event)\" (touchstart)=\"startMove($event)\">{{ active_time.name }}</div>\n        <div class=\"triangle\"></div>\n    </div>\n</div>\n<div class=\"pickers mobile-only\">\n    <a-date-field [(ngModel)]=\"date\" offset=\"top\" (ngModelChange)=\"dateChange.emit($event)\"></a-date-field>\n    <a-time-field [(ngModel)]=\"date\" (ngModelChange)=\"dateChange.emit($event)\"></a-time-field>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { Point } from 'src/app/shared/utilities/types.utilities';\n\n@Component({\n    selector: 'a-zoom-controls',\n    templateUrl: './zoom-controls.component.html',\n    styleUrls: ['./zoom-controls.component.scss']\n})\nexport class ZoomControlsComponent implements OnInit {\n    /** Current zoom level of the map */\n    @Input() public zoom: number;\n    /** Current center position of the map */\n    @Input() public position: Point;\n    /** Emitter for changes to the zoom value */\n    @Output() public zoomChange = new EventEmitter<number>();\n    /** Emitter for changes to the position */\n    @Output() public positionChange = new EventEmitter<Point>();\n\n    public min_zoom: number = 1;\n\n    public max_zoom: number = 10;\n\n    constructor() {}\n\n    public ngOnInit(): void {\n\n    }\n\n    public zoomIn() {\n        this.zoom = (this.zoom || this.min_zoom) * 1.2;\n        if (this.zoom > this.max_zoom) {\n            this.zoom = this.max_zoom;\n        }\n        this.zoomChange.emit(this.zoom);\n    }\n\n    public zoomOut() {\n        this.zoom = (this.zoom || this.min_zoom) * (1 / 1.2);\n        if (this.zoom < this.min_zoom) {\n            this.zoom = this.min_zoom;\n        }\n        this.zoomChange.emit(this.zoom);\n    }\n\n    public reset() {\n        this.zoom = this.min_zoom;\n        this.position = { x: 0.5, y: 0.5 };\n        this.zoomChange.emit(this.zoom);\n        this.positionChange.emit(this.position);\n    }\n}\n","<div class=\"zoom-control\">\n    <button mat-icon-button name=\"zoom-in\" (click)=\"zoomIn()\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'add' }\"></app-icon>\n    </button>\n    <button mat-icon-button name=\"zoom-out\" (click)=\"zoomOut()\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'remove' }\"></app-icon>\n    </button>\n    <button mat-icon-button name=\"reset\" (click)=\"reset()\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'replay' }\"></app-icon>\n    </button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationLink, HomePageSettings } from 'src/app/shared/utilities/settings.interfaces';\nimport { AlertMode } from '../../shared/components/alert-banner/alert-banner.component';\nimport { Urls } from '../../shared/utilities/urls';\n\n@Component({\n    selector: 'app-home',\n    templateUrl: './home.component.html',\n    styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent extends BaseDirective implements OnInit {\n    /** Settings for the home page */\n    public settings: HomePageSettings;\n    /** Whether to show the overlay menu */\n    public show_menu: boolean;\n\n    /**\n     * Whether to show alert banner.\n     */\n    public showBanner = true;\n\n    public AlertMode = AlertMode;\n\n    /** Tiles to display on the home page */\n    public get tiles(): ApplicationLink[] {\n        return (this.settings || { tiles: [] }).tiles || [];\n    }\n\n    /** Min width of a tile */\n    public get tile_width(): number {\n        const tiles = this.tiles;\n        if (tiles.length > 2) {\n            return 49;\n        }\n        return 99;\n    }\n\n    /** Height of each tile */\n    public get tile_height(): number {\n        const tiles = this.tiles;\n        if (tiles.length > 2) {\n            return 100 / ((tiles.length + tiles.length % 2) / 2);\n        }\n        return 50;\n    }\n\n    constructor(private _service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.title = 'Home';\n        this._service.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.settings = this._service.setting('app.home') || {};\n            localStorage.removeItem('ACA_STAFF.booking_form_data');\n        });\n    }\n\n    public hideBanner() {\n        this.showBanner = false;\n    }\n\n    public learnMore() {\n        window.open(Urls.LearnMore);\n    }\n}\n","<div class=\"home-page\">\n    <header class=\"header\">\n        <a-topbar-header [(menu)]=\"show_menu\" page=\"home\"></a-topbar-header>\n    </header>\n    <div class=\"header\" *ngIf=\"showBanner\">\n        <app-alert-banner\n            [mode]=\"AlertMode.Warning\"\n            (close)=\"hideBanner()\"\n            buttonText=\"Learn More\"\n            message=\"Due to COVID-19, office meeting room capacity may be limited.\"\n            (action)=\"learnMore()\"></app-alert-banner>\n    </div>\n    <main class=\"body\">\n        <div class=\"bg-img\">\n            <img src=\"assets/img/mckinsey_lines.svg\">\n        </div>\n        <div\n            class=\"tile\"\n            *ngFor=\"let item of tiles; let i = index\"\n            [attr.name]=\"item.name\"\n            [style.min-width]=\"tile_width + '%'\"\n            [style.height]=\"(tile_height) * (i === 0 ? 4 / 3 : 2 / 3) + '%'\"\n        >\n            <a *ngIf=\"item.link\" [href]=\"item.link\">\n                <div class=\"inner\">\n                    <app-icon [icon]=\"item.icon\"></app-icon>\n                    <div class=\"text\">{{ item.name }}</div>\n                </div>\n            </a>\n            <a *ngIf=\"!item.link\" [routerLink]=\"[item.route]\" routerLinkActive=\"active\">\n                <div class=\"inner\">\n                    <app-icon [icon]=\"item.icon\"></app-icon>\n                    <div class=\"text\">{{ item.name }}</div>\n                </div>\n            </a>\n        </div>\n    </main>\n    <footer class=\"footer\"></footer>\n</div>\n<!-- <a-overlay-menu [(show)]=\"show_menu\"></a-overlay-menu> -->\n","import { Component, ViewChild, Output, EventEmitter } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport { first } from 'rxjs/operators';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { BookingLike } from './list-item/list-item.component';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { UsersService } from 'src/app/services/data/users/users.service';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nimport * as dayjs from 'dayjs';\nimport { timePeriodsIntersect } from 'src/app/services/data/bookings/booking.utilities';\n\nexport interface EventPair {\n    id: string;\n    date: number;\n}\n\n@Component({\n    selector: 'schedule-event-list',\n    templateUrl: './event-list.component.html',\n    styleUrls: ['./event-list.component.scss'],\n})\nexport class ScheduleEventListComponent extends BaseDirective {\n    /** Emitter  */\n    @Output('eventList') public event_list = new EventEmitter<EventPair[]>();\n    /** List of items to display on the event list */\n    public events: BookingLike[] = [];\n    /** Update promise */\n    public event_promise: Promise<void>;\n    /** Whether bookings are being updated */\n    public loading: boolean;\n    /** Number of days to render in the list from the current date */\n    public shown_offset: number = 7;\n    /** Offset of the date to show events for */\n    public date_offset: number = 0;\n    /** Whether to show the calendar tooltip */\n    public show_calendar: boolean;\n    /** Date to scroll to on next update */\n    public scroll_to: string;\n    /** Current UTC epoch */\n    public now: number = dayjs().valueOf();\n    /** Current UTC epoch */\n    public date: number;\n    /** Whether list is displaying the top of the first item */\n    public at_top: boolean = true;\n    /** List of users available to view schedules for */\n    public user_list: User[] = [];\n    /** Active user to display schedule for */\n    public active_user: User;\n    /** Whether the date picker is open */\n    public date_picker_open: boolean;\n\n    /** Viewport for the scrollable area of the list */\n    @ViewChild(CdkVirtualScrollViewport, { static: true })\n    private scroll_viewport: CdkVirtualScrollViewport;\n\n    @ViewChild(MatMenuTrigger, { static: true }) trigger: MatMenuTrigger;\n\n    constructor(\n        private _users: UsersService,\n        private _bookings: BookingsService,\n        private _spaces: SpacesService,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._spaces.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.subscription(\n                'route.query',\n                this._route.queryParamMap.subscribe((params) => {\n                    /* istanbul ignore else */\n                    if (params.has('email')) {\n                        this.user_list = [this._users.current].concat(this._users.get('delegates') || []);\n                        this.active_user = this.user_list.find(user => user.email === params.get('email')) || this.user_list[0];\n                    }\n                })\n            );\n            this.updateEvents();\n            this.interval('update_events', () => this.updateEvents(), 10 * 1000);\n            this.subscription(\n                'scroll',\n                this.scroll_viewport.elementScrolled().subscribe(() => this.onScroll())\n            );\n            this.subscription(\n                'delegate_list',\n                this._users.listen('delegates').subscribe((list) => {\n                    /* istanbul ignore else */\n                    if (list && list[0]) {\n                        this.user_list = [this._users.current].concat(list);\n                        /* istanbul ignore else */\n                        if (!this.active_user) {\n                            this.active_user = this.user_list[0];\n                        }\n                    }\n                })\n            );\n        });\n    }\n\n    public removeEvent(event: BookingLike) {\n        this.events = this.events.filter(item => item.id !== event.id);\n    }\n\n    /**\n     * Update the list of events for the currently visible period\n     */\n    public updateEvents() {\n        /* istanbul ignore else */\n        if (!this.event_promise) {\n            this.event_promise = new Promise((resolve) => {\n                const start = dayjs().add(this.date_offset, 'd').startOf('d');\n                const end = start.add(7, 'd').endOf('d');\n                const email = (this.active_user ? this.active_user.email : '') ||\n                this._users.current.email\n                this.loading = true;\n                this._bookings\n                    .query({\n                        email,\n                        from: start.unix(),\n                        to: end.unix(),\n                    })\n                    .then(\n                        (list: Booking[]) => {\n                            if (this.active_user && email !== this.active_user.email) {\n                                return;\n                            }\n                            const old_events = this.events.filter((i) => {\n                                const date = dayjs(i.date);\n                                return (\n                                    i.type !== 'date' &&\n                                    i.type !== 'empty' &&\n                                    (date.isBefore(start, 's') || date.isAfter(end, 's'))\n                                );\n                            });\n                            this.events = this.processEvents(list, old_events);\n                            // Update event list for view listing\n                            const event_list = this.events.filter(\n                                (i) => i.type !== 'date' && i.type !== 'empty'\n                            );\n                            this.event_list.emit(\n                                event_list.map((i) => ({ id: i.id, date: i.date }))\n                            );\n                            // Scroll to date if needed\n                            this.timeout('scroll_to', () => this.scrollTo());\n                            this.loading = false;\n                            delete this.event_promise;\n                            resolve();\n                        },\n                        () => {\n                            this.loading = false;\n                            delete this.event_promise;\n                        }\n                    );\n            });\n        }\n        return this.event_promise;\n    }\n\n    public changePollingState(state: boolean) {\n        if (state) {\n            this.timeout('polling', () => {\n                this.updateEvents();\n                this.interval('update_events', () => this.updateEvents(), 10 * 1000);\n            }, 2000);\n        } else {\n            this.clearInterval('update_events');\n        }\n    }\n\n    /**\n     * Process list of new items and merge with the old\n     * @param list List of new bookings to generate event blocks for\n     * @param old_events List of relevant old event blocks\n     */\n    public processEvents(list: Booking[], old_events: BookingLike[]): BookingLike[] {\n        let events: BookingLike[] = [];\n        const now = dayjs();\n        let date = dayjs().startOf('d');\n        const end = date.add(this.shown_offset, 'd').endOf('d');\n        for (; date.isBefore(end); date = date.add(1, 'd')) {\n            const date_str = date.format('YYYY-MM-DD');\n            let date_events = [];\n            // Add date block\n            date_events.push({\n                id: date_str,\n                type: 'date',\n                order_id: date_str,\n                title: date.format('dddd, DD MMM'),\n                is_today: date.isSame(now, 'd'),\n                date: date.valueOf(),\n            });\n            const filter_fn: (_: BookingLike) => boolean = (i) =>\n                timePeriodsIntersect(\n                    date.valueOf(),\n                    date.endOf('d').valueOf(),\n                    i.date,\n                    i.date + ((i.duration || 60) - 1) * 60 * 1000\n                );\n            // Add events for today to list\n            const new_items = list.filter(filter_fn as any);\n            const old_items = old_events.filter(filter_fn as any);\n            if (new_items.length || old_items.length) {\n                date_events = date_events.concat(new_items as any).concat(old_items);\n            } else {\n                // Add block for no events if so\n                date_events.push({\n                    id: `${date_str}-empty`,\n                    type: 'empty',\n                    order_id: date_str,\n                    title: `No items for ${date.format('dddd, DD MMM')}`,\n                    is_today: date.isSame(now, 'd'),\n                    date: date.valueOf() + 1,\n                });\n            }\n            date_events = unique(date_events, 'id');\n            date_events.sort((a, b) =>\n                a.type === 'date' ? -1 : b.type === 'date' ? 1 : a.date - b.date\n            );\n            events = events.concat(date_events);\n        }\n        return events;\n    }\n\n    /**\n     * Handle scrolling on the event list\n     */\n    public onScroll() {\n        /* istanbul ignore else */\n        if (!this.event_promise) {\n            this.show_calendar = false;\n            const range = this.scroll_viewport.getRenderedRange();\n            const dist = range.end - range.start;\n            const nearest = this.events[range.start];\n            this.at_top = range.start === 0 && this.scroll_viewport.measureScrollOffset() < 5;\n            this.date_offset = dayjs(nearest.date).diff(dayjs(), 'd') - 1;\n            this.date = dayjs((this.events[dist + range.start] || {}).date)\n                .subtract(1, 'd')\n                .valueOf();\n            /* istanbul ignore else */\n            if (range.end > this.events.length - 7) {\n                this.shown_offset += 3;\n                this.updateEvents();\n            }\n        }\n    }\n\n    /**\n     * Update the date offset\n     * @param date UTC milliseconds epoch of new date offset\n     */\n    public updateDate(date: number) {\n        const day = dayjs(date);\n        this.date_offset = day.diff(dayjs(), 'd') - 1;\n        this.shown_offset = Math.max(this.shown_offset, this.date_offset + 3);\n        this.scroll_to = day.format('YYYY-MM-DD');\n        delete this.event_promise;\n        this.show_calendar = false;\n        this.date = dayjs().add(this.date_offset, 'd').valueOf();\n        this.updateEvents();\n    }\n\n    /** Close the menu popup with the date picker */\n    public closeDatePicker() {\n        this.trigger.closeMenu();\n        this.timeout('allow_click', () => (this.date_picker_open = false));\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(item: BookingLike, index: number) {\n        return item ? item.id : null;\n    }\n\n    /**\n     * Scroll to a previously defined date on the event list\n     */\n    private scrollTo() {\n        /* istanbul ignore else */\n        if (this.scroll_to) {\n            const index = this.events.findIndex((i) => i.id === this.scroll_to);\n            /* istanbul ignore else */\n            if (index > -1) {\n                this.scroll_viewport.scrollToIndex(index, 'smooth');\n                this.scroll_to = null;\n            }\n        }\n    }\n\n    public preventClickthrough() {\n        this.date_picker_open = true;\n        this.timeout('allow_click', () => (this.date_picker_open = false));\n    }\n}\n","<div class=\"event-list\">\n    <div class=\"header dark-mode\" [class.scrolled]=\"!at_top\">\n        <div class=\"user\">\n            <mat-form-field appearance=\"outline\" *ngIf=\"user_list && user_list.length > 1\">\n                <mat-select\n                    #select\n                    [(value)]=\"active_user\"\n                    [placeholder]=\"active_user.name\"\n                    (valueChange)=\"event_promise = null; updateEvents($event); events = []\"\n                >\n                    <mat-option *ngFor=\"let user of user_list\" [value]=\"user\">\n                        {{ user?.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"flex\"></div>\n        <div class=\"date\">\n            <button\n                mat-icon-button\n                name=\"date\"\n                [matMenuTriggerFor]=\"appMenu\"\n                (click)=\"date_picker_open = true\"\n            >\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'event' }\"></app-icon>\n            </button>\n        </div>\n    </div>\n    <div class=\"progress\">\n        <mat-progress-bar mode=\"indeterminate\" *ngIf=\"loading\"></mat-progress-bar>\n    </div>\n    <div class=\"body\">\n        <cdk-virtual-scroll-viewport itemSize=\"80\" class=\"viewport\" (scroll)=\"onScroll()\">\n            <ng-container *cdkVirtualFor=\"let item of events; trackBy: trackByFn\">\n                <schedule-event-item\n                    [class.no-event]=\"date_picker_open\"\n                    [attr.id]=\"item.id | slice: 0:10\"\n                    [user]=\"active_user\"\n                    [event]=\"item\"\n                    (deleted)=\"removeEvent(item)\"\n                    (viewing)=\"changePollingState(!$event)\"\n                ></schedule-event-item>\n            </ng-container>\n        </cdk-virtual-scroll-viewport>\n    </div>\n    <div class=\"footer\"></div>\n</div>\n<mat-menu #appMenu=\"matMenu\" (closed)=\"preventClickthrough()\">\n    <div mat-menu-item class=\"date-picker\" (click)=\"$event.stopPropagation()\">\n        <a-date-picker\n            [(ngModel)]=\"date\"\n            (ngModelChange)=\"updateDate($event); closeDatePicker()\"\n        ></a-date-picker>\n    </div>\n</mat-menu>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport {\n    MeetingDetailsOverlayComponent,\n    MeetingDetailsModalData,\n} from 'src/app/overlays/meeting-details-overlay/meeting-details-overlay.component';\nimport { UsersService } from 'src/app/services/data/users/users.service';\nimport { User } from 'src/app/services/data/users/user.class';\n\nimport * as dayjs from 'dayjs';\nimport { first } from 'rxjs/operators';\n\nexport interface BookingLike {\n    /** ID of the item */\n    id: string;\n    /** Sorting weight of the item */\n    order_id: string;\n    /** Type of item to render */\n    type: 'date' | 'event' | 'empty';\n    /** Whether the event is on the current date */\n    is_today: boolean;\n    /** Title of the event */\n    title: string;\n    /** Date in UTC milliseconds */\n    date: number;\n    /** Current state of the booking */\n    status?: 'future' | 'upcoming' | 'done' | 'started' | 'in_progress';\n\n    [key: string]: any;\n}\n\n@Component({\n    selector: 'schedule-event-item',\n    templateUrl: './list-item.component.html',\n    styleUrls: ['./list-item.component.scss'],\n})\nexport class ScheduleEventListItemComponent extends BaseDirective {\n    /** Booking to display */\n    @Input() public event: BookingLike;\n    /** User who's schedule is being viewed */\n    @Input() public user: User;\n\n    @Output() public viewing = new EventEmitter<boolean>();\n\n    @Output() public deleted = new EventEmitter();\n\n    public get in_progress(): boolean {\n        return this.event.status === 'in_progress';\n    }\n\n    public get date_display(): string {\n        const date = dayjs(this.event.date);\n        const now = dayjs();\n        return now.isSame(date, 'd') ? 'Today' : date.format('DD MMM YYYY');\n    }\n\n    /** Display location of the booking event */\n    public get location(): string {\n        const booking: Booking = this.event as any;\n        return (booking.space_list || [booking.space]).map((i) => i.name).join(', ');\n    }\n\n    /** Image name to display for the event */\n    public get type_image(): string {\n        const booking: Booking = this.event as any;\n        return booking.has_visitors ? 'external' : 'book_room';\n    }\n\n    public get time(): string {\n        const booking: Booking = this.event as any;\n        return booking.all_day || booking.duration > 23 * 60\n            ? 'All Day'\n            : dayjs(booking.date).format('h:mm A');\n    }\n\n    /** Status of the current booking */\n    public get status(): 'approved' | 'tentative' | 'declined' | '' {\n        if (this.event.type === 'date' || this.event.type === 'empty') return '';\n        const event: Booking = this.event as any;\n        if (event.declined) {\n            return 'declined';\n        } else if (event.tentative) {\n            return 'tentative';\n        } else if (event.approved) {\n            return 'approved';\n        }\n        return '';\n    }\n\n    constructor(private _dialog: MatDialog, private _users: UsersService) {\n        super();\n    }\n\n    public openDetailsModal() {\n        /* istanbul ignore else */\n        if (this.event instanceof Booking) {\n            this.viewing.emit(true);\n            const ref = this._dialog.open<MeetingDetailsOverlayComponent, MeetingDetailsModalData>(\n                MeetingDetailsOverlayComponent,\n                {\n                    maxHeight: 'auto',\n                    maxWidth: 'auto',\n                    width: 'auto',\n                    height: 'auto',\n                    hasBackdrop: false,\n                    closeOnNavigation: true,\n                    data: {\n                        booking: this.event,\n                        as_delegate: this._users.current.email !== (this.user || {}).email,\n                        delegate: this.user ? this.user.email : '',\n                        is_first: false,\n                        is_last: false,\n                    },\n                }\n            );\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'action'))\n                .subscribe(() => this.deleted.emit());\n            ref.afterClosed().subscribe(() => this.viewing.emit(false));\n        }\n    }\n}\n","<ng-container *ngIf=\"event\" [ngSwitch]=\"event.type\">\n    <div *ngSwitchCase=\"'date'\" class=\"day display\">\n        <div class=\"content\">{{ event.title }}</div>\n    </div>\n    <div *ngSwitchCase=\"'empty'\" class=\"emptied display\">\n        <div class=\"content\">No events for {{ date_display }}</div>\n    </div>\n    <div\n        *ngSwitchDefault\n        [class]=\"'event display ' + event.type + ' ' + status\"\n        [attr.id]=\"event.id\"\n    >\n        <a (click)=\"openDetailsModal()\">\n            <div class=\"content\">\n                <div class=\"time\">\n                    <div>{{ time }}</div>\n                    <div class=\"info\" *ngIf=\"in_progress\">In Progress</div>\n                </div>\n                <div class=\"icon\">\n                    <img [src]=\"'assets/img/' + type_image + '.svg'\" />\n                </div>\n                <div class=\"details\">\n                    <div class=\"title text\">{{ event.title }}</div>\n                    <div class=\"location text\">\n                        <img src=\"assets/img/location.svg\" />\n                        <div class=\"text\">\n                            {{ event.location_name || location || 'No location' }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </a>\n    </div>\n</ng-container>\n","\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { EventPair } from './event-list/event-list.component';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\n\n@Component({\n    selector: 'app-schedule',\n    templateUrl: './schedule.template.html',\n    styleUrls: ['./schedule.styles.scss'],\n})\nexport class ScheduleComponent extends BaseDirective implements OnInit {\n    /** Name of the page to render */\n    public page: string;\n    /** ID of the event item to view */\n    public id: string;\n    /** Current list of loaded events */\n    public events: EventPair[];\n    /** Whether to show menu */\n    public show_menu = false;\n\n    /** ID of the event after the active event */\n    public get next(): string {\n        if (this.events) {\n            const index = this.events.findIndex(i => this.id === i.id) + 1;\n            if (index > -1 && this.events[index]) {\n                return this.events[index].id;\n            }\n        }\n        return '';\n    }\n\n    /** ID of the event before the active event */\n    public get previous(): string {\n        if (this.events) {\n            const index = this.events.findIndex(i => this.id === i.id) - 1;\n            if (index > -1 && this.events[index]) {\n                return this.events[index].id;\n            }\n        }\n        return '';\n    }\n\n    constructor(private _route: ActivatedRoute, private _service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription('route.route', this._route.paramMap.subscribe((params) => {\n            if (params.has('page')) {\n                this.page = params.get('page');\n            }\n            if (params.has('id')) {\n                this.id = params.get('id');\n            }\n        }));\n        this.loadEvents();\n        this._service.title = 'My Day';\n    }\n\n    /**\n     * Update local event listing\n     * @param event_list New list of events\n     */\n    public updateEvents(event_list: EventPair[]) {\n        this.events = event_list;\n        this.saveEvents();\n    }\n\n    /**\n     * Save the current event listing\n     */\n    public saveEvents() {\n        if (localStorage) {\n            localStorage.setItem('STAFF.events', JSON.stringify(this.events || []));\n        }\n    }\n\n    /**\n     * Load the last saved event listing\n     */\n    public loadEvents() {\n        if (localStorage) {\n            const data = localStorage.getItem('STAFF.events');\n            this.events = JSON.parse(data || '[]');\n        }\n    }\n}\n","<div class=\"schedule page\">\n    <header class=\"header\">\n        <a-topbar-header [(menu)]=\"show_menu\"></a-topbar-header>\n    </header>\n    <main class=\"body\">\n        <ng-container [ngSwitch]=\"page\">\n            <ng-container *ngSwitchCase=\"'view'\">\n                <schedule-view-event [id]=\"id\" [next]=\"next\" [previous]=\"previous\"></schedule-view-event>\n            </ng-container>\n            <ng-container *ngSwitchDefault>\n                <schedule-event-list (eventList)=\"updateEvents($event)\"></schedule-event-list>\n            </ng-container>\n        </ng-container>\n    </main>\n    <footer class=\"footer\">\n        <a-footer-menu></a-footer-menu>\n    </footer>\n</div>\n<!-- <a-overlay-menu [(show)]=\"show_menu\"></a-overlay-menu> -->\n","\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { RouterModule } from '@angular/router';\nimport { ComposerModule } from '@placeos/composer';\n\nimport { ROUTES } from './schedule.routes';\nimport { SharedContentModule } from 'src/app/shared/shared.module';\n\nimport { ScheduleComponent } from './schedule.component';\nimport { ScheduleEventListComponent } from './event-list/event-list.component';\nimport { ScheduleViewEventComponent } from './view-event/view-event.component';\nimport { ScheduleEventListItemComponent } from './event-list/list-item/list-item.component';\nimport { EventDetailsComponent } from './view-event/event-details/event-details.component';\nimport { EventEditComponent } from './view-event/event-edit/event-edit.component';\n\n@NgModule({\n    declarations: [\n        ScheduleComponent,\n        ScheduleViewEventComponent,\n        ScheduleEventListComponent,\n        ScheduleEventListItemComponent,\n        EventDetailsComponent,\n        EventEditComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ComposerModule,\n        FormsModule,\n        ReactiveFormsModule,\n        RouterModule.forChild(ROUTES),\n        SharedContentModule,\n        ScrollingModule\n    ]\n})\nexport class ScheduleModule { }\n","import { Routes } from '@angular/router';\n\nimport { ScheduleComponent } from './schedule.component';\n\nexport const ROUTES: Routes = [\n    { path: '', component: ScheduleComponent },\n    { path: ':page', component: ScheduleComponent },\n    { path: ':page/:id', component: ScheduleComponent },\n    { path: '**', redirectTo: '' }\n];\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { humaniseDuration } from 'src/app/shared/utilities/general.utilities';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { ViewRoomModalComponent } from 'src/app/overlays/view-room-modal/view-room-modal.component';\n\nimport * as dayjs from 'dayjs';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: 'schedule-event-details',\n    templateUrl: './event-details.component.html',\n    styleUrls: ['./event-details.component.scss']\n})\nexport class EventDetailsComponent extends BaseDirective {\n    /** Booking to display */\n    @Input() event: Booking;\n    /** Emitter for action on the display view */\n    @Output() change = new EventEmitter();\n    /** Emitter for changes to the loading state */\n    @Output() loading = new EventEmitter();\n    /** Toggle for activating checkin */\n    public checked_in: boolean;\n    /** Mapping of spaces to last checkin time */\n    public last_start: { [id: string]: number } = {};\n    /** Whether to show full locations list */\n    public show_locations: boolean;\n    /** Whether to show full attendee list */\n    public show_attendees: boolean;\n\n    /** Title of the displayed event */\n    public get title(): string {\n        if (!this.event) {\n            return '';\n        }\n        return this.event.title;\n    }\n\n    /** Display string of when the event will occur */\n    public get when(): string {\n        if (!this.event) {\n            return 'Unable to determine.';\n        }\n        const date = dayjs(this.event.date);\n        const end = date.add(this.event.duration || 60, 'm');\n        if (this.event.all_day || this.event.duration > 23 * 60) {\n            return `${date.format('DD MMM YYYY')} - All Day`;\n        } else {\n            if (date.isSame(end, 'd')) {\n                return `${date.format('DD MMM YYYY, h:mm A')} - ${end.format('h:mm A')}`;\n            } else {\n                return `${date.format('DD MMM YYYY, h:mm A')} - ${end.format(\n                    'DD MMM YYYY, h:mm A'\n                )}`;\n            }\n        }\n    }\n\n    /** Display string for the event's duration */\n    public get duration(): string {\n        if (!this.event) {\n            return 'Unable to determine';\n        }\n        return humaniseDuration(this.event.duration || 60);\n    }\n\n    /** List of spaces associated with the event */\n    public get spaces(): Space[] {\n        if (!this.event) {\n            return [];\n        }\n        return this.event.space_list;\n    }\n\n    /** List of attendees associated with the event not including the host */\n    public get attendees(): User[] {\n        if (!this.event) {\n            return [];\n        }\n        return this.event.attendees.filter(i => i.email !== this.organiser.email);\n    }\n\n    /** Host of the event */\n    public get organiser(): User {\n        if (!this.event) {\n            return this._users.current;\n        }\n        return this.event.organiser || this._users.current;\n    }\n\n    /** Whether the user is allowed to edit the event */\n    public get can_edit(): boolean {\n        const organiser = this.organiser;\n        const user = this._users.current;\n        return organiser.email === user.email && this.status !== 'done';\n    }\n\n    /** Details about the event */\n    public get notes(): string {\n        if (!this.event) {\n            return '';\n        }\n        return this.event.description || '';\n    }\n\n    /** Status of the event */\n    public get status(): 'future' | 'upcoming' | 'done' | 'started' | 'in_progress' {\n        if (this.event) {\n            const now = dayjs();\n            const date = dayjs(this.event.date);\n            /* istanbul ignore else */\n            if (now.isBefore(date.subtract(15, 'm'), 'm')) {\n                return 'future';\n            } else if (now.isBefore(date, 'm')) {\n                return 'upcoming';\n            } else if (now.isBefore(date.add(15, 'm'), 'm')) {\n                return 'started';\n            } else if (now.isBefore(date.add(this.event.duration, 'm'), 'm')) {\n                return 'in_progress';\n            }\n        }\n        return 'done';\n    }\n\n    /** Whether the user has checkin to all the spaces in the event */\n    public get is_checked_in(): boolean {\n        return this.spaces.reduce(\n            (a, v) => a && this.event.date <= (this.last_start[v.id] || 0),\n            true\n        );\n    }\n\n    /** Whether the spaces can be controlled */\n    public get can_control(): boolean {\n        return this.spaces.length > 0 && this.status !== 'future' && this.status !== 'done';\n    }\n\n    /** Whether the user is able to checkin to the event */\n    public get can_checkin(): boolean {\n        return this.spaces.length > 0 && (this.status === 'upcoming' || this.status === 'started');\n    }\n\n    constructor(private _users: UsersService, private _dialog: MatDialog, private _router: Router) {\n        super();\n    }\n\n    /**\n     * Open the modal to show the location of a space\n     * @param space Space to show the location\n     */\n    public locate(space: Space) {\n        /* istanbul ignore else */\n        if (space) {\n            this._dialog.open(ViewRoomModalComponent, {\n                width: 'auto',\n                height: 'auto',\n                maxWidth: '95vw',\n                maxHeight: '95vh',\n                data: { space }\n            });\n        }\n    }\n\n    /**\n     * Enter edit mode for the booking\n     */\n    public edit(): void {\n        this.change.emit({ type: 'edit' });\n    }\n\n    /**\n     * Checkin the current booking\n     */\n    public checkin(): void {\n        this.checked_in = !this.checked_in;\n    }\n\n    /**\n     * Store the booking data and navigate to the booking form\n     */\n    public duplicate(): void {\n        /* istanbul ignore else */\n        if (localStorage) {\n            const booking = this.event.duplicate();\n            localStorage.setItem('STAFF.booking_form', JSON.stringify(booking));\n        }\n        this.change.emit({ type: 'duplicate' });\n        this._router.navigate(['/book']);\n    }\n}\n","<div class=\"event-details\">\n    <div class=\"bindings\">\n        <ng-container *ngFor=\"let space of spaces\">\n            <ng-container *ngIf=\"space?.level?.id\">\n                <i\n                    binding\n                    [(model)]=\"last_start[space.id]\"\n                    [sys]=\"space.id\"\n                    mod=\"Booking\"\n                    bind=\"last_meeting_started\"\n                ></i>\n                <i\n                    binding\n                    [(model)]=\"checkin\"\n                    [sys]=\"space.id\"\n                    mod=\"Booking\"\n                    exec=\"start_meeting\"\n                    [params]=\"[event.date]\"\n                ></i>\n            </ng-container>\n        </ng-container>\n    </div>\n    <div class=\"body\">\n        <div class=\"field\" name=\"title\">\n            <label>Title:</label>\n            <div class=\"value\">{{ title }}</div>\n        </div>\n        <div class=\"field\" name=\"when\">\n            <label>When:</label>\n            <div class=\"value\">{{ when }}</div>\n        </div>\n        <div class=\"field\" name=\"duration\">\n            <label>Duration:</label>\n            <div class=\"value\">{{ duration }}</div>\n        </div>\n        <div class=\"field multi\" name=\"location\">\n            <label>Locations({{ spaces.length || '0' }}):</label>\n            <div class=\"value\">\n                <div class=\"list\" [class.shown]=\"show_locations\">\n                    <div\n                        class=\"list-item\"\n                        *ngFor=\"let item of spaces\"\n                        [title]=\"item?.name + ' - ' + (item?.status || 'Approved')\"\n                    >\n                        <div class=\"status\"></div>\n                        <div class=\"text\">{{ item?.name }}</div>\n                        <button class=\"show\" *ngIf=\"item?.map_id\" name=\"map\" (click)=\"locate(item)\">\n                            Map\n                        </button>\n                        <a\n                            class=\"show\"\n                            *ngIf=\"item?.support_url && can_control\"\n                            name=\"control\"\n                            [href]=\"item.support_url\"\n                            target=\"_blank\"\n                            >Control</a\n                        >\n                    </div>\n                    <div class=\"list-item\" *ngIf=\"!spaces.length\">No Location</div>\n                </div>\n                <button\n                    class=\"show\"\n                    *ngIf=\"spaces.length > 5\"\n                    (click)=\"show_locations = !show_locations\"\n                >\n                    {{ show_locations ? 'Hide' : 'Show' }} Locations\n                </button>\n            </div>\n        </div>\n        <div class=\"field\" name=\"host\">\n            <label>Host:</label>\n            <div class=\"value\">{{ organiser.name }}</div>\n        </div>\n        <div class=\"field multi\" name=\"attendees\">\n            <label>Attendees({{ attendees.length || '0' }}):</label>\n            <div class=\"value\">\n                <div class=\"list\" [class.shown]=\"show_attendees\">\n                    <div\n                        class=\"list-item\"\n                        *ngFor=\"let item of attendees\"\n                        [title]=\"\n                            item?.name +\n                            ' - ' +\n                            (item?.status || 'Accepted') +\n                            (item?.email ? '\\n' + item.email : '')\n                        \"\n                    >\n                        <div class=\"status\"></div>\n                        <div class=\"text\">\n                            <div class=\"name\">{{ item.name }}</div>\n                            <div class=\"email\" *ngIf=\"item.email\">\n                                <a [href]=\"'mailto:' + item.email + '?subject=' + event.title\">{{\n                                    item.email\n                                }}</a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <button\n                    class=\"show\"\n                    *ngIf=\"attendees.length > 5\"\n                    (click)=\"show_attendees = !show_attendees\"\n                >\n                    {{ show_attendees ? 'Hide' : 'Show' }} Attendees\n                </button>\n            </div>\n        </div>\n        <div class=\"field\" name=\"notes\">\n            <label>Notes:</label>\n            <div class=\"value\" [innerHTML]=\"notes\"></div>\n        </div>\n        <div class=\"field\" *ngIf=\"event && event.has_catering\" name=\"catering\">\n            <label>Catered:</label>\n            <div class=\"value\">Yes</div>\n        </div>\n    </div>\n    <div class=\"footer\">\n        <button\n            mat-button\n            *ngIf=\"can_checkin\"\n            name=\"checkin\"\n            [class]=\"\n                status === 'done' && !is_checked_in\n                    ? 'error no-events'\n                    : is_checked_in\n                    ? 'success no-events'\n                    : ''\n            \"\n            (click)=\"checkin()\"\n        >\n            <div class=\"text\">\n                {{\n                    status === 'done' && !is_checked_in\n                        ? 'Cancelled'\n                        : is_checked_in\n                        ? 'Checked in'\n                        : 'Checkin'\n                }}\n            </div>\n        </button>\n        <button mat-button *ngIf=\"can_edit\" name=\"edit\" (click)=\"edit()\">Edit</button>\n        <button mat-button *ngIf=\"can_edit\" name=\"duplicate\" (click)=\"duplicate()\">Duplicate</button>\n    </div>\n</div>\n","import { Component, OnInit, EventEmitter, Input, Output, SimpleChanges, OnChanges, OnDestroy } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { generateBookingForm } from 'src/app/services/data/bookings/booking.utilities';\nimport { BookingConfirmComponent } from 'src/app/shell/bookings/overlays/booking-confirm/booking-confirm.component';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: 'schedule-event-edit',\n    templateUrl: './event-edit.component.html',\n    styleUrls: ['./event-edit.component.scss']\n})\nexport class EventEditComponent extends BaseDirective implements OnInit, OnChanges, OnDestroy {\n    /** Booking to display */\n    @Input() public event: Booking;\n    /** Emitter for action on the display view */\n    @Output() public change = new EventEmitter<{ type: string }>();\n    /** Emitter for changes to the loading state */\n    @Output() public loading = new EventEmitter<string>();\n    /** Form field data */\n    public form: FormGroup;\n\n    constructor(private _service: ApplicationService, private _users: UsersService, private _dialog: MatDialog) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        /* istanbul ignore else */\n        if (this.event) {\n            this.form = generateBookingForm(\n                this.event,\n                this._service.setting('app.booking.show_fields') || []\n            );\n        }\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.event && this.event) {\n            /* istanbul ignore else */\n            if (this.form && changes.event.previousValue) {\n                (changes.event.previousValue as any).event_subject.next({ type: 'item_saved'});\n            }\n            this.form = generateBookingForm(\n                this.event,\n                this._service.setting('app.booking.show_fields') || []\n            );\n        }\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        /* istanbul ignore else */\n        if (this.form && this.event) {\n            (this.event as any).event_subject.next({ type: 'item_saved'});\n        }\n    }\n\n    /**\n     * Exit the edit form\n     */\n    public cancel() {\n        this.change.emit({ type: 'cancel' });\n    }\n\n    /**\n     * Save changes to the booking\n     */\n    public save() {\n        /* istanbul ignore else */\n        if (!this.form.dirty) {\n            this._service.notifyInfo('No changes have been made to booking');\n            return;\n        }\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            const dialog_ref = this._dialog.open(BookingConfirmComponent, {\n                width: '32em',\n                maxWidth: '95vw',\n                maxHeight: '95vh',\n                data: { booking: this.event }\n            });\n            dialog_ref.componentInstance.event.subscribe(event => {\n                /* istanbul ignore else */\n                if (event.reason === 'success') {\n                    this.change.emit({ type: 'view' });\n                }\n            });\n        }\n    }\n}\n","<div class=\"event-edit\">\n    <form *ngIf=\"form\" [formGroup]=\"form\" (ngSubmit)=\"save()\">\n        <div class=\"body\">\n            <a-booking-form [form]=\"form\"></a-booking-form>\n        </div>\n        <div class=\"footer\">\n            <button mat-button type=\"button\" class=\"inverse\" name=\"cancel\" (click)=\"cancel()\">\n                Cancel\n            </button>\n            <button mat-button type=\"submit\">Save</button>\n        </div>\n    </form>\n</div>\n","import { Component, OnInit, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\n\n@Component({\n    selector: 'schedule-view-event',\n    templateUrl: './view-event.component.html',\n    styleUrls: ['./view-event.component.scss'],\n})\nexport class ScheduleViewEventComponent extends BaseDirective implements OnChanges, OnInit {\n    /** ID of the current booking to display */\n    @Input() public id: string;\n    /** ID of the next booking */\n    @Input() public next: string;\n    /** ID of the previous booking */\n    @Input() public previous: string;\n    /** Booking to display */\n    public event: Booking;\n    /** Whether booking data is being loaded */\n    public loading: string;\n    /** Whether booking is being edited */\n    public editing: boolean;\n\n    constructor(\n        private _service: ApplicationService,\n        private _bookings: BookingsService,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'arrow_right',\n            this._service.Hotkeys.listen(['ArrowRight'], () => this.nextBooking())\n        );\n        this.subscription(\n            'arrow_left',\n            this._service.Hotkeys.listen(['ArrowLeft'], () => this.previousBooking())\n        );\n        this.subscription(\n            'changes',\n            this._bookings.listen('list').subscribe(() => this.loadEvent())\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.id && this.id) {\n            this.event = null;\n            this.editing = false;\n            this.loading = '';\n            this.loadEvent();\n        }\n    }\n\n    /**\n     * Load the details of the active event\n     */\n    public loadEvent() {\n        this.loading = 'Loading booking data...';\n        let booking = this._bookings.find(this.id);\n        if (booking) {\n            this.event = booking;\n            this.loading = '';\n        } else {\n            this._bookings.show(this.id, {}).then(\n                (bkn) => {\n                    this.loading = '';\n                    this.event = bkn;\n                },\n                () => {\n                    this.loading = '';\n                    this._service.notifyError(`Failed to loaded booking data<br>ID: ${this.id}`);\n                    this._router.navigate(['/schedule']);\n                }\n            );\n        }\n    }\n\n    /**\n     * View the next booking in the list\n     */\n    public nextBooking() {\n        /* istanbul ignore else */\n        if (this.next && !this.editing) {\n            this._router.navigate(['/schedule', 'view', this.next]);\n        }\n    }\n\n    /**\n     * View the previous booking in the list\n     */\n    public previousBooking() {\n        /* istanbul ignore else */\n        if (this.previous && !this.editing) {\n            this._router.navigate(['/schedule', 'view', this.previous]);\n        }\n    }\n\n    /**\n     * Handle changes to sub-components\n     */\n    public onChange(event: { type: string }): void {\n        /* istanbul ignore else */\n        if (event.type === 'edit') {\n            this.editing = true;\n        } else if (event.type === 'view' || event.type === 'cancel') {\n            this.editing = false;\n        }\n    }\n}\n","<div class=\"event-display\">\n    <div class=\"header\">\n        <div class=\"icon\"></div>\n        <div class=\"details\">\n            <a mat-icon-button name=\"previous\" [routerLink]=\"['/schedule', 'view', previous]\" [class.disabled]=\"!previous\">\n                <div class=\"left icon\">\n                    <i class=\"material-icons\">keyboard_arrow_left</i>\n                </div>\n            </a>\n            <div class=\"title\">{{ event ? event.title || 'No title' : '????' }}</div>\n            <a mat-icon-button name=\"next\" [routerLink]=\"['/schedule', 'view', next]\" [class.disabled]=\"!next\">\n                <div class=\"right icon\">\n                    <i class=\"material-icons\">keyboard_arrow_right</i>\n                </div>\n            </a>\n        </div>\n        <a mat-icon-button [routerLink]=\"['/schedule']\">\n            <div class=\"icon\">\n                <i class=\"material-icons\">close</i>\n            </div>\n        </a>\n    </div>\n    <div class=\"body\">\n        <div class=\"content\">\n            <ng-container *ngIf=\"loading\">\n                <div class=\"no-item center\">\n                    <div class=\"icon\">\n                        <mat-spinner diameter=\"48\"></mat-spinner>\n                    </div>\n                    <div class=\"text\">\n                        {{ loading }}\n                    </div>\n                </div>\n            </ng-container>\n            <div [class.hide]=\"loading\">\n                <ng-container *ngIf=\"!editing; else edit_form\">\n                    <schedule-event-details [event]=\"event\" (change)=\"onChange($event)\" (loading)=\"loading = $event\"></schedule-event-details>\n                </ng-container>\n                <ng-template #edit_form>\n                    <schedule-event-edit [event]=\"event\" (change)=\"onChange($event)\" (loading)=\"loading = $event\"></schedule-event-edit>\n                </ng-template>\n            </div>\n        </div>\n    </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from '../shared/base.directive';\nimport { ApplicationService } from '../services/app.service';\nimport { ApplicationLoadingState, LoadingState } from '../shared/utilities/types.utilities';\nimport { ApplicationIcon } from '../shared/utilities/settings.interfaces';\nimport { UsersService } from '../services/data/users/users.service';\n\n@Component({\n    selector: 'app-shell-wrapper',\n    templateUrl: './shell.component.html',\n    styleUrls: ['./shell.component.scss'],\n})\nexport class ShellWrapperComponent extends BaseDirective implements OnInit {\n    /** Loading state of the application */\n    public loading_state: ApplicationLoadingState;\n    /** Logo of the application organisation */\n    public logo: ApplicationIcon;\n\n    constructor(private _service: ApplicationService, private _users: UsersService) {\n        super();\n    }\n\n    /** Whether the user needs to login */\n    public get show_login(): boolean {\n        return !this._users.is_logged_in;\n    }\n\n    /** Whether a module is still loading data */\n    public get is_loading(): boolean {\n        if (this.loading_state) {\n            for (const mod in this.loading_state) {\n                if (this.loading_state[mod] && this.loading_state[mod].state === 'loading') {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    /** List of modules with a loading state */\n    public get loading_state_list(): LoadingState[] {\n        const list: LoadingState[] = [];\n        for (const mod in this.loading_state) {\n            if (this.loading_state[mod]) {\n                list.push(this.loading_state[mod]);\n            }\n        }\n        return list;\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'loading',\n            this._service.listen<ApplicationLoadingState>('loading', (loading) => {\n                this.loading_state = loading;\n            })\n        );\n        this._service.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.logo = this._service.setting('app.logo_light') || { type: 'icon' };\n        });\n    }\n}\n","<div class=\"shell\">\n    <div class=\"view\" *ngIf=\"!show_login\">\n        <router-outlet></router-outlet>\n    </div>\n    <div class=\"login-module\" *ngIf=\"show_login\">\n        <app-login></app-login>\n    </div>\n    <div class=\"loading-block\" *ngIf=\"is_loading\">\n        <div class=\"info-block\">\n            <div class=\"header\" [style.background-color]=\"logo?.background\">\n                <div class=\"logo\">\n                    <i *ngIf=\"logo?.type === 'icon'\" [class]=\"logo.class\">{{ logo.content }}</i>\n                    <img *ngIf=\"logo?.type === 'img'\" [src]=\"logo.src | safe:'resource'\"/>\n                </div>\n            </div>\n            <div class=\"spinner\">\n                <mat-spinner [diameter]=\"64\"></mat-spinner>\n            </div>\n        </div>\n    </div>\n</div>\n","export const environment = {\n    production: true,\n    hmr: false,\n};\n",";\n/**\n * GENERAL APPLICATION SETTINGS\n */\nconst general = {\n    menu: {\n        items: [],\n        copyright: 'McKinsey & Company',\n        position: 'left'\n    }\n};\n\n/**\n * HOME PAGE SETTINGS\n */\nconst home = {\n    background: 'assets/img/skyline.jpg',\n    tiles: [\n        {\n            name: 'Book',\n            route: '/book/spaces',\n            icon: {\n                type: 'icon',\n                class: 'custom-book'\n            }\n        },\n        {\n            name: 'Maps',\n            route: '/explore/space',\n            icon: {\n                type: 'icon',\n                class: 'custom-spaces'\n            }\n        },\n        {\n            name: 'My Day',\n            route: '/schedule',\n            icon: {\n                type: 'icon',\n                class: 'custom-schedule'\n            }\n        }\n    ]\n};\n/**\n * HELP/SUPPORT SETTINGS\n */\nconst help = {\n    tiles: [],\n    columns: 2\n};\n/**\n * BOOKING FLOW SETTINGS\n */\nconst booking = {\n    booking_types: [\n        { name: 'Internal', id: 'internal' },\n        { name: 'Client', id: 'client' },\n        { name: 'External', id: 'external' },\n        { name: 'Setup', id: 'setup' },\n        { name: 'Training', id: 'training' },\n        { name: 'Interview', id: 'interview' }\n    ],\n    show_fields: [\n        'attendees',\n        'body',\n        'catering',\n        'date',\n        'duration',\n        'organiser',\n        'recurrence',\n        'title',\n        'type',\n        'all_day',\n        'needs_space',\n        'has_catering'\n    ],\n    html_body: true,\n    multiple_spaces: true,\n    desk_start: 9\n};\n/*===========================*\\\n||  SPACE LISTING SETTINGS   ||\n\\*===========================*/\nconst space_display = {\n    show_images: false\n};\n/*===========================*\\\n||  USER DIRECTORY SETTINGS  ||\n\\*===========================*/\nconst directory = {\n    show_avatars: true,\n    min_search_length: 3\n};\n/*===========================*\\\n||    EXPLORE MAP SETTINGS   ||\n\\*===========================*/\nconst explore = {\n    colors: {\n        'space-available': '#43a047',\n        'space-requestable': '#ffb300',\n        'space-unavailable': '#e53935',\n        'space-not-bookable': '#ccc',\n        'desk-available': '#43a047',\n        'desk-available-stroke': '#1b5e20',\n        'desk-unavailable': '#e53935',\n        'desk-unavailable-stroke': '#b71c1c',\n        'desk-reserved': '#ffb300',\n        'desk-reserved-stroke': '#ff6f00',\n        'desk-not-bookable': '#fff',\n        'desk-not-bookable-stroke': '#ccc',\n        'zone-low': '#43a047',\n        'zone-medium': '#ffb300',\n        'zone-high': '#e53935'\n    },\n    can_select_building: true,\n    show_legend_group_names: false,\n    show_timeline: true,\n    legend: {\n        General: [\n            { key: 'space-available', name: 'Available' },\n            { key: 'space-requestable', name: 'Available by request' },\n            { key: 'space-unavailable', name: 'In use' },\n            { key: 'space-not-bookable', name: 'Not Bookable' }\n        ]\n    }\n};\n\n\n/**\n * ROOT APPLICATION SETTINGS\n */\nconst app = {\n    title: 'McKinsey & Company',\n    description: 'McKinsey & Company Staff UI written with Angular Framework',\n    short_name: 'STAFF',\n    logo_light: {\n        type: 'img',\n        src: 'assets/img/logo.svg',\n        background: ''\n    },\n    logo_dark: {\n        type: 'img',\n        src: 'assets/img/logo-inverse.svg',\n        background: ''\n    },\n    heap_io: {\n        app_id: 3540602199,\n        force_ssl: true,\n        secure_cookie: true,\n        disable_text_capture: true,\n        cookie_path: '/staff/'\n    },\n    general,\n    home,\n    help,\n    booking,\n    space_display,\n    directory,\n    explore\n}\n\n/**\n * ROOT SETTIGNS\n */\nexport const DEFAULT_SETTINGS = {\n    debug: true,\n    composer: {\n        domain: '',\n        route: '/staff',\n        protocol: '',\n        port: '',\n        use_domain: false,\n        local_login: false\n    },\n    app,\n    mock: false\n};\n","// IMPORTANT: THIS FILE IS AUTO GENERATED! DO NOT MANUALLY EDIT OR CHECKIN!\n/* tslint:disable */\nexport const VERSION = {\n    \"dirty\": false,\n    \"raw\": \"95a1456\",\n    \"hash\": \"95a1456\",\n    \"distance\": null,\n    \"tag\": null,\n    \"semver\": null,\n    \"suffix\": \"95a1456\",\n    \"semverString\": null,\n    \"version\": \"0.0.0\",\n    \"core_version\": \"1.0.0\",\n    \"time\": 1602690826361\n};\n/* tslint:enable */\n","import { ApplicationRef, NgModuleRef } from '@angular/core';\nimport { createNewHosts } from '@angularclass/hmr';\n\nexport const hmrBootstrap = (\n    module: any,\n    bootstrap: () => Promise<NgModuleRef<any>>,\n) => {\n    let ngModule: NgModuleRef<any>;\n    module.hot.accept();\n    bootstrap().then(mod => (ngModule = mod));\n    module.hot.dispose(() => {\n        const appRef: ApplicationRef = ngModule.injector.get(ApplicationRef);\n        const elements = appRef.components.map(c => c.location.nativeElement);\n        const makeVisible = createNewHosts(elements);\n        ngModule.destroy();\n        makeVisible();\n    });\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { environment } from './environments/environment';\nimport { hmrBootstrap } from './hmr';\nimport { AppModule } from './app/app.module';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nconst bootstrap = () => platformBrowserDynamic().bootstrapModule(AppModule);\n\n// comes from https://medium.com/wizardnet972/hot-module-replacement-with-angular-cli-5fc7a3ae4a9c\nif (environment.hmr) {\n    if ((module as any).hot) {\n        hmrBootstrap(module, bootstrap);\n    } else {\n        console.error('HMR is not enabled for webpack-dev-server!');\n        console.log('Are you using the --hmr flag for ng serve?');\n    }\n} else {\n    bootstrap().catch(err => console.log(err));\n}\n"]}