{"version":3,"sources":["./src/app/shell/explore/explore.component.ts","./src/app/shell/explore/explore.component.html","./src/app/shell/explore/explore.module.ts","./src/app/shell/explore/map-legend/map-legend.component.ts","./src/app/shell/explore/map-legend/map-legend.component.html","./src/app/shell/explore/map-view/map-view.component.ts","./src/app/shell/explore/map-view/map-view.component.html","./src/app/shell/explore/overlays/booking-modal/booking-modal.component.ts","./src/app/shell/explore/overlays/booking-modal/booking-modal.component.html","./src/app/shell/explore/overlays/space-info/space-info.component.ts","./src/app/shell/explore/overlays/space-info/space-info.component.html","./src/app/shell/explore/search/search.component.ts","./src/app/shell/explore/search/search.component.html","./src/app/shell/explore/status-managers/desk-status.component.ts","./src/app/shell/explore/status-managers/space-status.component.ts","./src/app/shell/explore/timeline/timeline.component.ts","./src/app/shell/explore/timeline/timeline.component.html","./src/app/shell/explore/zoom-controls/zoom-controls.component.ts","./src/app/shell/explore/zoom-controls/zoom-controls.component.html"],"names":[],"mappings":"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","file":"shell-explore-explore-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\n@Component({\n    selector: 'app-explore',\n    templateUrl: './explore.component.html',\n    styleUrls: ['./explore.component.scss']\n})\nexport class ExploreComponent extends BaseDirective implements OnInit {\n    /** Whether to show the overlay menu */\n    public show_menu: boolean;\n\n    constructor(private _service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.title = 'Maps';\n    }\n}\n","<div class=\"explore page\">\n    <header class=\"header\">\n        <a-topbar-header [(menu)]=\"show_menu\"></a-topbar-header>\n    </header>\n    <main class=\"body\">\n        <explore-map-view></explore-map-view>\n    </main>\n    <footer class=\"footer\">\n        <a-footer-menu></a-footer-menu>\n    </footer>\n</div>\n<a-overlay-menu [(show)]=\"show_menu\"></a-overlay-menu>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Route } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\n\nimport { ComposerModule } from '@placeos/composer';\nimport { AInteractiveMapModule } from '@acaprojects/ngx-interactive-map';\n\nimport { ExploreComponent } from './explore.component';\nimport { SharedContentModule } from 'src/app/shared/shared.module';\nimport { MapViewComponent } from './map-view/map-view.component';\nimport { ExploreSpaceStatusComponent } from './status-managers/space-status.component';\nimport { ExploreDeskStatusComponent } from './status-managers/desk-status.component';\nimport { ZoomControlsComponent } from './zoom-controls/zoom-controls.component';\nimport { ExploreSpaceInfoComponent } from './overlays/space-info/space-info.component';\nimport { ExploreSearchComponent } from './search/search.component';\nimport { ExploreMapLegendComponent } from './map-legend/map-legend.component';\nimport { TimelineComponent } from './timeline/timeline.component';\nimport { ExploreBookingModalComponent } from './overlays/booking-modal/booking-modal.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: ExploreComponent },\n    { path: ':search_type', component: ExploreComponent }\n];\n\n@NgModule({\n    declarations: [\n        ExploreComponent,\n        MapViewComponent,\n        ExploreSpaceStatusComponent,\n        ExploreDeskStatusComponent,\n        ZoomControlsComponent,\n        ExploreSpaceInfoComponent,\n        ExploreSearchComponent,\n        ExploreMapLegendComponent,\n        TimelineComponent,\n        ExploreBookingModalComponent\n    ],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(ROUTES),\n        SharedContentModule,\n        AInteractiveMapModule,\n        ComposerModule,\n        FormsModule\n    ]\n})\nexport class ExploreModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { MapLegendItem, ExploreMapSettings } from 'src/app/shared/utilities/settings.interfaces';\nimport { ANIMATION_SHOW_CONTRACT_EXPAND } from 'src/app/shared/globals/angular-animations';\n\n@Component({\n    selector: 'a-map-legend',\n    templateUrl: './map-legend.component.html',\n    styleUrls: ['./map-legend.component.scss'],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND]\n})\nexport class ExploreMapLegendComponent extends BaseDirective implements OnInit {\n    /** Mapping of legend item groups */\n    public legend_items: HashMap<MapLegendItem[]> = {};\n    /** Mapping of map colours */\n    public colours: HashMap<string> = {};\n    /** Whether group names should be displayed */\n    public show_group_names: boolean;\n    /** Whether the legend items should be shown */\n    public show_legend = false;\n\n    /** List of group names for legend items */\n    public get group_names(): string[] {\n        return Object.keys(this.legend_items);\n    }\n\n    constructor(private _service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.initialised.pipe(first(_ => _)).subscribe(() => {\n            const explore_settings: ExploreMapSettings =\n                this._service.setting('app.explore') || ({} as any);\n            this.legend_items = explore_settings.legend || {};\n            this.colours = explore_settings.colors || {};\n            this.show_group_names = !!explore_settings.show_legend_group_names;\n        });\n    }\n}\n","<div class=\"map-legend\" *ngIf=\"group_names && group_names.length\">\n    <div class=\"tag\">\n        <div class=\"title\" (tapped)=\"show_legend = !show_legend\">\n            <div class=\"text\" i18n=\"Explore legend label\">{{ show_legend ? 'Hide' : 'Show' }} Legend</div>\n            <app-icon\n                [icon]=\"{\n                    class: 'material-icons',\n                    content: show_legend ? 'arrow_drop_up' : 'arrow_drop_down'\n                }\"\n            ></app-icon>\n        </div>\n    </div>\n    <div\n        class=\"contents\"\n        [@show]=\"show_legend ? 'show' : 'hide'\"\n        [style.padding-bottom]=\"show_legend ? '1em' : ''\"\n        [style.padding-bottom]=\"show_legend ? '.5em' : ''\"\n        [style.overflow]=\"show_legend ? 'hidden auto' : 'hidden'\"\n    >\n        <ul>\n            <ng-container *ngFor=\"let group of group_names\">\n                <li class=\"group\" *ngIf=\"show_group_names\">\n                    <div class=\"bar\"></div>\n                    <div class=\"name\">{{ group }}</div>\n                    <div class=\"bar\"></div>\n                </li>\n                <li class=\"item\" name=\"item.key\" *ngFor=\"let item of legend_items[group]\">\n                    <div class=\"ref\">\n                        <ng-container *ngIf=\"item.icon; else colour_display\">\n                            <app-icon [icon]=\"item.icon\"></app-icon>\n                        </ng-container>\n                        <ng-template #colour_display>\n                            <div\n                                class=\"colour\"\n                                [style.background-color]=\"item.color || colours[item.key]\"\n                            ></div>\n                        </ng-template>\n                    </div>\n                    <div class=\"name\">{{ item.name }}</div>\n                </li>\n            </ng-container>\n        </ul>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MapPinComponent } from '@acaprojects/ngx-interactive-map';\nimport { first } from 'rxjs/operators';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { MapStatus, MapListener } from '../status-managers/status.interfaces';\nimport { HashMap, Point } from 'src/app/shared/utilities/types.utilities';\nimport { MapFeature } from '@acaprojects/ngx-interactive-map/lib/helpers/map.interfaces';\nimport { MapRadiusComponent } from '@acaprojects/ngx-interactive-map';\nimport { ExploreMapSettings } from 'src/app/shared/utilities/settings.interfaces';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    BookingRulesModalComponent,\n    BookingRulesModalData,\n} from 'src/app/overlays/booking-rules-modal/booking-rules-modal.component';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: 'explore-map-view',\n    templateUrl: './map-view.component.html',\n    styleUrls: ['./map-view.component.scss'],\n})\nexport class MapViewComponent extends BaseDirective implements OnInit {\n    /** Zoom level of the map */\n    public zoom: number;\n    /** Center offset of the map */\n    public center: Point = { x: 0.5, y: 0.5 };\n    /** Mapping of elements to CSS styles */\n    public style_map: HashMap<HashMap<string | number>> = {};\n    /** List of listeners for the map */\n    public listeners: MapListener[] = [];\n    /** List of features to render on the map */\n    public features: MapFeature[] = [];\n    /** ID of the active level to display on the map */\n    public active_level: string;\n    /** Mapping of status lists to types */\n    public status_map: { spaces?: MapStatus[]; desks?: MapStatus[]; zones?: MapStatus[] } = {};\n    /** Mapping of listener lists to types */\n    public listener_map: {\n        spaces?: MapListener[];\n        desks?: MapListener[];\n        zones?: MapListener[];\n    } = {};\n    /** Mapping of features lists to types */\n    public feature_map: {\n        spaces?: MapFeature[];\n        desks?: MapFeature[];\n        zones?: MapFeature[];\n    } = {};\n    /** Message to display over the map */\n    public message: string;\n    /** Whether location data is loading */\n    public loading: boolean;\n    /** Point or element on the map to focus */\n    public focus: string | Point;\n    /** Feature on the map to focus */\n    public focus_feature: MapFeature;\n    /** Current shown time */\n    public date: number;\n    /** Application settings for the explore component */\n    public settings: ExploreMapSettings;\n\n    /** URL of the active map */\n    public get map_url(): string {\n        const level = this._org.levelWithID(this.active_level) || { map_url: '' };\n        return level.map_url || '';\n    }\n\n    /** Whether current level has booking rules associated with it */\n    public get has_booking_rules(): boolean {\n        const level = this._org.levelWithID(this.active_level) || {\n            building_id: '',\n        };\n        return !!(this._org.buildings.find((bld) => bld.id === level.building_id) || {})\n            .booking_details;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _route: ActivatedRoute,\n        private _dialog: MatDialog,\n        private _org: OrganisationService,\n        private _users: UsersService,\n        private _spaces: SpacesService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._spaces.initialised.pipe(first((_) => _)).subscribe(() => {\n            /* istanbul ignore else */\n            if (!this.active_level) {\n                const bld = this._org.building;\n                if (bld && bld.levels.length) {\n                    this.active_level = bld.levels[0].id;\n                }\n            }\n            this.settings = this._service.setting('app.explore') || {};\n            this.subscription(\n                'route.query',\n                this._route.queryParamMap.subscribe((params) => {\n                    /* istanbul ignore else */\n                    if (params.has('space')) {\n                        this.loadSpaceLocation(params.get('space'));\n                    }\n                    /* istanbul ignore else */\n                    if (params.has('user')) {\n                        this.loadUserLocation(params.get('user')).then(\n                            (user) => {\n                                this.loading = false;\n                                this.message = this.focus\n                                    ? ''\n                                    : `Unable to locate ${user ? user.name : params.get('user')}`;\n                            },\n                            (err) => {\n                                this.loading = false;\n                                this.message = `Unable to locate user`;\n                                /* istanbul ignore else */\n                                if (err && err.status !== 404) {\n                                    this._service.notifyError(\n                                        `Error loading user location. ${err.message}`\n                                    );\n                                }\n                            }\n                        );\n                    }\n                })\n            );\n        });\n    }\n\n    public openBookingRulesModal() {\n        const level = this._org.levelWithID(this.active_level) || {\n            building_id: '',\n        };\n        const building: Building =\n            this._org.buildings.find((bld) => bld.id === level.building_id) || ({} as any);\n        this._dialog.open<BookingRulesModalComponent, BookingRulesModalData>(\n            BookingRulesModalComponent,\n            {\n                data: {\n                    building,\n                },\n            }\n        );\n    }\n\n    /**\n     * Process changes to statuses\n     */\n    public processStatuses() {\n        const styles: HashMap<HashMap<string | number>> = {};\n        (this.status_map.spaces || []).forEach((space) => (styles[`#${space.id}`] = space.styles));\n        (this.status_map.desks || []).forEach((desk) => (styles[`#${desk.id}`] = desk.styles));\n        (this.status_map.zones || []).forEach((zone) => (styles[`#${zone.id}`] = zone.styles));\n        this.style_map = styles;\n    }\n\n    /**\n     * Process changes to statuses\n     */\n    public processListeners() {\n        let listeners: MapListener[] = [];\n        listeners = listeners.concat(this.listener_map.spaces || []);\n        listeners = listeners.concat(this.listener_map.desks || []);\n        listeners = listeners.concat(this.listener_map.zones || []);\n        this.listeners = listeners;\n    }\n\n    /**\n     * Process changes to statuses\n     */\n    public processFeatures() {\n        let features: MapFeature[] = [];\n        /* istanbul ignore else */\n        if (this.focus_feature) {\n            features = features.concat([this.focus_feature]);\n        }\n        features = features.concat(this.feature_map.spaces || []);\n        features = features.concat(this.feature_map.desks || []);\n        features = features.concat(this.feature_map.zones || []);\n        this.features = features;\n    }\n\n    /**\n     * Load and store location details for the space\n     * @param space_id Engine system ID of the space to locate\n     */\n    private loadSpaceLocation(space_id: string) {\n        const space = this._spaces.find(space_id);\n        /* istanbul ignore else */\n        if (space) {\n            this.message = `Loading location of ${space.name}`;\n            this.loading = true;\n            this.active_level = space.level.id;\n            this.focus = `area-${space.map_id}-status`;\n            this.focus_feature = {\n                id: `area-${space.map_id}-status`,\n                coordinates: null,\n                content: MapPinComponent,\n                data: {\n                    text: space.name,\n                },\n            };\n            this.zoom = 1;\n            this.loading = false;\n            this.message = '';\n            console.log('Focus:', this.focus_feature)\n            this.processFeatures();\n        }\n    }\n\n    /**\n     * Load and store the location for the user\n     * @param user_email Email address of the selected user\n     */\n    private async loadUserLocation(user_email: string) {\n        this.focus = null;\n        this.focus_feature = null;\n        this.loading = true;\n        this.message = `Loading user details...`;\n        const user = await this._users.show(user_email);\n        /* istanbul ignore else */\n        if (!user) return user;\n        this.message = `Loading location for ${user.name}...`;\n        const location = await user.locate();\n        /* istanbul ignore else */\n        if (!location) return user;\n        this.active_level = location.level.id;\n        if (location.fixed) {\n            this.focus = location.id;\n            this.focus_feature = {\n                id: location.id,\n                coordinates: null,\n                content: MapPinComponent,\n                data: {\n                    text: `${user.name} is here`,\n                },\n            };\n            this.zoom = 1;\n        } else {\n            this.focus = {\n                x: location.x,\n                y: location.y,\n            };\n            this.focus_feature = {\n                coordinates: {\n                    x: location.x,\n                    y: location.y,\n                },\n                content: MapRadiusComponent,\n                data: {\n                    text: `${user.name} is here`,\n                    diameter: location.confidence || 5,\n                },\n            };\n        }\n        this.zoom = 1;\n        this.loading = false;\n        this.message = '';\n        this.processFeatures();\n        return user;\n    }\n}\n","<div class=\"map-view\">\n    <div class=\"header\">\n        <explore-search></explore-search>\n    </div>\n    <div class=\"body\">\n        <div class=\"status-list\" hidden>\n            <i\n                space-status\n                [zone]=\"active_level\"\n                [date]=\"date\"\n                (status)=\"status_map.spaces = $event; processStatuses()\"\n                (listeners)=\"listener_map.spaces = $event; processListeners()\"\n                (features)=\"feature_map.spaces = $event; processFeatures()\"\n            ></i>\n            <i desk-status [zone]=\"active_level\" (status)=\"status_map.desks = $event; processStatuses()\"></i>\n        </div>\n        <a-map-controls overlay [(level)]=\"active_level\" (levelChange)=\"zoom = 1; center = { x: .5, y: .5 }\"></a-map-controls>\n        <button mat-icon-button class=\"rules\" name=\"booking-rules\" *ngIf=\"has_booking_rules\" (tapped)=\"openBookingRulesModal()\">i</button>\n        <a-map\n            [(zoom)]=\"zoom\"\n            [(center)]=\"center\"\n            [src]=\"map_url\"\n            [css]=\"style_map\"\n            [listeners]=\"listeners\"\n            [features]=\"features\"\n            [focus]=\"focus\"\n        >\n            <mat-spinner diameter=\"32\"></mat-spinner>\n        </a-map>\n        <a-zoom-controls overlay [(zoom)]=\"zoom\" [(position)]=\"center\"></a-zoom-controls>\n        <a-map-legend overlay></a-map-legend>\n        <div class=\"message\" *ngIf=\"message\">\n            <div class=\"text\">{{ message }}</div>\n            <div class=\"loader\">\n                <mat-progress-bar mode=\"indeterminate\" *ngIf=\"loading\"></mat-progress-bar>\n            </div>\n        </div>\n    </div>\n    <a-timeline *ngIf=\"settings?.show_timeline\" [(date)]=\"date\"></a-timeline>\n</div>\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { generateBookingForm, statusFromBookings } from 'src/app/services/data/bookings/booking.utilities';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { UsersService } from 'src/app/services/data/users/users.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nimport * as dayjs from 'dayjs';\n\nexport interface ExploreBookingModalData {\n    /** Unix epoch in ms of the booking start time */\n    date: number;\n    /** Space to make the booking in */\n    space: Space;\n    /** List of bookings for the active space at the current time */\n    bookings: Booking[];\n}\n\n@Component({\n    selector: 'a-explore-booking-modal',\n    templateUrl: './booking-modal.component.html',\n    styleUrls: ['./booking-modal.component.scss']\n})\nexport class ExploreBookingModalComponent extends BaseDirective {\n    /**  */\n    public booking: Booking;\n    /** Form fields for new ad-hoc booking */\n    public form: FormGroup;\n    /** Form contents to display */\n    public state: 'info' | 'form' = 'info';\n    /** Description of the current loading state */\n    public loading: string;\n    /** String of time until next booking */\n    public available_until: string;\n    /** Whether booking was successful */\n    public success: boolean;\n\n    public get is_requesting(): boolean {\n        const booking = this.booking.toJSON(true);\n        return this.space.byRequest({\n            date: this.booking.changes.date || this.booking.date || dayjs(this._data.date).valueOf(),\n            duration: this.booking.changes.duration || this.booking.duration || 30,\n            host: booking.organiser || this._users.current\n        });\n    }\n\n    /** Display string for the selected date */\n    public get date(): string {\n        const date = dayjs(this._data.date);\n        return date.format('DD MMM YYYY');\n    }\n\n    /** Display string for the selected time */\n    public get time(): string {\n        const date = dayjs(this._data.date);\n        return date.format('h:mm A');\n    }\n\n    /** Selected space */\n    public get space(): Space {\n        return this._data.space;\n    }\n\n    /** Whether space is being booked for now */\n    public get is_now(): boolean {\n        const now = dayjs();\n        const date = dayjs(this._data.date);\n        return now.isSame(date, 'm') || now.isAfter(date, 'm');\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ExploreBookingModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: ExploreBookingModalData,\n        private _router: Router,\n        private _service: ApplicationService,\n        private _users: UsersService,\n        private _spaces: SpacesService\n    ) {\n        super();\n        const date = dayjs(this._data.date);\n        this.booking = new Booking({\n            title: 'Ad-Hoc Booking',\n            date: date.valueOf(),\n            duration: 30,\n            room_ids: [this._data.space.id]\n        });\n        const status = statusFromBookings(\n            this._data.bookings,\n            this.space.bookable,\n            this.space.byRequest({\n                date: this._data.date,\n                duration: 30,\n                host: this._users.current\n            }),\n            this._data.date\n        );\n        this.available_until = status.available_until;\n    }\n\n    /**\n     * Move onto the next step of the booking flow\n     */\n    public next() {\n        if (!this.is_now) {\n            const booking = this.booking.toJSON(true);\n            localStorage.setItem('ACA_STAFF.booking_form_data', JSON.stringify({ id: 'ad-hoc', ...booking }));\n            this._router.navigate(['/book', 'space'], { queryParams: { back: '/explore' } });\n            this._dialog_ref.close();\n        } else {\n            this.form = generateBookingForm(this.booking, this._users.current, [\n                'space_list',\n                'organiser',\n                'title',\n                'duration'\n            ]);\n            this.state = 'form';\n        }\n    }\n\n    public book() {\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            this.loading = 'Checking space availability...';\n            this.checkSpaceAvailability().then(\n                () => {\n                    this.booking.save().then(\n                        () => {\n                            this.loading = null;\n                            this.success = true;\n                            this.timeout('close', () => this._dialog_ref.close(), 5000);\n                        },\n                        err => {\n                            this.loading = null;\n                            this._service.notifyError(\n                                `Error ${this.booking.id ? 'updating' : 'creating'} booking: ${err.message || err}}`\n                            );\n                        }\n                    );\n                },\n                err => {\n                    this.loading = null;\n                    this._service.notifyError(`Error checking space availability: ${err.message || err}`);\n                }\n            );\n        }\n    }\n\n    /**\n     * Check whether the selected spaces are available for the selected time period\n     */\n    private checkSpaceAvailability(): Promise<void> {\n        const spaces: Space[] = this.booking.changes.space_list || this.booking.space_list;\n        return new Promise((resolve, reject) => {\n            this._spaces.available({\n                room_ids: spaces.map(space => space.id).join(','),\n                date: this.booking.changes.date || this.booking.date,\n                duration: this.booking.changes.duration || this.booking.duration\n            }).then(\n                space_list => {\n                    for (const space of space_list) {\n                        if (!space.was_available) {\n                            return reject(\n                                `${space.name} is not available at the select time period.`\n                            );\n                        }\n                    }\n                    resolve();\n                },\n                err => reject(err)\n            );\n        });\n    }\n}\n","<ng-container *ngIf=\"!success; else done_state\">\n    <header mat-dialog-title [class.request]=\"is_requesting\">\n        <ng-container *ngIf=\"state !== 'form'\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'add' }\"></app-icon>\n            <div class=\"text\">\n                Book <span>{{ space?.name }}</span> {{ is_now ? 'from now' : 'at ' + time }}\n            </div>\n        </ng-container>\n        <ng-container *ngIf=\"state === 'form'\">\n            <div class=\"text\">\n                Book <span>{{ space?.name }}</span>\n            </div>\n        </ng-container>\n    </header>\n    <mat-dialog-content>\n        <main *ngIf=\"!loading; else load_state\">\n            <ng-container [ngSwitch]=\"state\">\n                <ng-container *ngSwitchCase=\"'form'\">\n                    <a-booking-form [form]=\"form\"></a-booking-form>\n                </ng-container>\n                <ng-container *ngSwitchDefault>\n                    <div class=\"details\">\n                        <p>{{ available_until }}</p>\n                        <p *ngIf=\"is_requesting\" i18n=\"Explore booking request details\">\n                            This space requires approval to reserve\n                        </p>\n                    </div>\n                </ng-container>\n            </ng-container>\n        </main>\n    </mat-dialog-content>\n    <mat-dialog-actions *ngIf=\"!loading\">\n        <footer>\n            <button mat-button class=\"inverse\" mat-dialog-close>Cancel</button>\n            <button mat-button (tapped)=\"state === 'form' ? book() : next()\">\n                {{ state === 'form' ? (is_requesting ? 'Request' : 'Book') : 'Yes' }}\n            </button>\n        </footer>\n    </mat-dialog-actions>\n    <ng-template #load_state>\n        <main>\n            <div class=\"info-block\">\n                <div class=\"icon\">\n                    <mat-spinner diameter=\"48\"></mat-spinner>\n                </div>\n                <div class=\"text\">{{ loading || 'Processing request...' }}</div>\n            </div>\n        </main>\n    </ng-template>\n</ng-container>\n<ng-template #done_state>\n    <header class=\"success\" [class.request]=\"is_requesting\">\n        <div class=\"text\">\n            <ng-container *ngIf=\"is_requesting\" i18n=\"Explore booking request sent\">\n                Request for <span>{{ space?.name }}</span> sent\n            </ng-container>\n            <ng-container *ngIf=\"!is_requesting\" i18n=\"Explore booking made\">\n                Booked <span>{{ space?.name }}</span>\n                {{ is_now ? 'from now' : 'at ' + time }}\n            </ng-container>\n        </div>\n        <app-icon\n            [icon]=\"{ class: 'material-icons', content: is_requesting ? 'send' : 'done' }\"\n        ></app-icon>\n    </header>\n</ng-template>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {\n    MAP_OVERLAY_DATA,\n    MAP_LOCATION\n} from '@acaprojects/ngx-interactive-map';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { statusFromBookings } from 'src/app/services/data/bookings/booking.utilities';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Point } from 'src/app/shared/utilities/types.utilities';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\nexport interface SpaceInfoData {\n    /** Current time to show details for */\n    date?: number;\n    /** Space to show details for */\n    space: Space;\n    /** Active bookings for the space */\n    bookings: Booking[];\n}\n\n@Component({\n    selector: 'a-space-info',\n    templateUrl: './space-info.component.html',\n    styleUrls: ['./space-info.component.scss']\n})\nexport class ExploreSpaceInfoComponent extends BaseDirective implements OnInit {\n    /** Status of the space */\n    public status: string;\n    /** String of time until next booking */\n    public available_until: string;\n\n    /** Named position of the element location on the map */\n    public get quadrant(): 'top left' | 'top right' | 'bottom left' | 'bottom right' {\n        /* istanbul ignore if */\n        if (!this._position) {\n            return 'top left';\n        }\n        if (this._position.y < .5) {\n            if (this._position.x < .5) {\n                return 'top left';\n            } else {\n                return 'top right';\n            }\n        } else {\n            if (this._position.x < .5) {\n                return 'bottom left';\n            } else {\n                return 'bottom right';\n            }\n        }\n    }\n\n    /** CSS class for the current status of the space */\n    public get status_class(): string {\n        return (this.status || '')\n            .toLowerCase()\n            .split(' ')\n            .join('-');\n    }\n\n    /** Space to display on the component */\n    public get space(): Space {\n        /* istanbul ignore if */\n        if (!this._data) {\n            return null;\n        }\n        return this._data.space;\n    }\n\n    /** List of bookings from the space for the currently displayed time */\n    public get bookings(): Booking[] {\n        /* istanbul ignore if */\n        if (!this._data) {\n            return [];\n        }\n        return this._data.bookings || [];\n    }\n\n    constructor(\n        @Inject(MAP_OVERLAY_DATA) private _data: SpaceInfoData,\n        @Inject(MAP_LOCATION) private _position: Point,\n        private _users: UsersService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.processBookings();\n        this.interval('update_bookings', () => this.processBookings(), 60 * 1000);\n    }\n\n    /**\n     * Calculate availability of space based off given bookings\n     */\n    public processBookings(): void {\n        /* istanbul ignore if */\n        if (!this.space) {\n            return;\n        }\n        const status = statusFromBookings(\n            this.bookings,\n            this.space.bookable,\n            this.space.byRequest({\n                date: this._data.date,\n                duration: 30,\n                host: this._users.current\n            }),\n            this._data.date\n        );\n        this.status = status.status;\n        this.available_until = status.available_until;\n    }\n}\n","<div *ngIf=\"space\" [id]=\"space.id\" [class]=\"'space-info ' + quadrant\">\n    <div class=\"arrow\"></div>\n    <div class=\"details\">\n        <div class=\"name\">{{ space.name }}</div>\n        <div class=\"availability\">\n            <div name=\"status\" [class]=\"status_class\">{{ status }}</div>\n            <div name=\"available-until\" *ngIf=\"status_class !== 'not-bookable'\">{{ available_until }}</div>\n        </div>\n    </div>\n</div>","import {\n    Component,\n    OnInit,\n    Input,\n    OnChanges,\n    SimpleChanges,\n    ViewChild,\n    ElementRef\n} from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { catchError, debounceTime, distinctUntilChanged, switchMap, map, first } from 'rxjs/operators';\nimport { Observable, Subject, of } from 'rxjs';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { UsersService } from 'src/app/services/data/users/users.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nimport * as dayjs from 'dayjs';\n\n// TODO: Add handling for role users. e.g. Fire Wardens, First Aiders\n// TODO: Add handling for searching for features\n// TODO: Add handling for searching for desks\n\n@Component({\n    selector: 'explore-search',\n    templateUrl: './search.component.html',\n    styleUrls: ['./search.component.scss']\n})\nexport class ExploreSearchComponent extends BaseDirective implements OnInit, OnChanges {\n    /** Type of data to show when searching */\n    @Input() public type: 'space' | 'user' | 'feature' | 'desk' | 'any';\n    /** Whether external changes are being processed */\n    @Input() public autofocus: boolean;\n    /** Display string for the placeholder of the search input */\n    @Input() public placeholder: string;\n    /** Whether search data is loading */\n    public loading: boolean;\n    /** Search filter value */\n    public search_str: string;\n    /** List of users from an API search */\n    public search_results$: Observable<(User | Space)[]>;\n    /** Post search and filtering list of items */\n    public results: (User | Space)[] = [];\n    /** Subject holding the value of the search */\n    public search$ = new Subject<string>();\n\n    /** Input field reference */\n    @ViewChild('input', { static: false }) private input_field: ElementRef<HTMLInputElement>;\n\n    constructor(\n        private _users: UsersService,\n        private _spaces: SpacesService,\n        private _route: ActivatedRoute,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._spaces.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.subscription(\n                'route.params',\n                this._route.paramMap.subscribe(params => {\n                    if (params.has('search_type')) {\n                        this.type = params.get('search_type') as any;\n                    }\n                })\n            );\n            // Listen for input changes\n            this.search_results$ = this.search$.pipe(\n                debounceTime(300),\n                distinctUntilChanged(),\n                switchMap(query => {\n                    this.loading = true;\n                    return query.length >= 3 && (this.type === 'user' || this.type === 'any')\n                        ? (this._users.query({\n                              q: query.slice(0, 3),\n                              cache: 60 * 1000\n                          }) as Promise<User[]>)\n                        : Promise.resolve([]);\n                }),\n                catchError(err => of([])),\n                map((users: User[]) => {\n                    const spaces = this._spaces.filter(_ => true);\n                    const search = (this.search_str || '').toLowerCase();\n                    const filter = item =>\n                        (item.name || '').toLowerCase().indexOf(search) >= 0 ||\n                        (item.email || '').toLowerCase().indexOf(search) >= 0;\n                    let result_list = [];\n                    if (this.type === 'space') {\n                        result_list = spaces;\n                    } else if (this.type === 'user') {\n                        result_list = users;\n                    } else {\n                        result_list = (spaces as any).concat(users);\n                    }\n                    this.loading = false;\n                    return result_list.filter(filter);\n                })\n            );\n            // Process API results\n            this.subscription(\n                'search_results',\n                this.search_results$.subscribe(list => {\n                    this.results = list;\n                    list.sort((a, b) => (a.name || '').localeCompare(b.name));\n                    console.log('List:', list);\n                })\n            );\n            this.search$.next(`${dayjs().valueOf()}`);\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.autofocus && this.autofocus) {\n            this.focusField();\n        }\n    }\n\n    public focusField() {\n        /* istanbul ignore else */\n        if (this.input_field && this.input_field.nativeElement) {\n            this.input_field.nativeElement.focus();\n        }\n    }\n\n    /**\n     * Update the selected item to display the location for on the map\n     * @param item Space or User to display location for\n     */\n    public selectOption(item: User | Space) {\n        if (item instanceof Space) {\n            this._router.navigate([], {\n                relativeTo: this._route,\n                queryParams: { space: item.id },\n                queryParamsHandling: 'merge'\n            });\n        } else {\n            this._router.navigate([], {\n                relativeTo: this._route,\n                queryParams: { user: item.email },\n                queryParamsHandling: 'merge'\n            });\n        }\n        this.search_str = item.name;\n    }\n}\n","<div class=\"searchbar\" *ngIf=\"type\" tabindex=\"0\" (focus)=\"focusField()\" (click)=\"focusField()\">\n    <div class=\"prefix\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'search' }\"></app-icon>\n    </div>\n    <div class=\"input\">\n        <input\n            #input\n            type=\"text\"\n            [(ngModel)]=\"search_str\"\n            (ngModelChange)=\"search$.next($event)\"\n            [matAutocomplete]=\"auto\"\n            [placeholder]=\"placeholder || 'Search...'\"\n        />\n    </div>\n    <div class=\"suffix\">\n        <mat-spinner *ngIf=\"loading\" diameter=\"32\"></mat-spinner>\n    </div>\n</div>\n<mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"selectOption($event.option.value)\">\n    <mat-option *ngFor=\"let option of results\" [value]=\"option\">\n        <div class=\"name\">{{ option.name }}</div>\n        <div class=\"email\">{{ (option.level ? option.level.name : option.email) }}&nbsp;</div>\n    </mat-option>\n</mat-autocomplete>\n","import { Component, Output, EventEmitter, OnInit, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { MapStatus } from './status.interfaces';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\n@Component({\n    selector: '[desk-status]',\n    template: `\n        <ng-content></ng-content>\n        <div class=\"bindings\" *ngIf=\"system_id\">\n            <!-- BINDINGS -->\n            <i binding [(model)]=\"in_use\" [sys]=\"system_id\" mod=\"DeskManagement\" [bind]=\"zone\" (modelChange)=\"calculateStatus()\"></i>\n            <i binding [(model)]=\"id_list\" [sys]=\"system_id\" mod=\"DeskManagement\" [bind]=\"zone + ':desk_ids'\" (modelChange)=\"calculateStatus()\"></i>\n            <i binding [(model)]=\"reserved\" [sys]=\"system_id\" mod=\"DeskManagement\" [bind]=\"zone + ':reserved'\" (modelChange)=\"calculateStatus()\"></i>\n            <i binding [(model)]=\"occupied\" [sys]=\"system_id\" mod=\"DeskManagement\" [bind]=\"zone + ':occupied_count'\"></i>\n            <i binding [(model)]=\"free\" [sys]=\"system_id\" mod=\"DeskManagement\" [bind]=\"zone + ':free_count'\"></i>\n            <!-- REMOTE EXECUTIONS -->\n            <i binding [(model)]=\"checkin\" [sys]=\"system_id\" mod=\"DeskManagement\" exec=\"manual_checkin\" [params]=\"[checkin]\"></i>\n            <i binding [(model)]=\"cancel\" [sys]=\"system_id\" mod=\"DeskManagement\" exec=\"cancel_reservation\" [params]=\"[]\"></i>\n        </div>\n    `\n})\nexport class ExploreDeskStatusComponent extends BaseDirective implements OnChanges {\n    /** ID of the active level */\n    @Input() public zone: string;\n    /** ID of the desk to checkin */\n    @Input() public checkin: string;\n    /** Emitter for changes to the desk status */\n    @Output() public status = new EventEmitter<MapStatus[]>();\n    /** ID of the desk management system */\n    public system_id: string;\n    /** List of desks for the active level */\n    public id_list: string[];\n    /** List of desk IDs in use on the active level */\n    public in_use: string[];\n    /** List of desk IDs that are reserved on the active level */\n    public reserved: string[];\n    /** Number of occupied desks on the active level */\n    public occupied: number = 0;\n    /** Number of free desks on the active level */\n    public free: number = 0;\n    /** Mapping of colours to statuses */\n    public colour_map: HashMap<string> = {};\n    /** Toggle for cancelling desk reservations */\n    public cancel: boolean;\n\n    constructor(private _service: ApplicationService, private _org: OrganisationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.colour_map = this._service.setting('app.explore.colors') || {};\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.zone) {\n            this.loadDesks();\n        }\n    }\n\n    public calculateStatus() {\n        const desk_list = this.id_list || [];\n        const status_list: MapStatus[] = [];\n        for (const desk_id of desk_list) {\n            const in_use = (this.in_use || []).find(id => id === desk_id);\n            const reserved = (this.reserved || []).find(id => id === desk_id);\n            const status = in_use ? 'unavailable' : reserved ? 'reserved' : 'available';\n            status_list.push({\n                id: desk_id,\n                styles: {\n                    fill: this.colour_map[`desk-${status}`],\n                    stroke: this.colour_map[`desk-${status}-stroke`],\n                },\n                status_id: status\n            });\n        }\n        this.status.emit(status_list);\n    }\n\n    private loadDesks() {\n        const level = this._org.levelWithID(this.zone);\n        if (!level) { return ; }\n        const building = this._org.buildings.find(bld => bld.id === level.building_id);\n        if (!building) { return; }\n        const desk_management = building.systems.desk_management;\n        if (!desk_management) { return; }\n        this.system_id = desk_management;\n    }\n}\n","import {\n    Component,\n    Input,\n    Output,\n    EventEmitter,\n    OnInit,\n    OnDestroy,\n    SimpleChanges,\n    OnChanges,\n} from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { ExploreSpaceInfoComponent } from '../overlays/space-info/space-info.component';\nimport { MapStatus, MapListener, SpaceStatus } from './status.interfaces';\n\nimport * as dayjs from 'dayjs';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    ExploreBookingModalComponent,\n    ExploreBookingModalData,\n} from '../overlays/booking-modal/booking-modal.component';\nimport { MapFeature } from '@acaprojects/ngx-interactive-map/lib/helpers/map.interfaces';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: '[space-status]',\n    template: `\n        <div class=\"bindings\" *ngIf=\"space_list && is_today\">\n            <i\n                *ngFor=\"let space of space_list\"\n                binding\n                [sys]=\"space.id\"\n                mod=\"Bookings\"\n                bind=\"today\"\n                (modelChange)=\"processSpaceBookings(space, $event)\"\n            ></i>\n        </div>\n        <ng-content></ng-content>\n    `,\n})\nexport class ExploreSpaceStatusComponent extends BaseDirective\n    implements OnInit, OnChanges, OnDestroy {\n    /** ID of the zone to grab the spaces */\n    @Input() public zone: string;\n    /** Updates the status based of the given time. Unix epoch in milliseconds */\n    @Input() public date: number;\n    /** Emitter for changes to the space status */\n    @Output() public status = new EventEmitter<MapStatus[]>();\n    /** Emitter for changes to the space status */\n    @Output() public listeners = new EventEmitter<MapListener[]>();\n    /** Emitter for changes to the space status */\n    @Output() public features = new EventEmitter<MapFeature[]>();\n    /** List of spaces to grab the statuses for */\n    public space_list: Space[] = [];\n    /** Mapping of spaces to active bookings */\n    public active_bookings: HashMap<Booking[]> = {};\n    /** Mapping of colours to statuses */\n    public colour_map: HashMap<string> = {};\n\n    /** Whether selected date time is the current day */\n    public get is_today() {\n        return dayjs().isSame(dayjs(this.date), 'd');\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _users: UsersService,\n        private _spaces: SpacesService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.colour_map = this._service.setting('app.explore.colors') || {};\n            this.subscription(\n                'spaces',\n                this._spaces.listen('list').subscribe(() => this.loadSpaces())\n            );\n            this.interval(\n                'update_status',\n                () => {\n                    this.updateSpaceBookings();\n                    this.calculateStatus();\n                },\n                60 * 1000\n            );\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.zone || changes.date) {\n            this.loadSpaces();\n        }\n        if (changes.zone) {\n            this.clearSpaces();\n        }\n    }\n\n    public ngOnDestroy() {\n        this.clearSpaces();\n    }\n\n    /**\n     * Determine the availability statuses for all the spaces in the set zone\n     */\n    public calculateStatus() {\n        this.timeout('process_statuses', () => {\n            const statuses: MapStatus[] = [];\n            for (const space of this.space_list) {\n                const status = this.getStatus(space, this.date);\n                const id =\n                    space.map_id.indexOf('area') < 0 ? `area-${space.map_id}-status` : space.map_id;\n                statuses.push({\n                    id,\n                    styles: {\n                        fill: this.colour_map[`space-${status}`] || '#000',\n                        opacity: 0.6,\n                    },\n                    status_id: status,\n                });\n            }\n            this.status.emit(statuses);\n        });\n    }\n\n    /**\n     * Get the status of the space at the set time\n     * @param space Space to get the status for\n     */\n    private getStatus(space: Space, datetime?: number): SpaceStatus {\n        if (!space.bookable) {\n            return 'not-bookable';\n        }\n        const bookings = this.active_bookings[space.id] || [];\n        const date = dayjs(datetime).startOf('m').second(1);\n        const current_booking = bookings.find((booking) => {\n            const start = dayjs(booking.date).startOf('m');\n            const end = start.add(booking.duration, 'm');\n            return date.isAfter(start, 's') && date.isBefore(end, 'm');\n        });\n        if (current_booking) {\n            return 'unavailable';\n        }\n        const options = {\n            date: dayjs(this.date).valueOf(),\n            duration: 30,\n            host: this._users.current,\n        };\n        const rules = space.rulesFor(options);\n        if (rules.hide) {\n            return 'not-bookable';\n        } else if (!rules.auto_approve) {\n            return 'requestable';\n        }\n        return 'available';\n    }\n\n    /**\n     * Process raw booking data for the given space\n     * @param space Space associated with the bookings\n     * @param data List of booking data\n     */\n    public processSpaceBookings(space: Space, data: HashMap[]) {\n        this.timeout(\n            `space-${space.id}`,\n            () => {\n                const bookings = (data || []).map(\n                    (bkn_data) => new Booking({ ...bkn_data, room_ids: [space.id] })\n                );\n                this.active_bookings[space.id] = bookings;\n                this.calculateStatus();\n            },\n            10\n        );\n    }\n\n    /**\n     * Update the booking data for space on future dates\n     */\n    public updateSpaceBookings() {\n        /* istanbul ignore else */\n        if (this.is_today) {\n            return;\n        }\n        this.timeout(\n            'update_spaces',\n            () => {\n                const date = dayjs(this.date).startOf('d');\n                this._spaces\n                    .query({\n                        from: date.unix(),\n                        to: date.endOf('d').unix(),\n                        show_declined: false,\n                        zone_ids: this.zone,\n                        cache: 10 * 1000,\n                    })\n                    .then((spaces) => {\n                        spaces.forEach((space) =>\n                            this.processSpaceBookings(space, [...space.bookings])\n                        );\n                    });\n            },\n            50\n        );\n    }\n\n    /**\n     * Load listeners for space data\n     */\n    private loadSpaces() {\n        this.space_list = this._spaces.filter((space) => space.zones.indexOf(this.zone) >= 0);\n        const listeners: MapListener[] = [];\n        for (const space of this.space_list) {\n            const id =\n                space.map_id.indexOf('area') < 0 ? `area-${space.map_id}-status` : space.map_id;\n            listeners.push({\n                id,\n                event: 'mouseenter',\n                callback: () => this.showSpaceInfo(space),\n            });\n            listeners.push({\n                id,\n                event: 'mouseleave',\n                callback: () => this.features.emit([]),\n            });\n            if (space.bookable) {\n                listeners.push({\n                    id,\n                    event: 'click',\n                    callback: () => this.openBookingModal(space),\n                });\n            }\n        }\n        this.listeners.emit(listeners);\n        this.updateSpaceBookings();\n        this.calculateStatus();\n    }\n\n    /**\n     * Clear current space and booking data\n     */\n    private clearSpaces() {\n        delete this.active_bookings;\n        this.active_bookings = {};\n    }\n\n    /**\n     * Update features to include space info for a space\n     * @param space Space to show details for\n     */\n    private showSpaceInfo(space: Space) {\n        const id = space.map_id.indexOf('area') < 0 ? `area-${space.map_id}-status` : space.map_id;\n        this.features.emit([\n            {\n                id,\n                coordinates: null,\n                content: ExploreSpaceInfoComponent,\n                data: {\n                    space,\n                    bookings: this.active_bookings[space.id],\n                    date: this.date,\n                },\n            },\n        ]);\n    }\n\n    /**\n     * Open explore booking modal for the given space\n     * @param space Space to make booking for\n     */\n    private openBookingModal(space: Space) {\n        const status = this.getStatus(space, this.date);\n        if (status !== 'unavailable' && status !== 'not-bookable') {\n            this._dialog.open<ExploreBookingModalComponent, ExploreBookingModalData>(\n                ExploreBookingModalComponent,\n                {\n                    width: 'auto',\n                    height: 'auto',\n                    data: {\n                        date: this.date,\n                        space,\n                        bookings: this.active_bookings[space.id],\n                    },\n                }\n            );\n        } else {\n            this._service.notifyInfo(\n                `${space.name} is unavailable at the selected time. Please select another space or time and try again.`\n            );\n        }\n    }\n}\n","import {\n    Component,\n    OnInit,\n    Input,\n    Output,\n    EventEmitter,\n    ElementRef,\n    Renderer2,\n    ViewChild,\n} from '@angular/core';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Identity, Point } from 'src/app/shared/utilities/types.utilities';\n\nimport * as dayjs from 'dayjs';\nimport { eventToPoint } from 'src/app/shared/utilities/general.utilities';\n\nconst BLOCK_SIZE = 30;\nconst MINUTES_IN_DAY = 24 * 60;\n\n@Component({\n    selector: 'a-timeline',\n    templateUrl: './timeline.component.html',\n    styleUrls: ['./timeline.component.scss'],\n})\nexport class TimelineComponent extends BaseDirective implements OnInit {\n    /** Currently selected datetime */\n    @Input() public date: number;\n    /** Emitter for changes to the selected datetime */\n    @Output() public dateChange = new EventEmitter<number>();\n    /** List of time blocks to select */\n    public blocks: Identity[] = [];\n    /** Starting point for time move events */\n    private _start_position: Point;\n    /** Bounding box of the timeline container */\n    private _box: ClientRect;\n\n    /** Whether selected date time is the current day */\n    public get is_today() {\n        return dayjs().isSame(dayjs(this.date), 'd');\n    }\n\n    /** Offset of the current time from the start of the day */\n    public get offset() {\n        const date = dayjs();\n        const diff = date.diff(date.startOf('d'), 'm');\n        return (diff / MINUTES_IN_DAY) * 100;\n    }\n\n    /** Details of the currently selected datetime */\n    public get active_time(): Identity {\n        const date = dayjs(this.date);\n        const diff = date.diff(date.startOf('d'), 'm');\n        return {\n            id: date.isSame(dayjs(), 'd') ? 'Today' : date.format('DD MMM YYYY'),\n            name: date.format('h:mm A'),\n            left: (diff / MINUTES_IN_DAY) * 100,\n        };\n    }\n\n    @ViewChild('container', { static: true }) private _container: ElementRef<HTMLDivElement>;\n\n    constructor(private _renderer: Renderer2) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.blocks = this.generateBlocks();\n        this.interval('check_date', () => this.checkDate(), 15 * 1000);\n    }\n\n    /**\n     * Generate the display blocks for the timeline\n     */\n    public generateBlocks(): Identity[] {\n        const start = dayjs().startOf('d');\n        const end = start.endOf('d');\n        const blocks: Identity[] = [];\n        let current_time = start;\n        while (current_time.isBefore(end)) {\n            const is_hour = current_time.minute() === 0;\n            blocks.push({\n                id: current_time.format('HH:mm'),\n                name: is_hour ? current_time.format('h') : '',\n                is_hour,\n                left: (current_time.diff(start, 'm') / MINUTES_IN_DAY) * 100,\n            });\n            current_time = current_time.add(BLOCK_SIZE, 'm');\n        }\n        return blocks;\n    }\n\n    /**\n     * Change the date of the active date time\n     * @param amount Number of days to change by\n     */\n    public changeDate(amount: number = 1) {\n        let date = dayjs(this.date);\n        date = date.add(amount, 'd');\n        const now = dayjs();\n        this.date = date.isBefore(now, 'm') ? now.valueOf() : date.valueOf();\n        this.dateChange.emit(this.date);\n    }\n\n    public startMove(event: MouseEvent | TouchEvent) {\n        const position = eventToPoint(event);\n        this._start_position = position;\n        this._box = this._container.nativeElement.getBoundingClientRect();\n        const type = event instanceof MouseEvent ? 'mouse' : 'touch';\n        this.subscription(\n            'move',\n            this._renderer.listen('window', `${type}move`, (e) => this.onMove(e))\n        );\n        this.subscription(\n            'end',\n            this._renderer.listen('window', `${type === 'mouse' ? 'mouseup' : 'touchend'}`, (e) => {\n                this.unsub('move');\n                this.unsub('end');\n            })\n        );\n    }\n\n    public onMove(event: MouseEvent | TouchEvent) {\n        const position = eventToPoint(event);\n        const y_change = (this._start_position.x - position.x) / this._box.width;\n        const time_change = -Math.round(y_change * MINUTES_IN_DAY);\n        /* istanbul ignore else */\n        if (time_change !== 0) {\n            let old_date = dayjs(this.date);\n            let date = old_date;\n            date = date.add(time_change, 'm');\n            date = date.minute(Math.floor(Math.round(date.minute() / 5)) * 5);\n            this.date = date.valueOf();\n            this.dateChange.emit(this.date);\n            /* istanbul ignore else */\n            if (Math.abs(old_date.diff(date, 'm')) > 0) {\n                this._start_position = position;\n            }\n            this.checkDate();\n        }\n    }\n\n    /** Check that active datetime is not in the past */\n    private checkDate() {\n        const date = dayjs(this.date);\n        let now = dayjs();\n        now = now.minute(Math.floor(Math.ceil(now.minute() / 5)) * 5);\n        /* istanbul ignore else */\n        if (date.isBefore(now, 'm')) {\n            this.date = now.valueOf();\n            this.dateChange.emit(this.date);\n        }\n    }\n}\n","<div class=\"not-mobile\">\n    <div class=\"timeline\" explore #container>\n        <div\n            class=\"block\"\n            *ngFor=\"let item of blocks\"\n            [class.hour]=\"item.is_hour\"\n            [style.left]=\"item.left + '%'\"\n        >\n            <div class=\"text\">{{ item.name }}</div>\n            <div class=\"bar\"></div>\n        </div>\n    </div>\n    <div class=\"offset\" *ngIf=\"is_today\" [style.width]=\"offset + '%'\"></div>\n    <div class=\"active-time\" [style.left]=\"active_time.left + '%'\">\n        <div class=\"bar\"></div>\n        <div class=\"date\">\n            <button mat-icon-button [disabled]=\"is_today\" (tapped)=\"changeDate(-1)\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_left' }\"></app-icon>\n            </button>\n            <div class=\"text\" (mousedown)=\"startMove($event)\" (touchstart)=\"startMove($event)\">{{ active_time.id }}</div>\n            <button mat-icon-button (tapped)=\"changeDate()\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_right' }\"></app-icon>\n            </button>\n        </div>\n        <div class=\"time\" (mousedown)=\"startMove($event)\" (touchstart)=\"startMove($event)\">{{ active_time.name }}</div>\n        <div class=\"triangle\"></div>\n    </div>\n</div>\n<div class=\"pickers mobile-only\">\n    <a-date-field [(ngModel)]=\"date\" offset=\"top\" (ngModelChange)=\"dateChange.emit($event)\"></a-date-field>\n    <a-time-field [(ngModel)]=\"date\" (ngModelChange)=\"dateChange.emit($event)\"></a-time-field>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { Point } from 'src/app/shared/utilities/types.utilities';\n\n@Component({\n    selector: 'a-zoom-controls',\n    templateUrl: './zoom-controls.component.html',\n    styleUrls: ['./zoom-controls.component.scss']\n})\nexport class ZoomControlsComponent implements OnInit {\n    /** Current zoom level of the map */\n    @Input() public zoom: number;\n    /** Current center position of the map */\n    @Input() public position: Point;\n    /** Emitter for changes to the zoom value */\n    @Output() public zoomChange = new EventEmitter<number>();\n    /** Emitter for changes to the position */\n    @Output() public positionChange = new EventEmitter<Point>();\n\n    public min_zoom: number = 1;\n\n    public max_zoom: number = 10;\n\n    constructor() {}\n\n    public ngOnInit(): void {\n\n    }\n\n    public zoomIn() {\n        this.zoom = (this.zoom || this.min_zoom) * 1.2;\n        if (this.zoom > this.max_zoom) {\n            this.zoom = this.max_zoom;\n        }\n        this.zoomChange.emit(this.zoom);\n    }\n\n    public zoomOut() {\n        this.zoom = (this.zoom || this.min_zoom) * (1 / 1.2);\n        if (this.zoom < this.min_zoom) {\n            this.zoom = this.min_zoom;\n        }\n        this.zoomChange.emit(this.zoom);\n    }\n\n    public reset() {\n        this.zoom = this.min_zoom;\n        this.position = { x: 0.5, y: 0.5 };\n        this.zoomChange.emit(this.zoom);\n        this.positionChange.emit(this.position);\n    }\n}\n","<div class=\"zoom-control\">\n    <button mat-icon-button name=\"zoom-in\" (tapped)=\"zoomIn()\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'add' }\"></app-icon>\n    </button>\n    <button mat-icon-button name=\"zoom-out\" (tapped)=\"zoomOut()\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'remove' }\"></app-icon>\n    </button>\n    <button mat-icon-button name=\"reset\" (tapped)=\"reset()\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'replay' }\"></app-icon>\n    </button>\n</div>\n"],"sourceRoot":"webpack:///"}