{"version":3,"sources":["webpack:///./src/app/shell/booking/booking.component.ts.BookingComponent.html","webpack:///./src/app/shell/booking/booking.component.ts","webpack:///./src/app/shell/booking/booking.module.ts","webpack:///./src/app/shell/booking/main-flow/catering/category-list/category-list.component.html","webpack:///./src/app/shell/booking/main-flow/catering/category-list/category-list.component.ts","webpack:///./src/app/shell/booking/main-flow/catering/catering-order/catering-order.component.html","webpack:///./src/app/shell/booking/main-flow/catering/catering-order/catering-order.component.ts","webpack:///./src/app/shell/booking/main-flow/catering/catering.component.html","webpack:///./src/app/shell/booking/main-flow/catering/catering.component.ts","webpack:///./src/app/shell/booking/main-flow/catering/item-list/item-list.component.html","webpack:///./src/app/shell/booking/main-flow/catering/item-list/item-list.component.ts","webpack:///./src/app/shell/booking/main-flow/catering/item-list/list-item/list-item.component.html","webpack:///./src/app/shell/booking/main-flow/catering/item-list/list-item/list-item.component.ts","webpack:///./src/app/shell/booking/main-flow/find-space/find-space.component.html","webpack:///./src/app/shell/booking/main-flow/find-space/find-space.component.ts","webpack:///./src/app/shell/booking/main-flow/find-space/space-item/space-item.component.html","webpack:///./src/app/shell/booking/main-flow/find-space/space-item/space-item.component.ts","webpack:///./src/app/shell/booking/main-flow/form/form.component.html","webpack:///./src/app/shell/booking/main-flow/form/form.component.ts","webpack:///./src/app/shell/booking/main-flow/main-flow.component.html","webpack:///./src/app/shell/booking/main-flow/main-flow.component.ts"],"names":[],"mappings":"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","file":"shell-booking-booking-module-ngfactory.js","sourcesContent":["<router-outlet></router-outlet>","\nimport { Component, OnInit } from '@angular/core';\n\nimport { AppService } from '../../services/app.service';\nimport { BaseComponent } from '../../shared/globals/base.component';\n\n@Component({\n    selector: 'app-booking',\n    template: '<router-outlet></router-outlet>',\n    styles: ['']\n})\nexport class BookingComponent extends BaseComponent implements OnInit {\n    public model: any = {};\n\n    constructor(private service: AppService) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.service.set('BANNER.block_height', 0);\n    }\n}\n","\nimport { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { RouterModule } from '@angular/router';\n\nimport { WidgetsModule } from '@acaprojects/ngx-widgets';\nimport { ACheckboxModule } from '@acaprojects/ngx-checkbox';\n\nimport { SharedComponentModule } from '../../shared/components/shared.module';\n\nimport { ROUTES } from './booking.routes';\n\nimport { BookingComponent } from './booking.component';\nimport { BookingMainFlowComponent } from './main-flow/main-flow.component';\nimport { BookingMainFlowFormComponent } from './main-flow/form/form.component';\nimport { BookingMainFlowFindSpaceComponent } from './main-flow/find-space/find-space.component';\nimport { BookingMainFlowSpaceItemComponent } from './main-flow/find-space/space-item/space-item.component';\nimport { BookingMainFlowCateringComponent } from './main-flow/catering/catering.component';\nimport { BookingMainFlowCateringOrderComponent } from './main-flow/catering/catering-order/catering-order.component';\nimport { BookingMainFlowCateringCategoryListComponent } from './main-flow/catering/category-list/category-list.component';\nimport { BookingMainFlowCateringItemListComponent } from './main-flow/catering/item-list/item-list.component';\nimport { BookingMainFlowCateringListItemComponent } from './main-flow/catering/item-list/list-item/list-item.component';\n\nimport { BookingCateringDetailsModalComponent } from './overlays/catering-details/catering-details.component';\nimport { BookingEquipmentDetailsModalComponent } from './overlays/equipment-details/equipment-details.component';\nimport { BookingDetailsModalComponent } from './overlays/booking-details/booking-details.component';\n\nconst COMPONENTS: Type<any>[] = [\n    BookingComponent,\n    BookingMainFlowComponent,\n    BookingMainFlowFormComponent,\n\n    BookingMainFlowFindSpaceComponent,\n    BookingMainFlowSpaceItemComponent,\n\n    BookingMainFlowCateringComponent,\n    BookingMainFlowCateringOrderComponent,\n    BookingMainFlowCateringCategoryListComponent,\n    BookingMainFlowCateringItemListComponent,\n    BookingMainFlowCateringListItemComponent\n];\n\nexport const BOOKING_ENTRY_COMPONENTS: Type<any>[] = [\n    BookingEquipmentDetailsModalComponent,\n    BookingCateringDetailsModalComponent,\n    BookingDetailsModalComponent\n];\n\n@NgModule({\n    declarations: [\n        ...COMPONENTS\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        WidgetsModule,\n        RouterModule.forChild(ROUTES),\n        SharedComponentModule,\n        ScrollingModule,\n        ACheckboxModule\n    ],\n})\nexport class AppBookingModule { }\n","<div class=\"catering-category-list\">\n    <div\n        class=\"card\"\n        *ngFor=\"let item of types\"\n        (touchrelease)=\"selectItem(item)\"\n        [style.background-image]=\"(item.src ? 'url(' + item.src + ')' : '') | safestyle\"\n    >\n        <div class=\"overlay\"></div>\n        <div class=\"text\">{{ item.name }}</div>\n    </div>\n</div>\n","\nimport { Component, OnInit, Input, Output, EventEmitter, SimpleChanges } from '@angular/core';\n\nimport { AppService } from '../../../../../services/app.service';\nimport { BaseComponent } from '../../../../../shared/globals/base.component';\nimport { IRoom } from '../../../../../services/data/rooms.service';\nimport { ICateringMenuCategory } from '../../../../../services/data/menu.service';\n\n@Component({\n    selector: 'catering-category-list',\n    templateUrl: './category-list.component.html',\n    styleUrls: ['./category-list.component.scss']\n})\nexport class BookingMainFlowCateringCategoryListComponent extends BaseComponent implements OnInit {\n    /** Space selected to add catering to */\n    @Input() public space: IRoom;\n    /** List of available catering item categories */\n    @Input() public types: ICateringMenuCategory[];\n    /** Emitter for the selected category */\n    @Output() public selected = new EventEmitter<ICateringMenuCategory>();\n\n    public packages: ICateringMenuCategory;\n\n    constructor(private _service: AppService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        // this.types = [\n        //     { id: 'refresh', name: 'Refreshments', src: 'assets/img/catering/refreshments.jpg' },\n        //     { id: 'brkfst', name: 'Breakfast', src: 'assets/img/catering/breakfast.jpg' },\n        //     { id: 'lunch', name: 'Lunch', src: 'assets/img/catering/lunch.jpg' },\n        //     { id: 'finger-food', name: 'Finger Food', src: 'assets/img/catering/finger-food.jpg' },\n        //     { id: 'bowl-food', name: 'Bowl Food', src: 'assets/img/catering/bowl-food.jpg' },\n        //     { id: 'bistro', name: 'Bistro Dining', src: 'assets/img/catering/bistro.jpg' },\n        //     { id: 'fork-buffet', name: 'Fork Buffet', src: 'assets/img/catering/fork-buffet.jpg' },\n        //     { id: 'private-dining', name: 'Private Fine Dining', src: 'assets/img/catering/private-dining.jpg' },\n        //     { id: 'canapes', name: 'Canapes', src: 'assets/img/catering/canapes.jpg' },\n        //     { id: 'beverages', name: 'Beverages', src: 'assets/img/catering/beverages.jpg' },\n        // ]\n    }\n\n    public selectItem(item: ICateringMenuCategory) {\n        this.selected.emit(item);\n    }\n}\n","<div class=\"details\">\n    <div class=\"title\">Order List</div>\n    <div class=\"count\">{{ count || '0' }} item{{ count === 1 ? '' : 's' }} selected</div>\n</div>\n<div class=\"contents\" [class.show]=\"show\">\n    <div class=\"rooms\" *ngFor=\"let order of order_list\">\n        <div class=\"name\"><span>Deliver to:</span> {{ order.name || 'Mystery Room' }}</div>\n        <div class=\"item\" *ngFor=\"let item of (order.items || [])\">\n            <div class=\"item-details\">\n                <div class=\"name\">{{ item.name }}</div>\n                <div class=\"cost\">{{ (item.amount * item.price) / 100 | currency:order.symbol }}</div>\n            </div>\n            <div class=\"amount\" title=\"Ctrl + Click to add/remove 10\nShift + Click to add/remove 100\">\n                <div\n                    class=\"icon less\"\n                    [class.disabled]=\"!item.amount || item.amount < 1\"\n                    (touchrelease)=\"change(item, -step)\"\n                    click-responder\n                >\n                    <i class=\"material-icons\">remove</i>\n                </div>\n                <div class=\"value\">{{ item.amount }}</div>\n                <div class=\"icon more\" [class.disabled]=\"item.amount >= (item.maximum || 100)\" (touchrelease)=\"change(item, step)\" click-responder>\n                    <i class=\"material-icons\">add</i>\n                </div>\n            </div>\n        </div>\n        <div class=\"total\"><span>Total:</span> {{ ((order.total / 100) || 0) | currency:order.symbol }}</div>\n    </div>\n</div>\n<!-- <div class=\"total\"><span>Order Total:</span> {{ total / 100 | currency }}</div> -->\n<div class=\"info\" *ngIf=\"show\">*Orders are subject to a <span>48 hour limit</span> for cancellation ahead of a meeting</div>\n<div class=\"option\">\n    <btn (tapped)=\"event.emit({ type: 'next' })\" [disabled]=\"!valid\">Add to booking &amp; continue</btn>\n</div>\n","import { Component, OnInit, EventEmitter, Input, Output } from '@angular/core';\nimport { ADynamicFormField } from '@acaprojects/ngx-dynamic-forms';\nimport { IBookingFlowEvent } from '../../main-flow.component';\nimport { BaseComponent } from '../../../../../shared/globals/base.component';\nimport { AppService } from '../../../../../services/app.service';\n\nexport interface ICateringOrderList {\n    [room_id: string]: ICateringOrder;\n}\n\nexport interface ICateringOrder {\n    room_id: string;\n    name?: string;\n    items: ICateringItem[];\n    total: number;\n    count?: number;\n    symbol?: string;\n}\n\nexport interface ICateringItem {\n    id: string;\n    name?: string;\n    amount: number;\n    unit_cost: number;\n    maximum?: number;\n    minimum?: number;\n}\n\n@Component({\n    selector: 'catering-order',\n    templateUrl: './catering-order.component.html',\n    styleUrls: ['./catering-order.component.scss']\n})\nexport class BookingMainFlowCateringOrderComponent extends BaseComponent {\n    /** Form field for storing catering data for the booking */\n    @Input() catering: ADynamicFormField;\n    /** Show contents of the order */\n    @Input() public show: boolean;\n    /** Step value for adding catering items */\n    @Input() public step: number = 1;\n    /** Emitter for form events */\n    @Output() public event = new EventEmitter<IBookingFlowEvent>();\n\n    constructor(private _service: AppService) {\n        super();\n    }\n\n    /** Whether catering order is valid */\n    public get valid(): boolean {\n        const list = this.order_list;\n        return list.reduce((v, i) => v && (i.items || []).reduce((v, j) => v && this.isValid(j), true), true);\n    }\n\n    /**\n     * Whether the given catering item/package is valid\n     * @param item\n     */\n    private isValid(item) {\n        if (item.must_select && item.amount) {\n            return item.must_select <= item.items.reduce((v, i) => v + (i.selected ? 1 : 0), 0);\n        } else if (item.items) {\n            return item.items.reduce((v, i) => v && this.isValid(i), true);\n        }\n        return true;\n    }\n\n    /** Number of total items in all room orders */\n    public get count(): number {\n        const list = this.order_list;\n        return list.reduce((v, i) => {\n            const count = (i.items || []).reduce((c, j) => c + j.amount, 0);\n            return v + count;\n        }, 0);\n    }\n\n    /** Total cost for all room orders */\n    public get total() {\n        const list = this.order_list;\n        return list.reduce((v, i) => v + i.total, 0);\n    }\n\n    /** List of catering orders from the form field */\n    public get order_list(): ICateringOrder[] {\n        const orders = this.catering ? this.catering.control.value : {};\n        const rooms = Object.keys(orders);\n        const list = rooms.map(i => {\n            if (orders[i]) {\n                const room: any = (this._service.Rooms.item(orders[i].room_id) || { name: '', level: {} });\n                orders[i].name = room.name;\n                orders[i].symbol = this.symbol(room.level.bld_id);\n                orders[i].total = (orders[i].items || []).reduce((c, j) => c + j.amount * (j.unit_cost || j.price), 0);\n            } else {\n                orders[i] = {};\n            }\n            return orders[i];\n        });\n        return list;\n    }\n\n    public symbol(bld_id: string): string {\n        const building = this._service.Buildings.get(bld_id) || {} as any;\n        return building.currency || 'USD';\n    }\n\n    public change(item: ICateringItem, amount: number) {\n        item.amount += amount;\n        // Check to make sure adding set the correct amount if adding to 0\n        if (amount > 0 && item.minimum && item.amount < item.minimum) {\n            item.amount = item.minimum;\n        }\n        // Check item quantity is within bounds\n        if (item.amount < (item.minimum || 0)) {\n            item.amount = 0;\n        } else if (item.amount > (item.maximum || 100)) {\n            item.amount = (item.maximum || 100)\n        }\n        this.catering.setValue(this.catering.getValue());\n    }\n}\n","<div class=\"catering\"\n(window:keydown.control)=\"enableModifer('control')\"\n(window:keyup.control)=\"disableModifer('control')\"\n(window:keydown.shift)=\"enableModifer('shift')\"\n(window:keyup.shift)=\"disableModifer('shift')\">\n    <div class=\"topbar\">\n        <div class=\"icon\" (touchrelease)=\"event.emit({ type: 'previous' })\">\n            <i class=\"material-icons\">arrow_back</i>\n        </div>\n        <div class=\"text\" (touchrelease)=\"event.emit({ type: 'previous' })\">{{ id ? 'Book' : 'Find Space' }}</div>\n    </div>\n    <div class=\"header\">\n        <div class=\"search\">\n            <input [(ngModel)]=\"search_str\" (ngModelChange)=\"search()\" placeholder=\"Type to search\" />\n            <div class=\"icon\">\n                <i class=\"material-icons\">search</i>\n            </div>\n            <div class=\"icon\" [class.disabled]=\"!search_str\" (touchrelease)=\"search_str = ''\">\n                <i class=\"material-icons\">close</i>\n            </div>\n        </div>\n        <div class=\"room-list\" *ngIf=\"spaces && spaces.length > 0\">\n            <div\n                class=\"room\"\n                *ngFor=\"let item of spaces\"\n                [class.active]=\"active_space && active_space.id === item.id\"\n                [class.not-catered]=\"!is_catered\"\n                (touchrelease)=\"setSpace(item)\"\n            >\n                <div class=\"name\">{{ item.name }}</div>\n                <div class=\"bar\"></div>\n            </div>\n        </div>\n    </div>\n    <div class=\"body\">\n        <ng-container *ngIf=\"active_space && !loading[active_space.id]; else loader\">\n        <catering-category-list\n            *ngIf=\"!category\"\n            [types]=\"menu_map[active_space.id]\"\n            (selected)=\"category = $event\"\n        ></catering-category-list>\n        <catering-item-list\n            *ngIf=\"category\"\n            [step]=\"step\"\n            [space]=\"active_space\"\n            [category]=\"category\"\n            [field]=\"catering\"\n            (event)=\"category = null\"\n        ></catering-item-list>\n        <div class=\"no-catering\" *ngIf=\"active_space && (!menu_map[active_space.id] || menu_map[active_space.id].length <= 0)\">\n            <div class=\"icon\">\n                <img\n                    [alt]=\"is_catered ? 'Concierge Catering' : 'No Catering Available'\"\n                    [src]=\"is_catered ? 'assets/img/concierge.svg' : 'assets/img/no-catering.svg'\"\n                />\n            </div>\n            <p>\n                <ng-container *ngIf=\"is_catered; else no_catering\">\n                    Concierge will be in touch for {{ active_building.name }} catered rooms\n                </ng-container>\n                <ng-template #no_catering>\n                    Catering is <span>not available</span> in Converge for {{ active_building.name }} spaces. \n                    Please contact the local office for more information.\n                </ng-template>\n            </p>\n            <div class=\"toggle\" *ngIf=\"is_catered\">\n                <a-checkbox\n                    [(ngModel)]=\"has_catering\"\n                    [label]=\"'Add catering to ' + (active_space.number || active_space.name) + '?'\"\n                ></a-checkbox>\n            </div>\n        </div>\n        </ng-container>\n        <ng-template #loader>\n            <div class=\"no-item\">\n                <div class=\"icon\">\n                    <spinner type=\"circle-ring\" color=\"rgba(0,0,0, .35)\"></spinner>\n                </div>\n                <div class=\"text\">Loading menu data...</div>\n            </div>\n        </ng-template>\n    </div>\n    <div class=\"footer\">\n        <div class=\"order-list\" [class.show]=\"show_order\">\n            <div class=\"bar\" (touchrelease)=\"show_order = !show_order\"></div>\n            <catering-order [step]=\"step\" [catering]=\"catering\" [show]=\"show_order\" (event)=\"event.emit($event)\"></catering-order>\n        </div>\n    </div>\n</div>\n","import { Component, Input, EventEmitter, Output, OnChanges, SimpleChanges } from '@angular/core';\nimport { ADynamicFormField } from '@acaprojects/ngx-dynamic-forms';\n\nimport { IBookingFlowEvent } from '../main-flow.component';\nimport { IRoom } from '../../../../services/data/rooms.service';\nimport { BaseComponent } from '../../../../shared/globals/base.component';\nimport { AppService } from '../../../../services/app.service';\nimport { ICateringMenuCategory } from '../../../../services/data/menu.service';\nimport { IBuilding } from '../../../../services/data/buildings.service';\n\n@Component({\n    selector: 'booking-main-flow-catering',\n    templateUrl: './catering.component.html',\n    styleUrls: ['./catering.component.scss']\n})\nexport class BookingMainFlowCateringComponent extends BaseComponent implements OnChanges {\n    /** Booking ID */\n    @Input() id: string;\n    /** List of rooms selected for the booking */\n    @Input() spaces: IRoom[];\n    /** Form field for storing catering data for the booking */\n    @Input() catering: ADynamicFormField;\n    /** Emitter for form events */\n    @Output() public event = new EventEmitter<IBookingFlowEvent>();\n\n    /** Mapping of rooms to loading states */\n    public loading: { [id: string]: boolean } = {};\n    /** Mapping of room ids to available menu categories */\n    public menu_map: { [room_id: string]: ICateringMenuCategory[] } = {};\n    /** Selected menu category */\n    public category: ICateringMenuCategory;\n    /** Value to filter menu items on */\n    public search_str: string;\n    /** Active room to add catering items to */\n    public active_space: IRoom;\n\n    public show_order: boolean;\n    /** State of modifier keys */\n    public key_states: { shift: boolean, control: boolean } = { shift: false, control: false };\n    /** Step value for adding catering items */\n    public step: number = 1;\n\n    constructor(private _service: AppService) {\n        super();\n    }\n\n    public get active_building(): IBuilding {\n        if (this.active_space && this.active_space.level) {\n            const building = this._service.Buildings.get(this.active_space.level.bld_id);\n            return building || ({} as any);\n        }\n        return {} as any;\n    }\n\n    /** Whether catering can be provided if no menu is available */\n    public get is_catered() {\n        return !!this.active_building.has_catering;\n    }\n\n    /** Whether the selected room has catering */\n    public get has_catering(): boolean {\n        if (this.active_space && this.catering) {\n            const value = this.catering.control.value;\n            const space = value[this.active_space.id] || {};\n            return (space ? space.has_catering : null) || false;\n        }\n        return false;\n    }\n\n    public set has_catering(state: boolean) {\n        if (this.active_space && this.catering) {\n            const value = this.catering.control.value;\n            const space = value[this.active_space.id] || {};\n            space.has_catering = state;\n            value[this.active_space.id] = space;\n            this.catering.setValue(value);\n        }\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.spaces && this.spaces) {\n            if (!this.active_space || this.spaces.findIndex(i => i.id === this.active_space.id) < 0) {\n                this.active_space = this.spaces[0];\n            }\n            this.loadMenu();\n        }\n    }\n\n    /**\n     * Load menu categories for the selected rooms\n     */\n    public loadMenu() {\n        if (this.spaces && this.spaces instanceof Array) {\n            this.spaces.forEach(i => {\n                this.loading[i.id] = true;\n                this.menu_map[i.id] = null;\n                this._service.Menu.query({ room_id: i.id }).then(\n                    list => {\n                        this.loading[i.id] = false;\n                        this.menu_map[i.id] = list || [];\n                    },\n                    () => {\n                        this.loading[i.id] = false;\n                        this.menu_map[i.id] = [];\n                    }\n                );\n            });\n        }\n    }\n\n    /**\n     * Update the active space\n     * @param space New active space\n     */\n    public setSpace(space: IRoom) {\n        this.category = null;\n        this.timeout('set_space', () => (this.active_space = space), 100);\n    }\n\n    /**\n     * Filter category items\n     */\n    public search() {\n        if (this.active_space && this.search_str) {\n            const search = this.search_str.toLowerCase();\n            const categories = this.menu_map[this.active_space.id];\n            const list = {\n                id: 'search',\n                name: 'Search results',\n                src: '',\n                package: false,\n                zones: [],\n                items: categories.reduce((v, i) => {\n                    v = v.concat(\n                        i.items.filter((j: any) => {\n                            if (j.items) {\n                                return (\n                                    j.name.toLowerCase().indexOf(search) >= 0 ||\n                                    j.items.findIndex(k => k.name.toLowerCase().indexOf(search) >= 0) >= 0\n                                );\n                            }\n                            return j.name.toLowerCase().indexOf(search) >= 0;\n                        })\n                    );\n                    return v;\n                }, [])\n            };\n            this.category = list;\n        } else {\n            this.category = null;\n        }\n    }\n\n    /** Enable a step modifier key */\n    public enableModifer(mod: 'shift' | 'control') {\n        this.key_states[mod] = true;\n        this.updateStep();\n    }\n\n    /** Disable a step modifier key */\n    public disableModifer(mod: 'shift' | 'control') {\n        this.key_states[mod] = false;\n        this.updateStep();\n    }\n\n    /** Update the increment and decrement step value */\n    public updateStep() {\n        this.step = this.key_states.shift ? 100 : (this.key_states.control ? 10 : 1);\n    }\n}\n","<div class=\"catering-item-list\">\n    <div class=\"category-header\">\n        <div class=\"heading\">{{ category.name }}</div>\n        <div class=\"back\" (touchrelease)=\"event.emit()\">\n            <div class=\"icon\">\n                <i class=\"material-icons\">keyboard_arrow_left</i>\n            </div>\n            <div class=\"text\">Categories</div>\n        </div>\n    </div>\n    <ng-container *ngIf=\"category && category.items && category.items.length > 0; else empty\">\n        <div class=\"item\" *ngFor=\"let item of category.items\">\n            <catering-item [step]=\"step\" [space]=\"space\" [field]=\"field\" [parent]=\"category\" [item]=\"item\" [(selected)]=\"item.selected\"></catering-item>\n        </div>\n    </ng-container>\n    <ng-template #empty>\n        <div class=\"no-item\">\n            <div class=\"icon\">\n                <i class=\"material-icons\">close</i>\n            </div>\n            <div class=\"text\">No matching items</div>\n        </div>\n    </ng-template>\n</div>","\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { ADynamicFormField } from '@acaprojects/ngx-dynamic-forms';\n\nimport { BaseComponent } from '../../../../../shared/globals/base.component';\nimport { ICateringMenuCategory } from '../../../../../services/data/menu.service';\nimport { IRoom } from '../../../../../services/data/rooms.service';\n\n@Component({\n    selector: 'catering-item-list',\n    templateUrl: './item-list.component.html',\n    styleUrls: ['./item-list.component.scss']\n})\nexport class BookingMainFlowCateringItemListComponent extends BaseComponent {\n    /** Space selected to add catering to */\n    @Input() public space: IRoom;\n    /** Selected category of items to display */\n    @Input() category: ICateringMenuCategory;\n    /** Field for storing ordered catering items */\n    @Input() field: ADynamicFormField;\n    /** Event emitter for item listings */\n    @Output() public event = new EventEmitter();\n    /** Step value for adding catering items */\n    @Input() public step: number = 1;\n\n}\n\n","<div\n    class=\"catering-list-item\"\n    [attr.item-id]=\"item?.id\"\n    [class.simple]=\"simple\"\n    (touchrelease)=\"toggle()\"\n>\n    <div class=\"details\">\n        <div\n            class=\"image\"\n            [style.background-image]=\"(item.src ? 'url(' + item.src + ')' : '') | safestyle\"\n        >\n        </div>\n        <div class=\"info\" (touchrelease)=\"show_list = !show_list\">\n            <div class=\"name\">{{ item.name }}</div>\n            <div class=\"count\" *ngIf=\"!item.package\">\n                {{ item.price / 100 | currency: symbol }}\n                {{\n                    (item.price ? '| ' : '') + item.description ||\n                        (item.items ? 'Selection of ' + item.items.length + ' items' : '') ||\n                        'No description'\n                }}\n            </div>\n            <div class=\"count\" *ngIf=\"item.package\">\n                {{ item.price / 100 | currency: symbol }}\n                {{ item.description ? (item.price ? '| ' : '') + item.description : '' }}\n                {{ item.minimum ? ' | Minimum of ' + item.minimum : '' }}\n                {{ item.must_select ? ' | Select ' + item.must_select + ' from the below options' : '' }}\n            </div>\n        </div>\n        <div\n            class=\"amount\"\n            *ngIf=\"!parent.package && !parent.must_select && item.price; else radio_option\"\n            title=\"Ctrl + Click to add/remove 10\nShift + Click to add/remove 100\"\n        >\n            <div\n                class=\"icon less\"\n                [class.disabled]=\"!item.amount || item.amount <= 0\"\n                (touchrelease)=\"remove(item)\"\n                click-responder\n            >\n                <i class=\"material-icons\">remove</i>\n            </div>\n            <div class=\"value\">{{ item.amount || '0' }}</div>\n            <div\n                class=\"icon more\"\n                [class.disabled]=\"item.amount >= (item.maximum || 100)\"\n                (touchrelease)=\"add(item)\"\n                click-responder\n            >\n                <i class=\"material-icons\">add</i>\n            </div>\n        </div>\n        <ng-template #radio_option>\n            <div class=\"amount select\" *ngIf=\"!item.package\">\n                <radio-btn *ngIf=\"parent.must_select === 1\" [model]=\"selected\"></radio-btn>\n                <a-checkbox *ngIf=\"parent.must_select > 1\" [ngModel]=\"selected\"></a-checkbox>\n            </div>\n        </ng-template>\n    </div>\n    <div class=\"sub-items\" *ngIf=\"item && item.items\" [@show]=\"show_list ? 'show' : 'hide'\">\n        <div class=\"item\" *ngFor=\"let itm of item.items\" [class.selection]=\"itm.items && itm.items.length > 0\">\n            <catering-item\n                [simple]=\"true\"\n                [space]=\"space\"\n                [field]=\"field\"\n                [parent]=\"item\"\n                [item]=\"itm\"\n                [(selected)]=\"itm.selected\"\n                (selectedChange)=\"handleSelect(itm)\"\n            ></catering-item>\n            <div class=\"bar\"></div>\n        </div>\n    </div>\n</div>\n","\nimport { trigger, state, style, animate, transition } from '@angular/animations';\nimport { Component, Input, SimpleChanges, Output, EventEmitter } from '@angular/core';\nimport { ADynamicFormField } from '@acaprojects/ngx-dynamic-forms';\n\nimport { ICateringMenuItem, ICateringMenuCategory } from '../../../../../../services/data/menu.service';\nimport { BaseComponent } from '../../../../../../shared/globals/base.component';\nimport { IRoom } from '../../../../../../services/data/rooms.service';\nimport { AppService } from '../../../../../../services/app.service';\n\n@Component({\n    selector: 'catering-item',\n    templateUrl: './list-item.component.html',\n    styleUrls: ['./list-item.component.scss'],\n    animations: [\n        trigger('show', [\n            state('show', style({ opacity: 1, height: '*' })),\n            state('hide', style({ opacity: 0, height: 0 })),\n            transition('show <=> hide', animate('200ms')),\n        ])\n    ]\n})\nexport class BookingMainFlowCateringListItemComponent extends BaseComponent {\n    /** Simple display of details */\n    @Input() simple: boolean;\n    /** Space selected to add catering to */\n    @Input() public space: IRoom;\n    /** Catering parent group or category */\n    @Input() public parent: ICateringMenuCategory;\n    /** Catering item or item group */\n    @Input() public item: any;\n    /** Field for storing ordered catering items */\n    @Input() field: ADynamicFormField;\n    /** Whether the item is currently selected */\n    @Input() public selected: boolean;\n    /** Whether the item can be selected */\n    @Input() public disabled: number;\n    /** Emitter for changes to the selected amount of the item */\n    @Output() public selectedChange = new EventEmitter<boolean>();\n    /** Whether to show list of sub items */\n    public show_list: boolean;\n    /** Step value for adding catering items */\n    @Input() public step: number = 1;\n    \n    constructor(private _service: AppService) {\n        super();\n    }\n\n    /** Currency code for the active space */\n    public get symbol(): string {\n        const level = this.space.level || {} as any;\n        const building = this._service.Buildings.get(level.bld_id) || {}  as any;\n        return building.currency || 'USD';\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.field && this.field) {\n            this.subscription('control', this.field.control.valueChanges.subscribe(() => this.orderUpdated()));\n        }\n        if (changes.space && this.space) {\n            this.orderUpdated()\n        }\n    }\n\n    /**\n     * Add the given item from the catering order\n     * @param item Item to add\n     */\n    public add(item: ICateringMenuItem) {\n        if (this.field && this.space) {\n            const item_map = this.field.control.value || {};\n            if (!item_map[this.space.id]) {\n                item_map[this.space.id] = { room_id: this.space.id, name: this.space.name };\n            }\n            const item_list = item_map[this.space.id].items || [];\n            const itm = item_list.find(i => i.id === item.id || i.name === this.item.name);\n            if (itm) {\n                if (!itm.amount) { itm.amount = 0 }\n                itm.amount += this.step;\n                if (itm.amount && itm.amount < (itm.minimum || 1)) {\n                    itm.amount = Math.max(itm.minimum || 1, this.step);\n                }\n                if (itm.amount > (itm.maximum || 100)) {\n                    itm.amount = (itm.maximum || 100);\n                }\n\n            } else {\n                (item as any).amount = Math.max(1, item.minimum || 1);\n                if (item.amount > (item.maximum || 100)) {\n                    item.amount = (item.maximum || 100);\n                }\n                item_list.push({ ...item });\n            }\n            item_map[this.space.id].items = item_list;\n            this.field.setValue(item_map);\n        }\n    }\n\n    /**\n     * Remove the given item from the catering order\n     * @param item Item to remove\n     */\n    public remove(item: ICateringMenuItem) {\n        if (this.field && this.space) {\n            const item_map = this.field.control.value || {};\n            if (!item_map[this.space.id]) {\n                item_map[this.space.id] = { room_id: this.space.id, name: this.space.name };\n            }\n            let item_list = item_map[this.space.id].items || [];\n            const itm = item_list.find(i => i.id === item.id || i.name === item.name);\n            if (itm) {\n                itm.amount = (itm.amount || 0) - this.step;\n                if (itm.amount < (itm.minimum || 0)) {\n                    itm.amount = 0;\n                    item_list = item_list.filter(i => i.id !== itm.id);\n                }\n            }\n            item_map[this.space.id].items = item_list;\n            this.field.setValue(item_map);\n        }\n    }\n\n    /**\n     * Toggle the selected state of the\n     */\n    public toggle() {\n        if (this.parent && this.parent.must_select > 0) {\n            if (this.parent.must_select === 1) {\n                this.selected = true;\n            } else {\n                this.selected = !this.selected;\n            }\n            this.selectedChange.emit(this.selected);\n        }\n    }\n\n    public handleSelect(item: ICateringMenuItem) {\n        if (this.item.must_select === 1) {\n            for (const i of this.item.items) {\n                i.selected = (item.id === i.id || item.name === i.name);\n            }\n        } else if (this.item.must_select > 1 && item.selected) {\n            const active = this.item.items.reduce((v, i) => v + (i.selected ? 1 : 0), 0);\n            if (active > this.item.must_select) {\n                let diff = active - this.item.must_select;\n                for (const i of this.item.items) {\n                    if (diff > 0 && i.selected && !(item.id === i.id || item.name === i.name)) {\n                        i.selected = false;\n                        diff--;\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Update the order amounts for the local item display\n     */\n    private orderUpdated() {\n        this.timeout('order_changed', () => {\n            if (this.field && this.space && this.item) {\n                const item_map = this.field.control.value || { };\n                if (!item_map[this.space.id]) {\n                    item_map[this.space.id] = { room_id: this.space.id, name: this.space.name };\n                }\n                const item_list = item_map[this.space.id].items || [];\n                const found = item_list.find(i => i.id === this.item.id || i.name === this.item.name);\n                if (found) {\n                    this.item.amount = found.amount || 0;\n                } else {\n                    this.item.amount = 0;\n                }\n                if ((this.item as any).items) {\n                    for (const item of (this.item as any).items) {\n                        const found = item_list.find(i => i.id === item.id || i.name === item.name);\n                        if (found) {\n                            item.amount = found.amount || 0;\n                        } else {\n                            item.amount = 0;\n                        }\n                    }\n                }\n            }\n        }, 100);\n    }\n}\n","<div class=\"find-space\">\n    <div class=\"topbar\">\n        <div class=\"icon\" (touchrelease)=\"event.emit({ type: 'previous' })\">\n            <i class=\"material-icons\">arrow_back</i>\n        </div>\n        <div class=\"text\" (touchrelease)=\"event.emit({ type: 'previous' })\">Book</div>\n    </div>\n    <div class=\"header\">\n        <div class=\"location-select\">\n            <custom-dropdown klass=\"options\" [(show)]=\"show\" [content]=\"content\" [template]=\"list\">\n                <ng-template #content>\n                    <div class=\"dropdown-header\" (touchrelease)=\"show = !show\">\n                        <div class=\"image\">\n                            <img src=\"assets/img/location-img.svg\" />\n                        </div>\n                        <div class=\"text\">Select location(s)</div>\n                        <div class=\"icon\">\n                            <i class=\"material-icons\">{{ show ? 'keyboard_arrow_up' : 'keyboard_arrow_down' }}</i>\n                        </div>\n                    </div>\n                </ng-template>\n                <ng-template #list>\n                    <div class=\"item-list\">\n                        <ng-container *ngIf=\"locations && locations.length > 0\">\n                            <cdk-virtual-scroll-viewport\n                                [itemSize]=\"40\"\n                                [style.height]=\"(locations.length < 6 ? locations.length : 6) * 40 + 'px'\"\n                            >\n                                <ng-container *cdkVirtualFor=\"let item of locations; let i = index\">\n                                    <div\n                                        class=\"item\"\n                                        (touchrelease)=\"item.selected = !item.selected; filter$.next(item.id + item.selected)\"\n                                    >\n                                        <a-checkbox klass=\"dark\" [ngModel]=\"item.selected\"></a-checkbox>\n                                        <div class=\"text\">\n                                            <div class=\"code\" [title]=\"item.code\">{{ item.code }}</div>\n                                            <div class=\"name\" [title]=\"item.name\">{{ item.name }}</div>\n                                            <div class=\"address\" [title]=\"item.address\">{{ item.address }}</div>\n                                        </div>\n                                    </div>\n                                </ng-container>\n                            </cdk-virtual-scroll-viewport>\n                        </ng-container>\n                    </div>\n                </ng-template>\n            </custom-dropdown>\n        </div>\n        <div class=\"selected-locations\">\n            <ng-container *ngFor=\"let item of locations\">\n                <div class=\"location\" *ngIf=\"item.selected\">\n                    <div class=\"icon close\" (touchrelease)=\"item.selected = false; filter$.next(item.id + item.selected)\">\n                        <i class=\"material-icons\">close</i>\n                    </div>\n                    <div class=\"text\">({{ item.code }}) {{ item.name }}</div>\n                </div>\n            </ng-container>\n        </div>\n    </div>\n    <div class=\"body\">\n        <ng-container *ngIf=\"!loading\">\n            <cdk-virtual-scroll-viewport [itemSize]=\"120\">\n                <div class=\"item\" *cdkVirtualFor=\"let item of shown_spaces || []\">\n                    <booking-main-flow-space-item [space]=\"item\" [(selected)]=\"item.selected\" (selectedChange)=\"setState(item, $event)\"></booking-main-flow-space-item>\n                </div>\n            </cdk-virtual-scroll-viewport>\n        </ng-container>\n        <div class=\"no-item center\" *ngIf=\"!shown_spaces || shown_spaces.length <= 0 || loading\">\n            <div class=\"icon\">\n                <i class=\"material-icons\" *ngIf=\"!loading\">close</i>\n                <spinner *ngIf=\"loading\" type=\"circle-ring\" color=\"rgba(0,0,0,.6)\"></spinner>\n            </div>\n            <div class=\"text\" *ngIf=\"!loading\">No available rooms</div>\n        </div>\n    </div>\n    <div class=\"footer\">\n        <div class=\"date\">\n            <div class=\"arrow\" [class.disabled]=\"is_today\" (touchrelease)=\"changeDate(-1)\">\n                <i class=\"material-icons\">keyboard_arrow_left</i>\n            </div>\n            <div class=\"display\">{{ date_display }}</div>\n            <div class=\"arrow\" (touchrelease)=\"changeDate(1)\">\n                <i class=\"material-icons\">keyboard_arrow_right</i>\n            </div>\n        </div>\n        <div class=\"next\">\n            <btn [disabled]=\"!spaces || !spaces.control.value || spaces.control.value.length <= 0\" (tapped)=\"event.emit({ type: 'next' })\">\n                Next\n            </btn>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter, SimpleChanges } from '@angular/core';\nimport { ADynamicFormField } from '@acaprojects/ngx-dynamic-forms';\nimport { Subject } from 'rxjs';\nimport { debounceTime, switchMap } from 'rxjs/operators';\n\nimport { IBookingFlowEvent } from '../main-flow.component';\nimport { IBuilding } from '../../../../services/data/buildings.service';\nimport { BaseComponent } from '../../../../shared/globals/base.component';\nimport { AppService } from '../../../../services/app.service';\nimport { IRoom, IRoomAvailabilityRequest } from '../../../../services/data/rooms.service';\nimport { IUser } from '../../../../services/data/users.service';\nimport { rulesForSpace } from '../../../../shared/utilities/booking.utilities';\n\nimport * as dayjs from 'dayjs';\nimport { Utils } from '../../../../shared/utility.class';\n\n@Component({\n    selector: 'booking-main-flow-find-space',\n    templateUrl: './find-space.component.html',\n    styleUrls: ['./find-space.component.scss']\n})\nexport class BookingMainFlowFindSpaceComponent extends BaseComponent implements OnInit {\n    /** Date time to search for free rooms */\n    @Input('dateField') public date_field: ADynamicFormField;\n    /** Available slot size to search for free rooms */\n    @Input() public duration: number;\n    /** Whether booking is all day */\n    @Input() public all_day: boolean;\n    /** Selected host for the booking being created */\n    @Input() public user: IUser;\n    /** Timestamp for the end of recurrence period */\n    @Input() public recurr_end: number;\n    /** Form field for selected spaces */\n    @Input() public spaces: ADynamicFormField;\n    /** Emitter for form events */\n    @Output() public event = new EventEmitter<IBookingFlowEvent>();\n\n    /** List of available buildings to filter available rooms on */\n    public locations: IBuilding[] = [];\n    /** Whether the space results are being loaded or not */\n    public loading: boolean;\n    /** Spaces available before local filtering */\n    public available_spaces: IRoom[] = [];\n    /** Spaces available with the selected filters */\n    public shown_spaces: IRoom[] = [];\n    /** Whether to show the location dropdown list */\n    public show: boolean;\n    /** Subject for changes filters for displaying available rooms */\n    private filter$ = new Subject<any>();\n    /** Last query string used for searching for rooms */\n    private last_query = '';\n\n    constructor(private _service: AppService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        if (!this._service.ready() || this._service.Rooms.list(true).length <= 0) {\n            return this.timeout('init', () => this.ngOnInit());\n        }\n        this.last_query = '';\n        this.subscription(\n            'filter',\n            this.filter$\n                .pipe(\n                    debounceTime(500),\n                    switchMap(_ => this.search())\n                )\n                .subscribe((results: IRoom[]) => {\n                    this.available_spaces = results;\n                    this.shown_spaces = this.filter(results);\n                    this.loading = false;\n                })\n        );\n        this.subscription('building', this._service.Buildings.listen((bld) => {\n            if (bld) {\n                let active_locations = '';\n                if (localStorage) {\n                    active_locations = localStorage.getItem('STAFF.booking.filters') || '';\n                }\n                this.locations = this._service.Buildings.list().map(i => ({\n                    ...i,\n                    selected: active_locations ? active_locations.indexOf(i.id) >= 0 : i.id === bld.id\n                }));\n                this.filter$.next(Math.floor(Math.random() * 99999));\n            }\n        }));\n    }\n\n    /** Timestamp of the currently selected date */\n    public get date(): number {\n        let date: number = this.date_field ? this.date_field.getValue() : dayjs().valueOf();\n        if (this.duration > 480 || this.all_day) {\n            date = dayjs(date).startOf('d').valueOf();\n        }\n        return date;\n    }\n\n    /** Display string for the selected date */\n    public get date_display(): string {\n        return dayjs(this.date).format('ddd, DD MMM YYYY');\n    }\n\n    /** Whether the selected date is today */\n    public get is_today(): boolean {\n        const date = dayjs(this.date);\n        return dayjs().isSame(date, 'd');\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if ((changes.date_field && this.date_field) || (changes.duration && this.duration)) {\n            this.filter$.next(`${this.date}|${this.duration}`);\n        }\n    }\n\n    /**\n     * Search for available rooms matching the set filters\n     */\n    public search(): Promise<IRoom[]> {\n        const query: IRoomAvailabilityRequest = {\n            date: this.all_day ? dayjs(this.date).startOf('d').valueOf() : this.date,\n            duration: this.all_day ? 24 * 60 : this.duration,\n            hide_bookings: true\n        };\n        const locations = this.locations.reduce((v, i) => { (i as any).selected ? v.push(i.id) : ''; return v }, []);\n        if (locations.length <= 0) {\n            locations.push(this._service.Buildings.current().id);\n        }\n        const location_list = locations.join(',');\n        this.timeout('save_filters', () => {\n            if (localStorage) {\n                localStorage.setItem('STAFF.booking.filters', location_list);\n            }\n        });\n        let room_list: IRoom[] = [];\n        for (const zone of locations) {\n            room_list = room_list.concat(this._service.Rooms.list(true, zone));\n        }\n        // Filter out rooms unavailable due to booking rules\n        room_list = Utils.unique(room_list, 'id').filter(room => {\n            const bld: any = this._service.Buildings.get(room.level.bld_id) || this._service.Buildings.current() || {};\n            const rules = rulesForSpace({\n                user: this.user || this._service.Users.current(),\n                space: room,\n                time: this.date,\n                recurr_end: this.recurr_end || 0,\n                duration: this.duration,\n                rules: bld.booking_rules\n            });\n            room.book_type = rules.auto_approve ? 'Book' : 'Request';\n            return rules.hide;\n        });\n        // Limit number of rooms retrieved\n        room_list = room_list.slice(0, Math.min(100, room_list.length));\n        query.ignore_rooms = room_list.reduce((v, i) => v + (v ? ',' : '') + i.id, '');\n        query.zone_ids = location_list;\n        const query_str = JSON.stringify(query);\n        if (query_str !== this.last_query && this.locations && this.locations.length > 0) {\n            this.last_query = query_str;\n            this.loading = true;\n        }\n        return this._service.Rooms.available(query);\n    }\n\n    /**\n     * Filter rooms based booking rules\n     * @param list List of rooms\n     */\n    public filter(list: IRoom[]): IRoom[] {\n        const selected = this.spaces.control.value || [];\n        return list\n            .filter(room => {\n                const bld: any = this._service.Buildings.get(room.level.bld_id) || this._service.Buildings.current() || {};\n                const rules = rulesForSpace({\n                    user: this.user || this._service.Users.current(),\n                    space: room,\n                    time: this.date,\n                    recurr_end: this.recurr_end || 0,\n                    duration: this.duration,\n                    rules: bld.booking_rules\n                });\n                room.book_type = rules.auto_approve ? 'Book' : 'Request';\n                return !rules.hide;\n            })\n            .map(i => ({ ...i, selected: !!selected.find(j => i.id === j.id) } as any));\n    }\n\n    /**\n     * Update the list of spaces selected for the current booking\n     * @param space Space with which it's state has changed\n     * @param state New selected state of the space\n     */\n    public setState(space: IRoom, state: boolean) {\n        const list = this.spaces.control.value || [];\n        if (state) {\n            if (list.findIndex(i => i.id === space.id) < 0) {\n                this.spaces.setValue(list.concat([space]));\n            }\n        } else {\n            this.spaces.setValue(list.filter(i => i.id !== space.id));\n        }\n    }\n\n    /**\n     * Update the selected date\n     * @param value Value to change the date by. 1, 0 or -1 days\n     */\n    public changeDate(value: number) {\n        if (this.date_field) {\n            const date = dayjs(this.date);\n            const new_date = date.add(value, 'd');\n            if (!new_date.isBefore(dayjs().subtract(10, 'm'), 'm')) {\n                this.date_field.setValue(new_date.valueOf());\n                this.filter$.next(`${this.date}|${this.duration}`);\n            }\n        }\n    }\n}\n","<div class=\"space-item\" [class.request]=\"book_type === 'Request'\">\n    <div class=\"details\">\n        <div class=\"icon\">\n            <img src=\"assets/img/location.svg\" />\n        </div>\n        <div class=\"text\">\n            <div class=\"name\">{{ space?.level?.name }}, {{ space?.name }}</div>\n            <div class=\"info\" *ngIf=\"building\">({{ building.code }}) {{ building.name }}</div>\n            <div class=\"info\">Capacity: {{ space?.capacity }} {{ space && space.capacity === 1 ? 'Person' : 'People' }}</div>\n        </div>\n    </div>\n    <div class=\"options\">\n        <button click-responder (touchrelease)=\"toggle()\" [class.selected]=\"selected\">\n            {{\n                selected ? (book_type === 'Request' ? 'Requesting' : 'Selected') : book_type === 'Request' ? 'Request' : 'Select'\n            }}\n        </button>\n        <button click-responder (touchrelease)=\"showMap()\">Map</button>\n    </div>\n</div>\n","\nimport { Component, Input, Output, EventEmitter, SimpleChanges, OnChanges } from '@angular/core';\nimport { IRoom } from '../../../../../services/data/rooms.service';\nimport { BaseComponent } from '../../../../../shared/globals/base.component';\nimport { AppService } from '../../../../../services/app.service';\nimport { IBuilding } from '../../../../../services/data/buildings.service';\n\n@Component({\n    selector: 'booking-main-flow-space-item',\n    templateUrl: './space-item.component.html',\n    styleUrls: ['./space-item.component.scss']\n})\nexport class BookingMainFlowSpaceItemComponent extends BaseComponent implements OnChanges {\n    /** Space to display */\n    @Input() public space: IRoom;\n    /** Whether the space has been selected for booking */\n    @Input() public selected: boolean;\n    /** Emitter for changes to selected state of the space */\n    @Output() public selectedChange = new EventEmitter<boolean>();\n    /** Building associated with the set space */\n    public building: IBuilding;\n\n    constructor(private _service: AppService) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.space &&  this.space) {\n            this.timeout('building', () => {\n                if (this.space.level) {\n                    this.building = this._service.Buildings.get(this.space.level.bld_id);\n                }\n            }, 100);\n        }\n    }\n\n    /** Booking type for the space */\n    public get book_type() {\n        return (this.space ? this.space.book_type : null) || 'Book';\n    }\n\n    /**\n     * Toggle the selected state of the space\n     */\n    public toggle() {\n        this.selected = !this.selected;\n        this.selectedChange.emit(this.selected);\n    }\n\n    /**\n     * Open modal to show the location of the space on a map\n     */\n    public showMap() {\n        this._service.Overlay.openModal('view-room', { data: {\n            room: this.space,\n        }}, (e) => e.close());\n    }\n}\n\n","<div class=\"booking-form\">\n    <div class=\"form\">\n        <a-dynamic-form [fields]=\"fields\"></a-dynamic-form>\n        <div class=\"options\">\n            <btn (tapped)=\"next()\">Next</btn>\n        </div>\n    </div>\n</div>","import { Component, OnInit, Input, Output, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\nimport { ADynamicFormField } from '@acaprojects/ngx-dynamic-forms';\n\nimport { IBookingFlowEvent } from '../main-flow.component';\nimport { BaseComponent } from '../../../../shared/globals/base.component';\nimport { AppService } from '../../../../services/app.service';\n\n@Component({\n    selector: 'booking-main-flow-form',\n    templateUrl: './form.component.html',\n    styleUrls: ['./form.component.scss']\n})\nexport class BookingMainFlowFormComponent extends BaseComponent implements OnChanges {\n    /** List of fields to display on the form */\n    @Input() fields: ADynamicFormField[] = [];\n    /** Emitter for form events */\n    @Output() public event = new EventEmitter<IBookingFlowEvent>();\n\n    constructor(private _service: AppService) {\n        super();\n    }\n\n    /** Whether the form is valid */\n    public get valid(): boolean {\n        return this.fields.reduce((a, v) => {\n            const valid = v.children && v.children.length > 0\n                ? v.children.reduce((r, i) => r && (i.isValid() || !i.required || i.disabled), true)\n                : (v.isValid() || !v.required || v.disabled);\n            return a && valid;\n        }, true);\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.fields && this.fields) {\n            const find = this.fields.find(i => i.key === 'recurrence' || !!(i.children && i.children.find(j => j.key === 'recurrence')));\n            const field = find ? (find.key === 'recurrence' ? find : find.children.find(j => j.key === 'recurrence')) : null;\n            if (field) {\n                this.subscription('recurrence', field.action.subscribe(() => this.setRecurrence(field)));\n            }\n            const find_space = this.fields.find(i => i.key === 'room' || !!(i.children && i.children.find(j => j.key === 'room')));\n            const spaces = find_space ? (find_space.key === 'room' ? find_space : find_space.children.find(j => j.key === 'room')) : null;\n            if (spaces && !spaces.hide) {\n                this.subscription('spaces', spaces.action.subscribe(() => this.setSpaces(spaces)));\n            }\n        }\n    }\n\n    public next() {\n        this.fields.forEach(i => i.control.markAsDirty());\n        if (this.valid) {\n            this.event.emit({ type: 'next' })\n        } else {\n            this._service.error('Some of the form fields are invalid');\n        }\n    }\n\n    /**\n     * Open modal to change the selected spaces for the booking\n     * @param field Form field associated with spaces\n     */\n    public setSpaces(field: ADynamicFormField) {\n        this._service.Overlay.openModal('select-room', {\n            data: {\n                spaces: field.getValue() || [],\n                multi: true\n            }\n        }, event => {\n            if (event.type === 'Select') {\n                field.setValue(event.data.select_list || []);\n            }\n            event.close();\n        });\n    }\n\n    /**\n     * Open modal to change the recurrence options for the booking\n     * @param field Form field associated with recurrence\n     */\n    public setRecurrence(field: ADynamicFormField) {\n        this._service.Overlay.openModal('recurrence-form', { data: { form: field.getValue() } }, event => {\n            if (event.type === 'Accept') {\n                field.setValue({\n                    period: event.data.form.recurr_period,\n                    end: event.data.form.recurr_end\n                });\n            }\n            event.close();\n        });\n    }\n}\n","<ng-container [ngSwitch]=\"page\">\n    <ng-container *ngSwitchCase=\"'catering'\">\n        <booking-main-flow-catering [id]=\"id\" [spaces]=\"spaces\" [catering]=\"catering\" (event)=\"progress($event)\"> </booking-main-flow-catering>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"'space'\">\n        <booking-main-flow-find-space\n            [dateField]=\"date_field\"\n            [recurr_end]=\"recurr_end\"\n            [all_day]=\"all_day\"\n            [duration]=\"duration\"\n            [spaces]=\"space_list\"\n            (event)=\"progress($event)\"\n        ></booking-main-flow-find-space>\n    </ng-container>\n    <ng-container *ngSwitchDefault>\n        <booking-main-flow-form [fields]=\"form_fields\" (event)=\"progress($event)\"></booking-main-flow-form>\n    </ng-container>\n</ng-container>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router, NavigationEnd } from '@angular/router';\nimport { ADynamicFormField } from '@acaprojects/ngx-dynamic-forms';\n\nimport { AppService } from '../../../services/app.service';\nimport { IBooking } from '../../../services/data/bookings.service';\nimport { IRoom } from '../../../services/data/rooms.service';\nimport { BaseComponent } from '../../../shared/globals/base.component';\nimport { generateBookingFormMetadata } from '../../../shared/utilities/booking.utilities';\n\nimport { BookingEquipmentDetailsModalComponent } from '../overlays/equipment-details/equipment-details.component';\nimport { BookingCateringDetailsModalComponent } from '../overlays/catering-details/catering-details.component';\nimport { BookingDetailsModalComponent } from '../overlays/booking-details/booking-details.component';\n\nimport * as dayjs from 'dayjs';\nimport { IUser } from '../../../services/data/users.service';\nimport { formatSpaces } from '../../../shared/utilities/formatting.utilities';\nimport { ICateringOrderList } from './catering/catering-order/catering-order.component';\nimport { FormGroup } from '@angular/forms';\nimport { of } from 'rxjs';\n\nexport interface IBookingFlowEvent {\n    type: 'next' | 'previous';\n    data?: { [name: string]: any };\n}\n\n@Component({\n    selector: 'booking-main-flow',\n    templateUrl: './main-flow.component.html',\n    styleUrls: ['./main-flow.component.scss']\n})\nexport class BookingMainFlowComponent extends BaseComponent implements OnInit {\n    /** Booking ID */\n    public id: string;\n    /** List of form fields associated with a booking */\n    public form_fields: ADynamicFormField[];\n    /** Name of the current page shown on the booking flow */\n    public page: string;\n    /** Form field for listing selected catering items */\n    public catering: ADynamicFormField;\n    /** Form field for the list of selected spaces */\n    public space_list: ADynamicFormField;\n    /** Form field for the selected date */\n    public date_field: ADynamicFormField;\n\n    constructor(private _service: AppService, private _route: ActivatedRoute, private _router: Router) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        if (!this._service.ready()) {\n            return this.timeout('init', () => this.ngOnInit());\n        }\n        this.subscription(\n            'route',\n            this._route.paramMap.subscribe(params => {\n                if (params.has('page')) {\n                    this.page = params.get('page');\n                }\n            })\n        );\n        this.subscription(\n            'route_change',\n            this._router.events.subscribe(event => {\n                if (event instanceof NavigationEnd && event.url.indexOf('book') < 0) {\n                    this.clearForm();\n                }\n            })\n        );\n        this.loadForm();\n    }\n\n    /** List of selected rooms for the booking */\n    public get spaces(): IRoom[] {\n        const field = this.form_fields.find(i => i.key === 'room');\n        if (field) {\n            return field.control.value || [];\n        }\n        return [];\n    }\n\n    /** Timestamp of the end of the recurrence period */\n    public get recurr_end(): number {\n        let field = this.form_fields.find(i => i.key === 'recurrence');\n        if (field) {\n            return (field.control.value || { end: 0 }).end || 0;\n        }\n        field = this.form_fields.find(i => i.key === 'period_group');\n        if (field) {\n            return ((field.control as FormGroup).controls.recurrence.value || { end: 0 }).end || 0;\n        }\n        return 0;\n    }\n\n    /** Datetime selected for the booking */\n    public get date(): number {\n        const field = this.form_fields.find(i => i.key === 'date');\n        if (field) {\n            return field.control.value;\n        }\n        return dayjs()\n            .startOf('m')\n            .valueOf();\n    }\n\n    /** Selected duration for the booking */\n    public get duration(): number {\n        let field: any = this.form_fields.find(i => i.key === 'duration');\n        if (field) {\n            return field.control.value;\n        }\n        field = this.form_fields.find(i => i.key === 'time_group');\n        if (field) {\n            return field.control.controls.duration.value;\n        }\n        return 60;\n    }\n\n    /** Whether booking is all day */\n    public get all_day(): boolean {\n        const field = this.form_fields.find(i => i.key === 'all_day');\n        return field ? field.control.value : false;\n    }\n\n    /** Number of items in the catering order */\n    public get has_ordered(): number {\n        const empty = { control: { value: {} } };\n        const order: ICateringOrderList = (this.form_fields.find(i => i.key === 'catering') || empty).control.value;\n        return order ? Object.keys(order).reduce((v, key) => {\n            const room_order = order[key];\n            if (room_order && room_order.items) {\n                v += room_order.items.reduce((c, i) => c + (i.amount || 0), 0);\n            }\n            return v;\n        }, 0): 0;\n    }\n\n    /**\n     * Progress to the next step in the flow\n     */\n    public progress(event: IBookingFlowEvent) {\n        const empty = { control: { value: true } };\n        const catering = (this.form_fields.find(i => i.key === 'needs_catering') || empty).control.value;\n        const space = (this.form_fields.find(i => i.key === 'needs_space') || empty).control.value;\n        const id = (this.form_fields.find(i => i.key === 'id') || empty).control.value;\n        this.id = id || !space ? '10' : '';\n        if (event.type === 'next') {\n            switch (this.page) {\n                case 'catering':\n                    if (this.has_ordered > 0){\n                        this.addCateringNotes().then(() => this.confirmBooking());\n                    } else {\n                        this.confirmBooking();\n                    }\n                    break;\n                case 'space':\n                    this.addEquipment().then(() => {\n                        if (catering) {\n                            this._service.navigate(['book', 'main', 'catering']);\n                        } else {\n                            this.confirmBooking();\n                        }\n                    });\n                    break;\n                default:\n                    if (space && !id) {\n                        this._service.navigate(['book', 'main', 'space']);\n                    } else if (this.spaces && this.spaces.length > 0) {\n                        this.addEquipment().then(() => {\n                            if (catering) {\n                                this._service.navigate(['book', 'main', 'catering']);\n                            } else {\n                                this.confirmBooking();\n                            }\n                        });\n                    } else if ((space || (this.spaces && this.spaces.length)) && catering) {\n                        this._service.navigate(['book', 'main', 'catering']);\n                    } else {\n                        this.confirmBooking();\n                    }\n                    break;\n            }\n        } else if (event.type === 'previous') {\n            switch (this.page) {\n                case 'catering':\n                    if (id || !space) {\n                        // Whether space selection handled on the main form\n                        this._service.navigate(['book', 'main', 'form']);\n                    } else {\n                        this._service.navigate(['book', 'main', 'space']);\n                    }\n                    break;\n                case 'space':\n                    this._service.navigate(['book', 'main', 'form']);\n                    break;\n                default:\n                    this._service.navigate(['home']);\n                    break;\n            }\n        }\n    }\n\n    /**\n     * Clear any form data\n     */\n    private clearForm() {\n        if (localStorage) {\n            localStorage.removeItem('STAFF.booking_form');\n        }\n        this.loadForm();\n    }\n\n    /**\n     * Load old form data and intialise the form\n     */\n    private loadForm() {\n        let booking: any = {};\n        if (localStorage) {\n            booking = JSON.parse(localStorage.getItem('STAFF.booking_form') || '{}');\n        }\n        this.form_fields = generateBookingFormMetadata(\n            booking as IBooking,\n            this._service.Settings.get('app.booking.fields'),\n            this._service\n        );\n        const host = this.form_fields.find(i => i.key === 'host');\n        if (host) {\n            host.metadata = { service: this._service.Bookings, options: this.getHostOptions() };\n            host.setValue(host.getValue());\n        }\n        this.form_fields.push(\n            new ADynamicFormField({\n                key: 'id',\n                type: 'action',\n                hide: true,\n                value: booking.id\n            })\n        );\n        this.date_field = this.form_fields\n            .reduce((v, i) => v.concat(i.children && i.children.length ? i.children : [i]), [])\n            .find(i => i.key === 'date');\n        this.space_list = new ADynamicFormField({\n            key: 'room',\n            label: 'Spaces',\n            type: 'action',\n            format: formatSpaces,\n            hide: !booking.id,\n            value: booking.room || []\n        });\n        this.catering = new ADynamicFormField({\n            key: 'catering',\n            label: 'Catering',\n            type: 'action',\n            hide: true,\n            value: booking.catering || {}\n        });\n        this.form_fields.unshift(this.space_list);\n        this.form_fields.push(this.catering);\n        this.form_fields.forEach(field => {\n            if (field.children && field.children.length) {\n                field.children.forEach(sub_field => {\n                    this.subscription(\n                        sub_field.key,\n                        sub_field.control.valueChanges.subscribe(value => {\n                            if (value && sub_field.control.valid) {\n                                this.saveForm();\n                            }\n                        })\n                    );\n                });\n            } else {\n                this.subscription(\n                    field.key,\n                    field.control.valueChanges.subscribe(value => {\n                        if (value && field.control.valid) {\n                            this.saveForm();\n                        }\n                    })\n                );\n            }\n        });\n        const empty: any = { control: { value: true, valueChanges: false }, children: [] };\n        const space = (this.form_fields.find(i => i.key === 'needs_space') || empty).control.value;\n        const time = (this.form_fields.find(i => i.key === 'time_group') || empty);\n        const all_day = (this.form_fields.find(i => i.key === 'all_day') || empty);\n        (time as ADynamicFormField).setDisabled(this.duration > 450);\n        const start = time.children.find(i => i.key === 'start') || empty;\n        this.subscription('all_day_value', all_day.control.valueChanges.subscribe((state) => (start as ADynamicFormField).setDisabled(state)));\n        const id = (this.form_fields.find(i => i.key === 'id') || empty).control.value;\n        this.id = id || !space ? '10' : '';\n    }\n\n    /**\n     * Save changes to the form data\n     */\n    private saveForm() {\n        this.timeout('save_form', () => {\n            const form = this.formToBooking();\n            if (localStorage) {\n                localStorage.setItem('STAFF.booking_form', JSON.stringify(form));\n            }\n            const empty = { control: { value: true }, children: [] };\n            const time = (this.form_fields.find(i => i.key === 'time_group') || empty);\n            (time as ADynamicFormField).children[0].setDisabled(this.duration > 450 || this.all_day);\n        }, 50);\n    }\n\n    /**\n     * Convert form field data to a Booking object\n     */\n    private formToBooking(): IBooking {\n        return this.form_fields.reduce((v, i) => {\n            if (i.children && i.children.length) {\n                i.children.forEach(j => (v[j.key] = j.control.value));\n            } else {\n                v[i.key] = i.control.value;\n            }\n            return v;\n        }, {}) as IBooking;\n    }\n\n    /**\n     * Show modal to user for adding equipment details to a booking\n     */\n    private addEquipment() {\n        return new Promise((resolve, reject) => {\n            const empty = { control: { value: '' } };\n            const notes = this.form_fields.find(i => i.key === 'equipment');\n            const expected_attendees = this.form_fields.find(i => i.key === 'expected_attendees');\n            const spaces = this.form_fields.find(i => i.key === 'room');\n            const cost_code = this.form_fields.find(i => i.key === 'equipment_code');\n            this._service.Overlay.openModal(\n                'booking-equipment',\n                {\n                    cmp: BookingEquipmentDetailsModalComponent,\n                    data: {\n                        spaces: (spaces || empty).control.value || [],\n                        expected_attendees: (expected_attendees || empty).control.value || {},\n                        notes: (notes || empty).control.value,\n                        cost_code: (cost_code || empty).control.value\n                    }\n                },\n                event => {\n                    if (event.type === 'finish') {\n                        if (notes) {\n                            notes.setValue(event.data.notes);\n                        }\n                        if (expected_attendees) {\n                            expected_attendees.setValue(event.data.expected_attendees || {});\n                        }\n                        if (cost_code) {\n                            cost_code.setValue(event.data.cost_code);\n                        }\n                    }\n                    resolve();\n                    event.close();\n                }\n            );\n        });\n    }\n\n    /**\n     * Show modal for adding details to catering\n     */\n    private addCateringNotes() {\n        return new Promise((resolve, reject) => {\n            const empty = { control: { value: '' } };\n            const notes = this.form_fields.find(i => i.key === 'catering_notes');\n            const spaces = this.form_fields.find(i => i.key === 'room');\n            const cost_code = this.form_fields.find(i => i.key === 'catering_code');\n            this._service.Overlay.openModal(\n                'booking-catering-notes',\n                {\n                    cmp: BookingCateringDetailsModalComponent,\n                    data: {\n                        spaces: (spaces || empty).control.value || [],\n                        notes: (notes || empty).control.value,\n                        cost_code: (cost_code || empty).control.value\n                    }\n                },\n                event => {\n                    if (event.type === 'finish') {\n                        if (notes) {\n                            notes.setValue(event.data.notes);\n                        }\n                        if (cost_code) {\n                            cost_code.setValue(event.data.cost_code);\n                        }\n                        resolve();\n                    } else {\n                        reject();\n                    }\n                    event.close();\n                }\n            );\n        });\n    }\n\n    /**\n     * Open modal for confirming booking details\n     */\n    private confirmBooking() {\n        this.timeout(\n            'confirm-booking',\n            () => {\n                const fields: any = this.formToBooking();\n                this._service.Overlay.openModal(\n                    'confirm-booking',\n                    {\n                        cmp: BookingDetailsModalComponent,\n                        data: fields\n                    },\n                    event => {\n                        if (event.type === 'finish') {\n                            // Booking completed successfully\n                            this.clearForm();\n                            this._service.navigate(['schedule'], {\n                                host: fields.host ? fields.host.email : this._service.Users.current().email\n                            });\n                            event.close();\n                        } else if (event.type === 'new') {\n                            // User wishes to create a new booking\n                            this.clearForm();\n                            this._service.navigate(['book', 'main', 'form']);\n                        } else if (event.type === 'edit') {\n                            // User wishes to edit the booking\n                            this._service.navigate(['book', 'main', 'form']);\n                            event.close();\n                        } else {\n                            event.close();\n                        }\n                    }\n                );\n            },\n            100\n        );\n    }\n\n    /**\n     * Get list of users available to select as the meeting host\n     */\n    private getHostOptions(): IUser[] {\n        const user = this._service.Users.current();\n        const list: IUser[] = [user];\n        if (user.delegates) {\n            for (const email of user.delegates) {\n                const delegate = this._service.Users.item(email);\n                if (delegate) {\n                    list.push(delegate);\n                } else {\n                    this.timeout(`load_user|${email}`, () =>\n                        this._service.Users.show(email, { update: true }).then(() => {\n                            this.timeout('update_host_options', () => {\n                                const host = this.form_fields.find(i => i.key === 'host');\n                                if (host) {\n                                    host.metadata = { service: this._service.Bookings, options: this.getHostOptions() };\n                                    host.setValue(host.getValue());\n                                }\n                            });\n                        })\n                    );\n                }\n            }\n        }\n        return list;\n    }\n}\n"],"sourceRoot":""}