{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/overlays/booking-rules-modal/booking-rules-modal.component.ts","./src/app/overlays/booking-rules-modal/booking-rules-modal.template.html","./src/app/overlays/confirm-modal/confirm-modal.component.ts","./src/app/overlays/confirm-modal/confirm-modal.component.html","./src/app/overlays/meeting-details-overlay/catering/catering.component.ts","./src/app/overlays/meeting-details-overlay/catering/catering.component.html","./src/app/overlays/meeting-details-overlay/display/display.component.ts","./src/app/overlays/meeting-details-overlay/display/display.component.html","./src/app/overlays/meeting-details-overlay/meeting-details-overlay.component.ts","./src/app/overlays/meeting-details-overlay/meeting-details-overlay.template.html","./src/app/overlays/meeting-details-overlay/space/space.component.ts","./src/app/overlays/meeting-details-overlay/space/space.component.html","./src/app/overlays/new-user-modal/new-user-modal.component.ts","./src/app/overlays/new-user-modal/new-user-modal.component.html","./src/app/overlays/overlays.module.ts","./src/app/overlays/recurrence-modal/recurrence-modal.component.ts","./src/app/overlays/recurrence-modal/recurrence-modal.component.html","./src/app/overlays/space-select-modal/space-select-modal.component.ts","./src/app/overlays/space-select-modal/space-select-modal.component.html","./src/app/overlays/time-extension/time-extension.component.ts","./src/app/overlays/time-extension/time-extension.component.html","./src/app/overlays/view-room-modal/view-room-modal.component.ts","./src/app/overlays/view-room-modal/view-room-modal.component.html","./src/app/services/app.service.ts","./src/app/services/data/base-api.class.ts","./src/app/services/data/base.service.ts","./src/app/services/data/bookings/booking.class.ts","./src/app/services/data/bookings/booking.utilities.ts","./src/app/services/data/bookings/bookings.service.ts","./src/app/services/data/catering/catering-category.class.ts","./src/app/services/data/catering/catering-item.class.ts","./src/app/services/data/catering/catering-menu.service.ts","./src/app/services/data/catering/catering-order.class.ts","./src/app/services/data/location/location.class.ts","./src/app/services/data/location/location.utilities.ts","./src/app/services/data/organisation/building.class.ts","./src/app/services/data/organisation/level.class.ts","./src/app/services/data/organisation/organisation.class.ts","./src/app/services/data/organisation/organisation.service.ts","./src/app/services/data/service-manager.class.ts","./src/app/services/data/spaces/space.class.ts","./src/app/services/data/spaces/space.utilities.ts","./src/app/services/data/spaces/spaces.service.ts","./src/app/services/data/users/user.class.ts","./src/app/services/data/users/user.utilities.ts","./src/app/services/data/users/users.service.ts","./src/app/services/hotkeys.service.ts","./src/app/services/settings.service.ts","./src/app/shared/base.class.ts","./src/app/shared/base.directive.ts","./src/app/shared/components/custom-fields/action-field/action-field.component.ts","./src/app/shared/components/custom-fields/action-field/action-field.component.html","./src/app/shared/components/custom-fields/counter/counter.component.ts","./src/app/shared/components/custom-fields/counter/counter.component.html","./src/app/shared/components/custom-fields/date-field/date-field.component.ts","./src/app/shared/components/custom-fields/date-field/date-field.component.html","./src/app/shared/components/custom-fields/duration-field/duration-field.component.ts","./src/app/shared/components/custom-fields/duration-field/duration-field.component.html","./src/app/shared/components/custom-fields/time-field/time-field.component.ts","./src/app/shared/components/custom-fields/time-field/time-field.component.html","./src/app/shared/components/custom-fields/user-list-field/user-list-field.component.ts","./src/app/shared/components/custom-fields/user-list-field/user-list-field.component.html","./src/app/shared/components/custom-fields/user-search-field/user-search-field.component.ts","./src/app/shared/components/custom-fields/user-search-field/user-search-field.component.html","./src/app/shared/components/feedback/feedback.component.ts","./src/app/shared/components/feedback/feedback.template.html","./src/app/shared/components/footer-menu/footer-menu.component.ts","./src/app/shared/components/footer-menu/footer-menu.component.html","./src/app/shared/components/forms/booking-form/booking-form.component.ts","./src/app/shared/components/forms/booking-form/booking-form.component.html","./src/app/shared/components/forms/user-form/user-form.component.ts","./src/app/shared/components/forms/user-form/user-form.component.html","./src/app/shared/components/icon/icon.component.ts","./src/app/shared/components/icon/icon.component.html","./src/app/shared/components/login/login.component.ts","./src/app/shared/components/login/login.component.html","./src/app/shared/components/map-controls/map-controls.component.ts","./src/app/shared/components/map-controls/map-controls.component.html","./src/app/shared/components/overlay-menu/overlay-menu.component.ts","./src/app/shared/components/overlay-menu/overlay-menu.component.html","./src/app/shared/components/popout-menu/popout-menu.component.ts","./src/app/shared/components/popout-menu/popout-menu.component.html","./src/app/shared/components/searchbar/searchbar.component.ts","./src/app/shared/components/searchbar/searchbar.component.html","./src/app/shared/components/topbar-header/topbar-header.component.ts","./src/app/shared/components/topbar-header/topbar-header.component.html","./src/app/shared/components/user-avatar/user-avatar.component.ts","./src/app/shared/components/user-avatar/user-avatar.component.html","./src/app/shared/globals/angular-animations.ts","./src/app/shared/mocks/api/bookings.mock.ts","./src/app/shared/mocks/api/buildings.mock.ts","./src/app/shared/mocks/api/catering-menu.mock.ts","./src/app/shared/mocks/api/common.mock.ts","./src/app/shared/mocks/api/locations.mock.ts","./src/app/shared/mocks/api/organisation.mock.ts","./src/app/shared/mocks/api/spaces.mock.ts","./src/app/shared/mocks/api/users.mock.ts","./src/app/shared/mocks/index.ts","./src/app/shared/mocks/systems.mock.ts","./src/app/shared/shared.module.ts","./src/app/shared/utilities/api.utilities.ts","./src/app/shared/utilities/formatting.utilities.ts","./src/app/shared/utilities/general.utilities.ts","./src/app/shared/utilities/validation.utilities.ts","./src/app/shell/bookings/bookings.component.ts","./src/app/shell/bookings/bookings.component.html","./src/app/shell/bookings/bookings.module.ts","./src/app/shell/bookings/overlays/booking-confirm/booking-confirm.component.ts","./src/app/shell/bookings/overlays/booking-confirm/booking-confirm.component.html","./src/app/shell/bookings/overlays/catering-confirm-modal/catering-confirm-modal.component.ts","./src/app/shell/bookings/overlays/catering-confirm-modal/catering-confirm-modal.component.html","./src/app/shell/bookings/overlays/catering-details-modal/catering-details-modal.component.ts","./src/app/shell/bookings/overlays/catering-details-modal/catering-details-modal.component.html","./src/app/shell/bookings/overlays/package-options-modal/package-options-modal.component.ts","./src/app/shell/bookings/overlays/package-options-modal/package-options-modal.component.html","./src/app/shell/bookings/overlays/recurrence-spaces-modal/recurrence-spaces-modal.component.ts","./src/app/shell/bookings/overlays/recurrence-spaces-modal/recurrence-spaces-modal.component.html","./src/app/shell/bookings/overlays/requirement-details-modal/requirement-details-modal.component.ts","./src/app/shell/bookings/overlays/requirement-details-modal/requirement-details-modal.component.html","./src/app/shell/bookings/space-flow/catering/catering.component.ts","./src/app/shell/bookings/space-flow/catering/catering.component.html","./src/app/shell/bookings/space-flow/catering/order-details/category/category.component.ts","./src/app/shell/bookings/space-flow/catering/order-details/category/category.component.html","./src/app/shell/bookings/space-flow/catering/order-details/item/item.component.ts","./src/app/shell/bookings/space-flow/catering/order-details/item/item.component.html","./src/app/shell/bookings/space-flow/catering/order-details/order-details.component.ts","./src/app/shell/bookings/space-flow/catering/order-details/order-details.component.html","./src/app/shell/bookings/space-flow/catering/order-list/item/item.component.ts","./src/app/shell/bookings/space-flow/catering/order-list/item/item.component.html","./src/app/shell/bookings/space-flow/catering/order-list/order-list.component.ts","./src/app/shell/bookings/space-flow/catering/order-list/order-list.component.html","./src/app/shell/bookings/space-flow/find-space/filters/filters.component.ts","./src/app/shell/bookings/space-flow/find-space/filters/filters.component.html","./src/app/shell/bookings/space-flow/find-space/find-space.component.ts","./src/app/shell/bookings/space-flow/find-space/find-space.component.html","./src/app/shell/bookings/space-flow/find-space/item/item.component.ts","./src/app/shell/bookings/space-flow/find-space/item/item.component.html","./src/app/shell/bookings/space-flow/form/form.component.ts","./src/app/shell/bookings/space-flow/form/form.component.html","./src/app/shell/bookings/space-flow/space-flow.component.ts","./src/app/shell/bookings/space-flow/space-flow.component.html","./src/app/shell/explore/explore.component.ts","./src/app/shell/explore/explore.component.html","./src/app/shell/explore/explore.module.ts","./src/app/shell/explore/map-legend/map-legend.component.ts","./src/app/shell/explore/map-legend/map-legend.component.html","./src/app/shell/explore/map-view/map-view.component.ts","./src/app/shell/explore/map-view/map-view.component.html","./src/app/shell/explore/overlays/booking-modal/booking-modal.component.ts","./src/app/shell/explore/overlays/booking-modal/booking-modal.component.html","./src/app/shell/explore/overlays/space-info/space-info.component.ts","./src/app/shell/explore/overlays/space-info/space-info.component.html","./src/app/shell/explore/search/search.component.ts","./src/app/shell/explore/search/search.component.html","./src/app/shell/explore/status-managers/desk-status.component.ts","./src/app/shell/explore/status-managers/space-status.component.ts","./src/app/shell/explore/timeline/timeline.component.ts","./src/app/shell/explore/timeline/timeline.component.html","./src/app/shell/explore/zoom-controls/zoom-controls.component.ts","./src/app/shell/explore/zoom-controls/zoom-controls.component.html","./src/app/shell/home/home.component.ts","./src/app/shell/home/home.component.html","./src/app/shell/schedule/event-list/event-list.component.ts","./src/app/shell/schedule/event-list/event-list.component.html","./src/app/shell/schedule/event-list/list-item/list-item.component.ts","./src/app/shell/schedule/event-list/list-item/list-item.component.html","./src/app/shell/schedule/schedule.component.ts","./src/app/shell/schedule/schedule.template.html","./src/app/shell/schedule/schedule.module.ts","./src/app/shell/schedule/schedule.routes.ts","./src/app/shell/schedule/view-event/event-details/event-details.component.ts","./src/app/shell/schedule/view-event/event-details/event-details.component.html","./src/app/shell/schedule/view-event/event-edit/event-edit.component.ts","./src/app/shell/schedule/view-event/event-edit/event-edit.component.html","./src/app/shell/schedule/view-event/view-event.component.ts","./src/app/shell/schedule/view-event/view-event.component.html","./src/app/shell/shell.component.ts","./src/app/shell/shell.component.html","./src/environments/environment.ts","./src/environments/version.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ShellWrapperComponent } from './shell/shell.component';\nimport { HomeComponent } from './shell/home/home.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ShellWrapperComponent,\n        children: [\n            { path: 'home', component: HomeComponent },\n            {\n                path: 'book',\n                loadChildren: () =>\n                    import('./shell/bookings/bookings.module').then(m => m.BookingsModule)\n            },\n            {\n                path: 'explore',\n                loadChildren: () =>\n                    import('./shell/explore/explore.module').then(m => m.ExploreModule)\n            },\n            // {\n            //     path: 'control',\n            //     loadChildren: () =>\n            //         import('./shell/control/control.module').then(m => m.ControlModule)\n            // },\n            // {\n            //     path: 'directory',\n            //     loadChildren: () =>\n            //         import('./shell/directory/directory.module').then(m => m.DirectoryModule)\n            // },\n            {\n                path: 'schedule',\n                loadChildren: () =>\n                    import('./shell/schedule/schedule.module').then(m => m.ScheduleModule)\n            },\n            // {\n            //     path: 'help',\n            //     loadChildren: () => import('./shell/help/help.module').then(m => m.HelpModule)\n            // },\n            { path: '**', redirectTo: 'home' }\n        ]\n    },\n    { path: '**', redirectTo: 'home' }\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, { useHash: true })],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { detectIE } from './shared/utilities/general.utilities';\nimport { ApplicationService } from './services/app.service';\nimport { OrganisationService } from './services/data/organisation/organisation.service';\nimport { SpacesService } from './services/data/spaces/spaces.service';\nimport { BookingsService } from './services/data/bookings/bookings.service';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: [\n        './styles/app.component.scss',\n        './styles/custom-element.styles.scss',\n        './styles/native-element.styles.scss',\n    ],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class AppComponent {\n    constructor(\n        private _app: ApplicationService,\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _bookings: BookingsService\n    ) {\n        if (detectIE() && detectIE() < 12) {\n            location.href = `${location.origin}${location.pathname}assets/not-supported.html`;\n            return;\n        }\n    }\n}\n","<div class=\"app\">\n    <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { MAT_LABEL_GLOBAL_OPTIONS } from '@angular/material/core';\n\nimport './shared/mocks';\n\nimport { ComposerModule } from '@placeos/composer';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\n\nimport { SharedOverlaysModule } from './overlays/overlays.module';\nimport { SharedContentModule } from './shared/shared.module';\n\nimport { ShellWrapperComponent } from './shell/shell.component';\nimport { HomeComponent } from './shell/home/home.component';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        ShellWrapperComponent,\n        HomeComponent,\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        AppRoutingModule,\n        ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production }),\n        HttpClientModule,\n        FormsModule,\n        ComposerModule,\n        SharedOverlaysModule,\n        SharedContentModule\n    ],\n    providers: [\n        { provide: MAT_LABEL_GLOBAL_OPTIONS, useValue: {float: 'nevet'} }\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","\nimport { Component, Output, EventEmitter, Inject, ViewChild, ElementRef } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { DialogEvent, HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { Building, BookingRuleDetails } from 'src/app/services/data/organisation/building.class';\n\n\nexport interface BookingRulesModalData {\n    building: Building;\n}\n\n@Component({\n    selector: 'booking-rules-modal',\n    templateUrl: './booking-rules-modal.template.html',\n    styleUrls: ['./booking-rules-modal.styles.scss'],\n})\nexport class BookingRulesModalComponent extends BaseDirective {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    @ViewChild('content', { static: true }) private _content_el: ElementRef<HTMLElement>;\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: BookingRulesModalData) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.timeout('scroll', () => {\n            this._content_el.nativeElement.scrollTop = 0;\n        }, 181);\n    }\n\n    /** Name of the set building */\n    public get location(): string {\n        const building: Building = this._data.building || {} as any;\n        return building.name || '';\n    }\n\n    /** Booking rule details */\n    public get rules(): string[] {\n        const building: Building = this._data.building || {} as any;\n        const details: BookingRuleDetails = building.booking_details || {} as any;\n        return details.rules || [] as any;\n    }\n\n    /** Booking rule details */\n    public get info(): string {\n        const building: Building = this._data.building || {} as any;\n        const details: BookingRuleDetails = building.booking_details || {} as any;\n        return details.info || '';\n    }\n\n    /** Booking map rule details */\n    public get map_rules(): string[] {\n        const building: Building = this._data.building || {} as any;\n        const details: BookingRuleDetails = building.booking_details || {} as any;\n        return details.map_rules || [] as any;\n    }\n\n    /** Other special booking rules */\n    public get other_rules(): { title: string, rules: string[] }[] {\n        const building: Building = this._data.building || {} as any;\n        const details: BookingRuleDetails = building.booking_details || {} as any;\n        const rules: HashMap = (details as any).other_rules || {};\n        return Object.keys(rules).reduce((a, v) => { a.push({ title: v, rules: rules[v] || [] }); return a; }, []);\n    }\n\n    public get contact(): string {\n        const building: Building = this._data.building || {} as any;\n        const details: BookingRuleDetails = building.booking_details || {} as any;\n        return details.contact || '';\n    }\n\n    public get link(): { url?: string, name?: string } {\n        const building: Building = this._data.building || {} as any;\n        const details: BookingRuleDetails = building.booking_details || {} as any;\n        return details.link || {};\n    }\n}\n","<mat-dialog-content #content>\n    <main>\n        <div class=\"header\">Booking in {{location}}</div>\n        <div class=\"info\">{{ info || 'You may request restricted rooms but they will need to be approved by an admin' }}</div>\n        <div class=\"rules\">\n            <ul>\n                <li *ngFor=\"let item of rules\">{{item}}</li>\n            </ul>\n            <ng-container *ngIf=\"other_rules\">\n                <ng-container *ngFor=\"let ruleset of other_rules\">\n                    {{ ruleset.title }}\n                    <ul>\n                        <li *ngFor=\"let item of ruleset.rules\">{{item}}</li>\n                    </ul>\n                </ng-container>\n            </ng-container>\n            <ng-container>\n                When booking from Maps:\n                <ul *ngIf=\"!map_rules || map_rules.length <= 0; else rules_list\">\n                    <li>Rooms showing yellow are restricted and must be requested</li>\n                    <li>Rooms showing green are available to book for one hour</li>\n                    <li>Rooms showing red are booked</li>\n                    <li>Rooms showing grey are not bookable but may be used if they are empty</li>\n                </ul>\n                <ng-template #rules_list>\n                    <ul>\n                        <li *ngFor=\"let item of map_rules\">{{item}}</li>\n                    </ul>\n                </ng-template>\n            </ng-container>\n        </div>\n        <div class=\"contact\" *ngIf=\"contact\">\n            For more info email:<br><a [href]=\"'mailto:' + contact + '?subject=' + location + ' Booking Rules'\">{{contact}}</a>\n        </div>\n        <div class=\"contact\" *ngIf=\"link\">\n            <a [href]=\"link.url\">{{link.name}}</a>\n        </div>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button mat-dialog-close>Ok</button>\n    </footer>\n</mat-dialog-actions>\n\n","import { Component, Output, EventEmitter, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { ApplicationIcon } from '../../shared/utilities/settings.interfaces';\nimport { DialogEvent } from '../../shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\nexport interface ConfirmModalData {\n    /** Title of the modal */\n    title: string;\n    /** Contents of the modal */\n    content: string;\n    /** Text displaed on the confirmation button */\n    action?: string;\n    /** Icon to display on the modal */\n    icon: ApplicationIcon;\n}\n\nexport const CONFIRM_METADATA = {\n    height: 'auto',\n    width: '24em',\n    maxHeight: 'calc(100vh - 2em)',\n    maxWidth: 'calc(100vw - 2em)'\n};\n\n@Component({\n    selector: 'confirm-modal',\n    templateUrl: './confirm-modal.component.html',\n    styleUrls: ['./confirm-modal.component.scss']\n})\nexport class ConfirmModalComponent extends BaseDirective {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Loading state */\n    public loading: string;\n\n    /** Title of the confirm modal */\n    public get title(): string {\n        return (this._data ? this._data.title : null) || 'Confirm';\n    }\n\n    /** Body of the confirm modal */\n    public get content(): string {\n        return (this._data ? this._data.content : null) || 'Are you sure?';\n    }\n\n    /** Display text on the confirm button */\n    public get action(): string {\n        return (this._data ? this._data.action : null) || 'Ok';\n    }\n\n    /** Display icon properties */\n    public get icon(): ApplicationIcon {\n        return (this._data ? this._data.icon : null) || null;\n    }\n\n    constructor(\n        private _dialog: MatDialogRef<ConfirmModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: ConfirmModalData\n    ) {\n        super();\n    }\n    /**\n     * User confirmation of the content of the modal\n     */\n    public accept() {\n        this.event.emit({ reason: 'done' });\n    }\n}\n","<header>\n    <h3 mat-dialog-title>{{ title || 'Confirm' }}</h3>\n</header>\n<mat-dialog-content>\n    <div class=\"body\" *ngIf=\"!loading; else load_state\">\n        <app-icon *ngIf=\"icon\" [icon]=\"icon\"></app-icon>\n        <div class=\"content\">\n            <p [innerHTML]=\"content || 'Are you sure?'\"></p>\n        </div>\n    </div>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading\">\n    <footer>\n        <button mat-button class=\"inverse\" mat-dialog-close i18n=\"Close confirm modal\">Cancel</button>\n        <button mat-button name=\"accept\" (tapped)=\"accept()\">{{ action || 'Ok' }}</button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </div>\n</ng-template>\n","import { Component, Input } from '@angular/core';\n\nimport { CateringOrder } from '../../../services/data/catering/catering-order.class';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\n\n@Component({\n    selector: 'meeting-details-catering',\n    templateUrl: './catering.component.html',\n    styleUrls: ['./catering.component.scss']\n})\nexport class MeetingDetailsCateringComponent {\n    /** List of catering orders */\n    @Input() public catering: CateringOrder[];\n    /** Active space to display */\n    @Input() public space: Space;\n    /** Active space to display */\n    @Input() public booking: Booking;\n    /** Whether all orders should be shown */\n    public show_orders: boolean;\n\n    /** List of orders for the active space */\n    public get orders(): CateringOrder[] {\n        return (this.catering || []).filter(order => order.location_id === this.space.id);\n    }\n\n    /** Charge code for orders in the active space */\n    public get notes(): string {\n        const the_note = this.booking.notes.find(\n            note => note.type === 'catering' && note.space === this.space.id\n        );\n        return the_note ? the_note.message : '<No notes>';\n    }\n\n    /** Charge code for orders in the active space */\n    public get charge_code(): string {\n        return this.orders.length > 0 ? this.orders[0].charge_code || '<No charge code>' : '<No charge code>';\n    }\n}\n","<div class=\"catering-details\" *ngIf=\"catering && space\" [attr.space-id]=\"space.id\">\n    <div class=\"field multi\" name=\"orders\">\n        <label>Orders({{ orders.length || '0' }}):</label>\n        <div class=\"value\">\n            <div class=\"list\" [class.shown]=\"show_orders\">\n                <div\n                    class=\"list-item\"\n                    *ngFor=\"let order of orders\"\n                    [title]=\"\"\n                >\n                    <div class=\"name\">Deliver at {{ order.deliver_at_time }}</div>\n                    <div class=\"email\">{{ order.item_count }} item{{ order.item_count === 1 ? '' : 's' }}</div>\n                    <div class=\"details\">\n                        <div class=\"items\">\n                            <div class=\"item\" *ngFor=\"let item of order.items\">\n                                <div class=\"name\">{{ item.name }}</div>\n                                <div class=\"amount\">x{{ item.amount || '0' }}</div>\n                            </div>\n                        </div>\n                        <div class=\"total\"><span>Total:</span> {{ order.total / 100 | currency:order.symbol }}</div>\n                    </div>\n                </div>\n            </div>\n            <button\n                class=\"show\"\n                *ngIf=\"orders.length > 5\"\n                (touchrelease)=\"show_orders = !show_orders\"\n            >\n                {{ show_orders ? 'Hide' : 'Show' }} Orders\n            </button>\n        </div>\n    </div>\n    <div class=\"field\" name=\"requirements\">\n        <label>Requirements:</label>\n        <div class=\"value\">{{ notes }}</div>\n    </div>\n    <div class=\"field\" name=\"charge-code\">\n        <label>Charge Code:</label>\n        <div class=\"value\">{{ charge_code }}</div>\n    </div>\n</div>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { ViewRoomModalComponent } from '../../view-room-modal/view-room-modal.component';\nimport { RECURRENCE_PERIODS, formatRecurrence } from '../../../shared/utilities/formatting.utilities';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { DialogEvent, HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { humaniseDuration } from 'src/app/shared/utilities/general.utilities';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { UsersService } from 'src/app/services/data/users/users.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'meeting-details-display',\n    templateUrl: './display.component.html',\n    styleUrls: ['./display.component.scss']\n})\nexport class MeetingDetailsDisplayComponent extends BaseDirective {\n    @Input() event: Booking;\n    /** Emitter for events on the component */\n    @Output('event') on_event = new EventEmitter<DialogEvent>();\n    /** Toggle for activating checkin */\n    public checked_in: boolean;\n    /** Mapping of spaces to last checkin time */\n    public last_start: { [id: string]: number } = {};\n    /** Whether to show full locations list */\n    public show_locations: boolean;\n    /** Whether to show full attendee list */\n    public show_attendees: boolean;\n\n    /** Title of the displayed event */\n    public get title(): string {\n        if (!this.event) {\n            return '';\n        }\n        return this.event.title || '';\n    }\n\n    /** Display string of when the event will occur */\n    public get when(): string {\n        if (!this.event) {\n            return 'Unable to determine.';\n        }\n        const date = dayjs(this.event.date);\n        const end = date.add(this.event.duration || 60, 'm');\n        if (this.event.all_day || this.event.duration > 23 * 60) {\n            return `${date.format('DD MMM YYYY')} - All Day`;\n        } else {\n            if (date.isSame(end, 'd')) {\n                return `${date.format('DD MMM YYYY, h:mm A')} - ${end.format('h:mm A')}`;\n            } else {\n                return `${date.format('DD MMM YYYY, h:mm A')} - ${end.format(\n                    'DD MMM YYYY, h:mm A'\n                )}`;\n            }\n        }\n    }\n\n    /** Whether booking has catering */\n    public get has_catering(): boolean {\n        return this.event &&\n            this.event.catering &&\n            this.event.catering.length >= 0;\n    }\n\n    /** Display string for the event's duration */\n    public get duration(): string {\n        if (!this.event) {\n            return 'Unable to determine';\n        }\n        return humaniseDuration(this.event.duration || 60);\n    }\n\n    /** List of spaces associated with the event */\n    public get spaces(): Space[] {\n        if (!this.event) {\n            return [];\n        }\n        return this.event.space_list || (this.event.space ? [this.event.space] : []);\n    }\n\n    /** List of attendees associated with the event not including the host */\n    public get attendees(): User[] {\n        if (!this.event) {\n            return [];\n        }\n        return this.event.attendees.filter(i => i.email !== this.organiser.email) || [];\n    }\n\n    /** Host of the event */\n    public get organiser(): User {\n        if (!this.event) {\n            return this._users.current;\n        }\n        return this.event.organiser || this._users.current;\n    }\n\n    /** Display string for the recurrence value of the booking */\n    public get recurrence(): string {\n        return formatRecurrence(this.event.recurrence);\n    }\n\n    /** Whether the user is allowed to edit the event */\n    public get can_edit(): boolean {\n        const organiser = this.organiser;\n        const user = this._users.current;\n        return organiser.email === user.email && this.status !== 'done';\n    }\n\n    /** Details about the event */\n    public get notes(): string {\n        return this.event.body || '';\n    }\n\n    /** Status of the event */\n    public get status(): 'future' | 'upcoming' | 'done' | 'started' | 'in_progress' {\n        if (this.event) {\n            const now = dayjs();\n            const date = dayjs(this.event.date);\n            if (now.isBefore(date.subtract(15, 'm'), 'm')) {\n                return 'future';\n            } else if (now.isBefore(date, 'm')) {\n                return 'upcoming';\n            } else if (now.isBefore(date.add(15, 'm'), 'm')) {\n                return 'started';\n            } else if (now.isBefore(date.add(this.event.duration, 'm'), 'm')) {\n                return 'in_progress';\n            }\n        }\n        return 'done';\n    }\n\n    /** Mapping of attendees and spaces to acceptance status */\n    public get status_map(): HashMap<'accepted' | 'tentative' | 'declined'> {\n        const attendee_statuses: HashMap<'accepted' | 'tentative' | 'declined'> = {};\n        for (const email in this.event.approval_status) {\n            if (email) {\n                switch (this.event.approval_status[email]) {\n                    case 'declined':\n                        attendee_statuses[email] = 'declined';\n                        break;\n                    case 'accepted':\n                        attendee_statuses[email] = 'accepted';\n                        break;\n                    default:\n                        attendee_statuses[email] = 'tentative';\n                        break;\n                }\n            }\n        }\n        return attendee_statuses;\n    }\n\n    /** Whether the user has checkin to all the spaces in the event */\n    public get is_checked_in(): boolean {\n        return this.spaces.reduce(\n            (a, v) => a && this.event.date <= (this.last_start[v.id] || 0),\n            true\n        );\n    }\n\n    /** Whether the spaces can be controlled */\n    public get can_control(): boolean {\n        return this.spaces.length > 0 && this.status !== 'future' && this.status !== 'done';\n    }\n\n    /** Whether the user is able to checkin to the event */\n    public get can_checkin(): boolean {\n        return this.spaces.length > 0 && (this.status === 'upcoming' || this.status === 'started');\n    }\n\n    constructor(private _spaces: SpacesService, private _users: UsersService, private _dialog: MatDialog) {\n        super();\n    }\n\n    /**\n     * Open the modal to show the location of a space\n     * @param space Space to show the location\n     */\n    public locate(space: Space) {\n        if (space) {\n            const the_space = this._spaces.find(space.id) || space;\n            this._dialog.open(ViewRoomModalComponent, {\n                width: 'auto',\n                height: 'auto',\n                maxWidth: '95vw',\n                maxHeight: '95vh',\n                data: { space: the_space }\n            });\n        }\n    }\n}\n","<div class=\"event-details\">\n    <div class=\"field\" name=\"title\">\n        <label>Title:</label>\n        <div class=\"value\">{{ title }}</div>\n    </div>\n    <div class=\"field\" name=\"when\">\n        <label>When:</label>\n        <div class=\"value\">{{ when }}</div>\n    </div>\n    <div\n        class=\"field\"\n        *ngIf=\"event.recurrence && event.recurrence.period !== 'none'\"\n        name=\"recurrence\"\n    >\n        <label>Reccurrence:</label>\n        <div class=\"value\">\n            {{ recurrence }}\n        </div>\n    </div>\n    <div class=\"field\" name=\"duration\">\n        <label>Duration:</label>\n        <div class=\"value\">{{ duration }}</div>\n    </div>\n    <div class=\"field multi\" name=\"location\">\n        <label>Locations({{ spaces.length || '0' }}):</label>\n        <div class=\"value\">\n            <div class=\"list\" [class.shown]=\"show_locations\">\n                <div\n                    class=\"list-item\"\n                    *ngFor=\"let item of spaces\"\n                    [title]=\"item?.name + ' - ' + (status_map[item?.email] || 'Approved')\"\n                >\n                    <div [class]=\"'status ' + status_map[item?.email]\">\n                        <div class=\"text\">{{ status_map[item?.email] }}</div>\n                    </div>\n                    <div class=\"text\">{{ item?.name }}</div>\n                    <button class=\"show\" *ngIf=\"item?.map_id\" (touchrelease)=\"locate(item)\">\n                        Map\n                    </button>\n                </div>\n                <div class=\"list-item\" *ngIf=\"!spaces.length\">No Location</div>\n            </div>\n            <button\n                class=\"show\"\n                *ngIf=\"spaces.length > 5\"\n                (touchrelease)=\"show_locations = !show_locations\"\n            >\n                {{ show_locations ? 'Hide' : 'Show' }} Locations\n            </button>\n        </div>\n    </div>\n    <div class=\"field\" name=\"host\">\n        <label>Host:</label>\n        <div class=\"value\">{{ organiser.name }}</div>\n    </div>\n    <div class=\"field multi\" name=\"attendees\">\n        <label>Attendees({{ attendees.length || '0' }}):</label>\n        <div class=\"value\">\n            <div class=\"list\" [class.shown]=\"show_attendees\">\n                <div\n                    class=\"list-item\"\n                    *ngFor=\"let item of attendees\"\n                    [title]=\"\n                        item?.name +\n                        ' - ' +\n                        (status_map[item?.email] || 'Accepted') +\n                        (item?.email ? '\\n' + item.email : '')\n                    \"\n                >\n                    <div [class]=\"'status ' + status_map[item?.email]\">\n                        <div class=\"text\">{{ status_map[item?.email] }}</div>\n                    </div>\n                    <div class=\"text\">\n                        <div class=\"name\">{{ item.name }}</div>\n                        <div class=\"email\" *ngIf=\"item.email\">\n                            <a [href]=\"'mailto:' + item.email + '?subject=' + event.title\">{{\n                                item.email\n                            }}</a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <button\n                class=\"show\"\n                *ngIf=\"attendees.length > 5\"\n                (touchrelease)=\"show_attendees = !show_attendees\"\n            >\n                {{ show_attendees ? 'Hide' : 'Show' }} Attendees\n            </button>\n        </div>\n    </div>\n    <div class=\"field\" name=\"notes\">\n        <label>Notes:</label>\n        <div class=\"value\" [innerHTML]=\"notes | sanitize\"></div>\n    </div>\n    <div class=\"field\" *ngIf=\"has_catering\" name=\"catering\">\n        <label>Catered:</label>\n        <div class=\"value\">{{ event.catering.length ? 'Yes' : 'No' }}</div>\n    </div>\n</div>\n","import { Component, OnDestroy, Output, EventEmitter, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport {\n    ConfirmModalComponent,\n    ConfirmModalData,\n    CONFIRM_METADATA,\n} from '../confirm-modal/confirm-modal.component';\nimport { TimeExtensionModalComponent } from '../time-extension/time-extension.component';\nimport {\n    RequirementDetailsModalComponent,\n    RequirementDetailsModalData,\n} from 'src/app/shell/bookings/overlays/requirement-details-modal/requirement-details-modal.component';\nimport { generateBookingForm } from 'src/app/services/data/bookings/booking.utilities';\n\nimport * as dayjs from 'dayjs';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\nexport interface MeetingDetailsModalData {\n    /** Meeting to display on the modal */\n    booking: Booking;\n    /** Whether local user is able act on behalf of the host */\n    as_delegate: boolean;\n    /** Email address of the associated delegate */\n    delegate: string;\n    /** Whether booking is the first in the list */\n    is_first: boolean;\n    /** Whether booking is the last in the list */\n    is_last: boolean;\n}\n\n/*istanbul ignore next */\n@Component({\n    selector: 'meeting-details-overlay',\n    templateUrl: './meeting-details-overlay.template.html',\n    styleUrls: ['./meeting-details-overlay.styles.scss'],\n})\nexport class MeetingDetailsOverlayComponent extends BaseDirective implements OnDestroy {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Display string of the loading state of the meeting */\n    public loading: string;\n    /** Whether booking is being edited */\n    public edit: boolean;\n\n    /** Active booking to display */\n    public get booking(): Booking {\n        return this._data.booking;\n    }\n\n    /** Whether booking is the first in the list */\n    public get is_last(): boolean {\n        return this._data.is_last;\n    }\n\n    /** Whether booking is the last in the list */\n    public get is_first(): boolean {\n        return this._data.is_first;\n    }\n\n    /** List of spaces associated with the event */\n    public get space_list(): Space[] {\n        return this.booking.space_list || (this.booking.space ? [this.booking.space] : []);\n    }\n\n    public get has_recurrence(): boolean {\n        return !!(this.booking.recurrence && this.booking.recurrence.period);\n    }\n\n    /** Whether user is able to edit the booking */\n    public get can_edit(): boolean {\n        const user = this._users.current;\n        return (\n            this.booking.organiser.email === user.email ||\n            user.delegates.includes(this.booking.organiser.email)\n        );\n    }\n\n    /** Whether booking is in progress */\n    public get in_progress(): boolean {\n        if (!this.booking) {\n            return false;\n        }\n        const now = dayjs();\n        const start = dayjs(this.booking.date);\n        const end = start.add(this.booking.duration, 'm');\n        return now.isAfter(start, 's') && now.isBefore(end, 'm');\n    }\n\n    /** Whether booking has ended */\n    public get has_ended(): boolean {\n        if (!this.booking) {\n            return false;\n        }\n        const now = dayjs();\n        const start = dayjs(this.booking.date);\n        const end = start.add(this.booking.duration, 'm');\n        return now.isAfter(end, 's');\n    }\n\n    /** Whether booking has a space associated with it */\n    public get has_space(): boolean {\n        if (!this.space_list || !this.space_list.length) {\n            return false;\n        }\n        for (const space of this.space_list) {\n            if (space) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _dialog_ref: MatDialogRef<MeetingDetailsOverlayComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: MeetingDetailsModalData,\n        private _service: ApplicationService,\n        private _users: UsersService,\n        private _bookings: BookingsService,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    /**\n     * Show the next meeting in the list\n     */\n    public nextBooking() {\n        this.event.emit({ reason: 'action', metadata: 'next' });\n    }\n\n    /** Show the previous meeting in the list */\n    public previousBooking() {\n        this.event.emit({ reason: 'action', metadata: 'previous' });\n    }\n\n    /** Open confirmation modal for deleting the meeting */\n    public confirmDeleteMeeting(): void {\n        const ref = this._dialog.open<ConfirmModalComponent, ConfirmModalData>(\n            ConfirmModalComponent,\n            {\n                ...CONFIRM_METADATA,\n                data: {\n                    title: 'Delete meeting',\n                    icon: { type: 'icon', class: 'material-icons', content: 'delete' },\n                    content: `\n                        <p>Are you sure you want to delete this meeting on ${\n                            this.booking.date_string\n                        }${this.has_recurrence ? ' from your series' : ''}?</p>\n                        <p>All attendees will be notified.</p>\n                    `,\n                },\n            }\n        );\n        this.subscription(\n            'confirm',\n            ref.componentInstance.event.subscribe((event) => {\n                if (event.reason === 'done') {\n                    this.deleteMeeting();\n                    ref.close();\n                    this.unsub('confirm');\n                }\n            })\n        );\n    }\n\n    /** Open confirmation modal for deleting the series of bookings */\n    public confirmDeleteSeries(): void {\n        if (!this.booking.recurrence) {\n            return;\n        }\n        const ref = this._dialog.open<ConfirmModalComponent, ConfirmModalData>(\n            ConfirmModalComponent,\n            {\n                ...CONFIRM_METADATA,\n                data: {\n                    title: 'Delete series',\n                    icon: { type: 'icon', class: 'material-icons', content: 'delete' },\n                    content: `\n                        <p>All bookings in the series will be deleted. Are you sure you want to delete the series?</p>\n                        <p>All attendees will be notified.</p>\n                    `,\n                },\n            }\n        );\n        this.subscription(\n            'confirm',\n            ref.componentInstance.event.subscribe((event) => {\n                if (event.reason === 'done') {\n                    this.deleteSeries();\n                    ref.close();\n                    this.unsub('confirm');\n                }\n            })\n        );\n    }\n\n    /** Navigate the booking with the details of the current booking set */\n    public duplicateMeeting(): void {\n        const new_booking = this.booking.duplicate();\n        this._router.navigate(['/book']);\n        if (localStorage) {\n            localStorage.setItem('ACA_STAFF.booking_form_data', JSON.stringify(new_booking));\n        }\n        this._dialog_ref.close();\n    }\n\n    /** Open modal to extend the length of the meeting */\n    public extendMeeting() {\n        this.loading = 'Extending meeting...';\n        const ref = this._dialog.open(TimeExtensionModalComponent, {\n            ...CONFIRM_METADATA,\n            data: { booking: this.booking },\n        });\n        ref.afterClosed().subscribe(() => (this.loading = null));\n    }\n\n    public editMeetingRequirements() {\n        const form = generateBookingForm(this.booking, [\n            'space_list',\n            'notes',\n            'equipment_codes',\n            'expected_attendees',\n        ] as any);\n        const ref = this._dialog.open<\n            RequirementDetailsModalComponent,\n            RequirementDetailsModalData\n        >(RequirementDetailsModalComponent, {\n            maxWidth: '95vw',\n            width: '32em',\n            data: {\n                spaces: form.controls.space_list.value,\n                notes_field: form.controls.notes,\n                codes_field: form.controls.equipment_codes,\n                head_counts_field: form.controls.expected_attendees,\n            },\n        });\n        this.subscription(\n            'modal_events',\n            ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                if (event.reason === 'done') {\n                    this.loading = 'Updating space requirements...';\n                    const updated_booking = new Booking({\n                        ...this.booking,\n                        ...form.value,\n                        room_ids: form.value.space_list.map((space) => space.id),\n                    });\n                    updated_booking.save().then(\n                        (new_booking: Booking) => {\n                            this._data.booking = new_booking;\n                            this.loading = null;\n                        },\n                        (err) => {\n                            this.loading = null;\n                            this._service.notifyError(\n                                `Error updating space requirements. Error: ${err.message || err}`\n                            );\n                        }\n                    );\n                    ref.close();\n                }\n            })\n        );\n        ref.afterClosed().subscribe(() => this.unsub('modal_events'));\n    }\n\n    /**\n     * Open booking form to catering section\n     */\n    public editMeetingCatering() {\n        this.editMeeting(false);\n        this._router.navigate(['/book', 'space', 'catering']);\n        this._dialog_ref.close();\n    }\n\n    /**\n     * Open booking form to edit details\n     */\n    public editMeeting(navigate: boolean = true) {\n        if (localStorage) {\n            localStorage.setItem('ACA_STAFF.booking_form_data', JSON.stringify(this.booking));\n        }\n        if (navigate) {\n            this._router.navigate(['/book']);\n            this._dialog_ref.close();\n        }\n    }\n\n    /** Delete the meeting */\n    private deleteMeeting() {\n        this.loading = 'Deleting meeting...';\n        this._bookings\n            .delete(this.booking.id, {\n                delegate: this._data.as_delegate ? this._data.delegate : null,\n                room_id: this.booking.space?.id,\n            })\n            .then(\n                () => {\n                    this._service.notifySuccess('Successfully deleted meeting.');\n                    this.loading = null;\n                    this._dialog_ref.close();\n                },\n                (err) => {\n                    this.loading = null;\n                    this._service.notifyError(\n                        `Error deleting meeting. Error: ${err.message || err}`\n                    );\n                }\n            );\n    }\n\n    /** Delete series */\n    private deleteSeries() {\n        this.loading = 'Deleting series...';\n        this._bookings\n            .delete(this.booking.recurrence.series_id, {\n                delegate: this._data.as_delegate ? this._data.delegate : null,\n                room_id: this.booking.space?.id,\n            })\n            .then(\n                () => {\n                    this._service.notifySuccess('Successfully deleted series.');\n                    this.loading = null;\n                    this._dialog_ref.close();\n                },\n                (err) => {\n                    this.loading = null;\n                    this._service.notifyError(\n                        `Error deleting series. Error: ${err.message || err}`\n                    );\n                }\n            );\n    }\n}\n","<header class=\"custom\">\n    <div class=\"details\">\n        <!-- <button mat-icon-button [disabled]=\"is_first\" (touchrelease)=\"previousBooking()\">\n            <app-icon\n                [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_left' }\"\n            ></app-icon>\n        </button> -->\n        <div class=\"text\">{{ booking?.title || '&lt;No Title&gt;' }}</div>\n        <!-- <button mat-icon-button [disabled]=\"is_last\" (touchrelease)=\"nextBooking()\">\n            <app-icon\n                [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_right' }\"\n            ></app-icon>\n        </button> -->\n        <button mat-icon-button mat-dialog-close class=\"fixed\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </button>\n    </div>\n    <div class=\"actions\">\n        <button mat-button name=\"delete\" *ngIf=\"!has_ended\" (touchrelease)=\"confirmDeleteMeeting()\">\n            <div class=\"flex\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'delete' }\"></app-icon>\n                <div class=\"text\">\n                    {{ can_edit ? 'Delete' : 'Decline'}}\n                    <span *ngIf=\"has_recurrence\">Occurrence</span>\n                </div>\n            </div>\n        </button>\n        <button\n            mat-button\n            name=\"delete-recurr\"\n            *ngIf=\"has_recurrence\"\n            (touchrelease)=\"confirmDeleteSeries()\"\n        >\n            <div class=\"flex\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'delete' }\"></app-icon>\n                <div class=\"text\">{{ can_edit ? 'Delete' : 'Decline'}} Series</div>\n            </div>\n        </button>\n        <button mat-button name=\"duplicate\" *ngIf=\"can_edit\" (touchrelease)=\"duplicateMeeting()\">\n            <div class=\"flex\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'add' }\"></app-icon>\n                <div class=\"text\">Duplicate</div>\n            </div>\n        </button>\n        <button\n            mat-button\n            name=\"extend\"\n            *ngIf=\"in_progress && has_space && can_edit\"\n            (touchrelease)=\"extendMeeting()\"\n        >\n            <div class=\"flex\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'timelapse' }\"></app-icon>\n                <div class=\"text\">Extend</div>\n            </div>\n        </button>\n    </div>\n</header>\n<mat-dialog-content>\n    <main class=\"custom\" *ngIf=\"!loading; else load_state\">\n        <ng-container *ngIf=\"!edit; else edit_form\">\n            <div class=\"card\">\n                <div class=\"header\">Event Details</div>\n                <meeting-details-display [event]=\"booking\"></meeting-details-display>\n                <div class=\"flex\" *ngIf=\"!has_ended && !in_progress && can_edit\">\n                    <button mat-button (touchrelease)=\"editMeeting()\">Edit</button>\n                </div>\n            </div>\n            <ng-container *ngFor=\"let space of space_list\">\n                <div class=\"card\" *ngIf=\"space && space.id\">\n                    <div class=\"header\">Space Details</div>\n                    <meeting-details-space\n                        [booking]=\"booking\"\n                        [space]=\"space\"\n                    ></meeting-details-space>\n                    <div class=\"flex\" *ngIf=\"!has_ended && can_edit\">\n                        <button\n                            mat-button\n                            name=\"requirements\"\n                            (touchrelease)=\"editMeetingRequirements()\"\n                        >\n                            Edit Room Requirements\n                        </button>\n                    </div>\n                    <div class=\"header\">Catering Details</div>\n                    <meeting-details-catering\n                        [catering]=\"booking.catering\"\n                        [booking]=\"booking\"\n                        [space]=\"space\"\n                    ></meeting-details-catering>\n                    <div class=\"flex\" *ngIf=\"!has_ended && can_edit\">\n                        <button\n                            mat-button\n                            name=\"catering\"\n                            (touchrelease)=\"editMeetingCatering()\"\n                        >\n                            Edit Catering Orders\n                        </button>\n                    </div>\n                </div>\n            </ng-container>\n        </ng-container>\n    </main>\n</mat-dialog-content>\n<ng-template #edit_form>\n    <meeting-details-form></meeting-details-form>\n</ng-template>\n<ng-template #load_state>\n    <main class=\"custom\">\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </main>\n</ng-template>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { Space } from 'src/app/services/data/spaces/space.class';\n\n\n@Component({\n    selector: 'meeting-details-space',\n    templateUrl: './space.component.html',\n    styleUrls: ['./space.component.scss']\n})\nexport class MeetingDetailsSpaceComponent {\n    /** Active Space to display details for */\n    @Input() public space: Space;\n    /** Booking associated with the space */\n    @Input() public booking: Booking;\n\n    /** Latest equipment requirement notes for the active space */\n    public get notes(): string {\n        const space_notes = (this.booking.notes || []).filter(note => note.space === this.space.id);\n        return space_notes.length ? space_notes[space_notes.length - 1].message : '<No requirements>';\n    }\n\n    /** Latest equipment charge code for the active space */\n    public get charge_code(): string {\n        return (this.booking.equipment_codes || {})[this.space.id] || '<No charge code>';\n    }\n\n    /** Expected number of attendees for the active space */\n    public get expected_attendees(): number {\n        return (this.booking.expected_attendees || {})[this.space.id] || 0;\n    }\n}\n","<div class=\"space-details\" *ngIf=\"space\" [attr.space-id]=\"space.id\">\n    <div class=\"field\" name=\"space-name\">\n        <label>Space:</label>\n        <div class=\"value\">{{ space.name }}</div>\n    </div>\n    <div class=\"field\" name=\"requirements\">\n        <label>Requirements (Private Notes):</label>\n        <div class=\"value\">{{ notes }}</div>\n    </div>\n    <div class=\"field\" name=\"charge-code\">\n        <label>Charge Code:</label>\n        <div class=\"value\">{{ charge_code }}</div>\n    </div>\n    <div class=\"field\" name=\"expected-attendees\">\n        <label>Expected Attendees:</label>\n        <div class=\"value\">{{ expected_attendees }}</div>\n    </div>\n</div>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormGroup } from '@angular/forms';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { generateUserForm } from 'src/app/services/data/users/user.utilities';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { DialogEvent } from '../../shared/utilities/types.utilities';\n\n@Component({\n  selector: 'new-user-modal',\n  templateUrl: './new-user-modal.component.html',\n  styleUrls: ['./new-user-modal.component.scss']\n})\nexport class NewUserModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for the new user */\n    public form: FormGroup;\n    /** New user data store */\n    public user: User;\n    /** Whether user details are being saved */\n    public loading: boolean;\n\n    public ngOnInit(): void {\n        this.user = new User();\n        this.form = generateUserForm(this.user);\n    }\n\n    public saveChanges() {\n        this.form.markAllAsTouched();\n        if (this.form.valid) {\n            if (!this.form.controls.email.value) {\n                this.form.controls.email.setValue(`${Math.floor(Math.random() * 99999)}@guest.mckinsey.com`);\n            }\n            const new_user = new User({\n                ...this.form.value,\n                name: `${this.form.value.first_name} ${this.form.value.last_name}`,\n                type: 'external'\n            });\n            this.event.emit({ reason: 'done', metadata: new_user });\n        }\n    }\n\n}\n","<header>\n    <h3 mat-dialog-title>Add External Attendee</h3>\n    <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<div class=\"body\" *ngIf=\"!loading; else load_state\">\n    <user-form [form]=\"form\"></user-form>\n</div>\n<footer *ngIf=\"!loading\">\n    <button mat-button class=\"inverse\" mat-dialog-close>Cancel</button>\n    <button mat-button (tapped)=\"saveChanges()\">Save</button>\n</footer>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">\n                Saving attendee...\n            </div>\n        </div>\n    </div>\n</ng-template>\n\n","\nimport { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { SharedContentModule } from '../shared/shared.module';\n\nimport { ConfirmModalComponent } from './confirm-modal/confirm-modal.component';\nimport { ViewRoomModalComponent } from './view-room-modal/view-room-modal.component';\nimport { NewUserModalComponent } from './new-user-modal/new-user-modal.component';\nimport { BookingRulesModalComponent } from './booking-rules-modal/booking-rules-modal.component';\n\nimport { BookingConfirmComponent } from '../shell/bookings/overlays/booking-confirm/booking-confirm.component';\nimport { MeetingDetailsOverlayComponent } from './meeting-details-overlay/meeting-details-overlay.component';\nimport { MeetingDetailsCateringComponent } from './meeting-details-overlay/catering/catering.component';\nimport { MeetingDetailsDisplayComponent } from './meeting-details-overlay/display/display.component';\nimport { MeetingDetailsSpaceComponent } from './meeting-details-overlay/space/space.component';\nimport { TimeExtensionModalComponent } from './time-extension/time-extension.component';\nimport { SpaceSelectModalComponent } from './space-select-modal/space-select-modal.component';\nimport { RecurrenceModalComponent } from './recurrence-modal/recurrence-modal.component';\n\nconst OVERLAYS: Type<any>[] = [\n    ConfirmModalComponent,\n    ViewRoomModalComponent,\n    BookingConfirmComponent,\n    NewUserModalComponent,\n    BookingRulesModalComponent,\n    MeetingDetailsOverlayComponent,\n    TimeExtensionModalComponent,\n    RecurrenceModalComponent\n];\n\n@NgModule({\n    declarations: [\n        ...OVERLAYS,\n        MeetingDetailsCateringComponent,\n        MeetingDetailsDisplayComponent,\n        MeetingDetailsSpaceComponent,\n        SpaceSelectModalComponent\n    ],\n    imports: [\n        CommonModule,\n        SharedContentModule,\n        FormsModule,\n        ReactiveFormsModule,\n    ],\n    exports: [\n        ...OVERLAYS\n    ]\n})\nexport class SharedOverlaysModule {}\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, Identity } from '../../shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { BookingRecurrenceDetails } from 'src/app/services/data/bookings/booking.interfaces';\nimport dayjs = require('dayjs');\n\nexport interface RecurrenceModalData {\n    /** Current recurrence details */\n    details: BookingRecurrenceDetails;\n    /** Currently set date for the booking */\n    date: number;\n}\n\nexport const RECURRENCE_METADATA = {\n    height: 'auto',\n    width: '24em',\n    maxHeight: 'calc(100vh - 2em)',\n    maxWidth: 'calc(100vw - 2em)',\n};\n\n@Component({\n    selector: 'recurrence-modal',\n    templateUrl: './recurrence-modal.component.html',\n    styleUrls: ['./recurrence-modal.component.scss'],\n})\nexport class RecurrenceModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for recurrence */\n    public form: FormGroup;\n    /** Loading state */\n    public loading: string;\n    /** Available recurrence periods */\n    public periods: Identity[] = [\n        { id: 'none', name: 'None' },\n        { id: 'daily', name: 'Daily' },\n        { id: 'weekly', name: 'Weekly' },\n        { id: 'biweekly', name: 'Biweekly' },\n        { id: 'monthly', name: 'Monthly' },\n    ];\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: RecurrenceModalData) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        const end_date = dayjs((this._data.details.end * 1000)|| this._data.date).endOf('d').startOf('m');\n        this.form = new FormGroup({\n            period: new FormControl(this._data.details.period || 'none'),\n            end: new FormControl(end_date.valueOf(), [Validators.required]),\n        });\n    }\n\n    /**\n     * User confirmation of the content of the modal\n     */\n    public save() {\n        this.form.markAllAsTouched();\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            this.loading = 'Adding recurrence data to booking...';\n            const end = this.form.value.end;\n            this.event.emit({\n                reason: 'done',\n                metadata: {\n                    ...this._data.details,\n                    ...this.form.value,\n                    end: Math.floor(end / 1000),\n                },\n            });\n        }\n    }\n}\n","<header>\n    <div class=\"heading\" mat-dialog-title>Booking Recurrence</div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main *ngIf=\"!loading; else load_state\">\n        <form *ngIf=\"form\" [formGroup]=\"form\">\n            <div class=\"field\" *ngIf=\"form.controls.period && periods.length > 1\">\n                <label for=\"period\">Period: </label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select name=\"period\" formControlName=\"period\" placeholder=\"None\">\n                        <mat-option *ngFor=\"let type of periods\" [value]=\"type.id\">\n                            {{ type.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.end\">\n                <label\n                    for=\"end\"\n                    [class.error]=\"form.controls.end.errors && form.controls.end.touched\"\n                >\n                    End Date<span>*</span>:\n                </label>\n                <a-date-field name=\"end\" formControlName=\"end\"></a-date-field>\n                <div\n                    class=\"error-message\"\n                    *ngIf=\"form.controls.end.errors && form.controls.end.touched\"\n                >\n                    End date needs to be in the future\n                </div>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading\">\n    <footer>\n        <button mat-button (tapped)=\"save()\">Add to Booking</button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Observable, Subject, of } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, switchMap, catchError, map } from 'rxjs/operators';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { Space, SpaceBookingRuleOptions } from 'src/app/services/data/spaces/space.class';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { Identity, HashMap, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nexport interface SpaceSelectModalData {\n    /** List of selected spaces */\n    spaces: Space[];\n    /** Start time for availability of spaces */\n    date: number;\n    /** Duration of the availability block to look for */\n    duration: number;\n    /** Host of the booking being made */\n    host: User;\n    /** Whether multiple spaces can be selected */\n    multiple: boolean;\n    /** Force zone ids */\n    zone_ids?: string;\n}\n\n@Component({\n    selector: 'a-space-select-modal',\n    templateUrl: './space-select-modal.component.html',\n    styleUrls: ['./space-select-modal.component.scss']\n})\nexport class SpaceSelectModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether space list is being loaded */\n    public loading: boolean;\n    /** List of available spaces to select from */\n    public spaces: Space[] = [];\n    /** Active building to filter spaces on */\n    public active_building: Building;\n    /** Active building to filter spaces on */\n    public active_type: Identity;\n    /** List of items from an API search */\n    public search_results$: Observable<Space[]>;\n    /** Subject holding the value of the search */\n    public readonly search$ = new Subject<string>();\n    /** List of currently selected spaces */\n    public selected_spaces: Space[] = [];\n    /** Mapping as to whether a space is by request */\n    public request_map: HashMap<boolean> = {};\n    /** Whether selected list should be shown on mobile */\n    public show_list: boolean;\n\n    /** List of available buildings */\n    public types: Identity[] = [];\n\n    /** List of available buildings */\n    public get buildings(): Building[] {\n        return this._org.buildings;\n    }\n\n    /** Whether multiple spaces can be selected */\n    public get multiple(): boolean {\n        return !!this._data.multiple;\n    }\n\n    public get has_zone(): boolean {\n        return !!this._data.zone_ids;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        @Inject(MAT_DIALOG_DATA) private _data: SpaceSelectModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.selected_spaces = [].concat(this._data.spaces || []);\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(400),\n            distinctUntilChanged(),\n            switchMap(_ => {\n                this.loading = true;\n                const zone_ids: string[] = [];\n                /* istanbul ignore else */\n                if (this.active_building) {\n                    zone_ids.push(this.active_building.id);\n                }\n                /* istanbul ignore else */\n                if (this.active_type?.id) {\n                    zone_ids.push(`${this.active_type.id}`);\n                }\n                return this._spaces.available({\n                    zone_ids: this._data.zone_ids || zone_ids.join(','),\n                    date: this._data.date,\n                    duration: this._data.duration\n                });\n            }),\n            catchError(_ => of([])),\n            map((list: Space[]) => {\n                this.loading = false;\n                const selected = this.selected_spaces;\n                return list.filter((item: any) => !selected.find(space => space.id === item.id));\n            })\n        );\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe(list => {\n                this.spaces = list;\n                this.spaces.sort((a, b) => this.sort(a, b));\n                this.update();\n            })\n        );\n        this.active_building = this._data.spaces?.length ?\n            this._org.buildings.find(i => i.id === this._data.spaces[0].level.building_id) :\n            this._org.building;\n        this.types = [{ id: '', name: 'Any Space Type' } as any].concat(\n            this._org.space_types || []\n        );\n        this.active_type = this.types[0];\n        this.search$.next('');\n    }\n\n    /** Add space to selected list */\n    public addSpace(space: Space) {\n        this.selected_spaces.push(space);\n        this.selected_spaces = unique(this.selected_spaces, 'id');\n    }\n\n    /** Remove space from selected list */\n    public removeSpace(space: Space) {\n        this.selected_spaces = this.selected_spaces.filter(a_space => a_space.id !== space.id);\n    }\n\n    /** Emit current state of the selected list */\n    public save(list: Space[]) {\n        this.event.emit({ reason: 'done', metadata: list });\n    }\n\n    private update() {\n        const map = {};\n        const options: SpaceBookingRuleOptions = {\n            date: this._data.date,\n            duration: this._data.duration,\n            host: this._data.host\n        };\n        this.selected_spaces.forEach(space => (map[space.id] = space.byRequest(options)));\n        this.spaces.forEach(space => (map[space.id] = space.byRequest(options)));\n        this.request_map = map;\n    }\n\n    /**\n     * Compare two spaces to determine order\n     * @param space_a\n     * @param space_b\n     */\n    private sort(space_a: Space, space_b: Space) {\n        const bld = this._org.buildings.find(bld => bld.id === space_a.level.building_id);\n        const bld_b = this._org.buildings.find(bld => bld.id === space_b.level.building_id);\n        if (bld) {\n            if (bld !== bld_b) {\n                return (bld.name || '').localeCompare(bld_b.name || '');\n            }\n            const sort_order = (bld.sort_order ? [...bld.sort_order] : []).reverse();\n            for (const zone_id of sort_order) {\n                if (zone_id === '*') { continue; }\n                const a_has_zone = space_a.zones.indexOf(zone_id) >= 0;\n                const b_has_zone = space_b.zones.indexOf(zone_id) >= 0;\n                if (a_has_zone && !b_has_zone) {\n                    return 1;\n                } else if (b_has_zone && !a_has_zone) {\n                    return -1;\n                }\n            }\n        }\n        return (space_a.name || '').localeCompare(space_b.name || '');\n    }\n}\n","<header>\n    <div class=\"heading\">Select meeting space{{ multiple ? 's' : '' }}</div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main>\n        <div class=\"block available\">\n            <ng-container *ngIf=\"!has_zone\">\n                <mat-form-field appearance=\"outline\" *ngIf=\"buildings && buildings.length > 1\">\n                    <mat-select\n                        #select\n                        [(value)]=\"active_building\"\n                        (valueChange)=\"search$.next(active_building.id + '|' + active_type.id)\"\n                    >\n                        <mat-option *ngFor=\"let building of buildings\" [value]=\"building\">\n                            {{ building.code }} - {{ building.name\n                            }}{{ building.address ? ', ' + building.address : '' }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\" *ngIf=\"types && types.length > 1\">\n                    <mat-select\n                        #select\n                        [(value)]=\"active_type\"\n                        (valueChange)=\"search$.next(active_building.id + '|' + active_type.id)\"\n                    >\n                        <mat-option *ngFor=\"let type of types\" [value]=\"type\">\n                            {{ type?.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </ng-container>\n            <div class=\"list\">\n                <ng-container *ngIf=\"!loading; else load_state\">\n                    <ng-container *ngIf=\"spaces && spaces.length; else empty_state\">\n                        <div class=\"item\" *ngFor=\"let space of spaces\">\n                            <div class=\"details\">\n                                <div class=\"name\">{{ space.name }}</div>\n                                <div class=\"info\">{{ space.level.name }}</div>\n                            </div>\n                            <div class=\"capacity\">\n                                <app-icon\n                                    [icon]=\"{ type: 'icon', class: 'material-icons', content: 'account_circle' }\"\n                                ></app-icon>\n                                <div class=\"text\">{{ space.capacity || '0' }}</div>\n                            </div>\n                            <div class=\"actions\">\n                                <button\n                                    [class.request]=\"request_map[space.id]\"\n                                    mat-button\n                                    (tapped)=\"multiple ? addSpace(space) : save([space])\"\n                                >\n                                    {{ request_map[space.id] ? 'Request' : 'Select' }}\n                                </button>\n                            </div>\n                        </div>\n                    </ng-container>\n                </ng-container>\n            </div>\n        </div>\n        <div class=\"block selected\" *ngIf=\"multiple\" [class.show]=\"show_list\">\n            <h3>Selected spaces</h3>\n            <div class=\"list\">\n                <ng-container\n                    *ngIf=\"selected_spaces && selected_spaces.length; else empty_select_state\"\n                >\n                    <div class=\"item\" *ngFor=\"let space of selected_spaces\">\n                        <div\n                            class=\"icon\"\n                            [class.request]=\"request_map[space.id]\"\n                            [matTooltip]=\"\n                                request_map[space.id]\n                                    ? 'Bookings in this space need to be approved by a member of the concierge team'\n                                    : ''\n                            \"\n                        >\n                            <app-icon\n                                [icon]=\"{\n                                    class: 'material-icons',\n                                    content: request_map[space.id] ? 'warning' : 'done'\n                                }\"\n                            ></app-icon>\n                        </div>\n                        <div class=\"details\">\n                            <div class=\"name\">{{ space.name }}</div>\n                            <div class=\"info\">{{ space.level.name }}</div>\n                        </div>\n                        <div class=\"capacity\">\n                            <app-icon\n                                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'account_circle' }\"\n                            ></app-icon>\n                            <div class=\"text\">{{ space.capacity || '0' }}</div>\n                        </div>\n                        <div class=\"actions\">\n                            <button mat-icon-button (tapped)=\"removeSpace(space)\">\n                                <app-icon\n                                    [icon]=\"{ class: 'material-icons', content: 'close' }\"\n                                ></app-icon>\n                            </button>\n                        </div>\n                    </div>\n                </ng-container>\n            </div>\n            <footer>\n                <button mat-button (tapped)=\"save(this.selected_spaces)\">Add to booking</button>\n            </footer>\n            <button mat-icon-button [class.close]=\"true\" [class.mobile-only]=\"true\" (tapped)=\"show_list = false\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n            </button>\n            <div class=\"tag mobile-only\">\n                <button mat-icon-button (tapped)=\"show_list = true\">\n                    <app-icon [icon]=\"{ class: 'material-icons', content: 'list' }\"></app-icon>\n                </button>\n            </div>\n        </div>\n    </main>\n</mat-dialog-content>\n<ng-template #load_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <mat-spinner diameter=\"48\"></mat-spinner>\n        </div>\n        <div class=\"text\">Loading available spaces...</div>\n    </div>\n</ng-template>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">No available spaces</div>\n    </div>\n</ng-template>\n<ng-template #empty_select_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">No selected spaces</div>\n    </div>\n</ng-template>\n","import { Component, Output, EventEmitter, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { DialogEvent, Identity } from 'src/app/shared/utilities/types.utilities';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { humaniseDuration } from 'src/app/shared/utilities/general.utilities';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\n/** Maximum amount of time that the booking can be extended */\nconst MAX_EXTENSION = 60;\n\nexport interface TimeExtensionModalData {\n    booking: Booking;\n}\n\n@Component({\n    selector: 'time-extension',\n    templateUrl: './time-extension.component.html',\n    styleUrls: ['./time-extension.component.scss']\n})\nexport class TimeExtensionModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Duration options that the user can select */\n    public durations: Identity[] = [];\n    /** Display string for the loading state of the booking */\n    public loading: string;\n\n    public get booking(): Booking {\n        return this._data.booking;\n    }\n\n    constructor(\n        private _dialog: MatDialogRef<TimeExtensionModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: TimeExtensionModalData,\n        private _service: ApplicationService,\n        private _spaces: SpacesService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.checkAvailability(MAX_EXTENSION);\n    }\n\n    public checkAvailability(extension: number) {\n        if (extension <= 0) {\n            this._service.notifyInfo('Meeting is not available to be extended.');\n            this._dialog.close();\n            return;\n        }\n        this.loading = 'Checking availability of spaces...';\n        this._spaces.available({\n            room_ids: this.booking.space_list.map(room => room.id).join(','),\n            date: this.booking.date,\n            duration: this.booking.duration + extension,\n            ignore: this.booking.icaluid,\n            hide_bookings: true\n        }).then(\n            list => {\n                if (list.length >= this.booking.space_list.length) {\n                    this.durations = [];\n                    let extended = 15;\n                    while (extended <= extension) {\n                        this.durations.push({\n                            id: this.booking.duration + extended,\n                            name: ` Extend ${humaniseDuration(extended)}`\n                        });\n                        extended += 15;\n                    }\n                    this.loading = null;\n                } else {\n                    this.checkAvailability(extension - 15);\n                }\n            },\n            err => {\n                this._service.notifyError(`Error extending meeting. Error: ${err.message | err}`);\n                this._dialog.close();\n            }\n        );\n    }\n\n    /**\n     * Extend the meeting but the given duration\n     * @param block Duration block to update the meeting to\n     */\n    public extendMeeting(block: Identity) {\n        this.loading = 'Extending meeting...';\n        const new_booking = new Booking({ ...this.booking, duration: block.id });\n        new_booking.save().then(\n            (booking) => {\n                this.loading = null;\n                this._dialog.close();\n                this.event.emit({ reason: 'done', metadata: booking });\n            },\n            err => {\n                this._service.notifyError(`Error extending meeting. Error: ${err.message | err}`);\n            }\n        );\n    }\n}\n","<header>\n    <div class=\"text\">Extend meeting</div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{class:'material-icons', content: 'close'}\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main>\n        <ng-container *ngIf=\"!loading && durations; else loading_content\">\n            <button *ngFor=\"let item of durations\" name=\"action\" (tapped)=\"extendMeeting(item)\">\n                {{ item.name }}\n            </button>\n        </ng-container>\n    </main>\n</mat-dialog-content>\n<ng-template #loading_content>\n    <div class=\"info-block\">\n        <div class=\"icon\">\n            <mat-spinner *ngIf=\"loading\" diameter=\"32\"></mat-spinner>\n            <app-icon\n                *ngIf=\"!loading\"\n                [icon]=\"{class:'material-icons', content: 'event_busy'}\"\n            ></app-icon>\n        </div>\n        <div class=\"text\">\n            {{ loading || 'No available extensions' }}\n        </div>\n    </div>\n</ng-template>\n","import { Component, Output, EventEmitter, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { MapPinComponent } from '@acaprojects/ngx-interactive-map';\n\nimport { BaseDirective } from '../../shared/base.directive';\nimport { BuildingLevel } from '../../services/data/organisation/level.class';\nimport { Space } from '../../services/data/spaces/space.class';\nimport { MapFeature } from '@acaprojects/ngx-interactive-map/lib/helpers/map.interfaces';\nimport { Point } from 'src/app/shared/utilities/types.utilities';\n\n@Component({\n    selector: 'view-room-modal',\n    templateUrl: './view-room-modal.component.html',\n    styleUrls: ['./view-room-modal.component.scss'],\n})\nexport class ViewRoomModalComponent extends BaseDirective {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter();\n\n    public features: MapFeature[] = [];\n    /** Space to show the location of on the map */\n    public get space(): Space {\n        return this._data.space;\n    }\n\n    public get level(): BuildingLevel {\n        return this.space.level;\n    }\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: { space: Space }) {\n        super();\n        this.features = [this.focus_feature];\n    }\n\n    /** Point on map to focus on */\n    public get focus_feature(): MapFeature {\n        /* istanbul ignore else */\n        if (!this.space) {\n            return null;\n        }\n        return {\n            id: `area-${this.space.map_id}-status`,\n            coordinates: null,\n            content: MapPinComponent,\n            data: {\n                back: '#fff',\n                fore: '#d31145',\n            },\n        };\n    }\n\n    public get focus(): string | Point {\n        return this.focus_feature ? this.focus_feature.id : null;\n    }\n}\n","<header>\n    <h3 mat-dialog-title>Locate Space - <span>{{ space.name }}</span></h3>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <div class=\"body\" *ngIf=\"level\">\n        <a-map [src]=\"level?.map_url\" [features]=\"features\">\n            <mat-spinner diameter=\"64\"></mat-spinner>\n        </a-map>\n\n        <div class=\"level\">{{ level?.name }}</div>\n    </div>\n</mat-dialog-content>\n","import { Injectable, ApplicationRef, NgZone } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { SwUpdate } from '@angular/service-worker';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { first } from 'rxjs/operators';\n\nimport { ComposerService } from '@placeos/composer';\nimport { PlaceOSOptions } from '@placeos/ts-client';\nimport { HeapIoService } from '@acaprojects/ngx-heap-io';\n\nimport { Observable, BehaviorSubject, Subject, Subscription } from 'rxjs';\n\nimport { BaseClass } from '../shared/base.class';\nimport { ConsoleStream, SettingsService } from './settings.service';\nimport { ApplicationLoadingState } from '../shared/utilities/types.utilities';\n\nimport { HotkeysService } from './hotkeys.service';\nimport { ComposerSettings, ApplicationIcon } from '../shared/utilities/settings.interfaces';\nimport { BaseDataClass } from './data/base-api.class';\n\ndeclare global {\n    interface Window {\n        application: ApplicationService;\n        mock: {\n            enabled: boolean;\n            backend: any;\n        };\n    }\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ApplicationService extends BaseClass {\n    /** List of previous routes for return navigation */\n    private _route_trail: string[] = [];\n    /** Map of state variables for Service */\n    protected _subjects: {\n        [key: string]: BehaviorSubject<any> | Subject<any>;\n    } = {};\n    /** Map of observables for state variables */\n    protected _observers: { [key: string]: Observable<any> } = {};\n    /** Whether the application has stablised */\n    private _stable: boolean;\n\n    /** Whether the application has stablised */\n    public get is_stable(): boolean {\n        return this._stable || false;\n    }\n\n    constructor(\n        private _app_ref: ApplicationRef,\n        private _zone: NgZone,\n        private _title: Title,\n        private _cache: SwUpdate,\n        private _settings: SettingsService,\n        private _hotkeys: HotkeysService,\n        private _composer: ComposerService,\n        private _snackbar: MatSnackBar,\n        private _analytics: HeapIoService,\n    ) {\n        super();\n        this.set('system', null);\n        this.set('title', 'Home');\n        this.set('loading', {});\n        this._app_ref.isStable.pipe(first(_ => _)).subscribe(() => {\n            this._zone.run(() => {\n                this._stable = true;\n                this.log('APP', `Application has stablised.`);\n                this.setupCache();\n                this.waitForSettings();\n            });\n        });\n    }\n\n    public get Bindings() {\n        return this._composer.bindings;\n    }\n    /** Analytics service */\n    public get Analytics() {\n        return {};\n    }\n    /** Hotkeys service */\n    public get Hotkeys() {\n        return this._hotkeys;\n    }\n\n    /** Engine Composer service */\n    public get Composer() {\n        return this._composer;\n    }\n\n    /**\n     * Get a setting from the settings service\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        return this._settings.get(key);\n    }\n\n    /** Name of the application */\n    public get name() {\n        return this._settings.app_name;\n    }\n\n    /**\n     * Title of the page\n     */\n    public set title(value: string) {\n        const title_suffix = this.setting('app.title');\n        this.set('title', value);\n        this._title.setTitle(`${value ? value + ' | ' : ''}${title_suffix}`);\n    }\n\n    /**\n     * Title of the page\n     */\n    public get title(): string {\n        return this._title.getTitle();\n    }\n\n    /** Root API Endpoint */\n    public get endpoint() {\n        return `/api/staff/`;\n    }\n\n    /** Root API Endpoint for engine */\n    public get engine_endpoint() {\n        return this._composer.auth.api_endpoint + '/';\n    }\n\n    /** Whether settings has been loaded */\n    public get has_settings(): boolean {\n        return this._settings.is_initialised;\n    }\n\n    /**\n     * Create notification popup\n     * @param type CSS Class to add to the notification\n     * @param message Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     * @param icon Icon to render to the left of the notification message\n     */\n    public notify(\n        type: string,\n        message: string,\n        action: string = 'OK',\n        on_action?: () => void,\n        icon: ApplicationIcon = {\n            type: 'icon',\n            class: 'material-icons',\n            content: 'info'\n        }\n    ): void {\n        const snackbar_ref = this._snackbar.open(message, action, {\n            panelClass: [type],\n            duration: 5000\n        });\n        this.subscription(\n            'snackbar_close',\n            snackbar_ref.afterDismissed().subscribe(() => {\n                this.unsub('snackbar_close');\n                this.unsub('notify');\n            })\n        );\n        if (action) {\n            on_action = on_action || (() => snackbar_ref.dismiss());\n            this.subscription(\n                'notify',\n                snackbar_ref.onAction().subscribe(() => on_action())\n            );\n        }\n    }\n\n    /**\n     * Create success notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifySuccess(msg: string, action?: string, on_action?: () => void): void {\n        const icon: ApplicationIcon = {\n            type: 'icon',\n            class: 'material-icons',\n            content: 'done'\n        };\n        console.debug(msg);\n        this.notify('success', msg, action, on_action, icon);\n    }\n\n    /**\n     * Create error notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifyError(msg: string, action?: string, on_action?: () => void): void {\n        const icon: ApplicationIcon = {\n            type: 'icon',\n            class: 'material-icons',\n            content: 'error'\n        };\n        console.error(msg);\n        this.notify('error', msg, action, on_action, icon);\n    }\n\n    /**\n     * Create warning notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifyWarn(msg: string, action?: string, on_action?: () => void): void {\n        const icon: ApplicationIcon = {\n            type: 'icon',\n            class: 'material-icons',\n            content: 'warning'\n        };\n        console.warn(msg);\n        this.notify('warn', msg, action, on_action, icon);\n    }\n\n    /**\n     * Create info notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifyInfo(msg: string, action?: string, on_action?: () => void): void {\n        console.info(msg);\n        this.notify('info', msg, action, on_action);\n    }\n\n    /**\n     * Log data to the browser console\n     * @param type Type of message\n     * @param msg Message body\n     * @param args array of argments to log to the console\n     * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\n     * @param force Whether to force message to be emitted when debug is disabled\n     */\n    public log(\n        type: string,\n        msg: string,\n        args?: any,\n        stream: ConsoleStream = 'debug',\n        force: boolean = false\n    ): void {\n        this._settings.log(type, msg, args, stream, force);\n    }\n\n    /**\n     * Get the current value of the named property\n     * @param name Property name\n     */\n    public get<U = any>(name: string): U {\n        return this._subjects[name] && this._subjects[name] instanceof BehaviorSubject\n            ? (this._subjects[name] as BehaviorSubject<U>).getValue()\n            : null;\n    }\n\n    /**\n     * Listen to value change of the named property\n     * @param name Property name\n     * @param next Callback for value changes\n     */\n    public listen<U = any>(name: string, next: (_: U) => void): Subscription {\n        return this._observers[name] ? this._observers[name].subscribe(next) : null;\n    }\n\n    /**\n     * Update the value of the named property\n     * @param name Property name\n     * @param value New value\n     */\n    public set<U = any>(name: string, value: U): void {\n        if (!this._subjects[name]) {\n            this._subjects[name] = new BehaviorSubject<U>(value);\n            this._observers[name] = this._subjects[name].asObservable();\n        } else {\n            this._subjects[name].next(value);\n        }\n    }\n\n    /** Wait for settings to be initialised before setting up the application */\n    private waitForSettings() {\n        // Wait until the settings have loaded before initialising\n        this._settings.initialised.pipe(first(_ => _)).subscribe(() => this.init());\n    }\n\n    /**\n     * Initialise application services\n     */\n    private init(): void {\n        this.setupComposer();\n        // this.setupAnalytics();\n        this._composer.initialised.pipe(first(_ => _)).subscribe(() => {\n            this._initialised.next(true);\n        });\n        // Add service to window if in debug mode\n        if (window.debug) {\n            window.application = this;\n        }\n    }\n\n    /**\n     * Initialise the composer library comms\n     */\n    private setupComposer(): void {\n        this.log('SYSTEM', 'Setup up composer...');\n        const loading: ApplicationLoadingState = this.get('loading') || {};\n        loading.composer = {\n            message: 'Initialising service connection',\n            state: 'loading'\n        };\n        this.set('loading', loading);\n        // Get application settings\n        const settings: ComposerSettings = this._settings.get('composer') || {};\n        const protocol = settings.protocol || location.protocol;\n        const host = settings.domain || location.hostname;\n        const port = settings.port || location.port;\n        const url = settings.use_domain ? `${protocol}//${host}:${port}` : location.origin;\n        const route = settings.route || '';\n        const mock = this._settings.get('mock');\n        // Generate configuration object\n        const config: PlaceOSOptions = {\n            scope: 'public',\n            host: `${host}:${port}`,\n            auth_uri: `${url}/auth/oauth/authorize`,\n            token_uri: `${url}/auth/token`,\n            redirect_uri: `${location.origin}${route}/oauth-resp.html`,\n            handle_login: !settings.local_login,\n            mock\n        };\n        this._composer.setup(config);\n        loading.composer = {\n            message: 'Initialising service connection',\n            state: 'complete'\n        };\n        this.set('loading', loading);\n    }\n\n    /**\n     * Setup handler for cache change events\n     */\n    private setupCache() {\n        if (this._cache.isEnabled) {\n            this.subscription(\n                'cache_update',\n                this._cache.available.subscribe(event => {\n                    const current = `current version is ${event.current.hash}`;\n                    const available = `available version is ${event.available.hash}`;\n                    this.log('CACHE', `Update available: ${current} ${available}`);\n                    this.activateUpdate();\n                })\n            );\n            this.subscription(\n                'cache_activated',\n                this._cache.activated.subscribe(() => {\n                    this.log('CACHE', `Updates activated. Reloading...`);\n                    this.notifyInfo(\n                        'Newer version of the application is available',\n                        'Refresh',\n                        () => location.reload(true)\n                    );\n                })\n            );\n            setInterval(() => {\n                this.log('CACHE', `Checking for updates...`);\n                this._cache.checkForUpdate();\n            }, 5 * 60 * 1000);\n        }\n    }\n\n    /**\n     * Update the cache and reload the page\n     *\n     */\n    private activateUpdate() {\n        if (this._cache.isEnabled) {\n            this.log('CACHE', `Activating changes to the cache...`);\n            this._cache.activateUpdate().then(() => {\n                this.notifyInfo('Newer version of the application is available', 'Refresh', () =>\n                    location.reload(true)\n                );\n            });\n        }\n    }\n}\n","import { Subject, Observable } from 'rxjs';\n\nimport { BaseClass } from '../../shared/base.class';\nimport { HashMap } from '../../shared/utilities/types.utilities';\nimport { ServiceManager, ServiceLike } from './service-manager.class';\n\nexport type ApiEventType = 'value_change' | 'item_saved' | 'reset' | 'other';\n\nexport interface ApiEvent<T = HashMap> {\n    type: ApiEventType;\n    metadata: T;\n}\n\n\nexport class BaseDataClass extends BaseClass {\n    /** Subject for emitting events on the object */\n    protected readonly event_subject = new Subject<ApiEvent>();\n    /** Observable for events on this object */\n    public readonly events = this.event_subject.asObservable();\n    /** Unique Identifier of the object */\n    public readonly id: string;\n    /** Human readable name of the object */\n    public readonly name: string;\n    /** Email address associated with the object */\n    public readonly email: string;\n    /** Map of local property names to server ones */\n    protected _server_names: HashMap<string> = {};\n    /** Service for managing model on the server */\n    protected get _service(): ServiceLike {\n        return ServiceManager.serviceFor(BaseDataClass);\n    }\n\n    constructor(raw_data: HashMap) {\n        super();\n        this.id = raw_data.id || raw_data.zone_id || raw_data.email || '';\n        this.name = raw_data.name || '';\n        this.email = `${raw_data.email || ''}`.toLowerCase();\n    }\n\n    /**\n     * Save pending changes to server\n     */\n    public save(): Promise<BaseDataClass> {\n        if (this._service) {\n            const form = this.toJSON();\n            return new Promise((resolve, reject) => {\n                const promise = this.id\n                    ? this._service.update(this.id, form)\n                    : this._service.add(form);\n                promise.then(\n                    (d) => {\n                        this.event_subject.next({ type: 'item_saved',  metadata: d });\n                        resolve(d);\n                    },\n                    (_) => reject(_)\n                );\n            });\n        } else {\n            Promise.reject('No service to process request');\n        }\n    }\n\n    /**\n     * Delete this item from the server\n     */\n    public delete(): Promise<void> {\n        if (this.id) {\n            return this._service.delete(this.id);\n        }\n    }\n\n    /**\n     * Run task for this item on the service\n     * @param task_name Name of the task\n     * @param parameters Parameters to pass to the task request\n     */\n    public runTask(task_name: string, parameters: HashMap): Promise<void> {\n        if (this.id) {\n            return this._service.task(this.id, task_name, parameters);\n        }\n    }\n    /**\n     * Convert object into plain object\n     */\n    public toJSON(this: BaseDataClass): HashMap {\n        const obj: any = { ...this };\n        // Remove local private members\n        delete obj._service;\n        delete obj._changes;\n        delete obj.event_subject;\n        delete obj.events;\n        // Remove parent private members\n        delete obj._timers;\n        delete obj._intervals;\n        delete obj._subscriptions;\n        delete obj._server_names;\n        delete obj._initialised;\n        // Convert remaining members to be public\n        const keys = Object.keys(obj);\n        for (const key of keys) {\n            if (key[0] === '_') {\n                const new_key = this._server_names[key.substr(1)] || key.substr(1);\n                obj[new_key] = obj[key];\n                delete obj[key];\n            } else if (obj[key] === undefined) {\n                delete obj[key];\n            }\n        }\n        return obj;\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): BaseDataClass {\n        return new BaseDataClass(this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): BaseDataClass {\n        return new BaseDataClass({ ...this, id: null, email: null });\n    }\n}\n","import { ComposerService } from '@placeos/composer';\nimport { BehaviorSubject, Observable, Subscription, Subscriber, Subject } from 'rxjs';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDataClass } from './base-api.class';\nimport { BaseClass } from '../../shared/base.class';\nimport { ApplicationService } from '../app.service';\nimport { HashMap } from '../../shared/utilities/types.utilities';\nimport { toQueryString } from '../../shared/utilities/api.utilities';\n\nexport interface IEngineResponse {\n    results: HashMap[];\n    total: number;\n}\n\nexport class BaseAPIService<T extends {} = BaseDataClass> extends BaseClass {\n    /** Application service */\n    public parent: ApplicationService;\n    /** Display name of the service */\n    protected _name: string;\n    /** API Route of the service */\n    protected _api_route: string;\n    /** Map of state variables for Service */\n    protected _subjects: { [key: string]: BehaviorSubject<any> | Subject<any> } = {};\n    /** Map of observables for state variables */\n    protected _observers: { [key: string]: Observable<any> } = {};\n    /** Map of poll subscribers for API endpoints */\n    protected _subscribers: { [key: string]: Subscriber<any> } = {};\n    /** Map of promises for Service */\n    protected _promises: { [key: string]: Promise<any> } = {};\n    /** Comparison function for service items */\n    protected _compare: (a: T, b: T) => boolean = (a, b) =>\n        a === b || (a as any).id === (b as any).id;\n    /** Default filter function for list method */\n    protected _list_filter: (a: T) => boolean = (a) => !!a;\n\n    /** Http Client */\n    protected get http() {\n        return this._composer.http;\n    }\n\n    constructor(protected _composer: ComposerService) {\n        super();\n        this._name = 'Base';\n        this._api_route = 'base';\n        this.set('list', []);\n    }\n\n    /**\n     * Initailise service\n     */\n    public init() {\n        this.load().then(\n            (_) => this._initialised.next(true),\n            (err) => this.timeout('init', () => this.init(), 1000)\n        );\n    }\n\n    /**\n     * Get API route for the service\n     * @param engine Whether endpoint is using the application API or engine API\n     */\n    public route(engine: boolean = false) {\n        const endpoint = engine\n            ? this._composer.auth.api_endpoint\n            : '/api/staff';\n        return `${endpoint}/${this._api_route}`;\n    }\n    /** API Route of the service */\n    public get api_route() {\n        return this._api_route;\n    }\n\n    /**\n     * Get the current value of the named property\n     * @param name Property name\n     */\n    public get<U = any>(name: string): U {\n        if (!this._observers[name]) {\n            this.set<U>(name, null);\n        }\n        return (this._subjects[name] as BehaviorSubject<U>).getValue();\n    }\n\n    /**\n     * Listen to value change of the named property\n     * @param name Property name\n     * @param next Callback for value changes\n     */\n    public listen<U = any>(name: string): Observable<U> {\n        if (!this._observers[name]) {\n            this.set<U>(name, null);\n        }\n        return this._observers[name];\n    }\n\n    /**\n     * Update the value of the named property\n     * @param name Property name\n     * @param value New value\n     */\n    protected set<U = any>(name: string, value: U): void {\n        if (!this._subjects[name]) {\n            this._subjects[name] = new BehaviorSubject<U>(value);\n            this._observers[name] = this._subjects[name].asObservable();\n        } else {\n            this._subjects[name].next(value);\n        }\n    }\n\n    /**\n     * Get list of loaded items\n     * @param predicate Function for filtering the list\n     */\n    public filter(predicate: (a: T) => boolean = this._list_filter): T[] {\n        const list = this.get<T[]>('list') || [];\n        return list.filter(_ => predicate(_));\n    }\n\n    /**\n     * Get item with the given id from the loaded items\n     * @param id ID of the item\n     */\n    public find(id: string = ''): T {\n        const list = this.get('list') || [];\n        return list.find((i) => i.id === id || (i.email && i.email.toLowerCase() === id.toLowerCase()));\n    }\n\n    /**\n     * Query the index of the API route associated with this service\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public query(query_params: HashMap = { update_list: true }): Promise<T[]> {\n        let engine = false;\n        let cache = 1000;\n        /* istanbul ignore else */\n        if (query_params) {\n            engine = !!query_params.engine;\n            delete query_params.engine;\n            cache = query_params.cache || 1000;\n            delete query_params.cache;\n        }\n        const query = toQueryString(query_params);\n        const key = `query|${query}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise((resolve, reject) => {\n                const url = `${this.route(engine)}${query ? '?' + query : ''}`;\n                let result: T[] | HashMap[] = [];\n                this.http.get(url).subscribe(\n                    (d: IEngineResponse | HashMap[]) => {\n                        result =\n                            d && d instanceof Array\n                                ? d.map((i) => this.process(i))\n                                : d && !(d instanceof Array) && d.results\n                                ? (d.results as HashMap[])\n                                : [];\n                    },\n                    (e) => {\n                        reject(e);\n                        this._promises.new_item = null;\n                    },\n                    () => {\n                        if (\n                            (!query || (query_params && query_params.update_list)) &&\n                            result.length > 0 &&\n                            result[0] instanceof BaseDataClass\n                        ) {\n                            this.set('list', this.updateList(this.get('list'), result as T[]));\n                        }\n                        resolve(result);\n                        this.timeout(key, () => (this._promises[key] = null), cache);\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Query the API route for a sepecific item\n     * @param id ID of the item\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public show(id: string, query_params: HashMap = {}): Promise<T> {\n        let engine = false;\n        /* istanbul ignore else */\n        if (query_params) {\n            engine = !!query_params.engine;\n            delete query_params.engine;\n        }\n        const query = toQueryString(query_params);\n        const key = `show|${id}|${query}`;\n        /* istanbul ignore else */\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<T>((resolve, reject) => {\n                const url = `${this.route(engine)}/${id}${query ? '?' + query : ''}`;\n                let result: T = null;\n                this.http.get(url).subscribe(\n                    (d) => (result = this.process(d)),\n                    (e) => {\n                        reject(e);\n                        this._promises.new_item = null;\n                    },\n                    () => {\n                        resolve(result);\n                        this.timeout(key, () => (this._promises[key] = null), 1000);\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Make post request for a new item to the service\n     * @param form_data Data to post to the server\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public add(form_data: HashMap, query_params: HashMap = {}): Promise<T> {\n        /* istanbul ignore else */\n        if (!this._promises.new_item) {\n            this._promises.new_item = new Promise<T>((resolve, reject) => {\n                const query = toQueryString(query_params);\n                const url = `${this.route(query_params.engine)}${query ? '?' + query : ''}`;\n                let result: T = null;\n                this.http.post(url, form_data).subscribe(\n                    (d) => (result = this.process(d)),\n                    (e) => {\n                        reject(e);\n                        this.analyticsEvent(`create-${this._name.toLowerCase()}-failed`);\n                        this._promises.new_item = null;\n                    },\n                    () => {\n                        resolve(result);\n                        this.set('list', this.updateList(this.get('list'), [result]));\n                        this.analyticsEvent(`create-${this._name.toLowerCase()}-success`);\n                        this._promises.new_item = null;\n                    }\n                );\n            });\n        }\n        return this._promises.new_item;\n    }\n\n    /**\n     * Perform API task for the given item ID\n     * @param id ID of the item\n     * @param task_name Name of the task\n     * @param form_data Map of data to pass to the API\n     * @param method Verb to use for request\n     */\n    public task<U = any>(\n        id: string,\n        task_name: string,\n        form_data: HashMap = {},\n        method: 'post' | 'get' = 'post'\n    ): Promise<U> {\n        const query = toQueryString(form_data);\n        const key = `task|${id}|${task_name}|${query}`;\n        /* istanbul ignore else */\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<U>((resolve, reject) => {\n                const post_data = { ...form_data, id, _task: task_name };\n                const url = `${this.api_route}/${id}/${task_name}`;\n                let result: any;\n                const request =\n                    method === 'post'\n                        ? this.http.post(url, post_data)\n                        : this.http.get(`${url}${query ? '?' + query : ''}`);\n                request.subscribe(\n                    (d) => (result = d),\n                    (e) => {\n                        reject(e);\n                        this.analyticsEvent(\n                            `${this._name.toLowerCase()}-task-${task_name}-failed`,\n                            id\n                        );\n                        delete this._promises[key];\n                    },\n                    () => {\n                        resolve(result as U);\n                        this.analyticsEvent(\n                            `${this._name.toLowerCase()}-task-${task_name}-success`,\n                            id\n                        );\n                        this.timeout(key, () => delete this._promises[key], 1000);\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Setup a poller for an API endpoint\n     * @param id Show request ID. Leave blank to poll on the query endpoint\n     * @param query_params Map of query paramaters to add to the polled URL\n     * @param delay Delay between each poll event\n     */\n    public poll(\n        id?: string,\n        query_params: HashMap = {},\n        delay: number = 5000\n    ): Observable<T | T[]> {\n        const key = `poll|${id || ''}|${toQueryString(query_params) || ''}`;\n        this.stopPoll(id, query_params);\n        this._subjects[key] = new Subject<T | T[]>();\n        this._observers[key] = this._subjects[key].asObservable();\n        const sub = this._subjects[key];\n        const query = { ...(query_params || {}), _poll: true };\n        if (id) {\n            this.show(id, query).then(\n                (d) => sub.next(d),\n                (e) => sub.error(e)\n            );\n            this.interval(\n                key,\n                () => {\n                    this.show(id, query).then(\n                        (d) => sub.next(d),\n                        (e) => sub.error(e)\n                    );\n                },\n                delay\n            );\n        } else {\n            this.query(query).then(\n                (d) => sub.next(d),\n                (e) => sub.error(e)\n            );\n            this.interval(\n                key,\n                () => {\n                    this.query(query).then(\n                        (d) => sub.next(d),\n                        (e) => sub.error(e)\n                    );\n                },\n                delay\n            );\n        }\n        return this._observers[key];\n    }\n\n    /**\n     * Destroy poller\n     * @param id\n     * @param query_params\n     */\n    public stopPoll(id?: string, query_params: HashMap = {}) {\n        const key = `poll|${id || ''}|${toQueryString(query_params) || ''}`;\n        /* istanbul ignore else */\n        if (this._subjects[key]) {\n            this._subjects[key].complete();\n            this._subjects[key] = null;\n            this._observers[key] = null;\n        }\n    }\n\n    /**\n     * Make put request for changes to the item with the given id\n     * @param id ID of the item being updated\n     * @param form_data New values for the item\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public update(id: string, form_data: HashMap, query_params: HashMap = {}): Promise<T> {\n        const key = `update|${id}`;\n        /* istanbul ignore else */\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<T>((resolve, reject) => {\n                const query = toQueryString(query_params);\n                const url = `${this.route(query_params.engine)}/${id}${query ? '?' + query : ''}`;\n                let result: T = null;\n                this.http.put(url, form_data).subscribe(\n                    (d) => (result = this.process(d)),\n                    (e) => {\n                        reject(e);\n                        this.analyticsEvent(`update-${this._name.toLowerCase()}-failed`, id);\n                        this._promises[key] = null;\n                    },\n                    () => {\n                        resolve(result);\n                        this.set(\n                            'list',\n                            this.updateList(this.removeItem(this.get('list'), { id } as any), [\n                                result,\n                            ])\n                        );\n                        this.analyticsEvent(`update-${this._name.toLowerCase()}-success`, id);\n                        this._promises[key] = null;\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Make delete request for the given item\n     * @param id ID of item\n     */\n    public delete(id: string, q: HashMap = {}): Promise<void> {\n        const key = `delete|${id}`;\n        /* istanbul ignore else */\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<void>((resolve, reject) => {\n                const query = toQueryString(q);\n                const url = `${this.route()}/${id}${query ? '?' + query : ''}`;\n                this.http.delete(url).subscribe(\n                    (_) => null,\n                    (e) => {\n                        reject(e);\n                        this._promises[key] = null;\n                    },\n                    () => {\n                        this.set('list', this.removeItem(this.get('list'), { id } as any));\n                        this._promises[key] = null;\n                        resolve();\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Add new API item from another service or API class\n     * @param id ID of the item/or service adding the new item\n     * @param data Raw API data for the new item\n     * @param type Adder type\n     */\n    public addFrom(\n        id: string,\n        data: HashMap,\n        type: 'class' | 'service' | 'other' = 'other'\n    ): string {\n        const new_item = this.process(data);\n        this.set('list', this.updateList(this.get('list'), [new_item]));\n        return (new_item as any).id;\n    }\n\n    /**\n     * Remove items with the given IDs from the list\n     * @param id ID of the item/or service remove the list of items\n     * @param remove_ids List of item IDs to remove\n     * @param type Remover type\n     */\n    public removeFrom(\n        id: string,\n        remove_ids: string[],\n        type: 'class' | 'service' | 'other' = 'other'\n    ) {}\n\n    /**\n     * Load initial data for the service\n     */\n    protected async load(): Promise<void> {}\n\n    /**\n     * Post analytics event for this service\n     * @param action Name of the action to post\n     */\n    protected analyticsEvent(action: string, label?: string) {\n        // if (this.parent && this.parent.Analytics) {\n        //     this.parent.Analytics.track(this._name, { desc: `${this.parent.name.toLowerCase()}-${action}`, label });\n        // }\n    }\n\n    /**\n     * Convert raw API data into a valid API Object\n     * @param raw_item Raw API data\n     */\n    protected process(raw_item: HashMap): T {\n        return raw_item as T;\n    }\n\n    /**\n     * Update recorded list of items\n     * @param old_list Old list of items\n     * @param list List of updated items\n     * @param compareFn Function to compare items to remove duplicates\n     */\n    public updateList(\n        old_list: T[],\n        list: T[],\n        compareFn: (a: T, b: T) => boolean = this._compare\n    ): T[] {\n        /* istanbul ignore else */\n        if (!list || list.length === 0) {\n            return old_list;\n        }\n        const new_list: T[] = [];\n        const mixed_list = [...list, ...old_list];\n        /* istanbul ignore else */\n        if (!compareFn) {\n            compareFn = this._compare;\n        }\n        for (const item of mixed_list) {\n            const found = new_list.find((i) => compareFn(i, item));\n            /* istanbul ignore else */\n            if (!found) {\n                new_list.push(item);\n            }\n        }\n        return new_list;\n    }\n\n    /**\n     * Remove the given item from the given list\n     * @param list List of items\n     * @param item Item to remove\n     * @param compareFn Function to compare items\n     */\n    protected removeItem(list: T[], item: T, compareFn?: (a: T, b: T) => boolean) {\n        const new_list = [];\n        /* istanbul ignore else */\n        if (!compareFn) {\n            compareFn = this._compare;\n        }\n        list.forEach((i) => (compareFn(item, i) ? null : new_list.push(i)));\n        return new_list;\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\n\nimport { BookingNote, BookingRecurrenceDetails } from './booking.interfaces';\nimport { CateringOrder } from '../catering/catering-order.class';\nimport { User } from '../users/user.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\nimport { humaniseDuration, unique, flatten } from '../../../shared/utilities/general.utilities';\nimport { Space } from '../spaces/space.class';\nimport { ServiceManager } from '../service-manager.class';\n\nimport * as dayjs from 'dayjs';\n\nexport class Booking extends BaseDataClass {\n    /** Unique calendar event ID */\n    public readonly icaluid: string;\n    /** Subject or title of the booking */\n    public readonly title: string;\n    /** Unix timestamp of the booking start */\n    public readonly date: number;\n    /** Length of the booking in minutes */\n    public readonly duration: number;\n    /** Description or details of the booking */\n    public readonly body: string;\n    /** Type of booking */\n    public readonly type: string;\n    /** Whether the booking has catering associated with it */\n    public readonly has_catering: boolean;\n    /** List of catering orders for the booking */\n    public readonly catering: readonly CateringOrder[];\n    /** String location set in booking */\n    public readonly _location: string;\n    /** Whether booking's duration covers all day */\n    public readonly all_day: boolean;\n    /** Details of the recurrence */\n    public readonly recurrence: BookingRecurrenceDetails;\n    /** Mapping of emails to approval statuses */\n    public readonly approval_status: HashMap<string>;\n    /** Host/Organiser of the booking */\n    public readonly organiser: User;\n    /** List of people invited to attend the booking */\n    public readonly attendees: User[];\n    /** Author of the booking */\n    public readonly creator: User;\n    /** List of notes associated with the booking */\n    public readonly notes: readonly BookingNote[];\n    /** Mapping of spaces to equipment charge codes */\n    public readonly equipment_codes: HashMap<string>;\n    /** Mapping of spaces to expected number of attendees */\n    public readonly expected_attendees: HashMap<number>;\n    /** Setup time before the meeting in minutes */\n    public readonly setup: number;\n    /** List of checked in attendees */\n    public readonly checked_in: string[];\n    /** Breakdown time after booking in minutes */\n    public readonly breakdown: number;\n    /** List of fields edited since creation */\n    public readonly edits: string[];\n    /** List of spaces associated with the booking */\n    public readonly space_list: Space[];\n    /** List of users to be notified on visitor arrivals */\n    public readonly notify_users: readonly string[];\n    /** Whether the time or duration has changed */\n    public time_changed = false;\n    /** Map of display strings */\n    private _display: HashMap<string> = {};\n    /** Service for managing Bookings */\n    protected get _service() {\n        return ServiceManager.serviceFor(Booking);\n    }\n\n    constructor(raw_data: HashMap = {}) {\n        super(raw_data);\n        this.icaluid = raw_data.icaluid || this.id || '';\n        this.title = raw_data.title || raw_data.subject || raw_data.Subject || '';\n        const time =\n            raw_data.date || raw_data.start_epoch * 1000 || raw_data.start * 1000 || raw_data.Start;\n        const start = dayjs(time).startOf('m');\n        this.date = !time\n            ? start.minute(Math.ceil(start.minute() / 5) * 5).valueOf()\n            : start.valueOf();\n        this.duration =\n            raw_data.duration ||\n            dayjs(raw_data.end_epoch * 1000 || raw_data.end * 1000 || raw_data.End).diff(\n                start,\n                'm'\n            ) ||\n            60;\n        this.body =\n            // (raw_data.body instanceof Object ? raw_data.body.content : raw_data.body) ||\n            raw_data.description || (typeof raw_data.body === 'string' ? raw_data.body : '');\n        this.type =\n            raw_data.booking_type ||\n            raw_data.type ||\n            (raw_data.visitors ? 'external' : null) ||\n            'internal';\n        this.has_catering = !!raw_data.has_catering;\n        this.attendees = (raw_data.attendees || raw_data._attendees || []).map((i) => new User(i));\n        this.organiser =\n            (raw_data.organizer || raw_data.organiser ? new User(raw_data.organizer || raw_data.organiser) : User.active_user) || new User();\n        this.creator = raw_data.creator ? new User(raw_data.creator) : this.organiser;\n        this._location = raw_data.location_name || raw_data.location || '';\n        this.all_day = !!(raw_data.all_day || this.duration > 23 * 60);\n        this.setup = raw_data.setup || 0;\n        this.breakdown = raw_data.breakdown || 0;\n        this.recurrence = raw_data.recurrence || raw_data.recurr || {};\n        if (this.recurrence.end && this.recurrence.end < new Date().getTime()) {\n            (this as any).recurrence = {\n                ...this.recurrence,\n                start: this.recurrence.start,\n                end: this.recurrence.end,\n            };\n        }\n        this.recurrence = {\n            ...this.recurrence,\n            series_id: raw_data.seriesMasterId\n        };\n        this.notes = raw_data.notes || [];\n        this.equipment_codes = raw_data.equipment_codes || raw_data.equipment_code || {};\n        this.expected_attendees = raw_data.expected_attendees || {};\n        this.approval_status = raw_data.approval_status || raw_data.status || {};\n        this.checked_in = raw_data.checked_in || raw_data.checkins || [];\n        this.notify_users = raw_data.notify_users || [];\n        if (raw_data.description && !this.notes.find((i) => i.type === 'description')) {\n            this.notes = [\n                ...this.notes,\n                {\n                    type: 'description',\n                    date: -1,\n                    message: raw_data.description,\n                    author: this.organiser.email,\n                },\n            ];\n        }\n        this._display = {\n            date: start.format('DD MMM YYYY'),\n            time: `${start.format('h:mma')} - ${dayjs(start)\n                .add(this.duration, 'm')\n                .format('h:mma')}`,\n            start: start.format('h:mma'),\n            end: dayjs(start).add(this.duration, 'm').format('h:mma'),\n            duration: humaniseDuration(this.duration),\n        };\n        const space_ids = unique(\n            raw_data.room_ids || raw_data.room_id || raw_data._space_list || []\n        );\n        const space_service = ServiceManager.serviceFor(Space);\n        if (space_service) {\n            this.space_list = space_ids.map((id) => {\n                return space_service.find(id) || new Space({ id, name: id, email: id });\n            });\n        } else {\n            this.space_list = space_ids.map((id) => new Space({ id, name: id, email: id }));\n        }\n        if (raw_data.show_as && raw_data.show_as === 'cancelled') {\n            this.space_list.forEach((space) => (this.approval_status[space.email] = 'declined'));\n        }\n        this.catering = (raw_data.catering instanceof Array ? raw_data.catering : []).map(\n            (i) => new CateringOrder(i)\n        );\n        this.edits =\n            raw_data.edits instanceof Array\n                ? raw_data.edits\n                : unique(flatten(Object.keys(raw_data.edits || {}).map((i) => raw_data.edits[i])));\n    }\n\n    /** Whether booking has been declined */\n    public get declined(): boolean {\n        for (const space of this.space_list) {\n            if ((this.approval_status[space.email] || '').indexOf('decline') >= 0) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /** Whether booking has been approved */\n    public get approved(): boolean {\n        for (const space of this.space_list) {\n            if (\n                this.approval_status[space.email] &&\n                (this.approval_status[space.email].indexOf('tentative') >= 0 ||\n                    this.approval_status[space.email].indexOf('decline') >= 0)\n            ) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /** Whether booking is tentative */\n    public get tentative(): boolean {\n        for (const space of this.space_list) {\n            if (\n                this.approval_status[space.email] &&\n                this.approval_status[space.email].indexOf('tentative') >= 0\n            ) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /** Whether booking contains external visitors in the attendee list */\n    public get has_visitors(): boolean {\n        return this.attendees.reduce((a, v) => a || v.external, false);\n    }\n\n    /** Status of the booking */\n    public get status(): 'future' | 'upcoming' | 'done' | 'started' | 'in_progress' {\n        const now = dayjs();\n        const date = dayjs(this.date);\n        if (now.isBefore(date.subtract(15, 'm'), 'm')) {\n            return 'future';\n        } else if (now.isBefore(date, 'm')) {\n            return 'upcoming';\n        } else if (now.isBefore(date.add(15, 'm'), 'm')) {\n            return 'started';\n        } else if (now.isBefore(date.add(this.duration, 'm'), 'm')) {\n            return 'in_progress';\n        }\n        return 'done';\n    }\n\n    /** Description of the booking purpose */\n    public get description(): string {\n        const note = (this.notes || []).find((i) => i.type === 'description');\n        return note ? note.message : '';\n    }\n\n    /** Get the first space from the space list */\n    public get space(): Space {\n        return this.space_list[0] || ({ level: { name: '<No Location>' } } as any);\n    }\n\n    /** Display value for the date */\n    public get date_string(): string {\n        return this._display.date;\n    }\n    /** Display valuie for the start and end times of the booking */\n    public get time_period(): string {\n        return this._display.time;\n    }\n    /** Display value for the start time of the booking */\n    public get start_time(): string {\n        return this._display.start;\n    }\n    /** Display value for the end time of the booking */\n    public get end_time(): string {\n        return this._display.end;\n    }\n    /** Display value for the duration of the booking */\n    public get length_string(): string {\n        return this._display.duration;\n    }\n    /** Display value for the location of the booking */\n    public get location(): string {\n        return (\n            this.space_list.map((space) => space.name).join(', ') ||\n            this._location ||\n            'No location set'\n        );\n    }\n    /** Display value for the level of the first space in the booking */\n    public get level(): string {\n        return this.space.level.name;\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): Booking {\n        return new Booking(this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): Booking {\n        return new Booking({\n            ...this.toJSON(),\n            id: null,\n            email: null,\n            icaluid: null,\n        });\n    }\n\n    /**\n     * Convert object into plain object\n     */\n    public toJSON(this: Booking): HashMap {\n        const data = super.toJSON();\n        const date = dayjs(data.date);\n        data.start = data.all_day ? date.startOf('d').unix() : date.unix();\n        data.end = date.add(data.duration || 60, 'm').unix();\n        data.auto_approve = data.space_list.map((space) => {\n            return !this.id || this.time_changed\n                ? !space ||\n                      (space instanceof Space &&\n                          !space.byRequest({\n                              date: data.date,\n                              duration: data.duration,\n                              host: data.organiser,\n                          }))\n                : (this.approval_status[space.email] || '').indexOf('tentative') < 0;\n        });\n        if (data.body && !data.notes.find((note) => note.message === data.body)) {\n            data.notes = data.notes\n                .filter((note) => note.type !== 'description');\n            data.notes.push({\n                type: 'description',\n                message: data.body,\n                author: this.creator.email,\n                date: dayjs().valueOf(),\n            } as BookingNote);\n            data.notes.sort((a, b) => b.date - a.date);\n        }\n        data.organiser = data.organiser.toJSON();\n        data.creator = data.creator.toJSON();\n        data.attendees = unique([data.organiser].concat(data.attendees.map(i => i.toJSON())), 'email');\n        data.notify_users = [data.organiser.email];\n        data.room_ids = data.space_list.map((space) => space.email);\n        data.old_date = this.date;\n        if (data.id) {\n            data.from_room = this.space ? this.space.email : '';\n        }\n        data.description = data.body;\n        data.recurr = data.recurrence;\n        data.booking_type = data.type;\n        if (data.all_day) {\n            data.all_day = date.format('YYYY-MM-DD');\n        }\n        delete data.body;\n        delete data.type;\n        delete data.recurrence;\n        delete data.space_list;\n        delete data.date;\n        delete data.duration;\n        delete data.display;\n        delete data.email;\n        delete data.name;\n        return data;\n    }\n}\n","import { FormGroup, FormControl, Validators, AbstractControl } from '@angular/forms';\nimport { Subscription } from 'rxjs';\n\nimport {\n    padZero,\n    humaniseDuration,\n    timeFormatString,\n} from '../../../shared/utilities/general.utilities';\n\nimport { generateMockUser } from '../users/user.utilities';\nimport { Booking } from './booking.class';\nimport { User } from '../users/user.class';\nimport { Space } from '../spaces/space.class';\nimport { CateringOrder } from '../catering/catering-order.class';\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { AvailableBookingFields } from 'src/app/shared/utilities/settings.interfaces';\nimport { BookingRule, SpaceCheckOptions, SpaceRules, SpaceRuleOptions } from './booking.interfaces';\nimport { validateEndTime } from 'src/app/shared/utilities/validation.utilities';\n\nimport * as faker from 'faker';\nimport * as dayjs from 'dayjs';\nimport { ServiceManager } from '../service-manager.class';\n\nconst MINUTE = 1;\nconst HOUR = 60;\nconst DAY = 24 * HOUR;\nconst WEEK = 7 * DAY;\nconst MONTH = 30 * DAY;\n\nconst DURATION_MAP: { [duration: string]: number } = {\n    month: MONTH,\n    months: MONTH,\n    week: WEEK,\n    weeks: WEEK,\n    day: DAY,\n    days: DAY,\n    hour: HOUR,\n    hours: HOUR,\n    minute: MINUTE,\n    minutes: MINUTE,\n};\n\nlet BOOKING_COUNT = 0;\nlet BOOKING_DATE = dayjs().hour(6).minute(0).subtract(1, 'd').startOf('m');\n\n/**\n * Set the initial time used for generating mock bookings\n * @param time New initial time as ms from UTC epoch\n */\nexport function setMockBookingStartDatetime(time: number) {\n    BOOKING_DATE = dayjs(time).startOf('m');\n}\n\n/**\n * Create mock raw API data for a booking\n * @param override Overrides the properties of the generated booking with it's own\n */\nexport function generateMockBooking(override: HashMap = {}) {\n    const id = `booking-${BOOKING_COUNT++}`;\n    BOOKING_DATE = BOOKING_DATE.add(30, 'm');\n    const start = BOOKING_DATE.valueOf();\n    const duration = (BOOKING_COUNT % 4 + 2) * 15;\n    BOOKING_DATE = BOOKING_DATE.add(60, 'm');\n    return {\n        id,\n        icaluid: padZero(Math.floor(Math.random() * 99999999), 8),\n        title: `${faker.commerce.productName()} Meeting`,\n        attendees: Array(Math.floor(Math.random() * 5 + 2))\n            .fill(0)\n            .map((i) => generateMockUser()),\n        organiser: generateMockUser(),\n        start_epoch: dayjs(start).unix(),\n        end_epoch: dayjs(start).add(duration, 'm').unix(),\n        description: faker.lorem.paragraph(),\n        notes: [{ type: 'other', message: faker.lorem.paragraph() }],\n        location: faker.address.city(),\n        has_catering: Math.floor(Math.random() * 34567) % 3 === 0,\n        catering: [],\n        room_ids: [],\n        ...override,\n    };\n}\n\nexport interface IBookingSlot {\n    start: number;\n    end: number;\n}\n\n/**\n * Generate a list of free time slots between the given bookings\n * @param list List of bookings to find slots between\n * @param min_size Minimum length of a free slot in minutes\n */\nexport function getFreeBookingSlots(list: Booking[], min_size: number = 30): IBookingSlot[] {\n    /* istanbul ignore else */\n    if (!list) {\n        return [\n            {\n                start: 0,\n                end: dayjs().startOf('m').valueOf() * 10,\n            },\n        ];\n    }\n    const slots: IBookingSlot[] = [];\n    let start = dayjs(0);\n    list.sort((a, b) => a.date - b.date);\n    for (const booking of list) {\n        const bkn_start = dayjs(booking.date);\n        const bkn_end = bkn_start.add(booking.duration, 'm');\n        if (bkn_start.isAfter(start)) {\n            const diff = Math.abs(bkn_start.diff(start, 'm'));\n            /* istanbul ignore else */\n            if (diff >= min_size) {\n                slots.push({ start: start.valueOf(), end: bkn_start.valueOf() });\n            }\n            start = bkn_end;\n        } else if (start.startOf('m').valueOf() === bkn_start.startOf('m').valueOf()) {\n            start = bkn_end;\n        }\n    }\n    slots.push({\n        start: start.valueOf(),\n        end: dayjs().startOf('m').valueOf() * 10,\n    });\n    return slots;\n}\n\n/**\n * Get the next free time slot from the given bookings\n * @param list List of bookings to find the next slot\n * @param date Date to find next slot after in ms since UTC epoch\n * @param min_size Minimum length of the free slot in minutes\n */\nexport function getNextFreeBookingSlot(\n    list: Booking[],\n    date: number = dayjs().valueOf(),\n    min_size: number = 30\n): IBookingSlot {\n    const slots = getFreeBookingSlots(list, min_size);\n    const time = dayjs(date).startOf('m').second(1);\n    for (const block of slots) {\n        const start = dayjs(block.start).startOf('m');\n        const end = dayjs(block.end).startOf('m');\n        if (start.isAfter(time, 's')) {\n            return block;\n        } else if (time.isBefore(end, 's')) {\n            const duration = end.diff(time, 'm');\n            /* istanbul ignore else */\n            if (duration >= min_size) {\n                return block;\n            }\n        }\n    }\n    return slots[slots.length - 1];\n}\n\n/**\n * Generate form fields for the given booking\n * @param booking Booking to generate form for\n * @param current_user Current user of the system to default as the host\n */\nexport function generateBookingForm(\n    booking: Booking,\n    use_fields: AvailableBookingFields[]\n): FormGroup {\n    if (!booking) {\n        throw Error('No booking passed');\n    }\n    const user_service = ServiceManager.serviceFor(User);\n    const current_user =\n        user_service.current ||\n        new User({ id: 'local-user', name: 'Local User', email: 'local@place.tech' });\n    const fields: HashMap<FormControl> = {\n        id: new FormControl(booking.id || ''),\n        space_list: new FormControl(booking.space_list, []),\n        date: new FormControl(booking.date, [Validators.required]),\n        duration: new FormControl(booking.duration),\n        organiser: new FormControl(booking.organiser || current_user, [Validators.required]),\n        attendees: new FormControl(booking.attendees, []),\n        title: new FormControl(booking.title || '', [Validators.required]),\n        type: new FormControl(booking.type),\n        body: new FormControl(booking.body),\n        notes: new FormControl(booking.notes),\n        equipment_codes: new FormControl(booking.equipment_codes),\n        expected_attendees: new FormControl(booking.expected_attendees),\n        catering: new FormControl(\n            booking.catering.map(\n                (order) => new CateringOrder({ ...order, booking_date: booking.date })\n            )\n        ),\n        recurrence: new FormControl(booking.recurrence),\n        all_day: new FormControl(!!booking.all_day),\n        has_catering: new FormControl(!!booking.has_catering),\n        needs_space: new FormControl(true),\n    };\n    fields.duration.setValidators([Validators.required, validateEndTime(fields.date)]);\n    /* istanbul ignore else */\n    if (booking.id) {\n        fields.organiser.disable();\n        /* istanbul ignore else */\n        if (dayjs(booking.date).isBefore(dayjs(), 'm')) {\n            fields.date.disable();\n        }\n    } else {\n        fields.date.setValidators([Validators.required, isFuture]);\n        fields.date.updateValueAndValidity();\n    }\n    const simplified_fields: HashMap<FormControl> = [\n        'id',\n        'space_list',\n        'space_ids',\n        'notes',\n        'equipment_codes',\n        'expected_attendees',\n        ...use_fields,\n    ].reduce((map, key) => {\n        /* istanbul ignore else */\n        if (fields[key]) {\n            map[key] = fields[key];\n        }\n        return map;\n    }, {});\n    if (simplified_fields.all_day) {\n        simplified_fields.all_day.valueChanges.subscribe((value) => {\n            if (value) {\n                simplified_fields.time.disable();\n                simplified_fields.duration.disable();\n            } else {\n                simplified_fields.time.enable();\n                simplified_fields.duration.enable();\n            }\n        });\n    }\n    // Generate form group for booking item\n    const form = new FormGroup(simplified_fields);\n    return form;\n}\n/**\n * Validate whether date is in the future\n * @param control Control to check value\n */\nexport function isFuture(control: AbstractControl) {\n    const now = dayjs().startOf('m');\n    const date = dayjs(control.value);\n    return date.isBefore(now.subtract(5, 'm'), 's') ?\n        { date: 'Date needs to be in the future' } :\n        null;\n}\n\n/**\n * Get booking rules for the given user and space\n * @param user User to determine applicable rules\n * @param space Space to get rules for\n * @param time Booking start time in ms since UTC epoch\n * @param rules List of booking rules for the building\n */\nexport function rulesForSpace(options: SpaceRuleOptions): SpaceRules {\n    if (!options) {\n        throw Error('Options are needed to check for rule matches');\n    }\n    const space_rules_for_user: SpaceRules = {\n        auto_approve: true,\n        hide: true,\n    };\n    /* istanbul ignore else */\n    if (options.space) {\n        for (const type in options.rules) {\n            if (\n                options.rules.hasOwnProperty(type) &&\n                options.rules[type] instanceof Array &&\n                options.space.zones.find((zone) => zone === type)\n            ) {\n                for (const rule_block of options.rules[type]) {\n                    /* istanbul ignore else */\n                    if (\n                        checkRules({\n                            user: options.user,\n                            space: options.space,\n                            time: options.time,\n                            recurr_end: options.recurr_end,\n                            duration: options.duration,\n                            rules: rule_block.conditions,\n                        })\n                    ) {\n                        const ruleset = rule_block.rules;\n                        const conditions = rule_block.conditions;\n                        space_rules_for_user.hide = false;\n                        /* istanbul ignore else */\n                        if (conditions.max_length) {\n                            space_rules_for_user.max_length = stringToMinutes(\n                                conditions.max_length as string\n                            );\n                        }\n                        /* istanbul ignore else */\n                        if (conditions.min_length) {\n                            space_rules_for_user.min_length = stringToMinutes(\n                                conditions.min_length as string\n                            );\n                        }\n                        // NOTE: use max_length in conditions instead of book_length in rules\n                        // if (ruleset.book_length) {\n                        //     space_rules_for_user.max_length = stringToMinutes(ruleset.book_length as string);\n                        // }\n                        /* istanbul ignore else */\n                        if (ruleset.auto_approve !== undefined) {\n                            space_rules_for_user.auto_approve = ruleset.auto_approve;\n                        }\n                        break;\n                    }\n                }\n            }\n            /* istanbul ignore else */\n            if (!space_rules_for_user.hide) {\n                break;\n            }\n        }\n    }\n    return space_rules_for_user;\n}\n\n/**\n * Check if user matches the given ruleset\n * @param user User to determine applicable rules\n * @param space Space to get rules for\n * @param time Booking start time in ms since UTC epoch\n * @param rules List of booking rules for the building\n */\nfunction checkRules(options: SpaceCheckOptions): boolean {\n    /* istanbul ignore else */\n    if (options.rules) {\n        const time = dayjs(options.time);\n        const recurr = options.recurr_end ? dayjs(options.recurr_end) : dayjs();\n        const count = Object.keys(options.rules).length;\n        let matches = 0;\n        for (const key of Object.keys(options.rules)) {\n            let counter = 0;\n            const condition: string[] =\n                options.rules[key] instanceof Array\n                    ? (options.rules[key] as [])\n                    : [options.rules[key] as string];\n            switch (key) {\n                case 'groups':\n                    /* istanbul ignore else */\n                    if (options.user && options.user.groups) {\n                        counter = 0;\n                        condition.forEach((i) =>\n                            options.user.groups.find((j) => j === i) ? counter++ : null\n                        );\n                        /* istanbul ignore else */\n                        if (counter > 0) {\n                            matches++;\n                        }\n                    }\n                    break;\n                case 'locations':\n                    /* istanbul ignore else */\n                    if (options.user && options.user.location) {\n                        counter = 0;\n                        condition.forEach((i) =>\n                            (options.user.last_location.name || '').indexOf(i) >= 0\n                                ? counter++\n                                : null\n                        );\n                        /* istanbul ignore else */\n                        if (counter >= options.rules[key].length) {\n                            matches++;\n                        }\n                    }\n                    break;\n                case 'is_before':\n                    /* istanbul ignore else */\n                    if (options.time) {\n                        const duration = stringToMinutes(condition[0]);\n                        const check = dayjs().add(duration, 'm');\n                        let match = time.isBefore(check, 'm');\n                        /* istanbul ignore else */\n                        if (recurr) {\n                            match = match && recurr.isBefore(check, 'm');\n                        }\n                        matches += match ? 1 : 0;\n                    }\n                    break;\n                case 'is_after':\n                    /* istanbul ignore else */\n                    if (options.time) {\n                        const duration = stringToMinutes(condition[0]);\n                        const check = dayjs().add(duration, 'm');\n                        time.isAfter(check, 'm') ? matches++ : '';\n                    }\n                    break;\n                case 'min_length':\n                    /* istanbul ignore else */\n                    if (options.duration) {\n                        durationGreaterThanOrEqual(options.duration, condition[0]) ? matches++ : '';\n                    }\n                    break;\n                case 'max_length':\n                    /* istanbul ignore else */\n                    if (options.duration) {\n                        durationGreaterThanOrEqual(condition[0], options.duration) ? matches++ : '';\n                    }\n                    break;\n            }\n        }\n        return matches >= count;\n    }\n    return false;\n}\n\n/**\n * Get minimum duration from ruleset in minutes\n * Default to 5min\n */\nexport function getMinLength(rule_list: HashMap<BookingRule[]>): number {\n    return Object.values(rule_list).reduce((min, block) => {\n        const min_block = block.reduce((min_length, el) => {\n            if (el.conditions.min_length && stringToMinutes(el.conditions.min_length) > min) {\n                return stringToMinutes(el.conditions.min_length);\n            } else {\n                return min_length;\n            }\n        }, 5);\n        if (min_block > min) {\n            return min_block;\n        } else {\n            return min;\n        }\n    }, 5) as number;\n}\n\n/**\n * Whether the first input is greater than the last. Converts duration strings into minutes\n * @param duration_1 First input can be a number in minutes or a duration string e.g. `1 hour`\n * @param duration_2 Second input can be a number in minutes or a duration string e.g. `30 minutes`\n */\nexport function durationGreaterThanOrEqual(\n    duration_1: string | number,\n    duration_2: string | number\n) {\n    const first: number = typeof duration_1 === 'string' ? stringToMinutes(duration_1) : duration_1;\n    const second: number =\n        typeof duration_2 === 'string' ? stringToMinutes(duration_2) : duration_2;\n    return first >= second;\n}\n\n/**\n * Conver time string into minutes\n * @param str timestring e.g. `'1 day'`, `'15 minutes'`, `'2 weeks'`\n */\nexport function stringToMinutes(str: string): number {\n    const parts = str.split(' ');\n    return +parts[0] * DURATION_MAP[parts[1]];\n}\n\n/**\n * Get current status within bookings\n * @param bookings List of bookings\n * @param host Host of the new event\n * @param date Datetime of the new event\n */\nexport function statusFromBookings(\n    bookings: Booking[],\n    bookable: boolean,\n    requestable: boolean,\n    date: number = dayjs().valueOf()\n) {\n    const free_slots = getFreeBookingSlots(bookings);\n    const now = dayjs(date);\n    const next_free_slot = free_slots.find((slot) => {\n        const start = dayjs(slot.start);\n        const end = dayjs(slot.end);\n        return start.isAfter(now) || (now.isAfter(start, 's') && now.isBefore(end, 'm'));\n    });\n    const start = dayjs(next_free_slot.start);\n    const end = dayjs(next_free_slot.end);\n    const currently_free = now.isAfter(start, 's') && now.isBefore(end, 'm');\n    const time_until_next_block = humaniseDuration(\n        currently_free ? end.diff(now, 'm') : start.diff(now, 'm'),\n        true\n    );\n    const free_tomorrow = !currently_free && !start.isSame(now, 'd');\n    const free_today = currently_free && !end.isSame(now, 'd');\n    return {\n        status: !bookable\n            ? 'Not Bookable'\n            : currently_free\n            ? requestable\n                ? 'Available by Request'\n                : 'Available'\n            : 'Meeting in Progress',\n        available_until: free_today\n            ? 'No meetings today'\n            : currently_free\n            ? `Free until ${end.format(timeFormatString())}(${time_until_next_block})`\n            : free_tomorrow\n            ? 'Unavailable today'\n            : `Free at ${start.format(timeFormatString())}(${time_until_next_block})`,\n    };\n}\n","\nimport { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\n\nimport { BaseAPIService } from '../base.service';\nimport { Booking } from './booking.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\nimport { ServiceManager } from '../service-manager.class';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class BookingsService extends BaseAPIService<Booking> {\n    constructor(protected _composer: ComposerService) {\n        super(_composer);\n        ServiceManager.setService(Booking, this);\n        this._name = 'Bookings';\n        this._api_route = 'bookings';\n        this._compare = (a, b) => !(a.id || '').localeCompare(b.id) || !(a.icaluid || '').localeCompare(b.icaluid);\n    }\n\n    public accept(id: string, fields?: HashMap) {\n        return this.task(id, 'accept', fields);\n    }\n\n    public decline(id: string, fields?: HashMap) {\n        return this.task(id, 'concierge_decline', fields);\n    }\n\n    protected process(raw_data: HashMap): Booking {\n        return new Booking(raw_data);\n    }\n}\n","import { CateringItem } from \"./catering-item.class\";\nimport { HashMap } from \"../../../shared/utilities/types.utilities\";\n\nexport class CateringCategory extends CateringItem {\n    /** List of items associated with the category */\n    public readonly items: readonly CateringItem[];\n    /** Whether child items are part of a package */\n    public readonly package: boolean;\n    /** List of zone ids associated with the category */\n    public readonly zones: readonly string[];\n\n    public get can_order_anytime(): boolean {\n        return (\n            this.order_anytime ||\n            this.items.reduce(\n                (anytime, item) => anytime || item.can_order_anytime,\n                false\n            )\n        );\n    }\n\n    constructor(data: HashMap) {\n        super(data);\n        this.items = (data.items || []).map(item =>\n            item.items ? new CateringCategory(item) : new CateringItem(item)\n        );\n        this.package = data.package === 'true' || data.package === true;\n        this.zones = data.zones && data.zones.length ? [ ...data.zones ] : [];\n        (this as any).must_select = this.must_select || this.items.length;\n        (this as any).order_anytime = !!data.order_anytime && this.package;\n    }\n\n    /**\n     * Convert class object into plain object\n     */\n    public toJSON(this: CateringItem): HashMap {\n        const obj = super.toJSON();\n        obj.items = obj.items.map((item: CateringItem) => item.toJSON());\n        obj.order_anytime = !!obj.order_anytime && obj.package;\n        return obj;\n    }\n}\n","import { HashMap } from \"../../../shared/utilities/types.utilities\";\n\nexport interface CateringAvailability {\n    /** Month of the year that the item starts being available */\n    readonly from_month: number;\n    /** Month of the year that the item ends being available */\n    readonly to_month: number;\n}\n\nexport class CateringItem {\n    /** Unique ID of the catering item */\n    public readonly id: string;\n    /** Display name of the catering item */\n    public readonly name: string;\n    /** Description of the item */\n    public readonly description: string;\n    /** URL to the image associated with the item */\n    public readonly image_path: string;\n    /** Type of catering item */\n    public readonly catering_type: string;\n    /** Availability of the item */\n    public readonly available: CateringAvailability;\n    /** Time in hours that is needed to prepare the item beforehand */\n    public readonly prior_notice: number;\n    /** Cost of the item without decimals */\n    public readonly unit_price: number;\n    /** Cost of the item without decimals */\n    public readonly supplier_cost: number;\n    /** Minimum number this item allowed in an order */\n    public readonly minimum_quantity: number;\n    /** Maximum number this item allowed in an order */\n    public readonly maximum_quantity: number;\n    /** List of categories that the item is contained in */\n    public readonly parent_categories: readonly string[];\n    /** Allegen information associated with the item */\n    public readonly allergy: string;\n    /** Whether the supply of this item has run out */\n    public readonly out_of_stock: boolean;\n    /** Whether item can be ordered within the time limit set by the building */\n    public readonly order_anytime: boolean;\n    /** Number of child items that must be selected as part of the package */\n    public readonly must_select: number;\n    /** Number of this item in the assoicated order */\n    private _amount = 0;\n    /** Unique ID of the catering item */\n    private instance_id: string;\n\n\n    public get can_order_anytime(): boolean {\n        return this.order_anytime;\n    }\n\n    /** Number of this item in the assoicated order */\n    public get amount(): number {\n        return this._amount || 0;\n    }\n\n    /** Total cost of the amount of items set */\n    public get total(): number {\n        return (this._amount * this.unit_price) || 0;\n    }\n\n    constructor(data: HashMap) {\n        this.instance_id = `item-${Math.floor(Math.random() * 999_999_999)}`\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.available = {\n            from_month: (data.available ? data.available.from_month : data.available_from) || -1,\n            to_month: (data.available ? data.available.to_month : data.available_to) || -1,\n        };\n        this.description = data.description || '';\n        this.prior_notice = data.prior_notice || data.notice;\n        this.unit_price = data.unit_price || data.price || 0;\n        this.supplier_cost = data.supplier_cost;\n        this.minimum_quantity = Math.max(0, data.minimum_quantity || 0);\n        this.maximum_quantity = Math.max(1, data.maximum_quantity || 999);\n        this.parent_categories = data.category_ids || data.parent_categories || data.categories;\n        this.order_anytime = !!data.order_anytime;\n        this.image_path = data.image_path || '';\n        this.catering_type = data.catering_type;\n        this.must_select = data.must_select || 0;\n        this.out_of_stock = !!data.out_of_stock || data.hide;\n        this._amount = data._amount || data.amount || 0;\n        this.allergy = data.allergy;\n    }\n\n    public setAmount(amount: number = 0): void {\n        if (amount <= this._amount) {\n            if (amount < this.minimum_quantity) {\n                amount = 0;\n            }\n        } else {\n            if (amount < this.minimum_quantity) {\n                amount = this.minimum_quantity;\n            }\n        }\n        this._amount = Math.max(0, Math.min(this.maximum_quantity, amount));\n    }\n\n    /**\n     * Increase amount of the item the order\n     * @param amount Amount to increase by\n     */\n    public addToOrder(amount: number = 1) {\n        amount = Math.max(1, amount);\n        this._amount += amount;\n        if (this._amount < 0) {\n            this._amount = 0;\n        } else if (this._amount < this.minimum_quantity) {\n            this._amount = this.minimum_quantity;\n        } else if (this._amount > this.maximum_quantity) {\n            this._amount = this.maximum_quantity;\n        }\n    }\n\n    /**\n     * Decrease amount of the item the order\n     * @param amount Amount to decrease by\n     */\n    public removeFromOrder(amount: number = 1) {\n        amount = Math.max(1, amount);\n        this._amount -= amount;\n        if (this._amount < 0) {\n            this._amount = 0;\n        } else if (this._amount < this.minimum_quantity) {\n            this._amount = 0;\n        }\n    }\n\n    /**\n     * Convert class object into plain object\n     */\n    public toJSON(this: CateringItem): HashMap {\n        const obj: any = { ...this };\n        // Remove local private members\n        delete obj._changes;\n        delete obj._server_names;\n        // Convert remaining members to be public\n        obj.price = obj.unit_price;\n        obj.hide = obj.out_of_stock;\n        obj.categories = obj.parent_categories;\n        const keys = Object.keys(obj);\n        for (const key of keys) {\n            if (key[0] === '_') {\n                const new_key = key.substr(1);\n                obj[new_key] = obj[key];\n                delete obj[key];\n            } else if (obj[key] === undefined) {\n                delete obj[key];\n            }\n        }\n        return obj;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringCategory } from './catering-category.class';\nimport { BaseAPIService } from '../base.service';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CateringMenuService extends BaseAPIService<CateringItem | CateringCategory> {\n    constructor(protected _composer: ComposerService) {\n        super(_composer);\n        this._name = 'Catering Menu';\n        this._api_route = 'menu';\n    }\n\n    /**\n     * Convert user data to local format\n     * @param user User data\n     */\n    protected processItem(item: HashMap) {\n        return item.items ? new CateringCategory(item) : new CateringItem(item);\n    }\n}\n","import { CateringItem } from './catering-item.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\n\nimport { CateringCategory } from './catering-category.class';\nimport { Booking } from '../bookings/booking.class';\n\nimport * as dayjs from 'dayjs';\n\nexport type CateringOrderMutableProperties =\n    | 'items'\n    | 'location_id'\n    | 'location'\n    | 'delivery_time'\n    | 'charge_code'\n    | 'notes'\n    | 'status';\n\nexport type CateringOrderStatus = 'accepted' | 'preparing' | 'ready' | 'delivered' | 'cancelled';\n\nexport class CateringOrder {\n    /** Booking associated with the order */\n    public booking: Booking;\n    /** Whether the order status change is loading */\n    public loading: boolean;\n    /** Unique ID for the catering order */\n    readonly id: string;\n    /** Unique ID for the catering order */\n    readonly booking_id: string;\n    /** Number of minutes after the start of the associated meeting to delivery the order */\n    readonly booking_date: number = dayjs()\n        .startOf('m')\n        .valueOf();\n    /** Number of minutes after the start of the associated meeting to delivery the order */\n    readonly delivery_time: number = 0;\n    /** ID of the location to deliver the items to */\n    readonly location_id: string = '';\n    /** Display text for the location to deliver the items to */\n    readonly location: string = '';\n    /** Status of the catering order */\n    readonly status: CateringOrderStatus;\n    /** Whether items in the order need to be prepared in the kitchen */\n    readonly kitchen: boolean;\n    /** Whether items in the order are in the pantry */\n    readonly pantry: boolean;\n    /** List of items */\n    readonly items: readonly (CateringItem | CateringCategory)[] = [];\n    /** Creation time of the order */\n    readonly created_at: number;\n    /** Charge code associated with the order */\n    readonly charge_code: string;\n    /** Notes associated with the order */\n    readonly notes: string;\n    /** Mapping of properties to their changes */\n    private _changes: HashMap = {};\n    /** Map of local property names to server ones */\n    protected _server_names: HashMap<string> = {};\n    /** Currency code for the location of the order */\n    public symbol: string;\n    /** Whether the is an error with the order */\n    public error: boolean;\n\n    constructor(data: HashMap) {\n        this.id = data.id || `order-${Math.floor(Math.random() * 999_999_999)}`;\n        this.booking = data.booking;\n        this.delivery_time = typeof data.delivery_time === 'number' ? data.delivery_time : 0;\n        this.booking_date = data.booking_date;\n        this.location_id = data.location_id || data.location || (data.space ? data.space.id : '') || '';\n        this.location = data.location || (data.space ? data.space.name : '') || '';\n        this.status = data.status || 'accepted';\n        this.charge_code = data.charge_code || data.code;\n        this.notes = data.notes;\n        this.kitchen = data.kitchen instanceof Array ? !!data.kitchen.length : data.kitchen;\n        this.pantry = data.pantry instanceof Array ? !!data.pantry.length : data.pantry;\n        this.symbol = data.symbol || 'USD';\n        this.items = (data.items || [])\n            .map(item => (item.items ? new CateringCategory(item) : new CateringItem(item)))\n            .filter(item => !!item.amount);\n    }\n\n    /** Mapping of properties to their changes */\n    public get changes(): HashMap<any> {\n        return { ...this._changes } || {};\n    }\n\n    /** Display string for the types of items in the order */\n    public get type(): string {\n        let type = '';\n        /* istanbul ignore else */\n        if (this.kitchen) type += 'Kitchen';\n        /* istanbul ignore else */\n        if (this.pantry) {\n            /* istanbul ignore else */\n            if (type) type += ' + ';\n            type += 'Pantry';\n        }\n        return type;\n    }\n\n    /** Total cost of the order */\n    public get total(): number {\n        return this.items.reduce((total, item) => total + (item.total || 0), 0);\n    }\n\n    /** Total number of items in the order */\n    public get item_count(): number {\n        return this.items.reduce((total, item) => total + (item.amount || 0), 0);\n    }\n\n    /** Display string for the delivery time of the order */\n    public get deliver_at_time(): string {\n        const date = this.booking ? this.booking.date : this.booking_date;\n        return dayjs(date)\n            .add(this.delivery_time, 'm')\n            .format('h:mm A');\n    }\n\n    /** Display string for the delivery date of the order */\n    public get deliver_on_date(): string {\n        const date = this.booking ? this.booking.date : this.booking_date;\n        return dayjs(date)\n            .add(this.delivery_time, 'm')\n            .format('DD MMM YYYY');\n    }\n\n    /** Whether there are any pending changes to be saved */\n    public get has_changes(): boolean {\n        return !!Object.keys(this._changes).length;\n    }\n\n    /**\n     * Store pending changes for the given property\n     * @param name Property to update value\n     * @param value New value to save for property\n     */\n    public storePendingChanges(name: CateringOrderMutableProperties, value: any): void {\n        this._changes[name] = value;\n    }\n\n    /** Clear any changes waiting to be saved */\n    public clearPendingChanges() {\n        delete this._changes;\n        this._changes = {};\n    }\n\n    /**\n     * Convert class object into plain object\n     */\n    public toJSON(this: CateringOrder, with_changes: boolean = true): HashMap {\n        const obj: any = { ...this };\n        // Remove local private members\n        delete obj._changes;\n        delete obj._server_names;\n        // Remove local public members\n        delete obj.booking;\n        delete obj.loading;\n\n        // Convert remaining members to be public\n        const keys = Object.keys(obj);\n        for (const key of keys) {\n            if (key[0] === '_') {\n                const new_key = this._server_names[key.substr(1)] || key.substr(1);\n                obj[new_key] = obj[key];\n                delete obj[key];\n            } else if (obj[key] === undefined) {\n                delete obj[key];\n            }\n        }\n        obj.items = obj.items.map((item: CateringItem) => item.toJSON());\n        return with_changes ? { ...obj, ...this._changes } : obj;\n    }\n}\n","import { HashMap } from 'src/app/shared/utilities/types.utilities';\n\nimport { BuildingLevel } from '../organisation/level.class';\nimport { Organisation } from '../organisation/organisation.class';\nimport { ServiceManager } from '../service-manager.class';\n\nexport class MapLocation {\n    /** ID of the element on the associated map */\n    public readonly id?: string;\n    /** Name of the location */\n    public readonly name?: string;\n    /** X coordinate of the location */\n    public readonly x?: number;\n    /** Y coordinate of the location */\n    public readonly y?: number;\n    /** Level details for the location */\n    public readonly level: BuildingLevel;\n    /** Whether the position is fixed */\n    public readonly fixed: boolean;\n    /** Accuracy of the location when not fixed */\n    public readonly confidence?: number;\n    /** Whether location is at a desk */\n    public readonly at_desk?: boolean;\n    /** Whether location is set */\n    public readonly empty: boolean;\n    /** Service for managing buildings */\n    protected get _service() {\n        return ServiceManager.serviceFor(MapLocation);\n    }\n\n    /** Display string for the building and level of the location */\n    public get display(): string {\n        const service = ServiceManager.serviceFor(Organisation);\n        if (!service) {\n            return this.level.name;\n        }\n        const bld = service.buildings.find((bld) => bld.id === this.level.building_id);\n        return bld ? `${bld.name}, ${this.level.name}` : this.level.name;\n    }\n\n    /** Whether location is in a different building from the active one */\n    public get in_another_building(): boolean {\n        const service = ServiceManager.serviceFor(Organisation);\n        return service && service.building.id !== this.level.building_id;\n    }\n\n    constructor(raw_data: HashMap) {\n        this.id = raw_data.id || raw_data.map_id || raw_data.desk_id;\n        this.name = raw_data.name || '';\n        this.x = raw_data.x\n            ? Math.floor(this.normalise(raw_data.x, raw_data.x_max || 10000) * 10000)\n            : null;\n        this.y = raw_data.y\n            ? Math.floor(this.normalise(raw_data.y, raw_data.x_max || 10000) * 10000)\n            : null;\n        const service = ServiceManager.serviceFor(Organisation);\n        this.level =\n            raw_data.level instanceof BuildingLevel\n                ? raw_data.level\n                : service\n                ? service.levelWithID(raw_data.level)\n                : new BuildingLevel(raw_data.level);\n        this.fixed = this.x === null && this.y === null;\n        this.confidence = Math.max(5, Math.min(15, raw_data.confidence || 0));\n        this.at_desk = this.id && this.id.indexOf('area-') === 0;\n        this.empty = !(this.name && this.level && (this.id || this.x || this.y));\n    }\n\n    /** Normalise the given value within the max */\n    private normalise(value: number, max: number): number {\n        return value / (max * 1.0);\n    }\n}\n","import { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { randomInt } from 'src/app/shared/utilities/general.utilities';\n\nexport function generateMockLocation(overrides: HashMap, fixed_locations: string[], maps: string[]): HashMap {\n    const fixed = randomInt(999_999_999) % 2 === 0;\n    if (fixed && (!overrides || overrides.fixed)) {\n        return {\n            map_id: fixed_locations[randomInt(fixed_locations.length)],\n            level: maps[randomInt(maps.length)],\n            ...overrides\n        }\n    } else {\n        return {\n            x: randomInt(900, 100),\n            x_max: 1000,\n            y: randomInt(500, 100),\n            level: maps[randomInt(maps.length)],\n            confidence: randomInt(30),\n            ...overrides\n        }\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport { HashMap, Identity } from '../../../shared/utilities/types.utilities';\nimport { getItemWithKeys } from '../../../shared/utilities/general.utilities';\nimport { BuildingLevel } from './level.class';\nimport { BookingRule } from '../bookings/booking.interfaces';\nimport { ServiceManager } from '../service-manager.class';\n\nexport interface IBuildingRoleUser {\n    name: string;\n    email: string;\n    phone: string;\n}\n\nexport interface LockerMap {\n    [zone: string]: {\n        [area: string]: {\n            [type: string]: (string | boolean)[][];\n        };\n    };\n}\n\nexport interface ICoordinates {\n    longitude: number;\n    latitude: number;\n}\n\nexport interface LevelFeature {\n    id: string;\n    level_id: string;\n    name: string;\n}\n\nexport interface BookingRuleDetails {\n    /** List of booking rules details for the building */\n    readonly rules: readonly string[];\n    /** Custom booking rules for the map */\n    readonly map_rules?: readonly string[];\n    /** Contact email address for the building */\n    readonly contact?: string;\n    /** Information string to display before the rule listings */\n    readonly info?: string;\n    /** Link for more details */\n    readonly link?: { url?: string, name?: string };\n}\n\nexport class Building extends BaseDataClass {\n    /** Service for managing buildings */\n    protected get _service() {\n        return ServiceManager.serviceFor(Building);\n    }\n    /** Engine Zone ID for the building */\n    public readonly zone_id: string;\n    /** Organisation Code for the building */\n    public readonly code: string;\n    /** Geographical address of the building */\n    public readonly address: string;\n    /** Details about the booking rules for the building */\n    public readonly booking_details: BookingRuleDetails;\n    /** Details about the booking rules for the building */\n    public readonly booking_rules: HashMap<readonly BookingRule[]>;\n    /** Number of hour before a booking catering is restricted */\n    public readonly catering_restricted_from: number;\n    /** Currency code for the country assoicated with the building */\n    public readonly currency: string;\n    /** Map of fields that are required on the form */\n    public readonly required: HashMap<boolean>;\n    /** IANA timezone database string for the location the building resides  */\n    public readonly timezone: string;\n    /** Whether catering is available in this building */\n    public readonly has_catering: boolean;\n    /** ID of the system used for the holding bay */\n    public readonly holding_bay: string;\n    /** ID of the system used for standalone visitors bookings */\n    public readonly visitor_space: string;\n    /** List of zones to determine sort order spaces */\n    public readonly sort_order: readonly string[];\n    /** Searchable map features */\n    public readonly searchables: readonly LevelFeature[];\n    /** List of available extras for the building */\n    public readonly extras: readonly Identity[];\n    /** List of available extra equipment for loan at the building */\n    public readonly loan_items: readonly Identity[];\n    /** List of available levels for the building */\n    public readonly levels: readonly BuildingLevel[];\n    /** Map of custom settings for the building */\n    private _settings: HashMap;\n    /** Map of roles and list of the associated users */\n    private _roles: HashMap<IBuildingRoleUser[]>;\n    /** Map of the locker ID arrays */\n    private _lockers: LockerMap;\n    /** Map of important system ids for the building */\n    private _systems: HashMap<string>;\n    /** Map of important phone numbers for the building */\n    private _phone_numbers: HashMap<string>;\n    /** Globe coordiates for the build */\n    private _location: ICoordinates;\n    /** List of zones associated with the building */\n    public readonly zones: readonly string[];\n\n    constructor(raw_data: HashMap) {\n        super(raw_data);\n        const settings = raw_data.settings || {};\n        const disc_info = settings.discovery_info || settings;\n        this.zone_id = raw_data.zone_id || raw_data.zone;\n        this.extras = (raw_data.extras || disc_info.extras || []).map(i => ({ id: i.extra_id || i.id, name: i.extra_name || i.name }));\n        this.loan_items = (raw_data.loan_items || disc_info.loan_items  || []).map(i => ({ id: i.extra_id || i.id, name: i.extra_name || i.name }));\n        this.levels = (raw_data.levels || disc_info.levels  || []).map(i => new BuildingLevel({ ...i, building_id: this.id }));\n        this._roles = raw_data.roles || disc_info.roles || {};\n        this._lockers = raw_data.lockers || raw_data.locker_structure || disc_info.locker_structure || {};\n        this._systems = raw_data.systems || disc_info.systems || {};\n        this._settings = settings;\n        this._phone_numbers = raw_data.phone_numbers || disc_info.phone_numbers || {};\n        this._location = raw_data.location || disc_info.location || { longitude: null, latitude: null };\n        const searchables = [];\n        if (raw_data.neighbourhoods) {\n            for (const lvl in raw_data.neighbourhoods) {\n                if (raw_data.neighbourhoods.hasOwnProperty(lvl)) {\n                    const lvl_features = raw_data.neighbourhoods[lvl] || {};\n                    for (const feature in lvl_features) {\n                        if (lvl_features.hasOwnProperty(feature)) {\n                            searchables.push({\n                                id: lvl_features[feature],\n                                name: feature,\n                                level_id: lvl\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        this.searchables = searchables;\n        this.code = raw_data.code || disc_info.code || settings.code || '';\n        this.address = raw_data.address || disc_info.address || settings.address || '';\n        this.booking_details = raw_data.booking_details || disc_info.booking_details || settings.booking_details || null;\n        this.booking_rules = raw_data.booking_rules || disc_info.booking_rules || settings.booking_rules || {};\n        this.catering_restricted_from = raw_data.catering_restricted_from || disc_info.catering_restricted_from || settings.catering_restricted_from || 0;\n        this.currency = raw_data.currency || disc_info.currency || settings.currency || 'USD';\n        this.required = raw_data.required || disc_info.required || settings.required || {};\n        if (disc_info.requires_equipment_code) {\n            this.required.equipment_code = true;\n        }\n        if (disc_info.requires_expected_attendees) {\n            this.required.expected_attendees = true;\n        }\n        this.timezone = raw_data.timezone || disc_info.timezone || settings.timezone || '';\n        this.has_catering = raw_data.has_catering || disc_info.has_catering || settings.has_catering || false;\n        this.holding_bay = raw_data.holding_bay || disc_info.holding_bay || settings.holding_bay || '';\n        this.visitor_space = raw_data.visitor_space || disc_info.visitor_space || settings.visitor_space || '';\n        this.sort_order = raw_data.sort_order || disc_info.sort_order || settings.sort_order || [];\n    }\n\n    /**\n     * Get a custom building setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        const keys = key.split('.');\n        const value = getItemWithKeys(keys, this._settings);\n        return value;\n    }\n\n    /**\n     * Get list of users with the associated role\n     * @param name Role to find users for\n     */\n    public role(name: string): IBuildingRoleUser[] {\n        return [...(this._roles[name] || [])];\n    }\n    /**\n     * Get list of the names of available user role lists\n     */\n    public get role_names(): string[] {\n        return Object.keys(this._roles).filter(i => this._roles.hasOwnProperty(i));\n    }\n    /** Map of the locker ID arrays */\n    public get lockers(): LockerMap {\n        return { ...(this._lockers || {}) };\n    }\n    /** Map of important system ids for the building */\n    public get systems(): HashMap<string> {\n        return { ...(this._systems || {}) };\n    }\n    /** Map of important phone numbers for the building */\n    public get phone_numbers(): HashMap<string> {\n        return { ...(this._phone_numbers || {}) };\n    }\n    /** Real coordinates */\n    public get location(): ICoordinates {\n        return { ...this._location };\n    }\n\n    /**\n     * Get search map feature for the given level ID\n     * @param level_id ID of level to grab features for\n     */\n    public featuresForLevel(level_id: string): LevelFeature[] {\n        return (this.searchables || []).filter(i => i.level_id === level_id);\n    }\n\n    /**\n     * Building objects are readonly and cannot be changed\n     */\n    public async save(): Promise<Building> {\n        throw new Error('Building objects are readonly and cannot be changed');\n    }\n\n    /**\n     * Building objects are readonly and cannot be deleted\n     */\n    public async delete(): Promise<void> {\n        throw new Error('Building objects are readonly and cannot be deleted');\n    }\n}\n","import { HashMap } from 'src/app/shared/utilities/types.utilities';\n\n/** Building Level data */\nexport class BuildingLevel {\n    /** ID of the building level zone */\n    readonly id: string;\n    /** ID of the building zone associated with the level */\n    readonly building_id: string;\n    /** Name of the level */\n    readonly name: string;\n    /** Number or short identifier of the level */\n    readonly short_name: string;\n    /** Map URL for the level */\n    readonly map_url: string;\n    /** Usage type for the level */\n    readonly type: 'staff' | 'client' | 'any';\n    /** Setting for the level */\n    readonly settings: HashMap;\n\n    constructor(_data: HashMap = {}) {\n        this.id = _data.id || _data.level_id || '';\n        this.building_id = _data.bld_id || _data.building_id || '';\n        this.name = _data.name || _data.level_name || '';\n        const lower_name = this.name.toLowerCase();\n        const num = lower_name.indexOf('level') >= 0 ? lower_name.replace(/ ?level ?/gi, '') : lower_name.substr(0, 1).toUpperCase();\n        this.short_name = _data.short_name || num || '';\n        this.map_url = _data.map_url || '';\n        this.type = _data.type || _data.floor_type || 'any';\n        this.settings = _data.settings;\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\nimport { getItemWithKeys } from '../../../shared/utilities/general.utilities';\nimport { BaseAPIService } from '../base.service';\nimport { ServiceManager } from '../service-manager.class';\nimport { OrganisationService } from './organisation.service';\n\nexport class Organisation extends BaseDataClass {\n    /** Service for managing organisations */\n    protected get _service() {\n        return ServiceManager.serviceFor(Organisation);\n    }\n    /** Map of custom settings for the building */\n    private _settings: HashMap;\n\n    constructor(raw_data: HashMap) {\n        super(raw_data);\n        this._settings = raw_data.settings || {};\n    }\n\n    /**\n     * Get a custom building setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        const keys = key.split('.');\n        const value = getItemWithKeys(keys, this._settings);\n        return value;\n    }\n\n    /**\n     * Building objects are readonly and cannot be changed\n     */\n    public async save(): Promise<Organisation> {\n        throw new Error('Organisation objects are readonly and cannot be changed');\n    }\n\n    /**\n     * Building objects are readonly and cannot be deleted\n     */\n    public async delete(): Promise<void> {\n        throw new Error('Organisation objects are readonly and cannot be deleted');\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { ComposerService } from '@placeos/composer';\n\nimport { BaseAPIService } from '../base.service';\nimport { Organisation } from './organisation.class';\nimport { Building } from './building.class';\nimport {\n    HashMap,\n    ApplicationLoadingState,\n    Identity,\n} from '../../../shared/utilities/types.utilities';\nimport { BuildingLevel } from './level.class';\nimport { User } from '../users/user.class';\nimport { first } from 'rxjs/operators';\nimport { ApplicationService } from '../../app.service';\nimport { ServiceManager } from '../service-manager.class';\nimport { UsersService } from '../users/users.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class OrganisationService extends BaseAPIService {\n    /** Organisation data for the application */\n    private _organisation: Organisation;\n    /** Actively displayed building */\n    private _active_building: string;\n\n    constructor(\n        protected _composer: ComposerService,\n        private _service: ApplicationService,\n        private _users: UsersService\n    ) {\n        super(_composer);\n        ServiceManager.setService(Organisation, this);\n        ServiceManager.setService(Building, this);\n        this._name = 'Organisation';\n        this._api_route = 'zones';\n        this.set('buildings', []);\n        this.set('active_building', null);\n        this._users.initialised.pipe(first((_) => _)).subscribe(() => this.init());\n    }\n\n    /**\n     * Add is not available on organisation service\n     */\n    public async add(form_data: HashMap, query_params?: HashMap): Promise<Organisation> {\n        throw new Error('Add is not available on the organisation service');\n    }\n\n    /**\n     * Update is not available on organisation service\n     */\n    public async update(\n        id: string,\n        form_data: HashMap,\n        query_params?: HashMap\n    ): Promise<Organisation> {\n        throw new Error('Update is not available on the organisation service');\n    }\n\n    /**\n     * Delete is not available on organisation service\n     */\n    public async delete(id: string): Promise<void> {\n        throw new Error('Delete is not available on the organisation service');\n    }\n\n    /**\n     * Get list of levels for the given building ID\n     * @param bld_id Building ID\n     */\n    public levels(bld_id: string): readonly BuildingLevel[] {\n        return (this.buildings.find((i) => i.id === bld_id) || ({} as Building)).levels;\n    }\n\n    /**\n     * Get a setting from the organisation or active building\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string) {\n        return this.building.setting(key) || this._organisation.setting(key);\n    }\n\n    /** Active building */\n    public get building(): Building {\n        return this.buildings.find((i) => i.id === this._active_building);\n    }\n\n    /** List of types of spaces */\n    public get space_types(): Identity[] {\n        return this.get('space_types') || [];\n    }\n\n    public set building(bld: Building) {\n        if (bld instanceof Building) {\n            this._active_building = bld.id;\n        } else {\n            this._active_building = bld;\n        }\n        this.set('active_building', this.building);\n    }\n\n    /** List of buildings for the organisation */\n    public get buildings(): Building[] {\n        return this.get<Building[]>('buildings') || [];\n    }\n\n    /**\n     * Get list of available equipment\n     * @param id ID of the building to get the list from. i.e. Defaults to the active building\n     */\n    public getExtras(id: string, bld_id?: string) {\n        const bld = this.buildings.find((i) => i.id === bld_id) || this.building;\n        if (bld && id) {\n            return bld.extras.filter((i) => `${i.id}`.indexOf(id) >= 0);\n        }\n        return [];\n    }\n\n    /**\n     * Get the first level matching the list of given IDs\n     * @param ids List of ID to search with\n     */\n    public levelWithID(ids: string | string[]): BuildingLevel {\n        const list = ids instanceof Array ? ids : [ids];\n        const bld_list = this.buildings;\n        for (const id of list) {\n            for (const bld of bld_list) {\n                for (const lvl of bld.levels) {\n                    if (lvl.id === id) {\n                        return lvl;\n                    }\n                }\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Initialise service data\n     */\n    protected async load(): Promise<void> {\n        /* istanbul ignore else */\n        if (localStorage) {\n            this._active_building = localStorage.getItem(`${this._service.name}.building`);\n        }\n        const loading: ApplicationLoadingState = this._service.get('loading') || {};\n        loading.organisation = { message: 'Loading organisation data', state: 'loading' };\n        await this.loadOrganisation();\n        loading.organisation = { message: 'Loading organisation data', state: 'complete' };\n        loading.buildings = { message: 'Loading building data', state: 'loading' };\n        this._service.set('loading', loading);\n        await this.loadBuildings();\n        loading.buildings = { message: 'Loading building data', state: 'complete' };\n        loading.levels = { message: 'Loading building floor data', state: 'loading' };\n        this._service.set('loading', loading);\n        await this.loadLevels();\n        loading.levels = { message: 'Loading building floor data', state: 'complete' };\n        this._service.set('loading', loading);\n        loading.space_types = { message: 'Loading space type data', state: 'loading' };\n        this._service.set('loading', loading);\n        await this.loadSpaceTypes();\n        loading.space_types = { message: 'Loading space type data', state: 'complete' };\n        this._service.set('loading', loading);\n        const user = this._users.current;\n        if (user) {\n            const building = this.buildings.find((bld) => bld.code === user.location);\n            if (building) {\n                this._active_building = building.id;\n                this.set('active_building', building);\n            } else {\n                this._active_building = this.building.id;\n                this.set('active_building', this.building);\n            }\n        }\n    }\n\n    /**\n     * Load organisation data for application\n     */\n    public async loadOrganisation(): Promise<void> {\n        const org_data = await this.query({ tags: 'org', engine: true });\n        this._organisation = new Organisation(org_data[0]);\n        this.set('organisation', this._organisation);\n    }\n\n    /**\n     * Load building data for the organisation\n     */\n    public async loadBuildings(): Promise<void> {\n        const bld_data = await this.query({ tags: 'building', engine: true, limit: 500 });\n        const buildings = (bld_data as HashMap[]).map((i) => new Building(i));\n        this.set('buildings', buildings);\n        /* istanbul ignore else */\n        if (!this._active_building && buildings && buildings.length > 0) {\n            this._active_building = buildings[0].id;\n        }\n    }\n\n    /**\n     * Load level data for the buildings\n     */\n    public async loadLevels(): Promise<void> {\n        const lvl_data = await this.query({ tags: 'level', engine: true });\n        const levels = (lvl_data as HashMap[]).map((i) => new BuildingLevel(i));\n        this.set('levels', levels);\n    }\n\n    /**\n     * Load space type data for the buildings\n     */\n    public async loadSpaceTypes(): Promise<void> {\n        const type_data = await this.query({ tags: 'room', engine: true });\n        const types = (type_data as HashMap[]).map((i) => ({ id: i.id, name: i.name }));\n        this.set('space_types', types);\n    }\n}\n","import { Type } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { BaseDataClass } from './base-api.class';\n\n\nexport interface ServiceLike<T = BaseDataClass> extends HashMap {\n    parent: any;\n    add: (_: HashMap) => Promise<T>;\n    update: (id: string, _: HashMap) => Promise<T>;\n    delete: (id: string, params?: HashMap) => Promise<void>;\n    task: (id: string, name: string, data: HashMap) => Promise<void>;\n    listen: <U = any>(prop: string) => Observable<U>;\n}\nexport interface ServiceProvider<T extends ServiceLike> {\n    provideFor: Type<any>;\n    useValue: T;\n}\n\nexport class ServiceManager {\n    /** Map of available services for child classes */\n    private static _service_list: ServiceProvider<any>[] = [];\n    /** Set the services used to handle data model requests */\n    public static setService(type: Type<any>, service: ServiceLike): void {\n        if (window.debug) {\n            (window as any).ServiceManager = this._service_list;\n        }\n        const index = ServiceManager._service_list.findIndex(provider => provider.provideFor === type);\n        if (index >= 0) {\n            ServiceManager._service_list.splice(index, 1, { provideFor: type, useValue: service });\n        } else {\n            ServiceManager._service_list.push({ provideFor: type, useValue: service });\n        }\n    }\n    /** Get the services used to handle data model requests */\n    public static serviceFor(type: Type<any>): ServiceLike<any> {\n        const provider = ServiceManager._service_list.find(provider => provider.provideFor === type) || { useValue: null };\n        return provider.useValue;\n    }\n\n    constructor() {\n        throw new Error('ServiceMananger is static class');\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport { HashMap, Identity } from '../../../shared/utilities/types.utilities';\nimport { Booking } from '../bookings/booking.class';\nimport { BuildingLevel } from '../organisation/level.class';\nimport { SpaceRules } from '../bookings/booking.interfaces';\nimport { rulesForSpace } from '../bookings/booking.utilities';\nimport { User } from '../users/user.class';\n\nimport * as dayjs from 'dayjs';\nimport { Building } from '../organisation/building.class';\nimport { Organisation } from '../organisation/organisation.class';\nimport { ServiceManager } from '../service-manager.class';\n\nexport interface ISpaceAvailabilityOptions {\n    /** Start date and time of the availability block */\n    date?: number;\n    /** Length of the availability block */\n    duration: number;\n    /**  */\n    id?: string;\n    /** List of spaces to look at the availability for */\n    room_ids?: string;\n    /** Whether the spaces looked at should be bookable */\n    bookable?: boolean;\n    /** List of spaces or zones to ignore */\n    ignore?: string;\n    /** List of zones to look at the availability for */\n    zone_ids?: string;\n    /** Whether space bookings should not be returned */\n    hide_bookings?: boolean;\n\n    clear?: boolean;\n}\n\nexport interface SpaceBookingRuleOptions {\n    date: number;\n    duration: number;\n    host: User;\n}\n\nconst OPTION_DEFAULTS: ISpaceAvailabilityOptions = {\n    duration: 60,\n};\n\nexport interface RecurrenceAvailability {\n    /** Unix epoch in seconds */\n    readonly date: number;\n    /** Whetehr space is available at this time */\n    readonly available: boolean;\n}\n\nexport class Space extends BaseDataClass {\n    /** Extends name for the space */\n    public readonly long_name: string;\n    /** CSS selector for the location of the space of the level's map */\n    public readonly map_id: string;\n    /** Type of space */\n    public readonly type: string;\n    /** Whether user can search for this space */\n    public readonly can_search: boolean;\n    /** Whether user can open the control URL if available */\n    public readonly can_control: boolean;\n    /** Hourly cost for using the space */\n    public readonly hourly_rate: number;\n    /** Whether space can be booked by users */\n    public readonly bookable: boolean;\n    /** People capacity of the space */\n    public readonly capacity: number;\n    /** Index to force order when sorting multiple spaces */\n    public readonly sort_priority: number;\n    /** Setup time for bookings in this space */\n    public readonly setup: number;\n    /** Breakdown time for bookings in this space */\n    public readonly breakdown: number;\n    /** Last returned availability result */\n    public readonly was_available: boolean;\n    /** URL for the control interface of the space */\n    public readonly support_url: boolean;\n    /** Display image for the space */\n    public readonly image: string;\n    /** List of recurrence occurrence availability details */\n    public readonly recurr_available: readonly RecurrenceAvailability[];\n    /** Engine zones associated with the space */\n    public readonly zones: readonly string[];\n    /** Bookings associated with the space */\n    public bookings: readonly Booking[];\n    /** List of ids for linked spaces */\n    public linked_spaces: readonly string[];\n    /** Service for managing spaces */\n    protected get _service() {\n        return ServiceManager.serviceFor(Building);\n    }\n    /** List of equipment available in the space */\n    private _extras: Identity[];\n\n    constructor(raw_data: HashMap = {}) {\n        super(raw_data);\n        const settings = raw_data.settings || {};\n\n        this.long_name = settings.long_name || raw_data.long_name;\n        this.map_id = settings.map_id || raw_data.map_id || '';\n        this.type =\n            settings.book_type ||\n            (this.level.settings || {}).book_type ||\n            raw_data.book_type ||\n            raw_data.type ||\n            'book';\n        this.can_search =\n            settings.searchable || raw_data.searchable || raw_data.can_search || false;\n        this.can_control =\n            settings.controlable || raw_data.controlable || raw_data.can_control || false;\n        this.hourly_rate = settings.cost_hour || raw_data.cost_hour || raw_data.hourly_rate || 0;\n        this.bookable = settings.bookable || raw_data.bookable || false;\n        this.setup = (settings.setup || 0) / 60 || raw_data.setup || 0;\n        this.breakdown = (settings.breakdown || 0) / 60 || raw_data.breakdown || 0;\n        this.capacity = raw_data.capacity || 0;\n        this.recurr_available = raw_data.recurr_available || settings.recurr_available || [];\n        const available = !!this.recurr_available.find((occurence) => !!occurence.available);\n        this.was_available =\n            settings.available ||\n            raw_data.available ||\n            raw_data.was_available ||\n            available ||\n            false;\n        this.support_url = raw_data.support_url;\n        this.image = raw_data.image || '';\n\n        this.zones = raw_data.zones instanceof Array ? raw_data.zones : [];\n        const raw_bookings = settings.bookings || raw_data.bookings || [];\n        this.bookings = raw_bookings.map((bkn) => new Booking(bkn));\n        this._extras = [];\n        this.linked_spaces =\n            settings.linked_rooms || raw_data.linked_rooms || raw_data.linked_spaces || [];\n    }\n\n    /** Whether the space has a booking in progress */\n    public get in_use(): boolean {\n        return !!this.current;\n    }\n\n    /** Get any current in progress meeting */\n    public get current(): Booking {\n        const bookings = this.bookings;\n        for (const bkn of bookings) {\n            const status = bkn.status;\n            if (status === 'in_progress' || status === 'started') {\n                return bkn;\n            }\n        }\n        return null;\n    }\n\n    /** Get the next upcoming meeting */\n    public get next(): Booking {\n        const now = dayjs().valueOf();\n        const bookings = this.bookings;\n        for (const bkn of bookings) {\n            if (bkn.date > now) {\n                return bkn;\n            }\n        }\n        return null;\n    }\n\n    /** List of bookings for today */\n    public get todays_bookings(): readonly Booking[] {\n        return this.bookingsFor(dayjs().valueOf());\n    }\n\n    /** Level in which the space is associated */\n    public get level(): BuildingLevel {\n        const service = ServiceManager.serviceFor(Organisation);\n        return (service ? service.levelWithID(this.zones as any) : null) || new BuildingLevel({});\n    }\n\n    /**\n     * Get bookings for space\n     * @param date Date to filter bookings on\n     */\n    public bookingsFor(date?: number): readonly Booking[] {\n        if (date) {\n            const day = dayjs(date);\n            return this.bookings.filter((i) => {\n                const start = dayjs(i.date);\n                return start.isSame(day, 'd');\n            });\n        } else {\n            return this.bookings;\n        }\n    }\n\n    /**\n     * Whether the space is available.\n     */\n    public isAvailable(options?: ISpaceAvailabilityOptions): Promise<boolean> {\n        options = options\n            ? { ...OPTION_DEFAULTS, ...options, room_ids: this.id }\n            : { ...OPTION_DEFAULTS, room_ids: this.id };\n        return new Promise((resolve) => {\n            (this._service as any).available(options).then(\n                (list: Space[]) => {\n                    for (const rm of list) {\n                        if (rm.id === this.id) {\n                            return resolve(true);\n                        }\n                    }\n                    resolve(false);\n                },\n                () => resolve(false)\n            );\n        });\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): Space {\n        return new Space(this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): Space {\n        return new Space({ ...this, id: null, email: null, bookings: [] });\n    }\n\n    /**\n     * Generate the booking rules for space with given options\n     * @param options Conditions for generating the space rules\n     */\n    public rulesFor(options: SpaceBookingRuleOptions): SpaceRules {\n        const service = ServiceManager.serviceFor(Building);\n        if (!service || !this.level) {\n            return { auto_approve: true, hide: false };\n        }\n        const building = service.buildings.find((bld) => bld.id === this.level.building_id);\n        if (!building) {\n            return { auto_approve: true, hide: false };\n        }\n        const { date, duration, host } = options;\n        const rules: SpaceRules = rulesForSpace({\n            time: date,\n            duration,\n            space: this,\n            user: host,\n            rules: building.booking_rules,\n        });\n        return rules;\n    }\n\n    /**\n     * Whether space can only be booked by request\n     * @param options Conditions for checking the space rules\n     */\n    public byRequest(options: SpaceBookingRuleOptions) {\n        const rules = this.rulesFor(options);\n        return !rules.auto_approve;\n    }\n}\n","import { HashMap } from '../../../shared/utilities/types.utilities';\nimport { generateMockBooking } from '../bookings/booking.utilities';\nimport { USER_DOMAIN } from '../users/user.utilities';\nimport { ISpaceAvailabilityOptions } from './space.class';\n\nimport * as faker from 'faker';\nimport * as dayjs from 'dayjs';\n\nlet SPACE_COUNT: number = 0;\n\nexport function generateMockSpace(overrides: HashMap = {}): HashMap {\n    const id = `space-${SPACE_COUNT++}`;\n    const name = `${faker.name.firstName()} ${faker.name.lastName()} Space`;\n    const linked = Math.floor(Math.random() * 99999) % 2 === 0 && SPACE_COUNT > 1;\n    return {\n        id,\n        name,\n        long_name: `${name} with an long name`,\n        map_id: `${SPACE_COUNT}`,\n        capacity: Math.floor(Math.random() * 20 + 1) * 2,\n        email: `${name.toLowerCase().split(' ').join('.')}@${USER_DOMAIN}`,\n        type: faker.commerce.productName(),\n        searchable: Math.floor(Math.random() * 99999) % 2 === 0,\n        controlable: Math.floor(Math.random() * 99999) % 2 === 0,\n        bookable: Math.floor(Math.random() * 99999) % 2 === 0,\n        cost_hour: Math.floor(Math.random() * 300) * 100,\n        setup: Math.floor(Math.random() * 6) * 5,\n        breakdown: Math.floor(Math.random() * 6) * 5,\n        zones: ['zone_lvl-0'],\n        support_url: `/control/#/${id}`,\n        bookings: Array(10).fill(0).map(i => generateMockBooking()),\n        linked_rooms: linked ? [`space-${Math.floor(Math.random() * (SPACE_COUNT - 1))}`] : [],\n        image: faker.image.business(),\n        ...overrides\n    };\n}\n\nexport function availabilityOptionsToQuery(options: ISpaceAvailabilityOptions): HashMap {\n    let query: HashMap = {};\n    if (options) {\n        query = { ...options };\n        if (options.date) {\n            const date = dayjs(options.date).startOf('m');\n            query.available_from = date.unix();\n            query.available_to = date.add(options.duration || 60, 'm').unix();\n            delete query.date;\n            delete query.duration;\n        }\n    }\n    return query;\n}\n","import { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\nimport { first } from 'rxjs/operators';\n\nimport { BaseAPIService } from '../base.service';\nimport { Space, ISpaceAvailabilityOptions } from './space.class';\nimport { HashMap, ApplicationLoadingState } from '../../../shared/utilities/types.utilities';\nimport { availabilityOptionsToQuery } from './space.utilities';\nimport { OrganisationService } from '../organisation/organisation.service';\nimport { ServiceManager } from '../service-manager.class';\nimport { ApplicationService } from '../../app.service';\n\nimport * as dayjs from 'dayjs';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SpacesService extends BaseAPIService<Space> {\n    constructor(\n        protected _composer: ComposerService,\n        private _org_service: OrganisationService,\n        private _app: ApplicationService\n    ) {\n        super(_composer);\n        ServiceManager.setService(Space, this);\n        this._name = 'Space';\n        this._api_route = 'rooms';\n        this._compare = (a, b) => !a.id.localeCompare(b.id) || !a.email.localeCompare(b.email);\n        this._list_filter = (a: Space) => {\n            const bld = this._org_service.building;\n            return a.level.building_id === bld.id;\n        };\n        this._org_service.initialised.pipe(first((_) => _)).subscribe(() => this.init());\n    }\n\n    /**\n     * Get available spaces\n     * @param options\n     */\n    public available(options: ISpaceAvailabilityOptions): Promise<Space[]> {\n        if (!options) {\n            throw new Error('Space avilability requires request options');\n        }\n        if (!options.date) {\n            options.date = dayjs().startOf('m').valueOf();\n        }\n        const key = `available|${options.id ? options.id : ''}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise((resolve, reject) => {\n                const respond = (list: Space[]) => {\n                    const available_spaces = list.filter((i) => {\n                        const linked = list.filter((j) => i.linked_spaces.indexOf(j.id) >= 0);\n                        return (\n                            i.was_available && linked.reduce((a, v) => a && v.was_available, true)\n                        );\n                    });\n                    delete this._promises[key];\n                    resolve(available_spaces);\n                };\n                const error = (e) => {\n                    reject(e);\n                    delete this._promises[key];\n                };\n                const query = availabilityOptionsToQuery(options);\n                if (options.id) {\n                    this.show(options.id, query).then((i) => respond([i]), error);\n                } else {\n                    this.query(query).then(respond, error);\n                }\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Load initial data for the service\n     */\n    protected async load(): Promise<void> {\n        const loading: ApplicationLoadingState = this._app.get('loading') || {};\n        if (!loading.spaces) {\n            loading.spaces = { message: 'Loading space data', state: 'loading' };\n            this._app.set('loading', loading);\n        }\n        await this.query().catch(() => {\n            loading.spaces = { message: 'Loading space data', state: 'failed' };\n            this._app.set('loading', loading);\n        });\n        loading.spaces = { message: 'Loading space data', state: 'complete' };\n        this._app.set('loading', loading);\n    }\n\n    /**\n     * Convert raw data into API object\n     * @param raw_data Raw API data\n     */\n    protected process(raw_data: HashMap): Space {\n        return new Space(raw_data);\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport { HashMap, Identity } from '../../../shared/utilities/types.utilities';\nimport { MapLocation } from '../location/location.class';\nimport { ServiceManager } from '../service-manager.class';\n\nexport class User extends BaseDataClass {\n    /** Currently logged in user */\n    public static get active_user(): User {\n        const service = ServiceManager.serviceFor(User);\n        return service ? service.current : null;\n    }\n    /** First name of the user */\n    public readonly first_name: string;\n    /** Last name of the user */\n    public readonly last_name: string;\n    /** Windows user ID */\n    public readonly windows_id: string;\n    /** Type of user */\n    public readonly type: 'partner' | 'external' | 'internal';\n    /** Contact phone number of the user */\n    public readonly phone: string;\n    /** Organisational department the user is part of */\n    public readonly business_unit: string;\n    /** Whether user is external from the application's organisation */\n    public readonly external: boolean;\n    /** Organisational Identifier for the user */\n    public readonly staff_code: string;\n    /** Basic location descriptor for the user */\n    public readonly location: string;\n    /** List of users that this user can act on behalf */\n    public readonly delegates: readonly string[];\n    /** URL of the user's avatar image */\n    public readonly image: string;\n    /** List of user groups associated with this user */\n    public readonly groups: readonly string[];\n    /** Organisation the user is associated with */\n    private _organisation: Identity;\n\n    /** Map location of the user */\n    private _location: MapLocation;\n    /** List of desk bookings */\n    private _desk_bookings: HashMap = {};\n\n    constructor(raw_data: HashMap = {}) {\n        super(raw_data);\n        this.first_name = raw_data.first_name || '';\n        this.last_name = raw_data.last_name || '';\n        this.windows_id = raw_data.email || '';\n        this.type = raw_data.visitor ? 'external' : raw_data.type || 'internal';\n        this.phone = raw_data.phone || raw_data.mobile || '';\n        this.business_unit = raw_data.business_unit || raw_data.department || '';\n        this._organisation = raw_data.organisation || {\n            id: raw_data.organisation_id,\n            name: raw_data.organisation_name\n        };\n        this.external = this.type === 'external';\n        this._location = null;\n        this.image = raw_data.image || '';\n        this.staff_code = raw_data.staff_code || raw_data.fmno || '';\n        this.delegates = raw_data.delegates || [];\n        this._location = new MapLocation(\n            raw_data.location && raw_data.location instanceof Object\n                ? raw_data.location\n                : { name: raw_data.location }\n        );\n        this.groups = raw_data.groups || [];\n        this.location = raw_data.location || raw_data.officeLocation || '';\n    }\n\n    /** Organisation the user is associated with */\n    public get organisation() {\n        return this._organisation;\n    }\n\n    /** Map location of the user */\n    public get last_location(): MapLocation {\n        return new MapLocation(this._location || {})\n    }\n\n    /**\n     * Ask the server for the users current location\n     */\n    public locate(): Promise<MapLocation> {\n        const service: any = ServiceManager.serviceFor(MapLocation);\n        return new Promise((resolve, reject) => {\n            if (service) {\n                service.show(this.id, { desk: this.email }).then(\n                    l => {\n                        this._location = l;\n                        resolve(l);\n                    },\n                    e => reject(e)\n                );\n            } else {\n                resolve(null);\n            }\n        });\n    }\n\n    /**\n     * Whether user is available during the given period\n     * @param start Start time as a unix timestamp with milliseconds\n     * @param end End time as a unix timestamp with milliseconds\n     */\n    public available(start?: number, end?: number): Promise<boolean> {\n        return new Promise<boolean>(resolve => {\n            this._service.query({ email: this.email, start, end }).then(\n                l => resolve(l && l.length > 0),\n                _ => resolve(false)\n            );\n        });\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): User {\n        return new User(this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): User {\n        return new User({ ...this, id: null, email: null });\n    }\n\n    /**\n     * Convert object into plain object\n     */\n    public toJSON(this: User): HashMap {\n        const data = super.toJSON();\n        delete data.location;\n        return data;\n    }\n}\n","import { HashMap } from '../../../shared/utilities/types.utilities';\n\nimport * as faker from 'faker';\nimport { padZero, unique } from '../../../shared/utilities/general.utilities';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { User } from './user.class';\nimport { Subscription } from 'rxjs';\n\nlet USER_COUNT = 0;\n\nexport let USER_DOMAIN = 'acaprojects.com';\n\nconst USER_EMAILS: string[] = [];\n\n/**\n * Generate raw mock data for a user\n * @param id Forced ID for the mock\n * @param name Forced name for the user\n * @param external Whether user is external of the organisation\n */\nexport function generateMockUser(override: HashMap = {}): HashMap {\n    const id = `user-${USER_COUNT++}`;\n    const name = `${faker.name.firstName()} ${faker.name.lastName()}`;\n    const external = override.external || !((Math.random() * 99999) % 2);\n    const organisation = external ? faker.company.companyName() : USER_DOMAIN.split('.')[0];\n    let delegates: string[] = [];\n    const delegate_count = Math.min(Math.random() * 4 + 1, USER_EMAILS.length);\n    for (let i = 0; i < delegate_count; i++) {\n        delegates.push(USER_EMAILS[Math.floor(Math.random() * USER_EMAILS.length)]);\n    }\n    delegates = unique(delegates);\n    const email = `${name\n        .split(' ')\n        .join('.')\n        .toLowerCase()}@${external ? 'not-' : ''}${USER_DOMAIN}`;\n    USER_EMAILS.push(email);\n    return {\n        id,\n        name,\n        first_name: name.split(' ')[0],\n        last_name: name.split(' ')[1],\n        email,\n        phone: faker.phone.phoneNumber(),\n        visitor: external,\n        organisation: {\n            id: organisation\n                .split(' ')\n                .join('.')\n                .toLowerCase(),\n            name: organisation\n        },\n        department: faker.commerce.department(),\n        staff_code: padZero(Math.floor(Math.random() * 99999), 5),\n        delegates,\n        image: faker.image.avatar(),\n        ...override\n    };\n}\n\n/**\n * Generate form fields for the given user\n * @param user User to generate form for\n */\nexport function generateUserForm(user: User): FormGroup {\n    if (!user) {\n        throw Error('No user passed');\n    }\n    const fields: HashMap<FormControl> = {\n        id: new FormControl(user.id || ''),\n        name: new FormControl(user.name || ''),\n        first_name: new FormControl(user.first_name || ''),\n        last_name: new FormControl(user.last_name || ''),\n        email: new FormControl(user.email || '', [Validators.email])\n    };\n    // Generate form group for booking item\n    const form = new FormGroup(fields);\n    return form;\n}\n","import { Injectable } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { ComposerService } from '@placeos/composer';\nimport { first } from 'rxjs/operators';\n\nimport { Md5 } from 'ts-md5/dist/md5';\n\nimport { BaseAPIService } from '../base.service';\nimport { User } from './user.class';\nimport { HashMap, ApplicationLoadingState } from '../../../shared/utilities/types.utilities';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\n\nimport * as dayjs from 'dayjs';\nimport { ApplicationService } from '../../app.service';\nimport { ServiceManager } from '../service-manager.class';\n\nexport interface ILoginOptions {\n    /** URL to post login request to */\n    url?: string;\n    /** Whether form data is passed in the body of the request */\n    form?: boolean;\n    /** Custom headers to pass into the post request */\n    headers?: HashMap<string>;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class UsersService extends BaseAPIService<User> {\n    constructor(\n        protected _composer: ComposerService,\n        protected uhttp: HttpClient,\n        protected location: Location,\n        private _service: ApplicationService\n    ) {\n        super(_composer);\n        ServiceManager.setService(User, this);\n        this._name = 'Users';\n        this._api_route = 'users';\n        this._compare = (a, b) => !a.id.localeCompare(b.id) || !a.email.localeCompare(b.email);\n        this.set('current_user', new User({ id: 'local_user', name: 'Local User' }));\n        this._composer.initialised.pipe(first((_) => _)).subscribe(() => this.init());\n    }\n\n    /** Currently logged in user */\n    public get current(): User {\n        return this.get('current_user');\n    }\n\n    /** Whether the user has properly logged in */\n    public get is_logged_in(): boolean {\n        return this.current && this.current.id !== 'local_user';\n    }\n\n    /** istanbul ignore function */\n    /**\n     * Sets the access token and expiry for the user\n     * @param token OAuth bearer token\n     * @param expiry Expiry epoch timestamp in ms\n     * @param reload Whether to reload the page after setting tokens\n     */\n    public setToken(token: string, expiry?: number, reload: boolean = true) {\n        if (!expiry) {\n            expiry = dayjs().add(7, 'd').endOf('d').valueOf();\n        }\n        const path = `${location.origin}${\n            this._service.setting('composer.route') || ''\n        }/oauth-resp.html`;\n        const client_id = Md5.hashStr(path);\n        if (sessionStorage) {\n            sessionStorage.setItem(`${client_id}_access_token`, token);\n            sessionStorage.setItem(`${client_id}_expires_at`, `${expiry}`);\n        }\n        if (localStorage) {\n            localStorage.setItem(`${client_id}_access_token`, token);\n            localStorage.setItem(`${client_id}_expires_at`, `${expiry}`);\n        }\n        if (reload) {\n            this.location.go(this.location.path());\n        }\n        return path;\n    }\n\n    /**\n     * Post login request to the API\n     * @param query_params Key value pairs to pass into\n     * @param options Options for the login request\n     */\n    public login(query_params: HashMap, options: ILoginOptions = {}): Promise<void> {\n        if (!this._promises['login']) {\n            this._promises['login'] = new Promise<void>((resolve, reject) => {\n                this.set('status', 'loading');\n                let headers = new HttpHeaders();\n                if (!options || options.form !== false) {\n                    headers = headers.append('Content-Type', 'application/x-www-form-urlencoded');\n                }\n                const url = (options ? options.url : '') || '/auth/signin';\n                this.uhttp.post(url, query_params, { headers }).subscribe(\n                    (_) => null,\n                    (e) => reject(e),\n                    () => {\n                        this._composer.auth.authorise();\n                        resolve();\n                    }\n                );\n            });\n        }\n        return this._promises['login'];\n    }\n\n    /**\n     * Logout of user and redirect to logout URL\n     */\n    public logout() {\n        this._composer.auth.logout();\n    }\n\n    /**\n     * Load initial data for the service\n     */\n    protected load(tries: number = 0): Promise<void> {\n        const loading: ApplicationLoadingState = this._service.get('loading') || {};\n        if (!loading.user) {\n            loading.user = { message: 'Loading user credentials', state: 'loading' };\n            this._service.set('loading', loading);\n        }\n        this.set('status', 'loading');\n        return new Promise<void>((resolve) => {\n            if (tries > 4) {\n                this.set('status', 'invalid');\n                loading.user = { message: 'Loading user credentials', state: 'failed' };\n                this._service.set('loading', loading);\n                return resolve();\n            }\n            this.show('current').then(\n                (current_user) => {\n                    this.set('status', 'available');\n                    this.set('current_user', current_user);\n                    if (this._service && this._service.setting('app.user.grab_api_details')) {\n                        this.show(current_user.email).then(\n                            (user) => {\n                                this.set('current_user', user);\n                                if (this._service.setting('app.user.update_location')) {\n                                    this.interval('location', () => user.locate(), 5000);\n                                }\n                                this.loadDelegates();\n                                resolve();\n                                loading.user = {\n                                    message: 'Loading user credentials',\n                                    state: 'complete',\n                                };\n                                this._service.set('loading', loading);\n                            },\n                            () =>\n                                this.timeout('load', () => this.load(++tries).then(() => resolve()))\n                        );\n                    } else {\n                        if (this._service.setting('app.user.update_location')) {\n                            this.interval('location', () => current_user.locate(), 5000);\n                        }\n                        this.loadDelegates();\n                        resolve();\n                        loading.user = { message: 'Loading user credentials', state: 'complete' };\n                        this._service.set('loading', loading);\n                    }\n                },\n                () => this.timeout('load', () => this.load(++tries).then(() => resolve()))\n            );\n        });\n    }\n\n    private async loadDelegates() {\n        const delegates = this.current.delegates;\n        if (!delegates || !delegates.length) {\n            return [];\n        }\n        const promises: Promise<User>[] = [];\n        for (const email of delegates) {\n            promises.push(this.show(email));\n        }\n        const list = await Promise.all(promises);\n        this.set('delegates', list);\n        this.set('list', unique((this.get('list') || []).concat(list)));\n        return list;\n    }\n\n    /**\n     * Convert raw API data into a valid User Object\n     * @param raw_item Raw API data\n     */\n    protected process(raw_data: any): User {\n        return new User(raw_data);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\n\nimport { HashMap } from '../shared/utilities/types.utilities';\nimport { unique } from '../shared/utilities/general.utilities';\n\n/** List of keys that cannot be in a combination by themselves or with each other */\nconst INVALID_STANDALONE_KEYS: string[] = ['control', 'shift', 'alt', 'meta', 'os'];\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HotkeysService {\n    /** Map of subjects which store press states of keys */\n    private keydown_states: HashMap<BehaviorSubject<number>> = {};\n    /** Map of obserers for key state subjects */\n    private keydown_observers: HashMap<Observable<number>> = {};\n    /** List of keys at the end of a combination */\n    private combo_end: string[] = [];\n    /** List of registered hotkey combinations */\n    private registered_combos: string[][] = [];\n    /** Counter for the number of keydown events. Used for checking order of key presses */\n    private counter: number = 0;\n    /** Last key code to be pressed */\n    private last_down: string;\n\n    constructor() {\n        window.addEventListener('keydown', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            /* istanbul ignore else */\n            if (this.last_down !== code) {\n                /* istanbul ignore else */\n                if (!this.keydown_states[code]) {\n                    this.keydown_states[code] = new BehaviorSubject(null);\n                    this.keydown_observers[code] = this.keydown_states[code].asObservable();\n                }\n                this.keydown_states[code].next(++this.counter);\n                /* istanbul ignore else */\n                if (this.combo_end.indexOf(code) >= 0) {\n                    event.preventDefault();\n                }\n                this.last_down = code;\n            }\n        });\n\n        window.addEventListener('keyup', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            /* istanbul ignore else */\n            if (this.keydown_states[code]) {\n                this.keydown_states[code].next(null);\n            }\n            /* istanbul ignore else */\n            if (this.last_down === code) {\n                this.last_down = null;\n            }\n        });\n    }\n\n    /**\n     * Listen to the given key combination\n     * @param combo Array of key codes to listen to or a hotkey string e.g. `Alt+Shift+KeyK`\n     * @param next Callback for combination presses\n     */\n    public listen(combo: string | string[], next: () => void): Subscription {\n        combo = (combo instanceof Array ? combo : combo.split('+'));\n        const combination: string[] = combo.map(i => this.mapKey(i.toLowerCase()));\n        /* istanbul ignore else */\n        if (combination.length > 0 && this.validCombination(combination)) {\n            this.registered_combos.push(combination);\n            const last_key = combination[combination.length - 1];\n            /* istanbul ignore else */\n            if (!this.keydown_states[last_key]) {\n                this.keydown_states[last_key] = new BehaviorSubject(null);\n                this.keydown_observers[last_key] = this.keydown_states[last_key].asObservable();\n            }\n            this.updateCombinationEndList();\n            return this.keydown_observers[last_key].subscribe((count) => {\n                /* istanbul ignore else */\n                if (count) {\n                    const presses: number[] = [];\n                    /* istanbul ignore else */\n                    if (combination.length > 0) {\n                        // Check that keys are pressed\n                        for (const key of combination) {\n                            const state = this.keydown_states[key];\n                            presses.push(state ? state.getValue() || -1 : -1);\n                        }\n                        // Check that keys are pressed in the correct order\n                        for (let i = 0; i < combination.length - 1; i++) {\n                            if (presses[i] > presses[i + 1]) { return; }\n                        }\n                    }\n                    const total = presses.reduce((a, v) => a + (v > 0 ? 1 : -1), 0);\n                    /* istanbul ignore else */\n                    if (total >= combination.length) {\n                        next();\n                    }\n                }\n            });\n        }\n        return null;\n    }\n\n    /**\n     * Map key codes with multiple versions to simple form\n     * @param code Code to transform\n     */\n    private mapKey(code: string): string {\n        /* istanbul ignore else */\n        if (code.indexOf('alt') >= 0 || code.indexOf('shift') >= 0 || code.indexOf('control') >= 0) {\n            return code.replace('left', '').replace('right', '');\n        }\n        return code;\n    }\n\n    /**\n     * Update the list of the last keys in combinations to allow for prevent default actions on pre-existing hotkeys\n     */\n    private updateCombinationEndList(): void {\n        const key_list = [];\n        for (const combo of this.registered_combos) {\n            this.combo_end.push(combo[combo.length - 1]);\n        }\n        this.combo_end = unique(key_list);\n    }\n\n    /**\n     * Checks if the given hotkey combination is allowed and valid\n     * @param combo Array of key codes\n     */\n    private validCombination(combo: string[]): boolean {\n        let non_meta = 0;\n        for (const key of combo) {\n            /* istanbul ignore else */\n            if (INVALID_STANDALONE_KEYS.indexOf(key) < 0) {\n                non_meta++;\n            }\n        }\n        return non_meta > 0;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { HashMap } from '../shared/utilities/types.utilities';\nimport { getItemWithKeys } from '../shared/utilities/general.utilities';\nimport { BaseClass } from '../shared/base.class';\nimport { VERSION } from 'src/environments/version';\n\nimport * as dayjs from 'dayjs';\n\ninterface SettingsMap {\n    api: HashMap;\n    local: HashMap;\n    session: HashMap;\n    [block: string]: HashMap;\n}\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n    }\n}\n\nexport type ConsoleStream = 'debug' | 'warn' | 'log' | 'error';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SettingsService extends BaseClass {\n\n    /** Map of settings */\n    private _settings: SettingsMap = { api: {}, local: {}, session: {} };\n    /** Store for promises */\n    private _promises: { [name: string]: Promise<any> } = {};\n    /** Name of the application */\n    private _app_name = 'PlaceOS';\n\n    constructor(private http: HttpClient) {\n        super();\n        const now = dayjs();\n        const build = dayjs(VERSION.time);\n        const built = now.isSame(build, 'd') ? `Today at ${build.format('h:mmA')}` : build.format('D MMM YYYY, h:mmA');\n        this.log('CORE', `${VERSION.core_version}`, null, 'debug', true);\n        this.log('APP', `${VERSION.version} - ${VERSION.hash} | Built: ${built}`, null, 'debug', true);\n        this.init();\n    }\n\n    /**\n     * Initialise the settings\n     */\n    public async init() {\n        await this.loadFromFile('api');\n        if (this._settings.api.debug) {\n            window.debug = true;\n        }\n        if (this._settings.api.app && this._settings.api.app.name) {\n            this._app_name = this._settings.api.app.name;\n        }\n        this.log('Settings', 'Successfully loaded settings');\n        this._initialised.next(true);\n    }\n\n    /** Whether settings service has initialised */\n    public get app_name() { return this._app_name; }\n\n    /**\n     * Log data to the browser console\n     * @param type Type of message\n     * @param msg Message body\n     * @param args array of argments to log to the console\n     * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\n     * @param force Whether to force message to be emitted when debug is disabled\n     */\n    public log(type: string, msg: string, args?: any, stream: ConsoleStream = 'debug', force: boolean = false) {\n        if (window.debug || force) {\n            const colors: string[] = ['color: #E91E63', 'color: #3F51B5', 'color: default'];\n            if (args) {\n                console[stream](`%c[${this.app_name}]%c[${type}] %c${msg}`, ...colors, args);\n            } else {\n                console[stream](`%c[${this.app_name}]%c[${type}] %c${msg}`, ...colors);\n            }\n        }\n    }\n\n    /**\n     * Get a setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public get(key: string): any {\n        const keys = key.split('.');\n        let value = null;\n        if (keys[0] === 'session') {\n            keys.shift();\n            value = getItemWithKeys(keys, this._settings.session);\n        } else if (keys[0] === 'local') {\n            keys.shift();\n            value = getItemWithKeys(keys, this._settings.local);\n        } else {\n            value = getItemWithKeys(keys, this._settings.api) ||\n                getItemWithKeys(keys, this._settings.session) ||\n                getItemWithKeys(keys, this._settings.local);\n        }\n        return value;\n    }\n\n    /**\n     * Load setting data from a file\n     * @param name Namespace to add file data to\n     * @param file URL to file to load setting data from\n     */\n    private async loadFromFile(name: string, file: string = 'assets/settings.json', tries: number = 0) {\n        if (file !== 'assets/settings.json' && tries > 5) {\n            return Promise.resolve();\n        }\n        const file_name = file.split('/')[file.split('/').length - 1];\n        // Check if data has been loaded into the global space\n        if (window[file_name] instanceof Object) {\n            this._settings[name] = { ...(this._settings[name] || {}), ...window[file_name] };\n            return Promise.resolve();\n        }\n        const key = `load|${name}|${file}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<void>((resolve, reject) => {\n                this.http.get(file).subscribe(\n                    (data) => {\n                        this._settings[name] = { ...(this._settings[name] || {}), ...(data || {}) };\n                    }, (e) => {\n                        this.log('Settings', `Failed to load settings from \"${file}\"`);\n                        this._promises[key] = null;\n                        this.timeout(`load_${file_name}`, () => {\n                            this.loadFromFile(name, file, ++tries).then(() => resolve());\n                        })\n                    }, () => resolve()\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n}\n","import { Subscription, BehaviorSubject } from \"rxjs\";\n\nexport class BaseClass {\n    /** Store for named timers */\n    protected _timers: { [name: string]: number } = {};\n    /** Store for named intervals */\n    protected _intervals: { [name: string]: number } = {};\n    /** Store for named subscription unsub callbacks */\n    protected _subscriptions: { [name: string]: (Subscription | (() => void)) } = {};\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n\n    /** Observable of the initialised state of the object */\n    public get initialised(): BehaviorSubject<boolean> {\n        return this._initialised;\n    }\n    /** Whether the object has been initialised */\n    public get is_initialised(): boolean {\n        return this._initialised.getValue();\n    }\n\n    protected destroy() {\n        for (const key in this._timers) {\n            if (this._timers.hasOwnProperty(key)) {\n                this.clearTimeout(key);\n            }\n        }\n        for (const key in this._intervals) {\n            if (this._intervals.hasOwnProperty(key)) {\n                this.clearInterval(key);\n            }\n        }\n        for (const key in this._subscriptions) {\n            if (this._subscriptions.hasOwnProperty(key)) {\n                this.unsub(key);\n            }\n        }\n    }\n\n    /**\n     * Creates a named timer\n     * @param name Name of the timer\n     * @param fn Callback function for the timer\n     * @param delay Callback delay\n     */\n    protected timeout(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearTimeout(name);\n            this._timers[name] = <any>setTimeout(() => {\n                fn();\n                this._timers[name] = null;\n            }, delay);\n        } else {\n            throw new Error(\n                name ? 'Cannot create named timeout without a name' : 'Cannot create a timeout without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named timer\n     * @param name Timer name\n     */\n    protected clearTimeout(name: string) {\n        if (this._timers[name]) {\n            clearTimeout(this._timers[name]);\n            this._timers[name] = null;\n        }\n    }\n\n    /**\n     * Creates a named interval\n     * @param name Name of the interval\n     * @param fn Callback function for the interval\n     * @param delay Callback delay\n     */\n    protected interval(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearInterval(name);\n            this._intervals[name] = <any>setInterval(() => fn(), delay);\n        } else {\n            throw new Error(\n                name ? 'Cannot create named interval without a name' : 'Cannot create a interval without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named interval\n     * @param name Timer name\n     */\n    protected clearInterval(name: string) {\n        if (this._intervals[name]) {\n            clearInterval(this._intervals[name]);\n            this._intervals[name] = null;\n        }\n    }\n\n    /**\n     * Store named subscription\n     * @param name Name of the subscription\n     * @param unsub Unsubscribe callback or Subscription object\n     */\n    protected subscription(name: string, unsub: Subscription | (() => void)) {\n        this.unsub(name);\n        this._subscriptions[name] = unsub\n    }\n\n    /**\n     * Call unsubscribe callback with the given name\n     * @param name\n     */\n    protected unsub(name: string) {\n        if (this._subscriptions && this._subscriptions[name]) {\n            this._subscriptions[name] instanceof Subscription\n                ? (this._subscriptions[name] as Subscription).unsubscribe()\n                : (this._subscriptions[name] as any)();\n            this._subscriptions[name] = null;\n        }\n    }\n}\n","\nimport { Directive, OnDestroy } from '@angular/core';\nimport { BaseClass } from './base.class';\n\n@Directive({\n    selector: 'a-very-basic-component-base-that-should-not-be-used'\n})\nexport class BaseDirective extends BaseClass implements OnDestroy {\n    public ngOnDestroy(): void {\n        this.destroy();\n    }\n}\n\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\n@Component({\n  selector: 'an-action-field',\n  templateUrl: './action-field.component.html',\n  styleUrls: ['./action-field.component.scss']\n})\nexport class ActionFieldComponent extends BaseDirective {\n    /** Name of the field */\n    @Input() public name: string;\n    /** Value to display on the field */\n    @Input() public placeholder: string;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Emitter for user interaction events */\n    @Output('onAction') public on_action = new EventEmitter();\n    /** Whether to show tooltip */\n    public show_tooltip = false;\n\n    /**\n     * Emit that the user has performed an action on the field\n     */\n    public performAction() {\n        this.show_tooltip = !this.show_tooltip;\n        this.on_action.emit();\n    }\n}\n","<div\n    class=\"action-field\"\n    role=\"button\"\n    [attr.disabled]=\"disabled\"\n    form-field\n    tabindex=\"0\"\n    (keydown.enter)=\"performAction()\"\n    (click)=\"performAction()\"\n>\n    <div class=\"display\">{{ placeholder }}</div>\n    <div class=\"icon\">\n        <app-icon\n            [icon]=\"{\n                type: 'icon',\n                class: 'material-icons',\n                content: show_tooltip ? 'arrow_drop_up' : 'arrow_drop_down'\n            }\"\n        ></app-icon>\n    </div>\n</div>\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n  selector: 'a-counter',\n  templateUrl: './counter.component.html',\n  styleUrls: ['./counter.component.scss'],\n  providers: [\n      {\n          provide: NG_VALUE_ACCESSOR,\n          /* istanbul ignore next */\n          useExisting: forwardRef(() => CounterComponent),\n          multi: true\n      }\n  ]\n})\nexport class CounterComponent implements ControlValueAccessor {\n    /** Size of a single step */\n    @Input() public step: number = 1;\n    /** Maximum amount for the counter */\n    @Input() public max: number = 10;\n    /** Minimum amount for the counter */\n    @Input() public min: number = 0;\n    /** Current value of the counter */\n    public value: number;\n    /** Whether shift key is being held by the user */\n    public shift_key: boolean;\n    /** Whether control key is being held by the user */\n    public ctrl_key: boolean;\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /**\n     * Add the `step` to the current value\n     */\n    public add() {\n        if (!this.value) { this.value = this.min || 0 }\n        const step = this.ctrl_key ? 100 : this.shift_key ? 10 : this.step || 1;\n        this.value += step;\n        if (this.value > this.max) {\n            this.value = this.max || 10;\n        }\n        this.setValue(this.value);\n    }\n\n    /** Remove the `step` from the current value */\n    public remove() {\n        if (!this.value) { this.value = this.min || 0 }\n        const step = this.ctrl_key ? 100 : this.shift_key ? 10 : this.step || 1;\n        this.value -= step;\n        if (this.value < this.min) {\n            this.value = this.min || 0;\n        }\n        this.setValue(this.value);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.value = value;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n}\n","<div\n    class=\"counter\"\n    (window:keydown.shift)=\"shift_key = true\"\n    (window:keydown.control)=\"ctrl_key = true\"\n    (window:keydown.meta)=\"ctrl_key = true\"\n    (window:keyup.shift)=\"shift_key = false\"\n    (window:keyup.control)=\"ctrl_key = false\"\n    (window:keyup.meta)=\"ctrl_key = false\"\n>\n    <button mat-icon-button name=\"remove\" [disabled]=\"!value || value === min\" (tapped)=\"remove()\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'remove' }\"></app-icon>\n    </button>\n    <div class=\"value\">\n        {{ value || '0' }}\n    </div>\n    <button mat-icon-button name=\"add\" [disabled]=\"value === max\" (tapped)=\"add()\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'add' }\"></app-icon>\n    </button>\n</div>\n","import { Component, OnInit, forwardRef, Input, ViewChild } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\nimport * as dayjs from 'dayjs';\nimport { MatMenuTrigger } from '@angular/material/menu';\n\n@Component({\n    selector: 'a-date-field',\n    templateUrl: './date-field.component.html',\n    styleUrls: ['./date-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateFieldComponent),\n            multi: true\n        }\n    ]\n})\nexport class DateFieldComponent extends BaseDirective implements OnInit, ControlValueAccessor {\n    /** Earliest date available the user is allowed to pick */\n    @Input('from') public _from: number = dayjs().valueOf();\n    /** Latest date available the user is allowed to pick */\n    @Input('to') public _to: number;\n    /** Position of the tooltip */\n    @Input() public position: 'right' | 'left' = 'right';\n    /** Offset of the tooltip */\n    @Input() public offset: 'top' | 'bottom' = 'bottom';\n    /** Whether form control is disabled */\n    @Input() public disabled: boolean;\n    /** Whether to show the calendar tooltip */\n    public show_tooltip: boolean;\n    /** Currently selected date */\n    public date: number;\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    @ViewChild(MatMenuTrigger, { static: true }) private _trigger: MatMenuTrigger;\n\n    /** First allowed date on the calendar */\n    public get from(): number {\n        return this._from || dayjs().startOf('d').valueOf();\n    }\n    /** Current date value */\n    public get until(): number {\n        return this._to || dayjs().endOf('d').add(1, 'y').valueOf();\n    }\n    /** Display value for the current date */\n    public get date_string(): string {\n        return dayjs(this.date).format('DD MMM YYYY');\n    }\n\n    /** Whether date picker is open */\n    public get is_open(): boolean {\n        return this._trigger.menuOpen;\n    }\n\n    public ngOnInit() {\n        this.date = dayjs().valueOf();\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number) {\n        // Keep hours and minutes of the old date\n        const old_date = dayjs(this.date);\n        let new_date = dayjs(new_value)\n            .hour(old_date.hour())\n            .minute(old_date.minute())\n            .valueOf();\n        // Check that new date is before from\n        if (new_date < this.from) {\n            new_date = this.from;\n        }\n        this.date = new_date;\n        if (this._onChange) {\n            this._onChange(new_date);\n        }\n        this.show_tooltip = false;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value;\n        this.show_tooltip = false;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /** Set the state of the tooltip to closed after delay */\n    public closeDatePicker() {\n        this._trigger.closeMenu();\n    }\n\n    /** Set the state of the tooltip to closed after delay */\n    public openDatePicker() {\n        this._trigger.openMenu();\n    }\n}\n","<div\n    class=\"date-field\"\n    role=\"button\"\n    form-field\n    tabindex=\"0\"\n    [class.active]=\"is_open\"\n    [attr.disabled]=\"disabled\"\n    (keydown.enter)=\"openDatePicker()\"\n    [matMenuTriggerFor]=\"appMenu\"\n>\n    <div class=\"display\">{{ date_string }}</div>\n    <div class=\"icon\">\n        <app-icon\n            [icon]=\"{\n                type: 'icon',\n                class: 'material-icons',\n                content: is_open ? 'arrow_drop_up' : 'arrow_drop_down'\n            }\"\n        ></app-icon>\n    </div>\n</div>\n<mat-menu #appMenu=\"matMenu\">\n    <div mat-menu-item class=\"date-picker\" (click)=\"$event.stopPropagation()\">\n        <a-date-picker\n            [ngModel]=\"date\"\n            [options]=\"{ from: from, to: until }\"\n            (ngModelChange)=\"setValue($event); closeDatePicker()\"\n        ></a-date-picker>\n    </div>\n</mat-menu>\n","import { Component, OnInit, forwardRef, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { humaniseDuration } from 'src/app/shared/utilities/general.utilities';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-duration-field',\n    templateUrl: './duration-field.component.html',\n    styleUrls: ['./duration-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DurationFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DurationFieldComponent extends BaseDirective\n    implements OnInit, OnChanges, ControlValueAccessor {\n    /** Maximum duration option available */\n    @Input() public max: number = 240;\n    /** Minimum duration option available */\n    @Input() public min: number = 15;\n    /** Step value between options */\n    @Input() public step: number = 15;\n    /** Reference time for displaying next to durations */\n    @Input() public time: number;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n\n    public duration: number = 60;\n    /** List of available duration options */\n    public duration_options: Identity[];\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    public ngOnInit(): void {\n        this.duration_options = this.generateDurationOptions(this.max, this.min, this.step);\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.max || changes.min || changes.step || changes.time) {\n            this.duration_options = this.generateDurationOptions(this.max, this.min, this.step);\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.duration = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(+new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.duration = value;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    private generateDurationOptions(max: number, min: number, step: number): Identity[] {\n        const blocks: Identity[] = [];\n        let time = min;\n        let date = this.time ? dayjs(this.time) : null;\n        while (time <= max) {\n            blocks.push({\n                id: time,\n                name: date\n                    ? `${date.add(time, 'm').format('h:mm A')} (${humaniseDuration(time)})`\n                    : `${humaniseDuration(time)}`,\n            });\n            time += step;\n        }\n        blocks.push({ id: 7 * 24 * 60, name: '1 week' });\n        return blocks;\n    }\n}\n","<div class=\"duration-field\" [attr.disabled]=\"disabled\">\n    <mat-form-field appearance=\"outline\">\n        <mat-select #select [value]=\"duration\" [disabled]=\"disabled\" (valueChange)=\"setValue($event)\">\n            <mat-option *ngFor=\"let option of duration_options\" [value]=\"option.id\">\n                {{ option.name }}\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n</div>\n","import { Component, forwardRef, Input, ViewChild, OnInit, SimpleChanges, OnChanges } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { MatSelect } from '@angular/material/select';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { timeFormatString } from 'src/app/shared/utilities/general.utilities';\n\nimport * as dayjs from 'dayjs';\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\n\n@Component({\n    selector: 'a-time-field',\n    templateUrl: './time-field.component.html',\n    styleUrls: ['./time-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => TimeFieldComponent),\n            multi: true\n        }\n    ]\n})\nexport class TimeFieldComponent extends BaseDirective implements OnInit, OnChanges, ControlValueAccessor {\n    /** Time step between each allowed time option */\n    @Input() public step: number = 15;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Whether past times are allowed */\n    @Input() public no_past_times: boolean = true;\n    /** String representing the currently set time */\n    public date: number = dayjs().valueOf();\n    /** String representing the currently set time */\n    public time: string = dayjs().format('HH:mm');\n    /** Available time blocks for the selected date */\n    public _time_options: Identity[];\n    /** Whether select field should be shown */\n    public show_select: boolean;\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /** Select field for selecting the time */\n    @ViewChild('select') private select_field: MatSelect;\n\n    public ngOnInit(): void {\n        this.show_select = true;\n        this._time_options = this.generateAvailableTimes(this.date, !this.no_past_times, this.step);\n        this.timeout('hide', () => this.show_select = false);\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.no_past_times || changes.step) {\n            this._time_options = this.generateAvailableTimes(this.date, !this.no_past_times, this.step);\n        }\n    }\n\n    /** Available time blocks for the selected date */\n    public get time_options() {\n        const time = (this.time || '00:00').split(':');\n        const date = dayjs(this.date).hour(+time[0]).minute(+time[1]);\n        if (date.minute() % 15 !== 0 && !this._time_options.find(time => time.id === date.format('HH:mm'))) {\n            this._time_options.push({\n                name: `${date.format(timeFormatString())}`,\n                id: date.format('HH:mm')\n            });\n            this._time_options.sort((a, b) => `${a.id}`.localeCompare(`${b.id}`));\n        }\n        return this._time_options;\n    }\n\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        this.time = new_value;\n        if (this._onChange) {\n            const time = (this.time || '00:00').split(':');\n            const date = dayjs(this.date).hour(+time[0]).minute(+time[1]).startOf('m');\n            this._onChange(date.valueOf());\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value;\n        let date = dayjs(this.date).startOf('m');\n        date = date.minute(Math.ceil(date.minute() / 5) * 5);\n        this.time = date.format('HH:mm');\n        this._time_options = this.generateAvailableTimes(this.date, !this.no_past_times, this.step);\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    /**\n     * Show select field for time options\n     */\n    public showSelect() {\n        this.show_select = true;\n        this.timeout('on_shown', () => {\n            if (this.select_field) {\n                this.select_field.focus();\n                this.select_field.open();\n                this.subscription('listen_close', this.select_field.openedChange.subscribe((state) => {\n                    if (!state) {\n                        this.show_select = false;\n                    }\n                }));\n            }\n        })\n    }\n\n    /**\n     * Generate a list of time options for the given date\n     * @param datestamp Date to generate options for\n     * @param show_past Whether past times should be options\n     */\n    private generateAvailableTimes(datestamp: number, show_past: boolean, step: number = 15): Identity[] {\n        const now = dayjs();\n        let date = dayjs(datestamp);\n        const blocks = [];\n        if (show_past || date.isAfter(now, 'd')) {\n            date = date.startOf('d');\n        } else if (date.isAfter(now), 'm') {\n            date = now;\n        }\n        date = date.minute(Math.ceil(date.minute() / step) * step);\n        const end = date.endOf('d');\n        // Add options for the rest of the day\n        while (date.isBefore(end, 'm')) {\n            blocks.push({\n                name: `${date.format(timeFormatString())}`,\n                id: date.format('HH:mm')\n            });\n            date = date.add(step, 'm');\n        }\n        return blocks;\n    }\n}\n","<div\n    class=\"time-field\"\n    role=\"button\"\n    [style.display]=\"show_select ? 'none' : ''\"\n    [attr.disabled]=\"disabled\"\n    form-field\n    tabindex=\"0\"\n    (keydown.enter)=\"showSelect()\"\n>\n    <div class=\"display\">\n        <input\n            matInput\n            type=\"time\"\n            [disabled]=\"disabled\"\n            [ngModel]=\"time\"\n            (ngModelChange)=\"setValue($event)\"\n        />\n    </div>\n    <div class=\"icon\" (click)=\"showSelect()\">\n        <app-icon\n            [icon]=\"{\n                type: 'icon',\n                class: 'material-icons',\n                content: show_select ? 'arrow_drop_up' : 'arrow_drop_down'\n            }\"\n        ></app-icon>\n    </div>\n</div>\n<mat-form-field appearance=\"outline\" *ngIf=\"show_select\">\n    <mat-select #select [value]=\"time\" [disabled]=\"disabled\" (valueChange)=\"setValue($event)\">\n        <mat-option *ngFor=\"let option of time_options\" [value]=\"option.id\">\n            {{ option.name }}\n        </mat-option>\n    </mat-select>\n</mat-form-field>\n","import { Component, OnInit, forwardRef, Output, EventEmitter, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subject, Observable, of } from 'rxjs';\nimport { switchMap, debounceTime, distinctUntilChanged, map, catchError } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport {\n    filterList,\n    matchToHighlight,\n    downloadFile,\n    csvToJson,\n} from 'src/app/shared/utilities/general.utilities';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: 'a-user-list-field',\n    templateUrl: './user-list-field.component.html',\n    styleUrls: ['./user-list-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UserListFieldComponent extends BaseDirective implements OnInit, ControlValueAccessor {\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Number of characters needed before a search will start */\n    @Input() public limit: number = 3;\n    /** Emitter for action to make a new user */\n    @Output('newUser') public new_user = new EventEmitter<void>();\n\n    /** User list to display */\n    public user_list: User[];\n    /** List of active selected users on the list */\n    public active_list: User[];\n    /** Whether user list is loading */\n    public loading: boolean;\n    /** String  */\n    public search_str: string;\n    /** List of users from an API search */\n    public search_results$: Observable<User[]>;\n    /** Subject holding the value of the search */\n    public search$ = new Subject<string>();\n\n    /** Form control on change handler */\n    private _onChange: (_: User[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User[]) => void;\n\n    constructor(private _service: ApplicationService, private _users: UsersService) {\n        super();\n    }\n\n    ngOnInit() {\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(400),\n            distinctUntilChanged(),\n            switchMap((query) => {\n                this.loading = true;\n                return query.length >= this.limit\n                    ? this._users.query({\n                          q: query.slice(0, Math.max(this.limit, 3)),\n                          cache: 60 * 1000,\n                      })\n                    : Promise.resolve([]);\n            }),\n            catchError((_) => of([])),\n            map((list: User[]) => {\n                this.loading = false;\n                return filterList(this.search_str, list, ['name', 'email']);\n            })\n        );\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe((list) => {\n                this.user_list = list;\n                this.user_list.forEach((i: any) => {\n                    i.match_name = matchToHighlight(i.match_name);\n                    i.match_email = matchToHighlight(i.match_email);\n                    return i;\n                });\n            })\n        );\n    }\n\n    /**\n     * Add user to the user list\n     * @param user\n     */\n    public addUser(user: User) {\n        /* istanbul ignore else */\n        if (!this.active_list) {\n            this.active_list = [];\n        }\n        const index = this.active_list.findIndex((a_user) => a_user.id === user.id);\n        /* istanbul ignore else */\n        if (index < 0) {\n            this.active_list = [...this.active_list, user];\n        }\n        this.setValue(this.active_list);\n        this.search_str = '';\n    }\n\n    /**\n     * Remove user from the user list\n     * @param user\n     */\n    public removeUser(user: User) {\n        this.active_list = this.active_list.filter((a_user) => a_user.id !== user.id);\n        this.setValue(this.active_list);\n    }\n\n    /**\n     * Load CSV file and populate the user list with the contents\n     * @param event File input field event\n     */\n    public addUsersFromFile(event) {\n        /* istanbul ignore else */\n        if (event.target) {\n            const file = event.target.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    this.processCsvData((evt.srcElement as any).result);\n                    event.target.value = '';\n                });\n                reader.addEventListener('error', (_) =>\n                    this._service.notifyError('Error reading file.')\n                );\n            }\n        }\n    }\n\n    /**\n     * Process raw CSV data and save user data to attendee list\n     * @param data CSV data\n     */\n    private processCsvData(data: string) {\n        const list = csvToJson(data) || [];\n        const id = this._users.current.staff_code;\n        list.forEach((el) => {\n            el.name = el.name || `${el.first_name} ${el.last_name}`;\n            const display = (el.name || `${Math.floor(Math.random() * 9999_9999)}`)\n                .split(' ')\n                .join('_')\n                .toLowerCase();\n            /* istanbul ignore else */\n            if (!el.email) {\n                el.email = `${display}+${id}@guest.mckinsey.com`;\n            }\n            el.type = 'external';\n            this.addUser(new User(el));\n        });\n    }\n\n    /* istanbul ignore next */\n    /** Download template CSV file */\n    public downloadCSVTemplate() {\n        const template = `Organisation Name,First Name,Last Name,Email,Phone\\nFake Org,John,Smith,john.smith@example.com,01234567898`;\n        downloadFile('template.csv', template);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User[]): void {\n        this.active_list = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User[]) {\n        this.active_list = value;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User[]) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User[]) => void): void {\n        this._onTouch = fn;\n    }\n}\n","<div class=\"user-list-field\" form-field [attr.disabled]=\"disabled\">\n    <mat-form-field appearance=\"outline\">\n        <input\n            matInput\n            name=\"user-search\"\n            type=\"text\"\n            [(ngModel)]=\"search_str\"\n            (ngModelChange)=\"search$.next($event)\"\n            [disabled]=\"disabled\"\n            placeholder=\"Search for user...\"\n            i18n-placeholder\n            [matAutocomplete]=\"auto\"\n        />\n        <div class=\"prefix\" matPrefix>\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'search' }\"\n            ></app-icon>\n        </div>\n        <div class=\"suffix\" matSuffix *ngIf=\"loading\">\n            <mat-spinner diameter=\"16\"></mat-spinner>\n        </div>\n    </mat-form-field>\n    <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"addUser($event.option.value)\">\n        <mat-option *ngFor=\"let option of user_list\" [value]=\"option\">\n            <div class=\"name\">{{ option.name }}</div>\n            <div class=\"email\">{{ option.email }}</div>\n        </mat-option>\n    </mat-autocomplete>\n    <div class=\"actions\">\n        <button type=\"button\" name=\"new-contact\" matRipple (tapped)=\"new_user.emit()\" i18n=\"Add new external attendee\">\n            New Contact\n        </button>\n        <button type=\"button\" name=\"upload-csv\" matRipple i18n=\"Upload attendee list from CSV file\">\n            Upload CSV\n            <input type=\"file\" (change)=\"addUsersFromFile($event)\" />\n        </button>\n        <button type=\"button\" name=\"download-template\" matRipple (tapped)=\"downloadCSVTemplate()\" i18n=\"Download template CSV file\">\n            CSV Template\n        </button>\n    </div>\n    <div class=\"user-list\">\n        <mat-chip-list\n            aria-label=\"User List\"\n            *ngIf=\"active_list && active_list.length; else empty_state\"\n        >\n            <mat-chip\n                *ngFor=\"let user of active_list\"\n                [id]=\"user.email\"\n                [color]=\"user.external ? 'accent' : 'primary'\"\n                [removable]=\"true\"\n                (removed)=\"removeUser(user)\"\n            >\n                {{ user.name }}\n                <app-icon\n                    matChipRemove\n                    [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"\n                ></app-icon>\n            </mat-chip>\n        </mat-chip-list>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div i18n=\"Attendee empty state\">No attendees</div>\n</ng-template>\n","import { Component, OnInit, forwardRef, Input } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { Subject, Observable, of } from 'rxjs';\nimport { switchMap, debounceTime, distinctUntilChanged, map, catchError } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { filterList, matchToHighlight } from 'src/app/shared/utilities/general.utilities';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: 'a-user-search-field',\n    templateUrl: './user-search-field.component.html',\n    styleUrls: ['./user-search-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserSearchFieldComponent),\n            multi: true\n        }\n    ]\n})\nexport class UserSearchFieldComponent extends BaseDirective implements OnInit, ControlValueAccessor {\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Limit available options to these */\n    @Input() public options: User[];\n    /** Currently selected user */\n    public active_user: User;\n    /** User list to display */\n    public user_list: User[];\n    /** Whether user list is loading */\n    public loading: boolean;\n    /** Current display value of the search input field  */\n    public search_str: string;\n    /** List of users from an API search */\n    public search_results$: Observable<User[]>;\n    /** Subject holding the value of the search */\n    public search$ = new Subject<string>();\n\n    /** Form control on change handler */\n    private _onChange: (_: User) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User) => void;\n\n    constructor(private _users: UsersService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(400),\n            distinctUntilChanged(),\n            switchMap(query => {\n                this.loading = true;\n                return this.options && this.options.length > 0\n                    ? Promise.resolve(this.options)\n                    : query.length >= 3\n                        ? (this._users.query({ q: query.slice(0, 3), cache: 60 * 1000 }) as Promise<User[]>)\n                        : Promise.resolve([]);\n            }),\n            catchError((err) => of([])),\n            map((list: User[]) => {\n                this.loading = false;\n                return filterList(this.search_str, list, ['name', 'email']);\n            })\n        );\n        // Process API results\n        this.subscription('search_results', this.search_results$.subscribe(list => {\n            this.user_list = list;\n            this.user_list.forEach((i: any) => {\n                i.match_name = matchToHighlight(i.match_name);\n                i.match_email = matchToHighlight(i.match_email);\n                return i;\n            });\n        }));\n    }\n\n    /**\n     * Reset the search string back to the name of the active user\n     */\n    public resetSearchString() {\n        if (this.active_user) {\n            this.search_str = this.active_user.name;\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User): void {\n        this.active_user = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n        this.resetSearchString();\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User) {\n        this.active_user = value;\n        this.resetSearchString();\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User) => void): void {\n        this._onTouch = fn;\n    }\n}\n","<div class=\"user-search-field\" form-field>\n    <mat-form-field appearance=\"outline\">\n        <input\n            matInput\n            name=\"user-search\"\n            [(ngModel)]=\"search_str\"\n            (ngModelChange)=\"search$.next($event)\"\n            [disabled]=\"disabled\"\n            placeholder=\"Search for user...\"\n            i18n-placeholder\n            [matAutocomplete]=\"auto\"\n            (blur)=\"resetSearchString()\"\n        />\n        <div class=\"prefix\" matPrefix>\n            <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'search' }\"></app-icon>\n        </div>\n        <div class=\"suffix\" matSuffix *ngIf=\"loading\">\n            <mat-spinner diameter=\"16\"></mat-spinner>\n        </div>\n    </mat-form-field>\n    <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"setValue($event.option.value)\">\n        <mat-option *ngFor=\"let option of user_list\" [value]=\"option\">\n            <div class=\"name\">{{ option.name }}</div>\n            <div class=\"email\">{{ option.email }}</div>\n        </mat-option>\n    </mat-autocomplete>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\n\nimport { BaseDirective } from '../../base.directive';\n\n@Component({\n    selector: 'feedback',\n    templateUrl: './feedback.template.html',\n    styleUrls: ['./feedback.styles.scss']\n})\nexport class FeedbackComponent extends BaseDirective implements OnInit {\n    /** Name of the currently active page */\n    public current_page: string;\n\n    constructor(private _router: Router) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.timeout('Getting Title', () => this.updateRoute(document.title));\n        this._router.events.subscribe((event: NavigationEnd) => {\n            /* istanbul ignore else */\n            if (event instanceof NavigationEnd) {\n                this.timeout('Getting Title', () => this.updateRoute(document.title));\n            }\n        });\n    }\n\n    public updateRoute(location) {\n        location = location.substr(0, location.indexOf(' |'));\n        this.current_page = location;\n    }\n}\n","<a [href]=\"'mailto:converge_feedback@mckinsey.com?subject=Feedback for page: ' + current_page\">\n    <div class=\"feedback-button\">\n        <span class=\"text\" i18n>Feedback</span>\n        <span class=\"icon\">\n            <app-icon [icon]=\"{class:'material-icons', content: 'feedback'}\"></app-icon>\n        </span>\n    </div>\n</a>\n","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from '../../base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { ApplicationLink } from '../../utilities/settings.interfaces';\n\n@Component({\n    selector: 'a-footer-menu',\n    templateUrl: './footer-menu.component.html',\n    styleUrls: ['./footer-menu.component.scss']\n})\nexport class FooterMenuComponent extends BaseDirective implements OnInit {\n\n    /** Tiles to display on the home page */\n    public tiles: ApplicationLink[] = [];\n\n    constructor(private _service: ApplicationService) {\n        super();\n    }\n\n    /** Angular Component initialisation lifecycle hook */\n    public ngOnInit(): void {\n        this._service.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.tiles = this._service.setting('app.home.tiles') || [];\n        });\n    }\n}\n","<div class=\"footer-menu\" *ngIf=\"tiles && tiles.length\">\n    <ng-container *ngFor=\"let item of tiles\">\n        <a *ngIf=\"item.route\" [routerLink]=\"[item.route]\" routerLinkActive=\"active\">\n            <div class=\"tile\">\n                <div class=\"icon\">\n                    <app-icon [icon]=\"item.icon\"></app-icon>\n                </div>\n                <div class=\"text\">{{ item.name }}</div>\n            </div>\n        </a>\n        <a *ngIf=\"!item.route\" [href]=\"item.link | safe: 'url'\">\n            <div class=\"tile\">\n                <div class=\"icon\">\n                    <app-icon [icon]=\"item.icon\"></app-icon>\n                </div>\n                <div class=\"text\">{{ item.name }}</div>\n            </div>\n        </a>\n    </ng-container>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from '../../../base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { NewUserModalComponent } from 'src/app/overlays/new-user-modal/new-user-modal.component';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\nimport { User } from 'src/app/services/data/users/user.class';\nimport {\n    SpaceSelectModalComponent,\n    SpaceSelectModalData,\n} from 'src/app/overlays/space-select-modal/space-select-modal.component';\nimport {\n    RecurrenceModalData,\n    RecurrenceModalComponent,\n} from 'src/app/overlays/recurrence-modal/recurrence-modal.component';\nimport { UsersService } from 'src/app/services/data/users/users.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nimport * as dayjs from 'dayjs';\nimport { formatRecurrence } from 'src/app/shared/utilities/formatting.utilities';\n\n@Component({\n    selector: 'a-booking-form',\n    templateUrl: './booking-form.component.html',\n    styleUrls: ['./booking-form.component.scss'],\n})\nexport class BookingFormComponent extends BaseDirective {\n    /** Form fields for booking */\n    @Input() public form: FormGroup;\n    /** List of available users to host bookings */\n    public user_list: User[] = [];\n    /** From date input for date field */\n    public from_date: number = dayjs().minute(Math.ceil(dayjs().minute() / 5) * 5).valueOf();\n\n    constructor(\n        private _service: ApplicationService,\n        private _users: UsersService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._users.initialised.pipe(first((_) => _)).subscribe(() => {\n            const user: User = this._users.current;\n            const delegates = user.delegates.map(\n                (email) => this._users.find(email) || new User({ email, name: email.split('@')[0] })\n            );\n            this.user_list = [user].concat(delegates);\n        });\n    }\n\n    /** Display string for the recurrence value of the booking */\n    public get recurrence(): string {\n        const recurrence = this.form.controls.recurrence\n            ? this.form.controls.recurrence.value\n            : null;\n        return formatRecurrence(recurrence);\n    }\n\n    /** Whether notes and description should use the HTML editor */\n    public get use_html(): boolean {\n        return this._service.setting('app.booking.html_body') || false;\n    }\n\n    /** List of available types for bookings */\n    public get booking_types(): Identity[] {\n        return this._service.setting('app.booking.booking_types') || [];\n    }\n\n    /** Display string for the list of active spaces */\n    public get spaces(): string {\n        const spaces = this.form.controls.space_list.value;\n        return spaces.length === 1\n            ? spaces[0].name\n            : spaces.length > 1\n            ? `${spaces.length} spaces selected`\n            : 'No Spaces selected';\n    }\n\n    /**\n     * Open modal to change the space details for the booking\n     */\n    public openSpacesModal(): void {\n        const ref = this._dialog.open<SpaceSelectModalComponent, SpaceSelectModalData>(\n            SpaceSelectModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                maxWidth: '95vw',\n                data: {\n                    spaces: this.form.controls.space_list.value,\n                    date: this.form.controls.date.value,\n                    duration: this.form.controls.duration.value,\n                    host: this.form.controls.organiser.value,\n                    multiple: true,\n                },\n            }\n        );\n        this.subscription(\n            'new_spaces',\n            ref.componentInstance.event.subscribe((event) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    let space_list = this.form.controls.space_list.value;\n                    space_list = event.metadata;\n                    this.form.controls.space_list.setValue(unique(space_list, 'id'));\n                    ref.close();\n                    this.unsub('new_spaces');\n                }\n            })\n        );\n    }\n\n    /**\n     * Open modal to change the recurrence details for the booking\n     */\n    public openRecurrenceModal() {\n        const ref = this._dialog.open<RecurrenceModalComponent, RecurrenceModalData>(\n            RecurrenceModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                maxWidth: '95vw',\n                data: {\n                    details: this.form.controls.recurrence.value,\n                    date: this.form.controls.date.value,\n                },\n            }\n        );\n        this.subscription(\n            'recurrence',\n            ref.componentInstance.event.subscribe((event) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    this.form.controls.recurrence.setValue(\n                        event.metadata && event.metadata.period !== 'none' ? event.metadata : {}\n                    );\n                    ref.close();\n                    this.unsub('recurrence');\n                }\n            })\n        );\n    }\n\n    /**\n     * Open modal to change the recurrence details for the booking\n     */\n    public openNewUserModal() {\n        const ref = this._dialog.open<NewUserModalComponent>(NewUserModalComponent, {\n            width: 'auto',\n            height: 'auto',\n        });\n        this.subscription(\n            'new_user',\n            ref.componentInstance.event.subscribe((event) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    const attendees = this.form.controls.attendees.value;\n                    attendees.push(event.metadata);\n                    this.form.controls.attendees.setValue(unique(attendees, 'email'));\n                    ref.close();\n                    this.unsub('new_user');\n                }\n            })\n        );\n    }\n}\n","<div class=\"booking-form\" *ngIf=\"form\" [formGroup]=\"form\">\n    <div\n        class=\"field\"\n        *ngIf=\"form.controls.id && form.controls.id.value && form.controls.space_list\"\n    >\n        <label for=\"spaces\" i18n=\"Booking form spaces label\">Spaces: </label>\n        <an-action-field\n            name=\"spaces\"\n            [placeholder]=\"spaces\"\n            (onAction)=\"openSpacesModal()\"\n        ></an-action-field>\n    </div>\n    <div class=\"field\" name=\"title\" *ngIf=\"form.controls.title\">\n        <label\n            for=\"title\"\n            [class.error]=\"form.controls.title.invalid && form.controls.title.touched\"\n            i18n=\"Booking form title label\"\n        >\n            Title<span>*</span>:\n        </label>\n        <mat-form-field appearance=\"outline\">\n            <input matInput name=\"title\" placeholder=\"Meeting Title\" i18n-placeholder formControlName=\"title\" />\n\n            <mat-error *ngIf=\"form.controls.title.invalid\" i18n=\"Booking form title error\"\n                >Title is required</mat-error\n            >\n        </mat-form-field>\n    </div>\n    <div class=\"group date\">\n        <div class=\"field\" name=\"date\" *ngIf=\"form.controls.date\">\n            <label for=\"date\" i18n=\"Booking form date label\">Date: </label>\n            <a-date-field [from]=\"from_date\" name=\"date\" formControlName=\"date\"></a-date-field>\n        </div>\n        <div class=\"field\" name=\"recurrence\" *ngIf=\"form.controls.recurrence\">\n            <label for=\"recurrence\" i18n=\"Booking form recurrence label\">Recurrence: </label>\n            <an-action-field\n                name=\"recurrence\"\n                [placeholder]=\"recurrence\"\n                (onAction)=\"openRecurrenceModal()\"\n            ></an-action-field>\n        </div>\n    </div>\n    <div class=\"group time\">\n        <div class=\"field\" name=\"start-time\" *ngIf=\"form.controls.date\">\n            <label for=\"start-time\" i18n=\"Booking form start time label\">Start Time: </label>\n            <a-time-field\n                name=\"start-time\"\n                [disabled]=\"form.controls.all_day?.value\"\n                [ngModel]=\"form.controls.date.value\"\n                (ngModelChange)=\"form.controls.date.setValue($event)\"\n                [ngModelOptions]=\"{ standalone: true }\"\n            ></a-time-field>\n            <div class=\"error info\" *ngIf=\"form.controls.date.touched && form.controls.date.invalid\">\n                Date and time must be in the future\n            </div>\n        </div>\n        <div class=\"field\" name=\"duration\" *ngIf=\"form.controls.duration\">\n            <div class=\"label-group\">\n                <label for=\"duration\" i18n=\"Booking form duration label\">Duration: </label>\n                <mat-checkbox\n                    formControlName=\"all_day\"\n                    *ngIf=\"form.controls.all_day\"\n                    i18n=\"Booking form all day label\"\n                    >All day booking</mat-checkbox\n                >\n            </div>\n            <a-duration-field\n                name=\"duration\"\n                [max]=\"720\"\n                [disabled]=\"form.controls.all_day?.value\"\n                [time]=\"form.controls.date?.value\"\n                formControlName=\"duration\"\n            ></a-duration-field>\n            <div class=\"error info\" *ngIf=\"form.controls.duration.touched && form.controls.duration.invalid\">\n                Duration is invalid. End time must be in the future\n            </div>\n        </div>\n    </div>\n    <div class=\"field\" name=\"organiser\" *ngIf=\"form.controls.organiser\">\n        <label for=\"organiser\" i18n=\"Booking form organiser label\">Host: </label>\n        <mat-form-field appearance=\"outline\">\n            <mat-select\n                name=\"organiser\"\n                formControlName=\"organiser\"\n                [placeholder]=\"form.controls.organiser.value.name || form.controls.organiser.value.email\"\n            >\n                <mat-option *ngFor=\"let user of user_list\" [value]=\"user\">\n                    {{ user.name || user.email }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    </div>\n    <div class=\"field\" name=\"attendees\" *ngIf=\"form.controls.attendees\">\n        <label for=\"attendees\" i18n=\"Booking form attendees label\">Attendees: </label>\n        <a-user-list-field\n            name=\"attendees\"\n            formControlName=\"attendees\"\n            (newUser)=\"openNewUserModal()\"\n        ></a-user-list-field>\n    </div>\n    <div class=\"field\" name=\"booking-type\" *ngIf=\"form.controls.type && booking_types.length > 1\">\n        <label for=\"booking-type\" i18n=\"Booking form booking type label\">Booking Type: </label>\n        <mat-form-field appearance=\"outline\">\n            <mat-select name=\"booking-type\" formControlName=\"type\">\n                <mat-option *ngFor=\"let type of booking_types\" [value]=\"type.id\">\n                    {{ type.name }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    </div>\n    <div class=\"field\" name=\"need-space\" *ngIf=\"form.controls.needs_space\">\n        <mat-checkbox formControlName=\"needs_space\" i18n=\"Booking form need space label\"\n            >Need a meeting space?</mat-checkbox\n        >\n    </div>\n    <div class=\"field\" name=\"has-catering\" *ngIf=\"form.controls.has_catering\">\n        <mat-checkbox\n            [disabled]=\"!form.controls.needs_space.value\"\n            formControlName=\"has_catering\"\n            i18n=\"Booking form need catering label\"\n        >\n            Need catering?\n        </mat-checkbox>\n    </div>\n    <div class=\"field\" name=\"body\" *ngIf=\"form.controls.body\">\n        <label for=\"body\" i18n=\"Booking form notes label\">Notes: </label>\n        <mat-form-field name=\"body\" appearance=\"outline\" *ngIf=\"!use_html; else html_editor\">\n            <textarea\n                matInput\n                name=\"description\"\n                placeholder=\"Meeting Description\"\n                i18n-placeholder\n                formControlName=\"body\"\n            ></textarea>\n        </mat-form-field>\n        <ng-template #html_editor>\n            <editor formControlName=\"body\"></editor>\n        </ng-template>\n    </div>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'user-form',\n  templateUrl: './user-form.component.html',\n  styleUrls: ['./user-form.component.scss']\n})\nexport class UserFormComponent {\n    /** Group of form fields used for creating the system */\n    @Input() public form: FormGroup;\n}\n","<div class=\"user form\" *ngIf=\"form\">\n    <form [formGroup]=\"form\">\n        <div class=\"field\" *ngIf=\"form.controls.name\">\n            <label\n                for=\"first-name\"\n                [class.error]=\"form.controls.name.invalid && form.controls.name.touched\"\n                i18n=\"User form first name label\"\n                >First Name:</label\n            >\n            <mat-form-field appearance=\"outline\">\n                <input\n                    matInput\n                    name=\"first-name\"\n                    placeholder=\"First name\"\n                    i18n-placeholder\n                    formControlName=\"first_name\"\n                />\n                <mat-error i18n=\"User form first name error\">First name is required</mat-error>\n            </mat-form-field>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.name\">\n            <label\n                for=\"system-name\"\n                [class.error]=\"form.controls.name.invalid && form.controls.name.touched\"\n                i18n=\"User form last name label\"\n                >Last Name:</label\n            >\n            <mat-form-field appearance=\"outline\">\n                <input\n                    matInput\n                    name=\"last-name\"\n                    placeholder=\"Last name\"\n                    i18n-placeholder\n                    formControlName=\"last_name\"\n                />\n                <mat-error i18n=\"User form last name error\">Last name is required</mat-error>\n            </mat-form-field>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.email\">\n            <label\n                for=\"email\"\n                [class.error]=\"form.controls.email.invalid && form.controls.email.touched\"\n                i18n=\"User form email label\"\n                >Email:</label\n            >\n            <mat-form-field appearance=\"outline\">\n                <input matInput name=\"email\" placeholder=\"Email Address\" i18n-placeholder formControlName=\"email\" />\n                <mat-error i18n=\"User form email error\">A valid email is required</mat-error>\n            </mat-form-field>\n        </div>\n    </form>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from '../../utilities/settings.interfaces';\nimport { BaseDirective } from '../../base.directive';\n\n@Component({\n    selector: 'app-icon',\n    templateUrl: './icon.component.html',\n    styleUrls: ['./icon.component.scss']\n})\nexport class IconComponent extends BaseDirective {\n    @Input() public icon: ApplicationIcon;\n}\n","<div class=\"app-icon\" *ngIf=\"icon\">\n    <i *ngIf=\"icon.type !== 'img'\" [class]=\"icon.class\">{{ icon.content }}</i>\n    <img *ngIf=\"icon.type === 'img'\" [src]=\"icon.src | safe:'resource'\" />\n</div>","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from '../../base.directive';\nimport { ApplicationIcon } from '../../utilities/settings.interfaces';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent extends BaseDirective implements OnInit {\n    /** Logo of the application organisation */\n    public logo: ApplicationIcon;\n    /** Whether the user credentials are being checked */\n    public loading: boolean;\n    /** Form fields for the login form */\n    public form: FormGroup;\n\n    constructor(private _service: ApplicationService, private _users: UsersService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.loading = true;\n        this.form = new FormGroup({\n            username: new FormControl('', [Validators.required]),\n            password: new FormControl('', [Validators.required]),\n        });\n        this._service.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.loading = false;\n            this.logo = this._service.setting('app.logo_light') || { type: 'icon' };\n        });\n    }\n\n    /** Perform user login */\n    public login() {\n        this.loading = true;\n        const form = this.form.value;\n        this._users.login({\n            username: form.username,\n            password: form.password\n        }, { form: true }).then(() => {\n            this.loading = false;\n        }, () => {\n            this.loading = false;\n            this.form.controls.password.setErrors({ check: true });\n        });\n    }\n\n}\n","<div class=\"login\">\n    <div class=\"login-form\">\n        <form [formGroup]=\"form\">\n            <div class=\"header\" [style.background-color]=\"logo?.background\">\n                <div class=\"logo\">\n                    <i *ngIf=\"logo?.type === 'icon'\" [class]=\"logo.class\">{{ logo.content }}</i>\n                    <img *ngIf=\"logo?.type === 'img'\" [src]=\"logo.src | safe: 'resource'\" />\n                </div>\n            </div>\n            <div class=\"body\">\n                <ng-container *ngIf=\"!loading; else loading_state\">\n                    <div class=\"field\">\n                        <label\n                            for=\"username\"\n                            [class.error]=\"\n                                form.controls.username.invalid && form.controls.username.touched\n                            \"\n                            i18n=\"Login form username label\"\n                        >\n                            Username:\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"username\"\n                                placeholder=\"Username/Email\"\n                                i18n-placeholder\n                                formControlName=\"username\"\n                            />\n                            <mat-error i18n=\"Login form username error\"\n                                >Username is required</mat-error\n                            >\n                        </mat-form-field>\n                    </div>\n                    <div class=\"field\">\n                        <label\n                            for=\"password\"\n                            [class.error]=\"\n                                form.controls.password.invalid && form.controls.password.touched\n                            \"\n                            i18n=\"Login form password label\"\n                        >\n                            Password:\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"password\"\n                                placeholder=\"Password\"\n                                i18n-placeholder\n                                formControlName=\"password\"\n                                (keyup.enter)=\"login()\"\n                            />\n                            <mat-error i18n=\"Login form password error\"\n                                >Invalid username or password</mat-error\n                            >\n                        </mat-form-field>\n                    </div>\n                </ng-container>\n            </div>\n            <div class=\"footer\" *ngIf=\"!loading\">\n                <button mat-button (tapped)=\"login()\" i18n=\"Login action\">Login</button>\n            </div>\n        </form>\n    </div>\n</div>\n<ng-template #loading_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <mat-spinner diameter=\"64\"></mat-spinner>\n        </div>\n        <div class=\"text\" i18n=\"Checking login status\">Checking user credentials...</div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { BuildingLevel } from 'src/app/services/data/organisation/level.class';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\n@Component({\n    selector: 'a-map-controls',\n    templateUrl: './map-controls.component.html',\n    styleUrls: ['./map-controls.component.scss']\n})\nexport class MapControlsComponent extends BaseDirective implements OnInit {\n    /** ID of the active building */\n    @Input() public building: string;\n    /** ID of the active level */\n    @Input() public level: string;\n    /** Emitter for changes to the active level */\n    @Output() public levelChange = new EventEmitter<string>();\n    /** Details of the active building */\n    public building_details: Building = this._org.building;\n    /** List of available buildings */\n    public building_list: Building[] = [];\n    /** List of available levels */\n    public level_list: readonly BuildingLevel[] = [];\n\n    public get can_select_building(): boolean {\n        return !!this._service.setting('app.explore.can_select_building');\n    }\n\n    constructor(\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _service: ApplicationService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._org.listen('buildings').pipe(first(_ => !!_ && !!_.length)).subscribe(() => {\n            this.subscription(\n                'route.query',\n                this._route.queryParamMap.subscribe(params => {\n                    /* istanbul ignore else */\n                    if (params.has('level')) {\n                        const level_id = params.get('level');\n                        const level = this._org.levelWithID(level_id);\n                        this.level = level.id;\n                        this.setBuilding(level.building_id);\n                        this.levelChange.emit(this.level);\n                        this.clearTimeout('check_building');\n                    }\n                })\n            );\n            this.building_list = this._org.buildings;\n            this.timeout('check_building', () => {\n                /* istanbul ignore else */\n                if (!this.building) {\n                    this.setBuilding(this._org.building.id);\n                }\n                this.levelChange.emit(this.level);\n            });\n        });\n    }\n\n    public setBuilding(bld_id: string) {\n        const building = this._org.buildings.find(bld => bld.id === bld_id);\n        /* istanbul ignore else */\n        if (building) {\n            this.building_details = building;\n            this.building = bld_id;\n            this.level_list = building.levels;\n            /* istanbul ignore else */\n            if (this.level_list.length && !this.level_list.find(lvl => lvl.id === this.level)) {\n                this.updateLevel(this.level_list[0].id);\n            }\n        }\n    }\n\n    public updateLevel(lvl_id: string) {\n        this.level = lvl_id;\n        this.levelChange.emit(this.level);\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParamsHandling: 'merge',\n            queryParams: { level: lvl_id }\n        });\n    }\n}\n","<div class=\"map-controls\">\n    <mat-form-field\n        class=\"map\"\n        appearance=\"outline\"\n        *ngIf=\"can_select_building && building_list.length > 1\"\n    >\n        <mat-select name=\"building\" [value]=\"building\" (valueChange)=\"setBuilding($event)\">\n            <mat-select-trigger> {{ building_details.code }} - {{ building_details.name }} </mat-select-trigger>\n            <mat-option *ngFor=\"let bld of building_list\" [value]=\"bld.id\">\n                <div class=\"building-name\">\n                    <div class=\"code\">{{ bld.code }}</div>\n                    <div class=\"name\">{{ bld.name }}</div>\n                    <div class=\"address\">{{ bld.address }}</div>\n                </div>\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n    <mat-form-field class=\"map\" appearance=\"outline\">\n        <mat-select name=\"level\" [(value)]=\"level\" (valueChange)=\"updateLevel($event)\">\n            <mat-option *ngFor=\"let level of level_list\" [value]=\"level.id\">\n                {{ level.name }}\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from '../../base.directive';\nimport { OverlayMenuSettings, ApplicationLink } from '../../utilities/settings.interfaces';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-overlay-menu',\n    templateUrl: './overlay-menu.component.html',\n    styleUrls: ['./overlay-menu.component.scss']\n})\nexport class OverlayMenuComponent extends BaseDirective {\n    /** Whether to show the menu */\n    @Input() public show: boolean;\n    /** Emitter for changes to show */\n    @Output() public showChange = new EventEmitter<boolean>();\n\n    /** List of links to display on the menu */\n    public get menu_items(): ApplicationLink[] {\n        const settings = this._service.setting('app.general.menu') || { items: [] };\n        return settings.items || [];\n    }\n\n    /** Copyright details for the application */\n    public get copyright(): string {\n        return (this._service.setting('app.general.menu') || {}).copyright || '';\n    }\n\n    public get settings() {\n        const settings = this._service.setting('app.general.menu') || { position: '' };\n        return settings;\n    }\n\n    constructor(private _service: ApplicationService) {\n        super();\n    }\n\n    /** Current year to display for copyright */\n    public get year(): number {\n        return dayjs().year();\n    }\n\n    /** Close the overlay menu */\n    public close() {\n        this.show = false;\n        this.showChange.emit(this.show);\n    }\n\n    public delayedClose() {\n        this.timeout('close', () => this.close(), 50);\n    }\n\n    public cancelClose() {\n        this.timeout('cancel_close', () => this.clearTimeout('close'), 10);\n    }\n}\n","<div\n    class=\"overlay-menu\"\n    [class.left]=\"settings?.position === 'left'\"\n    [class.middle]=\"settings?.position === 'middle'\"\n    [class.show]=\"show\"\n    (tapped)=\"delayedClose()\"\n>\n    <div class=\"menu\" (tapped)=\"cancelClose()\">\n        <div class=\"header\">\n            <div class=\"location\"></div>\n            <button mat-icon-button (tapped)=\"close()\">\n                <app-icon\n                    [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"\n                ></app-icon>\n            </button>\n        </div>\n        <div class=\"body\">\n            <ul>\n                <ng-container *ngFor=\"let item of menu_items\">\n                    <ng-container *ngIf=\"item.route; else external_link\">\n                        <a\n                            [routerLink]=\"[item.route]\"\n                            routerLinkActive=\"active\"\n                            [queryParams]=\"item.query_params\"\n                        >\n                            <li>\n                                <div class=\"text\">{{ item.name }}</div>\n                                <app-icon\n                                    [icon]=\"{\n                                        type: 'icon',\n                                        class: 'material-icons',\n                                        content: 'keyboard_arrow_right'\n                                    }\"\n                                ></app-icon>\n                            </li>\n                        </a>\n                        <ng-container *ngIf=\"item.children && item.children.length\">\n                            <a\n                                *ngFor=\"let sub_item of item.children\"\n                                class=\"sub-link\"\n                                [routerLink]=\"[sub_item.route]\"\n                                routerLinkActive=\"active\"\n                                [queryParams]=\"sub_item.query_params\"\n                            >\n                                <li>\n                                    <div class=\"text\">{{ sub_item.name }}</div>\n                                    <app-icon\n                                        [icon]=\"{\n                                            type: 'icon',\n                                            class: 'material-icons',\n                                            content: 'keyboard_arrow_right'\n                                        }\"\n                                    ></app-icon>\n                                </li>\n                            </a>\n                        </ng-container>\n                    </ng-container>\n                    <ng-template #external_link>\n                        <a [href]=\"item.link | safe: 'url'\">\n                            <li>\n                                <div class=\"text\">{{ item.name }}</div>\n                                <app-icon\n                                    [icon]=\"{\n                                        type: 'icon',\n                                        class: 'material-icons',\n                                        content: 'exit_to_app'\n                                    }\"\n                                ></app-icon>\n                            </li>\n                        </a>\n                    </ng-template>\n                </ng-container>\n            </ul>\n        </div>\n        <div class=\"footer\" *ngIf=\"copyright\" i18n=\"Copyright\">\n            Copyright &copy; {{ year }} {{ copyright }}\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, Input, ContentChildren, Output, EventEmitter } from '@angular/core';\nimport { ApplicationIcon } from '../../utilities/settings.interfaces';\nimport { BaseDirective } from '../../base.directive';\n\nexport interface PopoutAction extends ApplicationIcon {\n    /** ID of the action */\n    id: string;\n}\n\n@Component({\n    selector: 'a-popout-menu',\n    templateUrl: './popout-menu.component.html',\n    styleUrls: ['./popout-menu.component.scss']\n})\nexport class PopoutMenuComponent extends BaseDirective {\n    /** List of available actions */\n    @Input() public actions: PopoutAction[] = [];\n    /** Emitter for user actions */\n    @Output() public action = new EventEmitter<string>();\n    /** Whether actions should show */\n    public show: boolean;\n\n    public close() {\n        this.timeout('close', () => {\n            this.show = false;\n        });\n    }\n}\n","<button\n    mat-icon-button\n    [class.small]=\"true\"\n    name=\"action\"\n    *ngFor=\"let item of actions; let i = index\"\n    [style.top]=\"show ? (-110 * i - 60) + '%' : ''\"\n    (tapped)=\"action.emit(item.id); show = false\"\n>\n    <app-icon [icon]=\"item\"></app-icon>\n</button>\n<button mat-icon-button name=\"menu\" [class.show]=\"show\" (tapped)=\"show = !show\" (window:click)=\"show ? close() : ''\">\n    <app-icon [icon]=\"{ class: 'material-icons', content: show ? 'add' : 'more_vert' }\"></app-icon>\n</button>\n","import { Component, OnInit, Input, EventEmitter, Output, ViewChild, ElementRef, SimpleChanges, OnChanges } from '@angular/core';\nimport { BaseDirective } from '../../base.directive';\n\n@Component({\n    selector: 'a-searchbar',\n    templateUrl: './searchbar.component.html',\n    styleUrls: ['./searchbar.component.scss']\n})\nexport class SearchbarComponent extends BaseDirective implements OnChanges {\n    /** Current contents of the searchbar input */\n    @Input('value') public value: string;\n    /** Current contents of the searchbar input */\n    @Input() public placeholder: string;\n    /** Whether external changes are being processed */\n    @Input() public loading: boolean;\n    /** Whether external changes are being processed */\n    @Input() public autofocus: boolean;\n    /** Emitter for changes to the searchbar value */\n    @Output() public valueChange = new EventEmitter<string>();\n    /** Input field reference */\n    @ViewChild('input', { static: true }) private input_field: ElementRef<HTMLInputElement>;\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.autofocus && this.autofocus) {\n            this.focusField()\n        }\n    }\n\n    public focusField() {\n        /* istanbul ignore else */\n        if (this.input_field && this.input_field.nativeElement) {\n            this.input_field.nativeElement.focus();\n        }\n    }\n}\n","<div class=\"searchbar\" tabindex=\"0\" (focus)=\"focusField()\" (click)=\"focusField()\">\n    <div class=\"prefix\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'search' }\"></app-icon>\n    </div>\n    <div class=\"input\">\n        <input #input\n            type=\"text\"\n            [(ngModel)]=\"value\"\n            (ngModelChange)=\"valueChange.emit($event)\"\n            [placeholder]=\"placeholder || 'Search...'\"\n            i18n-placeholder\n        />\n    </div>\n    <div class=\"suffix\" *ngIf=\"loading\">\n        <mat-spinner diameter=\"32\"></mat-spinner>\n    </div>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from '../../base.directive';\nimport { ApplicationIcon } from '../../utilities/settings.interfaces';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n    selector: 'a-topbar-header',\n    templateUrl: './topbar-header.component.html',\n    styleUrls: ['./topbar-header.component.scss']\n})\nexport class TopbarHeaderComponent extends BaseDirective implements OnInit {\n    /** Logo of the application organisation */\n    public logo: ApplicationIcon;\n    /** Whether to show menu */\n    @Input() public menu: boolean;\n    /** Name of the page being rendered */\n    @Input() public page: string;\n    /** Emiiter for changes to menu state */\n    @Output() public menuChange = new EventEmitter<boolean>();\n    /** Whether to reverse the side of the menu icon */\n    public reverse: boolean;\n    /** Current page title */\n    public title: string;\n\n    constructor(private _service: ApplicationService, private _dialog: MatDialog) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.logo = this._service.setting('app.logo_light') || { type: 'icon' };\n            this.reverse = this._service.setting('app.general.menu.position') === 'left';\n            this.title = this._service.get('title');\n            this.subscription('title', () =>\n                this._service.listen('title', value => (this.title = value))\n            );\n        });\n    }\n\n    /** Set menu state to `true` */\n    public showMenu() {\n        this.menu = true;\n        this.menuChange.emit(this.menu);\n    }\n\n    public closeModals() {\n        this._dialog.closeAll();\n    }\n}\n","<div [class]=\"'topbar-header ' + page + (reverse ? ' reverse' : '')\">\n    <div class=\"block home\">\n        <a [routerLink]=\"['/home']\" (click)=\"closeModals()\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'home' }\"></app-icon>\n        </a>\n    </div>\n    <div class=\"block icon\">\n        <div class=\"text\">Converge |</div>\n        <div class=\"logo\" *ngIf=\"logo\">\n            <i *ngIf=\"logo.type === 'icon'\" [class]=\"logo.class\">{{ logo.content }}</i>\n            <img *ngIf=\"logo.type === 'img'\" [src]=\"logo.src | safe: 'resource'\" />\n        </div>\n    </div>\n    <div class=\"block title\">\n        <div class=\"title\">Converge | {{ title }}</div>\n    </div>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { User } from 'src/app/services/data/users/user.class';\n\n@Component({\n    selector: 'a-user-avatar',\n    templateUrl: './user-avatar.component.html',\n    styleUrls: ['./user-avatar.component.scss']\n})\nexport class UserAvatarComponent {\n    /** User to display avatar for */\n    @Input() public user: User;\n\n    public get initials(): string {\n        if (!this.user) {\n            return 'NA';\n        }\n        const parts = this.user.name.split(' ');\n        return parts.length > 1\n            ? `${parts[0][0]}${parts[parts.length - 1][0]}`\n            : this.user.name.slice(0, 2);\n    }\n}\n","<div class=\"user-avatar\" *ngIf=\"user\" [attr.user-id]=\"user.id\">\n    <div class=\"initials\" *ngIf=\"!user.image; else image_state\">{{ initials }}</div>\n</div>\n<ng-template #image_state>\n    <img [src]=\"user.image | safe: 'resource'\" />\n</ng-template>\n","import { trigger, transition, style, animate, state } from '@angular/animations';\n\nexport const ANIMATION_SHOW_ENTER_LEAVE = trigger('show', [\n    transition(':enter', [\n        style({ opacity: 0, height: 0 }),\n        animate(300, style({ opacity: 1, height: '*' }))\n    ]),\n    transition(':leave', [\n        style({ opacity: 1, height: '*' }),\n        animate(300, style({ opacity: 0, height: 0 }))\n    ])\n]);\n\nexport const ANIMATION_SHOW_CONTRACT_EXPAND = trigger('show', [\n    state('show', style({ opacity: 1, height: '*' })),\n    state('hide', style({ opacity: 0, height: 0 })),\n    transition('show <=> hide', animate('200ms ease-in'))\n]);\n","import { MockHttpRequestHandler } from '@placeos/ts-client';\n\nimport { generateMockBooking } from 'src/app/services/data/bookings/booking.utilities';\nimport { randomInt, unique } from '../../utilities/general.utilities';\nimport { MOCK_SPACES } from './spaces.mock';\nimport { MOCK_USERS } from './users.mock';\nimport { API } from './common.mock';\n\nimport * as dayjs from 'dayjs';\n\nwindow.control = window.control || {};\nwindow.control.systems = window.control.systems || {};\nwindow.control.handlers = window.control.handlers || [];\n\nexport const MOCK_BOOKINGS = Array(200)\n    .fill(0)\n    .map((i) => {\n        const rooms = unique(\n            Array(randomInt(4))\n                .fill(0)\n                .map((i) => MOCK_SPACES[Math.floor(Math.random() * MOCK_SPACES.length)]),\n            'id'\n        );\n        // Set the organiser with the generated user list\n        const organiser =\n            randomInt(9999) % 10 === 0\n                ? MOCK_USERS[MOCK_USERS.length - 1]\n                : MOCK_USERS[randomInt(MOCK_USERS.length)];\n        // Set the attendees with the generated user list\n        const attendees = unique(\n            Array(randomInt(20))\n                .fill(0)\n                .map((i) => MOCK_USERS[randomInt(MOCK_USERS.length)]),\n            'email'\n        );\n        return generateMockBooking({\n            organiser,\n            attendees,\n            room_ids: rooms.map((i) => i.email),\n        });\n    });\n\nMOCK_SPACES.forEach(\n    (i) => (i.bookings = MOCK_BOOKINGS.filter((j) => j.room_ids.indexOf(i.email) >= 0))\n);\n\n// Handler for bookings index\nwindow.control.handlers.push({\n    path: `${API}/bookings`,\n    metadata: MOCK_BOOKINGS,\n    method: 'GET',\n    callback: (event) => {\n        const user = MOCK_USERS[MOCK_USERS.length - 1];\n        console.log('User:', user.email);\n        let data = !event.query_params.email\n            ? MOCK_BOOKINGS.filter(\n                  (i) =>\n                      i.organiser.email === user.email ||\n                      i.organiser === user.email ||\n                      i.attendees.reduce((a, v) => a || v.email === user.email, false)\n              )\n            : MOCK_BOOKINGS.filter(\n                  (i) =>\n                      i.organiser.email === event.query_params.email ||\n                      (i.organiser as any) === event.query_params.email ||\n                      i.attendees.reduce((a, v) => a || v.email === event.query_params.email, false)\n              );\n        console.log('Data:', data);\n        // Filter bookings between a given period\n        // if (event.query_params.from) {\n        //     const start = dayjs(+event.query_params.from * 1000);\n        //     const end = event.query_params.to\n        //         ? dayjs(+event.query_params.to * 1000).endOf('m')\n        //         : start.endOf('d');\n        //     data = data.filter((i: any) => {\n        //         const bkn_start = dayjs(i.start_epoch * 1000 || i.start * 1000)\n        //             .startOf('m')\n        //             .second(1);\n        //         const bkn_end = dayjs(i.end_epoch * 1000 || i.end * 1000);\n        //         return (\n        //             (bkn_start.isAfter(start, 's') && bkn_start.isBefore(end, 'm')) ||\n        //             (bkn_end.isAfter(start, 'm') && bkn_end.isBefore(end, 's'))\n        //         );\n        //     });\n        // }\n        return data;\n    },\n} as MockHttpRequestHandler);\n\n// Handler for bookings show\nwindow.control.handlers.push({\n    path: `${API}/bookings/:id`,\n    metadata: MOCK_BOOKINGS,\n    method: 'GET',\n    callback: (event) => {\n        if (event.route_params.id) {\n            const booking = MOCK_BOOKINGS.find(\n                (i) => i.id === event.route_params.id || i.icaluid === event.route_params.id\n            );\n            if (booking) {\n                return booking;\n            } else {\n                throw { status: 404, message: 'Booking not found.' };\n            }\n        } else {\n            throw { status: 400, message: 'Invalid booking ID' };\n        }\n    },\n} as MockHttpRequestHandler);\n\n// Handler for new bookings\nwindow.control.handlers.push({\n    path: `${API}/bookings`,\n    metadata: MOCK_BOOKINGS,\n    method: 'POST',\n    callback: (event) => {\n        if (event.body) {\n            event.body.id = `bkn-${randomInt(9_999_999)}`;\n            event.body.icaluid = `ical-${event.body.id}`;\n            event.body.approval_status = {};\n            for (let i = 0; i < event.body.room_ids.length; i++) {\n                event.body.approval_status[event.body.room_ids[i]] = event.body.auto_approve[i]\n                    ? 'approved'\n                    : 'tentative';\n            }\n            MOCK_BOOKINGS.push(event.body);\n            MOCK_SPACES.forEach(\n                (space) =>\n                    (space.bookings = MOCK_BOOKINGS.filter(\n                        (booking) => booking.room_ids.indexOf(space.email) >= 0\n                    ))\n            );\n            return event.body;\n        } else {\n            throw { status: 500, message: 'Invalid booking data' };\n        }\n    },\n} as MockHttpRequestHandler);\n\n// Handler for updating existing bookings\nwindow.control.handlers.push({\n    path: `${API}/bookings/:id`,\n    metadata: MOCK_BOOKINGS,\n    method: 'PUT',\n    callback: (event) => {\n        if (event.route_params.id) {\n            const index = MOCK_BOOKINGS.findIndex(\n                (i) => i.id === event.route_params.id || i.icaluid === event.route_params.id\n            );\n            if (index >= 0) {\n                event.body.approval_status = {};\n                for (let i = 0; i < event.body.room_ids.length; i++) {\n                    event.body.approval_status[event.body.room_ids[i]] = event.body.auto_approve[i]\n                        ? 'approved'\n                        : 'tentative';\n                }\n                MOCK_BOOKINGS[index] = event.body;\n                MOCK_SPACES.forEach(\n                    (i) =>\n                        (i.bookings = MOCK_BOOKINGS.filter((j) => j.room_ids.indexOf(i.email) >= 0))\n                );\n                return event.body;\n            } else {\n                throw { status: 404, message: 'Booking not found' };\n            }\n        } else throw { status: 500, message: 'Invalid booking ID' };\n    },\n} as MockHttpRequestHandler);\n\n// Handler for deleting exisiting bookings\nwindow.control.handlers.push({\n    path: `${API}/bookings/:id`,\n    metadata: MOCK_BOOKINGS,\n    method: 'DELETE',\n    callback: (event) => {\n        if (event.route_params.id) {\n            const index = MOCK_BOOKINGS.findIndex(\n                (i) => i.id === event.route_params.id || i.icaluid === event.route_params.id\n            );\n            if (index >= 0) {\n                MOCK_BOOKINGS.splice(index, 1);\n                MOCK_SPACES.forEach(\n                    (i) =>\n                        (i.bookings = MOCK_BOOKINGS.filter((j) => j.room_ids.indexOf(i.email) >= 0))\n                );\n            } else {\n                throw { status: 404, message: 'Booking not found' };\n            }\n        } else throw { status: 500, message: 'Invalid booking ID' };\n    },\n} as MockHttpRequestHandler);\n","import { MockHttpRequestHandler } from '@placeos/ts-client';\n\nimport { MOCK_ORG } from './organisation.mock';\nimport { DOMAIN } from './common.mock';\n\nwindow.control = window.control || {};\nwindow.control.systems = window.control.systems || {};\nwindow.control.handlers = window.control.handlers || [];\n\nexport const MOCK_BUILDINGS = [\n    {\n        id: 'zone_bld-01',\n        zone_id: 'zone_bld-01',\n        name: 'Sydney',\n        settings: {\n            discovery_info: {\n                timezone: 'Australia/Sydney',\n                neighbourhoods: {\n                    'zone_lvl-01': {\n                        'Test Searchable': 'Device_Bench',\n                    },\n                },\n                required: {\n                    expected_attendees: true\n                },\n                visitor_space: `sydney-01.02@${DOMAIN}`,\n                booking_rules: {\n                    'zone_lvl-33': [\n                        {\n                            conditions: {\n                                is_before: '60 days',\n                                max_length: '1 week',\n                            },\n                            rules: {\n                                auto_approve: false,\n                            },\n                        },\n                    ],\n                    'zone_lvl-35': [\n                        {\n                            conditions: {},\n                            rules: {\n                                auto_approve: false,\n                            },\n                        },\n                    ],\n                    'zone_lvl-36': [\n                        {\n                            conditions: {},\n                            rules: {\n                                auto_approve: true,\n                            },\n                        },\n                    ],\n                },\n                levels: [\n                    {\n                        level_id: 'zone_lvl-33',\n                        level_name: 'Level 33',\n                        number: 1,\n                        map_url: 'assets/maps/sydney/level_33.svg',\n                        floor_type: 'staff',\n                    },\n                    {\n                        level_id: 'zone_lvl-35',\n                        level_name: 'Level 35',\n                        number: 2,\n                        map_url: 'assets/maps/sydney/level_35.svg',\n                        floor_type: 'client',\n                    },\n                    {\n                        level_id: 'zone_lvl-36',\n                        level_name: 'Level 36',\n                        number: 2,\n                        map_url: 'assets/maps/sydney/level_36.svg',\n                        floor_type: 'client',\n                    },\n                ],\n            },\n        },\n    },\n    {\n        id: 'zone_bld-02',\n        zone_id: 'zone_bld-02',\n        name: 'London Post',\n        settings: {\n            discovery_info: {\n                timezone: 'Europe/London',\n                visitor_space: `london-01.02@${DOMAIN}`,\n                required: {\n                    equipment_code: true,\n                    expected_attendees: true\n                },\n                levels: [\n                    {\n                        level_id: 'zone_lvl-06',\n                        level_name: 'Level 6',\n                        number: 1,\n                        map_url: 'assets/maps/london/level_06.svg',\n                        floor_type: 'staff',\n                    },\n                    {\n                        level_id: 'zone_lvl-07',\n                        level_name: 'Level 7',\n                        number: 1,\n                        map_url: 'assets/maps/london/level_07.svg',\n                        floor_type: 'staff',\n                    },\n                    {\n                        level_id: 'zone_lvl-8',\n                        level_name: 'Level 8',\n                        number: 1,\n                        map_url: 'assets/maps/london/level_08.svg',\n                        floor_type: 'staff',\n                    },\n                    {\n                        level_id: 'zone_lvl-09',\n                        level_name: 'Level 9',\n                        number: 1,\n                        map_url: 'assets/maps/london/level_09.svg',\n                        floor_type: 'staff',\n                    },\n                    {\n                        level_id: 'zone_lvl-10',\n                        level_name: 'Level 10',\n                        number: 1,\n                        map_url: 'assets/maps/london/level_10.svg',\n                        floor_type: 'staff',\n                    },\n                    {\n                        level_id: 'zone_lvl-11',\n                        level_name: 'Level 11',\n                        number: 11,\n                        map_url: 'assets/maps/london/level_11.svg',\n                        floor_type: 'client',\n                    },\n                ],\n            },\n        },\n    },\n];\n\nMOCK_BUILDINGS.push({ ...MOCK_BUILDINGS[0], name: 'London' });\n\nMOCK_ORG[0].discovery_info.buildings = MOCK_BUILDINGS;\n\nsetTimeout(() => {\n    window.control.handlers.push({\n        path: '/api/engine/v2/zones',\n        metadata: MOCK_BUILDINGS,\n        callback: (event) => {\n            if (event.query_params.tags === 'building') {\n                return { total: MOCK_BUILDINGS.length, results: MOCK_BUILDINGS };\n            } else if (event.query_params.tags === 'org') {\n                return { total: MOCK_ORG.length, results: MOCK_ORG };\n            } else if (event.query_params.tags === 'level') {\n                return { total: 0, results: [] };\n            }\n        },\n    } as MockHttpRequestHandler);\n});\n","import { MockHttpRequestHandler } from '@placeos/ts-client';\nimport { API } from './common.mock';\nimport { MOCK_SPACES } from './spaces.mock';\n\nconst MOCK_MENU = {\n    'zone_bld-01': [\n        {\n            id: 'snacks',\n            name: 'Snacks',\n            items: [\n                { id: 'pretzels', name: 'Pretzels', price: 200 },\n                { id: 'cashews', name: 'Cashew', price: 400 },\n                { id: 'almonds', name: 'Almonds', price: 200 },\n                {\n                    id: 'chips',\n                    name: 'Chips',\n                    description: 'Pick 1',\n                    must_select: 1,\n                    package: true,\n                    price: 1000,\n                    items: [\n                        { id: 'cheezels', name: 'Cheezels' },\n                        { id: 'smiths_orginal', name: 'Smiths Orginal' },\n                        { id: 'smiths_chicken', name: 'Smiths Chicken' },\n                        { id: 'layz_orginal', name: 'Layz Orginal' },\n                    ],\n                },\n            ],\n        },\n        {\n            id: 'refresh',\n            name: 'Refreshments',\n            items: [\n                {\n                    id: 'drinks',\n                    name: 'Drink Package',\n                    description: 'Pick 3 types of drinks',\n                    must_select: 3,\n                    package: true,\n                    price: 1000,\n                    items: [\n                        { id: 'pepsi', name: 'Pepsi' },\n                        { id: 'solo', name: 'Solo' },\n                        { id: 'fanta', name: 'Fanta' },\n                        { id: 'coke_zero', name: 'Coke Zero' },\n                    ],\n                },\n                { id: 'pepsi', name: 'Pepsi', price: 80 },\n                { id: 'solo', name: 'Solo', price: 80 },\n                { id: 'fanta', name: 'Fanta', price: 80 },\n                { id: 'coke_zero', name: 'Coke Zero', price: 80 },\n            ],\n        },\n    ],\n    'zone_bld-02': [\n        {\n            id: 'snacks',\n            name: 'Snacks',\n            items: [\n                { id: 'pretzels', name: 'Pretzels', price: 200 },\n                { id: 'cashews', name: 'Cashew', price: 400 },\n                { id: 'almonds', name: 'Almonds', price: 200 },\n                {\n                    id: 'chips',\n                    name: 'Chips',\n                    description: 'Pick 1',\n                    must_select: 1,\n                    package: true,\n                    price: 1000,\n                    items: [\n                        { id: 'cheezels', name: 'Cheezels' },\n                        { id: 'smiths_orginal', name: 'Smiths Orginal' },\n                        { id: 'smiths_chicken', name: 'Smiths Chicken' },\n                        { id: 'layz_orginal', name: 'Layz Orginal' },\n                    ],\n                },\n            ],\n        },\n        {\n            id: 'refresh',\n            name: 'Refreshments',\n            items: [\n                { id: 'pepsi', name: 'Pepsi', price: 80 },\n                { id: 'solo', name: 'Solo', price: 80 },\n                { id: 'fanta', name: 'Fanta', price: 80 },\n                { id: 'coke_zero', name: 'Coke Zero', price: 80 },\n                {\n                    id: 'drinks',\n                    name: 'Drink Package',\n                    description: 'Pick 3 types of drinks',\n                    must_select: 3,\n                    package: true,\n                    price: 1000,\n                    items: [\n                        { id: 'pepsi', name: 'Pepsi' },\n                        { id: 'solo', name: 'Solo' },\n                        { id: 'fanta', name: 'Fanta' },\n                        { id: 'coke_zero', name: 'Coke Zero' },\n                    ],\n                },\n            ],\n        },\n        {\n            id: 'dinner',\n            name: 'Dinner',\n            items: [\n                {\n                    id: 'Schnitzel',\n                    name: 'Chicken Schnitzel',\n                    description: 'With a side of chips or salad',\n                    price: 1200,\n                    must_select: 1,\n                    items: [\n                        { item: 'chips', name: 'Chips' },\n                        { item: 'salad', name: 'Salad' },\n                    ],\n                },\n            ],\n        },\n    ],\n};\n\n// Handler for bookings show\nwindow.control.handlers.push({\n    path: `${API}/menu`,\n    metadata: [],\n    method: 'GET',\n    callback: (event) => {\n        if (event.query_params.room_id) {\n            const space = MOCK_SPACES.find(space => space.id == event.query_params.room_id);\n            if (space) {\n                const menu_zone = Object.keys(MOCK_MENU).find(key => space.zones.includes(key));\n                if (menu_zone) {\n                    return MOCK_MENU[menu_zone];\n                }\n            }\n        }\n        throw { status: 400, message: 'Invalid room ID' };\n    },\n} as MockHttpRequestHandler);\n","\n/** Domain of the organisation */\nexport const DOMAIN = 'acaprojects.com';\n/** Endpoint where the staff API is located */\nexport const API = '/api/staff';\n","import { MockHttpRequestHandler } from '@placeos/ts-client';\n\nimport { MOCK_USERS } from \"./users.mock\";\nimport { MOCK_SPACES } from './spaces.mock';\nimport { MOCK_BUILDINGS } from './buildings.mock';\nimport { randomInt } from '../../utilities/general.utilities';\nimport { generateMockLocation } from 'src/app/services/data/location/location.utilities';\n\nexport const MOCK_LOCATIONS: any[] = [];\n\nconst spaces = MOCK_SPACES.map(space => space.map_id);\nconst levels = MOCK_BUILDINGS.reduce((lvls, bld) => {\n    bld.settings.discovery_info.levels.forEach(lvl => lvls.push(lvl.level_id));\n    return lvls;\n}, []);\n\nfor (const user of MOCK_USERS) {\n    if (user.location || randomInt(99999) % 2 === 0) {\n        user.location = generateMockLocation(null, spaces, levels);\n        MOCK_LOCATIONS.push(user.location);\n    }\n}\n\nsetTimeout(() => {\n    window.control.handlers.push({\n        path: '/api/staff/people/:email',\n        metadata: MOCK_LOCATIONS,\n        callback: (event) => {\n            if (event.route_params.email) {\n                const user = MOCK_USERS.find(user => user.email === event.route_params.email || user.id === event.route_params.email);\n                if (user) {\n                    return user.location;\n                }\n            }\n            throw { status: 404, message: `Unable to locate user with email ${event.route_params.email}` };\n        }\n    } as MockHttpRequestHandler);\n});\n\n\n","export const MOCK_ORG = [\n    {\n        send_acceptance: true,\n        discovery_info: {\n            buildings: []\n        }\n    }\n];\n","import { generateMockSpace } from 'src/app/services/data/spaces/space.utilities';\nimport { API } from './common.mock';\nimport { MockHttpRequestHandler } from '@placeos/ts-client';\n\nimport * as dayjs from 'dayjs';\n\nwindow.control = window.control || {};\nwindow.control.systems = window.control.systems || {};\nwindow.control.handlers = window.control.handlers || [];\n\nexport const MOCK_SPACES = [\n    { id: '35.06', name: 'SYD-35-Durack-internal-05-DV', zones: ['zone_bld-01', 'zone_lvl-35'], bookable: true },\n    { id: '36.08', name: 'SYD-36-Trickett-internal-05-DV', zones: ['zone_bld-01', 'zone_lvl-36'], bookable: true },\n    { id: '33.02', name: 'SYD-33West-Wedding Cake-10V', zones: ['zone_bld-01', 'zone_lvl-33'], bookable: false },\n    { id: '33.03', name: 'SYD-33West-Pinchgut-05DV', zones: ['zone_bld-01', 'zone_lvl-33'], bookable: true },\n    { id: '10.02', name: 'LON-10-10_02_Village_green', zones: ['zone_bld-01', 'zone_lvl-10'] },\n    { id: '10.47', name: 'LON-10-EC10_10_47_Gallery', zones: ['zone_bld-01', 'zone_lvl-10'] },\n    { id: '11.07', name: 'LON-11-EC11_11_07_Client', zones: ['zone_bld-01', 'zone_lvl-11'] },\n    { id: '11.10', name: 'LON-11-EC11_11_10_Client', zones: ['zone_bld-01', 'zone_lvl-11'] }\n].map((space_data: any) => {\n    const space = generateMockSpace({\n        ...space_data,\n        map_id: `${space_data.id}`,\n        id: `sys_rm-${space_data.id}`,\n        name: `${space_data.name}`\n    });\n    window.control.systems[space.id] = {\n        Bookings: [\n            {\n                today: space.bookings\n            }\n        ]\n    };\n    return space;\n});\n\n// Add handler for users index\nwindow.control.handlers.push({\n    path: `${API}/rooms`,\n    metadata: MOCK_SPACES,\n    callback: event => {\n        let results = MOCK_SPACES;\n        if (event.query_params.q) {\n            const query = event.query_params.q.toLowerCase();\n            results = results.filter(\n                i =>\n                    (i.id || '').toLowerCase().indexOf(query) >= 0 ||\n                    (i.name || '').toLowerCase().indexOf(query) >= 0 ||\n                    (i.email || '').toLowerCase().indexOf(query) >= 0\n            );\n        }\n        // Remove rooms without given zones from results\n        if (event.query_params.zone_ids) {\n            const zone_ids = event.query_params.zone_ids.split(',');\n            results = results.filter(i => {\n                let count = 0;\n                for (const zone of zone_ids) {\n                    if (i.zones.indexOf(zone) >= 0) {\n                        count++;\n                    }\n                }\n                return count >= zone_ids.length;\n            });\n        }\n        // Remove rooms without given ids from results\n        if (event.query_params.room_ids) {\n            const room_ids = event.query_params.room_ids.split(',');\n            results = results.filter(i => room_ids.indexOf(i.id) >= 0);\n        }\n        // Update availability status of each room results\n        if (event.query_params.available_from) {\n            const from = dayjs(+event.query_params.available_from * 1000);\n            const to = dayjs(+event.query_params.available_to * 1000);\n            results.forEach(space => {\n                for (const booking of space.bookings) {\n                    const start = dayjs(booking.start_epoch * 1000);\n                    const end = dayjs(booking.end_epoch * 1000);\n                    if (\n                        (from.isAfter(start, 'm') && from.isBefore(end, 'm')) ||\n                        (to.isAfter(start, 'm') && to.isBefore(end, 'm')) ||\n                        (start.isAfter(from, 'm') && start.isBefore(to, 'm'))\n                    ) {\n                        space.settings = { available: false };\n                    } else {\n                        space.settings = { available: true };\n                    }\n                }\n            });\n        }\n        return results;\n    }\n} as MockHttpRequestHandler);\n","\nimport { MockHttpRequestHandler } from '@placeos/ts-client';\n\nimport { generateMockUser } from 'src/app/services/data/users/user.utilities';\nimport { API } from './common.mock';\n\nwindow.control = window.control || {};\nwindow.control.systems = window.control.systems || {};\nwindow.control.handlers = window.control.handlers || [];\n\nexport const MOCK_USERS = Array(Math.floor(Math.random() * 300 + 100)).fill(0)\n    .map(i => generateMockUser());\nexport const MOCK_CONTACTS = Array(Math.floor(Math.random() * 300 + 100)).fill(0)\n    .map(i => generateMockUser({ external: true }));\n\nexport const PREDEFINED_USERS = [\n    'Jonathan McFarlane',\n    'Stephen Von Takach',\n    'Alex Sorafumo',\n    'Candy Russo',\n    'Cristina Boston',\n    'Eugene Murphy',\n    'Ben Hoad',\n    'Kim Burgess',\n    'Desk Test',\n    'Space Test',\n    'Wireless Test',\n    'Zo-Kalar'\n];\n\n// Add predefined user to user list\nfor (const user of PREDEFINED_USERS) {\n    const id = user.split(' ').join('.').toLowerCase();\n    const new_user = generateMockUser({ id, name: user });\n    new_user.location = true;\n    MOCK_USERS.push(new_user);\n}\n\n// Add handler for users index\nwindow.control.handlers.push({\n    path: `${API}/users`,\n    metadata: MOCK_USERS,\n    callback: (event) => {\n        if (event.query_params.q) {\n            const query = event.query_params.q.toLowerCase();\n            return MOCK_USERS.filter(i =>\n                (i.id || '').toLowerCase().indexOf(query) >= 0 ||\n                (i.name || '').toLowerCase().indexOf(query) >= 0 ||\n                (i.email || '').toLowerCase().indexOf(query) >= 0\n            );\n        }\n        return MOCK_USERS;\n    }\n} as MockHttpRequestHandler);\n\n// Add handler for users show\nwindow.control.handlers.push({\n    path: `${API}/users/:id`,\n    metadata: MOCK_USERS,\n    callback: (event) => {\n        const user = MOCK_USERS.find(i => i.id === event.route_params.id || i.name === event.route_params.id || i.email === event.route_params.id);\n        if (user) {\n            return user;\n        } else if (event.route_params.id === 'current') {\n            return MOCK_USERS[MOCK_USERS.length - 1];\n        }\n        throw { status: 404, message: 'User not found' };\n    }\n} as MockHttpRequestHandler);\n\n// Add handler for contacts index\nwindow.control.handlers.push({\n    path: `${API}/contacts`,\n    metadata: MOCK_CONTACTS,\n    callback: (event) => {\n        if (event.query_params.q) {\n            const query = event.query_params.q.toLowerCase();\n            return MOCK_CONTACTS.filter(i =>\n                (i.id || '').toLowerCase().indexOf(query) >= 0 ||\n                (i.name || '').toLowerCase().indexOf(query) >= 0 ||\n                (i.email || '').toLowerCase().indexOf(query) >= 0\n            );\n        }\n        return MOCK_USERS;\n    }\n} as MockHttpRequestHandler);\n\n// Add handler for contacts show\nwindow.control.handlers.push({\n    path: `${API}/contacts/:id`,\n    metadata: MOCK_USERS,\n    callback: (event) => {\n        const user = MOCK_USERS.find(i => i.id === event.route_params.id || i.name === event.route_params.id);\n        if (user) {\n            return user;\n        }\n        throw { status: 404, message: 'User not found' };\n    }\n} as MockHttpRequestHandler);\n\n\n","\nimport { createSystem } from './systems.mock';\n\nimport './api/organisation.mock';\nimport './api/buildings.mock';\nimport './api/users.mock';\nimport './api/spaces.mock';\nimport './api/bookings.mock';\nimport './api/locations.mock';\nimport './api/catering-menu.mock';\n\nimport * as faker from 'faker';\n\nfaker.seed(2560);\n\nwindow.control = window.control || {};\nwindow.control.systems = {\n    ...window.control.systems,\n    ['sys-B0']: createSystem('sys-B0')\n} || {};\nwindow.control.handlers = window.control.handlers || [];\n","\n\nimport { generateMockSpace } from \"../../services/data/spaces/space.utilities\";\nimport { setMockBookingStartDatetime } from \"../../services/data/bookings/booking.utilities\";\n\nimport * as dayjs from 'dayjs';\n\nexport interface IBookingPanelBindings {\n    /** Whether user input is enabled */\n    touch_enabled: boolean;\n    /** Number of seconds before a meeting can be started, being truthy enables start/stop and auto-cancellations */\n    timeout?: number;\n    /** Number of seconds after the start of a meeting when it is auto-cancelled, overrides `timeout` value */\n    cancel_timeout?: number;\n    /** Whether to display hearing assistance UI elements */\n    has_accessability?: boolean;\n    /** URL to embed into the control modal when opened */\n    control_url?: string;\n    /** Whether to display catering UI elements */\n    has_catering?: boolean;\n    /** Whether to hide booking details(title and host) */\n    hide_details?: boolean;\n    /** Whether to hide the title of the displayed bookings */\n    hide_title?: boolean;\n    /** Whether to hide user(host) details */\n    hide_user?: boolean;\n    /** Whether to hide timeline availability */\n    hide_availability?: boolean;\n    /** Whether to disable booking from the UI */\n    booking_disabled?: boolean;\n    /** Whether booking future meetings are allowed */\n    no_timeline_bookings?: boolean;\n    /** Time before the booking end with which the current booking is endable in ms from UTC epoch */\n    is_endable?: number;\n    /** Whether to automatically ask user starting the current meeting */\n    ask_start?: boolean;\n    /** Whether to automatically ask user about ending the active meeting */\n    ask_end?: boolean;\n    /** Default meeting title if the displayed meeting doesn't have one */\n    default_title?: string;\n    /** Hide all meeting related details */\n    hide_all?: boolean;\n    /** Title of the active space */\n    title?: string;\n    /** Description of the active space */\n    description?: string;\n    /** URL of an icon image to display on the UI */\n    icon?: string;\n    /** Whether the space status is displayed on the right */\n    flip_status?: boolean;\n    /** Whether bookings can be automatically cancelled once they expire */\n    can_cancel?: boolean;\n    /** Minimum bookable duration in minutes */\n    min_duration?: number;\n    /** Maximum bookable duration in minutes */\n    max_duration?: number;\n    /** Start time of the business day with format `HH:mm` */\n    business_start?: string;\n    /** End time of the business day with format `HH:mm` */\n    business_end?: string;\n\n}\n\nconst LETTERS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('');\nconst NUMBERS = '0123456789'.split('');\n\nlet index = 0;\n\nconst SPACE_LIST: any[] = [];\n\nconst IMAGES: string[] = ['large_down', 'large_up', 'small_down', 'small_up'];\n\n/**\n * Create mock engine booking module with appropriate bookings and space data\n */\nexport function createSystem(id?: string) {\n    id = id || `sys-${LETTERS[Math.floor(index / NUMBERS.length)]}${NUMBERS[(index++) % NUMBERS.length]}`;\n    setMockBookingStartDatetime(dayjs().minute(-50).valueOf());\n    const space = generateMockSpace({ id });\n    SPACE_LIST.push(space);\n\n    const booking_bindings: IBookingPanelBindings = {\n        touch_enabled: true,\n        timeout: 300,\n        cancel_timeout: 600,\n        has_catering: true,\n        control_url: 'https://aca.im/demo/aca/control/',\n        icon: `/assets/img/${IMAGES[Math.floor(Math.random() * IMAGES.length)]}.png`\n    };\n\n    const today = dayjs();\n    const desk_bindings = {\n        'zone_lvl-01:bookings': {\n            'SYD.1.09.E': {\n                [today.format('YYYY-MM-DD')]: {\n                    // 'first@acaprojects.com': {\n                    'zo-kalar@acaprojects.com': {\n                        start: today.subtract(1, 'h').unix(),\n                        end: today.add(1, 'h').unix(),\n                        checked_in: true\n                    }\n                },\n                [today.add(1, 'd').format('YYYY-MM-DD')]: {\n                    'second@acaprojects.com': {\n                        start: today.add(1, 'd').subtract(1, 'h').unix(),\n                        end: today.add(1, 'd').add(1, 'h').unix()\n                    }\n                }\n            },\n            'SYD.1.09.F': {},\n            'SYD.1.09.G': {}\n        },\n        'zone_lvl-02:bookings': {\n            'SYD.2.01.A': {\n                [today.format('YYYY-MM-DD')]: {\n                    'first@acaprojects.com': {\n                        start: today.subtract(1, 'h').unix(),\n                        end: today.add(1, 'h').unix(),\n                        checked_in: true\n                    }\n                },\n                [today.add(1, 'd').format('YYYY-MM-DD')]: {\n                    'second@acaprojects.com': {\n                        start: today.add(1, 'd').subtract(1, 'h').unix(),\n                        end: today.add(1, 'd').add(1, 'h').unix()\n                    }\n                }\n            },\n            'SYD.2.01.B': {},\n            'SYD.2.01.C': {}\n        }\n    };\n\n    const system = {\n        id, name: space.name,\n        Bookings: [],\n        DeskManagement: [{\n            'zone_lvl-01:desk_ids': ['SYD.1.09.E', 'SYD.1.09.F', 'SYD.1.09.G']\n        }],\n        DeskBookings: []\n    };\n    system.Bookings.push({\n        ...booking_bindings,\n        room_name: space.name,\n        today: space.bookings,\n        $start_meeting: (time: number) => {\n            system.Bookings[0].last_meeting_started = time;\n        },\n        $cancel_meeting: (time: number, reason: string) => {\n            const list = system.Bookings[0].today;\n            system.Bookings[0].today = list.filter(i => i.date !== time);\n        },\n        $waiter_call: () => {\n            console.log(`[MOCK][${id}] Waiter called...`);\n        }\n    });\n    system.DeskBookings.push({\n        ...desk_bindings,\n        $book: (email: string, desk: string, date: number) => {\n            console.log('[MOCK] Book called');\n        },\n        $check_in: (email: string, desk: string) => {\n            system.DeskBookings[0]['zone_lvl-01:bookings'][desk][dayjs().format('YYYY-MM-DD')][email].checked_in = true;\n        },\n        $check_out: (email: string, desk: string) => {\n            console.log(`[MOCK]Check out called`);\n        },\n    });\n    return system;\n}\n","\nimport { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { EditorModule } from '@tinymce/tinymce-angular';\nimport { ComposerModule } from '@placeos/composer';\n\nimport { ScrollingModule } from '@angular/cdk/scrolling';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatTabsModule } from '@angular/material/tabs';\n\nimport { APipesModule } from '@acaprojects/ngx-pipes';\nimport { AInteractiveMapModule } from '@acaprojects/ngx-interactive-map';\nimport { ACustomEventsModule } from '@acaprojects/ngx-custom-events';\nimport { ADatePickerModule } from '@acaprojects/ngx-date-picker';\n\nimport { BaseDirective } from './base.directive';\nimport { LoginComponent } from './components/login/login.component';\nimport { IconComponent } from './components/icon/icon.component';\nimport { TopbarHeaderComponent } from './components/topbar-header/topbar-header.component';\nimport { OverlayMenuComponent } from './components/overlay-menu/overlay-menu.component';\nimport { FooterMenuComponent } from './components/footer-menu/footer-menu.component';\nimport { SearchbarComponent } from './components/searchbar/searchbar.component';\nimport { UserAvatarComponent } from './components/user-avatar/user-avatar.component';\nimport { MapControlsComponent } from './components/map-controls/map-controls.component';\nimport { PopoutMenuComponent } from './components/popout-menu/popout-menu.component';\nimport { FeedbackComponent } from './components/feedback/feedback.component'\n\nimport { UserFormComponent } from './components/forms/user-form/user-form.component';\nimport { BookingFormComponent } from './components/forms/booking-form/booking-form.component';\n\nimport { UserSearchFieldComponent } from './components/custom-fields/user-search-field/user-search-field.component';\nimport { TimeFieldComponent } from './components/custom-fields/time-field/time-field.component';\nimport { DurationFieldComponent } from './components/custom-fields/duration-field/duration-field.component';\nimport { DateFieldComponent } from './components/custom-fields/date-field/date-field.component';\nimport { ActionFieldComponent } from './components/custom-fields/action-field/action-field.component';\nimport { UserListFieldComponent } from './components/custom-fields/user-list-field/user-list-field.component';\nimport { CounterComponent } from './components/custom-fields/counter/counter.component';\n\nconst COMPONENTS: Type<any>[] = [\n    BaseDirective,\n    LoginComponent,\n    IconComponent,\n    TopbarHeaderComponent,\n    OverlayMenuComponent,\n    FooterMenuComponent,\n    SearchbarComponent,\n    UserAvatarComponent,\n\n    UserFormComponent,\n    BookingFormComponent,\n\n    MapControlsComponent,\n    PopoutMenuComponent,\n    FeedbackComponent\n];\n\nconst ENTRY_COMPONENT: Type<any>[] = [\n    DateFieldComponent,\n    ActionFieldComponent,\n    TimeFieldComponent,\n    DurationFieldComponent,\n    UserSearchFieldComponent,\n    UserListFieldComponent,\n    CounterComponent,\n];\n\nconst MATERIAL_MODULES: any[] = [\n    MatButtonModule,\n    MatSnackBarModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatChipsModule,\n    MatRippleModule,\n    MatMenuModule,\n    MatCheckboxModule,\n    MatTooltipModule,\n    MatRadioModule,\n    MatTabsModule\n];\n\nconst CDK_MODULES: any[] = [\n    ScrollingModule\n];\n\n@NgModule({\n    declarations: [\n        ...COMPONENTS,\n        ...ENTRY_COMPONENT,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        APipesModule,\n        AInteractiveMapModule,\n        ADatePickerModule,\n        ACustomEventsModule,\n        RouterModule,\n        EditorModule,\n        ComposerModule,\n        ...MATERIAL_MODULES,\n        ...CDK_MODULES\n    ],\n    exports: [\n        APipesModule,\n        AInteractiveMapModule,\n        ACustomEventsModule,\n        ADatePickerModule,\n        ...COMPONENTS,\n        ...ENTRY_COMPONENT,\n        ...MATERIAL_MODULES,\n        ...CDK_MODULES\n    ]\n})\nexport class SharedContentModule {}\n","import { HashMap } from \"./types.utilities\";\n\n/**\n * Convert map into a query string\n * @param map Key value pairs to convert\n */\nexport function toQueryString(map: HashMap) {\n    let str = '';\n    if (map) {\n        for (const key in map) {\n            if (map.hasOwnProperty(key) && map[key] !== undefined && map[key] !== null) {\n                str += `${(str ? '&' : '')}${key}=${map[key]}`;\n            }\n        }\n    }\n    return str;\n}\n","\nimport { humaniseDuration } from './general.utilities';\n\nimport { User } from '../../services/data/users/user.class';\nimport { Space } from '../../services/data/spaces/space.class';\n\nimport * as dayjs from 'dayjs';\n\n// attendees: FormFormatters.attendees(user),\n// date: FormFormatters.date,\n// room: FormFormatters.space,\n// recurrence: FormFormatters.recurrence\n\n/**\n * Get function to create formatted string for a list of users with a host\n * @param host Host user\n */\nexport function formatAttendeesWithHost(host: User): (_: User[]) => string {\n    return (l) => formatAttendees(l, host);\n}\n\n/**\n * Create formatted string from a list of users\n * @param list List of users\n * @param host Owner of the list of users\n */\nexport function formatAttendees(list: User[], host?: User) {\n    let attendee_str: string = '';\n    if (list && list.length > 0) {\n        const users = [...list];\n        if (host) {\n            const result = users.find(a => a.email === host.email);\n            if (result) {\n                users.splice(users.indexOf(result), 1);\n            }\n        }\n        const length = users.length + (host ? 1 : 0);\n        attendee_str = `${length} Attendee${length === 1 ? '' : 's'}; ${host ? host.name : ''}`;\n        for (const item of users) {\n            if (attendee_str) {\n                attendee_str += ', ';\n            }\n            attendee_str += item.name;\n        }\n        attendee_str = attendee_str.replace('; ,', ';');\n    }\n    return attendee_str;\n}\n\n/**\n * Create date formatted string for given date\n * @param date Date to format\n */\nexport function formatDate(date: number) {\n    return dayjs(date).format('DD MMMM YYYY');\n}\n\n/**\n * Create time formatted string for given date\n * @param date Date to format\n */\nexport function formatTime(date: number) {\n    return dayjs(date).format('h:mm A');\n}\n\n/**\n * Create formatted string for a period of given duration\n * @param duration Period duration in minutes\n */\nexport function formatPeriodWithDuration(duration: number) {\n    return (t) => formatPeriod(t, duration);\n}\n\n/**\n * Create formatted string for a period of given duration\n * @param timestamp Start hours and minutes of the period in the format `HH:mm`\n * @param duration Period duration in minutes\n */\nexport function formatPeriod(timestamp: string, duration: number = 60) {\n    const parts = timestamp.split(':');\n    const date = dayjs().hour(+parts[0]).minute(+parts[1]);\n    return `${date.format('h:mm A')} - ${date.add(duration, 'm').format('h:mm A')} (${humaniseDuration(duration)})`;\n}\n\n/**\n * Create formatted human readable string for a given duration\n * @param duration Duration in minutes\n */\nexport function formatDuration(duration: number) {\n    return humaniseDuration(duration);\n}\n\n/** Human readable names of applicable recurrence periods */\nexport const RECURRENCE_PERIODS: string[] = ['None', 'Daily', 'Weekly', 'Monthly', 'Yearly'];\n\n/**\n * Create human readable string for recurrence metadata\n * @param value\n */\nexport function formatRecurrence(value: { period: string | number, end: number }) {\n    if (!value || !value.period || value.period as any >= RECURRENCE_PERIODS.length) {\n        return 'No recurrence';\n    }\n    let period = typeof value.period === 'string' ? value.period : RECURRENCE_PERIODS[value.period];\n    period = `${period[0].toUpperCase()}${period.substr(1)}`;\n    const end = value.end ? `until ${dayjs(value.end * 1000).format('DD MMM YYYY')}` : 'forever';\n    return `${period} ${end}`;\n}\n\n/**\n * Create human readable string for a room or list of rooms\n * @param list List of spaces/rooms\n */\nexport function formatSpaces(list: Space | Space[]) {\n    if (!list || (list instanceof Array && list.length <= 0)) {\n        return 'No selected space';\n    }\n    if (list instanceof Array) {\n        return list.length === 1 ? list[0].name : `${list.length} Space${list.length !== 1 ? 's' : ''}`;\n    } else {\n        const capacity = list.capacity ? '(' + list.capacity + ' ' + (list.capacity === 1 ? 'person' : 'people') + ')' : '';\n        return `${list.name} ${capacity}`;\n    }\n}\n","import { HashMap, Point } from './types.utilities';\n\nimport * as dayjs from 'dayjs';\n\nexport function getItemWithKeys(keys: string[], map: HashMap) {\n    const key = keys.shift();\n    if (map[key]) {\n        return keys.length > 0 ? getItemWithKeys(keys, map[key]) : map[key];\n    }\n    return null;\n}\n\n/* istanbul ignore next */\n/**\n * Checks whether the platform is a mobile device.\n */\nexport function isMobileDevice(): boolean {\n    const r = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i;\n    return !!navigator.userAgent.match(r);\n}\n\n/* istanbul ignore next */\n/**\n * Checks whether the browser is Mobile Safari.\n */\nexport function isMobileSafari(): boolean {\n    const agent = navigator.userAgent;\n    return !!(\n        agent.match(/iPhone|iPad|iPod/) &&\n        agent.match(/AppleWebKit/) &&\n        !agent.match('CriOS')\n    );\n}\n\n/* istanbul ignore next */\n/**\n * Checks whether the browser is Android Chrome.\n */\nexport function isAndroidChrome(): boolean {\n    const agent = navigator.userAgent;\n    return !!(agent.match(/Android/) && agent.match(/Chrome/));\n}\n\n/**\n * Generate string representation of a number with zeros padding the length\n * @param value Number to pad with zeros\n * @param length Length of the resulting string\n */\nexport function padZero(value: number, length: number): string {\n    let str = value.toString();\n    while (str.length < length) {\n        str = '0' + str;\n    }\n    return str;\n}\n\n/**\n * Remove duplicates from the given array\n * @param array List of items to remove duplicates from\n * @param key Key on array objects to compare for uniqueness\n */\nexport function unique(array: any[], key: string = '') {\n    return array.filter(\n        (el, pos, arr) =>\n            el &&\n            arr.indexOf(\n                key ? arr.find((i) => i && i[key] === el[key]) : arr.find((i) => i === el)\n            ) === pos\n    );\n}\n\n/**\n * Convert duration to human readable string\n * @param duration Duration in minutes\n * @param short Whether to use short form of duration words e.g. hours as h\n */\nexport function humaniseDuration(duration: number, short: boolean = false) {\n    if (!duration || duration < 0) {\n        return '';\n    }\n    const h = Math.floor(duration / 60);\n    let d = `${h >= 1 ? h + (short ? 'h' : ' hour' + (h === 1 ? '' : 's')) : ''}`;\n    if (duration % 60 !== 0) {\n        if (d) {\n            d += short ? ' ' : ', ';\n        }\n        const m = duration % 60;\n        d += `${m >= 1 ? m + (short ? 'm' : ' minute' + (m === 1 ? '' : 's')) : ''}`;\n    }\n    return d;\n}\n\n/**\n * Get a filtered list of items\n * @param filter Value to filter on\n * @param items List of results to filter\n * @param fields Fields to check for matches on each item\n */\nexport function filterList<T = HashMap>(\n    filter: string,\n    items?: T[],\n    fields: string[] = ['id']\n): T[] {\n    let results: any[];\n    // Tokenise filter string\n    const filters = (filter || '').toLowerCase().split(' ');\n    const list = {};\n    for (const f of filters) {\n        /* istanbul ignore else */\n        if (f) {\n            /* istanbul ignore else */\n            if (!list[f]) {\n                list[f] = 0;\n            }\n            list[f]++;\n        }\n    }\n    // Group similar tokens\n    const parts = [];\n    for (const f in list) {\n        /* istanbul ignore else */\n        if (list.hasOwnProperty(f)) {\n            parts.push({ word: f, count: list[f], regex: new RegExp(f, 'gi') });\n        }\n    }\n    parts.sort((a, b) => b.word.length - a.word.length || a.word.localeCompare(b.word));\n    const item_list = JSON.parse(JSON.stringify(items || []));\n    /* istanbul ignore else */\n    if (filter) {\n        results = item_list.filter((item) => {\n            let match_count = 0;\n            item.match_index = 65535;\n            item.match = '';\n            const field_list = {};\n            // Initialise field match variables\n            for (const f of fields) {\n                field_list[f] = {\n                    value: (item[f] || '').toLowerCase(),\n                    index: 65536,\n                    matched: 0,\n                };\n            }\n            // Search for matches with the tokenised filter string\n            for (const i of parts) {\n                /* istanbul ignore else */\n                if (i.word) {\n                    // Check fields for matches\n                    for (const f of fields) {\n                        const field = field_list[f];\n                        const index = field.value.indexOf(i.word);\n                        field.index = index < field.index ? index : field.index;\n                        field.matches = (field.value.match(i.regex) || []).length;\n                        field.value = field.value.replace(i.regex, ' ');\n                    }\n                    // Update token match count\n                    for (const f of fields) {\n                        const field = field_list[f];\n                        /* istanbul ignore else */\n                        if (field.matches >= i.count) {\n                            match_count++;\n                            // Update field matches\n                            let changed = 0;\n                            const tokens = (item[`match_${f}`] || item[f] || '').split(' ');\n                            for (const k of tokens) {\n                                /* istanbul ignore else */\n                                if (changed >= i.count) {\n                                    break;\n                                }\n                                /* istanbul ignore else */\n                                if (k.toLowerCase().indexOf(i.word) >= 0 && k.indexOf('`') < 0) {\n                                    tokens[tokens.indexOf(k)] = k.replace(i.regex, '`$&`');\n                                    changed++;\n                                }\n                            }\n                            item[`match_${f}`] = tokens.join(' ');\n                            break;\n                        }\n                    }\n                }\n            }\n            // Get field with the most relevent match\n            for (const f of fields) {\n                const field = field_list[f];\n                /* istanbul ignore else */\n                if (field.index < item.match_index && field.index >= 0) {\n                    item.match_index = field.index;\n                    item.match = f;\n                }\n            }\n            return item.match_index >= 0 && item.match && match_count >= parts.length;\n        });\n    } else {\n        results = item_list;\n    }\n    // Sort by order of relevence then name\n    results.sort((a, b) => {\n        const diff = a.match_index - b.match_index;\n        return diff === 0 ? a.name.localeCompare(b.name) : diff;\n    });\n    return results;\n}\n\n/**\n * Convert a match string from `filterList` to renderable HTML\n * @param str Match string to change\n */\nexport function matchToHighlight(str: string): string {\n    /* istanbul ignore else */\n    if (str) {\n        str = str.replace(/\\`[a-zA-Z0-9\\@\\.\\_]*\\`/g, '<span class=\"highlight\">$&</span>');\n        str = str.replace(/\\`/g, '');\n    }\n    return str;\n}\n\n/**\n * Convert time string to ms from UTC epoch for today\n * @param time Time string in the format `HH:mm`\n */\nexport function timeToDate(time: string): number {\n    const parts = time.split(':');\n    const date = dayjs()\n        .hour(+parts[0])\n        .minute(+parts[1])\n        .startOf('m');\n    return date.valueOf();\n}\n\n/**\n * Generate a random number\n * @param ceil Biggest value to generate not inclusive\n * @param floor Smallest value to generate. Defaults to 0\n */\nexport function randomInt(ceil: number, floor: number = 0) {\n    return Math.floor(Math.random() * (ceil - floor)) + floor;\n}\n\n/** Get time format string for locale */\nexport function timeFormatString(): string {\n    return is24HourTime() ? 'HH:mm' : 'h:mm A';\n}\n\n/** Whether locale string is displayed in 24 hour time */\nexport function is24HourTime(): boolean {\n    const date = new Date();\n    const localeString = date.toLocaleTimeString();\n    return localeString.indexOf('AM') < 0 && localeString.indexOf('PM') < 0;\n}\n\n/**\n * Downloads a file to the users computer with the given filename and contents\n * @param filename Name of the file to download\n * @param contents Contents of the file to download\n */\nexport function downloadFile(filename: string, contents: string) {\n    const element = document.createElement('a');\n    element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(contents));\n    element.setAttribute('download', filename);\n\n    element.style.display = 'none';\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n}\n\n/**\n * Parse raw CSV data into a JSON object\n * @param csv CSV data to parse\n */\nexport function csvToJson(csv: string) {\n    const lines = csv.split('\\n');\n    let fields = lines.splice(0, 1)[0].split(',');\n    fields = fields.map((v) => v.replace('\\r', ''));\n    const list: any[] = [];\n    for (const line of lines) {\n        let parts = line.split(',');\n        parts = parts.map((v) => v.replace('\\r', ''));\n        /* istanbul ignore else */\n        if (parts.length >= fields.length) {\n            const item: any = {};\n            for (let i = 0; i <= parts.length; i++) {\n                let part = null;\n                part = parts[i];\n                /* istanbul ignore else */\n                if (part !== undefined) {\n                    item[(fields[i] || '').split(' ').join('_').toLowerCase()] = part;\n                }\n            }\n            list.push(item);\n        }\n    }\n\n    return list;\n}\n\n/**\n * Convert javascript array to CSV string\n * @param json Javascript array to convert\n */\nexport function jsonToCsv(json: HashMap[]) {\n    /* istanbul ignore else */\n    if (json instanceof Array && json.length > 0) {\n        const keys = Object.keys(json[0]);\n        const valid_keys = keys.filter((key) => json[0].hasOwnProperty(key));\n        return `${valid_keys.join(',')}\\n${json\n            .map((item) => valid_keys.map((key) => item[key]).join(','))\n            .join('\\n')}`;\n    }\n    return '';\n}\n\n/* istanbul ignore next */\n/**\n * detect IE\n * returns version of IE or false, if browser is not Internet Explorer\n */\nexport function detectIE() {\n    var ua = window.navigator.userAgent;\n\n    var msie = ua.indexOf('MSIE ');\n    if (msie > 0) {\n        // IE 10 or older => return version number\n        return parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\n    }\n\n    var trident = ua.indexOf('Trident/');\n    if (trident > 0) {\n        // IE 11 => return version number\n        var rv = ua.indexOf('rv:');\n        return parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);\n    }\n\n    var edge = ua.indexOf('Edge/');\n    if (edge > 0) {\n        // Edge (IE 12+) => return version number\n        return parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);\n    }\n\n    // other browser\n    return false;\n}\n\n/**\n * Grab point details from mouse or touch event\n * @param event Event to grab details from\n */\nexport function eventToPoint(event: MouseEvent | TouchEvent): Point {\n    if (!event) {\n        return { x: -1, y: -1 };\n    }\n    if (event instanceof MouseEvent) {\n        return { x: event.clientX, y: event.clientY };\n    } else {\n        return event.touches && event.touches.length > 0\n            ? { x: event.touches[0].clientX, y: event.touches[0].clientY }\n            : { x: -1, y: -1 };\n    }\n}\n\n/**\n * Flatten nested array\n * @param an_array Array to flatten\n */\nexport function flatten<T = any>(an_array: T[]) {\n    const stack = [...an_array];\n    const res = [];\n    while (stack.length) {\n        // pop value from stack\n        const next = stack.pop();\n        if (Array.isArray(next)) {\n            // push back array items, won't modify the original input\n            stack.push(...next);\n        } else {\n            res.push(next);\n        }\n    }\n    // reverse to restore input order\n    return res.reverse();\n}\n","import { AbstractControl } from '@angular/forms';\n\nimport { User } from '../../services/data/users/user.class';\n\nimport * as dayjs from 'dayjs';\n\nconst HAS_ERROR = true;\n\n/**\n * Check that control value is a date that is the same or after from date\n * @param control Angular form control\n * @param is_from Comparison date(ms from UTC epoch). Defaults to the current time\n */\nexport function validateDate(control: AbstractControl, is_from: number = dayjs().valueOf()) {\n    const from = dayjs(is_from);\n    const date = dayjs(control.value || undefined);\n    return date.isBefore(from, 'd') ? { date: HAS_ERROR, message: 'Booking needs to be made in the future' } : null;\n}\n\n/**\n * Build start time validation function\n * @param date Date of the time to check\n * @param is_from Comparison date(ms from UTC epoch). Defaults to the current time\n */\nexport function buildValidateStartTime(date: number, is_from: number = dayjs().valueOf()) {\n    return (c) => validateStartTime(c, date, is_from);\n}\n\n/**\n * Check that control value time is after the comparison date time\n * @param control Angular form control\n * @param date Date of the time to check\n * @param is_from Comparison date(ms from UTC epoch). Defaults to the current time\n */\nexport function validateStartTime(control: AbstractControl, date: number, is_from: number = dayjs().valueOf()) {\n    const now = dayjs(is_from);\n    const parts = control.value.split(':');\n    const date_obj = dayjs(date).hour(+parts[0]).minute(+parts[1]);\n    return date_obj.isBefore(now, 'm') ? { start: HAS_ERROR, message: 'Booking time needs to be made in the future' } : null;\n}\n\nexport function buildValidateDuration(min: number = 30, max: number = 240) {\n    return (c) => validateDuration(c, min, max);\n}\n\nexport function validateDuration(control: AbstractControl, min: number = 30, max: number = 240) {\n    if (control.value < (min || 30)) {\n        return { duration: HAS_ERROR, message: `Minimum booking duration is ${min} minute${min === 1 ? 's' : ''}` };\n    } else if (control.value > (max || 480)) {\n        return { length: HAS_ERROR, message: `Maximum booking duration is ${max} minute${max === 1 ? 's' : ''}` };\n    }\n    return null;\n}\n\nexport function buildValidateAttendees(host: User, min: number = 0) {\n    return (c) => validateAttendees(c, host, min);\n}\n\nexport function validateAttendees(control: AbstractControl, host: User, min: number = 0) {\n    if (!control || !(control.value instanceof Array)) {\n        return min > 0\n            ? { invalid: true, message: `Minimum of ${min} attendee${min === 1 ? ' is' : 's are'} required other than you` }\n            : null;\n    }\n    const list: User[] = control.value;\n    if (host) {\n        const result = list.find(a => a.email === host.email);\n        if (result) { list.splice(list.indexOf(result), 1); }\n    }\n    return list.length >= min ? null : {\n        count: true,\n        message: `Minimum of ${min} attendee${min === 1 ? ' is' : 's are'} required other than you`\n    };\n}\n\nexport function validateEndTime(date_control: AbstractControl) {\n    return (control: AbstractControl) => {\n        const date = dayjs(date_control ? date_control.value : undefined).add(control.value || 60, 'm');\n        return date.isBefore(dayjs(), 'm') ? { end_time: true } : null;\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router, NavigationEnd, NavigationStart } from '@angular/router';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\n\nexport interface BookingFlowEvent {\n    /** Type of flow event */\n    type: 'previous' | 'next' | 'reset' | 'close' | 'error';\n    /** Step which the event was emitted from */\n    step: string;\n    /** Additional metadata for the event */\n    metadata?: HashMap;\n}\n\n@Component({\n    selector: 'app-bookings',\n    templateUrl: './bookings.component.html',\n    styleUrls: ['./bookings.component.scss'],\n})\nexport class BookingsComponent extends BaseDirective implements OnInit {\n    /** Booking flow */\n    public flow: 'spaces' | 'desks';\n    /** Whether to show the overlay menu */\n    public show_menu: boolean;\n\n    constructor(\n        private _service: ApplicationService,\n        private _route: ActivatedRoute,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.title = 'Book';\n        this.subscription(\n            'route.params',\n            this._route.paramMap.subscribe((params) => {\n                /* istanbul ignore else */\n                if (params.has('flow')) {\n                    this.flow = params.get('flow') as any;\n                }\n            })\n        );\n        this.subscription(\n            'router.events',\n            this._router.events.subscribe((event) => {\n                /* istanbul ignore else */\n                if (event instanceof NavigationStart) {\n                    /* istanbul ignore else */\n                    if (event.url.indexOf('book') < 0) {\n                        localStorage.removeItem('ACA_STAFF.booking_form_data');\n                    }\n                }\n            })\n        );\n    }\n}\n","<div class=\"booking page\">\n    <header class=\"header\">\n        <a-topbar-header [(menu)]=\"show_menu\"></a-topbar-header>\n    </header>\n    <main class=\"body\">\n        <ng-container [ngSwitch]=\"flow\">\n            <booking-desk-flow *ngSwitchCase=\"'desks'\"></booking-desk-flow>\n            <booking-space-flow *ngSwitchDefault></booking-space-flow>\n        </ng-container>\n    </main>\n    <footer class=\"footer\">\n        <a-footer-menu></a-footer-menu>\n    </footer>\n</div>\n<!-- <a-overlay-menu [(show)]=\"show_menu\"></a-overlay-menu> -->\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Route } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ComposerModule } from '@placeos/composer';\n\nimport { BookingsComponent } from './bookings.component';\nimport { SharedContentModule } from 'src/app/shared/shared.module';\nimport { BookingSpaceFlowComponent } from './space-flow/space-flow.component';\nimport { BookingSpaceFlowFormComponent } from './space-flow/form/form.component';\nimport { BookingFindSpaceComponent } from './space-flow/find-space/find-space.component';\nimport { BookingSpaceItemComponent } from './space-flow/find-space/item/item.component';\nimport { BookingSpaceFiltersComponent } from './space-flow/find-space/filters/filters.component';\nimport { BookingCateringComponent } from './space-flow/catering/catering.component';\nimport { BookingCateringOrderListComponent } from './space-flow/catering/order-list/order-list.component';\nimport { BookingCateringOrderDetailsComponent } from './space-flow/catering/order-details/order-details.component';\nimport { CateringOrderListItemComponent } from './space-flow/catering/order-list/item/item.component';\nimport { CateringMenuCategoryComponent } from './space-flow/catering/order-details/category/category.component';\nimport { BookingCateringConfirmModalComponent } from './overlays/catering-confirm-modal/catering-confirm-modal.component';\nimport { CateringMenuItemComponent } from './space-flow/catering/order-details/item/item.component';\nimport { PackageOptionsModalComponent } from './overlays/package-options-modal/package-options-modal.component';\nimport { RequirementDetailsModalComponent } from './overlays/requirement-details-modal/requirement-details-modal.component';\nimport { CateringDetailsModalComponent } from './overlays/catering-details-modal/catering-details-modal.component';\nimport { RecurrenceSpacesModalComponent } from './overlays/recurrence-spaces-modal/recurrence-spaces-modal.component';\n\nconst ROUTES: Route[] = [\n    { path: ':flow', component: BookingsComponent },\n    { path: ':flow/:step', component: BookingsComponent },\n    { path: '', redirectTo: 'spaces' }\n];\n\n@NgModule({\n    declarations: [\n        BookingsComponent,\n        BookingSpaceFlowComponent,\n        BookingSpaceFlowFormComponent,\n        BookingFindSpaceComponent,\n        BookingSpaceItemComponent,\n        BookingSpaceFiltersComponent,\n        BookingCateringComponent,\n        BookingCateringOrderListComponent,\n        BookingCateringOrderDetailsComponent,\n        CateringOrderListItemComponent,\n        CateringMenuCategoryComponent,\n        BookingCateringConfirmModalComponent,\n        CateringMenuItemComponent,\n        PackageOptionsModalComponent,\n        RequirementDetailsModalComponent,\n        CateringDetailsModalComponent,\n        RecurrenceSpacesModalComponent,\n    ],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(ROUTES),\n        SharedContentModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ComposerModule\n    ]\n})\nexport class BookingsModule {}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { humaniseDuration } from 'src/app/shared/utilities/general.utilities';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { UsersService } from 'src/app/services/data/users/users.service';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nimport * as dayjs from 'dayjs';\nimport { formatRecurrence } from 'src/app/shared/utilities/formatting.utilities';\n\nexport interface BookingConfirmModalData {\n    old_booking: Booking;\n    booking: Booking;\n}\n\n@Component({\n    selector: 'a-booking-confirm-modal',\n    templateUrl: './booking-confirm.component.html',\n    styleUrls: ['./booking-confirm.component.scss'],\n})\nexport class BookingConfirmComponent extends BaseDirective {\n    /** Emitter for user actions on the modal */\n    @Output() public event = new EventEmitter();\n    /** Display string for changes are being processed */\n    public loading: string;\n    /** Whether space availability is being checked */\n    public checking_available: boolean;\n    /** Whether to show all attendees */\n    public show_attendees: boolean;\n    /** Whether to show all attendees */\n    public show_locations: boolean;\n    /** Whether to show all catering orders */\n    public show_orders: boolean;\n    /** Whether booking has succeeded */\n    public success: boolean;\n\n    /** Whether booking needs to be accepted */\n    public get is_request(): boolean {\n        const options = {\n            date: this.booking.date,\n            duration: this.booking.duration,\n            host: this.organiser,\n        };\n        return this.spaces.reduce((request, space) => request || space.byRequest(options), false);\n    }\n\n    /** Booking to confirm changes to */\n    public get old_booking(): Booking {\n        return this._data.old_booking;\n    }\n\n    /** Booking to confirm changes to */\n    public get booking(): Booking {\n        return this._data.booking;\n    }\n\n    /** Title of the displayed event */\n    public get title(): string {\n        return this.booking.title;\n    }\n\n    /** Display string of when the event will occur */\n    public get when(): string {\n        const date_value = this.booking.date;\n        const duration_value = this.booking.duration;\n        const all_day = this.booking.all_day;\n        const date = dayjs(date_value);\n        const end = date.add(duration_value, 'm');\n        if (all_day || duration_value > 23 * 60) {\n            return `${date.format('DD MMM YYYY')} - All Day`;\n        } else {\n            if (date.isSame(end, 'd')) {\n                return `${date.format('DD MMM YYYY, h:mm A')} - ${end.format('h:mm A')}`;\n            } else {\n                return `${date.format('DD MMM YYYY, h:mm A')} - ${end.format(\n                    'DD MMM YYYY, h:mm A'\n                )}`;\n            }\n        }\n    }\n\n    /** Display string for the recurrence value of the booking */\n    public get recurrence(): string {\n        return formatRecurrence(this.booking.recurrence);\n    }\n\n    /** Display string for the event's duration */\n    public get duration(): string {\n        const duration_value = this.booking.duration;\n        return this.booking.all_day ? 'All Day' : humaniseDuration(duration_value);\n    }\n\n    /** List of spaces associated with the event */\n    public get spaces(): Space[] {\n        return this.booking.space_list;\n    }\n\n    /** List of attendees associated with the event not including the host */\n    public get attendees(): User[] {\n        const attendees = this.booking.attendees;\n        return attendees.filter((i) => i.email !== this.organiser.email);\n    }\n\n    /** Host of the event */\n    public get organiser(): User {\n        return this.booking.organiser || this._users.current;\n    }\n\n    /** Host of the event */\n    public get equipment_codes(): HashMap<string> {\n        return this.booking.equipment_codes || {};\n    }\n\n    /** Host of the event */\n    public get equipment_notes(): HashMap<string> {\n        return this.booking.notes\n            .filter((note) => note.type === 'equipment')\n            .reduce((map, notes) => {\n                map[notes.space] = notes.message;\n                return map;\n            }, {});\n    }\n\n    /** Details about the event */\n    public get notes(): string {\n        return this.booking.body;\n    }\n\n    /** List of catering orders in the booking */\n    public get catering(): CateringOrder[] {\n        return (this.booking.catering || []).map((order) => {\n            const space: any = this.spaces.find((a_space) => a_space.id === order.location_id) || {\n                level: {},\n            };\n            const building: any =\n                this._org.buildings.find((bld) => bld.id === space.level.id) || {};\n            return new CateringOrder({ ...order, location: space.name, symbol: building.currency });\n        });\n    }\n\n    /** Map of changes to the booking */\n    public get changes(): HashMap<boolean> {\n        if (!this.booking.id && this.old_booking) {\n            return {};\n        }\n        return Object.keys(this.booking).reduce((map, key) => {\n            if (!(this.booking[key] instanceof Function) && key[0] !== '_') {\n                map[key] = this.booking[key] !== this.old_booking[key];\n            }\n            return map;\n        }, {});\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _users: UsersService,\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _router: Router,\n        private _dialog_ref: MatDialogRef<BookingConfirmComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: BookingConfirmModalData\n    ) {\n        super();\n    }\n\n    /**\n     * Save booking changes\n     */\n    public saveChanges() {\n        this.loading = 'Checking availability of selected spaces';\n        this._dialog_ref.disableClose = true;\n        this.checkSpaceAvailability().then(\n            () => {\n                this.loading = 'Processing booking request...';\n                this.booking.save().then(\n                    () => {\n                        this.loading = null;\n                        this.success = true;\n                        this._dialog_ref.disableClose = false;\n                        this.event.emit({ type: 'success' });\n                        this._service.notifySuccess(\n                            `Successfully ${this.booking.id ? 'updated' : 'created'} booking`\n                        );\n                    },\n                    (err) => {\n                        this.loading = null;\n                        this._dialog_ref.disableClose = false;\n                        this._service.notifyError(\n                            `Error ${this.booking.id ? 'updating' : 'creating'} booking: ${err}`\n                        );\n                    }\n                );\n            },\n            (err) => {\n                this.loading = null;\n                this._dialog_ref.disableClose = false;\n                this._service.notifyError(`Error checking space availability: ${err}`);\n            }\n        );\n    }\n\n    public newBooking() {\n        localStorage.removeItem('ACA_STAFF.booking_form_data');\n        this._router.navigate(['/book', 'spaces']);\n        this._dialog_ref.close();\n    }\n\n    public toSchedule() {\n        localStorage.removeItem('ACA_STAFF.booking_form_data');\n        this._router.navigate(['/schedule']);\n        this._dialog_ref.close();\n    }\n\n    /**\n     * Check whether the selected spaces are available for the selected time period\n     */\n    public checkSpaceAvailability(): Promise<void> {\n        const spaces: Space[] = this.spaces;\n        if (\n            (this.booking.id && !this.changes.date && !this.changes.duration) ||\n            (spaces && spaces.length <= 0)\n        ) {\n            return Promise.resolve();\n        }\n        return new Promise((resolve, reject) => {\n            this._spaces\n                .available({\n                    room_ids: spaces.map((space) => space.id).join(','),\n                    date: this.booking.date,\n                    duration: this.booking.duration,\n                })\n                .then(\n                    (space_list) => {\n                        for (const space of space_list) {\n                            if (!space.was_available) {\n                                return reject(\n                                    `${space.name} is not available at the select time period.`\n                                );\n                            }\n                        }\n                        resolve();\n                    },\n                    (err) => reject(err)\n                );\n        });\n    }\n}\n","<mat-dialog-content *ngIf=\"!loading; else load_state\">\n    <main>\n        <button name=\"close\" mat-icon-button mat-dialog-close>\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"\n            ></app-icon>\n        </button>\n        <div class=\"details\">\n            <img\n                [src]=\"\n                    success\n                        ? is_request\n                            ? 'assets/img/requested.svg'\n                            : 'assets/img/confirmed.svg'\n                        : 'assets/img/edit.svg'\n                \"\n            />\n            <div class=\"text\">\n                Booking Details\n                <span *ngIf=\"success && !is_request\">Confirmed!</span>\n                <span class=\"request\" *ngIf=\"success && is_request\">Requested!</span>\n            </div>\n            <div class=\"info\" *ngIf=\"success && is_request\">Please await confirmation of room</div>\n        </div>\n        <div class=\"field\" name=\"title\">\n            <label>Title<span *ngIf=\"changes.title\">*</span>:</label>\n            <div class=\"value\">{{ title || 'No title' }}</div>\n        </div>\n        <div class=\"field\" name=\"when\">\n            <label>When<span *ngIf=\"changes.date\">*</span>:</label>\n            <div class=\"value\">{{ when }}</div>\n        </div>\n        <div class=\"field\" name=\"when\">\n            <label>Recurrence<span *ngIf=\"changes.recurrence\">*</span>:</label>\n            <div class=\"value\">{{ recurrence }}</div>\n        </div>\n        <div class=\"field\" name=\"duration\">\n            <label>Duration<span *ngIf=\"changes.duration\">*</span>:</label>\n            <div class=\"value\">{{ duration }}</div>\n        </div>\n        <div class=\"field multi\" name=\"location\">\n            <label\n                >Locations({{ spaces.length || '0' }})<span *ngIf=\"changes.location\">*</span\n                >:</label\n            >\n            <div class=\"value\">\n                <div class=\"list\" [class.shown]=\"show_locations\">\n                    <div class=\"list-item\" *ngFor=\"let item of spaces\" [title]=\"item?.name\">\n                        <div class=\"text\">{{ item?.name }}</div>\n                        <div class=\"tooltip\" *ngIf=\"equipment_notes[item.id]\" [matTooltip]=\"equipment_notes[item.id]\">Notes</div>\n                        <div class=\"tooltip\" *ngIf=\"equipment_codes[item.id]\" [matTooltip]=\"equipment_codes[item.id]\">Code</div>\n                    </div>\n                    <div class=\"list-item\" *ngIf=\"!spaces.length\">No Locations</div>\n                </div>\n                <button\n                    class=\"show\"\n                    *ngIf=\"spaces.length > 5\"\n                    (touchrelease)=\"show_locations = !show_locations\"\n                >\n                    {{ show_locations ? 'Hide' : 'Show' }} Locations\n                </button>\n            </div>\n        </div>\n        <div class=\"field\" name=\"host\">\n            <label>Host<span *ngIf=\"changes.organiser\">*</span>:</label>\n            <div class=\"value\">{{ organiser?.name || organiser?.email }}</div>\n        </div>\n        <div class=\"field\" name=\"attendees\">\n            <label\n                >Attendees({{ attendees.length || '0' }})<span *ngIf=\"changes.attendees\">*</span\n                >:</label\n            >\n            <div class=\"value\">\n                <span *ngIf=\"!attendees || !attendees.length\">&lt;No Attendees&gt;</span>\n                <div class=\"list\" [class.shown]=\"show_attendees\">\n                    <div\n                        class=\"list-item\"\n                        *ngFor=\"let item of attendees\"\n                        [title]=\"item?.name + (item?.email ? '\\n' + item.email : '')\"\n                    >\n                        <div class=\"text\">\n                            <div class=\"name\">{{ item.name }}</div>\n                            <div class=\"email\" *ngIf=\"item.email\">\n                                <a [href]=\"'mailto:' + item.email + '?subject=' + booking.title\">{{\n                                    item.email\n                                }}</a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <button\n                    class=\"show\"\n                    *ngIf=\"attendees.length > 5\"\n                    (touchrelease)=\"show_attendees = !show_attendees\"\n                >\n                    {{ show_attendees ? 'Hide' : 'Show' }} Attendees\n                </button>\n            </div>\n        </div>\n        <div class=\"field\" name=\"notes\">\n            <label>Notes<span *ngIf=\"changes.body\">*</span>:</label>\n            <div class=\"value\" [innerHTML]=\"notes || 'No notes'\"></div>\n        </div>\n        <div class=\"field\" name=\"catering\">\n            <label\n                >Catering Orders({{ catering.length || '0' }})<span *ngIf=\"changes.catering\">*</span\n                >:</label\n            >\n            <div class=\"value\">\n                <div class=\"list\" [class.shown]=\"show_orders\">\n                    <div class=\"list-item\" *ngFor=\"let order of catering\">\n                        <div class=\"text\">\n                            <div class=\"name\">{{ order.location || '&lt;Removed&gt;' }}</div>\n                            <div class=\"email\">\n                                {{ order.item_count }} item{{ order.item_count === 1 ? '' : '' }} |\n                                {{ order.total / 100 | currency: order.symbol }}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <button\n                    class=\"show\"\n                    *ngIf=\"attendees.length > 5\"\n                    (touchrelease)=\"show_orders = !show_orders\"\n                >\n                    {{ show_orders ? 'Hide' : 'Show' }} Catering orders\n                </button>\n            </div>\n        </div>\n        <div class=\"info\" *ngIf=\"booking?.id\">\n            * - changed fields\n        </div>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading\">\n    <footer>\n        <ng-container *ngIf=\"!success; else success_actions\">\n            <button mat-button class=\"inverse\" mat-dialog-close>Edit</button>\n            <button mat-button name=\"save\" (tapped)=\"saveChanges()\">Save</button>\n        </ng-container>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <main>\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">\n                {{ loading }}\n            </div>\n        </div>\n    </main>\n</ng-template>\n<ng-template #success_actions>\n    <button mat-button class=\"inverse\" name=\"new\" (tapped)=\"newBooking()\">New Booking</button>\n    <a button mat-button mat-dialog-close (click)=\"toSchedule()\">My Day</a>\n</ng-template>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { FormGroup, FormControl } from '@angular/forms';\n\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\nimport * as dayjs from 'dayjs';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nexport interface CateringConfirmModalData {\n    form: FormGroup;\n    date: number;\n}\n\n@Component({\n    selector: 'a-catering-confirm-modal',\n    templateUrl: './catering-confirm-modal.component.html',\n    styleUrls: ['./catering-confirm-modal.component.scss'],\n})\nexport class BookingCateringConfirmModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user actions on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of selected items for the order */\n    public item_list: CateringItem[] = [];\n\n    /** Space selected for delivery */\n    public get space(): Space {\n        return this._spaces.find(this._data.form?.controls?.location_id?.value);\n    }\n    /** Delivery time for the order */\n    public get delivery_time(): string {\n        const date = dayjs(this._data.date);\n        return date.format('h:mm A');\n    }\n\n    /** Form field for order items */\n    public get item_field(): FormControl {\n        return this._data.form.controls.items as any;\n    }\n\n    /** Total cost of the order */\n    public get order_cost(): number {\n        return this.item_list.reduce((amount, item) => amount + item.amount * item.unit_price, 0);\n    }\n\n    /** Currency symbol for the selected space */\n    public get symbol(): string {\n        /* istanbul ignore else */\n        if (!this.space || !this.space.level) {\n            return 'USD';\n        }\n        const building = this._org.buildings.find(\n            (bld) => bld.id === this.space.level.building_id\n        ) || { currency: 'USD' };\n        return building.currency;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _dialog_ref: MatDialogRef<BookingCateringConfirmModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringConfirmModalData\n    ) {\n        super();\n        if (!this._data.form) {\n            this._service.notifyError('No form data for order');\n            this._dialog_ref.close();\n        }\n    }\n\n    public ngOnInit(): void {\n        /* istanbul ignore else */\n        if (this._data.form.controls.items) {\n            this.subscription(\n                'item_list',\n                this._data.form.controls.items.valueChanges.subscribe((items) => {\n                    /* istanbul ignore else */\n                    if (!items || items.length <= 0) {\n                        this._dialog_ref.close();\n                    }\n                })\n            );\n        }\n        this.item_list = this._data.form.controls.items.value.map((item) => new CateringItem(item));\n    }\n}\n","<header>\n    <div class=\"heading\" i18n=\"Catering confirm order header\">Confirm Catering Order</div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main>\n        <div class=\"details\">\n            Delivering to <span>{{ space?.name || '&lt;Unset&gt;' }}</span> at <span>{{ delivery_time }}</span>\n        </div>\n        <div class=\"list\">\n            <a-catering-order-item\n                *ngFor=\"let item of item_list\"\n                [field]=\"item_field\"\n                [subitem]=\"true\"\n                [item]=\"item\"\n                [symbol]=\"symbol\"\n            ></a-catering-order-item>\n        </div>\n        <div class=\"total\">\n            <label>Order Total:</label>\n            <div class=\"value\">{{ order_cost / 100 | currency:symbol }}</div>\n        </div>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button (tapped)=\"event.emit({ reason: 'done' })\" i18n=\"Catering confirm save action\">Save Order</button>\n    </footer>\n</mat-dialog-actions>\n","import { Component, OnInit, Inject, Output, EventEmitter, ViewChild, ElementRef } from '@angular/core';\nimport { FormGroup, AbstractControl, FormControl } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { HashMap, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { BookingNote } from 'src/app/services/data/bookings/booking.interfaces';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\n\nimport * as dayjs from 'dayjs';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\nexport interface CateringDetailsModalData {\n    spaces: Space[];\n    notes_field: AbstractControl;\n    catering: AbstractControl;\n}\n\n@Component({\n    selector: 'a-catering-details-modal',\n    templateUrl: './catering-details-modal.component.html',\n    styleUrls: ['./catering-details-modal.component.scss'],\n})\nexport class CateringDetailsModalComponent implements OnInit {\n    /** Emitter for modal events */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Mapping of spaces to notes */\n    public notes: HashMap<string> = {};\n    /** Mapping of spaces to cost codes */\n    public codes: HashMap<string> = {};\n    /** Mapping of spaces to estimated head count */\n    public head_counts: HashMap<string> = {};\n    /** Mapping of spaces to form fields */\n    public form: HashMap<FormGroup> = {};\n    /** Map of spaces to whether they need a charge code */\n    public needs_charge_code: HashMap<boolean> = {};\n    /** Index of the active space */\n    public active_space: number = 0;\n\n    @ViewChild('content', { static: true }) private _content_el: ElementRef<HTMLElement>;\n\n    /** List of selected spaces */\n    public get space_list(): Space[] {\n        return this._data.spaces || [];\n    }\n\n    public get active_form(): FormGroup {\n        return this.form[this.space_list[this.active_space].id];\n    }\n\n    /** Whether form fields are valid */\n    public get is_valid(): boolean {\n        return this.space_list.reduce((valid, space) => valid && this.form[space.id].valid, true);\n    }\n\n    constructor(\n        private _users: UsersService,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringDetailsModalData\n    ) {}\n\n    public ngOnInit(): void {\n        const note_list = this._data.notes_field.value.filter(\n            (note: BookingNote) => note.type === 'catering'\n        );\n        this.notes = note_list.reduce((map, note) => {\n            map[note.space] = note.message;\n            return map;\n        }, {});\n        this.codes = this._data.catering.value.reduce((map, order: CateringOrder) => {\n            map[order.location_id] = order.charge_code;\n            return map;\n        }, {});\n        this.generateFormFields();\n    }\n\n    public submit(): void {\n        this.space_list.forEach((space) => this.form[space.id].markAllAsTouched());\n        /* istanbul ignore else */\n        if (this.is_valid) {\n            // Update notes\n            const notes = this._data.notes_field.value.filter(\n                (note: BookingNote) => note.type !== 'catering'\n            );\n            const new_notes = this.space_list.map(\n                (space) =>\n                    ({\n                        author: this._users.current.name,\n                        type: 'catering',\n                        message: this.form[space.id].controls.notes.value,\n                        space: space.id,\n                        date: dayjs().valueOf(),\n                    } as BookingNote)\n            );\n            this._data.notes_field.setValue(notes.concat(new_notes).filter((note) => note.message));\n            const orders = this._data.catering.value.map(\n                (order) =>\n                    new CateringOrder({\n                        ...order,\n                        charge_code: this.form[order.location_id].controls.code.value,\n                    })\n            );\n            this._data.catering.setValue(orders);\n            this.event.emit({ reason: 'done' });\n        } else {\n            this._scrollToBottom();\n        }\n    }\n\n    /** Generate form fields for each space */\n    private generateFormFields(): void {\n        for (const space of this.space_list) {\n            this.form[space.id] = new FormGroup({\n                notes: new FormControl(this.notes[space.id] || ''),\n                code: new FormControl(this.codes[space.id] || ''),\n            });\n        }\n    }\n\n    /** Scroll the content container to the bottom */\n    private _scrollToBottom(): void {\n        this._content_el.nativeElement.scrollTo({\n            top: this._content_el.nativeElement.scrollHeight,\n            left: 0,\n            behavior: 'smooth',\n        });\n    }\n}\n","<div class=\"header\">\n    <div class=\"tabs\">\n        <mat-tab-group [(selectedIndex)]=\"active_space\">\n            <mat-tab *ngFor=\"let space of space_list\">\n                <ng-template mat-tab-label>\n                    <span [class.error]=\"form[space.id].invalid && form[space.id].touched\">{{\n                        space.name + (form[space.id].invalid && form[space.id].touched ? '*' : '')\n                    }}</span>\n                </ng-template>\n            </mat-tab>\n        </mat-tab-group>\n    </div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</div>\n<mat-dialog-content>\n    <main>\n        <div class=\"details\">\n            <img src=\"assets/img/food-notes.svg\" />\n            <div class=\"text\">Please specify any allergies or gluten intolerances</div>\n        </div>\n        <form *ngIf=\"space_list[active_space] && active_form\" [formGroup]=\"active_form\">\n            <div class=\"field\">\n                <label for=\"equipment-notes\" i18n=\"Catering details equipment notes label\">\n                    (eg - allergies, in tolerances, no ice in drinks etc) Additional requests are\n                    handled in confidence.\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"equipment-notes\"\n                        formControlName=\"notes\"\n                        placeholder=\"Add notes here...\"\n                        i18n-placeholder\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label\n                    for=\"charge-code\"\n                    [class.error]=\"\n                        active_form.controls.code.touched && active_form.controls.code.invalid\n                    \"\n                    i18n=\"Catering details charge code label\"\n                >\n                    Charge Code<span *ngIf=\"needs_charge_code[space_list[active_space].id]\">*</span>\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"charge-code\"\n                        formControlName=\"code\"\n                        placeholder=\"Charge Code\"\n                        i18n-placeholder\n                    />\n                    <mat-error i18n=\"Catering details charge code error\">\n                        Charge Code is required\n                    </mat-error>\n                    <mat-hint i18n=\"Catering details charge code hint\">\n                        <span>Note:</span> Your booking will be confirmed before you are charged.\n                    </mat-hint>\n                </mat-form-field>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button (tapped)=\"submit()\" i18n=\"Catering details save action\">\n            Add to booking\n        </button>\n    </footer>\n</mat-dialog-actions>\n","import { Component, Output, EventEmitter, Inject } from '@angular/core';\n\nimport { DialogEvent, HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\n\nexport interface PackageOptionsModalData {\n    item: CateringCategory;\n}\n\nexport function checkItemRequirements(category: CateringCategory): boolean {\n    const items = category.items || [];\n    return category.must_select >= items.length\n        ? items.reduce((valid, item) => valid && checkItemRequirements(item as any), true)\n        : items.reduce((amount, item) => (amount + item.amount ? 1 : 0), 0) ===\n              category.must_select;\n}\n\nexport function getActiveItems(category: CateringCategory): HashMap<string> {\n    let map = {};\n    if (category.items) {\n        const item = category.items.find(item  => item.amount > 0);\n        if (item) {\n            map[category.id] = item.id;\n        }\n        category.items.forEach(item => map = { ...map, ...getActiveItems(item as any) })\n    }\n    return map;\n}\n\n@Component({\n    selector: 'a-package-options-modal',\n    templateUrl: './package-options-modal.component.html',\n    styleUrls: ['./package-options-modal.component.scss']\n})\nexport class PackageOptionsModalComponent {\n    /** Emitter for user actions on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    /** Item to select options for */\n    public get item(): CateringCategory {\n        return this._data.item;\n    }\n\n    /** Whether package requirements have been met */\n    public get requirements_met(): boolean {\n        return checkItemRequirements(this.item);\n    }\n\n    public get active_items(): HashMap<string> {\n        return getActiveItems(this.item);\n    }\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: PackageOptionsModalData) {}\n\n    /**\n     * Update the list of selected items\n     */\n    public updateAmount(a_package: CateringCategory, option: CateringItem, state: boolean) {\n        if (state) {\n            const needed = a_package.must_select;\n            const active = a_package.items.filter(an_item => an_item.amount > 0).length;\n            if (active >= needed) {\n                const item = a_package.items.find(an_item => an_item.amount > 0);\n                item.setAmount(0);\n            }\n            option.setAmount(1);\n        } else {\n            option.setAmount(0);\n        }\n    }\n}\n","<header>\n    <h3 i18n=\"Catering package options header\">Package Options</h3>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main>\n        <ng-container *ngTemplateOutlet=\"item_display; context: { package: item }\"></ng-container>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button [disabled]=\"!requirements_met\" (tapped)=\"event.emit({ reason: 'done' })\" i18n=\"Catering package options save action\">\n            Confirm Options\n        </button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #item_display let-package=\"package\">\n    <ng-container *ngIf=\"package.items && package.items.length\">\n        <mat-radio-group [ngModel]=\"active_items[package.id]\">\n            <div class=\"item\" *ngFor=\"let option of package.items\" [attr.to-select]=\"option.must_select\">\n            <ng-container\n                *ngIf=\"\n                    package.must_select &&\n                    package.must_select < package.items.length &&\n                    !option.must_select\n                \"\n            >\n                <mat-checkbox\n                    *ngIf=\"package.must_select > 1\"\n                    [checked]=\"!!option.amount\"\n                    (change)=\"updateAmount(package, option, $event.checked)\"\n                >\n                    {{ option.name }}\n                </mat-checkbox>\n                <mat-radio-button\n                    *ngIf=\"package.must_select === 1\"\n                    [value]=\"option.id\"\n                    (change)=\"updateAmount(package, option, true)\"\n                >\n                    {{ option.name }}\n                </mat-radio-button>\n            </ng-container>\n            <ng-container *ngIf=\"package.must_select >= package.items.length || option.must_select\">\n                {{ option.name }}\n            </ng-container>\n            <ng-container\n                *ngTemplateOutlet=\"item_display; context: { package: option }\"\n            ></ng-container>\n        </div>\n    </mat-radio-group>\n    </ng-container>\n</ng-template>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialog } from '@angular/material/dialog';\n\nimport { Space, RecurrenceAvailability } from 'src/app/services/data/spaces/space.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { SpaceSelectModalComponent, SpaceSelectModalData } from 'src/app/overlays/space-select-modal/space-select-modal.component';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\nimport { BookingRecurrenceSpaceDetails } from 'src/app/services/data/bookings/booking.interfaces';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\n\nimport * as dayjs from 'dayjs';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nexport interface RecurrenceSpacesModalData {\n    /** Space that has recurrence unavailability */\n    space: Space;\n    /** Duration of the booking */\n    duration: number;\n    /** Duration of the booking */\n    host: User;\n    /** List of current conflict matchups */\n    conflicts: BookingRecurrenceSpaceDetails[];\n}\n\nexport interface OccurrenceDetails extends RecurrenceAvailability {\n    /** Display string for the occurence datetime */\n    date_string: string;\n    /** Name of the space that replaces the space on this occurrence */\n    replaced_by: string;\n    /** Whether space needs to be requested */\n    is_request: boolean;\n}\n\n@Component({\n    selector: 'a-recurrence-spaces-modal',\n    templateUrl: './recurrence-spaces-modal.component.html',\n    styleUrls: ['./recurrence-spaces-modal.component.scss']\n})\nexport class RecurrenceSpacesModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for modal events */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of occurence details for space booking */\n    public occurrences: OccurrenceDetails[] = [];\n    /** List of space details for occurrences */\n    public space_details: BookingRecurrenceSpaceDetails[] = [];\n\n    /** Space to setup recurrence for */\n    public get space(): Space {\n        return this._data.space;\n    }\n\n    /** Whether all occurences have a valid space */\n    public get occurrences_valid(): boolean {\n        return this.occurrences.reduce((valid, event) => valid && (event.available || !!event.replaced_by), true);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: RecurrenceSpacesModalData,\n        private _dialog: MatDialog,\n        private _spaces: SpacesService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.space_details = [].concat(this._data.conflicts || []);\n        this.updateOccurrences();\n    }\n\n    public save() {\n        this.event.emit({\n            reason: 'done',\n            metadata: this.occurrences\n                .filter(i => i.replaced_by)\n                .map(i => this.space_details.find(j => j.date === i.date))\n        });\n    }\n\n    public selectSpace(occurrence: OccurrenceDetails) {\n        const ref = this._dialog.open<SpaceSelectModalComponent, SpaceSelectModalData>(\n            SpaceSelectModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                maxWidth: '95vw',\n                data: {\n                    spaces: [],\n                    zone_ids: this.space.level.building_id,\n                    date: occurrence.date * 1000,\n                    duration: this._data.duration,\n                    host: this._data.host,\n                    multiple: false\n                }\n            }\n        );\n        this.subscription(\n            'new_spaces',\n            ref.componentInstance.event.subscribe(event => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    const space = event.metadata[0];\n                    /* istanbul ignore else */\n                    if (space) {\n                        this.space_details.unshift({\n                            date: occurrence.date,\n                            space: space.email,\n                            replaces: this.space.email\n                        });\n                        this.space_details = unique(this.space_details, 'date');\n                    }\n                    this.updateOccurrences();\n                    ref.close();\n                    this.unsub('new_spaces');\n                }\n            })\n        );\n    }\n\n    private updateOccurrences() {\n        this.occurrences = this._data.space.recurr_available.map(event => {\n            const space_details = this.space_details.find(details => details.date === event.date && details.replaces === this.space.email);\n            const email = (space_details || {}).space;\n            const space = this._spaces.find(email) ||\n                {\n                    email,\n                    name: email,\n                    byRequest: () => this.space.byRequest({\n                        date: event.date * 1000,\n                        duration: this._data.duration,\n                        host: this._data.host\n                    })\n                };\n            return {\n                ...event,\n                date_string: dayjs(event.date * 1000).format('dddd, DD MMMM YYYY'),\n                replaced_by: space.name,\n                is_request: space.byRequest({\n                    date: event.date * 1000,\n                    duration: this._data.duration,\n                    host: this._data.host\n                })\n            };\n        });\n    }\n}\n","<header>\n    <div class=\"heading\" i18n=\"Space recurrence header\">Recurrence - {{ space.name }}</div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main>\n        <div class=\"info\" i18n=\"Space recurrence information\">\n            * Select individual dates to update selected space\n        </div>\n        <div class=\"item\" *ngFor=\"let item of occurrences\">\n            <div class=\"date\">{{ item.date_string }}</div>\n            <div class=\"action\">\n                <button\n                    [title]=\"item.replaced_by || (item.available ? space.name : 'Room Name')\"\n                    mat-button\n                    [class.request]=\"item.is_request\"\n                    [class.inverse]=\"!item.available && !item.replaced_by\"\n                    (tapped)=\"selectSpace(item)\"\n                >\n                    <div class=\"content\">\n                        {{ item.replaced_by || (item.available ? space.name : 'Find Room') }}\n                    </div>\n                </button>\n            </div>\n        </div>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button\n            mat-button\n            [disabled]=\"!occurrences_valid\"\n            (tapped)=\"save()\"\n            i18n=\"Space recurrence save action\"\n        >\n            Add to Booking\n        </button>\n    </footer>\n</mat-dialog-actions>\n","import {\n    Component,\n    OnInit,\n    Inject,\n    Output,\n    EventEmitter,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { FormGroup, Validators, AbstractControl, FormControl } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { HashMap, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { BookingNote } from 'src/app/services/data/bookings/booking.interfaces';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\nimport * as dayjs from 'dayjs';\n\nexport interface RequirementDetailsModalData {\n    spaces: Space[];\n    notes_field: AbstractControl;\n    codes_field: AbstractControl;\n    head_counts_field: AbstractControl;\n}\n\n@Component({\n    selector: 'a-requirement-details-modal',\n    templateUrl: './requirement-details-modal.component.html',\n    styleUrls: ['./requirement-details-modal.component.scss'],\n})\nexport class RequirementDetailsModalComponent implements OnInit {\n    /** Emitter for modal events */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Mapping of spaces to notes */\n    public notes: HashMap<string> = {};\n    /** Mapping of spaces to cost codes */\n    public codes: HashMap<string> = {};\n    /** Mapping of spaces to estimated head count */\n    public head_counts: HashMap<string> = {};\n    /** Mapping of spaces to form fields */\n    public form: HashMap<FormGroup> = {};\n    /** Map of spaces to whether they need a charge code */\n    public needs_charge_code: HashMap<boolean> = {};\n    /** Index of the active space */\n    public active_space: number = 0;\n\n    @ViewChild('content', { static: true }) private _content_el: ElementRef<HTMLElement>;\n\n    /** List of selected spaces */\n    public get space_list(): Space[] {\n        return this._data.spaces;\n    }\n\n    public get active_form(): FormGroup {\n        return this.form[this.space_list[this.active_space].id];\n    }\n\n    /** Whether form fields are valid */\n    public get is_valid(): boolean {\n        return this.space_list.reduce((valid, space) => valid && this.form[space.id].valid, true);\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _users: UsersService,\n        @Inject(MAT_DIALOG_DATA) private _data: RequirementDetailsModalData\n    ) {}\n\n    public ngOnInit(): void {\n        const note_list = this._data.notes_field.value.filter(\n            (note: BookingNote) => note.type === 'equipment'\n        );\n        this.notes = note_list.reduce((map, note) => {\n            map[note.space] = note.message;\n            return map;\n        }, {});\n        this.codes = { ...this._data.codes_field.value };\n        this.head_counts = { ...this._data.head_counts_field.value };\n        this.generateFormFields();\n    }\n\n    public submit(): void {\n        this.space_list.forEach((space) => this.form[space.id].markAllAsTouched());\n        /* istanbul ignore else */\n        if (this.is_valid) {\n            // Update notes\n            const notes = this._data.notes_field.value.filter(\n                (note: BookingNote) => note.type !== 'equipment'\n            );\n            const new_notes = this.space_list.map(\n                (space) =>\n                    ({\n                        author: this._users.current.name,\n                        type: 'equipment',\n                        message: this.form[space.id].controls.notes.value,\n                        space: space.id,\n                        date: dayjs().valueOf(),\n                    } as BookingNote)\n            );\n            this._data.notes_field.setValue(notes.concat(new_notes).filter((note) => note.message));\n            this._data.codes_field.setValue(\n                this.space_list.reduce((map, space) => {\n                    map[space.id] = this.form[space.id].controls.code.value;\n                    return map;\n                }, {})\n            );\n            this._data.head_counts_field.setValue(\n                this.space_list.reduce((map, space) => {\n                    map[space.id] = this.form[space.id].controls.head_count.value;\n                    return map;\n                }, {})\n            );\n            this.event.emit({ reason: 'done' });\n        } else {\n            this._scrollToBottom();\n        }\n    }\n\n    /** Generate form fields for each space */\n    private generateFormFields(): void {\n        for (const space of this.space_list) {\n            const building = this._org.buildings.find((bld) => bld.id === space.level.building_id);\n            this.needs_charge_code[space.id] = building.required.equipment_code;\n            this.form[space.id] = new FormGroup({\n                notes: new FormControl(this.notes[space.id] || ''),\n                code: new FormControl(\n                    this.codes[space.id] || '',\n                    building.required.equipment_code ? [Validators.required] : []\n                ),\n                head_count: new FormControl(\n                    this.head_counts[space.id] || '',\n                    building.required.expected_attendees ? [Validators.required] : []\n                ),\n            });\n        }\n    }\n\n    /** Scroll the content container to the bottom */\n    private _scrollToBottom(): void {\n        this._content_el.nativeElement.scrollTo({\n            top: this._content_el.nativeElement.scrollHeight,\n            left: 0,\n            behavior: 'smooth',\n        });\n    }\n}\n","<div class=\"header\">\n    <div class=\"tabs\">\n        <mat-tab-group [(selectedIndex)]=\"active_space\">\n            <mat-tab *ngFor=\"let space of space_list\">\n                <ng-template mat-tab-label>\n                    <span [class.error]=\"form[space.id] && form[space.id].invalid && form[space.id].touched\">{{\n                        space.name + (form[space.id] && form[space.id].invalid && form[space.id].touched ? '*' : '')\n                    }}</span>\n                </ng-template>\n            </mat-tab>\n        </mat-tab-group>\n    </div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</div>\n<mat-dialog-content #content>\n    <main>\n        <div class=\"details\">\n            <img src=\"assets/img/equipment.svg\" />\n            <div class=\"text\" i18n=\"Booking equipment information\">\n                Would you like to add equipment to your booking's spaces?\n            </div>\n        </div>\n        <form *ngIf=\"space_list[active_space] && active_form\" [formGroup]=\"active_form\">\n            <div class=\"field\">\n                <label for=\"equipment-notes\" i18n=\"Booking equipment notes label\">\n                    (eg - particular room configurations or specific equipment etc) Additional\n                    requests are handled in confidence\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"equipment-notes\"\n                        formControlName=\"notes\"\n                        placeholder=\"Add notes here...\"\n                        i18n-placeholder\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"fieldset\">\n                <div class=\"field\" name=\"charge-code\">\n                    <label\n                        for=\"charge-code\"\n                        [class.error]=\"\n                            active_form.controls.code.touched && active_form.controls.code.invalid\n                        \"\n                        i18n=\"Booking equipment charge code label\"\n                    >\n                        Charge Code<span *ngIf=\"needs_charge_code[space_list[active_space].id]\"\n                            >*</span\n                        >\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"charge-code\"\n                            formControlName=\"code\"\n                            placeholder=\"Charge Code\"\n                            i18n-placeholder\n                        />\n                        <mat-hint i18n=\"Booking equipment charge code hint\">\n                            <span>Note:</span> Your booking will be confirmed before you are\n                            charged.\n                        </mat-hint>\n                        <mat-error i18n=\"Booking equipment charge code error\">\n                            Charge Code is required\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"field\" name=\"head-count\">\n                    <label\n                        for=\"head-count\"\n                        [class.error]=\"\n                            active_form.controls.head_count.touched &&\n                            active_form.controls.head_count.invalid\n                        \"\n                        i18n=\"Booking equipment headcount label\"\n                    >\n                        Headcount Estimate<span>*</span>\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"head-count\"\n                            formControlName=\"head_count\"\n                            type=\"number\"\n                            placeholder=\"e.g. 12\"\n                            i18n-placeholder\n                        />\n                        <mat-hint i18n=\"Booking equipment headcount hint\">\n                            <span>Note:</span> This estimate is used to calculate catering and/or\n                            assign rooms. Please keep updated of any changes.\n                        </mat-hint>\n                        <mat-error i18n=\"Booking equipment headcount error\">\n                            Headcount Estimate is required\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button (tapped)=\"submit()\">Add to booking</button>\n    </footer>\n</mat-dialog-actions>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { BookingFlowEvent } from '../../bookings.component';\nimport { CateringOrder } from '../../../../services/data/catering/catering-order.class';\nimport { Space } from 'src/app/services/data/spaces/space.class';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'booking-catering',\n    templateUrl: './catering.component.html',\n    styleUrls: ['./catering.component.scss'],\n})\nexport class BookingCateringComponent {\n    /** Form fields for the booking */\n    @Input() public form: FormGroup;\n    /** Emitter for flow update events */\n    @Output() public event = new EventEmitter<BookingFlowEvent>();\n    /** Active order to display details for */\n    public active_order: CateringOrder;\n\n    /** Field for storing catering details */\n    public get catering_field() {\n        return this.form && this.form.controls.catering ? this.form.controls.catering : null;\n    }\n\n    /** List of spaces selected for the booking */\n    public get space_list(): Space[] {\n        return this.form && this.form.controls.space_list\n            ? this.form.controls.space_list.value\n            : [];\n    }\n\n    /** Date of the booking */\n    public get date(): number {\n        return this.form && this.form.controls.date\n            ? this.form.controls.date.value\n            : dayjs().startOf('m').valueOf();\n    }\n\n    /** Duration of the booking */\n    public get duration(): number {\n        return this.form && this.form.controls.duration ? this.form.controls.duration.value : 60;\n    }\n\n    /** Whether booking is all day */\n    public get all_day(): boolean {\n        return this.form && this.form.controls.all_day && this.form.controls.all_day.value;\n    }\n\n    /** Create a new catering order */\n    public newOrder(): void {\n        const order = new CateringOrder({});\n        this.active_order = order;\n    }\n\n    /** Handle changes to catering order */\n    public handleOrderEvent(order: CateringOrder) {\n        /* istanbul ignore else */\n        if (order) {\n            const orders = this.form.controls.catering.value;\n            const index = orders.findIndex((an_order) => order.id === an_order.id);\n            if (index < 0) {\n                orders.push(order);\n            } else {\n                orders.splice(index, 1, order);\n            }\n            this.form.controls.catering.setValue(orders);\n        }\n        this.active_order = null;\n    }\n}\n","<div class=\"catering\">\n    <ng-container *ngIf=\"!active_order; else order_display\">\n        <a-catering-order-list\n            [catering]=\"catering_field\"\n            [date]=\"date\"\n            [all_day]=\"all_day\"\n            (order)=\"$event ? (active_order = $event) : newOrder()\"\n            (event)=\"event.emit($event)\"\n        ></a-catering-order-list>\n    </ng-container>\n</div>\n<ng-template #order_display>\n    <a-catering-order-details\n        [space_list]=\"space_list\"\n        [order]=\"active_order\"\n        [date]=\"date\"\n        [duration]=\"duration\"\n        [all_day]=\"all_day\"\n        (event)=\"$event ? handleOrderEvent($event) : active_order = null\"\n    ></a-catering-order-details>\n</ng-template>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\n\n@Component({\n    selector: 'a-category-display',\n    templateUrl: './category.component.html',\n    styleUrls: ['./category.component.scss']\n})\nexport class CateringMenuCategoryComponent implements OnInit {\n    /** Category to display details for */\n    @Input() public category: CateringCategory;\n    /** Form control for the list of order items */\n    @Input() public items: FormControl;\n    /** Currency symbol for the active space */\n    @Input() public symbol: string;\n    /** Whether item should be disabled if not available anytime */\n    @Input() public disabled: boolean;\n    /** Emitter for close events */\n    @Output() public close = new EventEmitter<void>();\n\n    constructor() {}\n\n    ngOnInit(): void {}\n}\n","\n<div class=\"header\">\n    <div class=\"content\">\n        <button mat-icon-button name=\"to-categories\" (tapped)=\"close.emit()\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'arrow_back' }\"></app-icon>\n        </button>\n        <div class=\"name\">{{ category?.name }}</div>\n    </div>\n</div>\n<ng-container *ngIf=\"category.items && category.items.length; else empty_state\">\n    <div class=\"item\" *ngFor=\"let item of category.items\">\n        <a-catering-order-item [disabled]=\"disabled\" [symbol]=\"symbol\" [item]=\"item\" [field]=\"items\"></a-catering-order-item>\n    </div>\n</ng-container>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\" i18n=\"Catering category empty label\">Category contains no available items</div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { FormControl } from '@angular/forms';\n\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { ANIMATION_SHOW_CONTRACT_EXPAND } from 'src/app/shared/globals/angular-animations';\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { PackageOptionsModalComponent } from 'src/app/shell/bookings/overlays/package-options-modal/package-options-modal.component';\n\n@Component({\n    selector: 'a-catering-order-item',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss'],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class CateringMenuItemComponent extends BaseDirective implements OnChanges {\n    /** Whether item is a child of another */\n    @Input() public subitem: boolean;\n    /** Item to display */\n    @Input() public item: CateringCategory;\n    /** Field for storing items */\n    @Input() public field: FormControl;\n    /** Current symbol for the selected space */\n    @Input() public symbol: string;\n    /** Whether item should be disabled if not available anytime */\n    @Input() public disabled: boolean;\n    /** Whether to show children items */\n    public show_children: boolean;\n\n    /** List of contents of the package */\n    public get contents(): string {\n        return this.item.items\n            ? this.item.items.reduce((list, item) => {\n                  /* istanbul ignore else */\n                  if (list) {\n                      list += '\\n\\n';\n                  }\n                  return (list += `${item.name}${\n                      (item as any).items\n                          ? (item as any).items.reduce(\n                                (a_list, an_item) =>\n                                    (a_list += `\\n ${an_item.amount ? '✓' : '•'} ${an_item.name} `),\n                                ''\n                            )\n                          : ''\n                  } ${item.amount ? '✓' : ''}`);\n              }, '')\n            : '';\n    }\n\n    constructor(private _service: ApplicationService, private _dialog: MatDialog) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.field && this.field) {\n            const list = this.field.value;\n            const item = list.find((an_item) => an_item.id === this.item.id);\n            this.item.setAmount(item ? item.amount : 0);\n            this.subscription(\n                'field_change',\n                this.field.valueChanges.subscribe((list) => {\n                    const item = list.find((an_item) => an_item.id === this.item.id);\n                    this.item.setAmount(item ? item.amount : 0);\n                })\n            );\n        }\n    }\n\n    /**\n     * Update the amount of the item in the order\n     * @param value New amount\n     */\n    public updateAmount(value: number) {\n        /* istanbul ignore else */\n        if (this.field) {\n            const list: CateringItem[] = this.field.value;\n            const item = list.find((an_item) => an_item.id === this.item.id);\n            if (item) {\n                this.item.setAmount(value);\n                item.setAmount(value);\n            } else {\n                const amount = this.item.amount;\n                this.item.setAmount(value);\n                if (this.item.package && amount < value && this.item.items && this.item.items.length && this.item.must_select < this.item.items.length) {\n                    this.selectPackageOptions().then(\n                        (confirmed_item) => {\n                            list.push(new CateringItem(confirmed_item));\n                            this.field.setValue(list.filter((an_item) => an_item.amount));\n                        },\n                        () => {\n                            this.item.setAmount(999);\n                            this.timeout('amount', () => this.item.setAmount(0), 5);\n                            this._service.notifyWarn(\n                                'Package options not selected. Item removed from order'\n                            );\n                        }\n                    );\n                } else {\n                    list.push(new CateringItem(this.item));\n                }\n            }\n            this.field.setValue(list.filter((an_item) => an_item.amount));\n        }\n    }\n\n    /** Reselect package options */\n    public updatePackageOptions(): void {\n        this.selectPackageOptions().then(\n            () => null,\n            () => null\n        );\n    }\n\n    /**\n     * Open modal for user to select package options\n     */\n    private selectPackageOptions(): Promise<CateringCategory> {\n        return new Promise((resolve, reject) => {\n            const ref = this._dialog.open(PackageOptionsModalComponent, {\n                maxWidth: '95vw',\n                data: {\n                    item: new CateringCategory(this.item),\n                },\n            });\n            let done = false;\n            ref.componentInstance.event.subscribe((event) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    done = true;\n                    resolve(ref.componentInstance.item);\n                    ref.close();\n                }\n            });\n            ref.afterClosed().subscribe(() => {\n                /* istanbul ignore else */\n                if (!done) {\n                    reject();\n                }\n            });\n        });\n    }\n}\n","<div\n    class=\"catering-item\"\n    *ngIf=\"item\"\n    [class.subitem]=\"subitem\"\n    [class.package]=\"item.package\"\n    [attr.disabled]=\"disabled && !item.can_order_anytime\"\n>\n    <div\n        class=\"image\"\n        *ngIf=\"!subitem\"\n        [style.background-image]=\"'url(' + item.image_path + ')'\"\n    ></div>\n    <div class=\"details\">\n        <div class=\"name\">{{ item.name }}</div>\n        <div class=\"description\">{{ item.package ? '[Package] ' : '' }}{{ item.description }}</div>\n        <div class=\"options\">\n            <div class=\"option price mobile-only\" *ngIf=\"item.unit_price\">\n                {{ item.unit_price / 100 | currency: symbol }}\n            </div>\n            <div\n                class=\"option\"\n                *ngIf=\"item.package && item.items.length && !item.must_select\"\n                [matTooltip]=\"contents\"\n                i18n=\"Catering order item available options label\"\n            >\n                { item.items.length, plural, =1 { Contains {{ item.items.length }} item } other {\n                Contains {{ item.items.length }} items } }\n            </div>\n            <div\n                class=\"option\"\n                *ngIf=\"item.package && item.must_select && item.amount > 0\"\n                [matTooltip]=\"contents\"\n            >\n                {{ item.must_select }}\n                <span class=\"not-mobile\" i18n=\"Catering order item selected options label\">\n                    Selected\n                </span>\n            </div>\n            <button\n                mat-button\n                *ngIf=\"item.package && item.must_select && item.amount > 0\"\n                (tapped)=\"updatePackageOptions()\"\n                i18n=\"Catering order item options change action\"\n            >\n                Customise\n            </button>\n        </div>\n    </div>\n    <div class=\"option price not-mobile\" *ngIf=\"item.unit_price\">\n        {{ item.unit_price / 100 | currency: symbol }}\n    </div>\n    <a-counter\n        *ngIf=\"!item.items || item.package\"\n        [ngModel]=\"item.amount\"\n        (ngModelChange)=\"updateAmount($event)\"\n    ></a-counter>\n    <button\n        mat-icon-button\n        *ngIf=\"item.items && item.items.length && !item.package\"\n        (tapped)=\"show_children = !show_children\"\n    >\n        <app-icon\n            [icon]=\"{\n                class: 'material-icons',\n                content: show_children ? 'keyboard_arrow_up' : 'keyboard_arrow_down'\n            }\"\n        ></app-icon>\n    </button>\n</div>\n<div class=\"children\" [@show]=\"show_children ? 'show' : 'hide'\">\n    <a-catering-order-item\n        *ngFor=\"let sub_item of item.items\"\n        [subitem]=\"true\"\n        [symbol]=\"symbol\"\n        [item]=\"sub_item\"\n        [field]=\"field\"\n    ></a-catering-order-item>\n</div>\n","import { Component, OnInit, Input, SimpleChanges, Output, EventEmitter, OnChanges } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { FormGroup, FormControl } from '@angular/forms';\n\nimport { CateringOrder } from '../../../../../services/data/catering/catering-order.class';\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { Identity, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport {\n    BookingCateringConfirmModalComponent,\n    CateringConfirmModalData,\n} from '../../../overlays/catering-confirm-modal/catering-confirm-modal.component';\nimport { CateringMenuService } from 'src/app/services/data/catering/catering-menu.service';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nimport * as dayjs from 'dayjs';\nimport spacetime from 'spacetime';\n\n@Component({\n    selector: 'a-catering-order-details',\n    templateUrl: './order-details.component.html',\n    styleUrls: ['./order-details.component.scss'],\n})\nexport class BookingCateringOrderDetailsComponent extends BaseDirective implements OnChanges, OnInit {\n    /** Catering order to edit details of */\n    @Input() public order: CateringOrder;\n    /** Booking date */\n    @Input() public date: number;\n    /** Booking duration */\n    @Input() public duration: number;\n    /** Booking duration */\n    @Input() public space_list: Space[];\n    /** Whether booking is all day */\n    @Input() public all_day: boolean;\n    /** Emitter for changes to the catering order */\n    @Output() public event = new EventEmitter<CateringOrder>();\n    /** Form controls for order */\n    public form: FormGroup;\n    /** List of available catering item categories */\n    public category_list: CateringCategory[] = [];\n    /** Active category to display details for */\n    public active_category: CateringCategory;\n    /** List of available times for delivering catering */\n    public available_times: Identity[] = [];\n    /** Whether the menu is loading */\n    public loading: boolean;\n\n    /** Whether user is able to order from the currently selected space */\n    public get can_order(): boolean {\n        return (\n            (this.active_building.has_catering || this.category_list.length) &&\n            (!this.within_restricted_time || this.has_available_items)\n        );\n    }\n\n    /** Building associated with the selected space */\n    public get active_building(): Building {\n        const form_controls = (this.form || { controls: { location_id: { value: '' } } }).controls;\n        const space: Space = this._spaces.find(form_controls.location_id.value) || { level: {} } as any;\n        return (\n            this._org.buildings.find((bld) => space.level.building_id === bld.id) ||\n            ({ catering_restricted_from: 0 } as any)\n        );\n    }\n\n    /** Currency code for the active building */\n    public get symbol(): string {\n        return this.active_building.currency || 'USD';\n    }\n\n    /** Number of items in the order */\n    public get item_count(): number {\n        return this.form\n            ? this.form.controls.items.value.reduce((total, item) => total + item.amount, 0)\n            : 0;\n    }\n\n    /** Whether booking time is outside of catering hours */\n    public get out_of_hours(): boolean {\n        return this.form.controls.delivery_time.value < 0;\n    }\n\n    /** Whether booking is with the restricted ordering period */\n    public get within_restricted_time(): boolean {\n        const building = this.active_building;\n        /* istanbul ignore else */\n        if (!building.catering_restricted_from || building.catering_restricted_from <= 0) {\n            return false;\n        }\n        const date = dayjs();\n        const restricted = dayjs(this.date).subtract(building.catering_restricted_from, 'h');\n        return date.isAfter(restricted, 's');\n    }\n\n    /** Whether items are available for order at anytime */\n    public get has_available_items(): boolean {\n        return this.category_list.reduce(\n            (available, category) => available || category.can_order_anytime,\n            false\n        );\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _menu: CateringMenuService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.initForm();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.date || changes.duration) {\n            this.generateAvailableTimes();\n            /* istanbul ignore else */\n            if (\n                this.form &&\n                !this.available_times.find((time) => time.id === this.form.controls.delivery_time.value)\n            ) {\n                this.form.controls.delivery_time.setValue(this.available_times[0].id);\n            }\n        }\n        /* istanbul ignore else */\n        if (changes.space_list) {\n            /* istanbul ignore else */\n            if (this.form && this.space_list && !this.form.controls.location_id.value) {\n                this.form.controls.location_id.setValue(this.space_list[0].id);\n            }\n        }\n        /* istanbul ignore else */\n        if (changes.order && this.order) {\n            this.initForm();\n        }\n    }\n\n    public initForm() {\n        this.loadMenu();\n        this.form = new FormGroup({\n            id: new FormControl(this.order.id),\n            booking_date: new FormControl(\n                this.all_day ? dayjs(this.date).startOf('d').valueOf() : this.date\n            ),\n            location_id: new FormControl(this.order.location_id || this.space_list[0].id),\n            delivery_time: new FormControl(this.order.delivery_time || this.available_times[0].id),\n            items: new FormControl(this.order.items.map((item) => new CateringItem(item))),\n        });\n        this.generateAvailableTimes();\n        this.subscription(\n            'space_change',\n            this.form.controls.location_id.valueChanges.subscribe(() => {\n                this.generateAvailableTimes();\n                if (\n                    !this.available_times.find((time) => time.id === this.form.controls.delivery_time.value)\n                ) {\n                    this.form.controls.delivery_time.setValue(this.available_times[0].id);\n                }\n                this.form.controls.items.setValue([]);\n                this.loadMenu();\n            })\n        );\n\n        if (\n            this.form &&\n            !this.available_times.find((time) => time.id === this.form.controls.delivery_time.value)\n        ) {\n            this.form.controls.delivery_time.setValue(this.available_times[0].id);\n        }\n    }\n\n    public confirmOrder() {\n        const ref = this._dialog.open<\n            BookingCateringConfirmModalComponent,\n            CateringConfirmModalData\n        >(BookingCateringConfirmModalComponent, {\n            maxWidth: '95vw',\n            data: {\n                date: this.date,\n                form: this.form,\n            },\n        });\n        this.subscription(\n            'confirm_event',\n            ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    const order = new CateringOrder(this.form.value);\n                    this.event.emit(order);\n                    ref.close();\n                }\n            })\n        );\n        ref.afterClosed().subscribe(() => this.unsub('confirm_event'));\n    }\n\n    private loadMenu() {\n        const space: string = this.form ? this.form.controls.location_id.value : '';\n        /* istanbul ignore else */\n        if (!space) {\n            return;\n        }\n        this.loading = true;\n        this._menu.query({ room_id: space }).then(\n            (list) => {\n                this.loading = false;\n                this.category_list = list.map((i) => new CateringCategory(i));\n            },\n            () => (this.loading = false)\n        );\n    }\n\n    /** Generate a list of available delivery times for the given booking time */\n    private generateAvailableTimes() {\n        const start_date = this.all_day ? dayjs(this.date).startOf('d') : dayjs(this.date);\n        let { start, end } = this.generateStartAndEndTimes();\n        start = start.minute(Math.ceil(start.minute() / 5) * 5);\n        this.available_times = [];\n        while (start.isBefore(end, 'm')) {\n            this.available_times.push({\n                id: Math.abs(start_date.diff(start, 'm')),\n                name: start.format('h:mm A'),\n            });\n            start = start.add(5, 'm');\n        }\n        /* istanbul ignore else */\n        if (this.available_times.length === 0) {\n            this.available_times.push({ id: -1, name: 'Out of hours' });\n        }\n    }\n\n    private generateStartAndEndTimes(): { start: dayjs.Dayjs; end: dayjs.Dayjs } {\n        let start = dayjs(this.date);\n        if (start.isBefore(dayjs(), 'm')) {\n            const now = dayjs();\n            start = now.minute(Math.ceil(now.minute() / 5) * 5);\n        }\n        let end = start.add(this.duration, 'm');\n        let building_time = spacetime(start.toDate());\n        const space_id: string = this.form ? this.form.controls.location_id.value : '';\n        const space = this._spaces.find(space_id);\n        if (space) {\n            const building = this._org.buildings.find((bld) => bld.id === space.level.building_id);\n            if (building && building.timezone) {\n                building_time = building_time.goto(building.timezone);\n            }\n        }\n        building_time = building_time.hour(7);\n        const as_dayjs = dayjs(building_time.toLocalDate()).minute(0);\n        if (this.all_day || start.isBefore(as_dayjs, 'm')) {\n            start = as_dayjs;\n            end = start.add(13, 'h');\n        } else {\n            const possible_end = as_dayjs.hour(20);\n            if (end.isAfter(possible_end)) {\n                end = possible_end;\n            }\n        }\n        return { start, end };\n    }\n}\n","<div class=\"catering order-details\">\n    <div class=\"header\" *ngIf=\"form\">\n        <form [formGroup]=\"form\">\n            <div class=\"field\">\n                <label i18n=\"Catering order location label\">Deliver to:</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select formControlName=\"location_id\">\n                        <mat-option *ngFor=\"let space of space_list\" [value]=\"space.id\">\n                            {{ space.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"start\" i18n=\"Catering order delivery time label\">At:</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select name=\"start\" formControlName=\"delivery_time\">\n                        <mat-option *ngFor=\"let time of available_times\" [value]=\"time.id\">\n                            {{ time.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </form>\n    </div>\n    <div class=\"body\" *ngIf=\"!loading; else load_state\">\n        <ng-container *ngIf=\"!active_category; else category_display\">\n            <div class=\"contents\" *ngIf=\"can_order && category_list.length; else empty_state\">\n                <button\n                    mat-button\n                    class=\"category\"\n                    *ngFor=\"let item of category_list\"\n                    [style.background-image]=\"'url(' + item.image_path + ')'\"\n                    [disabled]=\"within_restricted_time && !item.can_order_anytime\"\n                    (tapped)=\"active_category = item\"\n                >\n                    <div class=\"overlay\"></div>\n                    <div class=\"name\">{{ item.name }}</div>\n                </button>\n            </div>\n        </ng-container>\n    </div>\n    <div class=\"footer\">\n        <button mat-button class=\"inverse\" (tapped)=\"event.emit()\" i18n=\"Catering order cancel action\">Back</button>\n        <button mat-button name=\"confirm\" [disabled]=\"!item_count || out_of_hours\" (tapped)=\"confirmOrder()\" i18n=\"Catering order confirm action\">\n            Confirm Order({{ item_count || '0' }})\n        </button>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div class=\"empty-state center\">\n        <div class=\"icon\">\n            <img alt=\"No Catering Available\" src=\"assets/img/no-catering.svg\" />\n        </div>\n        <p i18n=\"Catering order unavailable\">\n            Catering is <span class=\"bold\">not available</span> for this booking.<br />\n            Catering must be ordered within business hours\n            <span *ngIf=\"active_building?.catering_restricted_from\" class=\"bold\">\n                at least {{ active_building?.catering_restricted_from || '0' }} hours in advance for\n                meetings\n            </span>\n            at {{ active_building?.name }}.\n        </p>\n    </div>\n</ng-template>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"48\"></mat-spinner>\n            </div>\n            <div class=\"text\" i18n=\"Catering order loading label\">Loading menu for {{ active_building?.name }}...</div>\n        </div>\n    </div>\n</ng-template>\n<ng-template #category_display>\n    <a-category-display\n        [category]=\"active_category\"\n        [symbol]=\"symbol\"\n        [items]=\"form.controls.items\"\n        [disabled]=\"within_restricted_time\"\n        (close)=\"active_category = null\"\n    ></a-category-display>\n</ng-template>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'catering-order-list-item',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss'],\n})\nexport class CateringOrderListItemComponent {\n    /** Catering order to display */\n    @Input() order: CateringOrder;\n    /** Selected datetime */\n    @Input() date: number;\n    /** Emitter for edit events */\n    @Output() public edit = new EventEmitter<void>();\n    /** Emitter for delete events */\n    @Output() public delete = new EventEmitter<void>();\n\n    /** Space selected for delivery */\n    public get space(): string {\n        const space = this._spaces.find((this.order || {}).location_id) || { name: '' };\n        return space.name || '<No Location>';\n    }\n    /** Delivery time for the order */\n    public get delivery_time(): string {\n        /* istanbul ignore else */\n        if (!this.order) {\n            return '<Meeting Start>';\n        }\n        const date = dayjs(this.order.booking_date).add(\n            (this.order.changes ? this.order.delivery_time : null) || this.order.delivery_time,\n            'm'\n        );\n        return date.format('h:mm A');\n    }\n\n    /** Total cost of the order */\n    public get order_cost(): number {\n        const items = (this.order || { items: [] }).items as any;\n        return items.reduce((amount, item) => amount + item.amount * item.unit_price, 0);\n    }\n\n    /** Number of items in the order */\n    public get item_count(): number {\n        const items = (this.order || { items: [] }).items as any;\n        return items.reduce((amount, item) => amount + item.amount, 0);\n    }\n\n    /** Currency symbol for the selected space */\n    public get symbol(): string {\n        const space = this._spaces.find((this.order || {}).location_id);\n        /* istanbul ignore else */\n        if (!space || !space.level) {\n            return 'USD';\n        }\n        const building = this._org.buildings.find((bld) => bld.id === space.level.building_id) || {\n            currency: 'USD',\n        };\n        return building.currency;\n    }\n\n    constructor(private _spaces: SpacesService, private _org: OrganisationService) {}\n}\n","<div class=\"details\" i18n=\"Catering order item delivery details\">\n    Deliver to <span>{{ space }}</span> at <span>{{ delivery_time }}</span>\n</div>\n<div class=\"group\">\n    <div class=\"cost\">\n        {{ item_count }}\n        <span i18n=\"Items\">{ item_count, plural, =1 { item } other { items } }</span>\n    </div>\n    <div class=\"cost\">{{ order_cost / 100 | currency: symbol }}</div>\n</div>\n<div class=\"actions\">\n    <button mat-icon-button name=\"edit\" (tapped)=\"edit.emit()\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'edit' }\"></app-icon>\n    </button>\n    <button mat-icon-button name=\"delete\" class=\"inverse\" (tapped)=\"delete.emit()\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'delete' }\"></app-icon>\n    </button>\n</div>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { CateringOrder } from '../../../../../services/data/catering/catering-order.class';\nimport { BookingFlowEvent } from '../../../bookings.component';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-catering-order-list',\n    templateUrl: './order-list.component.html',\n    styleUrls: ['./order-list.component.scss']\n})\nexport class BookingCateringOrderListComponent {\n    /** Form field for storing catering orders */\n    @Input() public catering: FormControl;\n    /** Selected datetime for the booking */\n    @Input() public date: number;\n    /** Whether booking is all day */\n    @Input() public all_day: boolean;\n    /** Emitter for flow update events */\n    @Output() public event = new EventEmitter<BookingFlowEvent>();\n    /** Emiiter for order events */\n    @Output() public order = new EventEmitter<CateringOrder>();\n\n    /** List of orders in the booking */\n    public get orders(): CateringOrder[] {\n        /* istanbul ignore else */\n        if (!this.catering) {\n            return [];\n        }\n        const orders = this.catering.value;\n        orders.forEach(\n            order =>\n                (order.booking_date = this.all_day\n                    ? dayjs(this.date)\n                          .startOf('d')\n                          .valueOf()\n                    : this.date)\n        );\n        return orders;\n    }\n\n    /** Emit event for a new catering order */\n    public newOrder() {\n        this.order.emit();\n    }\n\n    /** Emit event for editing existing order */\n    public editOrder(order: CateringOrder) {\n        this.order.emit(order);\n    }\n\n    /** Remove order from the list */\n    public deleteOrder(order: CateringOrder) {\n        const orders = this.orders;\n        const index = orders.findIndex(an_order => order.id === an_order.id);\n        /* istanbul ignore else */\n        if (index >= 0) {\n            orders.splice(index, 1);\n            this.catering.setValue(orders);\n        }\n    }\n\n    /**\n     * Proceed to the next step in the space booking flow\n     */\n    public next(): void {\n        this.event.emit({ type: 'next', step: 'catering' });\n    }\n\n    /** Move flow to previous step */\n    public previous(): void {\n        this.event.emit({ type: 'previous', step: 'catering' });\n    }\n}\n","<div class=\"catering order-list\">\n    <div class=\"header\">\n        <h3 i18n=\"Catering order list header\">Catering Orders</h3>\n    </div>\n    <div class=\"body\">\n        <ng-container *ngIf=\"orders && orders.length; else empty_state\">\n            <div class=\"list\">\n                <catering-order-list-item\n                    *ngFor=\"let order of orders\"\n                    [order]=\"order\"\n                    [date]=\"date\"\n                    (edit)=\"editOrder(order)\"\n                    (delete)=\"deleteOrder(order)\"\n                ></catering-order-list-item>\n            </div>\n            <button mat-button name=\"new\" (tapped)=\"newOrder()\" i18n=\"Catering order list add action\">\n                Add Order\n            </button>\n        </ng-container>\n    </div>\n    <div class=\"footer\">\n        <button\n            mat-button\n            class=\"inverse\"\n            name=\"previous\"\n            (tapped)=\"previous()\"\n            i18n=\"Catering order list cancel action\"\n        >\n            Back\n        </button>\n        <button mat-button name=\"next\" (tapped)=\"next()\" i18n=\"Catering order list continue action\">\n            Next\n        </button>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\" i18n=\"Catering order list empty label\">No catering orders</div>\n        <button mat-button name=\"new\" (tapped)=\"newOrder()\" i18n=\"Catering order list add action\">\n            Add Order\n        </button>\n    </div>\n</ng-template>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\n\nimport * as dayjs from 'dayjs';\nimport { ANIMATION_SHOW_CONTRACT_EXPAND } from 'src/app/shared/globals/angular-animations';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\n@Component({\n    selector: 'booking-space-filters',\n    templateUrl: './filters.component.html',\n    styleUrls: ['./filters.component.scss'],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND]\n})\nexport class BookingSpaceFiltersComponent extends BaseDirective implements OnInit {\n    /** Date selected for the booking */\n    @Input() public date: FormControl;\n    /** List of location IDs being filtered on */\n    @Input() public locations: string[] = [];\n    /** Emitter for changes to location filter */\n    @Output() public locationsChange = new EventEmitter<string[]>();\n    /** List of available buildings */\n    public building_list: Building[] = [];\n    /** Whether to show the location list */\n    public show_locations: boolean;\n\n    /** Whether active date is current day */\n    public get is_today(): boolean {\n        const date = dayjs(this.date.value);\n        return dayjs().isSame(date, 'd');\n    }\n\n    /** Display string for the selected date */\n    public get date_display(): string {\n        const date = dayjs(this.date.value);\n        return this.is_today ? 'Today' : date.format('DD MMM YYYY');\n    }\n\n    /** List of filtered location */\n    public get location_list(): Building[] {\n        return this.locations.map(id => this.building_list.find(bld => bld.id === id));\n    }\n\n    constructor(private _org: OrganisationService) {\n        super();\n    }\n\n    public changeDate(amount: number) {\n        let date = dayjs(this.date.value).add(amount, 'd');\n        const now = dayjs().startOf('m');\n        if (date.isBefore(now, 's')) {\n            date = now;\n        }\n        this.date.setValue(date.valueOf());\n    }\n\n    public ngOnInit(): void {\n        this.loadLocations();\n        this.subscription('buildings', this._org.listen('buildings').subscribe((bld_list) => {\n            this.building_list = bld_list;\n        }));\n    }\n\n    /**\n     * Update location filter to include the given building\n     * @param building Building to add\n     */\n    public addLocationFilter(building: Building): void {\n        this.locations.push(building.id);\n        this.locations = unique(this.locations);\n        this.locationsChange.emit(this.locations);\n        this.storeLocations();\n    }\n\n    /**\n     * Remove location from the active filters\n     * @param building Building to remove\n     */\n    public removeLocationFilter(building: Building) {\n        this.locations.splice(\n            this.locations.findIndex(id => building.id === id),\n            1\n        );\n        this.locationsChange.emit([...this.locations]);\n        this.storeLocations();\n    }\n\n    private loadLocations() {\n        if (localStorage) {\n            const filters = localStorage.getItem('BOOKING.filters');\n            if (!filters) { return; }\n            try {\n                this.locations = JSON.parse(filters);\n            } catch(e) {\n                this.locations = [];\n            }\n        }\n        this.locationsChange.emit(this.locations);\n    }\n\n    private storeLocations() {\n        if (localStorage) {\n            localStorage.setItem('BOOKING.filters', JSON.stringify(this.locations));\n        }\n    }\n}\n","<div class=\"space-filters\" *ngIf=\"date\">\n    <div class=\"actions\">\n        <div class=\"date\">\n            <button mat-icon-button [disabled]=\"is_today\" (tapped)=\"changeDate(-1)\">\n                <app-icon\n                    [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_left' }\"\n                ></app-icon>\n            </button>\n            <div class=\"text\">{{ date_display }}</div>\n            <button mat-icon-button (tapped)=\"changeDate(1)\">\n                <app-icon\n                    [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_right' }\"\n                ></app-icon>\n            </button>\n        </div>\n        <div class=\"location-list\" [matMenuTriggerFor]=\"locationMenu\">\n            <div class=\"inner\" (tapped)=\"show_locations = !show_locations\">\n                <img src=\"assets/img/location-img.svg\" />\n                <div class=\"text\" i18n=\"Booking space filters locations label\">\n                    Select locations(s)\n                </div>\n                <app-icon\n                    [icon]=\"{\n                        class: 'material-icons',\n                        content: 'keyboard_arrow_' + (show_locations ? 'up' : 'down')\n                    }\"\n                ></app-icon>\n            </div>\n        </div>\n    </div>\n    <div class=\"filters\" *ngIf=\"location_list && location_list.length\">\n        <mat-chip-list aria-label=\"Location Filters\">\n            <mat-chip\n                *ngFor=\"let building of location_list\"\n                [id]=\"building.id\"\n                color=\"primary\"\n                [removable]=\"true\"\n                (removed)=\"removeLocationFilter(building)\"\n            >\n                {{ building.name }}\n                <app-icon\n                    matChipRemove\n                    [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"\n                ></app-icon>\n            </mat-chip>\n        </mat-chip-list>\n    </div>\n</div>\n<mat-menu #locationMenu=\"matMenu\" class=\"dark-mode\">\n    <button mat-menu-item (click)=\"$event.stopPropagation()\" *ngFor=\"let building of building_list\">\n        <mat-checkbox\n            (change)=\"$event.checked ? addLocationFilter(building) : removeLocationFilter(building)\"\n        >\n            <div class=\"building-name\">\n                <div class=\"code\">{{ building.code }}</div>\n                <div class=\"name\">{{ building.name }}</div>\n                <div class=\"address\">{{ building.address }}</div>\n            </div>\n        </mat-checkbox>\n    </button>\n</mat-menu>\n","import {\n    Component,\n    OnInit,\n    Input,\n    SimpleChanges,\n    EventEmitter,\n    Output,\n    OnChanges\n} from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { debounceTime, distinctUntilChanged, switchMap, catchError, map, first } from 'rxjs/operators';\nimport { Observable, of, Subject } from 'rxjs';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Space, ISpaceAvailabilityOptions } from 'src/app/services/data/spaces/space.class';\nimport { BookingFlowEvent } from '../../bookings.component';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'booking-find-space',\n    templateUrl: './find-space.component.html',\n    styleUrls: ['./find-space.component.scss']\n})\nexport class BookingFindSpaceComponent extends BaseDirective implements OnInit, OnChanges {\n    /** Form control for setting the active space */\n    @Input() public spaces: FormControl;\n    /** Form group for booking */\n    @Input() public form: FormGroup;\n    /** Emitter for flow update events */\n    @Output() public event = new EventEmitter<BookingFlowEvent>();\n\n    /** List of spaces available during the required period */\n    public space_list: Space[] = [];\n    /** List of users from an API search */\n    public search_results$: Observable<Space[]>;\n    /** Whether space list is loading */\n    public loading: boolean;\n    /** List of zones to filter the spaces on */\n    public zone_ids: string[] = [];\n    /** Subject holding the value of the search */\n    public readonly change$ = new Subject<string>();\n\n    /**  Whether multiple spaces are allowed to be selected */\n    public get multiple(): boolean {\n        return this._service.setting('app.booking.multiple_spaces');\n    }\n\n    constructor(private _service: ApplicationService, private _spaces: SpacesService, private _org: OrganisationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._spaces.initialised.pipe(first(_ => _)).subscribe(() => {\n            // Listen for input changes\n            this.search_results$ = this.change$.pipe(\n                debounceTime(400),\n                distinctUntilChanged(),\n                switchMap(_ => {\n                    this.loading = true;\n                    const recurrence = this.form.controls.recurrence ? this.form.controls.recurrence.value : null;\n                    const recurrence_properties = recurrence && recurrence.period && recurrence.period !== 'None' ? {\n                        recurr_period: (recurrence.period || '').toLowerCase(),\n                        recurr_end: recurrence.end\n                    } : {};\n                    const query: ISpaceAvailabilityOptions = {\n                        date: this.form.controls.date.value,\n                        duration: this.form.controls.duration.value,\n                        zone_ids: this._org.building.id,\n                        bookable: true,\n                        ...recurrence_properties\n                    };\n                    /* istanbul ignore else */\n                    if (this.zone_ids && this.zone_ids.length) {\n                        query.zone_ids = this.zone_ids.join(',');\n                    }\n                    return this._spaces.available(query);\n                }),\n                catchError(_ => of([])),\n                map((list: Space[]) => {\n                    this.loading = false;\n                    return list;\n                })\n            );\n            // Process API results\n            this.subscription(\n                'search_results',\n                this.search_results$.subscribe(list => {\n                    this.space_list = list;\n                    this.space_list.sort((a, b) => this.sort(a, b));\n                })\n            );\n            this.change$.next('');\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.form) {\n            const onChange = _ => this.change$.next(_);\n            /* istanbul ignore else */\n            if (this.form.controls.date) {\n                this.subscription(\n                    'date_field',\n                    this.form.controls.date.valueChanges.subscribe(onChange)\n                );\n            }\n            /* istanbul ignore else */\n            if (this.form.controls.duration) {\n                this.subscription(\n                    'duration_field',\n                    this.form.controls.duration.valueChanges.subscribe(onChange)\n                );\n            }\n        }\n    }\n\n    /**\n     * Update the selected space list\n     * @param space Space to add/toggle in the selected list\n     */\n    public selectSpace(space: Space) {\n        if (this.multiple) {\n            const list = this.spaces.value;\n            if (list.find(item => item.id === space.id)) {\n                this.spaces.setValue(list.filter(item => item.id !== space.id));\n            } else {\n                this.spaces.setValue(list.concat([space]));\n            }\n        } else {\n            this.spaces.setValue([space]);\n            this.event.emit({ type: 'next', step: 'search' });\n        }\n    }\n\n    /**\n     * Proceed to the next step in the space booking flow\n     */\n    public next(): void {\n        this.event.emit({ type: 'next', step: 'search' });\n    }\n\n    /** Move flow to previous step */\n    public previous(): void {\n        this.event.emit({ type: 'previous', step: 'search' });\n    }\n\n    /**\n     * Compare two spaces to determine order\n     * @param space_a\n     * @param space_b\n     */\n    private sort(space_a: Space, space_b: Space) {\n        const bld = this._org.buildings.find(bld => bld.id === space_a.level.building_id);\n        const bld_b = this._org.buildings.find(bld => bld.id === space_b.level.building_id);\n        if (bld && bld !== bld_b) {\n            return (bld.name || '').localeCompare(bld_b.name || '');\n        }\n        const sort_order = (bld.sort_order ? [...bld.sort_order] : []).reverse();\n        for (const zone_id of sort_order) {\n            if (zone_id === '*') { continue; }\n            const a_has_zone = space_a.zones.indexOf(zone_id) >= 0;\n            const b_has_zone = space_b.zones.indexOf(zone_id) >= 0;\n            if (a_has_zone && !b_has_zone) {\n                return 1;\n            } else if (b_has_zone && !a_has_zone) {\n                return -1;\n            }\n        }\n        return (space_a.name || '').localeCompare(space_b.name || '');\n    }\n\n}\n","<div class=\"find-space\">\n    <div class=\"background\"></div>\n    <div class=\"header\">\n        <booking-space-filters\n            [date]=\"form.controls.date\"\n            [(locations)]=\"zone_ids\"\n            (locationsChange)=\"change$.next($event)\"\n        ></booking-space-filters>\n    </div>\n    <ng-container *ngIf=\"!loading; else load_state\">\n        <cdk-virtual-scroll-viewport\n            *ngIf=\"space_list && space_list.length; else empty_state\"\n            [itemSize]=\"130\"\n        >\n            <ng-container *cdkVirtualFor=\"let space of space_list\">\n                <a-booking-space-item\n                    [form]=\"form\"\n                    [space]=\"space\"\n                    [multi]=\"multiple\"\n                    (select)=\"selectSpace(space)\"\n                ></a-booking-space-item>\n            </ng-container>\n        </cdk-virtual-scroll-viewport>\n    </ng-container>\n    <div class=\"footer\">\n        <div class=\"box\">\n            <button\n                mat-button\n                class=\"inverse\"\n                name=\"previous\"\n                (tapped)=\"previous()\"\n                i18n=\"Booking spaces cancel action\"\n            >\n                Back\n            </button>\n            <button\n                mat-button\n                *ngIf=\"multiple\"\n                name=\"next\"\n                [disabled]=\"!spaces.value || !spaces.value.length\"\n                (tapped)=\"next()\"\n                i18n=\"Booking spaces continue action\"\n            >\n                Next\n            </button>\n        </div>\n    </div>\n</div>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"48\"></mat-spinner>\n            </div>\n            <div class=\"text\" i18n=\"Booking spaces loading label\">\n                Checking space availability...\n            </div>\n        </div>\n    </div>\n</ng-template>\n<ng-template #empty_state>\n    <div class=\"body\">\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n            </div>\n            <div class=\"text\" i18n=\"Booking spaces empty label\">\n                No spaces available for the selected time\n            </div>\n        </div>\n    </div>\n</ng-template>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { FormGroup } from '@angular/forms';\n\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { ViewRoomModalComponent } from 'src/app/overlays/view-room-modal/view-room-modal.component';\nimport {\n    RecurrenceSpacesModalComponent,\n    RecurrenceSpacesModalData,\n} from '../../../overlays/recurrence-spaces-modal/recurrence-spaces-modal.component';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport {\n    BookingRecurrenceDetails,\n    BookingRecurrenceSpaceDetails,\n} from 'src/app/services/data/bookings/booking.interfaces';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: 'a-booking-space-item',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss'],\n})\nexport class BookingSpaceItemComponent extends BaseDirective {\n    /** Space to display */\n    @Input() public space: Space;\n    /** Form fields for booking */\n    @Input() public form: FormGroup;\n    /** Whether multiple spaces are able to be selected */\n    @Input() public multi: boolean;\n    /** Emitter for select actions on the */\n    @Output() public select = new EventEmitter<void>();\n\n    /** Whether space image should be displayed */\n    public get show_image() {\n        return this._service.setting('app.space_display.show_images');\n    }\n\n    /** Whether this space is selected */\n    public get selected(): boolean {\n        /* istanbul ignore else */\n        if (!this.form && this.space) {\n            return false;\n        }\n        return (\n            this.form.controls.space_list &&\n            !!(this.form.controls.space_list.value || []).find(\n                (space) => space.id === this.space.id\n            )\n        );\n    }\n\n    /** Whether space is booked by request */\n    public get is_request(): boolean {\n        /* istanbul ignore else */\n        if (!this.form) {\n            return false;\n        }\n        return this.space.byRequest({\n            date: this.form.controls.date.value,\n            duration: this.form.controls.duration.value,\n            host: this.form.controls.organiser.value || this._users.current,\n        });\n    }\n\n    public get availability(): string {\n        const count = this.space.recurr_available.reduce(\n            (count, ocurrence) => count + (ocurrence.available ? 1 : 0),\n            0\n        );\n        return count >= this.space.recurr_available.length\n            ? 'all'\n            : `${count} of ${this.space.recurr_available.length}`;\n    }\n\n    /** Display location of the space */\n    public get location(): string {\n        /* istanbul ignore else */\n        if (!this.space) {\n            return 'Unable to determine location';\n        }\n        const level = this.space.level;\n        const bld = this._org.buildings.find((building) => building.id === level.building_id);\n        return `${bld ? bld.name + ', ' : ''}${level.name}`;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _org: OrganisationService,\n        private _users: UsersService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    /**\n     * Open the modal to show the location of a space\n     * @param space Space to show the location\n     */\n    public locate() {\n        this._dialog.open(ViewRoomModalComponent, {\n            width: 'auto',\n            height: 'auto',\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: { space: this.space },\n        });\n    }\n\n    public selectSpace() {\n        if (!this.space.recurr_available || !this.space.recurr_available.length || this.selected) {\n            this.select.emit();\n        } else {\n            const ref = this._dialog.open<\n                RecurrenceSpacesModalComponent,\n                RecurrenceSpacesModalData\n            >(RecurrenceSpacesModalComponent, {\n                width: 'auto',\n                height: 'auto',\n                maxWidth: '95vw',\n                maxHeight: '95vh',\n                data: {\n                    space: this.space,\n                    duration: this.form.controls.duration.value,\n                    host: this.form.controls.organiser.value,\n                    conflicts: this.form.controls.recurrence.value.conflicts || [],\n                },\n            });\n            this.subscription(\n                'recurr_conflicts',\n                ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                    /* istanbul ignore else */\n                    if (event.reason === 'done') {\n                        const recurr: BookingRecurrenceDetails = this.form.controls.recurrence\n                            .value;\n                        const conflict_list: BookingRecurrenceSpaceDetails[] = event.metadata.filter(i => i.space);\n                        this.form.controls.recurrence.setValue({\n                            ...recurr,\n                            conflicts: conflict_list,\n                        });\n                        this.form.controls.space_list.setValue([]);\n                        this.select.emit();\n                        ref.close();\n                    }\n                })\n            );\n        }\n    }\n}\n","<div class=\"space-details\" *ngIf=\"space\" [class.with-image]=\"show_image\">\n    <div class=\"details\">\n        <div\n            class=\"image\"\n            *ngIf=\"space.image\"\n            [style.background-image]=\"'url(' + space.image + ')'\"\n        ></div>\n        <div class=\"overlay\"></div>\n        <div class=\"name\">{{ space.name }}</div>\n        <div class=\"info\">\n            <div class=\"location\">{{ location }}</div>\n            <div class=\"capacity\">\n                <app-icon\n                    [icon]=\"{ type: 'icon', class: 'material-icons', content: 'account_circle' }\"\n                ></app-icon>\n                {{ space.capacity || '0' }}\n            </div>\n        </div>\n        <div\n            class=\"info recurr\"\n            *ngIf=\"space.recurr_available && space.recurr_available.length\"\n            i18n=\"Booking space availability label\"\n        >\n            Available for&nbsp;<span>{{ availability }}</span\n            >&nbsp;meeting ocurrences\n        </div>\n    </div>\n    <div class=\"actions\">\n        <button\n            mat-button\n            name=\"select\"\n            [class.inverse]=\"multi && !selected\"\n            [class.request]=\"is_request\"\n            (tapped)=\"selectSpace()\"\n        >\n            {{ multi ? (selected ? 'Remove' : is_request ? 'Request' : 'Select') : is_request ? 'Request' : 'Book' }}\n        </button>\n        <button mat-button class=\"inverse\" name=\"locate\" (tapped)=\"locate()\" i18n=\"Booking space locate action\">\n            Map\n        </button>\n    </div>\n</div>\n","import { Component, Input, Output, EventEmitter, ViewChild, ElementRef } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { BookingFlowEvent } from '../../bookings.component';\n\n@Component({\n    selector: 'booking-spaces-form',\n    templateUrl: './form.component.html',\n    styleUrls: ['./form.component.scss']\n})\nexport class BookingSpaceFlowFormComponent {\n    /** Booking form fields */\n    @Input() public form: FormGroup;\n    /** Whether form is not the first page in the flow */\n    @Input() public can_return: boolean = false;\n    /** Emitter for flow update events */\n    @Output() public event = new EventEmitter<BookingFlowEvent>();\n\n    @ViewChild('container', { static: true }) private container: ElementRef<HTMLDivElement>;\n\n    /** Move flow to next step */\n    public next(): void {\n        this.form.markAllAsTouched();\n        this.form.controls.date.updateValueAndValidity();\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            this.event.emit({ type: 'next', step: 'form' });\n        } else if (this.container) {\n            this.container.nativeElement.scrollIntoView({\n                behavior: 'smooth',\n                block: 'start',\n                inline: 'nearest'\n            });\n        }\n    }\n\n    /** Move flow to previous step */\n    public previous(): void {\n        this.event.emit({ type: 'previous', step: 'form' });\n    }\n\n    /** Reset form to initial state */\n    public resetForm(): void {\n        this.event.emit({ type: 'reset', step: 'form' });\n    }\n}\n","<div class=\"booking-form\" #container>\n    <div class=\"header\">\n        <h3 i18n=\"Booking form header\">\n            {{ form.controls.id && form.controls.id.value ? 'Edit' : 'New' }} Booking\n        </h3>\n        <button mat-icon-button name=\"reset\" (tapped)=\"resetForm()\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'refresh' }\"></app-icon>\n        </button>\n    </div>\n    <form [formGroup]=\"form\" (ngSubmit)=\"next()\">\n        <div class=\"body\">\n            <a-booking-form [form]=\"form\"></a-booking-form>\n        </div>\n        <div class=\"footer\">\n            <button\n                mat-button\n                type=\"button\"\n                name=\"return\"\n                *ngIf=\"can_return\"\n                class=\"inverse\"\n                (tapped)=\"previous()\"\n                i18n=\"Booking form cancel action\"\n            >\n                Back\n            </button>\n            <button mat-button type=\"submit\" name=\"next\" i18n=\"Booking form continue action\">\n                Next\n            </button>\n        </div>\n    </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { generateBookingForm } from 'src/app/services/data/bookings/booking.utilities';\nimport {\n    AvailableBookingFields,\n    BookingFlowSettings,\n} from 'src/app/shared/utilities/settings.interfaces';\nimport { HashMap, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { BookingFlowEvent } from '../bookings.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { BookingConfirmComponent } from '../overlays/booking-confirm/booking-confirm.component';\nimport { first } from 'rxjs/operators';\nimport {\n    RequirementDetailsModalComponent,\n    RequirementDetailsModalData,\n} from '../overlays/requirement-details-modal/requirement-details-modal.component';\nimport {\n    CateringDetailsModalComponent,\n    CateringDetailsModalData,\n} from '../overlays/catering-details-modal/catering-details-modal.component';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\n@Component({\n    selector: 'booking-space-flow',\n    templateUrl: './space-flow.component.html',\n    styleUrls: ['./space-flow.component.scss'],\n})\nexport class BookingSpaceFlowComponent extends BaseDirective implements OnInit {\n    /** Form fields */\n    public form: FormGroup;\n    /** Form data store */\n    public booking: Booking;\n    /** Step of the booking flow that is currently active */\n    public flow_step: string;\n    /** Application settings for bookings */\n    public settings: BookingFlowSettings;\n\n    /** List of available booking fields for the form */\n    public get available_fields(): AvailableBookingFields[] {\n        return this.settings.show_fields || [];\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _spaces: SpacesService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._spaces.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.settings = this._service.setting('app.booking');\n            this.subscription(\n                'route.params',\n                this._route.paramMap.subscribe((params) => {\n                    /* istanbul ignore else */\n                    if (params.has('step')) {\n                        this.flow_step = params.get('step');\n                    }\n                })\n            );\n            this.loadFormData();\n        });\n    }\n\n    /**\n     * Handle events from child components\n     * @param event Booking flow event\n     */\n    public handleFlowEvent(event: BookingFlowEvent) {\n        switch (event.type) {\n            case 'next':\n                this.toNextFlowStep(event);\n                break;\n            case 'previous':\n                this.toPreviousFlowStep(event);\n                break;\n            case 'reset':\n                this.resetForm();\n                break;\n        }\n    }\n\n    private toNextFlowStep(event: BookingFlowEvent) {\n        const space_list = this.form.controls.space_list.value;\n        switch (event.step) {\n            case 'search':\n                if (\n                    space_list &&\n                    space_list.length &&\n                    this.settings.multiple_spaces &&\n                    (!event.metadata || !event.metadata.ref || event.metadata.ref !== 'equipment')\n                ) {\n                    this.openEquipmentDetailsModal();\n                } else {\n                    if (this.form.controls.has_catering && this.form.controls.has_catering.value) {\n                        this.navigate('catering');\n                    } else {\n                        this.navigate('form');\n                        this.confirmBooking();\n                    }\n                }\n                break;\n            case 'catering':\n                const order_list = this.form.controls.catering.value;\n                if (\n                    order_list &&\n                    order_list.length &&\n                    (!event.metadata || !event.metadata.ref || event.metadata.ref !== 'details')\n                ) {\n                    this.openCateringDetailsModal();\n                } else {\n                    this.navigate('form');\n                    this.confirmBooking();\n                }\n                break;\n            default:\n                this.form.markAsDirty();\n                if (\n                    !this.form.controls.needs_space ||\n                    (this.form.controls.needs_space.value &&\n                        (!space_list || !space_list.length || !this.form.controls.id.value))\n                ) {\n                    this.navigate('search');\n                } else if (this.form.controls.id?.value) {\n                    this.openEquipmentDetailsModal();\n                } else {\n                    this.confirmBooking();\n                }\n                break;\n        }\n    }\n\n    private toPreviousFlowStep(event: BookingFlowEvent) {\n        switch (event.step) {\n            case 'search':\n                this.navigate('form');\n                break;\n            case 'catering':\n                this.navigate('search');\n                break;\n        }\n    }\n\n    private navigate(route: string) {\n        this._router.navigate(['book', 'spaces', route], {\n            queryParamsHandling: 'preserve',\n        });\n        this.flow_step = route;\n    }\n\n    /** Clear user changes to the form data */\n    private resetForm() {\n        delete this.form;\n        localStorage.removeItem('ACA_STAFF.booking_form_data');\n        this.loadFormData();\n    }\n\n    /**\n     * Load existing form data or generate a new booking form\n     */\n    private loadFormData(): void {\n        let form_data: HashMap = {};\n        /* istanbul ignore else */\n        if (localStorage) {\n            const form_string = localStorage.getItem('ACA_STAFF.booking_form_data');\n            /* istanbul ignore else */\n            if (form_string) {\n                try {\n                    form_data = JSON.parse(form_string);\n                } catch (e) {}\n            }\n        }\n        this.booking = new Booking(form_data);\n        this.form = generateBookingForm(this.booking, this.available_fields);\n        this.subscription(\n            'form_changes',\n            this.form.valueChanges.subscribe(() => this.saveFormData())\n        );\n        /* istanbul ignore else */\n        if (form_data && form_data.room_ids && this.form.controls.space_list) {\n            this.form.controls.space_list.setValue(\n                form_data.room_ids.map((id) => this._spaces.find(id) || { id, name: id })\n            );\n        }\n    }\n\n    private saveFormData() {\n        /* istanbul ignore else */\n        if (localStorage && this.booking) {\n            localStorage.setItem(\n                'ACA_STAFF.booking_form_data',\n                JSON.stringify({ ...this.booking.toJSON(), ...this.form.value })\n            );\n        }\n    }\n\n    /** Open modal for adding equipment requirements to booking */\n    private openEquipmentDetailsModal() {\n        const space_list = [...this.form.controls.space_list.value];\n        if (\n            this.form.controls.recurrence?.value?.period &&\n            this.form.controls.recurrence?.value?.conflicts?.length > 0\n        ) {\n            this.form.controls?.recurrence?.value?.conflicts?.forEach(i => {\n                if (!space_list.find(space => space.email === i.space)) {\n                    space_list.push(this._spaces.find(i.space));\n                }\n            });\n        }\n        const ref = this._dialog.open<\n            RequirementDetailsModalComponent,\n            RequirementDetailsModalData\n        >(RequirementDetailsModalComponent, {\n            maxWidth: '95vw',\n            width: '32em',\n            data: {\n                spaces: space_list,\n                notes_field: this.form.controls.notes,\n                codes_field: this.form.controls.equipment_codes,\n                head_counts_field: this.form.controls.expected_attendees,\n            },\n        });\n        this.subscription(\n            'modal_events',\n            ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    this.toNextFlowStep({\n                        type: 'next',\n                        step: 'search',\n                        metadata: { ref: 'equipment' },\n                    });\n                    ref.close();\n                }\n            })\n        );\n        ref.afterClosed().subscribe(() => this.unsub('modal_events'));\n    }\n\n    /** Open modal for adding equipment requirements to booking */\n    private openCateringDetailsModal() {\n        const ref = this._dialog.open<CateringDetailsModalComponent, CateringDetailsModalData>(\n            CateringDetailsModalComponent,\n            {\n                maxWidth: '95vw',\n                width: '32em',\n                data: {\n                    spaces: this.form.controls.space_list.value,\n                    notes_field: this.form.controls.notes,\n                    catering: this.form.controls.catering,\n                },\n            }\n        );\n        this.subscription(\n            'modal_events',\n            ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    this.toNextFlowStep({\n                        type: 'next',\n                        step: 'catering',\n                        metadata: { ref: 'details' },\n                    });\n                    ref.close();\n                }\n            })\n        );\n        ref.afterClosed().subscribe(() => this.unsub('modal_events'));\n    }\n\n    /**\n     * Open modal to confirm the booking details\n     */\n    private confirmBooking() {\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            const value = this.form.value;\n            const dialog_ref = this._dialog.open(BookingConfirmComponent, {\n                width: '32em',\n                maxWidth: '95vw',\n                maxHeight: '95vh',\n                data: {\n                    old_booking: this.booking,\n                    booking: new Booking({\n                        ...this.booking,\n                        ...value,\n                        room_ids: value.space_list.map((space) => space.id),\n                    }),\n                },\n            });\n            dialog_ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    this._router.navigate(['/schedule']);\n                }\n            });\n        }\n    }\n}\n","<div class=\"space-flow\">\n    <ng-container [ngSwitch]=\"flow_step\">\n        <ng-container *ngSwitchCase=\"'search'\">\n            <booking-find-space\n                *ngIf=\"form\"\n                [spaces]=\"form.controls.space_list\"\n                [form]=\"form\"\n                (event)=\"handleFlowEvent($event)\"\n            ></booking-find-space>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"'catering'\">\n            <booking-catering\n                *ngIf=\"form\"\n                [form]=\"form\"\n                (event)=\"handleFlowEvent($event)\"\n            ></booking-catering>\n        </ng-container>\n        <ng-container *ngSwitchDefault>\n            <booking-spaces-form\n                *ngIf=\"form\"\n                [form]=\"form\"\n                (event)=\"handleFlowEvent($event)\"\n            ></booking-spaces-form>\n        </ng-container>\n    </ng-container>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\n@Component({\n    selector: 'app-explore',\n    templateUrl: './explore.component.html',\n    styleUrls: ['./explore.component.scss']\n})\nexport class ExploreComponent extends BaseDirective implements OnInit {\n    /** Whether to show the overlay menu */\n    public show_menu: boolean;\n\n    constructor(private _service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.title = 'Maps';\n    }\n}\n","<div class=\"explore page\">\n    <header class=\"header\">\n        <a-topbar-header [(menu)]=\"show_menu\"></a-topbar-header>\n    </header>\n    <main class=\"body\">\n        <explore-map-view></explore-map-view>\n    </main>\n    <footer class=\"footer\">\n        <a-footer-menu></a-footer-menu>\n    </footer>\n</div>\n<!-- <a-overlay-menu [(show)]=\"show_menu\"></a-overlay-menu> -->\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Route } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\n\nimport { ComposerModule } from '@placeos/composer';\nimport { AInteractiveMapModule } from '@acaprojects/ngx-interactive-map';\n\nimport { ExploreComponent } from './explore.component';\nimport { SharedContentModule } from 'src/app/shared/shared.module';\nimport { MapViewComponent } from './map-view/map-view.component';\nimport { ExploreSpaceStatusComponent } from './status-managers/space-status.component';\nimport { ExploreDeskStatusComponent } from './status-managers/desk-status.component';\nimport { ZoomControlsComponent } from './zoom-controls/zoom-controls.component';\nimport { ExploreSpaceInfoComponent } from './overlays/space-info/space-info.component';\nimport { ExploreSearchComponent } from './search/search.component';\nimport { ExploreMapLegendComponent } from './map-legend/map-legend.component';\nimport { ExploreTimelineComponent } from './timeline/timeline.component';\nimport { ExploreBookingModalComponent } from './overlays/booking-modal/booking-modal.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: ExploreComponent },\n    { path: ':search_type', component: ExploreComponent }\n];\n\n@NgModule({\n    declarations: [\n        ExploreComponent,\n        MapViewComponent,\n        ExploreSpaceStatusComponent,\n        ExploreDeskStatusComponent,\n        ZoomControlsComponent,\n        ExploreSpaceInfoComponent,\n        ExploreSearchComponent,\n        ExploreMapLegendComponent,\n        ExploreTimelineComponent,\n        ExploreBookingModalComponent\n    ],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(ROUTES),\n        SharedContentModule,\n        AInteractiveMapModule,\n        ComposerModule,\n        FormsModule\n    ]\n})\nexport class ExploreModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { MapLegendItem, ExploreMapSettings } from 'src/app/shared/utilities/settings.interfaces';\nimport { ANIMATION_SHOW_CONTRACT_EXPAND } from 'src/app/shared/globals/angular-animations';\n\n@Component({\n    selector: 'a-map-legend',\n    templateUrl: './map-legend.component.html',\n    styleUrls: ['./map-legend.component.scss'],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND]\n})\nexport class ExploreMapLegendComponent extends BaseDirective implements OnInit {\n    /** Mapping of legend item groups */\n    public legend_items: HashMap<MapLegendItem[]> = {};\n    /** Mapping of map colours */\n    public colours: HashMap<string> = {};\n    /** Whether group names should be displayed */\n    public show_group_names: boolean;\n    /** Whether the legend items should be shown */\n    public show_legend = false;\n\n    /** List of group names for legend items */\n    public get group_names(): string[] {\n        return Object.keys(this.legend_items);\n    }\n\n    constructor(private _service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.initialised.pipe(first(_ => _)).subscribe(() => {\n            const explore_settings: ExploreMapSettings =\n                this._service.setting('app.explore') || ({} as any);\n            this.legend_items = explore_settings.legend || {};\n            this.colours = explore_settings.colors || {};\n            this.show_group_names = !!explore_settings.show_legend_group_names;\n        });\n    }\n}\n","<div class=\"map-legend\" *ngIf=\"group_names && group_names.length\">\n    <div class=\"tag\">\n        <div class=\"title\" (tapped)=\"show_legend = !show_legend\">\n            <div class=\"text\" i18n=\"Explore legend label\">{{ show_legend ? 'Hide' : 'Show' }} Legend</div>\n            <app-icon\n                [icon]=\"{\n                    class: 'material-icons',\n                    content: show_legend ? 'arrow_drop_up' : 'arrow_drop_down'\n                }\"\n            ></app-icon>\n        </div>\n    </div>\n    <div\n        class=\"contents\"\n        [@show]=\"show_legend ? 'show' : 'hide'\"\n        [style.padding-bottom]=\"show_legend ? '1em' : ''\"\n        [style.padding-bottom]=\"show_legend ? '.5em' : ''\"\n        [style.overflow]=\"show_legend ? 'hidden auto' : 'hidden'\"\n    >\n        <ul>\n            <ng-container *ngFor=\"let group of group_names\">\n                <li class=\"group\" *ngIf=\"show_group_names\">\n                    <div class=\"bar\"></div>\n                    <div class=\"name\">{{ group }}</div>\n                    <div class=\"bar\"></div>\n                </li>\n                <li class=\"item\" name=\"item.key\" *ngFor=\"let item of legend_items[group]\">\n                    <div class=\"ref\">\n                        <ng-container *ngIf=\"item.icon; else colour_display\">\n                            <app-icon [icon]=\"item.icon\"></app-icon>\n                        </ng-container>\n                        <ng-template #colour_display>\n                            <div\n                                class=\"colour\"\n                                [style.background-color]=\"item.color || colours[item.key]\"\n                            ></div>\n                        </ng-template>\n                    </div>\n                    <div class=\"name\">{{ item.name }}</div>\n                </li>\n            </ng-container>\n        </ul>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MapPinComponent } from '@acaprojects/ngx-interactive-map';\nimport { first } from 'rxjs/operators';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { MapStatus, MapListener } from '../status-managers/status.interfaces';\nimport { HashMap, Point } from 'src/app/shared/utilities/types.utilities';\nimport { MapFeature } from '@acaprojects/ngx-interactive-map/lib/helpers/map.interfaces';\nimport { MapRadiusComponent } from '@acaprojects/ngx-interactive-map';\nimport { ExploreMapSettings } from 'src/app/shared/utilities/settings.interfaces';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    BookingRulesModalComponent,\n    BookingRulesModalData,\n} from 'src/app/overlays/booking-rules-modal/booking-rules-modal.component';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: 'explore-map-view',\n    templateUrl: './map-view.component.html',\n    styleUrls: ['./map-view.component.scss'],\n})\nexport class MapViewComponent extends BaseDirective implements OnInit {\n    /** Zoom level of the map */\n    public zoom: number;\n    /** Center offset of the map */\n    public center: Point = { x: 0.5, y: 0.5 };\n    /** Mapping of elements to CSS styles */\n    public style_map: HashMap<HashMap<string | number>> = {};\n    /** List of listeners for the map */\n    public listeners: MapListener[] = [];\n    /** List of features to render on the map */\n    public features: MapFeature[] = [];\n    /** ID of the active level to display on the map */\n    public active_level: string;\n    /** Mapping of status lists to types */\n    public status_map: { spaces?: MapStatus[]; desks?: MapStatus[]; zones?: MapStatus[] } = {};\n    /** Mapping of listener lists to types */\n    public listener_map: {\n        spaces?: MapListener[];\n        desks?: MapListener[];\n        zones?: MapListener[];\n    } = {};\n    /** Mapping of features lists to types */\n    public feature_map: {\n        spaces?: MapFeature[];\n        desks?: MapFeature[];\n        zones?: MapFeature[];\n    } = {};\n    /** Message to display over the map */\n    public message: string;\n    /** Whether location data is loading */\n    public loading: boolean;\n    /** Point or element on the map to focus */\n    public focus: string | Point;\n    /** Feature on the map to focus */\n    public focus_feature: MapFeature;\n    /** Current shown time */\n    public date: number;\n    /** Application settings for the explore component */\n    public settings: ExploreMapSettings;\n\n    /** URL of the active map */\n    public get map_url(): string {\n        const level = this._org.levelWithID(this.active_level) || { map_url: '' };\n        return level.map_url || '';\n    }\n\n    /** Whether current level has booking rules associated with it */\n    public get has_booking_rules(): boolean {\n        const level = this._org.levelWithID(this.active_level) || {\n            building_id: '',\n        };\n        return !!(this._org.buildings.find((bld) => bld.id === level.building_id) || {})\n            .booking_details;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _route: ActivatedRoute,\n        private _dialog: MatDialog,\n        private _org: OrganisationService,\n        private _users: UsersService,\n        private _spaces: SpacesService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._spaces.initialised.pipe(first((_) => _)).subscribe(() => {\n            /* istanbul ignore else */\n            if (!this.active_level) {\n                const bld = this._org.building;\n                if (bld && bld.levels.length) {\n                    this.active_level = bld.levels[0].id;\n                }\n            }\n            this.settings = this._service.setting('app.explore') || {};\n            this.subscription(\n                'route.query',\n                this._route.queryParamMap.subscribe((params) => {\n                    /* istanbul ignore else */\n                    if (params.has('space')) {\n                        this.loadSpaceLocation(params.get('space'));\n                    }\n                    /* istanbul ignore else */\n                    if (params.has('user')) {\n                        this.loadUserLocation(params.get('user')).then(\n                            (user) => {\n                                this.loading = false;\n                                this.message = this.focus\n                                    ? ''\n                                    : `Unable to locate ${user ? user.name : params.get('user')}`;\n                            },\n                            (err) => {\n                                this.loading = false;\n                                this.message = `Unable to locate user`;\n                                /* istanbul ignore else */\n                                if (err && err.status !== 404) {\n                                    this._service.notifyError(\n                                        `Error loading user location. ${err.message}`\n                                    );\n                                }\n                            }\n                        );\n                    }\n                })\n            );\n        });\n    }\n\n    public openBookingRulesModal() {\n        const level = this._org.levelWithID(this.active_level) || {\n            building_id: '',\n        };\n        const building: Building =\n            this._org.buildings.find((bld) => bld.id === level.building_id) || ({} as any);\n        this._dialog.open<BookingRulesModalComponent, BookingRulesModalData>(\n            BookingRulesModalComponent,\n            {\n                data: {\n                    building,\n                },\n            }\n        );\n    }\n\n    /**\n     * Process changes to statuses\n     */\n    public processStatuses() {\n        const styles: HashMap<HashMap<string | number>> = {};\n        (this.status_map.spaces || []).forEach((space) => (styles[`#${space.id}`] = space.styles));\n        (this.status_map.desks || []).forEach((desk) => (styles[`#${desk.id}`] = desk.styles));\n        (this.status_map.zones || []).forEach((zone) => (styles[`#${zone.id}`] = zone.styles));\n        this.style_map = styles;\n    }\n\n    /**\n     * Process changes to statuses\n     */\n    public processListeners() {\n        let listeners: MapListener[] = [];\n        listeners = listeners.concat(this.listener_map.spaces || []);\n        listeners = listeners.concat(this.listener_map.desks || []);\n        listeners = listeners.concat(this.listener_map.zones || []);\n        this.listeners = listeners;\n    }\n\n    /**\n     * Process changes to statuses\n     */\n    public processFeatures() {\n        let features: MapFeature[] = [];\n        /* istanbul ignore else */\n        if (this.focus_feature) {\n            features = features.concat([this.focus_feature]);\n        }\n        features = features.concat(this.feature_map.spaces || []);\n        features = features.concat(this.feature_map.desks || []);\n        features = features.concat(this.feature_map.zones || []);\n        this.features = features;\n    }\n\n    /**\n     * Load and store location details for the space\n     * @param space_id Engine system ID of the space to locate\n     */\n    private loadSpaceLocation(space_id: string) {\n        const space = this._spaces.find(space_id);\n        /* istanbul ignore else */\n        if (space) {\n            this.message = `Loading location of ${space.name}`;\n            this.loading = true;\n            this.active_level = space.level.id;\n            this.focus = `area-${space.map_id}-status`;\n            this.focus_feature = {\n                id: `area-${space.map_id}-status`,\n                coordinates: null,\n                content: MapPinComponent,\n                data: {\n                    text: space.name,\n                },\n            };\n            this.zoom = 1;\n            this.loading = false;\n            this.message = '';\n            this.processFeatures();\n        }\n    }\n\n    /**\n     * Load and store the location for the user\n     * @param user_email Email address of the selected user\n     */\n    private async loadUserLocation(user_email: string) {\n        this.focus = null;\n        this.focus_feature = null;\n        this.loading = true;\n        this.message = `Loading user details...`;\n        const user = await this._users.show(user_email);\n        /* istanbul ignore else */\n        if (!user) return user;\n        this.message = `Loading location for ${user.name}...`;\n        const location = await user.locate();\n        /* istanbul ignore else */\n        if (!location) return user;\n        this.active_level = location.level.id;\n        if (location.fixed) {\n            this.focus = location.id;\n            this.focus_feature = {\n                id: location.id,\n                coordinates: null,\n                content: MapPinComponent,\n                data: {\n                    text: `${user.name} is here`,\n                },\n            };\n            this.zoom = 1;\n        } else {\n            this.focus = {\n                x: location.x,\n                y: location.y,\n            };\n            this.focus_feature = {\n                coordinates: {\n                    x: location.x,\n                    y: location.y,\n                },\n                content: MapRadiusComponent,\n                data: {\n                    text: `${user.name} is here`,\n                    diameter: location.confidence || 5,\n                },\n            };\n        }\n        this.zoom = 1;\n        this.loading = false;\n        this.message = '';\n        this.processFeatures();\n        return user;\n    }\n}\n","<div class=\"map-view\">\n    <div class=\"header\">\n        <explore-search></explore-search>\n    </div>\n    <div class=\"body\">\n        <div class=\"status-list\" hidden>\n            <i\n                space-status\n                [zone]=\"active_level\"\n                [date]=\"date\"\n                (status)=\"status_map.spaces = $event; processStatuses()\"\n                (listeners)=\"listener_map.spaces = $event; processListeners()\"\n                (features)=\"feature_map.spaces = $event; processFeatures()\"\n            ></i>\n            <i desk-status [zone]=\"active_level\" (status)=\"status_map.desks = $event; processStatuses()\"></i>\n        </div>\n        <a-map-controls overlay [(level)]=\"active_level\" (levelChange)=\"zoom = 1; center = { x: .5, y: .5 }\"></a-map-controls>\n        <button mat-icon-button class=\"rules\" name=\"booking-rules\" *ngIf=\"has_booking_rules\" (tapped)=\"openBookingRulesModal()\">i</button>\n        <a-map\n            [(zoom)]=\"zoom\"\n            [(center)]=\"center\"\n            [src]=\"map_url\"\n            [css]=\"style_map\"\n            [listeners]=\"listeners\"\n            [features]=\"features\"\n            [focus]=\"focus\"\n        >\n            <mat-spinner diameter=\"32\"></mat-spinner>\n        </a-map>\n        <a-zoom-controls overlay [(zoom)]=\"zoom\" [(position)]=\"center\"></a-zoom-controls>\n        <a-map-legend overlay></a-map-legend>\n        <div class=\"message\" *ngIf=\"message\">\n            <div class=\"text\">{{ message }}</div>\n            <div class=\"loader\">\n                <mat-progress-bar mode=\"indeterminate\" *ngIf=\"loading\"></mat-progress-bar>\n            </div>\n        </div>\n    </div>\n    <a-timeline *ngIf=\"settings?.show_timeline\" [(date)]=\"date\"></a-timeline>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { generateBookingForm, statusFromBookings } from 'src/app/services/data/bookings/booking.utilities';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { UsersService } from 'src/app/services/data/users/users.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nimport * as dayjs from 'dayjs';\n\nexport interface ExploreBookingModalData {\n    /** Unix epoch in ms of the booking start time */\n    date: number;\n    /** Space to make the booking in */\n    space: Space;\n    /** List of bookings for the active space at the current time */\n    bookings: Booking[];\n}\n\n@Component({\n    selector: 'a-explore-booking-modal',\n    templateUrl: './booking-modal.component.html',\n    styleUrls: ['./booking-modal.component.scss']\n})\nexport class ExploreBookingModalComponent extends BaseDirective implements OnInit {\n    /**  */\n    public booking: Booking;\n    /** Form fields for new ad-hoc booking */\n    public form: FormGroup;\n    /** Form contents to display */\n    public state: 'info' | 'form' = 'info';\n    /** Description of the current loading state */\n    public loading: string;\n    /** String of time until next booking */\n    public available_until: string;\n    /** Whether booking was successful */\n    public success: boolean;\n\n    public get is_requesting(): boolean {\n        const booking = this.booking.toJSON();\n        return this.space.byRequest({\n            date: this.booking.date || dayjs(this._data.date).valueOf(),\n            duration: this.booking.duration || 30,\n            host: booking.organiser || this._users.current\n        });\n    }\n\n    /** Display string for the selected date */\n    public get date(): string {\n        const date = dayjs(this._data.date);\n        return date.format('DD MMM YYYY');\n    }\n\n    /** Display string for the selected time */\n    public get time(): string {\n        const date = dayjs(this._data.date);\n        return date.format('h:mm A');\n    }\n\n    /** Selected space */\n    public get space(): Space {\n        return this._data.space;\n    }\n\n    /** Whether space is being booked for now */\n    public get is_now(): boolean {\n        const now = dayjs();\n        const date = dayjs(this._data.date);\n        return Math.abs(now.diff(date, 'm')) < 5;\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ExploreBookingModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: ExploreBookingModalData,\n        private _router: Router,\n        private _service: ApplicationService,\n        private _users: UsersService,\n        private _spaces: SpacesService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        const date = dayjs(this._data.date);\n        this.booking = new Booking({\n            title: 'Ad-Hoc Booking',\n            date: date.valueOf(),\n            duration: 30,\n            room_ids: [this._data.space.id]\n        });\n        const status = statusFromBookings(\n            this._data.bookings,\n            this.space.bookable,\n            this.space.byRequest({\n                date: this._data.date,\n                duration: 30,\n                host: this._users.current\n            }),\n            this._data.date\n        );\n        this.available_until = status.available_until;\n    }\n\n    /**\n     * Move onto the next step of the booking flow\n     */\n    public next() {\n        if (!this.is_now) {\n            const booking = this.booking.toJSON();\n            localStorage.setItem('ACA_STAFF.booking_form_data', JSON.stringify({ id: 'ad-hoc', ...booking }));\n            this._router.navigate(['/book', 'space'], { queryParams: { back: '/explore' } });\n            this._dialog_ref.close();\n        } else {\n            this.form = generateBookingForm(this.booking, [\n                'space_list',\n                'organiser',\n                'title',\n                'duration'\n            ]);\n            this.state = 'form';\n        }\n    }\n\n    public book() {\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            this.loading = 'Checking space availability...';\n            this.checkSpaceAvailability().then(\n                () => {\n                    const new_booking = new Booking({\n                        ...this.booking,\n                        ...this.form.value,\n                        room_ids: [this._data.space.id]\n                    });\n                    new_booking.save().then(\n                        () => {\n                            this.loading = null;\n                            this.success = true;\n                            this.timeout('close', () => this._dialog_ref.close(), 5000);\n                        },\n                        err => {\n                            this.loading = null;\n                            this._service.notifyError(\n                                `Error ${this.booking.id ? 'updating' : 'creating'} booking: ${err.message || err}}`\n                            );\n                        }\n                    );\n                },\n                err => {\n                    this.loading = null;\n                    this._service.notifyError(`Error checking space availability: ${err.message || err}`);\n                }\n            );\n        }\n    }\n\n    /**\n     * Check whether the selected spaces are available for the selected time period\n     */\n    private checkSpaceAvailability(): Promise<void> {\n        const spaces: Space[] = this.booking.space_list;\n        return new Promise((resolve, reject) => {\n            this._spaces.available({\n                room_ids: spaces.map(space => space.id).join(','),\n                date: this.booking.date,\n                duration: this.booking.duration\n            }).then(\n                space_list => {\n                    for (const space of space_list) {\n                        if (!space.was_available) {\n                            return reject(\n                                `${space.name} is not available at the select time period.`\n                            );\n                        }\n                    }\n                    resolve();\n                },\n                err => reject(err)\n            );\n        });\n    }\n}\n","<ng-container *ngIf=\"!success; else done_state\">\n    <header mat-dialog-title [class.request]=\"is_requesting\">\n        <ng-container *ngIf=\"state !== 'form'\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'add' }\"></app-icon>\n            <div class=\"text\">\n                Book <span>{{ space?.name }}</span> {{ is_now ? 'from now' : 'at ' + time }}\n            </div>\n        </ng-container>\n        <ng-container *ngIf=\"state === 'form'\">\n            <div class=\"text\">\n                Book <span>{{ space?.name }}</span>\n            </div>\n        </ng-container>\n    </header>\n    <mat-dialog-content>\n        <main *ngIf=\"!loading; else load_state\">\n            <ng-container [ngSwitch]=\"state\">\n                <ng-container *ngSwitchCase=\"'form'\">\n                    <a-booking-form [form]=\"form\"></a-booking-form>\n                </ng-container>\n                <ng-container *ngSwitchDefault>\n                    <div class=\"details\">\n                        <p>{{ available_until }}</p>\n                        <p *ngIf=\"is_requesting\" i18n=\"Explore booking request details\">\n                            This space requires approval to reserve\n                        </p>\n                    </div>\n                </ng-container>\n            </ng-container>\n        </main>\n    </mat-dialog-content>\n    <mat-dialog-actions *ngIf=\"!loading\">\n        <footer>\n            <button mat-button class=\"inverse\" mat-dialog-close>Cancel</button>\n            <button mat-button name=\"next\" (tapped)=\"state === 'form' ? book() : next()\">\n                {{ state === 'form' ? (is_requesting ? 'Request' : 'Book') : 'Yes' }}\n            </button>\n        </footer>\n    </mat-dialog-actions>\n    <ng-template #load_state>\n        <main>\n            <div class=\"info-block\">\n                <div class=\"icon\">\n                    <mat-spinner diameter=\"48\"></mat-spinner>\n                </div>\n                <div class=\"text\">{{ loading || 'Processing request...' }}</div>\n            </div>\n        </main>\n    </ng-template>\n</ng-container>\n<ng-template #done_state>\n    <header class=\"success\" [class.request]=\"is_requesting\">\n        <div class=\"text\">\n            <ng-container *ngIf=\"is_requesting\" i18n=\"Explore booking request sent\">\n                Request for <span>{{ space?.name }}</span> sent\n            </ng-container>\n            <ng-container *ngIf=\"!is_requesting\" i18n=\"Explore booking made\">\n                Booked <span>{{ space?.name }}</span>\n                {{ is_now ? 'from now' : 'at ' + time }}\n            </ng-container>\n        </div>\n        <app-icon\n            [icon]=\"{ class: 'material-icons', content: is_requesting ? 'send' : 'done' }\"\n        ></app-icon>\n    </header>\n</ng-template>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {\n    MAP_OVERLAY_DATA,\n    MAP_LOCATION\n} from '@acaprojects/ngx-interactive-map';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { statusFromBookings } from 'src/app/services/data/bookings/booking.utilities';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Point } from 'src/app/shared/utilities/types.utilities';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\nexport interface SpaceInfoData {\n    /** Current time to show details for */\n    date?: number;\n    /** Space to show details for */\n    space: Space;\n    /** Active bookings for the space */\n    bookings: Booking[];\n}\n\n@Component({\n    selector: 'a-space-info',\n    templateUrl: './space-info.component.html',\n    styleUrls: ['./space-info.component.scss']\n})\nexport class ExploreSpaceInfoComponent extends BaseDirective implements OnInit {\n    /** Status of the space */\n    public status: string;\n    /** String of time until next booking */\n    public available_until: string;\n\n    /** Named position of the element location on the map */\n    public get quadrant(): 'top left' | 'top right' | 'bottom left' | 'bottom right' {\n        /* istanbul ignore if */\n        if (!this._position) {\n            return 'top left';\n        }\n        if (this._position.y < .5) {\n            if (this._position.x < .5) {\n                return 'top left';\n            } else {\n                return 'top right';\n            }\n        } else {\n            if (this._position.x < .5) {\n                return 'bottom left';\n            } else {\n                return 'bottom right';\n            }\n        }\n    }\n\n    /** CSS class for the current status of the space */\n    public get status_class(): string {\n        return (this.status || '')\n            .toLowerCase()\n            .split(' ')\n            .join('-');\n    }\n\n    /** Space to display on the component */\n    public get space(): Space {\n        /* istanbul ignore if */\n        if (!this._data) {\n            return null;\n        }\n        return this._data.space;\n    }\n\n    /** List of bookings from the space for the currently displayed time */\n    public get bookings(): Booking[] {\n        /* istanbul ignore if */\n        if (!this._data) {\n            return [];\n        }\n        return this._data.bookings || [];\n    }\n\n    constructor(\n        @Inject(MAP_OVERLAY_DATA) private _data: SpaceInfoData,\n        @Inject(MAP_LOCATION) private _position: Point,\n        private _users: UsersService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.processBookings();\n        this.interval('update_bookings', () => this.processBookings(), 60 * 1000);\n    }\n\n    /**\n     * Calculate availability of space based off given bookings\n     */\n    public processBookings(): void {\n        /* istanbul ignore if */\n        if (!this.space) {\n            return;\n        }\n        const status = statusFromBookings(\n            this.bookings,\n            this.space.bookable,\n            this.space.byRequest({\n                date: this._data.date,\n                duration: 30,\n                host: this._users.current\n            }),\n            this._data.date\n        );\n        this.status = status.status;\n        this.available_until = status.available_until;\n    }\n}\n","<div *ngIf=\"space\" [id]=\"space.id\" [class]=\"'space-info ' + quadrant\">\n    <div class=\"arrow\"></div>\n    <div class=\"details\">\n        <div class=\"name\">{{ space.name }}</div>\n        <div class=\"availability\">\n            <div name=\"status\" [class]=\"status_class\">{{ status }}</div>\n            <div name=\"available-until\" *ngIf=\"status_class !== 'not-bookable'\">{{ available_until }}</div>\n        </div>\n    </div>\n</div>","import {\n    Component,\n    OnInit,\n    Input,\n    OnChanges,\n    SimpleChanges,\n    ViewChild,\n    ElementRef\n} from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { catchError, debounceTime, distinctUntilChanged, switchMap, map, first } from 'rxjs/operators';\nimport { Observable, Subject, of } from 'rxjs';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { UsersService } from 'src/app/services/data/users/users.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nimport * as dayjs from 'dayjs';\n\n// TODO: Add handling for role users. e.g. Fire Wardens, First Aiders\n// TODO: Add handling for searching for features\n// TODO: Add handling for searching for desks\n\n@Component({\n    selector: 'explore-search',\n    templateUrl: './search.component.html',\n    styleUrls: ['./search.component.scss']\n})\nexport class ExploreSearchComponent extends BaseDirective implements OnInit, OnChanges {\n    /** Type of data to show when searching */\n    @Input() public type: 'space' | 'user' | 'feature' | 'desk' | 'any';\n    /** Whether external changes are being processed */\n    @Input() public autofocus: boolean;\n    /** Display string for the placeholder of the search input */\n    @Input() public placeholder: string;\n    /** Whether search data is loading */\n    public loading: boolean;\n    /** Search filter value */\n    public search_str: string;\n    /** List of users from an API search */\n    public search_results$: Observable<(User | Space)[]>;\n    /** Post search and filtering list of items */\n    public results: (User | Space)[] = [];\n    /** Subject holding the value of the search */\n    public search$ = new Subject<string>();\n\n    /** Input field reference */\n    @ViewChild('input', { static: false }) private input_field: ElementRef<HTMLInputElement>;\n\n    constructor(\n        private _users: UsersService,\n        private _spaces: SpacesService,\n        private _route: ActivatedRoute,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._spaces.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.subscription(\n                'route.params',\n                this._route.paramMap.subscribe(params => {\n                    if (params.has('search_type')) {\n                        this.type = params.get('search_type') as any;\n                    }\n                })\n            );\n            // Listen for input changes\n            this.search_results$ = this.search$.pipe(\n                debounceTime(300),\n                distinctUntilChanged(),\n                switchMap(query => {\n                    this.loading = true;\n                    return query.length >= 3 && (this.type === 'user' || this.type === 'any')\n                        ? (this._users.query({\n                              q: query.slice(0, 3),\n                              cache: 60 * 1000\n                          }) as Promise<User[]>)\n                        : Promise.resolve([]);\n                }),\n                catchError(err => of([])),\n                map((users: User[]) => {\n                    const spaces = this._spaces.filter(_ => true);\n                    const search = (this.search_str || '').toLowerCase();\n                    const filter = item =>\n                        (item.name || '').toLowerCase().indexOf(search) >= 0 ||\n                        (item.email || '').toLowerCase().indexOf(search) >= 0;\n                    let result_list = [];\n                    if (this.type === 'space') {\n                        result_list = spaces;\n                    } else if (this.type === 'user') {\n                        result_list = users;\n                    } else {\n                        result_list = (spaces as any).concat(users);\n                    }\n                    this.loading = false;\n                    return result_list.filter(filter);\n                })\n            );\n            // Process API results\n            this.subscription(\n                'search_results',\n                this.search_results$.subscribe(list => {\n                    this.results = list;\n                    list.sort((a, b) => (a.name || '').localeCompare(b.name));\n                })\n            );\n            this.search$.next(`${dayjs().valueOf()}`);\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.autofocus && this.autofocus) {\n            this.focusField();\n        }\n    }\n\n    public focusField() {\n        /* istanbul ignore else */\n        if (this.input_field && this.input_field.nativeElement) {\n            this.input_field.nativeElement.focus();\n        }\n    }\n\n    /**\n     * Update the selected item to display the location for on the map\n     * @param item Space or User to display location for\n     */\n    public selectOption(item: User | Space) {\n        if (item instanceof Space) {\n            this._router.navigate([], {\n                relativeTo: this._route,\n                queryParams: { space: item.id },\n                queryParamsHandling: 'merge'\n            });\n        } else {\n            this._router.navigate([], {\n                relativeTo: this._route,\n                queryParams: { user: item.email },\n                queryParamsHandling: 'merge'\n            });\n        }\n        this.search_str = item.name;\n    }\n}\n","<div class=\"searchbar\" *ngIf=\"type\" tabindex=\"0\" (focus)=\"focusField()\" (click)=\"focusField()\">\n    <div class=\"prefix\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'search' }\"></app-icon>\n    </div>\n    <div class=\"input\">\n        <input\n            #input\n            type=\"text\"\n            [(ngModel)]=\"search_str\"\n            (ngModelChange)=\"search$.next($event)\"\n            [matAutocomplete]=\"auto\"\n            [placeholder]=\"placeholder || 'Search...'\"\n        />\n    </div>\n    <div class=\"suffix\">\n        <mat-spinner *ngIf=\"loading\" diameter=\"32\"></mat-spinner>\n    </div>\n</div>\n<mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"selectOption($event.option.value)\">\n    <mat-option *ngFor=\"let option of results\" [value]=\"option\">\n        <div class=\"name\">{{ option.name }}</div>\n        <div class=\"email\">{{ (option.level ? option.level.name : option.email) }}&nbsp;</div>\n    </mat-option>\n</mat-autocomplete>\n","import { Component, Output, EventEmitter, OnInit, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { MapStatus } from './status.interfaces';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\n@Component({\n    selector: '[desk-status]',\n    template: `\n        <ng-content></ng-content>\n        <div class=\"bindings\" *ngIf=\"system_id\">\n            <!-- BINDINGS -->\n            <i binding [(model)]=\"in_use\" [sys]=\"system_id\" mod=\"DeskManagement\" [bind]=\"zone\" (modelChange)=\"calculateStatus()\"></i>\n            <i binding [(model)]=\"id_list\" [sys]=\"system_id\" mod=\"DeskManagement\" [bind]=\"zone + ':desk_ids'\" (modelChange)=\"calculateStatus()\"></i>\n            <i binding [(model)]=\"reserved\" [sys]=\"system_id\" mod=\"DeskManagement\" [bind]=\"zone + ':reserved'\" (modelChange)=\"calculateStatus()\"></i>\n            <i binding [(model)]=\"occupied\" [sys]=\"system_id\" mod=\"DeskManagement\" [bind]=\"zone + ':occupied_count'\"></i>\n            <i binding [(model)]=\"free\" [sys]=\"system_id\" mod=\"DeskManagement\" [bind]=\"zone + ':free_count'\"></i>\n            <!-- REMOTE EXECUTIONS -->\n            <i binding [(model)]=\"checkin\" [sys]=\"system_id\" mod=\"DeskManagement\" exec=\"manual_checkin\" [params]=\"[checkin]\"></i>\n            <i binding [(model)]=\"cancel\" [sys]=\"system_id\" mod=\"DeskManagement\" exec=\"cancel_reservation\" [params]=\"[]\"></i>\n        </div>\n    `\n})\nexport class ExploreDeskStatusComponent extends BaseDirective implements OnChanges {\n    /** ID of the active level */\n    @Input() public zone: string;\n    /** ID of the desk to checkin */\n    @Input() public checkin: string;\n    /** Emitter for changes to the desk status */\n    @Output() public status = new EventEmitter<MapStatus[]>();\n    /** ID of the desk management system */\n    public system_id: string;\n    /** List of desks for the active level */\n    public id_list: string[];\n    /** List of desk IDs in use on the active level */\n    public in_use: string[];\n    /** List of desk IDs that are reserved on the active level */\n    public reserved: string[];\n    /** Number of occupied desks on the active level */\n    public occupied: number = 0;\n    /** Number of free desks on the active level */\n    public free: number = 0;\n    /** Mapping of colours to statuses */\n    public colour_map: HashMap<string> = {};\n    /** Toggle for cancelling desk reservations */\n    public cancel: boolean;\n\n    constructor(private _service: ApplicationService, private _org: OrganisationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.colour_map = this._service.setting('app.explore.colors') || {};\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.zone) {\n            this.loadDesks();\n        }\n    }\n\n    public calculateStatus() {\n        const desk_list = this.id_list || [];\n        const status_list: MapStatus[] = [];\n        for (const desk_id of desk_list) {\n            const in_use = (this.in_use || []).find(id => id === desk_id);\n            const reserved = (this.reserved || []).find(id => id === desk_id);\n            const status = in_use ? 'unavailable' : reserved ? 'reserved' : 'available';\n            status_list.push({\n                id: desk_id,\n                styles: {\n                    fill: this.colour_map[`desk-${status}`],\n                    stroke: this.colour_map[`desk-${status}-stroke`],\n                },\n                status_id: status\n            });\n        }\n        this.status.emit(status_list);\n    }\n\n    private loadDesks() {\n        const level = this._org.levelWithID(this.zone);\n        if (!level) { return ; }\n        const building = this._org.buildings.find(bld => bld.id === level.building_id);\n        if (!building) { return; }\n        const desk_management = building.systems.desk_management;\n        if (!desk_management) { return; }\n        this.system_id = desk_management;\n    }\n}\n","import {\n    Component,\n    Input,\n    Output,\n    EventEmitter,\n    OnInit,\n    OnDestroy,\n    SimpleChanges,\n    OnChanges,\n} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\nimport { MapFeature } from '@acaprojects/ngx-interactive-map/lib/helpers/map.interfaces';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { ExploreSpaceInfoComponent } from '../overlays/space-info/space-info.component';\nimport { MapStatus, MapListener, SpaceStatus } from './status.interfaces';\nimport {\n    ExploreBookingModalComponent,\n    ExploreBookingModalData,\n} from '../overlays/booking-modal/booking-modal.component';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: '[space-status]',\n    template: `\n        <div class=\"bindings\" *ngIf=\"space_list && is_today\">\n            <i\n                *ngFor=\"let space of space_list\"\n                binding\n                [sys]=\"space.id\"\n                mod=\"Bookings\"\n                bind=\"today\"\n                (modelChange)=\"processSpaceBookings(space, $event)\"\n            ></i>\n        </div>\n        <ng-content></ng-content>\n    `,\n})\nexport class ExploreSpaceStatusComponent extends BaseDirective\n    implements OnInit, OnChanges, OnDestroy {\n    /** ID of the zone to grab the spaces */\n    @Input() public zone: string;\n    /** Updates the status based of the given time. Unix epoch in milliseconds */\n    @Input() public date: number;\n    /** Emitter for changes to the space status */\n    @Output() public status = new EventEmitter<MapStatus[]>();\n    /** Emitter for changes to the space status */\n    @Output() public listeners = new EventEmitter<MapListener[]>();\n    /** Emitter for changes to the space status */\n    @Output() public features = new EventEmitter<MapFeature[]>();\n    /** List of spaces to grab the statuses for */\n    public space_list: Space[] = [];\n    /** Mapping of spaces to active bookings */\n    public active_bookings: HashMap<Booking[]> = {};\n    /** Mapping of colours to statuses */\n    public colour_map: HashMap<string> = {};\n\n    /** Whether selected date time is the current day */\n    public get is_today() {\n        return dayjs().isSame(dayjs(this.date), 'd');\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _users: UsersService,\n        private _spaces: SpacesService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.colour_map = this._service.setting('app.explore.colors') || {};\n            this.subscription(\n                'spaces',\n                this._spaces.listen('list').subscribe(() => this.loadSpaces())\n            );\n            this.interval(\n                'update_status',\n                () => {\n                    this.updateSpaceBookings();\n                    this.calculateStatus();\n                },\n                60 * 1000\n            );\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.zone || changes.date) {\n            this.timeout('load', () => this.loadSpaces());\n        }\n        if (changes.zone) {\n            this.clearSpaces();\n        }\n    }\n\n    public ngOnDestroy() {\n        this.clearSpaces();\n    }\n\n    /**\n     * Determine the availability statuses for all the spaces in the set zone\n     */\n    public calculateStatus() {\n        this.timeout('process_statuses', () => {\n            const statuses: MapStatus[] = [];\n            for (const space of this.space_list) {\n                const status = this.getStatus(space, this.date);\n                const id =\n                    space.map_id.indexOf('area') < 0 ? `area-${space.map_id}-status` : space.map_id;\n                statuses.push({\n                    id,\n                    styles: {\n                        fill: this.colour_map[`space-${status}`] || '#000',\n                        opacity: 0.6,\n                    },\n                    status_id: status,\n                });\n            }\n            this.status.emit(statuses);\n        });\n    }\n\n    /**\n     * Get the status of the space at the set time\n     * @param space Space to get the status for\n     */\n    private getStatus(space: Space, datetime?: number): SpaceStatus {\n        if (!space.bookable) {\n            return 'not-bookable';\n        }\n        const bookings = this.active_bookings[space.id] || [];\n        const date = dayjs(datetime).startOf('m').second(1);\n        const current_booking = bookings.find((booking) => {\n            const start = dayjs(booking.date).startOf('m');\n            const end = start.add(booking.duration, 'm');\n            return date.isAfter(start, 's') && date.isBefore(end, 'm');\n        });\n        if (current_booking) {\n            return 'unavailable';\n        }\n        const options = {\n            date: dayjs(this.date).valueOf(),\n            duration: 30,\n            host: this._users.current,\n        };\n        const rules = space.rulesFor(options);\n        if (rules.hide) {\n            return 'not-bookable';\n        } else if (!rules.auto_approve) {\n            return 'requestable';\n        }\n        return 'available';\n    }\n\n    /**\n     * Process raw booking data for the given space\n     * @param space Space associated with the bookings\n     * @param data List of booking data\n     */\n    public processSpaceBookings(space: Space, data: HashMap[]) {\n        this.timeout(\n            `space-${space.id}`,\n            () => {\n                const bookings = (data || []).map(\n                    (bkn_data) => new Booking({ ...bkn_data, room_ids: [space.id] })\n                );\n                this.active_bookings[space.id] = bookings;\n                this.calculateStatus();\n            },\n            10\n        );\n    }\n\n    /**\n     * Update the booking data for space on future dates\n     */\n    public updateSpaceBookings() {\n        /* istanbul ignore else */\n        if (this.is_today) {\n            return;\n        }\n        this.timeout(\n            'update_spaces',\n            () => {\n                const date = dayjs(this.date).startOf('d');\n                this._spaces\n                    .query({\n                        from: date.unix(),\n                        to: date.endOf('d').unix(),\n                        show_declined: false,\n                        zone_ids: this.zone,\n                        cache: 10 * 1000,\n                    })\n                    .then((spaces) => {\n                        spaces.forEach((space) =>\n                            this.processSpaceBookings(space, [...space.bookings])\n                        );\n                    });\n            },\n            50\n        );\n    }\n\n    /**\n     * Load listeners for space data\n     */\n    private loadSpaces() {\n        this.space_list = this._spaces.filter((space) => space.zones.indexOf(this.zone) >= 0);\n        const listeners: MapListener[] = [];\n        for (const space of this.space_list) {\n            const id =\n                space.map_id.indexOf('area') < 0 ? `area-${space.map_id}-status` : space.map_id;\n            listeners.push({\n                id,\n                event: 'mouseenter',\n                callback: () => this.showSpaceInfo(space),\n            });\n            listeners.push({\n                id,\n                event: 'mouseleave',\n                callback: () => this.features.emit([]),\n            });\n            if (space.bookable) {\n                listeners.push({\n                    id,\n                    event: 'click',\n                    callback: () => this.openBookingModal(space),\n                });\n            }\n        }\n        this.listeners.emit(listeners);\n        this.updateSpaceBookings();\n        this.calculateStatus();\n    }\n\n    /**\n     * Clear current space and booking data\n     */\n    private clearSpaces() {\n        delete this.active_bookings;\n        this.active_bookings = {};\n    }\n\n    /**\n     * Update features to include space info for a space\n     * @param space Space to show details for\n     */\n    private showSpaceInfo(space: Space) {\n        const id = space.map_id.indexOf('area') < 0 ? `area-${space.map_id}-status` : space.map_id;\n        this.features.emit([\n            {\n                id,\n                coordinates: null,\n                content: ExploreSpaceInfoComponent,\n                data: {\n                    space,\n                    bookings: this.active_bookings[space.id],\n                    date: this.date,\n                },\n            },\n        ]);\n    }\n\n    /**\n     * Open explore booking modal for the given space\n     * @param space Space to make booking for\n     */\n    private openBookingModal(space: Space) {\n        const status = this.getStatus(space, this.date);\n        if (status !== 'unavailable' && status !== 'not-bookable') {\n            this._dialog.open<ExploreBookingModalComponent, ExploreBookingModalData>(\n                ExploreBookingModalComponent,\n                {\n                    width: 'auto',\n                    height: 'auto',\n                    data: {\n                        date: this.date,\n                        space,\n                        bookings: this.active_bookings[space.id],\n                    },\n                }\n            );\n        } else {\n            this._service.notifyInfo(\n                `${space.name} is unavailable at the selected time. Please select another space or time and try again.`\n            );\n        }\n    }\n}\n","import {\n    Component,\n    OnInit,\n    Input,\n    Output,\n    EventEmitter,\n    ElementRef,\n    Renderer2,\n    ViewChild,\n} from '@angular/core';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Identity, Point } from 'src/app/shared/utilities/types.utilities';\n\nimport * as dayjs from 'dayjs';\nimport { eventToPoint } from 'src/app/shared/utilities/general.utilities';\n\nconst BLOCK_SIZE = 30;\nconst MINUTES_IN_DAY = 24 * 60;\n\n@Component({\n    selector: 'a-timeline',\n    templateUrl: './timeline.component.html',\n    styleUrls: ['./timeline.component.scss'],\n})\nexport class ExploreTimelineComponent extends BaseDirective implements OnInit {\n    /** Currently selected datetime */\n    @Input() public date: number;\n    /** Emitter for changes to the selected datetime */\n    @Output() public dateChange = new EventEmitter<number>();\n    /** List of time blocks to select */\n    public blocks: Identity[] = [];\n    /** Starting point for time move events */\n    private _start_position: Point;\n    /** Bounding box of the timeline container */\n    private _box: ClientRect;\n\n    /** Whether selected date time is the current day */\n    public get is_today() {\n        return dayjs().isSame(dayjs(this.date), 'd');\n    }\n\n    /** Offset of the current time from the start of the day */\n    public get offset() {\n        const date = dayjs();\n        const diff = date.diff(date.startOf('d'), 'm');\n        return (diff / MINUTES_IN_DAY) * 100;\n    }\n\n    /** Details of the currently selected datetime */\n    public get active_time(): Identity {\n        const date = dayjs(this.date);\n        const diff = date.diff(date.startOf('d'), 'm');\n        return {\n            id: date.isSame(dayjs(), 'd') ? 'Today' : date.format('DD MMM YYYY'),\n            name: date.format('h:mm A'),\n            left: (diff / MINUTES_IN_DAY) * 100,\n        };\n    }\n\n    @ViewChild('container', { static: true }) private _container: ElementRef<HTMLDivElement>;\n\n    constructor(private _renderer: Renderer2) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.blocks = this.generateBlocks();\n        this.checkDate();\n        this.interval('check_date', () => this.checkDate(), 15 * 1000);\n    }\n\n    /**\n     * Generate the display blocks for the timeline\n     */\n    public generateBlocks(): Identity[] {\n        const start = dayjs().startOf('d');\n        const end = start.endOf('d');\n        const blocks: Identity[] = [];\n        let current_time = start;\n        while (current_time.isBefore(end)) {\n            const is_hour = current_time.minute() === 0;\n            blocks.push({\n                id: current_time.format('HH:mm'),\n                name: is_hour ? current_time.format('h') : '',\n                is_hour,\n                left: (current_time.diff(start, 'm') / MINUTES_IN_DAY) * 100,\n            });\n            current_time = current_time.add(BLOCK_SIZE, 'm');\n        }\n        return blocks;\n    }\n\n    /**\n     * Change the date of the active date time\n     * @param amount Number of days to change by\n     */\n    public changeDate(amount: number = 1) {\n        let date = dayjs(this.date);\n        date = date.add(amount, 'd');\n        const now = dayjs();\n        this.date = date.isBefore(now, 'm') ? now.valueOf() : date.valueOf();\n        this.dateChange.emit(this.date);\n    }\n\n    public startMove(event: MouseEvent | TouchEvent) {\n        const position = eventToPoint(event);\n        this._start_position = position;\n        this._box = this._container.nativeElement.getBoundingClientRect();\n        const type = event instanceof MouseEvent ? 'mouse' : 'touch';\n        this.subscription(\n            'move',\n            this._renderer.listen('window', `${type}move`, (e) => this.onMove(e))\n        );\n        this.subscription(\n            'end',\n            this._renderer.listen('window', `${type === 'mouse' ? 'mouseup' : 'touchend'}`, (e) => {\n                this.unsub('move');\n                this.unsub('end');\n            })\n        );\n    }\n\n    public onMove(event: MouseEvent | TouchEvent) {\n        const position = eventToPoint(event);\n        const y_change = (this._start_position.x - position.x) / this._box.width;\n        const time_change = -Math.round(y_change * MINUTES_IN_DAY);\n        /* istanbul ignore else */\n        if (time_change !== 0) {\n            let old_date = dayjs(this.date);\n            let date = old_date;\n            date = date.add(time_change, 'm');\n            date = date.minute(Math.floor(Math.round(date.minute() / 5)) * 5);\n            this.date = date.valueOf();\n            this.dateChange.emit(this.date);\n            /* istanbul ignore else */\n            if (Math.abs(old_date.diff(date, 'm')) > 0) {\n                this._start_position = position;\n            }\n            this.checkDate();\n        }\n    }\n\n    /** Check that active datetime is not in the past */\n    private checkDate() {\n        const date = dayjs(this.date);\n        let now = dayjs();\n        now = now.minute(Math.floor(Math.ceil(now.minute() / 5)) * 5);\n        /* istanbul ignore else */\n        if (date.isBefore(now, 'm')) {\n            this.date = now.valueOf();\n            this.dateChange.emit(this.date);\n        }\n    }\n}\n","<div class=\"not-mobile\">\n    <div class=\"timeline\" explore #container>\n        <div\n            class=\"block\"\n            *ngFor=\"let item of blocks\"\n            [class.hour]=\"item.is_hour\"\n            [style.left]=\"item.left + '%'\"\n        >\n            <div class=\"text\">{{ item.name }}</div>\n            <div class=\"bar\"></div>\n        </div>\n    </div>\n    <div class=\"offset\" *ngIf=\"is_today\" [style.width]=\"offset + '%'\"></div>\n    <div class=\"active-time\" [style.left]=\"active_time.left + '%'\">\n        <div class=\"bar\"></div>\n        <div class=\"date\">\n            <button mat-icon-button name=\"previous-day\" [disabled]=\"is_today\" (tapped)=\"changeDate(-1)\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_left' }\"></app-icon>\n            </button>\n            <div class=\"text\" (mousedown)=\"startMove($event)\" (touchstart)=\"startMove($event)\">{{ active_time.id }}</div>\n            <button mat-icon-button name=\"next-day\" (tapped)=\"changeDate()\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_right' }\"></app-icon>\n            </button>\n        </div>\n        <div class=\"time\" (mousedown)=\"startMove($event)\" (touchstart)=\"startMove($event)\">{{ active_time.name }}</div>\n        <div class=\"triangle\"></div>\n    </div>\n</div>\n<div class=\"pickers mobile-only\">\n    <a-date-field [(ngModel)]=\"date\" offset=\"top\" (ngModelChange)=\"dateChange.emit($event)\"></a-date-field>\n    <a-time-field [(ngModel)]=\"date\" (ngModelChange)=\"dateChange.emit($event)\"></a-time-field>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { Point } from 'src/app/shared/utilities/types.utilities';\n\n@Component({\n    selector: 'a-zoom-controls',\n    templateUrl: './zoom-controls.component.html',\n    styleUrls: ['./zoom-controls.component.scss']\n})\nexport class ZoomControlsComponent implements OnInit {\n    /** Current zoom level of the map */\n    @Input() public zoom: number;\n    /** Current center position of the map */\n    @Input() public position: Point;\n    /** Emitter for changes to the zoom value */\n    @Output() public zoomChange = new EventEmitter<number>();\n    /** Emitter for changes to the position */\n    @Output() public positionChange = new EventEmitter<Point>();\n\n    public min_zoom: number = 1;\n\n    public max_zoom: number = 10;\n\n    constructor() {}\n\n    public ngOnInit(): void {\n\n    }\n\n    public zoomIn() {\n        this.zoom = (this.zoom || this.min_zoom) * 1.2;\n        if (this.zoom > this.max_zoom) {\n            this.zoom = this.max_zoom;\n        }\n        this.zoomChange.emit(this.zoom);\n    }\n\n    public zoomOut() {\n        this.zoom = (this.zoom || this.min_zoom) * (1 / 1.2);\n        if (this.zoom < this.min_zoom) {\n            this.zoom = this.min_zoom;\n        }\n        this.zoomChange.emit(this.zoom);\n    }\n\n    public reset() {\n        this.zoom = this.min_zoom;\n        this.position = { x: 0.5, y: 0.5 };\n        this.zoomChange.emit(this.zoom);\n        this.positionChange.emit(this.position);\n    }\n}\n","<div class=\"zoom-control\">\n    <button mat-icon-button name=\"zoom-in\" (tapped)=\"zoomIn()\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'add' }\"></app-icon>\n    </button>\n    <button mat-icon-button name=\"zoom-out\" (tapped)=\"zoomOut()\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'remove' }\"></app-icon>\n    </button>\n    <button mat-icon-button name=\"reset\" (tapped)=\"reset()\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'replay' }\"></app-icon>\n    </button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { HomePageSettings, ApplicationLink } from 'src/app/shared/utilities/settings.interfaces';\n\n@Component({\n    selector: 'app-home',\n    templateUrl: './home.component.html',\n    styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent extends BaseDirective implements OnInit {\n    /** Settings for the home page */\n    public settings: HomePageSettings;\n    /** Whether to show the overlay menu */\n    public show_menu: boolean;\n    /** Tiles to display on the home page */\n    public get tiles(): ApplicationLink[] {\n        return (this.settings || { tiles: [] }).tiles || [];\n    }\n\n    /** Min width of a tile */\n    public get tile_width(): number {\n        const tiles = this.tiles;\n        if (tiles.length > 2) {\n            return 49;\n        }\n        return 99;\n    }\n\n    /** Height of each tile */\n    public get tile_height(): number {\n        const tiles = this.tiles;\n        if (tiles.length > 2) {\n            return 100 / ((tiles.length + tiles.length % 2) / 2 );\n        }\n        return 50;\n    }\n\n    constructor(private _service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.title = 'Home';\n        this._service.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.settings = this._service.setting('app.home') || {};\n        });\n    }\n}\n","<div class=\"home-page\">\n    <header class=\"header\">\n        <a-topbar-header [(menu)]=\"show_menu\" page=\"home\"></a-topbar-header>\n    </header>\n    <main class=\"body\">\n        <div class=\"bg-img\">\n            <img src=\"assets/img/mckinsey_lines.svg\">\n        </div>\n        <div\n            class=\"tile\"\n            *ngFor=\"let item of tiles; let i = index\"\n            [attr.name]=\"item.name\"\n            [style.min-width]=\"tile_width + '%'\"\n            [style.height]=\"(tile_height) * (i === 0 ? 4 / 3 : 2 / 3) + '%'\"\n        >\n            <a *ngIf=\"item.link\" [href]=\"item.link\">\n                <div class=\"inner\">\n                    <app-icon [icon]=\"item.icon\"></app-icon>\n                    <div class=\"text\">{{ item.name }}</div>\n                </div>\n            </a>\n            <a *ngIf=\"!item.link\" [routerLink]=\"[item.route]\" routerLinkActive=\"active\">\n                <div class=\"inner\">\n                    <app-icon [icon]=\"item.icon\"></app-icon>\n                    <div class=\"text\">{{ item.name }}</div>\n                </div>\n            </a>\n        </div>\n    </main>\n    <footer class=\"footer\"></footer>\n</div>\n<!-- <a-overlay-menu [(show)]=\"show_menu\"></a-overlay-menu> -->\n","import { Component, ViewChild, Output, EventEmitter } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport { first } from 'rxjs/operators';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { BookingLike } from './list-item/list-item.component';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { UsersService } from 'src/app/services/data/users/users.service';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nimport * as dayjs from 'dayjs';\n\nexport interface EventPair {\n    id: string;\n    date: number;\n}\n\n@Component({\n    selector: 'schedule-event-list',\n    templateUrl: './event-list.component.html',\n    styleUrls: ['./event-list.component.scss'],\n})\nexport class ScheduleEventListComponent extends BaseDirective {\n    /** Emitter  */\n    @Output('eventList') public event_list = new EventEmitter<EventPair[]>();\n    /** List of items to display on the event list */\n    public events: BookingLike[] = [];\n    /** Update promise */\n    public event_promise: Promise<void>;\n    /** Whether bookings are being updated */\n    public loading: boolean;\n    /** Number of days to render in the list from the current date */\n    public shown_offset: number = 7;\n    /** Offset of the date to show events for */\n    public date_offset: number = 0;\n    /** Whether to show the calendar tooltip */\n    public show_calendar: boolean;\n    /** Date to scroll to on next update */\n    public scroll_to: string;\n    /** Current UTC epoch */\n    public now: number = dayjs().valueOf();\n    /** Current UTC epoch */\n    public date: number;\n    /** Whether list is displaying the top of the first item */\n    public at_top: boolean = true;\n    /** List of users available to view schedules for */\n    public user_list: User[] = [];\n    /** Active user to display schedule for */\n    public active_user: User;\n\n    /** Viewport for the scrollable area of the list */\n    @ViewChild(CdkVirtualScrollViewport, { static: true })\n    private scroll_viewport: CdkVirtualScrollViewport;\n\n    @ViewChild(MatMenuTrigger, { static: true }) trigger: MatMenuTrigger;\n\n    constructor(\n        private _users: UsersService,\n        private _bookings: BookingsService,\n        private _spaces: SpacesService,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._spaces.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.subscription(\n                'route.query',\n                this._route.queryParamMap.subscribe((params) => {\n                    /* istanbul ignore else */\n                    if (params.has('email')) {\n                        this.active_user =\n                            this._users.find(params.get('email')) ||\n                            new User({ email: params.get('email') });\n                    }\n                })\n            );\n            this.updateEvents();\n            this.interval('update_events', () => this.updateEvents(), 10 * 1000);\n            this.subscription(\n                'scroll',\n                this.scroll_viewport.elementScrolled().subscribe(() => this.onScroll())\n            );\n            this.subscription(\n                'delegate_list',\n                this._users.listen('delegates').subscribe((list) => {\n                    /* istanbul ignore else */\n                    if (list && list[0]) {\n                        this.user_list = [this._users.current].concat(list);\n                        /* istanbul ignore else */\n                        if (!this.active_user) {\n                            this.active_user = this.user_list[0];\n                        }\n                    }\n                })\n            );\n        });\n    }\n\n    /**\n     * Update the list of events for the currently visible period\n     */\n    public updateEvents() {\n        /* istanbul ignore else */\n        if (!this.event_promise) {\n            this.event_promise = new Promise((resolve) => {\n                const start = dayjs().add(this.date_offset, 'd').startOf('d');\n                const end = start.add(7, 'd').endOf('d');\n                this.loading = true;\n                this._bookings\n                    .query({\n                        email:\n                            (this.active_user ? this.active_user.email : '') ||\n                            this._users.current.email,\n                        from: start.unix(),\n                        to: end.unix(),\n                    })\n                    .then(\n                        (list: Booking[]) => {\n                            this._bookings.updateList(this._bookings.filter(), list);\n                            const old_events = this.events.filter((i) => {\n                                const date = dayjs(i.date);\n                                return (\n                                    i.type !== 'date' &&\n                                    i.type !== 'empty' &&\n                                    (date.isBefore(start, 's') || date.isAfter(end, 's'))\n                                );\n                            });\n                            this.events = this.processEvents(list, old_events);\n                            // Update event list for view listing\n                            const event_list = this.events.filter(\n                                (i) => i.type !== 'date' && i.type !== 'empty'\n                            );\n                            this.event_list.emit(\n                                event_list.map((i) => ({ id: i.id, date: i.date }))\n                            );\n                            // Scroll to date if needed\n                            this.timeout('scroll_to', () => this.scrollTo());\n                            this.loading = false;\n                            delete this.event_promise;\n                        },\n                        () => {\n                            this.loading = false;\n                            delete this.event_promise;\n                        }\n                    );\n            });\n        }\n        return this.event_promise;\n    }\n\n    /**\n     * Process list of new items and merge with the old\n     * @param list List of new bookings to generate event blocks for\n     * @param old_events List of relevant old event blocks\n     */\n    public processEvents(list: Booking[], old_events: BookingLike[]): BookingLike[] {\n        let events: BookingLike[] = [];\n        const now = dayjs();\n        let date = dayjs().startOf('d');\n        const end = date.add(this.shown_offset, 'd').endOf('d');\n        for (; date.isBefore(end); date = date.add(1, 'd')) {\n            const date_str = date.format('YYYY-MM-DD');\n            // Add date block\n            events.push({\n                id: date_str,\n                type: 'date',\n                order_id: date_str,\n                title: date.format('dddd, DD MMM'),\n                is_today: date.isSame(now, 'd'),\n                date: date.valueOf(),\n            });\n            const filter_fn: (_: BookingLike) => boolean = (i) => {\n                const day = dayjs(i.date).second(1);\n                return day.isAfter(date, 's') && day.isBefore(date.endOf('d'), 's');\n            };\n            // Add events for today to list\n            const new_items = list.filter(filter_fn as any);\n            const old_items = old_events.filter(filter_fn as any);\n            if (new_items.length || old_items.length) {\n                events = events.concat(new_items as any).concat(old_items);\n            } else {\n                // Add block for no events if so\n                events.push({\n                    id: `${date_str}-empty`,\n                    type: 'empty',\n                    order_id: date_str,\n                    title: `No items for ${date.format('dddd, DD MMM')}`,\n                    is_today: date.isSame(now, 'd'),\n                    date: date.valueOf() + 1,\n                });\n            }\n        }\n        events.sort((a, b) => a.date - b.date);\n        events = unique(events, 'id');\n        return events;\n    }\n\n    /**\n     * Handle scrolling on the event list\n     */\n    public onScroll() {\n        /* istanbul ignore else */\n        if (!this.event_promise) {\n            this.show_calendar = false;\n            const range = this.scroll_viewport.getRenderedRange();\n            const dist = range.end - range.start;\n            const nearest = this.events[range.start];\n            this.at_top = range.start === 0 && this.scroll_viewport.measureScrollOffset() < 5;\n            this.date_offset = dayjs(nearest.date).diff(dayjs(), 'd') - 1;\n            this.date = dayjs((this.events[dist + range.start] || {}).date)\n                .subtract(1, 'd')\n                .valueOf();\n            /* istanbul ignore else */\n            if (range.end > this.events.length - 7) {\n                this.shown_offset += 3;\n                this.updateEvents();\n            }\n        }\n    }\n\n    /**\n     * Update the date offset\n     * @param date UTC milliseconds epoch of new date offset\n     */\n    public updateDate(date: number) {\n        const day = dayjs(date);\n        this.date_offset = day.diff(dayjs(), 'd') - 1;\n        this.shown_offset = Math.max(this.shown_offset, this.date_offset + 3);\n        this.scroll_to = day.format('YYYY-MM-DD');\n        delete this.event_promise;\n        this.show_calendar = false;\n        this.date = dayjs().add(this.date_offset, 'd').valueOf();\n        this.updateEvents();\n    }\n\n    /** Close the menu popup with the date picker */\n    public closeDatePicker() {\n        this.trigger.closeMenu();\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(item: BookingLike, index: number) {\n        return item ? item.id : null;\n    }\n\n    /**\n     * Scroll to a previously defined date on the event list\n     */\n    private scrollTo() {\n        /* istanbul ignore else */\n        if (this.scroll_to) {\n            const index = this.events.findIndex((i) => i.id === this.scroll_to);\n            /* istanbul ignore else */\n            if (index > -1) {\n                this.scroll_viewport.scrollToIndex(index, 'smooth');\n                this.scroll_to = null;\n            }\n        }\n    }\n}\n","<div class=\"event-list\">\n    <div class=\"header dark-mode\" [class.scrolled]=\"!at_top\">\n        <div class=\"user\">\n            <mat-form-field appearance=\"outline\" *ngIf=\"user_list && user_list.length > 1\" >\n                <mat-select #select [(value)]=\"active_user\" (valueChange)=\"updateEvents($event)\">\n                    <mat-option *ngFor=\"let user of user_list\" [value]=\"user\">\n                        {{ user?.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"flex\"></div>\n        <div class=\"date\">\n            <button mat-icon-button [matMenuTriggerFor]=\"appMenu\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'event' }\"></app-icon>\n            </button>\n        </div>\n    </div>\n    <div class=\"progress\">\n        <mat-progress-bar mode=\"indeterminate\" *ngIf=\"loading\"></mat-progress-bar>\n    </div>\n    <div class=\"body\">\n        <cdk-virtual-scroll-viewport itemSize=\"80\" class=\"viewport\" (scroll)=\"onScroll()\">\n            <ng-container *cdkVirtualFor=\"let item of events; trackBy: trackByFn\">\n                <schedule-event-item [attr.id]=\"item.id | slice:0:10\" [user]=\"active_user\" [event]=\"item\"></schedule-event-item>\n            </ng-container>\n        </cdk-virtual-scroll-viewport>\n    </div>\n    <div class=\"footer\"></div>\n</div>\n<mat-menu #appMenu=\"matMenu\">\n    <div mat-menu-item class=\"date-picker\" (click)=\"$event.stopPropagation()\">\n        <a-date-picker\n            [(ngModel)]=\"date\"\n            (ngModelChange)=\"updateDate($event); closeDatePicker()\"\n        ></a-date-picker>\n    </div>\n</mat-menu>\n","import { Component, Input } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport {\n    MeetingDetailsOverlayComponent,\n    MeetingDetailsModalData,\n} from 'src/app/overlays/meeting-details-overlay/meeting-details-overlay.component';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { User } from 'src/app/services/data/users/user.class';\n\nimport * as dayjs from 'dayjs';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\nexport interface BookingLike {\n    /** ID of the item */\n    id: string;\n    /** Sorting weight of the item */\n    order_id: string;\n    /** Type of item to render */\n    type: 'date' | 'event' | 'empty';\n    /** Whether the event is on the current date */\n    is_today: boolean;\n    /** Title of the event */\n    title: string;\n    /** Date in UTC milliseconds */\n    date: number;\n    /** Current state of the booking */\n    status?: 'future' | 'upcoming' | 'done' | 'started' | 'in_progress';\n\n    [key: string]: any;\n}\n\n@Component({\n    selector: 'schedule-event-item',\n    templateUrl: './list-item.component.html',\n    styleUrls: ['./list-item.component.scss'],\n})\nexport class ScheduleEventListItemComponent extends BaseDirective {\n    /** Booking to display */\n    @Input() public event: BookingLike;\n    /** User who's schedule is being viewed */\n    @Input() public user: User;\n\n    public get in_progress(): boolean {\n        return this.event.status === 'in_progress';\n    }\n\n    public get date_display(): string {\n        const date = dayjs(this.event.date);\n        const now = dayjs();\n        return now.isSame(date, 'd') ? 'Today' : date.format('DD MMM YYYY');\n    }\n\n    /** Display location of the booking event */\n    public get location(): string {\n        const booking: Booking = this.event as any;\n        return (booking.space_list || [booking.space]).map((i) => i.name).join(', ');\n    }\n\n    /** Image name to display for the event */\n    public get type_image(): string {\n        const booking: Booking = this.event as any;\n        return booking.has_visitors ? 'external' : 'book_room';\n    }\n\n    public get time(): string {\n        const booking: Booking = this.event as any;\n        return booking.all_day || booking.duration > 23 * 60\n            ? 'All Day'\n            : dayjs(booking.date).format('h:mm A');\n    }\n\n    /** Status of the current booking */\n    public get status(): 'approved' | 'tentative' | 'declined' | '' {\n        const statuses = this.event.approval_status || {};\n        const spaces = this.event.space_list || [];\n        for (const space of spaces) {\n            const status = statuses[space.email] || '';\n            if (status.indexOf('tentative') >= 0 || status.indexOf('not') === 0) {\n                return 'tentative';\n            } else if (status.indexOf('declined') >= 0) {\n                return 'declined';\n            }\n        }\n        const location = this.event.location || '';\n        const location_lower = (typeof location === 'string' ? location : '').toLowerCase();\n        if (location_lower.indexOf('tentative') >= 0) {\n            return 'tentative';\n        } else if (location_lower.indexOf('declined') >= 0) {\n            return 'declined';\n        }\n        return spaces.length ? 'approved' : '';\n    }\n\n    constructor(private _dialog: MatDialog, private _users: UsersService) {\n        super();\n    }\n\n    public openDetailsModal() {\n        /* istanbul ignore else */\n        if (this.event instanceof Booking) {\n            this._dialog.open<MeetingDetailsOverlayComponent, MeetingDetailsModalData>(\n                MeetingDetailsOverlayComponent,\n                {\n                    maxHeight: 'auto',\n                    maxWidth: 'auto',\n                    width: 'auto',\n                    height: 'auto',\n                    hasBackdrop: false,\n                    closeOnNavigation: true,\n                    data: {\n                        booking: this.event,\n                        as_delegate: this._users.current.email !== (this.user || {}).email,\n                        delegate: this.user ? this.user.email : '',\n                        is_first: false,\n                        is_last: false,\n                    },\n                }\n            );\n        }\n    }\n}\n","<ng-container *ngIf=\"event\" [ngSwitch]=\"event.type\">\n    <div *ngSwitchCase=\"'date'\" class=\"day display\">\n        <div class=\"content\">{{ event.title }}</div>\n    </div>\n    <div *ngSwitchCase=\"'empty'\" class=\"emptied display\">\n        <div class=\"content\">No events for {{ date_display }}</div>\n    </div>\n    <div\n        *ngSwitchDefault\n        [class]=\"'event display ' + event.type + ' ' + status\"\n        [attr.id]=\"event.id\"\n    >\n        <a (tapped)=\"openDetailsModal()\">\n            <div class=\"content\">\n                <div class=\"time\">\n                    <div>{{ time }}</div>\n                    <div class=\"info\" *ngIf=\"in_progress\">In Progress</div>\n                </div>\n                <div class=\"icon\">\n                    <img [src]=\"'assets/img/' + type_image + '.svg'\" />\n                </div>\n                <div class=\"details\">\n                    <div class=\"title text\">{{ event.title }}</div>\n                    <div class=\"location text\">\n                        <img src=\"assets/img/location.svg\" />\n                        <div class=\"text\">\n                            {{ location || event.location_name || 'No location' }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </a>\n    </div>\n</ng-container>\n","\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { EventPair } from './event-list/event-list.component';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\n\n@Component({\n    selector: 'app-schedule',\n    templateUrl: './schedule.template.html',\n    styleUrls: ['./schedule.styles.scss'],\n})\nexport class ScheduleComponent extends BaseDirective implements OnInit {\n    /** Name of the page to render */\n    public page: string;\n    /** ID of the event item to view */\n    public id: string;\n    /** Current list of loaded events */\n    public events: EventPair[];\n    /** Whether to show menu */\n    public show_menu = false;\n\n    /** ID of the event after the active event */\n    public get next(): string {\n        if (this.events) {\n            const index = this.events.findIndex(i => this.id === i.id) + 1;\n            if (index > -1 && this.events[index]) {\n                return this.events[index].id;\n            }\n        }\n        return '';\n    }\n\n    /** ID of the event before the active event */\n    public get previous(): string {\n        if (this.events) {\n            const index = this.events.findIndex(i => this.id === i.id) - 1;\n            if (index > -1 && this.events[index]) {\n                return this.events[index].id;\n            }\n        }\n        return '';\n    }\n\n    constructor(private _route: ActivatedRoute, private _service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription('route.route', this._route.paramMap.subscribe((params) => {\n            if (params.has('page')) {\n                this.page = params.get('page');\n            }\n            if (params.has('id')) {\n                this.id = params.get('id');\n            }\n        }));\n        this.loadEvents();\n        this._service.title = 'My Day';\n    }\n\n    /**\n     * Update local event listing\n     * @param event_list New list of events\n     */\n    public updateEvents(event_list: EventPair[]) {\n        this.events = event_list;\n        this.saveEvents();\n    }\n\n    /**\n     * Save the current event listing\n     */\n    public saveEvents() {\n        if (localStorage) {\n            localStorage.setItem('STAFF.events', JSON.stringify(this.events || []));\n        }\n    }\n\n    /**\n     * Load the last saved event listing\n     */\n    public loadEvents() {\n        if (localStorage) {\n            const data = localStorage.getItem('STAFF.events');\n            this.events = JSON.parse(data || '[]');\n        }\n    }\n}\n","<div class=\"schedule page\">\n    <header class=\"header\">\n        <a-topbar-header [(menu)]=\"show_menu\"></a-topbar-header>\n    </header>\n    <main class=\"body\">\n        <ng-container [ngSwitch]=\"page\">\n            <ng-container *ngSwitchCase=\"'view'\">\n                <schedule-view-event [id]=\"id\" [next]=\"next\" [previous]=\"previous\"></schedule-view-event>\n            </ng-container>\n            <ng-container *ngSwitchDefault>\n                <schedule-event-list (eventList)=\"updateEvents($event)\"></schedule-event-list>\n            </ng-container>\n        </ng-container>\n    </main>\n    <footer class=\"footer\">\n        <a-footer-menu></a-footer-menu>\n    </footer>\n</div>\n<!-- <a-overlay-menu [(show)]=\"show_menu\"></a-overlay-menu> -->\n","\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { RouterModule } from '@angular/router';\nimport { ComposerModule } from '@placeos/composer';\n\nimport { ROUTES } from './schedule.routes';\nimport { SharedContentModule } from 'src/app/shared/shared.module';\n\nimport { ScheduleComponent } from './schedule.component';\nimport { ScheduleEventListComponent } from './event-list/event-list.component';\nimport { ScheduleViewEventComponent } from './view-event/view-event.component';\nimport { ScheduleEventListItemComponent } from './event-list/list-item/list-item.component';\nimport { EventDetailsComponent } from './view-event/event-details/event-details.component';\nimport { EventEditComponent } from './view-event/event-edit/event-edit.component';\n\n@NgModule({\n    declarations: [\n        ScheduleComponent,\n        ScheduleViewEventComponent,\n        ScheduleEventListComponent,\n        ScheduleEventListItemComponent,\n        EventDetailsComponent,\n        EventEditComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ComposerModule,\n        FormsModule,\n        ReactiveFormsModule,\n        RouterModule.forChild(ROUTES),\n        SharedContentModule,\n        ScrollingModule\n    ]\n})\nexport class ScheduleModule { }\n","import { Routes } from '@angular/router';\n\nimport { ScheduleComponent } from './schedule.component';\n\nexport const ROUTES: Routes = [\n    { path: '', component: ScheduleComponent },\n    { path: ':page', component: ScheduleComponent },\n    { path: ':page/:id', component: ScheduleComponent },\n    { path: '**', redirectTo: '' }\n];\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { humaniseDuration } from 'src/app/shared/utilities/general.utilities';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { ViewRoomModalComponent } from 'src/app/overlays/view-room-modal/view-room-modal.component';\n\nimport * as dayjs from 'dayjs';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: 'schedule-event-details',\n    templateUrl: './event-details.component.html',\n    styleUrls: ['./event-details.component.scss']\n})\nexport class EventDetailsComponent extends BaseDirective {\n    /** Booking to display */\n    @Input() event: Booking;\n    /** Emitter for action on the display view */\n    @Output() change = new EventEmitter();\n    /** Emitter for changes to the loading state */\n    @Output() loading = new EventEmitter();\n    /** Toggle for activating checkin */\n    public checked_in: boolean;\n    /** Mapping of spaces to last checkin time */\n    public last_start: { [id: string]: number } = {};\n    /** Whether to show full locations list */\n    public show_locations: boolean;\n    /** Whether to show full attendee list */\n    public show_attendees: boolean;\n\n    /** Title of the displayed event */\n    public get title(): string {\n        if (!this.event) {\n            return '';\n        }\n        return this.event.title;\n    }\n\n    /** Display string of when the event will occur */\n    public get when(): string {\n        if (!this.event) {\n            return 'Unable to determine.';\n        }\n        const date = dayjs(this.event.date);\n        const end = date.add(this.event.duration || 60, 'm');\n        if (this.event.all_day || this.event.duration > 23 * 60) {\n            return `${date.format('DD MMM YYYY')} - All Day`;\n        } else {\n            if (date.isSame(end, 'd')) {\n                return `${date.format('DD MMM YYYY, h:mm A')} - ${end.format('h:mm A')}`;\n            } else {\n                return `${date.format('DD MMM YYYY, h:mm A')} - ${end.format(\n                    'DD MMM YYYY, h:mm A'\n                )}`;\n            }\n        }\n    }\n\n    /** Display string for the event's duration */\n    public get duration(): string {\n        if (!this.event) {\n            return 'Unable to determine';\n        }\n        return humaniseDuration(this.event.duration || 60);\n    }\n\n    /** List of spaces associated with the event */\n    public get spaces(): Space[] {\n        if (!this.event) {\n            return [];\n        }\n        return this.event.space_list;\n    }\n\n    /** List of attendees associated with the event not including the host */\n    public get attendees(): User[] {\n        if (!this.event) {\n            return [];\n        }\n        return this.event.attendees.filter(i => i.email !== this.organiser.email);\n    }\n\n    /** Host of the event */\n    public get organiser(): User {\n        if (!this.event) {\n            return this._users.current;\n        }\n        return this.event.organiser || this._users.current;\n    }\n\n    /** Whether the user is allowed to edit the event */\n    public get can_edit(): boolean {\n        const organiser = this.organiser;\n        const user = this._users.current;\n        return organiser.email === user.email && this.status !== 'done';\n    }\n\n    /** Details about the event */\n    public get notes(): string {\n        if (!this.event) {\n            return '';\n        }\n        return this.event.description || '';\n    }\n\n    /** Status of the event */\n    public get status(): 'future' | 'upcoming' | 'done' | 'started' | 'in_progress' {\n        if (this.event) {\n            const now = dayjs();\n            const date = dayjs(this.event.date);\n            /* istanbul ignore else */\n            if (now.isBefore(date.subtract(15, 'm'), 'm')) {\n                return 'future';\n            } else if (now.isBefore(date, 'm')) {\n                return 'upcoming';\n            } else if (now.isBefore(date.add(15, 'm'), 'm')) {\n                return 'started';\n            } else if (now.isBefore(date.add(this.event.duration, 'm'), 'm')) {\n                return 'in_progress';\n            }\n        }\n        return 'done';\n    }\n\n    /** Whether the user has checkin to all the spaces in the event */\n    public get is_checked_in(): boolean {\n        return this.spaces.reduce(\n            (a, v) => a && this.event.date <= (this.last_start[v.id] || 0),\n            true\n        );\n    }\n\n    /** Whether the spaces can be controlled */\n    public get can_control(): boolean {\n        return this.spaces.length > 0 && this.status !== 'future' && this.status !== 'done';\n    }\n\n    /** Whether the user is able to checkin to the event */\n    public get can_checkin(): boolean {\n        return this.spaces.length > 0 && (this.status === 'upcoming' || this.status === 'started');\n    }\n\n    constructor(private _users: UsersService, private _dialog: MatDialog, private _router: Router) {\n        super();\n    }\n\n    /**\n     * Open the modal to show the location of a space\n     * @param space Space to show the location\n     */\n    public locate(space: Space) {\n        /* istanbul ignore else */\n        if (space) {\n            this._dialog.open(ViewRoomModalComponent, {\n                width: 'auto',\n                height: 'auto',\n                maxWidth: '95vw',\n                maxHeight: '95vh',\n                data: { space }\n            });\n        }\n    }\n\n    /**\n     * Enter edit mode for the booking\n     */\n    public edit(): void {\n        this.change.emit({ type: 'edit' });\n    }\n\n    /**\n     * Checkin the current booking\n     */\n    public checkin(): void {\n        this.checked_in = !this.checked_in;\n    }\n\n    /**\n     * Store the booking data and navigate to the booking form\n     */\n    public duplicate(): void {\n        /* istanbul ignore else */\n        if (localStorage) {\n            const booking = this.event.duplicate();\n            localStorage.setItem('STAFF.booking_form', JSON.stringify(booking));\n        }\n        this.change.emit({ type: 'duplicate' });\n        this._router.navigate(['/book']);\n    }\n}\n","<div class=\"event-details\">\n    <div class=\"bindings\">\n        <ng-container *ngFor=\"let space of spaces\">\n            <ng-container *ngIf=\"space?.level?.id\">\n                <i\n                    binding\n                    [(model)]=\"last_start[space.id]\"\n                    [sys]=\"space.id\"\n                    mod=\"Booking\"\n                    bind=\"last_meeting_started\"\n                ></i>\n                <i\n                    binding\n                    [(model)]=\"checkin\"\n                    [sys]=\"space.id\"\n                    mod=\"Booking\"\n                    exec=\"start_meeting\"\n                    [params]=\"[event.date]\"\n                ></i>\n            </ng-container>\n        </ng-container>\n    </div>\n    <div class=\"body\">\n        <div class=\"field\" name=\"title\">\n            <label>Title:</label>\n            <div class=\"value\">{{ title }}</div>\n        </div>\n        <div class=\"field\" name=\"when\">\n            <label>When:</label>\n            <div class=\"value\">{{ when }}</div>\n        </div>\n        <div class=\"field\" name=\"duration\">\n            <label>Duration:</label>\n            <div class=\"value\">{{ duration }}</div>\n        </div>\n        <div class=\"field multi\" name=\"location\">\n            <label>Locations({{ spaces.length || '0' }}):</label>\n            <div class=\"value\">\n                <div class=\"list\" [class.shown]=\"show_locations\">\n                    <div\n                        class=\"list-item\"\n                        *ngFor=\"let item of spaces\"\n                        [title]=\"item?.name + ' - ' + (item?.status || 'Approved')\"\n                    >\n                        <div class=\"status\"></div>\n                        <div class=\"text\">{{ item?.name }}</div>\n                        <button class=\"show\" *ngIf=\"item?.map_id\" name=\"map\" (tapped)=\"locate(item)\">\n                            Map\n                        </button>\n                        <a\n                            class=\"show\"\n                            *ngIf=\"item?.support_url && can_control\"\n                            name=\"control\"\n                            [href]=\"item.support_url\"\n                            target=\"_blank\"\n                            >Control</a\n                        >\n                    </div>\n                    <div class=\"list-item\" *ngIf=\"!spaces.length\">No Location</div>\n                </div>\n                <button\n                    class=\"show\"\n                    *ngIf=\"spaces.length > 5\"\n                    (touchrelease)=\"show_locations = !show_locations\"\n                >\n                    {{ show_locations ? 'Hide' : 'Show' }} Locations\n                </button>\n            </div>\n        </div>\n        <div class=\"field\" name=\"host\">\n            <label>Host:</label>\n            <div class=\"value\">{{ organiser.name }}</div>\n        </div>\n        <div class=\"field multi\" name=\"attendees\">\n            <label>Attendees({{ attendees.length || '0' }}):</label>\n            <div class=\"value\">\n                <div class=\"list\" [class.shown]=\"show_attendees\">\n                    <div\n                        class=\"list-item\"\n                        *ngFor=\"let item of attendees\"\n                        [title]=\"\n                            item?.name +\n                            ' - ' +\n                            (item?.status || 'Accepted') +\n                            (item?.email ? '\\n' + item.email : '')\n                        \"\n                    >\n                        <div class=\"status\"></div>\n                        <div class=\"text\">\n                            <div class=\"name\">{{ item.name }}</div>\n                            <div class=\"email\" *ngIf=\"item.email\">\n                                <a [href]=\"'mailto:' + item.email + '?subject=' + event.title\">{{\n                                    item.email\n                                }}</a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <button\n                    class=\"show\"\n                    *ngIf=\"attendees.length > 5\"\n                    (touchrelease)=\"show_attendees = !show_attendees\"\n                >\n                    {{ show_attendees ? 'Hide' : 'Show' }} Attendees\n                </button>\n            </div>\n        </div>\n        <div class=\"field\" name=\"notes\">\n            <label>Notes:</label>\n            <div class=\"value\" [innerHTML]=\"notes\"></div>\n        </div>\n        <div class=\"field\" *ngIf=\"event && event.has_catering\" name=\"catering\">\n            <label>Catered:</label>\n            <div class=\"value\">Yes</div>\n        </div>\n    </div>\n    <div class=\"footer\">\n        <button\n            mat-button\n            *ngIf=\"can_checkin\"\n            name=\"checkin\"\n            [class]=\"\n                status === 'done' && !is_checked_in\n                    ? 'error no-events'\n                    : is_checked_in\n                    ? 'success no-events'\n                    : ''\n            \"\n            (tapped)=\"checkin()\"\n        >\n            <div class=\"text\">\n                {{\n                    status === 'done' && !is_checked_in\n                        ? 'Cancelled'\n                        : is_checked_in\n                        ? 'Checked in'\n                        : 'Checkin'\n                }}\n            </div>\n        </button>\n        <button mat-button *ngIf=\"can_edit\" name=\"edit\" (tapped)=\"edit()\">Edit</button>\n        <button mat-button *ngIf=\"can_edit\" name=\"duplicate\" (tapped)=\"duplicate()\">Duplicate</button>\n    </div>\n</div>\n","import { Component, OnInit, EventEmitter, Input, Output, SimpleChanges, OnChanges, OnDestroy } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { generateBookingForm } from 'src/app/services/data/bookings/booking.utilities';\nimport { BookingConfirmComponent } from 'src/app/shell/bookings/overlays/booking-confirm/booking-confirm.component';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: 'schedule-event-edit',\n    templateUrl: './event-edit.component.html',\n    styleUrls: ['./event-edit.component.scss']\n})\nexport class EventEditComponent extends BaseDirective implements OnInit, OnChanges, OnDestroy {\n    /** Booking to display */\n    @Input() public event: Booking;\n    /** Emitter for action on the display view */\n    @Output() public change = new EventEmitter<{ type: string }>();\n    /** Emitter for changes to the loading state */\n    @Output() public loading = new EventEmitter<string>();\n    /** Form field data */\n    public form: FormGroup;\n\n    constructor(private _service: ApplicationService, private _users: UsersService, private _dialog: MatDialog) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        /* istanbul ignore else */\n        if (this.event) {\n            this.form = generateBookingForm(\n                this.event,\n                this._service.setting('app.booking.show_fields') || []\n            );\n        }\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.event && this.event) {\n            /* istanbul ignore else */\n            if (this.form && changes.event.previousValue) {\n                (changes.event.previousValue as any).event_subject.next({ type: 'item_saved'});\n            }\n            this.form = generateBookingForm(\n                this.event,\n                this._service.setting('app.booking.show_fields') || []\n            );\n        }\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        /* istanbul ignore else */\n        if (this.form && this.event) {\n            (this.event as any).event_subject.next({ type: 'item_saved'});\n        }\n    }\n\n    /**\n     * Exit the edit form\n     */\n    public cancel() {\n        this.change.emit({ type: 'cancel' });\n    }\n\n    /**\n     * Save changes to the booking\n     */\n    public save() {\n        /* istanbul ignore else */\n        if (!this.form.dirty) {\n            this._service.notifyInfo('No changes have been made to booking');\n            return;\n        }\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            const dialog_ref = this._dialog.open(BookingConfirmComponent, {\n                width: '32em',\n                maxWidth: '95vw',\n                maxHeight: '95vh',\n                data: { booking: this.event }\n            });\n            dialog_ref.componentInstance.event.subscribe(event => {\n                /* istanbul ignore else */\n                if (event.reason === 'success') {\n                    this.change.emit({ type: 'view' });\n                }\n            });\n        }\n    }\n}\n","<div class=\"event-edit\">\n    <form *ngIf=\"form\" [formGroup]=\"form\" (ngSubmit)=\"save()\">\n        <div class=\"body\">\n            <a-booking-form [form]=\"form\"></a-booking-form>\n        </div>\n        <div class=\"footer\">\n            <button mat-button type=\"button\" class=\"inverse\" name=\"cancel\" (tapped)=\"cancel()\">\n                Cancel\n            </button>\n            <button mat-button type=\"submit\">Save</button>\n        </div>\n    </form>\n</div>\n","import { Component, OnInit, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\n\n@Component({\n    selector: 'schedule-view-event',\n    templateUrl: './view-event.component.html',\n    styleUrls: ['./view-event.component.scss'],\n})\nexport class ScheduleViewEventComponent extends BaseDirective implements OnChanges, OnInit {\n    /** ID of the current booking to display */\n    @Input() public id: string;\n    /** ID of the next booking */\n    @Input() public next: string;\n    /** ID of the previous booking */\n    @Input() public previous: string;\n    /** Booking to display */\n    public event: Booking;\n    /** Whether booking data is being loaded */\n    public loading: string;\n    /** Whether booking is being edited */\n    public editing: boolean;\n\n    constructor(\n        private _service: ApplicationService,\n        private _bookings: BookingsService,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'arrow_right',\n            this._service.Hotkeys.listen(['ArrowRight'], () => this.nextBooking())\n        );\n        this.subscription(\n            'arrow_left',\n            this._service.Hotkeys.listen(['ArrowLeft'], () => this.previousBooking())\n        );\n        this.subscription(\n            'changes',\n            this._bookings.listen('list').subscribe(() => this.loadEvent())\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.id && this.id) {\n            this.event = null;\n            this.editing = false;\n            this.loading = '';\n            this.loadEvent();\n        }\n    }\n\n    /**\n     * Load the details of the active event\n     */\n    public loadEvent() {\n        this.loading = 'Loading booking data...';\n        let booking = this._bookings.find(this.id);\n        if (booking) {\n            this.event = booking;\n            this.loading = '';\n        } else {\n            this._bookings.show(this.id, {}).then(\n                (bkn) => {\n                    this.loading = '';\n                    this.event = bkn;\n                },\n                () => {\n                    this.loading = '';\n                    this._service.notifyError(`Failed to loaded booking data<br>ID: ${this.id}`);\n                    this._router.navigate(['/schedule']);\n                }\n            );\n        }\n    }\n\n    /**\n     * View the next booking in the list\n     */\n    public nextBooking() {\n        /* istanbul ignore else */\n        if (this.next && !this.editing) {\n            this._router.navigate(['/schedule', 'view', this.next]);\n        }\n    }\n\n    /**\n     * View the previous booking in the list\n     */\n    public previousBooking() {\n        /* istanbul ignore else */\n        if (this.previous && !this.editing) {\n            this._router.navigate(['/schedule', 'view', this.previous]);\n        }\n    }\n\n    /**\n     * Handle changes to sub-components\n     */\n    public onChange(event: { type: string }): void {\n        /* istanbul ignore else */\n        if (event.type === 'edit') {\n            this.editing = true;\n        } else if (event.type === 'view' || event.type === 'cancel') {\n            this.editing = false;\n        }\n    }\n}\n","<div class=\"event-display\">\n    <div class=\"header\">\n        <div class=\"icon\"></div>\n        <div class=\"details\">\n            <a mat-icon-button name=\"previous\" [routerLink]=\"['/schedule', 'view', previous]\" [class.disabled]=\"!previous\">\n                <div class=\"left icon\">\n                    <i class=\"material-icons\">keyboard_arrow_left</i>\n                </div>\n            </a>\n            <div class=\"title\">{{ event ? event.title || 'No title' : '????' }}</div>\n            <a mat-icon-button name=\"next\" [routerLink]=\"['/schedule', 'view', next]\" [class.disabled]=\"!next\">\n                <div class=\"right icon\">\n                    <i class=\"material-icons\">keyboard_arrow_right</i>\n                </div>\n            </a>\n        </div>\n        <a mat-icon-button [routerLink]=\"['/schedule']\">\n            <div class=\"icon\">\n                <i class=\"material-icons\">close</i>\n            </div>\n        </a>\n    </div>\n    <div class=\"body\">\n        <div class=\"content\">\n            <ng-container *ngIf=\"loading\">\n                <div class=\"no-item center\">\n                    <div class=\"icon\">\n                        <mat-spinner diameter=\"48\"></mat-spinner>\n                    </div>\n                    <div class=\"text\">\n                        {{ loading }}\n                    </div>\n                </div>\n            </ng-container>\n            <div [class.hide]=\"loading\">\n                <ng-container *ngIf=\"!editing; else edit_form\">\n                    <schedule-event-details [event]=\"event\" (change)=\"onChange($event)\" (loading)=\"loading = $event\"></schedule-event-details>\n                </ng-container>\n                <ng-template #edit_form>\n                    <schedule-event-edit [event]=\"event\" (change)=\"onChange($event)\" (loading)=\"loading = $event\"></schedule-event-edit>\n                </ng-template>\n            </div>\n        </div>\n    </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from '../shared/base.directive';\nimport { ApplicationService } from '../services/app.service';\nimport { ApplicationLoadingState, LoadingState } from '../shared/utilities/types.utilities';\nimport { ApplicationIcon } from '../shared/utilities/settings.interfaces';\nimport { UsersService } from '../services/data/users/users.service';\n\n@Component({\n    selector: 'app-shell-wrapper',\n    templateUrl: './shell.component.html',\n    styleUrls: ['./shell.component.scss'],\n})\nexport class ShellWrapperComponent extends BaseDirective implements OnInit {\n    /** Loading state of the application */\n    public loading_state: ApplicationLoadingState;\n    /** Logo of the application organisation */\n    public logo: ApplicationIcon;\n\n    constructor(private _service: ApplicationService, private _users: UsersService) {\n        super();\n    }\n\n    /** Whether the user needs to login */\n    public get show_login(): boolean {\n        return !this._users.is_logged_in;\n    }\n\n    /** Whether a module is still loading data */\n    public get is_loading(): boolean {\n        if (this.loading_state) {\n            for (const mod in this.loading_state) {\n                if (this.loading_state[mod] && this.loading_state[mod].state === 'loading') {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    /** List of modules with a loading state */\n    public get loading_state_list(): LoadingState[] {\n        const list: LoadingState[] = [];\n        for (const mod in this.loading_state) {\n            if (this.loading_state[mod]) {\n                list.push(this.loading_state[mod]);\n            }\n        }\n        return list;\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'loading',\n            this._service.listen<ApplicationLoadingState>('loading', (loading) => {\n                this.loading_state = loading;\n            })\n        );\n        this._service.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.logo = this._service.setting('app.logo_light') || { type: 'icon' };\n        });\n    }\n}\n","\n<div class=\"shell\">\n    <div class=\"view\" *ngIf=\"!show_login\">\n        <router-outlet></router-outlet>\n    </div>\n    <div class=\"login-module\" *ngIf=\"show_login\">\n        <app-login></app-login>\n    </div>\n    <div class=\"loading-block\" *ngIf=\"is_loading\">\n        <div class=\"info-block\">\n            <div class=\"header\" [style.background-color]=\"logo?.background\">\n                <div class=\"logo\">\n                    <i *ngIf=\"logo?.type === 'icon'\" [class]=\"logo.class\">{{ logo.content }}</i>\n                    <img *ngIf=\"logo?.type === 'img'\" [src]=\"logo.src | safe:'resource'\" />\n                </div>\n            </div>\n            <div class=\"item\" *ngFor=\"let item of loading_state_list\">\n                <div class=\"message\">{{ item.message }}</div>\n                <div class=\"icon\">\n                    <ng-container [ngSwitch]=\"item.state\">\n                        <ng-container *ngSwitchCase=\"'complete'\">\n                            <i class=\"material-icons success\">done</i>\n                        </ng-container>\n                        <ng-container *ngSwitchCase=\"'failed'\">\n                            <i class=\"material-icons failure\">close</i>\n                        </ng-container>\n                        <ng-container *ngSwitchDefault>\n                            <mat-spinner diameter=\"16\"></mat-spinner>\n                        </ng-container>\n                    </ng-container>\n                </div>\n            </div>\n        </div>\n    </div>\n    <feedback></feedback>\n</div>\n","export const environment = {\n  production: true\n};\n","// IMPORTANT: THIS FILE IS AUTO GENERATED! DO NOT MANUALLY EDIT OR CHECKIN!\n/* tslint:disable */\nexport const VERSION = {\n    \"dirty\": false,\n    \"raw\": \"1d1ecbb\",\n    \"hash\": \"1d1ecbb\",\n    \"distance\": null,\n    \"tag\": null,\n    \"semver\": null,\n    \"suffix\": \"1d1ecbb\",\n    \"semverString\": null,\n    \"version\": \"0.0.0\",\n    \"core_version\": \"1.0.0\",\n    \"time\": 1593562325312\n};\n/* tslint:enable */\n","\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}