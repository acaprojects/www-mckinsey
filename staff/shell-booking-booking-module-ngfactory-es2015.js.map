{"version":3,"sources":["./src/app/shell/booking/booking.component.ts.BookingComponent.html","./src/app/shell/booking/booking.component.ts","./src/app/shell/booking/booking.module.ts","./src/app/shell/booking/main-flow/catering/category-list/category-list.component.html","./src/app/shell/booking/main-flow/catering/category-list/category-list.component.ts","./src/app/shell/booking/main-flow/catering/catering-order/catering-order.component.html","./src/app/shell/booking/main-flow/catering/catering-order/catering-order.component.ts","./src/app/shell/booking/main-flow/catering/catering.component.html","./src/app/shell/booking/main-flow/catering/catering.component.ts","./src/app/shell/booking/main-flow/catering/item-list/item-list.component.html","./src/app/shell/booking/main-flow/catering/item-list/item-list.component.ts","./src/app/shell/booking/main-flow/catering/item-list/list-item/list-item.component.html","./src/app/shell/booking/main-flow/catering/item-list/list-item/list-item.component.ts","./src/app/shell/booking/main-flow/find-space/find-space.component.html","./src/app/shell/booking/main-flow/find-space/find-space.component.ts","./src/app/shell/booking/main-flow/find-space/space-item/space-item.component.html","./src/app/shell/booking/main-flow/find-space/space-item/space-item.component.ts","./src/app/shell/booking/main-flow/form/form.component.html","./src/app/shell/booking/main-flow/form/form.component.ts","./src/app/shell/booking/main-flow/main-flow.component.html","./src/app/shell/booking/main-flow/main-flow.component.ts"],"names":[],"mappings":"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","file":"shell-booking-booking-module-ngfactory-es2015.js","sourcesContent":["<router-outlet></router-outlet>","\nimport { Component, OnInit } from '@angular/core';\n\nimport { AppService } from '../../services/app.service';\nimport { BaseComponent } from '../../shared/globals/base.component';\n\n@Component({\n    selector: 'app-booking',\n    template: '<router-outlet></router-outlet>',\n    styles: ['']\n})\nexport class BookingComponent extends BaseComponent implements OnInit {\n    public model: any = {};\n\n    constructor(private service: AppService) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.service.set('BANNER.block_height', 0);\n    }\n}\n","\nimport { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { RouterModule } from '@angular/router';\n\nimport { WidgetsModule } from '@acaprojects/ngx-widgets';\nimport { ACheckboxModule } from '@acaprojects/ngx-checkbox';\n\nimport { SharedComponentModule } from '../../shared/components/shared.module';\n\nimport { ROUTES } from './booking.routes';\n\nimport { BookingComponent } from './booking.component';\nimport { BookingMainFlowComponent } from './main-flow/main-flow.component';\nimport { BookingMainFlowFormComponent } from './main-flow/form/form.component';\nimport { BookingMainFlowFindSpaceComponent } from './main-flow/find-space/find-space.component';\nimport { BookingMainFlowSpaceItemComponent } from './main-flow/find-space/space-item/space-item.component';\nimport { BookingMainFlowCateringComponent } from './main-flow/catering/catering.component';\nimport { BookingMainFlowCateringOrderComponent } from './main-flow/catering/catering-order/catering-order.component';\nimport { BookingMainFlowCateringCategoryListComponent } from './main-flow/catering/category-list/category-list.component';\nimport { BookingMainFlowCateringItemListComponent } from './main-flow/catering/item-list/item-list.component';\nimport { BookingMainFlowCateringListItemComponent } from './main-flow/catering/item-list/list-item/list-item.component';\n\nimport { BookingCateringDetailsModalComponent } from './overlays/catering-details/catering-details.component';\nimport { BookingEquipmentDetailsModalComponent } from './overlays/equipment-details/equipment-details.component';\nimport { BookingDetailsModalComponent } from './overlays/booking-details/booking-details.component';\n\nconst COMPONENTS: Type<any>[] = [\n    BookingComponent,\n    BookingMainFlowComponent,\n    BookingMainFlowFormComponent,\n\n    BookingMainFlowFindSpaceComponent,\n    BookingMainFlowSpaceItemComponent,\n\n    BookingMainFlowCateringComponent,\n    BookingMainFlowCateringOrderComponent,\n    BookingMainFlowCateringCategoryListComponent,\n    BookingMainFlowCateringItemListComponent,\n    BookingMainFlowCateringListItemComponent\n];\n\nexport const BOOKING_ENTRY_COMPONENTS: Type<any>[] = [\n    BookingEquipmentDetailsModalComponent,\n    BookingCateringDetailsModalComponent,\n    BookingDetailsModalComponent\n];\n\n@NgModule({\n    declarations: [\n        ...COMPONENTS\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        WidgetsModule,\n        RouterModule.forChild(ROUTES),\n        SharedComponentModule,\n        ScrollingModule,\n        ACheckboxModule\n    ],\n})\nexport class AppBookingModule { }\n","<div class=\"catering-category-list\">\n    <div\n        class=\"card\"\n        *ngFor=\"let item of types\"\n        (touchrelease)=\"selectItem(item)\"\n        [style.background-image]=\"(item.src ? 'url(' + item.src + ')' : '') | safestyle\"\n    >\n        <div class=\"overlay\"></div>\n        <div class=\"text\">{{ item.name }}</div>\n    </div>\n</div>\n","\nimport { Component, OnInit, Input, Output, EventEmitter, SimpleChanges } from '@angular/core';\n\nimport { AppService } from '../../../../../services/app.service';\nimport { BaseComponent } from '../../../../../shared/globals/base.component';\nimport { IRoom } from '../../../../../services/data/rooms.service';\nimport { ICateringMenuCategory } from '../../../../../services/data/menu.service';\n\n@Component({\n    selector: 'catering-category-list',\n    templateUrl: './category-list.component.html',\n    styleUrls: ['./category-list.component.scss']\n})\nexport class BookingMainFlowCateringCategoryListComponent extends BaseComponent implements OnInit {\n    /** Space selected to add catering to */\n    @Input() public space: IRoom;\n    /** List of available catering item categories */\n    @Input() public types: ICateringMenuCategory[];\n    /** Emitter for the selected category */\n    @Output() public selected = new EventEmitter<ICateringMenuCategory>();\n\n    public packages: ICateringMenuCategory;\n\n    constructor(private _service: AppService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        // this.types = [\n        //     { id: 'refresh', name: 'Refreshments', src: 'assets/img/catering/refreshments.jpg' },\n        //     { id: 'brkfst', name: 'Breakfast', src: 'assets/img/catering/breakfast.jpg' },\n        //     { id: 'lunch', name: 'Lunch', src: 'assets/img/catering/lunch.jpg' },\n        //     { id: 'finger-food', name: 'Finger Food', src: 'assets/img/catering/finger-food.jpg' },\n        //     { id: 'bowl-food', name: 'Bowl Food', src: 'assets/img/catering/bowl-food.jpg' },\n        //     { id: 'bistro', name: 'Bistro Dining', src: 'assets/img/catering/bistro.jpg' },\n        //     { id: 'fork-buffet', name: 'Fork Buffet', src: 'assets/img/catering/fork-buffet.jpg' },\n        //     { id: 'private-dining', name: 'Private Fine Dining', src: 'assets/img/catering/private-dining.jpg' },\n        //     { id: 'canapes', name: 'Canapes', src: 'assets/img/catering/canapes.jpg' },\n        //     { id: 'beverages', name: 'Beverages', src: 'assets/img/catering/beverages.jpg' },\n        // ]\n    }\n\n    public selectItem(item: ICateringMenuCategory) {\n        this.selected.emit(item);\n    }\n}\n","<div class=\"details\">\n    <div class=\"title\">Order List</div>\n    <div class=\"count\">{{ count || '0' }} item{{ count === 1 ? '' : 's' }} selected</div>\n</div>\n<div class=\"contents\" [class.show]=\"show\">\n    <div class=\"rooms\" *ngFor=\"let order of order_list\">\n        <div class=\"name\"><span>Deliver to:</span> {{ order.name || 'Mystery Room' }}</div>\n        <div class=\"item\" *ngFor=\"let item of (order.items || [])\">\n            <div class=\"item-details\">\n                <div class=\"name\">{{ item.name }}</div>\n                <div class=\"cost\">{{ (item.amount * item.price) / 100 | currency:order.symbol }}</div>\n            </div>\n            <div class=\"amount\" title=\"Ctrl + Click to add/remove 10\nShift + Click to add/remove 100\">\n                <div\n                    class=\"icon less\"\n                    [class.disabled]=\"!item.amount || item.amount < 1\"\n                    (touchrelease)=\"change(item, -step)\"\n                    click-responder\n                >\n                    <i class=\"material-icons\">remove</i>\n                </div>\n                <div class=\"value\">{{ item.amount }}</div>\n                <div class=\"icon more\" [class.disabled]=\"item.amount >= (item.maximum || 100)\" (touchrelease)=\"change(item, step)\" click-responder>\n                    <i class=\"material-icons\">add</i>\n                </div>\n            </div>\n        </div>\n        <div class=\"total\"><span>Total:</span> {{ ((order.total / 100) || 0) | currency:order.symbol }}</div>\n    </div>\n</div>\n<!-- <div class=\"total\"><span>Order Total:</span> {{ total / 100 | currency }}</div> -->\n<div class=\"info\" *ngIf=\"show\">*Orders are subject to a <span>48 hour limit</span> for cancellation ahead of a meeting</div>\n<div class=\"option\">\n    <btn (tapped)=\"event.emit({ type: 'next' })\" [disabled]=\"!valid\">Add to booking &amp; continue</btn>\n</div>\n","import { Component, OnInit, EventEmitter, Input, Output } from '@angular/core';\nimport { ADynamicFormField } from '@acaprojects/ngx-dynamic-forms';\nimport { IBookingFlowEvent } from '../../main-flow.component';\nimport { BaseComponent } from '../../../../../shared/globals/base.component';\nimport { AppService } from '../../../../../services/app.service';\nimport { IRoom } from '../../../../../services/data/rooms.service';\n\nexport interface ICateringOrderList {\n    [room_id: string]: ICateringOrder;\n}\n\nexport interface ICateringOrder {\n    room_id: string;\n    name?: string;\n    items: ICateringItem[];\n    total: number;\n    count?: number;\n    symbol?: string;\n}\n\nexport interface ICateringItem {\n    id: string;\n    name?: string;\n    amount: number;\n    unit_cost: number;\n    maximum?: number;\n    minimum?: number;\n}\n\n@Component({\n    selector: 'catering-order',\n    templateUrl: './catering-order.component.html',\n    styleUrls: ['./catering-order.component.scss']\n})\nexport class BookingMainFlowCateringOrderComponent extends BaseComponent {\n    /** List of rooms selected for the booking */\n    @Input() spaces: IRoom[];\n    /** Form field for storing catering data for the booking */\n    @Input() catering: ADynamicFormField;\n    /** Show contents of the order */\n    @Input() public show: boolean;\n    /** Step value for adding catering items */\n    @Input() public step: number = 1;\n    /** Emitter for form events */\n    @Output() public event = new EventEmitter<IBookingFlowEvent>();\n\n    constructor(private _service: AppService) {\n        super();\n    }\n\n    /** Whether catering order is valid */\n    public get valid(): boolean {\n        const list = this.order_list;\n        return list.reduce((v, i) => v && (i.items || []).reduce((v, j) => v && this.isValid(j), true), true);\n    }\n\n    /**\n     * Whether the given catering item/package is valid\n     * @param item\n     */\n    private isValid(item) {\n        if (item.must_select && item.amount) {\n            return item.must_select <= item.items.reduce((v, i) => v + (i.selected ? 1 : 0), 0);\n        } else if (item.items) {\n            return item.items.reduce((v, i) => v && this.isValid(i), true);\n        }\n        return true;\n    }\n\n    /** Number of total items in all room orders */\n    public get count(): number {\n        const list = this.order_list;\n        return list.reduce((v, i) => {\n            const count = (i.items || []).reduce((c, j) => c + j.amount, 0);\n            return v + count;\n        }, 0);\n    }\n\n    /** Total cost for all room orders */\n    public get total() {\n        const list = this.order_list;\n        return list.reduce((v, i) => v + i.total, 0);\n    }\n\n    /** List of catering orders from the form field */\n    public get order_list(): ICateringOrder[] {\n        const orders = this.catering ? this.catering.control.value : {};\n        const rooms = Object.keys(orders);\n        const list = rooms.filter(i => this.spaces.find(j => j.id === i)).map(i => {\n            if (orders[i]) {\n                const room: any = (this._service.Rooms.item(orders[i].room_id || i) || { name: '', level: {} });\n                orders[i].name = room.name;\n                orders[i].symbol = this.symbol(room.level.bld_id);\n                orders[i].total = (orders[i].items || []).reduce((c, j) => c + j.amount * (j.unit_cost || j.price), 0);\n            } else {\n                orders[i] = {};\n            }\n            return orders[i];\n        });\n        return list;\n    }\n\n    public symbol(bld_id: string): string {\n        const building = this._service.Buildings.get(bld_id) || {} as any;\n        return building.currency || 'USD';\n    }\n\n    public change(item: ICateringItem, amount: number) {\n        item.amount += amount;\n        // Check to make sure adding set the correct amount if adding to 0\n        if (amount > 0 && item.minimum && item.amount < item.minimum) {\n            item.amount = item.minimum;\n        }\n        // Check item quantity is within bounds\n        if (item.amount < (item.minimum || 0)) {\n            item.amount = 0;\n        } else if (item.amount > (item.maximum || 100)) {\n            item.amount = (item.maximum || 100)\n        }\n        this.catering.setValue(this.catering.getValue());\n    }\n}\n","<div\n    class=\"catering\"\n    (window:keydown.control)=\"enableModifer('control')\"\n    (window:keyup.control)=\"disableModifer('control')\"\n    (window:keydown.shift)=\"enableModifer('shift')\"\n    (window:keyup.shift)=\"disableModifer('shift')\"\n>\n    <div class=\"topbar\">\n        <div class=\"icon\" (touchrelease)=\"event.emit({ type: 'previous' })\">\n            <i class=\"material-icons\">arrow_back</i>\n        </div>\n        <div class=\"text\" (touchrelease)=\"event.emit({ type: 'previous' })\">\n            {{ id ? \"Book\" : \"Find Space\" }}\n        </div>\n    </div>\n    <div class=\"header\">\n        <div class=\"search\">\n            <input\n                [(ngModel)]=\"search_str\"\n                (ngModelChange)=\"search()\"\n                placeholder=\"Type to search\"\n            />\n            <div class=\"icon\">\n                <i class=\"material-icons\">search</i>\n            </div>\n            <div\n                class=\"icon\"\n                [class.disabled]=\"!search_str\"\n                (touchrelease)=\"search_str = ''\"\n            >\n                <i class=\"material-icons\">close</i>\n            </div>\n        </div>\n        <div class=\"room-list\" *ngIf=\"spaces && spaces.length > 0\">\n            <div\n                class=\"room\"\n                *ngFor=\"let item of spaces\"\n                [class.active]=\"active_space && active_space.id === item.id\"\n                [class.not-catered]=\"!is_catered\"\n                (touchrelease)=\"setSpace(item)\"\n            >\n                <div class=\"name\">{{ item.name }}</div>\n                <div class=\"bar\"></div>\n            </div>\n        </div>\n    </div>\n    <div class=\"body\" *ngIf=\"catering_allowed; else no_catering_allowed\">\n        <ng-container\n            *ngIf=\"active_space && !loading[active_space.id]; else loader\"\n        >\n            <catering-category-list\n                *ngIf=\"!category\"\n                [types]=\"menu_map[active_space.id]\"\n                (selected)=\"category = $event\"\n            ></catering-category-list>\n            <catering-item-list\n                *ngIf=\"category\"\n                [step]=\"step\"\n                [space]=\"active_space\"\n                [category]=\"category\"\n                [field]=\"catering\"\n                (event)=\"category = null\"\n            ></catering-item-list>\n            <div\n                class=\"no-catering\"\n                *ngIf=\"\n                    active_space &&\n                    (!menu_map[active_space.id] ||\n                        menu_map[active_space.id].length <= 0)\n                \"\n            >\n                <div class=\"icon\">\n                    <img\n                        [alt]=\"\n                            is_catered\n                                ? 'Concierge Catering'\n                                : 'No Catering Available'\n                        \"\n                        [src]=\"\n                            is_catered\n                                ? 'assets/img/concierge.svg'\n                                : 'assets/img/no-catering.svg'\n                        \"\n                    />\n                </div>\n                <p>\n                    <ng-container *ngIf=\"is_catered; else no_catering\">\n                        Concierge will be in touch for\n                        {{ active_building.name }} catered rooms\n                    </ng-container>\n                    <ng-template #no_catering>\n                        Catering is <span>not available</span> in Converge for\n                        {{ active_building.name }} spaces. Please contact the\n                        local office for more information.\n                    </ng-template>\n                </p>\n                <div class=\"toggle\" *ngIf=\"is_catered\">\n                    <a-checkbox\n                        [(ngModel)]=\"has_catering\"\n                        [label]=\"\n                            'Add catering to ' +\n                            (active_space.number || active_space.name) +\n                            '?'\n                        \"\n                    ></a-checkbox>\n                </div>\n            </div>\n        </ng-container>\n        <ng-template #loader>\n            <div class=\"no-item\">\n                <div class=\"icon\">\n                    <spinner\n                        type=\"circle-ring\"\n                        color=\"rgba(0,0,0, .35)\"\n                    ></spinner>\n                </div>\n                <div class=\"text\">Loading menu data...</div>\n            </div>\n        </ng-template>\n    </div>\n    <div class=\"footer\">\n        <div class=\"order-list\" [class.show]=\"show_order\">\n            <div class=\"bar\" (touchrelease)=\"show_order = !show_order\"></div>\n            <catering-order\n                [spaces]=\"spaces\"\n                [step]=\"step\"\n                [catering]=\"catering\"\n                [show]=\"show_order\"\n                (event)=\"event.emit($event)\"\n            ></catering-order>\n        </div>\n    </div>\n</div>\n<ng-template #no_catering_allowed>\n    <div class=\"body\">\n        <div class=\"no-catering margin\">\n            <div class=\"icon\">\n                <img\n                    alt=\"No Catering Available\"\n                    src=\"assets/img/no-catering.svg\"\n                />\n            </div>\n            <p>\n                Catering is <span>not available</span> for this booking.<br>\n                Catering must be ordered at least {{ active_building.catering_restricted_from || '0' }} hours in advance for meetings at {{ active_building.name }}.\n            </p>\n        </div>\n    </div>\n</ng-template>\n","import { Component, Input, EventEmitter, Output, OnChanges, SimpleChanges } from '@angular/core';\nimport { ADynamicFormField } from '@acaprojects/ngx-dynamic-forms';\n\nimport { IBookingFlowEvent } from '../main-flow.component';\nimport { IRoom } from '../../../../services/data/rooms.service';\nimport { BaseComponent } from '../../../../shared/globals/base.component';\nimport { AppService } from '../../../../services/app.service';\nimport { ICateringMenuCategory } from '../../../../services/data/menu.service';\nimport { IBuilding } from '../../../../services/data/buildings.service';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'booking-main-flow-catering',\n    templateUrl: './catering.component.html',\n    styleUrls: ['./catering.component.scss']\n})\nexport class BookingMainFlowCateringComponent extends BaseComponent implements OnChanges {\n    /** Booking ID */\n    @Input() id: string;\n    /** List of rooms selected for the booking */\n    @Input() spaces: IRoom[];\n    /** Start time of the current booking */\n    @Input() date: number;\n    /** Form field for storing catering data for the booking */\n    @Input() catering: ADynamicFormField;\n    /** Emitter for form events */\n    @Output() public event = new EventEmitter<IBookingFlowEvent>();\n\n    /** Mapping of rooms to loading states */\n    public loading: { [id: string]: boolean } = {};\n    /** Mapping of room ids to available menu categories */\n    public menu_map: { [room_id: string]: ICateringMenuCategory[] } = {};\n    /** Selected menu category */\n    public category: ICateringMenuCategory;\n    /** Value to filter menu items on */\n    public search_str: string;\n    /** Active room to add catering items to */\n    public active_space: IRoom;\n\n    public show_order: boolean;\n    /** State of modifier keys */\n    public key_states: { shift: boolean, control: boolean } = { shift: false, control: false };\n    /** Step value for adding catering items */\n    public step: number = 1;\n\n    constructor(private _service: AppService) {\n        super();\n    }\n\n    public get active_building(): IBuilding {\n        if (this.active_space && this.active_space.level) {\n            const building = this._service.Buildings.get(this.active_space.level.bld_id);\n            return building || ({} as any);\n        }\n        return {} as any;\n    }\n\n    /** Whether catering can be provided if no menu is available */\n    public get is_catered() {\n        return !!this.active_building.has_catering;\n    }\n\n    /** Whether catering is allowed for the current time */\n    public get catering_allowed(): boolean {\n        const now = dayjs().startOf('m');\n        const start = dayjs(this.date).startOf('m').second(1);\n        return now.isBefore(start.subtract(this.active_building.catering_restricted_from || 0, 'h'), 's');\n    }\n\n    /** Whether the selected room has catering */\n    public get has_catering(): boolean {\n        if (this.active_space && this.catering) {\n            const value = this.catering.control.value;\n            const space = value[this.active_space.id] || {};\n            return (space ? space.has_catering : null) || false;\n        }\n        return false;\n    }\n\n    public set has_catering(state: boolean) {\n        if (this.active_space && this.catering) {\n            const value = this.catering.control.value;\n            const space = value[this.active_space.id] || {};\n            space.has_catering = state;\n            value[this.active_space.id] = space;\n            this.catering.setValue(value);\n        }\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.spaces && this.spaces) {\n            if (!this.active_space || this.spaces.findIndex(i => i.id === this.active_space.id) < 0) {\n                this.active_space = this.spaces[0];\n            }\n            this.loadMenu();\n        }\n    }\n\n    /**\n     * Load menu categories for the selected rooms\n     */\n    public loadMenu() {\n        if (this.spaces && this.spaces instanceof Array) {\n            this.spaces.forEach(i => {\n                this.loading[i.id] = true;\n                this.menu_map[i.id] = null;\n                this._service.Menu.query({ room_id: i.id }).then(\n                    list => {\n                        this.loading[i.id] = false;\n                        this.menu_map[i.id] = list || [];\n                    },\n                    () => {\n                        this.loading[i.id] = false;\n                        this.menu_map[i.id] = [];\n                    }\n                );\n            });\n        }\n    }\n\n    /**\n     * Update the active space\n     * @param space New active space\n     */\n    public setSpace(space: IRoom) {\n        this.category = null;\n        this.timeout('set_space', () => (this.active_space = space), 100);\n    }\n\n    /**\n     * Filter category items\n     */\n    public search() {\n        if (this.active_space && this.search_str) {\n            const search = this.search_str.toLowerCase();\n            const categories = this.menu_map[this.active_space.id];\n            const list = {\n                id: 'search',\n                name: 'Search results',\n                src: '',\n                package: false,\n                zones: [],\n                items: categories.reduce((v, i) => {\n                    v = v.concat(\n                        i.items.filter((j: any) => {\n                            if (j.items) {\n                                return (\n                                    j.name.toLowerCase().indexOf(search) >= 0 ||\n                                    j.items.findIndex(k => k.name.toLowerCase().indexOf(search) >= 0) >= 0\n                                );\n                            }\n                            return j.name.toLowerCase().indexOf(search) >= 0;\n                        })\n                    );\n                    return v;\n                }, [])\n            };\n            this.category = list;\n        } else {\n            this.category = null;\n        }\n    }\n\n    /** Enable a step modifier key */\n    public enableModifer(mod: 'shift' | 'control') {\n        this.key_states[mod] = true;\n        this.updateStep();\n    }\n\n    /** Disable a step modifier key */\n    public disableModifer(mod: 'shift' | 'control') {\n        this.key_states[mod] = false;\n        this.updateStep();\n    }\n\n    /** Update the increment and decrement step value */\n    public updateStep() {\n        this.step = this.key_states.shift ? 100 : (this.key_states.control ? 10 : 1);\n    }\n}\n","<div class=\"catering-item-list\">\n    <div class=\"category-header\">\n        <div class=\"heading\">{{ category.name }}</div>\n        <div class=\"back\" (touchrelease)=\"event.emit()\">\n            <div class=\"icon\">\n                <i class=\"material-icons\">keyboard_arrow_left</i>\n            </div>\n            <div class=\"text\">Categories</div>\n        </div>\n    </div>\n    <ng-container *ngIf=\"category && category.items && category.items.length > 0; else empty\">\n        <div class=\"item\" *ngFor=\"let item of category.items\">\n            <catering-item [step]=\"step\" [space]=\"space\" [field]=\"field\" [parent]=\"category\" [item]=\"item\" [(selected)]=\"item.selected\"></catering-item>\n        </div>\n    </ng-container>\n    <ng-template #empty>\n        <div class=\"no-item\">\n            <div class=\"icon\">\n                <i class=\"material-icons\">close</i>\n            </div>\n            <div class=\"text\">No matching items</div>\n        </div>\n    </ng-template>\n</div>","\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { ADynamicFormField } from '@acaprojects/ngx-dynamic-forms';\n\nimport { BaseComponent } from '../../../../../shared/globals/base.component';\nimport { ICateringMenuCategory } from '../../../../../services/data/menu.service';\nimport { IRoom } from '../../../../../services/data/rooms.service';\n\n@Component({\n    selector: 'catering-item-list',\n    templateUrl: './item-list.component.html',\n    styleUrls: ['./item-list.component.scss']\n})\nexport class BookingMainFlowCateringItemListComponent extends BaseComponent {\n    /** Space selected to add catering to */\n    @Input() public space: IRoom;\n    /** Selected category of items to display */\n    @Input() category: ICateringMenuCategory;\n    /** Field for storing ordered catering items */\n    @Input() field: ADynamicFormField;\n    /** Event emitter for item listings */\n    @Output() public event = new EventEmitter();\n    /** Step value for adding catering items */\n    @Input() public step: number = 1;\n\n}\n\n","<div\n    class=\"catering-list-item\"\n    [attr.item-id]=\"item?.id\"\n    [class.simple]=\"simple\"\n    (touchrelease)=\"toggle()\"\n>\n    <div class=\"details\">\n        <div\n            class=\"image\"\n            [style.background-image]=\"(item.src ? 'url(' + item.src + ')' : '') | safestyle\"\n        >\n        </div>\n        <div class=\"info\" (touchrelease)=\"show_list = !show_list\">\n            <div class=\"name\">{{ item.name }}</div>\n            <div class=\"count\" *ngIf=\"!item.package\">\n                {{ item.price / 100 | currency: symbol }}\n                {{\n                    (item.price ? '| ' : '') + item.description ||\n                        (item.items ? 'Selection of ' + item.items.length + ' items' : '') ||\n                        'No description'\n                }}\n            </div>\n            <div class=\"count\" *ngIf=\"item.package\">\n                {{ item.price / 100 | currency: symbol }}\n                {{ item.description ? (item.price ? '| ' : '') + item.description : '' }}\n                {{ item.minimum ? ' | Minimum of ' + item.minimum : '' }}\n                {{ item.must_select ? ' | Select ' + item.must_select + ' from the below options' : '' }}\n            </div>\n        </div>\n        <div\n            class=\"amount\"\n            *ngIf=\"!parent.package && !parent.must_select && item.price; else radio_option\"\n            title=\"Ctrl + Click to add/remove 10\nShift + Click to add/remove 100\"\n        >\n            <div\n                class=\"icon less\"\n                [class.disabled]=\"!item.amount || item.amount <= 0\"\n                (touchrelease)=\"remove(item)\"\n                click-responder\n            >\n                <i class=\"material-icons\">remove</i>\n            </div>\n            <div class=\"value\">{{ item.amount || '0' }}</div>\n            <div\n                class=\"icon more\"\n                [class.disabled]=\"item.amount >= (item.maximum || 100)\"\n                (touchrelease)=\"add(item)\"\n                click-responder\n            >\n                <i class=\"material-icons\">add</i>\n            </div>\n        </div>\n        <ng-template #radio_option>\n            <div class=\"amount select\" *ngIf=\"!item.package\">\n                <radio-btn *ngIf=\"parent.must_select === 1\" [model]=\"selected\"></radio-btn>\n                <a-checkbox *ngIf=\"parent.must_select > 1\" [ngModel]=\"selected\"></a-checkbox>\n            </div>\n        </ng-template>\n    </div>\n    <div class=\"sub-items\" *ngIf=\"item && item.items\" [@show]=\"show_list ? 'show' : 'hide'\">\n        <div class=\"item\" *ngFor=\"let itm of item.items\" [class.selection]=\"itm.items && itm.items.length > 0\">\n            <catering-item\n                [simple]=\"true\"\n                [space]=\"space\"\n                [field]=\"field\"\n                [parent]=\"item\"\n                [item]=\"itm\"\n                [(selected)]=\"itm.selected\"\n                (selectedChange)=\"handleSelect(itm)\"\n            ></catering-item>\n            <div class=\"bar\"></div>\n        </div>\n    </div>\n</div>\n","\nimport { trigger, state, style, animate, transition } from '@angular/animations';\nimport { Component, Input, SimpleChanges, Output, EventEmitter } from '@angular/core';\nimport { ADynamicFormField } from '@acaprojects/ngx-dynamic-forms';\n\nimport { ICateringMenuItem, ICateringMenuCategory } from '../../../../../../services/data/menu.service';\nimport { BaseComponent } from '../../../../../../shared/globals/base.component';\nimport { IRoom } from '../../../../../../services/data/rooms.service';\nimport { AppService } from '../../../../../../services/app.service';\n\n@Component({\n    selector: 'catering-item',\n    templateUrl: './list-item.component.html',\n    styleUrls: ['./list-item.component.scss'],\n    animations: [\n        trigger('show', [\n            state('show', style({ opacity: 1, height: '*' })),\n            state('hide', style({ opacity: 0, height: 0 })),\n            transition('show <=> hide', animate('200ms')),\n        ])\n    ]\n})\nexport class BookingMainFlowCateringListItemComponent extends BaseComponent {\n    /** Simple display of details */\n    @Input() simple: boolean;\n    /** Space selected to add catering to */\n    @Input() public space: IRoom;\n    /** Catering parent group or category */\n    @Input() public parent: ICateringMenuCategory;\n    /** Catering item or item group */\n    @Input() public item: any;\n    /** Field for storing ordered catering items */\n    @Input() field: ADynamicFormField;\n    /** Whether the item is currently selected */\n    @Input() public selected: boolean;\n    /** Whether the item can be selected */\n    @Input() public disabled: number;\n    /** Emitter for changes to the selected amount of the item */\n    @Output() public selectedChange = new EventEmitter<boolean>();\n    /** Whether to show list of sub items */\n    public show_list: boolean;\n    /** Step value for adding catering items */\n    @Input() public step: number = 1;\n    \n    constructor(private _service: AppService) {\n        super();\n    }\n\n    /** Currency code for the active space */\n    public get symbol(): string {\n        const level = this.space.level || {} as any;\n        const building = this._service.Buildings.get(level.bld_id) || {}  as any;\n        return building.currency || 'USD';\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.field && this.field) {\n            this.subscription('control', this.field.control.valueChanges.subscribe(() => this.orderUpdated()));\n        }\n        if (changes.space && this.space) {\n            this.orderUpdated()\n        }\n    }\n\n    /**\n     * Add the given item from the catering order\n     * @param item Item to add\n     */\n    public add(item: ICateringMenuItem) {\n        if (this.field && this.space) {\n            const item_map = this.field.control.value || {};\n            if (!item_map[this.space.id]) {\n                item_map[this.space.id] = { room_id: this.space.id, name: this.space.name };\n            }\n            const item_list = item_map[this.space.id].items || [];\n            const itm = item_list.find(i => i.id === item.id || i.name === this.item.name);\n            if (itm) {\n                if (!itm.amount) { itm.amount = 0 }\n                itm.amount += this.step;\n                if (itm.amount && itm.amount < (itm.minimum || 1)) {\n                    itm.amount = Math.max(itm.minimum || 1, this.step);\n                }\n                if (itm.amount > (itm.maximum || 100)) {\n                    itm.amount = (itm.maximum || 100);\n                }\n\n            } else {\n                (item as any).amount = Math.max(1, item.minimum || 1);\n                if (item.amount > (item.maximum || 100)) {\n                    item.amount = (item.maximum || 100);\n                }\n                item_list.push({ ...item });\n            }\n            item_map[this.space.id].items = item_list;\n            this.field.setValue(item_map);\n        }\n    }\n\n    /**\n     * Remove the given item from the catering order\n     * @param item Item to remove\n     */\n    public remove(item: ICateringMenuItem) {\n        if (this.field && this.space) {\n            const item_map = this.field.control.value || {};\n            if (!item_map[this.space.id]) {\n                item_map[this.space.id] = { room_id: this.space.id, name: this.space.name };\n            }\n            let item_list = item_map[this.space.id].items || [];\n            const itm = item_list.find(i => i.id === item.id || i.name === item.name);\n            if (itm) {\n                itm.amount = (itm.amount || 0) - this.step;\n                if (itm.amount < (itm.minimum || 0)) {\n                    itm.amount = 0;\n                    item_list = item_list.filter(i => i.id !== itm.id);\n                }\n            }\n            item_map[this.space.id].items = item_list;\n            this.field.setValue(item_map);\n        }\n    }\n\n    /**\n     * Toggle the selected state of the\n     */\n    public toggle() {\n        if (this.parent && this.parent.must_select > 0) {\n            if (this.parent.must_select === 1) {\n                this.selected = true;\n            } else {\n                this.selected = !this.selected;\n            }\n            this.selectedChange.emit(this.selected);\n        }\n    }\n\n    public handleSelect(item: ICateringMenuItem) {\n        if (this.item.must_select === 1) {\n            for (const i of this.item.items) {\n                i.selected = (item.id === i.id || item.name === i.name);\n            }\n        } else if (this.item.must_select > 1 && item.selected) {\n            const active = this.item.items.reduce((v, i) => v + (i.selected ? 1 : 0), 0);\n            if (active > this.item.must_select) {\n                let diff = active - this.item.must_select;\n                for (const i of this.item.items) {\n                    if (diff > 0 && i.selected && !(item.id === i.id || item.name === i.name)) {\n                        i.selected = false;\n                        diff--;\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Update the order amounts for the local item display\n     */\n    private orderUpdated() {\n        this.timeout('order_changed', () => {\n            if (this.field && this.space && this.item) {\n                const item_map = this.field.control.value || { };\n                if (!item_map[this.space.id]) {\n                    item_map[this.space.id] = { room_id: this.space.id, name: this.space.name };\n                }\n                const item_list = item_map[this.space.id].items || [];\n                const found = item_list.find(i => i.id === this.item.id || i.name === this.item.name);\n                if (found) {\n                    this.item.amount = found.amount || 0;\n                } else {\n                    this.item.amount = 0;\n                }\n                if ((this.item as any).items) {\n                    for (const item of (this.item as any).items) {\n                        const found = item_list.find(i => i.id === item.id || i.name === item.name);\n                        if (found) {\n                            item.amount = found.amount || 0;\n                        } else {\n                            item.amount = 0;\n                        }\n                    }\n                }\n            }\n        }, 100);\n    }\n}\n","<div class=\"find-space\">\n    <div class=\"topbar\">\n        <div class=\"icon\" (touchrelease)=\"event.emit({ type: 'previous' })\">\n            <i class=\"material-icons\">arrow_back</i>\n        </div>\n        <div class=\"text\" (touchrelease)=\"event.emit({ type: 'previous' })\">Book</div>\n    </div>\n    <div class=\"header\">\n        <div class=\"location-select\">\n            <custom-dropdown klass=\"options\" [(show)]=\"show\" [content]=\"content\" [template]=\"list\">\n                <ng-template #content>\n                    <div class=\"dropdown-header\" (touchrelease)=\"show = !show\">\n                        <div class=\"image\">\n                            <img src=\"assets/img/location-img.svg\" />\n                        </div>\n                        <div class=\"text\">Select location(s)</div>\n                        <div class=\"icon\">\n                            <i class=\"material-icons\">{{ show ? 'keyboard_arrow_up' : 'keyboard_arrow_down' }}</i>\n                        </div>\n                    </div>\n                </ng-template>\n                <ng-template #list>\n                    <div class=\"item-list\">\n                        <ng-container *ngIf=\"locations && locations.length > 0\">\n                            <cdk-virtual-scroll-viewport\n                                [itemSize]=\"40\"\n                                [style.height]=\"(locations.length < 6 ? locations.length : 6) * 40 + 'px'\"\n                            >\n                                <ng-container *cdkVirtualFor=\"let item of locations; let i = index\">\n                                    <div\n                                        class=\"item\"\n                                        (touchrelease)=\"item.selected = !item.selected; filter$.next(item.id + item.selected)\"\n                                    >\n                                        <a-checkbox klass=\"dark\" [ngModel]=\"item.selected\"></a-checkbox>\n                                        <div class=\"text\">\n                                            <div class=\"code\" [title]=\"item.code\">{{ item.code }}</div>\n                                            <div class=\"name\" [title]=\"item.name\">{{ item.name }}</div>\n                                            <div class=\"address\" [title]=\"item.address\">{{ item.address }}</div>\n                                        </div>\n                                    </div>\n                                </ng-container>\n                            </cdk-virtual-scroll-viewport>\n                        </ng-container>\n                    </div>\n                </ng-template>\n            </custom-dropdown>\n        </div>\n        <div class=\"selected-locations\">\n            <ng-container *ngFor=\"let item of locations\">\n                <div class=\"location\" *ngIf=\"item.selected\">\n                    <div class=\"icon close\" (touchrelease)=\"item.selected = false; filter$.next(item.id + item.selected)\">\n                        <i class=\"material-icons\">close</i>\n                    </div>\n                    <div class=\"text\">({{ item.code }}) {{ item.name }}</div>\n                </div>\n            </ng-container>\n        </div>\n    </div>\n    <div class=\"body\">\n        <ng-container *ngIf=\"!loading\">\n            <cdk-virtual-scroll-viewport [itemSize]=\"120\">\n                <div class=\"item\" *cdkVirtualFor=\"let item of shown_spaces || []\">\n                    <booking-main-flow-space-item [space]=\"item\" [(selected)]=\"item.selected\" (selectedChange)=\"setState(item, $event)\"></booking-main-flow-space-item>\n                </div>\n            </cdk-virtual-scroll-viewport>\n        </ng-container>\n        <div class=\"no-item center\" *ngIf=\"!shown_spaces || shown_spaces.length <= 0 || loading\">\n            <div class=\"icon\">\n                <i class=\"material-icons\" *ngIf=\"!loading\">close</i>\n                <spinner *ngIf=\"loading\" type=\"circle-ring\" color=\"rgba(0,0,0,.6)\"></spinner>\n            </div>\n            <div class=\"text\" *ngIf=\"!loading\">No available rooms</div>\n        </div>\n    </div>\n    <div class=\"footer\">\n        <div class=\"date\">\n            <div class=\"arrow\" [class.disabled]=\"is_today\" (touchrelease)=\"changeDate(-1)\">\n                <i class=\"material-icons\">keyboard_arrow_left</i>\n            </div>\n            <div class=\"display\">{{ date_display }}</div>\n            <div class=\"arrow\" (touchrelease)=\"changeDate(1)\">\n                <i class=\"material-icons\">keyboard_arrow_right</i>\n            </div>\n        </div>\n        <div class=\"next\">\n            <btn [disabled]=\"!spaces || !spaces.control.value || spaces.control.value.length <= 0\" (tapped)=\"event.emit({ type: 'next' })\">\n                Next\n            </btn>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter, SimpleChanges } from '@angular/core';\nimport { ADynamicFormField } from '@acaprojects/ngx-dynamic-forms';\nimport { Subject } from 'rxjs';\nimport { debounceTime, switchMap } from 'rxjs/operators';\n\nimport { IBookingFlowEvent } from '../main-flow.component';\nimport { IBuilding } from '../../../../services/data/buildings.service';\nimport { BaseComponent } from '../../../../shared/globals/base.component';\nimport { AppService } from '../../../../services/app.service';\nimport { IRoom, IRoomAvailabilityRequest } from '../../../../services/data/rooms.service';\nimport { IUser } from '../../../../services/data/users.service';\nimport { rulesForSpace } from '../../../../shared/utilities/booking.utilities';\n\nimport * as dayjs from 'dayjs';\nimport { Utils } from '../../../../shared/utility.class';\n\n@Component({\n    selector: 'booking-main-flow-find-space',\n    templateUrl: './find-space.component.html',\n    styleUrls: ['./find-space.component.scss']\n})\nexport class BookingMainFlowFindSpaceComponent extends BaseComponent implements OnInit {\n    /** Date time to search for free rooms */\n    @Input('dateField') public date_field: ADynamicFormField;\n    /** Available slot size to search for free rooms */\n    @Input() public duration: number;\n    /** Whether booking is all day */\n    @Input() public all_day: boolean;\n    /** Whether booking has catering */\n    @Input() public catering: boolean;\n    /** Selected host for the booking being created */\n    @Input() public user: IUser;\n    /** Timestamp for the end of recurrence period */\n    @Input() public recurr_end: number;\n    /** Form field for selected spaces */\n    @Input() public spaces: ADynamicFormField;\n    /** Emitter for form events */\n    @Output() public event = new EventEmitter<IBookingFlowEvent>();\n\n    /** List of available buildings to filter available rooms on */\n    public locations: IBuilding[] = [];\n    /** Whether the space results are being loaded or not */\n    public loading: boolean;\n    /** Spaces available before local filtering */\n    public available_spaces: IRoom[] = [];\n    /** Spaces available with the selected filters */\n    public shown_spaces: IRoom[] = [];\n    /** Whether to show the location dropdown list */\n    public show: boolean;\n    /** Subject for changes filters for displaying available rooms */\n    private filter$ = new Subject<any>();\n    /** Last query string used for searching for rooms */\n    private last_query = '';\n\n    constructor(private _service: AppService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        if (!this._service.ready() || this._service.Rooms.list(true).length <= 0) {\n            return this.timeout('init', () => this.ngOnInit());\n        }\n        this.last_query = '';\n        this.subscription(\n            'filter',\n            this.filter$\n                .pipe(\n                    debounceTime(500),\n                    switchMap(_ => this.search())\n                )\n                .subscribe((results: IRoom[]) => {\n                    this.available_spaces = results;\n                    this.shown_spaces = this.filter(results);\n                    this.loading = false;\n                })\n        );\n        this.subscription('building', this._service.Buildings.listen((bld) => {\n            if (bld) {\n                let active_locations = '';\n                if (localStorage) {\n                    active_locations = localStorage.getItem('STAFF.booking.filters') || '';\n                }\n                this.locations = this._service.Buildings.list().map(i => ({\n                    ...i,\n                    selected: active_locations ? active_locations.indexOf(i.id) >= 0 : i.id === bld.id\n                }));\n                this.filter$.next(Math.floor(Math.random() * 99999));\n            }\n        }));\n    }\n\n    /** Timestamp of the currently selected date */\n    public get date(): number {\n        let date: number = this.date_field ? this.date_field.getValue() : dayjs().valueOf();\n        if (this.catering) {\n            date = dayjs(date).subtract(15, 'm').valueOf();\n        }\n        if (this.duration > 480 || this.all_day) {\n            date = dayjs(date).startOf('d').valueOf();\n        }\n        return date;\n    }\n\n    /** Display string for the selected date */\n    public get date_display(): string {\n        return dayjs(this.date).format('ddd, DD MMM YYYY');\n    }\n\n    /** Whether the selected date is today */\n    public get is_today(): boolean {\n        const date = dayjs(this.date);\n        return dayjs().isSame(date, 'd');\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if ((changes.date_field && this.date_field) || (changes.duration && this.duration)) {\n            this.filter$.next(`${this.date}|${this.duration}`);\n        }\n    }\n\n    /**\n     * Search for available rooms matching the set filters\n     */\n    public search(): Promise<IRoom[]> {\n        const query: IRoomAvailabilityRequest = {\n            date: this.all_day ? dayjs(this.date).startOf('d').valueOf() : this.date,\n            duration: this.all_day ? 24 * 60 : (this.duration + (this.catering ? 15 : 0)),\n            hide_bookings: true\n        };\n        const locations = this.locations.reduce((v, i) => { (i as any).selected ? v.push(i.id) : ''; return v }, []);\n        if (locations.length <= 0) {\n            locations.push(this._service.Buildings.current().id);\n        }\n        const location_list = locations.join(',');\n        this.timeout('save_filters', () => {\n            if (localStorage) {\n                localStorage.setItem('STAFF.booking.filters', location_list);\n            }\n        });\n        let room_list: IRoom[] = [];\n        for (const zone of locations) {\n            room_list = room_list.concat(this._service.Rooms.list(true, zone));\n        }\n        // Filter out rooms unavailable due to booking rules\n        room_list = Utils.unique(room_list, 'id').filter(room => {\n            const bld: any = this._service.Buildings.get(room.level.bld_id) || this._service.Buildings.current() || {};\n            const rules = rulesForSpace({\n                user: this.user || this._service.Users.current(),\n                space: room,\n                time: this.date,\n                recurr_end: this.recurr_end || 0,\n                duration: this.duration,\n                rules: bld.booking_rules\n            });\n            room.book_type = rules.auto_approve ? 'Book' : 'Request';\n            return rules.hide;\n        });\n        // Limit number of rooms retrieved\n        room_list = room_list.slice(0, Math.min(100, room_list.length));\n        query.ignore_rooms = room_list.reduce((v, i) => v + (v ? ',' : '') + i.id, '');\n        query.zone_ids = location_list;\n        const query_str = JSON.stringify(query);\n        if (query_str !== this.last_query && this.locations && this.locations.length > 0) {\n            this.last_query = query_str;\n            this.loading = true;\n        }\n        return this._service.Rooms.available(query);\n    }\n\n    /**\n     * Filter rooms based booking rules\n     * @param list List of rooms\n     */\n    public filter(list: IRoom[]): IRoom[] {\n        const selected = this.spaces.control.value || [];\n        return list\n            .filter(room => {\n                const bld: any = this._service.Buildings.get(room.level.bld_id) || this._service.Buildings.current() || {};\n                const rules = rulesForSpace({\n                    user: this.user || this._service.Users.current(),\n                    space: room,\n                    time: this.date,\n                    recurr_end: this.recurr_end || 0,\n                    duration: this.duration,\n                    rules: bld.booking_rules\n                });\n                room.book_type = rules.auto_approve ? 'Book' : 'Request';\n                return !rules.hide;\n            })\n            .map(i => ({ ...i, selected: !!selected.find(j => i.id === j.id) } as any));\n    }\n\n    /**\n     * Update the list of spaces selected for the current booking\n     * @param space Space with which it's state has changed\n     * @param state New selected state of the space\n     */\n    public setState(space: IRoom, state: boolean) {\n        const list = this.spaces.control.value || [];\n        if (state) {\n            if (list.findIndex(i => i.id === space.id) < 0) {\n                this.spaces.setValue(list.concat([space]));\n            }\n        } else {\n            this.spaces.setValue(list.filter(i => i.id !== space.id));\n        }\n    }\n\n    /**\n     * Update the selected date\n     * @param value Value to change the date by. 1, 0 or -1 days\n     */\n    public changeDate(value: number) {\n        if (this.date_field) {\n            const date = dayjs(this.date);\n            const new_date = date.add(value, 'd');\n            if (!new_date.isBefore(dayjs().subtract(10, 'm'), 'm')) {\n                this.date_field.setValue(new_date.valueOf());\n                this.filter$.next(`${this.date}|${this.duration}`);\n            }\n        }\n    }\n}\n","<div class=\"space-item\" [class.request]=\"book_type === 'Request'\">\n    <div class=\"details\">\n        <div class=\"icon\">\n            <img src=\"assets/img/location.svg\" />\n        </div>\n        <div class=\"text\">\n            <div class=\"name\">{{ space?.level?.name }}, {{ space?.name }}</div>\n            <div class=\"info\" *ngIf=\"building\">({{ building.code }}) {{ building.name }}</div>\n            <div class=\"info\">Capacity: {{ space?.capacity }} {{ space && space.capacity === 1 ? 'Person' : 'People' }}</div>\n        </div>\n    </div>\n    <div class=\"options\">\n        <button click-responder (touchrelease)=\"toggle()\" [class.selected]=\"selected\">\n            {{\n                selected ? (book_type === 'Request' ? 'Requesting' : 'Selected') : book_type === 'Request' ? 'Request' : 'Select'\n            }}\n        </button>\n        <button click-responder (touchrelease)=\"showMap()\">Map</button>\n    </div>\n</div>\n","\nimport { Component, Input, Output, EventEmitter, SimpleChanges, OnChanges } from '@angular/core';\nimport { IRoom } from '../../../../../services/data/rooms.service';\nimport { BaseComponent } from '../../../../../shared/globals/base.component';\nimport { AppService } from '../../../../../services/app.service';\nimport { IBuilding } from '../../../../../services/data/buildings.service';\n\n@Component({\n    selector: 'booking-main-flow-space-item',\n    templateUrl: './space-item.component.html',\n    styleUrls: ['./space-item.component.scss']\n})\nexport class BookingMainFlowSpaceItemComponent extends BaseComponent implements OnChanges {\n    /** Space to display */\n    @Input() public space: IRoom;\n    /** Whether the space has been selected for booking */\n    @Input() public selected: boolean;\n    /** Emitter for changes to selected state of the space */\n    @Output() public selectedChange = new EventEmitter<boolean>();\n    /** Building associated with the set space */\n    public building: IBuilding;\n\n    constructor(private _service: AppService) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.space &&  this.space) {\n            this.timeout('building', () => {\n                if (this.space.level) {\n                    this.building = this._service.Buildings.get(this.space.level.bld_id);\n                }\n            }, 100);\n        }\n    }\n\n    /** Booking type for the space */\n    public get book_type() {\n        return (this.space ? this.space.book_type : null) || 'Book';\n    }\n\n    /**\n     * Toggle the selected state of the space\n     */\n    public toggle() {\n        this.selected = !this.selected;\n        this.selectedChange.emit(this.selected);\n    }\n\n    /**\n     * Open modal to show the location of the space on a map\n     */\n    public showMap() {\n        this._service.Overlay.openModal('view-room', { data: {\n            room: this.space,\n        }}, (e) => e.close());\n    }\n}\n\n","<div class=\"booking-form\">\n    <div class=\"form\">\n        <a-dynamic-form [fields]=\"fields\"></a-dynamic-form>\n        <div class=\"options\">\n            <btn (tapped)=\"next()\">Next</btn>\n        </div>\n    </div>\n</div>","import { Component, OnInit, Input, Output, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\nimport { ADynamicFormField } from '@acaprojects/ngx-dynamic-forms';\n\nimport { IBookingFlowEvent } from '../main-flow.component';\nimport { BaseComponent } from '../../../../shared/globals/base.component';\nimport { AppService } from '../../../../services/app.service';\n\n@Component({\n    selector: 'booking-main-flow-form',\n    templateUrl: './form.component.html',\n    styleUrls: ['./form.component.scss']\n})\nexport class BookingMainFlowFormComponent extends BaseComponent implements OnChanges {\n    /** List of fields to display on the form */\n    @Input() fields: ADynamicFormField[] = [];\n    /** Emitter for form events */\n    @Output() public event = new EventEmitter<IBookingFlowEvent>();\n\n    constructor(private _service: AppService) {\n        super();\n    }\n\n    /** Whether the form is valid */\n    public get valid(): boolean {\n        return this.fields.reduce((a, v) => {\n            const valid = v.children && v.children.length > 0\n                ? v.children.reduce((r, i) => r && (i.isValid() || !i.required || i.disabled), true)\n                : (v.isValid() || !v.required || v.disabled);\n            return a && valid;\n        }, true);\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.fields && this.fields) {\n            const find = this.fields.find(i => i.key === 'recurrence' || !!(i.children && i.children.find(j => j.key === 'recurrence')));\n            const field = find ? (find.key === 'recurrence' ? find : find.children.find(j => j.key === 'recurrence')) : null;\n            if (field) {\n                this.subscription('recurrence', field.action.subscribe(() => this.setRecurrence(field)));\n            }\n            const find_space = this.fields.find(i => i.key === 'room' || !!(i.children && i.children.find(j => j.key === 'room')));\n            const spaces = find_space ? (find_space.key === 'room' ? find_space : find_space.children.find(j => j.key === 'room')) : null;\n            if (spaces && !spaces.hide) {\n                this.subscription('spaces', spaces.action.subscribe(() => this.setSpaces(spaces)));\n            }\n        }\n    }\n\n    public next() {\n        this.fields.forEach(i => i.control.markAsDirty());\n        if (this.valid) {\n            this.event.emit({ type: 'next' })\n        } else {\n            this._service.error('Some of the form fields are invalid');\n        }\n    }\n\n    /**\n     * Open modal to change the selected spaces for the booking\n     * @param field Form field associated with spaces\n     */\n    public setSpaces(field: ADynamicFormField) {\n        this._service.Overlay.openModal('select-room', {\n            data: {\n                spaces: field.getValue() || [],\n                multi: true\n            }\n        }, event => {\n            if (event.type === 'Select') {\n                field.setValue(event.data.select_list || []);\n            }\n            event.close();\n        });\n    }\n\n    /**\n     * Open modal to change the recurrence options for the booking\n     * @param field Form field associated with recurrence\n     */\n    public setRecurrence(field: ADynamicFormField) {\n        this._service.Overlay.openModal('recurrence-form', { data: { form: field.getValue() } }, event => {\n            if (event.type === 'Accept') {\n                field.setValue({\n                    period: event.data.form.recurr_period,\n                    end: event.data.form.recurr_end\n                });\n            }\n            event.close();\n        });\n    }\n}\n","<ng-container [ngSwitch]=\"page\">\n    <ng-container *ngSwitchCase=\"'catering'\">\n        <booking-main-flow-catering [id]=\"id\" [date]=\"date\" [spaces]=\"spaces\" [catering]=\"catering\" (event)=\"progress($event)\"> </booking-main-flow-catering>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"'space'\">\n        <booking-main-flow-find-space\n            [dateField]=\"date_field\"\n            [recurr_end]=\"recurr_end\"\n            [all_day]=\"all_day\"\n            [duration]=\"duration\"\n            [spaces]=\"space_list\"\n            [catering]=\"needs_catering\"\n            (event)=\"progress($event)\"\n        ></booking-main-flow-find-space>\n    </ng-container>\n    <ng-container *ngSwitchDefault>\n        <booking-main-flow-form [fields]=\"form_fields\" (event)=\"progress($event)\"></booking-main-flow-form>\n    </ng-container>\n</ng-container>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router, NavigationEnd } from '@angular/router';\nimport { ADynamicFormField } from '@acaprojects/ngx-dynamic-forms';\n\nimport { AppService } from '../../../services/app.service';\nimport { IBooking } from '../../../services/data/bookings.service';\nimport { IRoom } from '../../../services/data/rooms.service';\nimport { BaseComponent } from '../../../shared/globals/base.component';\nimport { generateBookingFormMetadata } from '../../../shared/utilities/booking.utilities';\n\nimport { BookingEquipmentDetailsModalComponent } from '../overlays/equipment-details/equipment-details.component';\nimport { BookingCateringDetailsModalComponent } from '../overlays/catering-details/catering-details.component';\nimport { BookingDetailsModalComponent } from '../overlays/booking-details/booking-details.component';\n\nimport * as dayjs from 'dayjs';\nimport { IUser } from '../../../services/data/users.service';\nimport { formatSpaces } from '../../../shared/utilities/formatting.utilities';\nimport { ICateringOrderList } from './catering/catering-order/catering-order.component';\nimport { FormGroup } from '@angular/forms';\nimport { of } from 'rxjs';\n\nexport interface IBookingFlowEvent {\n    type: 'next' | 'previous';\n    data?: { [name: string]: any };\n}\n\n@Component({\n    selector: 'booking-main-flow',\n    templateUrl: './main-flow.component.html',\n    styleUrls: ['./main-flow.component.scss']\n})\nexport class BookingMainFlowComponent extends BaseComponent implements OnInit {\n    /** Booking ID */\n    public id: string;\n    /** List of form fields associated with a booking */\n    public form_fields: ADynamicFormField[];\n    /** Name of the current page shown on the booking flow */\n    public page: string;\n    /** Form field for listing selected catering items */\n    public catering: ADynamicFormField;\n    /** Form field for the list of selected spaces */\n    public space_list: ADynamicFormField;\n    /** Form field for the selected date */\n    public date_field: ADynamicFormField;\n\n    constructor(private _service: AppService, private _route: ActivatedRoute, private _router: Router) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        if (!this._service.ready()) {\n            return this.timeout('init', () => this.ngOnInit());\n        }\n        this.subscription(\n            'route',\n            this._route.paramMap.subscribe(params => {\n                if (params.has('page')) {\n                    this.page = params.get('page');\n                }\n            })\n        );\n        this.subscription(\n            'route_change',\n            this._router.events.subscribe(event => {\n                if (event instanceof NavigationEnd && event.url.indexOf('book') < 0) {\n                    this.clearForm();\n                }\n            })\n        );\n        this.loadForm();\n    }\n\n    /** List of selected rooms for the booking */\n    public get spaces(): IRoom[] {\n        const field = this.form_fields.find(i => i.key === 'room');\n        if (field) {\n            return field.control.value || [];\n        }\n        return [];\n    }\n\n    /** Timestamp of the end of the recurrence period */\n    public get recurr_end(): number {\n        let field = this.form_fields.find(i => i.key === 'recurrence');\n        if (field) {\n            return (field.control.value || { end: 0 }).end || 0;\n        }\n        field = this.form_fields.find(i => i.key === 'period_group');\n        if (field) {\n            return ((field.control as FormGroup).controls.recurrence.value || { end: 0 }).end || 0;\n        }\n        return 0;\n    }\n\n    /** Datetime selected for the booking */\n    public get date(): number {\n        const field = this.date_field;\n        if (field) {\n            return field.control.value;\n        }\n        return dayjs()\n            .startOf('m')\n            .valueOf();\n    }\n\n    /** Selected duration for the booking */\n    public get duration(): number {\n        let field: any = this.form_fields.find(i => i.key === 'duration');\n        if (field) {\n            return field.control.value;\n        }\n        field = this.form_fields.find(i => i.key === 'time_group');\n        if (field) {\n            return field.control.controls.duration.value;\n        }\n        return 60;\n    }\n\n    /** Whether booking is all day */\n    public get all_day(): boolean {\n        const field = this.form_fields.find(i => i.key === 'all_day');\n        return field ? field.control.value : false;\n    }\n\n    /** Whether the user want to add catering to their booking */\n    public get needs_catering(): boolean {\n        const empty = { control: { value: {} } };\n        const catering: boolean = (this.form_fields.find(i => i.key === 'needs_catering') || empty).control.value;\n        return catering;\n    }\n\n    /** Number of items in the catering order */\n    public get has_ordered(): number {\n        const empty = { control: { value: {} } };\n        const order: ICateringOrderList = (this.form_fields.find(i => i.key === 'catering') || empty).control.value;\n        return order ? Object.keys(order).reduce((v, key) => {\n            const room_order = order[key];\n            if (room_order && room_order.items) {\n                v += room_order.items.reduce((c, i) => c + (i.amount || 0), 0);\n            }\n            return v;\n        }, 0): 0;\n    }\n\n    /**\n     * Progress to the next step in the flow\n     */\n    public progress(event: IBookingFlowEvent) {\n        const empty = { control: { value: true } };\n        const catering = (this.form_fields.find(i => i.key === 'needs_catering') || empty).control.value;\n        const space = (this.form_fields.find(i => i.key === 'needs_space') || empty).control.value;\n        const id = (this.form_fields.find(i => i.key === 'id') || empty).control.value;\n        this.id = id || !space ? '10' : '';\n        if (event.type === 'next') {\n            switch (this.page) {\n                case 'catering':\n                    if (this.has_ordered > 0){\n                        this.addCateringNotes().then(() => this.confirmBooking());\n                    } else {\n                        this.confirmBooking();\n                    }\n                    break;\n                case 'space':\n                    this.addEquipment().then(() => {\n                        if (catering) {\n                            this._service.navigate(['book', 'main', 'catering']);\n                        } else {\n                            this.confirmBooking();\n                        }\n                    });\n                    break;\n                default:\n                    if (space && !id) {\n                        this._service.navigate(['book', 'main', 'space']);\n                    } else if (this.spaces && this.spaces.length > 0) {\n                        this.addEquipment().then(() => {\n                            if (catering) {\n                                this._service.navigate(['book', 'main', 'catering']);\n                            } else {\n                                this.confirmBooking();\n                            }\n                        });\n                    } else if ((space || (this.spaces && this.spaces.length)) && catering) {\n                        this._service.navigate(['book', 'main', 'catering']);\n                    } else {\n                        this.confirmBooking();\n                    }\n                    break;\n            }\n        } else if (event.type === 'previous') {\n            switch (this.page) {\n                case 'catering':\n                    if (id || !space) {\n                        // Whether space selection handled on the main form\n                        this._service.navigate(['book', 'main', 'form']);\n                    } else {\n                        this._service.navigate(['book', 'main', 'space']);\n                    }\n                    break;\n                case 'space':\n                    this._service.navigate(['book', 'main', 'form']);\n                    break;\n                default:\n                    this._service.navigate(['home']);\n                    break;\n            }\n        }\n    }\n\n    /**\n     * Clear any form data\n     */\n    private clearForm() {\n        if (localStorage) {\n            localStorage.removeItem('STAFF.booking_form');\n        }\n        this.loadForm();\n    }\n\n    /**\n     * Load old form data and intialise the form\n     */\n    private loadForm() {\n        let booking: any = {};\n        if (localStorage) {\n            booking = JSON.parse(localStorage.getItem('STAFF.booking_form') || '{}');\n        }\n        this.form_fields = generateBookingFormMetadata(\n            booking as IBooking,\n            this._service.Settings.get('app.booking.fields'),\n            this._service\n        );\n        const host = this.form_fields.find(i => i.key === 'host');\n        if (host) {\n            host.metadata = { service: this._service.Bookings, options: this.getHostOptions() };\n            host.setValue(host.getValue() || booking.host);\n        }\n        console.log('Host:', booking.host, host);\n        this.form_fields.push(\n            new ADynamicFormField({\n                key: 'id',\n                type: 'action',\n                hide: true,\n                value: booking.id\n            })\n        );\n        this.date_field = this.form_fields\n            .reduce((v, i) => v.concat(i.children && i.children.length ? i.children : [i]), [])\n            .find(i => i.key === 'date');\n        this.space_list = new ADynamicFormField({\n            key: 'room',\n            label: 'Spaces',\n            type: 'action',\n            format: formatSpaces,\n            hide: !booking.id,\n            value: booking.room || []\n        });\n        this.catering = new ADynamicFormField({\n            key: 'catering',\n            label: 'Catering',\n            type: 'action',\n            hide: true,\n            value: booking.catering || {}\n        });\n        this.form_fields.unshift(this.space_list);\n        this.form_fields.push(this.catering);\n        this.form_fields.forEach(field => {\n            if (field.children && field.children.length) {\n                field.children.forEach(sub_field => {\n                    this.subscription(\n                        sub_field.key,\n                        sub_field.control.valueChanges.subscribe(value => {\n                            if (value && sub_field.control.valid) {\n                                this.saveForm();\n                            }\n                        })\n                    );\n                });\n            } else {\n                this.subscription(\n                    field.key,\n                    field.control.valueChanges.subscribe(value => {\n                        if (value && field.control.valid) {\n                            this.saveForm();\n                        }\n                    })\n                );\n            }\n        });\n        const empty: any = { control: { value: true, valueChanges: false }, children: [] };\n        const space = (this.form_fields.find(i => i.key === 'needs_space') || empty).control.value;\n        const time = (this.form_fields.find(i => i.key === 'time_group') || empty);\n        const all_day = (this.form_fields.find(i => i.key === 'all_day') || empty);\n        (time as ADynamicFormField).setDisabled(this.duration > 450);\n        const start = time.children.find(i => i.key === 'start') || empty;\n        this.subscription('all_day_value', all_day.control.valueChanges.subscribe((state) => (start as ADynamicFormField).setDisabled(state)));\n        const id = (this.form_fields.find(i => i.key === 'id') || empty).control.value;\n        this.id = id || !space ? '10' : '';\n    }\n\n    /**\n     * Save changes to the form data\n     */\n    private saveForm() {\n        this.timeout('save_form', () => {\n            const form = this.formToBooking();\n            if (localStorage) {\n                localStorage.setItem('STAFF.booking_form', JSON.stringify(form));\n            }\n            const empty = { control: { value: true }, children: [] };\n            const time = (this.form_fields.find(i => i.key === 'time_group') || empty);\n            (time as ADynamicFormField).children[0].setDisabled(this.duration > 450 || this.all_day);\n        }, 50);\n    }\n\n    /**\n     * Convert form field data to a Booking object\n     */\n    private formToBooking(): IBooking {\n        return this.form_fields.reduce((v, i) => {\n            if (i.children && i.children.length) {\n                i.children.forEach(j => (v[j.key] = j.control.value));\n            } else {\n                v[i.key] = i.control.value;\n            }\n            return v;\n        }, {}) as IBooking;\n    }\n\n    /**\n     * Show modal to user for adding equipment details to a booking\n     */\n    private addEquipment() {\n        return new Promise((resolve, reject) => {\n            const empty = { control: { value: '' } };\n            const notes = this.form_fields.find(i => i.key === 'equipment');\n            const expected_attendees = this.form_fields.find(i => i.key === 'expected_attendees');\n            const spaces = this.form_fields.find(i => i.key === 'room');\n            const cost_code = this.form_fields.find(i => i.key === 'equipment_code');\n            this._service.Overlay.openModal(\n                'booking-equipment',\n                {\n                    cmp: BookingEquipmentDetailsModalComponent,\n                    data: {\n                        spaces: (spaces || empty).control.value || [],\n                        expected_attendees: (expected_attendees || empty).control.value || {},\n                        notes: (notes || empty).control.value,\n                        cost_code: (cost_code || empty).control.value\n                    }\n                },\n                event => {\n                    if (event.type === 'finish') {\n                        if (notes) {\n                            notes.setValue(event.data.notes);\n                        }\n                        if (expected_attendees) {\n                            expected_attendees.setValue(event.data.expected_attendees || {});\n                        }\n                        if (cost_code) {\n                            cost_code.setValue(event.data.cost_code);\n                        }\n                    }\n                    resolve();\n                    event.close();\n                }\n            );\n        });\n    }\n\n    /**\n     * Show modal for adding details to catering\n     */\n    private addCateringNotes() {\n        return new Promise((resolve, reject) => {\n            const empty = { control: { value: '' } };\n            const notes = this.form_fields.find(i => i.key === 'catering_notes');\n            const spaces = this.form_fields.find(i => i.key === 'room');\n            const cost_code = this.form_fields.find(i => i.key === 'catering_code');\n            this._service.Overlay.openModal(\n                'booking-catering-notes',\n                {\n                    cmp: BookingCateringDetailsModalComponent,\n                    data: {\n                        spaces: (spaces || empty).control.value || [],\n                        notes: (notes || empty).control.value,\n                        cost_code: (cost_code || empty).control.value\n                    }\n                },\n                event => {\n                    if (event.type === 'finish') {\n                        if (notes) {\n                            notes.setValue(event.data.notes);\n                        }\n                        if (cost_code) {\n                            cost_code.setValue(event.data.cost_code);\n                        }\n                        resolve();\n                    } else {\n                        reject();\n                    }\n                    event.close();\n                }\n            );\n        });\n    }\n\n    /**\n     * Open modal for confirming booking details\n     */\n    private confirmBooking() {\n        this.timeout(\n            'confirm-booking',\n            () => {\n                const fields: any = this.formToBooking();\n                this._service.Overlay.openModal(\n                    'confirm-booking',\n                    {\n                        cmp: BookingDetailsModalComponent,\n                        data: fields\n                    },\n                    event => {\n                        if (event.type === 'finish') {\n                            // Booking completed successfully\n                            this.clearForm();\n                            this._service.navigate(['schedule'], {\n                                host: fields.host ? fields.host.email : this._service.Users.current().email\n                            });\n                            event.close();\n                        } else if (event.type === 'new') {\n                            // User wishes to create a new booking\n                            this.clearForm();\n                            this._service.navigate(['book', 'main', 'form']);\n                        } else if (event.type === 'edit') {\n                            // User wishes to edit the booking\n                            this._service.navigate(['book', 'main', 'form']);\n                            event.close();\n                        } else {\n                            event.close();\n                        }\n                    }\n                );\n            },\n            100\n        );\n    }\n\n    /**\n     * Get list of users available to select as the meeting host\n     */\n    private getHostOptions(): IUser[] {\n        const user = this._service.Users.current();\n        const list: IUser[] = [user];\n        if (user.delegates) {\n            for (const email of user.delegates) {\n                const delegate = this._service.Users.item(email);\n                if (delegate) {\n                    list.push(delegate);\n                } else {\n                    this.timeout(`load_user|${email}`, () =>\n                        this._service.Users.show(email, { update: true }).then(() => {\n                            this.timeout('update_host_options', () => {\n                                const host = this.form_fields.find(i => i.key === 'host');\n                                if (host) {\n                                    host.metadata = { service: this._service.Bookings, options: this.getHostOptions() };\n                                    host.setValue(host.getValue());\n                                }\n                            });\n                        })\n                    );\n                }\n            }\n        }\n        return list;\n    }\n}\n"],"sourceRoot":"webpack:///"}