{"version":3,"sources":["./src/app/services/data/catering/catering.utilities.ts","./src/app/shell/booking/booking.component.ts.BookingComponent.html","./src/app/shell/booking/booking.component.ts","./src/app/shell/booking/booking.module.ts","./src/app/shell/booking/main-flow/catering/category-list/category-list.component.html","./src/app/shell/booking/main-flow/catering/category-list/category-list.component.ts","./src/app/shell/booking/main-flow/catering/catering-order/catering-order.component.html","./src/app/shell/booking/main-flow/catering/catering-order/catering-order.component.ts","./src/app/shell/booking/main-flow/catering/catering.component.html","./src/app/shell/booking/main-flow/catering/catering.component.ts","./src/app/shell/booking/main-flow/catering/item-list/item-list.component.html","./src/app/shell/booking/main-flow/catering/item-list/item-list.component.ts","./src/app/shell/booking/main-flow/catering/item-list/list-item/list-item.component.html","./src/app/shell/booking/main-flow/catering/item-list/list-item/list-item.component.ts","./src/app/shell/booking/main-flow/catering/order-list/item/item.component.html","./src/app/shell/booking/main-flow/catering/order-list/item/item.component.ts","./src/app/shell/booking/main-flow/catering/order-list/order-list.component.html","./src/app/shell/booking/main-flow/catering/order-list/order-list.component.ts","./src/app/shell/booking/main-flow/find-space/find-space.component.html","./src/app/shell/booking/main-flow/find-space/find-space.component.ts","./src/app/shell/booking/main-flow/find-space/space-item/space-item.component.html","./src/app/shell/booking/main-flow/find-space/space-item/space-item.component.ts","./src/app/shell/booking/main-flow/form/form.component.html","./src/app/shell/booking/main-flow/form/form.component.ts","./src/app/shell/booking/main-flow/main-flow.component.html","./src/app/shell/booking/main-flow/main-flow.component.ts"],"names":[],"mappings":"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","file":"shell-booking-booking-module-ngfactory-es2015.js","sourcesContent":["import { FormGroup, FormControl, Validators } from \"@angular/forms\";\n\nimport { CateringOrder } from \"./catering-order.class\";\n\nimport * as dayjs from 'dayjs';\n\nexport function generateCateringOrderFormFields(order: CateringOrder): FormGroup {\n    const form = new FormGroup({\n        items: new FormControl(order.items && order.items.length ? [...order.items] : [], [Validators.required]),\n        delivery_time: new FormControl(order.delivery_time || dayjs().startOf('m').valueOf(), [Validators.required]),\n        location_id: new FormControl(order.location_id || '', [Validators.required]),\n        charge_code: new FormControl(order.charge_code || '', [Validators.required]),\n        notes: new FormControl(order.notes || ''),\n    });\n    for (const key in form.controls) {\n        form.controls[key].valueChanges.subscribe((value) => order.storePendingChanges(key as any, value));\n    }\n    return form;\n}\n","<router-outlet></router-outlet>","\nimport { Component, OnInit } from '@angular/core';\n\nimport { AppService } from '../../services/app.service';\nimport { BaseDirective } from '../../shared/globals/base.directive';\n\n@Component({\n    selector: 'app-booking',\n    template: '<router-outlet></router-outlet>',\n    styles: ['']\n})\nexport class BookingComponent extends BaseDirective implements OnInit {\n    public model: any = {};\n\n    constructor(private service: AppService) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.service.set('BANNER.block_height', 0);\n    }\n}\n","\nimport { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { RouterModule } from '@angular/router';\n\nimport { WidgetsModule } from '@acaprojects/ngx-widgets';\nimport { ACheckboxModule } from '@acaprojects/ngx-checkbox';\n\nimport { SharedComponentModule } from '../../shared/components/shared.module';\n\nimport { ROUTES } from './booking.routes';\n\nimport { BookingComponent } from './booking.component';\nimport { BookingMainFlowComponent } from './main-flow/main-flow.component';\nimport { BookingMainFlowFormComponent } from './main-flow/form/form.component';\nimport { BookingMainFlowFindSpaceComponent } from './main-flow/find-space/find-space.component';\nimport { BookingMainFlowSpaceItemComponent } from './main-flow/find-space/space-item/space-item.component';\nimport { BookingMainFlowCateringComponent } from './main-flow/catering/catering.component';\nimport { BookingMainFlowCateringOrderComponent } from './main-flow/catering/catering-order/catering-order.component';\nimport { BookingMainFlowCateringCategoryListComponent } from './main-flow/catering/category-list/category-list.component';\nimport { BookingMainFlowCateringItemListComponent } from './main-flow/catering/item-list/item-list.component';\nimport { BookingMainFlowCateringListItemComponent } from './main-flow/catering/item-list/list-item/list-item.component';\n\nimport { BookingCateringDetailsModalComponent } from './overlays/catering-details/catering-details.component';\nimport { BookingEquipmentDetailsModalComponent } from './overlays/equipment-details/equipment-details.component';\nimport { BookingDetailsModalComponent } from './overlays/booking-details/booking-details.component';\nimport { BookingRecurrenceDetailsModalComponent } from './overlays/recurrence-details/recurrence-details.component';\nimport { BookingRecurrenceRoomSelectModalComponent } from './overlays/recurrence-room-select/recurrence-room-select.component';\n\nimport { CateringOrderListComponent } from './main-flow/catering/order-list/order-list.component';\nimport { BookingCateringOrderItemComponent } from './main-flow/catering/order-list/item/item.component';\n\nconst COMPONENTS: Type<any>[] = [\n    BookingComponent,\n    BookingMainFlowComponent,\n    BookingMainFlowFormComponent,\n\n    BookingMainFlowFindSpaceComponent,\n    BookingMainFlowSpaceItemComponent,\n\n    BookingMainFlowCateringComponent,\n    BookingMainFlowCateringOrderComponent,\n    BookingMainFlowCateringCategoryListComponent,\n    BookingMainFlowCateringItemListComponent,\n    BookingMainFlowCateringListItemComponent,\n    CateringOrderListComponent,\n    BookingCateringOrderItemComponent\n];\n\nexport const BOOKING_ENTRY_COMPONENTS: Type<any>[] = [\n    BookingEquipmentDetailsModalComponent,\n    BookingCateringDetailsModalComponent,\n    BookingDetailsModalComponent,\n    BookingRecurrenceDetailsModalComponent,\n    BookingRecurrenceRoomSelectModalComponent\n];\n\n@NgModule({\n    declarations: [\n        ...COMPONENTS\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        WidgetsModule,\n        RouterModule.forChild(ROUTES),\n        SharedComponentModule,\n        ScrollingModule,\n        ACheckboxModule\n    ],\n})\nexport class AppBookingModule { }\n","<div class=\"catering-category-list\">\n    <div\n        class=\"card\"\n        *ngFor=\"let item of types\"\n        [attr.cant-order]=\"exclude && !item.order_anytime\"\n        (touchrelease)=\"selectItem(item)\"\n        [style.background-image]=\"(item.image_url ? 'url(' + item.image_url + ')' : '') | safestyle\"\n    >\n        <div class=\"overlay\"></div>\n        <div class=\"text\">{{ item.name }}</div>\n    </div>\n</div>\n","\nimport { Component, OnInit, Input, Output, EventEmitter, SimpleChanges } from '@angular/core';\n\nimport { AppService } from '../../../../../services/app.service';\nimport { BaseDirective } from '../../../../../shared/globals/base.directive';\nimport { IRoom } from '../../../../../services/data/rooms.service';\nimport { CateringCategory } from '../../../../../services/data/catering/catering-category.class';\n\n@Component({\n    selector: 'catering-category-list',\n    templateUrl: './category-list.component.html',\n    styleUrls: ['./category-list.component.scss']\n})\nexport class BookingMainFlowCateringCategoryListComponent extends BaseDirective implements OnInit {\n    /** Space selected to add catering to */\n    @Input() public space: IRoom;\n    /** List of available catering item categories */\n    @Input() public types: CateringCategory[];\n    /** Whether booking is within the catering exclusion period */\n    @Input() public exclude: boolean;\n    /** Emitter for the selected category */\n    @Output() public selected = new EventEmitter<CateringCategory>();\n\n    public packages: CateringCategory;\n\n    constructor(private _service: AppService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n    }\n\n    public selectItem(item: CateringCategory) {\n        this.selected.emit(item);\n    }\n}\n","<div class=\"details\">\n    <div class=\"title\">Order Details</div>\n    <div class=\"count\">{{ count || '0' }} item{{ count === 1 ? '' : 's' }} selected</div>\n</div>\n<div class=\"contents\" [class.show]=\"show\">\n    <div class=\"rooms\" [attr.space-id]=\"order.location_id\">\n        <div\n            class=\"item\"\n            *ngFor=\"let item of items?.value || []\"\n            [attr.cant-order]=\"exclude && exclude[order.location_id] && !item.order_anytime\"\n        >\n            <div class=\"item-details\">\n                <div class=\"name\">{{ item.name }}</div>\n                <div class=\"cost\">\n                    {{ (item.amount * item.unit_price) / 100 | currency: symbol }}\n                </div>\n            </div>\n            <div\n                class=\"amount\"\n                title=\"Ctrl + Click to add/remove 10\nShift + Click to add/remove 100\"\n            >\n                <button\n                    mat-icon-button\n                    [disabled]=\"!item.amount || item.amount <= 0\"\n                    (touchrelease)=\"change(item, -step)\"\n                >\n                    <app-icon [icon]=\"{ class: 'material-icons', content: 'remove' }\"></app-icon>\n                </button>\n                <div class=\"value\">{{ item.amount }}</div>\n                <button\n                    mat-icon-button\n                    [disabled]=\"item.amount >= (item.maximum_quantity || 100)\"\n                    (touchrelease)=\"change(item, step)\"\n                >\n                    <app-icon [icon]=\"{ class: 'material-icons', content: 'add' }\"></app-icon>\n                </button>\n            </div>\n        </div>\n        <div class=\"total\">\n            <span>Total:</span>\n            {{ total / 100 || 0 | currency: symbol }}\n        </div>\n    </div>\n</div>\n<!-- <div class=\"total\"><span>Order Total:</span> {{ total / 100 | currency }}</div> -->\n<div class=\"info\" *ngIf=\"show\">\n    *Orders are subject to a <span>48 hour limit</span> for cancellation ahead of a meeting\n</div>\n<div class=\"option\">\n    <button mat-button (touchrelease)=\"event.emit({ type: 'next' })\" [disabled]=\"!valid\">\n        Save order\n    </button>\n</div>\n","import { Component, OnInit, EventEmitter, Input, Output } from '@angular/core';\nimport { ADynamicFormField } from '@acaprojects/ngx-dynamic-forms';\n\nimport { IBookingFlowEvent } from '../../main-flow.component';\nimport { BaseDirective } from '../../../../../shared/globals/base.directive';\nimport { AppService } from '../../../../../services/app.service';\nimport { IRoom } from '../../../../../services/data/rooms.service';\nimport { CateringOrder } from '../../../../../services/data/catering/catering-order.class';\nimport { CateringCategory } from '../../../../../services/data/catering/catering-category.class';\nimport { CateringItem } from '../../../../../services/data/catering/catering-item.class';\nimport { FormControl } from '@angular/forms';\n\nexport interface ICateringOrderList {\n    [room_id: string]: ICateringOrder;\n}\n\nexport interface ICateringOrder {\n    room_id: string;\n    name?: string;\n    items: ICateringItem[];\n    total: number;\n    count?: number;\n    symbol?: string;\n}\n\nexport interface ICateringItem {\n    id: string;\n    name?: string;\n    amount: number;\n    unit_cost: number;\n    maximum?: number;\n    minimum?: number;\n}\n\n@Component({\n    selector: 'catering-order',\n    templateUrl: './catering-order.component.html',\n    styleUrls: ['./catering-order.component.scss']\n})\nexport class BookingMainFlowCateringOrderComponent extends BaseDirective {\n    /** List of rooms selected for the booking */\n    @Input() spaces: IRoom[];\n    /** Form field for storing catering data for the booking */\n    @Input() order: CateringOrder;\n    /** Form field for storing catering data for the booking */\n    @Input() items: FormControl;\n    /** Show contents of the order */\n    @Input() public show: boolean;\n    /** Step value for adding catering items */\n    @Input() public step: number = 1;\n    /** Whether booking is within the catering exclusion period */\n    @Input() public exclude: { [space_id: string]: boolean };\n    /** Emitter for form events */\n    @Output() public event = new EventEmitter<IBookingFlowEvent>();\n\n    constructor(private _service: AppService) {\n        super();\n    }\n\n    /** Whether catering order is valid */\n    public get valid(): boolean {\n        if (!this.items) { return true; }\n        const list = this.items.value || [];\n        return list.reduce(\n            (valid, item) => valid && this.isValid(item),\n            true\n        );\n    }\n\n    /**\n     * Whether the given catering item/package is valid\n     * @param item\n     */\n    private isValid(item: CateringCategory) {\n        if (!item.items) {\n            return true;\n        }\n        if (item.must_select && item.amount) {\n            const selected = item.items.reduce((v, i) => v + (i.amount ? 1 : 0), 0);\n            return item.must_select <= selected;\n        }\n        return true;\n    }\n\n    /** Number of total items in all room orders */\n    public get count(): number {\n        if (!this.items) return 0;\n        const list = this.items.value || [];\n        return list.reduce((total, item) => total + item.amount, 0);\n    }\n\n    /** Total cost for all room orders */\n    public get total() {\n        if (!this.items) return 0;\n        const list = this.items.value || [];\n        return list.reduce((total, item) => total + item.total, 0);\n    }\n\n    public get symbol(): string {\n        if (!this.order) return 'USD';\n        const space = this._service.Rooms.list(true).find(room => room.id === this.order.location_id);\n        const building = this._service.Buildings.get(space.level.bld_id) || {} as any;\n        return building.currency || 'USD';\n    }\n\n    public change(item: CateringItem, amount: number) {\n        if (amount < 0) {\n            item.removeFromOrder(amount);\n        } else {\n            item.addToOrder(amount);\n        }\n        this.items.setValue(this.items.value);\n    }\n}\n","<div\n    class=\"catering\"\n    (window:keydown.control)=\"enableModifer('control')\"\n    (window:keyup.control)=\"disableModifer('control')\"\n    (window:keydown.shift)=\"enableModifer('shift')\"\n    (window:keyup.shift)=\"disableModifer('shift')\"\n    *ngIf=\"order_form\"\n>\n    <div class=\"topbar\">\n        <div class=\"icon\" (touchrelease)=\"event.emit({ type: 'previous' })\">\n            <i class=\"material-icons\">arrow_back</i>\n        </div>\n        <div class=\"text\" (touchrelease)=\"event.emit({ type: 'previous' })\">Order List</div>\n    </div>\n    <div class=\"header\">\n        <div class=\"search\">\n            <app-icon [icon]=\"{class:'material-icons', content: 'search'}\"></app-icon>\n            <input\n                [(ngModel)]=\"search_str\"\n                (ngModelChange)=\"search()\"\n                placeholder=\"Type to search\"\n            />\n            <button mat-icon-button *ngIf=\"search_str\" (touchrelease)=\"search_str = ''\">\n                <app-icon [icon]=\"{class:'material-icons', content: 'close'}\"></app-icon>\n            </button>\n        </div>\n        <div class=\"room-list\" *ngIf=\"spaces && spaces.length > 0\">\n            <div class=\"group\">\n                Deliver to:&nbsp;\n                <div class=\"set-space\">\n                    <dropdown\n                        klass=\"form\"\n                        [list]=\"spaces\"\n                        [model]=\"space_index\"\n                        (modelChange)=\"setSpace(spaces[$event])\"\n                    ></dropdown>\n                </div>\n            </div>\n            <div class=\"group\">\n                At:&nbsp;\n                <div class=\"set-delivery-time\">\n                    <dropdown\n                        klass=\"form\"\n                        [list]=\"delivery_times\"\n                        [model]=\"time_index\"\n                        (modelChange)=\"\n                            order_form?.controls.delivery_time.setValue(delivery_times[$event].id)\n                        \"\n                    ></dropdown>\n                </div>\n            </div>\n        </div>\n    </div>\n    <ng-container *ngIf=\"active_space && !loading[active_space.id]; else loader\">\n        <div class=\"body\" *ngIf=\"catering_allowed; else no_catering_allowed\">\n            <catering-category-list\n                *ngIf=\"!category\"\n                [types]=\"menu_map[active_space.id]\"\n                [exclude]=\"within_exclusion_period\"\n                (selected)=\"category = $event\"\n            ></catering-category-list>\n            <catering-item-list\n                *ngIf=\"category\"\n                [step]=\"step\"\n                [space]=\"active_space\"\n                [category]=\"category\"\n                [items]=\"order_form?.controls.items\"\n                [exclude]=\"within_exclusion_period\"\n                (event)=\"category = null\"\n            ></catering-item-list>\n            <div\n                class=\"no-catering\"\n                *ngIf=\"\n                    active_space &&\n                    (!menu_map[active_space.id] || menu_map[active_space.id].length <= 0)\n                \"\n            >\n                <div class=\"icon\">\n                    <img\n                        [alt]=\"is_catered ? 'Concierge Catering' : 'No Catering Available'\"\n                        [src]=\"\n                            is_catered ? 'assets/img/concierge.svg' : 'assets/img/no-catering.svg'\n                        \"\n                    />\n                </div>\n                <p>\n                    <ng-container *ngIf=\"is_catered; else no_catering\">\n                        Concierge will be in touch for\n                        {{ active_building.name }} catered rooms\n                    </ng-container>\n                    <ng-template #no_catering>\n                        Catering is <span>not available</span> in Converge for\n                        {{ active_building.name }} spaces. Please contact the local office for more\n                        information.\n                    </ng-template>\n                </p>\n                <div class=\"toggle\" *ngIf=\"is_catered\">\n                    <a-checkbox\n                        [(ngModel)]=\"has_catering\"\n                        [label]=\"\n                            'Add catering to ' + (active_space.number || active_space.name) + '?'\n                        \"\n                    ></a-checkbox>\n                </div>\n            </div>\n        </div>\n    </ng-container>\n    <div class=\"footer\">\n        <div class=\"order-list\" [class.show]=\"show_order\">\n            <div class=\"bar\" (touchrelease)=\"show_order = !show_order\"></div>\n            <catering-order\n                [spaces]=\"spaces\"\n                [step]=\"step\"\n                [order]=\"order\"\n                [items]=\"order_form.controls.items\"\n                [show]=\"show_order\"\n                [exclude]=\"exclusion_map\"\n                (event)=\"event.emit($event)\"\n            ></catering-order>\n        </div>\n    </div>\n</div>\n<ng-template #loader>\n    <div class=\"body\">\n        <div class=\"no-item\">\n            <div class=\"icon\">\n                <spinner type=\"circle-ring\" color=\"rgba(0,0,0, .35)\"></spinner>\n            </div>\n            <div class=\"text\">Loading menu data...</div>\n        </div>\n    </div>\n</ng-template>\n<ng-template #no_catering_allowed>\n    <div class=\"body\">\n        <div class=\"no-catering margin\">\n            <div class=\"icon\">\n                <img alt=\"No Catering Available\" src=\"assets/img/no-catering.svg\" />\n            </div>\n            <p>\n                Catering is <span class=\"bold\">not available</span> for this booking.<br />\n                Catering must be ordered within business hours\n                <span *ngIf=\"active_building.catering_restricted_from\">\n                    at least {{ active_building.catering_restricted_from || '0' }} hours in advance\n                    for meetings\n                </span>\n                at {{ active_building.name }}.\n            </p>\n        </div>\n    </div>\n</ng-template>\n","import { Component, Input, EventEmitter, Output, OnChanges, SimpleChanges } from '@angular/core';\nimport { ADynamicFormField } from '@acaprojects/ngx-dynamic-forms';\n\nimport { IBookingFlowEvent } from '../main-flow.component';\nimport { IRoom } from '../../../../services/data/rooms.service';\nimport { BaseDirective } from '../../../../shared/globals/base.directive';\nimport { AppService } from '../../../../services/app.service';\nimport { IBuilding } from '../../../../services/data/buildings.service';\n\nimport * as dayjs from 'dayjs';\nimport { CateringCategory } from '../../../../services/data/catering/catering-category.class';\nimport { CateringOrder } from '../../../../services/data/catering/catering-order.class';\nimport { generateCateringOrderFormFields } from '../../../../services/data/catering/catering.utilities';\nimport { FormGroup } from '@angular/forms';\nimport { Identity } from '../../../../shared/utilities/types.interfaces';\n\n@Component({\n    selector: 'booking-main-flow-catering',\n    templateUrl: './catering.component.html',\n    styleUrls: ['./catering.component.scss']\n})\nexport class BookingMainFlowCateringComponent extends BaseDirective implements OnChanges {\n    /** Booking ID */\n    @Input() id: string;\n    /** List of rooms selected for the booking */\n    @Input() spaces: IRoom[];\n    /** Start time of the current booking */\n    @Input() all_day = false;\n    /** Start time of the current booking */\n    @Input() date: number;\n    /** Length of the current booking in minutes */\n    @Input() duration: number;\n    /** Form field for storing catering data for the booking */\n    @Input() order: CateringOrder;\n    /** Emitter for form events */\n    @Output() public event = new EventEmitter<IBookingFlowEvent>();\n\n    /** Mapping of rooms to loading states */\n    public loading: { [id: string]: boolean } = {};\n    /** Mapping of room ids to available menu categories */\n    public menu_map: { [room_id: string]: CateringCategory[] } = {};\n    /** Selected menu category */\n    public category: CateringCategory;\n    /** Value to filter menu items on */\n    public search_str: string;\n    /** Active room to add catering items to */\n    public active_space: IRoom;\n\n    public show_order: boolean;\n    /** State of modifier keys */\n    public key_states: { shift: boolean; control: boolean } = { shift: false, control: false };\n    /** Step value for adding catering items */\n    public step: number = 1;\n    /** Form fields for the order */\n    public order_form: FormGroup;\n    /** List of available booking times */\n    public delivery_times: Identity[];\n\n    public get space_index(): number {\n        return Math.max(\n            0,\n            (this.spaces || []).findIndex(\n                space => space.id === this.order_form.controls.location_id.value\n            )\n        );\n    }\n\n    public get time_index(): number {\n        return Math.max(\n            0,\n            (this.delivery_times || []).findIndex(\n                block => block.id === this.order_form.controls.delivery_time.value\n            )\n        );\n    }\n\n    constructor(private _service: AppService) {\n        super();\n    }\n\n    public get active_building(): IBuilding {\n        if (this.active_space && this.active_space.level) {\n            const building = this._service.Buildings.get(this.active_space.level.bld_id);\n            return building || ({} as any);\n        }\n        return {} as any;\n    }\n\n    /** Whether catering can be provided if no menu is available */\n    public get is_catered() {\n        return !!this.active_building.has_catering;\n    }\n\n    /** Whether catering is allowed for the current time */\n    public get catering_allowed(): boolean {\n        if (this.delivery_times[0].id < 0) { return false; }\n        if ((this.menu_map[this.active_space.id] || []).find(category => category.order_anytime)) {\n            return true;\n        }\n        return !this.within_exclusion_period;\n    }\n\n    /** Whether booking time is within the building's exlusion period for catering  */\n    public get within_exclusion_period(): boolean {\n        if (!this.active_building.catering_restricted_from) {\n            return false;\n        }\n        return this.isExcluded(this.active_building.catering_restricted_from);\n    }\n\n    public isExcluded(restriction_time: number): boolean {\n        const now = dayjs().startOf('m');\n        const start = dayjs(this.date)\n            .startOf('m')\n            .second(1);\n        let end = start.subtract(restriction_time || -900, 'h');\n        if (end.format('ddd') === 'Sun' || end.format('ddd') === 'Sat') {\n            end = end.subtract(2, 'd');\n        }\n        return now.isAfter(end, 's');\n    }\n\n    public get exclusion_map(): { [key: string]: boolean } {\n        const exclusions: { [key: string]: boolean } = {};\n        const building_list = this._service.Buildings.list();\n        for (const space of this.spaces) {\n            const bld = building_list.find(bld => bld.id === space.level.bld_id);\n            if (bld) {\n                exclusions[space.id] = this.isExcluded(bld.catering_restricted_from);\n            }\n        }\n        return exclusions;\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.spaces && this.spaces) {\n            if (\n                !this.active_space ||\n                this.spaces.findIndex(i => i.id === this.active_space.id) < 0\n            ) {\n                this.active_space = this.spaces[0];\n            }\n            this.loadMenu();\n        }\n        if (changes.order && this.order) {\n            this.order_form = generateCateringOrderFormFields(this.order);\n        }\n        if (changes.date || changes.duration) {\n            this.delivery_times = this.generateAvailableTimes();\n            this.order_form.controls.delivery_time.setValue(this.delivery_times[0].id);\n        }\n    }\n\n    /**\n     * Load menu categories for the selected rooms\n     */\n    public loadMenu() {\n        if (this.spaces && this.spaces instanceof Array) {\n            this.spaces.forEach(space => {\n                this.loading[space.id] = true;\n                this.menu_map[space.id] = null;\n                this._service.Menu.query({ room_id: space.id }).then(\n                    list => {\n                        this.loading[space.id] = false;\n                        this.menu_map[space.id] = (list || []) as CateringCategory[];\n                    },\n                    () => {\n                        this.loading[space.id] = false;\n                        this.menu_map[space.id] = [];\n                    }\n                );\n            });\n        }\n    }\n\n    /**\n     * Update the active space\n     * @param space New active space\n     */\n    public setSpace(space: IRoom) {\n        this.category = null;\n        this.order_form.controls.location_id.setValue(space.id);\n        this.order_form.controls.items.setValue([]);\n        this.order.storePendingChanges('location', space.name);\n        this.timeout('set_space', () => (this.active_space = space), 100);\n    }\n\n    /**\n     * Filter category items\n     */\n    public search() {\n        if (this.active_space && this.search_str) {\n            const search = this.search_str.toLowerCase();\n            const categories = this.menu_map[this.active_space.id];\n            const list = {\n                id: 'search',\n                name: 'Search results',\n                src: '',\n                package: false,\n                zones: [],\n                items: categories.reduce((v, i) => {\n                    v = v.concat(\n                        i.items.filter((j: any) => {\n                            if (j.items) {\n                                return (\n                                    j.name.toLowerCase().indexOf(search) >= 0 ||\n                                    j.items.findIndex(\n                                        k => k.name.toLowerCase().indexOf(search) >= 0\n                                    ) >= 0\n                                );\n                            }\n                            return j.name.toLowerCase().indexOf(search) >= 0;\n                        })\n                    );\n                    return v;\n                }, [])\n            };\n            this.category = new CateringCategory(list);\n        } else {\n            this.category = null;\n        }\n    }\n\n    /** Enable a step modifier key */\n    public enableModifer(mod: 'shift' | 'control') {\n        this.key_states[mod] = true;\n        this.updateStep();\n    }\n\n    /** Disable a step modifier key */\n    public disableModifer(mod: 'shift' | 'control') {\n        this.key_states[mod] = false;\n        this.updateStep();\n    }\n\n    /** Update the increment and decrement step value */\n    public updateStep() {\n        this.step = this.key_states.shift ? 100 : this.key_states.control ? 10 : 1;\n    }\n\n    /** Generate list of available delivery times */\n    public generateAvailableTimes(): Identity[] {\n        const time_list: Identity[] = [];\n        if (this.date) {\n            let start = dayjs(this.date).startOf('m');\n            let old_start = start;\n            if (this.all_day) {\n                old_start = old_start.startOf('d');\n            }\n            let end = start.add(this.all_day ? 24 * 60 : this.duration, 'm');\n            if (start.isBefore(start.hour(7).minute(0), 'm') || this.all_day) {\n                start = start.hour(7).minute(0);\n                const now = dayjs().startOf('m');\n                if (start.isBefore(now, 'm')) {\n                    start = now.minute(Math.ceil(now.minute() / 5) * 5);\n                }\n            }\n            start = start.minute(Math.ceil(start.minute() / 5) * 5);\n            if (end.isAfter(start.hour(20).minute(0), 'm') || this.all_day) {\n                end = start.hour(20).minute(0);\n            }\n            let duration = Math.abs(old_start.diff(start, 'm'));\n            while (start.isBefore(end, 'm')) {\n                time_list.push({ id: duration, name: start.format('h:mm A') });\n                start = start.add(5, 'm');\n                duration += 5;\n            }\n            if (time_list.length <= 0) {\n                time_list.push({ id: -(90 * 24 * 60), name: 'Outside of hours' });\n            }\n        }\n        return time_list;\n    }\n}\n","<div class=\"catering-item-list\">\n    <div class=\"category-header\">\n        <div class=\"heading\">{{ category.name }}</div>\n        <div class=\"back\" (touchrelease)=\"event.emit()\">\n            <div class=\"icon\">\n                <i class=\"material-icons\">keyboard_arrow_left</i>\n            </div>\n            <div class=\"text\">Categories</div>\n        </div>\n    </div>\n    <ng-container *ngIf=\"category && category.items && category.items.length > 0; else empty\">\n        <div class=\"item\" *ngFor=\"let item of category.items\">\n            <catering-item [exclude]=\"exclude\" [step]=\"step\" [space]=\"space\" [items]=\"items\" [parent]=\"category\" [item]=\"item\"></catering-item>\n        </div>\n    </ng-container>\n    <ng-template #empty>\n        <div class=\"no-item\">\n            <div class=\"icon\">\n                <app-icon [icon]=\"{class:'material-icons', content: 'close'}\"></app-icon>\n            </div>\n            <div class=\"text\">No matching items</div>\n        </div>\n    </ng-template>\n</div>\n","\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { ADynamicFormField } from '@acaprojects/ngx-dynamic-forms';\n\nimport { BaseDirective } from '../../../../../shared/globals/base.directive';\nimport { IRoom } from '../../../../../services/data/rooms.service';\nimport { CateringCategory } from '../../../../../services/data/catering/catering-category.class';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n    selector: 'catering-item-list',\n    templateUrl: './item-list.component.html',\n    styleUrls: ['./item-list.component.scss']\n})\nexport class BookingMainFlowCateringItemListComponent extends BaseDirective {\n    /** Space selected to add catering to */\n    @Input() public space: IRoom;\n    /** Selected category of items to display */\n    @Input() public category: CateringCategory;\n    /** Whether booking is within the catering exclusion period */\n    @Input() public exclude: boolean;\n    /** Field for storing ordered catering items */\n    @Input() public items: FormControl;\n    /** Step value for adding catering items */\n    @Input() public step: number = 1;\n    /** Event emitter for item listings */\n    @Output() public event = new EventEmitter();\n\n}\n\n","<div\n    class=\"catering-list-item\"\n    [attr.item-id]=\"item?.id\"\n    [class.simple]=\"simple\"\n    [attr.cant-order]=\"exclude && !item.order_anytime\"\n    (touchrelease)=\"parent.must_select && !item.package ? toggle() : ''\"\n>\n    <div class=\"details\">\n        <div\n            class=\"image\"\n            [style.background-image]=\"\n                (item.image_url ? 'url(' + item.image_url + ')' : '') | safestyle\n            \"\n        ></div>\n        <div class=\"info\" (touchrelease)=\"show_list = !show_list\">\n            <div class=\"name\">{{ item.name }}</div>\n            <div class=\"count\" *ngIf=\"!item.package\">\n                {{ item.unit_price / 100 | currency: symbol }}\n                {{\n                    (item.unit_price ? '| ' : '') +\n                        (item.description ||\n                            (item.items && item.items.length > 0\n                                ? 'Selection of ' + item.items.length + ' items'\n                                : '') ||\n                            'No description')\n                }}\n            </div>\n            <div class=\"count\" *ngIf=\"item.package\">\n                {{ item.unit_price / 100 | currency: symbol }}\n                {{ (item.unit_price ? '| ' : '') + (item.description || 'No description') }}\n                {{ item.minimum_quantity ? ' | Minimum of ' + item.minimum_quantity : '' }}\n                {{\n                    item.must_select\n                        ? ' | Select ' + item.must_select + ' from the below options'\n                        : ''\n                }}\n            </div>\n        </div>\n        <div\n            class=\"amount\"\n            *ngIf=\"!parent.package && !parent.must_select && item.unit_price; else radio_option\"\n            title=\"Ctrl + Click to add/remove 10\nShift + Click to add/remove 100\"\n        >\n            <button\n                mat-icon-button\n                [disabled]=\"!item.amount || item.amount <= 0\"\n                (touchrelease)=\"remove(item)\"\n            >\n                <app-icon [icon]=\"{class: 'material-icons', content: 'remove'}\"></app-icon>\n            </button>\n            <div class=\"value\">{{ item.amount || '0' }}</div>\n            <button\n                mat-icon-button\n                [disabled]=\"item.amount >= (item.maximum_quantity || 100)\"\n                (touchrelease)=\"add(item)\"\n            >\n                <app-icon [icon]=\"{class: 'material-icons', content: 'add'}\"></app-icon>\n            </button>\n        </div>\n        <ng-template #radio_option>\n            <div class=\"amount select\" *ngIf=\"!item.package && parent.amount\" (touchrelease)=\"updateSelection(item)\">\n                <radio-btn *ngIf=\"parent.must_select === 1\" [model]=\"!!item.amount\"></radio-btn>\n                <a-checkbox *ngIf=\"parent.must_select > 1\" [ngModel]=\"!!item.amount\"></a-checkbox>\n            </div>\n        </ng-template>\n    </div>\n    <div class=\"sub-items\" *ngIf=\"item && item.items\" [@show]=\"(show_list || (item.must_select && item.amount)) ? 'show' : 'hide'\">\n        <div\n            class=\"item\"\n            *ngFor=\"let itm of item.items\"\n            [class.selection]=\"itm.items && itm.items.length > 0\"\n        >\n            <catering-item\n                [simple]=\"true\"\n                [space]=\"space\"\n                [items]=\"items\"\n                [parent]=\"item\"\n                [item]=\"itm\"\n                (amountChange)=\"handleSelect(itm)\"\n            ></catering-item>\n            <div class=\"bar\"></div>\n        </div>\n    </div>\n</div>\n","\nimport { trigger, state, style, animate, transition } from '@angular/animations';\nimport { Component, Input, SimpleChanges, Output, EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { BaseDirective } from '../../../../../../shared/globals/base.directive';\nimport { IRoom } from '../../../../../../services/data/rooms.service';\nimport { AppService } from '../../../../../../services/app.service';\nimport { CateringCategory } from '../../../../../../services/data/catering/catering-category.class';\nimport { CateringItem } from '../../../../../../services/data/catering/catering-item.class';\n\n@Component({\n    selector: 'catering-item',\n    templateUrl: './list-item.component.html',\n    styleUrls: ['./list-item.component.scss'],\n    animations: [\n        trigger('show', [\n            state('show', style({ opacity: 1, height: '*' })),\n            state('hide', style({ opacity: 0, height: 0 })),\n            transition('show <=> hide', animate('200ms')),\n        ])\n    ]\n})\nexport class BookingMainFlowCateringListItemComponent extends BaseDirective {\n    /** Simple display of details */\n    @Input() simple: boolean;\n    /** Space selected to add catering to */\n    @Input() public space: IRoom;\n    /** Catering parent group or category */\n    @Input() public parent: CateringCategory;\n    /** Catering item or item group */\n    @Input() public item: CateringCategory;\n    /** Whether booking is within the catering exclusion period */\n    @Input() public exclude: boolean;\n    /** Field for storing ordered catering items */\n    @Input() public items: FormControl;\n    /** Whether the item can be selected */\n    @Input() public disabled: number;\n    /** Step value for adding catering items */\n    @Input() public step: number = 1;\n    /** Emitter for changes to the selected amount of the item */\n    @Output() public amountChange = new EventEmitter<number>();\n\n    /** Whether to show list of sub items */\n    public show_list: boolean;\n\n    constructor(private _service: AppService) {\n        super();\n    }\n\n    /** Currency code for the active space */\n    public get symbol(): string {\n        const level = this.space.level || {} as any;\n        const building = this._service.Buildings.get(level.bld_id) || {}  as any;\n        return building.currency || 'USD';\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.items && this.items) {\n            this.subscription('control', this.items.valueChanges.subscribe(() => this.updateAmounts()));\n        }\n        if (changes.space && this.space) {\n            this.updateAmounts()\n        }\n    }\n\n    /**\n     * Add the given item from the catering order\n     * @param item Item to add\n     */\n    public add(new_item: CateringItem | CateringCategory) {\n        if (this.items) {\n            const items: CateringItem[] = this.items.value || [];\n            if (!items.find(item => item.id === new_item.id)) {\n                items.push(new_item instanceof CateringCategory ? new CateringCategory(new_item) : new CateringItem(new_item));\n            }\n            const item = items.find(item => item.id === new_item.id);\n            item.addToOrder();\n            this.items.setValue(items);\n            this.amountChange.emit(item.amount);\n        }\n    }\n\n    /**\n     * Remove the given item from the catering order\n     * @param item Item to remove\n     */\n    public remove(existing_item: CateringItem | CateringCategory) {\n        if (this.items && this.space) {\n            const items: CateringItem[] = this.items.value || [];\n            const item = items.find(item => item.id === existing_item.id);\n            if (item) {\n                item.removeFromOrder();\n                if (item.amount === 0) {\n                    items.splice(items.indexOf(item), 1);\n                    this.items.setValue(items);\n                }\n                this.updateAmounts();\n                this.amountChange.emit(item.amount);\n            }\n        }\n    }\n\n    /**\n     * Toggle the activation state of the item\n     */\n    public toggle() {\n        if (this.item.amount === 0) {\n            this.add(this.item);\n        } else {\n            this.remove(this.item);\n        }\n    }\n\n    public handleSelect(item: CateringItem | CateringCategory) {\n        if (this.item instanceof CateringCategory) {\n            if (this.item.must_select === 1) {\n                for (const i of this.item.items) {\n                    if (i.amount === 0) {\n                        i.addToOrder();\n                    }\n                }\n            } else if (this.item.must_select > 1 && item.amount > 0) {\n                const active = this.item.items.reduce((v, i) => v + (i.amount > 0 ? 1 : 0), 0);\n                if (active > this.item.must_select) {\n                    let diff = active - this.item.must_select;\n                    for (const i of this.item.items) {\n                        if (diff > 0 && i.amount > 0 && !(item.id === i.id || item.name === i.name)) {\n                            this.item.setAmount(0);\n                            diff--;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    public updateSelection(toggled_item: CateringItem) {\n        const items: CateringItem[] = this.items.value || [];\n        const parent = items.find(an_item => this.parent.id === an_item.id) as CateringCategory;\n        const item = parent.items.find(an_item => an_item.id === toggled_item.id);\n        if (item) {\n            item.setAmount(toggled_item.amount > 0 ? 0 : 1);\n            this.item.setAmount(toggled_item.amount > 0 ? 0 : 1);\n        }\n        const selected = parent.items.reduce((count, an_item) => count + (an_item.amount ? 1 : 0), 0);\n        if (selected > parent.must_select) {\n            const removed_item = parent.items.find(an_item => an_item.id !== toggled_item.id);\n            removed_item.setAmount(0);\n            this.items.setValue(this.items.value);\n        }\n    }\n\n    public updateAmounts() {\n        if (!this.items) { return; }\n        if (!this.parent.must_select) {\n            const items: CateringItem[] = this.items.value || [];\n            const item = items.find(an_item => this.item.id === an_item.id);\n            if (item && item.amount !== this.item.amount) {\n                this.item.setAmount(item.amount);\n            } else if (!item) {\n                this.item.setAmount(0);\n            }\n        } else if (this.parent && this.parent.items) {\n            const items: CateringItem[] = this.items.value || [];\n            const parent = items.find(an_item => this.parent.id === an_item.id) as CateringCategory;\n            if (!parent) { return; }\n            const item = parent.items.find(an_item => an_item.id === this.item.id);\n            if (item) {\n                this.item.setAmount(item.amount);\n            }\n        }\n    }\n}\n","<div class=\"delivery-time\">{{ time }}</div>\n<div class=\"location\">{{ location }}</div>\n<div class=\"count\">\n    {{ count || \"0\" }} Item{{ count === 1 ? \"\" : \"s\" }}\n</div>\n<div class=\"cost\">\n    {{ total / 100 | currency:symbol }}\n</div>\n<div class=\"actions\" *ngIf=\"!expired\">\n    <button mat-icon-button *ngIf=\"!order.error\" (touchrelease)=\"edit.emit()\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'edit' }\"></app-icon>\n    </button>\n    <button mat-icon-button (touchrelease)=\"delete.emit()\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'delete' }\"></app-icon>\n    </button>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { CateringOrder } from '../../../../../../services/data/catering/catering-order.class';\nimport { CateringItem } from '../../../../../../services/data/catering/catering-item.class';\nimport { AppService } from '../../../../../../services/app.service';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'catering-order-list-item',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss']\n})\nexport class BookingCateringOrderItemComponent implements OnInit {\n    /** Catering order to display */\n    @Input() public order: CateringOrder;\n    /** Whether booking is all day */\n    @Input() public all_day = false;\n    /** Emitter for edit events */\n    @Output() public edit = new EventEmitter<void>();\n    /** Emitter for delete events */\n    @Output() public delete = new EventEmitter<void>();\n\n    public get expired(): boolean {\n        if (!this.order) return false;\n        const time =\n            (this.order.changes ? this.order.changes.delivery_time : null) ||\n            this.order.delivery_time;\n        return dayjs().isAfter(dayjs(this.order.booking_date).add(time, 'm'), 's');\n    }\n\n    constructor(private _service: AppService) { }\n\n    /** Display string for the delivery location of the order */\n    public get location(): string {\n        if (!this.order) return 'No Location';\n        if (this.order.changes && this.order.changes.location_id) {\n            const space = (this._service.Rooms.list(true) || []).find(room => room.id = this.order.changes.location_id) || {};\n            return space.name;\n        }\n        return this.order.location;\n    }\n\n    /** Display string for the set delivery time */\n    public get time(): string {\n        if (!this.order) return 'No Delivery Time';\n        const duration =\n            (this.order.changes ? this.order.changes.delivery_time : null) ||\n            this.order.delivery_time;\n        let date = dayjs(this.order.booking_date);\n        if (this.all_day && !date.isSame(dayjs(), 'd')) {\n            date = date.hour(7).minute(0);\n        }\n        return date.add(duration, 'm').format('h:mm A');\n    }\n\n    /** Number of items in the order */\n    public get count(): number {\n        if (!this.order) return 0;\n        const items: CateringItem[] =\n            (this.order.changes ? this.order.changes.items : null) || this.order.items;\n        return (items || []).reduce((total, item) => total + item.amount, 0);\n    }\n\n    /** Total cost of the items in the order */\n    public get total(): number {\n        if (!this.order) return 0;\n        const items: CateringItem[] =\n            (this.order.changes ? this.order.changes.items : null) || this.order.items;\n        return (items || []).reduce((total, item) => total + item.total, 0);\n    }\n\n    /** Current symbol for the order */\n    public get symbol(): string {\n        if (!this.order) return 'USD';\n        const space = this._service.Rooms.list(true).find(room => room.id === this.order.location_id);\n        if (!space) return 'USD';\n        const building = this._service.Buildings.get(space.level.bld_id) || {} as any;\n        return building.currency || 'USD';\n    }\n\n    public ngOnInit(): void {}\n}\n","<div class=\"catering order-list\">\n    <div class=\"content\">\n        <div class=\"header\">\n            <h3>Catering Orders</h3>\n        </div>\n        <div class=\"body\" *ngIf=\"order_list && order_list.length; else empty_state\">\n            <div class=\"list\">\n                <div class=\"order\" *ngFor=\"let order of order_list\" [class.error]=\"order.error\">\n                    <catering-order-list-item\n                        [all_day]=\"all_day\"\n                        [order]=\"order\"\n                        (edit)=\"editOrder(order)\"\n                        (delete)=\"deleteOrder(order)\"\n                    ></catering-order-list-item>\n                    <div class=\"error-message\">\n                        The space associated with this booking has been removed. Unless the space is\n                        re-added this order will be removed.\n                    </div>\n                </div>\n                <button mat-button widget (touchrelease)=\"addOrder()\">\n                    <app-icon [icon]=\"{ class: 'material-icons', content: 'add' }\"></app-icon>\n                    <div class=\"text\">New order</div>\n                </button>\n            </div>\n        </div>\n        <div class=\"footer\">\n            <button mat-button class=\"inverse\" (touchrelease)=\"event.emit({ type: 'previous' })\">\n                Back\n            </button>\n            <button mat-button (touchrelease)=\"event.emit({ type: 'next' })\">Continue</button>\n        </div>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div class=\"body\">\n        <div class=\"no-item\">\n            <div class=\"icon\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n            </div>\n            <div class=\"text\">No catering orders</div>\n        </div>\n        <button mat-button widget (touchrelease)=\"addOrder()\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'add' }\"></app-icon>\n            <div class=\"text\">New order</div>\n        </button>\n    </div>\n</ng-template>\n","import { Component, Input, Output, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\nimport { ADynamicFormField } from '@acaprojects/ngx-dynamic-forms';\nimport { Router } from '@angular/router';\n\nimport { BaseDirective } from '../../../../../shared/globals/base.directive';\nimport { CateringOrder } from '../../../../../services/data/catering/catering-order.class';\nimport { IRoom } from '../../../../../services/data/rooms.service';\n\n@Component({\n    selector: 'booking-main-flow-catering-orders',\n    templateUrl: './order-list.component.html',\n    styleUrls: ['./order-list.component.scss']\n})\nexport class CateringOrderListComponent extends BaseDirective implements OnChanges {\n    /** Form field for storing catering data for the booking */\n    @Input() public catering: ADynamicFormField;\n    /** List of rooms selected for the booking */\n    @Input() public spaces: IRoom[];\n    /** Start time of the current booking */\n    @Input() public date: number;\n    /** Whether booking is all day */\n    @Input() public all_day = false;\n    /** Emitter for changes to the active catering order */\n    @Output('order') public active_order = new EventEmitter();\n    /** Emitter for user events on component */\n    @Output() public event = new EventEmitter();\n\n    constructor(private _router: Router) {\n        super();\n    }\n\n    /** List of orders in the current booking */\n    public get order_list(): CateringOrder[] {\n        if (!this.catering) {\n            return [];\n        }\n        return this.catering.control.value || [];\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.date && this.catering) {\n            this.catering.control.setValue(\n                this.order_list.map(\n                    order => new CateringOrder({ ...order, booking_date: this.date })\n                )\n            );\n            this.order_list.forEach(\n                order => (order.error = !this.spaces.find(space => space.id === order.location_id))\n            );\n        }\n    }\n\n    /**\n     * Create new order and start editing it\n     */\n    public addOrder(): void {\n        const order = new CateringOrder({\n            id: `order-${Math.floor(Math.random() * 999_999_999)}`,\n            location_id: this.spaces[0].id,\n            location: this.spaces[0].name,\n            booking_date: this.date,\n            delivery_time: 0\n        });\n        this.active_order.emit(order);\n        this._router.navigate(['book', 'main', 'catering'], {\n            queryParams: { order_id: order.id }\n        });\n    }\n\n    /**\n     * Start editing the given order\n     * @param order\n     */\n    public editOrder(order: CateringOrder): void {\n        const the_order = this.order_list.find(o => o.id === order.id);\n        this.active_order.emit(the_order);\n        this._router.navigate(['book', 'main', 'catering']);\n    }\n\n    /**\n     * Remove the given order from the catering order list\n     * @param order\n     */\n    public deleteOrder(order: CateringOrder): void {\n        const order_list = this.order_list;\n        const the_order = order_list.find(o => o.id === order.id);\n        order_list.splice(order_list.indexOf(the_order), 1);\n        this.catering.control.setValue(order_list);\n    }\n}\n","<div class=\"find-space\">\n    <div class=\"topbar\">\n        <div class=\"icon\" (touchrelease)=\"event.emit({ type: 'previous' })\">\n            <i class=\"material-icons\">arrow_back</i>\n        </div>\n        <div class=\"text\" (touchrelease)=\"event.emit({ type: 'previous' })\">Book</div>\n    </div>\n    <div class=\"header\">\n        <div class=\"location-select\">\n            <custom-dropdown klass=\"options\" [(show)]=\"show\" [content]=\"content\" [template]=\"list\">\n                <ng-template #content>\n                    <div class=\"dropdown-header\" (touchrelease)=\"show = !show\">\n                        <div class=\"image\">\n                            <img src=\"assets/img/location-img.svg\" />\n                        </div>\n                        <div class=\"text\">Select location(s)</div>\n                        <app-icon\n                            [icon]=\"{\n                                class: 'material-icons',\n                                content: show ? 'keyboard_arrow_up' : 'keyboard_arrow_down'\n                            }\"\n                        ></app-icon>\n                    </div>\n                </ng-template>\n                <ng-template #list>\n                    <ng-container *ngIf=\"locations && locations.length > 0\">\n                        <div\n                            class=\"item-list\"\n                            [style.height]=\"\n                                (locations.length < 6 ? locations.length : 6) * 40 + 'px'\n                            \"\n                        >\n                            <div\n                                class=\"item\"\n                                *ngFor=\"let item of locations; let i=index\"\n                                (touchrelease)=\"\n                                    item.selected = !item.selected;\n                                    filter$.next(item.id + item.selected)\n                                \"\n                            >\n                                <a-checkbox klass=\"dark\" [ngModel]=\"item.selected\"></a-checkbox>\n                                <div class=\"text\">\n                                    <div class=\"code\" [title]=\"item.code\">{{ item.code }}</div>\n                                    <div class=\"name\" [title]=\"item.name\">{{ item.name }}</div>\n                                    <div class=\"address\" [title]=\"item.address\">\n                                        {{ item.address }}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </ng-container>\n                </ng-template>\n            </custom-dropdown>\n        </div>\n        <div class=\"selected-locations\">\n            <ng-container *ngFor=\"let item of locations\">\n                <div class=\"location\" *ngIf=\"item.selected\">\n                    <div class=\"text\">({{ item.code }}) {{ item.name }}</div>\n                    <button\n                        mat-icon-button\n                        (touchrelease)=\"\n                            item.selected = false; filter$.next(item.id + item.selected)\n                        \"\n                    >\n                        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n                    </button>\n                </div>\n            </ng-container>\n        </div>\n    </div>\n    <div class=\"body\">\n        <ng-container *ngIf=\"!loading\">\n            <cdk-virtual-scroll-viewport [itemSize]=\"136\">\n                <div class=\"item\" *cdkVirtualFor=\"let item of shown_spaces || []\">\n                    <booking-main-flow-space-item\n                        [space]=\"item\"\n                        [selected]=\"item.selected\"\n                        (selectedChange)=\"onSelectChange(item, $event)\"\n                    ></booking-main-flow-space-item>\n                </div>\n            </cdk-virtual-scroll-viewport>\n        </ng-container>\n        <div class=\"no-item center\" *ngIf=\"!shown_spaces || shown_spaces.length <= 0 || loading\">\n            <div class=\"icon\">\n                <app-icon\n                    *ngIf=\"!loading\"\n                    [icon]=\"{ class: 'material-icons', content: 'close' }\"\n                ></app-icon>\n                <spinner *ngIf=\"loading\" type=\"circle-ring\" color=\"rgba(0,0,0,.6)\"></spinner>\n            </div>\n            <div class=\"text\">\n                {{ loading ? 'Results are populating...' : 'No available rooms' }}\n            </div>\n        </div>\n    </div>\n    <div class=\"footer\">\n        <div class=\"date\">\n            <div class=\"arrow\" [class.disabled]=\"is_today\" (touchrelease)=\"changeDate(-1)\">\n                <i class=\"material-icons\">keyboard_arrow_left</i>\n            </div>\n            <div class=\"display\">{{ date_display }}</div>\n            <div class=\"arrow\" (touchrelease)=\"changeDate(1)\">\n                <i class=\"material-icons\">keyboard_arrow_right</i>\n            </div>\n        </div>\n        <div class=\"next\">\n            <button\n                mat-button\n                [disabled]=\"!spaces || !spaces.control.value || spaces.control.value.length <= 0\"\n                (touchrelease)=\"event.emit({ type: 'next' })\"\n            >\n                Next\n            </button>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter, SimpleChanges, OnChanges } from '@angular/core';\nimport { ADynamicFormField } from '@acaprojects/ngx-dynamic-forms';\nimport { Subject } from 'rxjs';\nimport { debounceTime, switchMap } from 'rxjs/operators';\n\nimport { IBookingFlowEvent } from '../main-flow.component';\nimport { IBuilding } from '../../../../services/data/buildings.service';\nimport { BaseDirective } from '../../../../shared/globals/base.directive';\nimport { AppService } from '../../../../services/app.service';\nimport { IRoom, IRoomAvailabilityRequest } from '../../../../services/data/rooms.service';\nimport { IUser } from '../../../../services/data/users.service';\nimport { rulesForSpace } from '../../../../shared/utilities/booking.utilities';\n\nimport * as dayjs from 'dayjs';\nimport { Utils } from '../../../../shared/utility.class';\n\n@Component({\n    selector: 'booking-main-flow-find-space',\n    templateUrl: './find-space.component.html',\n    styleUrls: ['./find-space.component.scss']\n})\nexport class BookingMainFlowFindSpaceComponent extends BaseDirective implements OnInit, OnChanges {\n    /** Date time to search for free rooms */\n    @Input('dateField') public date_field: ADynamicFormField;\n    /** Available slot size to search for free rooms */\n    @Input() public duration: number;\n    /** Whether booking is all day */\n    @Input() public all_day: boolean;\n    /** Whether booking has catering */\n    @Input() public catering: boolean;\n    /** Selected host for the booking being created */\n    @Input() public user: IUser;\n    /** Period of the recurrence */\n    @Input() public recurr_period: number;\n    /** Timestamp for the end of recurrence period */\n    @Input() public recurr_end: number;\n    /** Form field for selected spaces */\n    @Input() public spaces: ADynamicFormField;\n    /** Emitter for form events */\n    @Output() public event = new EventEmitter<IBookingFlowEvent>();\n\n    /** List of available buildings to filter available rooms on */\n    public locations: IBuilding[] = [];\n    /** Whether the space results are being loaded or not */\n    public loading: boolean;\n    /** Spaces available before local filtering */\n    public available_spaces: IRoom[] = [];\n    /** Spaces available with the selected filters */\n    public shown_spaces: IRoom[] = [];\n    /** Whether to show the location dropdown list */\n    public show: boolean;\n    /** Subject for changes filters for displaying available rooms */\n    public filter$ = new Subject<any>();\n    /** Last query string used for searching for rooms */\n    private last_query = '';\n\n    constructor(private _service: AppService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        if (!this._service.ready() || this._service.Rooms.list(true).length <= 0) {\n            return this.timeout('init', () => this.ngOnInit());\n        }\n        this.last_query = '';\n        this.subscription(\n            'filter',\n            this.filter$\n                .pipe(\n                    debounceTime(500),\n                    switchMap(_ => this.search())\n                )\n                .subscribe((results: IRoom[]) => {\n                    this.available_spaces = results;\n                    this.shown_spaces = this.filter(results);\n                    this.shown_spaces.sort((a, b) => this.sort(a, b));\n                    this.loading = false;\n                })\n        );\n        this.subscription('building', this._service.Buildings.listen((bld) => {\n            if (bld) {\n                let active_locations = '';\n                if (localStorage) {\n                    active_locations = localStorage.getItem('STAFF.booking.filters') || '';\n                }\n                this.locations = this._service.Buildings.list().map(i => ({\n                    ...i,\n                    selected: active_locations ? active_locations.indexOf(i.id) >= 0 : i.id === bld.id\n                }));\n                this.filter$.next(Math.floor(Math.random() * 99999));\n            }\n        }));\n    }\n\n    /** Timestamp of the currently selected date */\n    public get date(): number {\n        let date: number = this.date_field ? this.date_field.getValue() : dayjs().valueOf();\n        if (this.catering) {\n            date = dayjs(date).subtract(15, 'm').valueOf();\n        }\n        if (this.duration > 720 || this.all_day) {\n            date = dayjs(date).startOf('d').valueOf();\n        }\n        return date;\n    }\n\n    /** Display string for the selected date */\n    public get date_display(): string {\n        return dayjs(this.date).format('ddd, DD MMM YYYY');\n    }\n\n    /** Whether the selected date is today */\n    public get is_today(): boolean {\n        const date = dayjs(this.date);\n        return dayjs().isSame(date, 'd');\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if ((changes.date_field && this.date_field) || (changes.duration && this.duration)) {\n            this.filter$.next(`${this.date}|${this.duration}`);\n        }\n    }\n\n    /**\n     * Search for available rooms matching the set filters\n     */\n    public search(): Promise<IRoom[]> {\n        const query: IRoomAvailabilityRequest = {\n            date: this.all_day ? dayjs(this.date).startOf('d').valueOf() : this.date,\n            duration: this.all_day ? 24 * 60 : (this.duration + (this.catering ? 15 : 0)),\n            hide_bookings: true\n        };\n        if (this.recurr_period && this.recurr_end) {\n            query.recurr_period = this.recurr_period;\n            query.recurr_end = this.recurr_end;\n        }\n        const locations = this.locations.reduce((v, i) => {\n            if ((i as any).selected) { v.push(i.id); }\n            return v;\n        }, []);\n        if (locations.length <= 0) {\n            locations.push(this._service.Buildings.current().id);\n        }\n        const location_list = locations.join(',');\n        this.timeout('save_filters', () => {\n            if (localStorage) {\n                localStorage.setItem('STAFF.booking.filters', location_list);\n            }\n        });\n        let room_list: IRoom[] = [];\n        for (const zone of locations) {\n            room_list = room_list.concat(this._service.Rooms.list(true, zone));\n        }\n        const date = query.date;\n        const duration = query.duration;\n        // Filter out rooms unavailable due to booking rules\n        room_list = Utils.unique(room_list, 'id').filter(room => {\n            const bld: any = this._service.Buildings.get(room.level.bld_id) || this._service.Buildings.current() || {};\n            const rules = rulesForSpace({\n                user: this.user || this._service.Users.current(),\n                space: room,\n                time: date,\n                recurr_end: this.recurr_end || 0,\n                duration,\n                rules: bld.booking_rules\n            });\n            room.book_type = rules.auto_approve ? 'Book' : 'Request';\n            return rules.hide;\n        });\n        // Limit number of rooms retrieved\n        room_list = room_list.slice(0, Math.min(100, room_list.length));\n        query.ignore_rooms = room_list.reduce((v, i) => v + (v ? ',' : '') + i.id, '');\n        query.zone_ids = location_list;\n        const query_str = JSON.stringify(query);\n        if (query_str !== this.last_query && this.locations && this.locations.length > 0) {\n            this.last_query = query_str;\n            this.loading = true;\n        }\n        return this._service.Rooms.available(query);\n    }\n\n    /**\n     * Filter rooms based booking rules\n     * @param list List of rooms\n     */\n    public filter(list: IRoom[]): IRoom[] {\n        const selected = this.spaces.control.value || [];\n        const date = this.all_day ? dayjs(this.date).startOf('d').valueOf() : this.date;\n        const duration = this.all_day ? 24 * 60 : (this.duration + (this.catering ? 15 : 0));\n        return list\n            .filter(room => {\n                const bld: any = this._service.Buildings.get(room.level.bld_id) || this._service.Buildings.current() || {};\n                const rules = rulesForSpace({\n                    user: this.user || this._service.Users.current(),\n                    space: room,\n                    time: date,\n                    recurr_end: this.recurr_end || 0,\n                    duration,\n                    rules: bld.booking_rules\n                });\n                room.book_type = rules.auto_approve ? 'Book' : 'Request';\n                return !rules.hide;\n            })\n            .map(i => ({...i, selected: !!selected.find(j => i.id === j.id) } as any));\n    }\n\n    /** On selection of spaces */\n    public onSelectChange(space: IRoom, state: boolean) {\n        if (this.recurr_period && this.recurr_end && state) {\n            this.spaces.setValue([space]);\n            this.shown_spaces = this.shown_spaces.map((i: any) => {i.selected = false; return i; });\n        } else {\n            this.setState(space, state);\n        }\n        (space as any).selected = state;\n    }\n\n    /**\n     * Update the list of spaces selected for the current booking\n     * @param space Space with which it's state has changed\n     * @param state New selected state of the space\n     */\n    public setState(space: IRoom, state: boolean) {\n        const list = this.spaces.control.value || [];\n        if (state) {\n            if (list.findIndex(i => i.id === space.id) < 0) {\n                this.spaces.setValue(list.concat([space]));\n            }\n        } else {\n            this.spaces.setValue(list.filter(i => i.id !== space.id));\n        }\n    }\n\n    /**\n     * Update the selected date\n     * @param value Value to change the date by. 1, 0 or -1 days\n     */\n    public changeDate(value: number) {\n        if (this.date_field) {\n            const date = dayjs(this.date);\n            const new_date = date.add(value, 'd');\n            if (!new_date.isBefore(dayjs().subtract(10, 'm'), 'm')) {\n                this.date_field.setValue(new_date.valueOf());\n                this.filter$.next(`${this.date}|${this.duration}`);\n            }\n        }\n    }\n\n    /**\n     * Determine the sort order of the two given itemss\n     * @param space_a\n     * @param space_b\n     */\n    private sort(space_a: IRoom, space_b: IRoom) {\n        const bld = this._service.Buildings.get(space_a.level.bld_id);\n        const bld_b = this._service.Buildings.get(space_a.level.bld_id);\n        if (bld && bld !== bld_b) {\n            return (bld.name || '').localeCompare(bld_b.name || '');\n        }\n        const sort_order = (bld.sort_order ? [...bld.sort_order] : []).reverse();\n        for (const zone_id of sort_order) {\n            if (zone_id === '*') { continue; }\n            const a_has_zone = space_a.zones.indexOf(zone_id) >= 0;\n            const b_has_zone = space_b.zones.indexOf(zone_id) >= 0;\n            if (a_has_zone && !b_has_zone) {\n                return 1;\n            } else if (b_has_zone && !a_has_zone) {\n                return -1;\n            }\n        }\n        return (space_a.name || '').localeCompare(space_b.name || '');\n    }\n}\n","<div class=\"space-item\" [class.request]=\"book_type === 'Request'\">\n    <div class=\"details\">\n        <div class=\"icon\">\n            <img src=\"assets/img/location.svg\" />\n        </div>\n        <div class=\"text\">\n            <div class=\"name\">{{ space?.level?.name }}, {{ space?.name }}</div>\n            <div class=\"info\" *ngIf=\"building\">({{ building.code }}) {{ building.name }}</div>\n            <div class=\"info\">\n                Capacity: {{ space?.capacity }}\n                {{ space && space.capacity === 1 ? 'Person' : 'People' }}\n            </div>\n            <div class=\"info recurrence\" *ngIf=\"occurences\">\n                Available for <span>{{ occurences }}</span> meeting occurences\n            </div>\n        </div>\n    </div>\n    <div class=\"options\">\n        <button mat-button (touchrelease)=\"toggle()\" [class.selected]=\"selected\">\n            {{\n                selected\n                    ? book_type === 'Request'\n                        ? 'Requesting'\n                        : 'Selected'\n                    : book_type === 'Request'\n                        ? 'Request'\n                        : 'Select'\n            }}\n        </button>\n        <button mat-button (touchrelease)=\"showMap()\">Map</button>\n    </div>\n</div>\n","\nimport { Component, Input, Output, EventEmitter, SimpleChanges, OnChanges } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { IRoom } from '../../../../../services/data/rooms.service';\nimport { BaseDirective } from '../../../../../shared/globals/base.directive';\nimport { AppService } from '../../../../../services/app.service';\nimport { IBuilding } from '../../../../../services/data/buildings.service';\nimport { ViewRoomModalComponent, ViewRoomModalData } from '../../../../../overlays/view-room-modal/view-room-modal.component';\n\n@Component({\n    selector: 'booking-main-flow-space-item',\n    templateUrl: './space-item.component.html',\n    styleUrls: ['./space-item.component.scss']\n})\nexport class BookingMainFlowSpaceItemComponent extends BaseDirective implements OnChanges {\n    /** Space to display */\n    @Input() public space: IRoom;\n    /** Whether the space has been selected for booking */\n    @Input() public selected: boolean;\n    /** Emitter for changes to selected state of the space */\n    @Output() public selectedChange = new EventEmitter<boolean>();\n    /** Building associated with the set space */\n    public building: IBuilding;\n\n    constructor(private _service: AppService, private _dialog: MatDialog) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.space &&  this.space) {\n            this.timeout('building', () => {\n                if (this.space.level) {\n                    this.building = this._service.Buildings.get(this.space.level.bld_id);\n                }\n            }, 100);\n        }\n    }\n\n    /** Booking type for the space */\n    public get book_type() {\n        return (this.space ? this.space.book_type : null) || 'Book';\n    }\n\n    /** Number of available occurences for recurrence */\n    public get occurences(): string {\n        if (\n            this.space &&\n            this.space.recurr_available &&\n            this.space.recurr_available.length > 0\n        ) {\n            const available_count = this.space.recurr_available\n                .filter(i => i.available)\n                .length;\n            if (available_count === this.space.recurr_available.length) {\n                return 'all';\n            }\n            return `${available_count} of ${this.space.recurr_available.length}`;\n        }\n        return null;\n\n    }\n\n    /**\n     * Toggle the selected state of the space\n     */\n    public toggle() {\n        this.selected = !this.selected;\n        this.selectedChange.emit(this.selected);\n    }\n\n    /**\n     * Open modal to show the location of the space on a map\n     */\n    public showMap() {\n        this._dialog.open<ViewRoomModalComponent, ViewRoomModalData>(ViewRoomModalComponent, {\n            data: {\n                space: this.space,\n            }\n        });\n    }\n}\n","<div class=\"booking-form\">\n    <div class=\"form\">\n        <a-dynamic-form [fields]=\"fields\"></a-dynamic-form>\n        <div class=\"options\">\n            <button mat-button (touchrelease)=\"next()\">Next</button>\n        </div>\n    </div>\n</div>\n","import {\n    Component,\n    Input,\n    Output,\n    EventEmitter,\n    OnChanges,\n    SimpleChanges\n} from '@angular/core';\nimport { ADynamicFormField } from '@acaprojects/ngx-dynamic-forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { IBookingFlowEvent } from '../main-flow.component';\nimport { BaseDirective } from '../../../../shared/globals/base.directive';\nimport { AppService } from '../../../../services/app.service';\nimport {\n    RecurrenceModalComponent,\n    RecurrenceModalData\n} from '../../../../overlays/recurrence-modal/recurrence-modal.component';\nimport { RoomSelectModalComponent, RoomSelectModalData } from '../../../../overlays/room-select-modal/room-select-modal.component';\n\n@Component({\n    selector: 'booking-main-flow-form',\n    templateUrl: './form.component.html',\n    styleUrls: ['./form.component.scss']\n})\nexport class BookingMainFlowFormComponent extends BaseDirective implements OnChanges {\n    /** List of fields to display on the form */\n    @Input() fields: ADynamicFormField[] = [];\n    /** Emitter for form events */\n    @Output() public event = new EventEmitter<IBookingFlowEvent>();\n\n    constructor(private _service: AppService, private _dialog: MatDialog) {\n        super();\n    }\n\n    /** Whether the form is valid */\n    public get valid(): boolean {\n        return this.fields.reduce((a, v) => {\n            const valid =\n                v.children && v.children.length > 0\n                    ? v.children.reduce(\n                          (r, i) => r && (i.isValid() || !i.required || i.disabled),\n                          true\n                      )\n                    : v.isValid() || !v.required || v.disabled;\n            return a && valid;\n        }, true);\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.fields && this.fields) {\n            const find = this.fields.find(\n                i =>\n                    i.key === 'recurrence' ||\n                    !!(i.children && i.children.find(j => j.key === 'recurrence'))\n            );\n            const field = find\n                ? find.key === 'recurrence'\n                    ? find\n                    : find.children.find(j => j.key === 'recurrence')\n                : null;\n            if (field) {\n                this.subscription(\n                    'recurrence',\n                    field.action.subscribe(() => this.setRecurrence(field))\n                );\n            }\n            const find_space = this.fields.find(\n                i => i.key === 'room' || !!(i.children && i.children.find(j => j.key === 'room'))\n            );\n            const spaces = find_space\n                ? find_space.key === 'room'\n                    ? find_space\n                    : find_space.children.find(j => j.key === 'room')\n                : null;\n            if (spaces && !spaces.hide) {\n                this.subscription(\n                    'spaces',\n                    spaces.action.subscribe(() => this.setSpaces(spaces))\n                );\n            }\n        }\n    }\n\n    public next() {\n        this.fields.forEach(i => i.control.markAsDirty());\n        if (this.valid) {\n            this.event.emit({ type: 'next' });\n        } else {\n            this._service.notifyError('Some of the form fields are invalid');\n        }\n    }\n\n    /**\n     * Open modal to change the selected spaces for the booking\n     * @param field Form field associated with spaces\n     */\n    public setSpaces(field: ADynamicFormField) {\n        let periodField = this.fields.find(i => i.key === 'period_group');\n        let dateField = periodField.children.find(i => i.key === 'date');\n        let timeField = this.fields.find(i => i.key === 'time_group');\n        let durationField = timeField.children.find(i => i.key === 'duration');\n        let all_day_field = this.fields.find(i => i.key === 'all_day');\n        const ref = this._dialog.open<RoomSelectModalComponent, RoomSelectModalData>(\n            RoomSelectModalComponent,\n            {\n                data: {\n                    date: dateField.control.value,\n                    duration: durationField.control.value,\n                    all_day: all_day_field.control.value,\n                    spaces: field.getValue() || [],\n                    multiple_spaces: true\n                }\n            })\n        ref.componentInstance.event.subscribe(\n            event => {\n                if (event.reason === 'done') {\n                    field.setValue(ref.componentInstance.space_list || []);\n                }\n                ref.close();\n            }\n        );\n    }\n\n    /**\n     * Open modal to change the recurrence options for the booking\n     * @param field Form field associated with recurrence\n     */\n    public setRecurrence(field: ADynamicFormField) {\n        const date_field = this.fields\n            .reduce((v, i) => v.concat(i.children && i.children.length ? i.children : [i]), [])\n            .find(i => i.key === 'date');\n        const ref = this._dialog.open<RecurrenceModalComponent, RecurrenceModalData>(\n            RecurrenceModalComponent,\n            { data: { ...(field.getValue() || {}), date: date_field.control.value } }\n        );\n        ref.componentInstance.event.subscribe(event => {\n                if (event.reason === 'done') {\n                    field.setValue({\n                        period: ref.componentInstance.recurr_period,\n                        end: ref.componentInstance.recurr_end\n                    });\n                }\n                ref.close();\n            }\n        );\n    }\n}\n","<ng-container [ngSwitch]=\"page\">\n    <ng-container *ngSwitchCase=\"'orders'\">\n        <booking-main-flow-catering-orders\n            [catering]=\"catering\"\n            [spaces]=\"spaces\"\n            [all_day]=\"all_day\"\n            [date]=\"date\"\n            (order)=\"order = $event\"\n            (event)=\"progress($event)\"\n        >\n        </booking-main-flow-catering-orders>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"'catering'\">\n        <booking-main-flow-catering\n            [id]=\"id\"\n            [all_day]=\"all_day\"\n            [date]=\"date\"\n            [duration]=\"duration\"\n            [spaces]=\"spaces\"\n            [order]=\"order\"\n            (event)=\"progress($event)\"\n        >\n        </booking-main-flow-catering>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"'space'\">\n        <booking-main-flow-find-space\n            [dateField]=\"date_field\"\n            [recurr_end]=\"recurr_end\"\n            [recurr_period]=\"recurr_period\"\n            [all_day]=\"all_day\"\n            [duration]=\"duration\"\n            [spaces]=\"space_list\"\n            [catering]=\"needs_catering\"\n            (event)=\"progress($event)\"\n        ></booking-main-flow-find-space>\n    </ng-container>\n    <ng-container *ngSwitchDefault>\n        <booking-main-flow-form\n            [fields]=\"form_fields\"\n            (event)=\"progress($event)\"\n        ></booking-main-flow-form>\n    </ng-container>\n</ng-container>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router, NavigationEnd } from '@angular/router';\nimport { ADynamicFormField } from '@acaprojects/ngx-dynamic-forms';\nimport { FormGroup } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { AppService } from '../../../services/app.service';\nimport { IBooking } from '../../../services/data/bookings.service';\nimport { IRoom, IRoomAvailabilityRequest } from '../../../services/data/rooms.service';\nimport { IUser } from '../../../services/data/users.service';\nimport { BaseDirective } from '../../../shared/globals/base.directive';\nimport { generateBookingFormMetadata } from '../../../shared/utilities/booking.utilities';\nimport { formatSpaces } from '../../../shared/utilities/formatting.utilities';\nimport { ICateringOrderList } from './catering/catering-order/catering-order.component';\nimport { CateringOrder } from '../../../services/data/catering/catering-order.class';\n\nimport { BookingEquipmentDetailsModalComponent } from '../overlays/equipment-details/equipment-details.component';\nimport { BookingCateringDetailsModalComponent } from '../overlays/catering-details/catering-details.component';\nimport { BookingDetailsModalComponent } from '../overlays/booking-details/booking-details.component';\nimport { BookingRecurrenceDetailsModalComponent } from '../overlays/recurrence-details/recurrence-details.component';\nimport { BookingRecurrenceRoomSelectModalComponent } from '../overlays/recurrence-room-select/recurrence-room-select.component';\n\nimport { Utils } from '../../../shared/utility.class';\nimport * as dayjs from 'dayjs';\n\nexport interface IBookingFlowEvent {\n    type: 'next' | 'previous';\n    data?: { [name: string]: any };\n}\n\n@Component({\n    selector: 'booking-main-flow',\n    templateUrl: './main-flow.component.html',\n    styleUrls: ['./main-flow.component.scss']\n})\nexport class BookingMainFlowComponent extends BaseDirective implements OnInit {\n    /** Booking ID */\n    public id: string;\n    /** List of form fields associated with a booking */\n    public form_fields: ADynamicFormField[];\n    /** Name of the current page shown on the booking flow */\n    public page: string;\n    /** Form field for listing selected catering items */\n    public catering: ADynamicFormField;\n    /** Form field for the list of selected spaces */\n    public space_list: ADynamicFormField;\n    /** Form field for the selected date */\n    public date_field: ADynamicFormField;\n    /** Active catering order */\n    public order: CateringOrder;\n\n    constructor(\n        private _service: AppService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        if (!this._service.ready()) {\n            return this.timeout('init', () => this.ngOnInit());\n        }\n        this.subscription(\n            'route',\n            this._route.paramMap.subscribe(params => {\n                if (params.has('page')) {\n                    this.page = params.get('page');\n                }\n            })\n        );\n        this.subscription(\n            'route_change',\n            this._router.events.subscribe(event => {\n                if (event instanceof NavigationEnd && event.url.indexOf('book') < 0) {\n                    this.clearForm();\n                }\n            })\n        );\n        this.loadForm();\n    }\n\n    /** List of selected rooms for the booking */\n    public get spaces(): IRoom[] {\n        const field = this.form_fields.find(i => i.key === 'room');\n        if (field) {\n            return field.control.value || [];\n        }\n        return [];\n    }\n\n    /** Timestamp of the end of the recurrence period */\n    public get recurr_end(): number {\n        let field = this.form_fields.find(i => i.key === 'recurrence');\n        if (field) {\n            return (field.control.value || { end: 0 }).end || 0;\n        }\n        field = this.form_fields.find(i => i.key === 'period_group');\n        if (field) {\n            return ((field.control as FormGroup).controls.recurrence.value || { end: 0 }).end || 0;\n        }\n        return 0;\n    }\n\n    /** Period of the recurrence */\n    public get recurr_period(): number {\n        let field = this.form_fields.find(i => i.key === 'recurrence');\n        if (field) {\n            return (field.control.value || { period: 0 }).period || 0;\n        }\n        field = this.form_fields.find(i => i.key === 'period_group');\n        if (field) {\n            return (\n                ((field.control as FormGroup).controls.recurrence.value || { period: 0 }).period ||\n                0\n            );\n        }\n        return 0;\n    }\n\n    /** Datetime selected for the booking */\n    public get date(): number {\n        const field = this.date_field;\n        if (field) {\n            return field.control.value;\n        }\n        return dayjs()\n            .startOf('m')\n            .valueOf();\n    }\n\n    /** Selected duration for the booking */\n    public get duration(): number {\n        let field: any = this.form_fields.find(i => i.key === 'duration');\n        if (field) {\n            return field.control.value;\n        }\n        field = this.form_fields.find(i => i.key === 'time_group');\n        if (field) {\n            return field.control.controls.duration.value;\n        }\n        return 60;\n    }\n\n    /** Whether booking is all day */\n    public get all_day(): boolean {\n        const field = this.form_fields.find(i => i.key === 'all_day');\n        return field ? field.control.value : false;\n    }\n\n    /** Whether the user want to add catering to their booking */\n    public get needs_catering(): boolean {\n        const empty = { control: { value: {} } };\n        const catering: boolean = (this.form_fields.find(i => i.key === 'needs_catering') || empty)\n            .control.value;\n        return catering;\n    }\n\n    /** Number of items in the catering order */\n    public get has_ordered(): number {\n        const empty = { control: { value: {} } };\n        const order: ICateringOrderList = (\n            this.form_fields.find(i => i.key === 'catering') || empty\n        ).control.value;\n        return order\n            ? Object.keys(order).reduce((v, key) => {\n                  const room_order = order[key];\n                  if (room_order && room_order.items) {\n                      v += room_order.items.reduce((c, i) => c + (i.amount || 0), 0);\n                  }\n                  return v;\n              }, 0)\n            : 0;\n    }\n\n    /**\n     * Progress to the next step in the flow\n     */\n    public progress(event: IBookingFlowEvent) {\n        const empty = { control: { value: true } };\n        const catering = (this.form_fields.find(i => i.key === 'needs_catering') || empty).control\n            .value;\n        const space = (this.form_fields.find(i => i.key === 'needs_space') || empty).control.value;\n        const id = (this.form_fields.find(i => i.key === 'id') || empty).control.value;\n        this.id = id || !space ? '10' : '';\n        if (event.type === 'next') {\n            switch (this.page) {\n                case 'catering':\n                    this._service.navigate(['book', 'main', 'orders']);\n                    const order_list: CateringOrder[] = this.catering.getValue() || [];\n                    const index = order_list.findIndex(order => order.id === this.order.id);\n                    const new_item_count = this.order.changes.items\n                        ? this.order.changes.items.reduce(\n                              (count, item) => count + (item.amount || 0),\n                              0\n                          )\n                        : this.order.item_count;\n                    if (new_item_count > 0 && index < 0) {\n                        order_list.push(new CateringOrder(this.order.toJSON(true)));\n                    } else {\n                        index >= 0 && new_item_count > 0\n                            ? order_list.splice(\n                                  index,\n                                  1,\n                                  new CateringOrder(this.order.toJSON(true))\n                              )\n                            : index >= 0\n                            ? order_list.splice(index, 1)\n                            : '';\n                    }\n                    this.catering.control.setValue(order_list);\n                    break;\n                case 'orders':\n                    const orders: CateringOrder[] = this.catering.getValue();\n                    const item_count = (orders || []).reduce(\n                        (count, order) => count + order.item_count,\n                        0\n                    );\n                    if (item_count > 0) {\n                        this.addCateringNotes().then(() => this.confirmBooking());\n                    } else {\n                        this.confirmBooking();\n                    }\n                    break;\n                case 'space':\n                    if (this.recurr_period) {\n                        this.selectRecurrenceRooms()\n                            .then(() => this.addEquipment(true))\n                            .then(() => this.confirmBooking(false))\n                            .catch(() => {});\n                    } else {\n                        this.addEquipment()\n                            .then(() => {\n                                if (catering) {\n                                    this._service.navigate(['book', 'main', 'orders']);\n                                } else {\n                                    this.confirmBooking();\n                                }\n                            })\n                            .catch(() => {});\n                    }\n                    break;\n                default:\n                    if (space && !id) {\n                        this._service.navigate(['book', 'main', 'space']);\n                    } else if (this.spaces && this.spaces.length > 0) {\n                        this.addEquipment()\n                            .then(() => {\n                                if (catering) {\n                                    this._service.navigate(['book', 'main', 'orders']);\n                                } else {\n                                    this.confirmBooking();\n                                }\n                            })\n                            .catch(() => {});\n                    } else if ((space || (this.spaces && this.spaces.length)) && catering) {\n                        this._service.navigate(['book', 'main', 'orders']);\n                    } else {\n                        this.confirmBooking();\n                    }\n                    break;\n            }\n        } else if (event.type === 'previous') {\n            switch (this.page) {\n                case 'catering':\n                    if (id || !space) {\n                        // Whether space selection handled on the main form\n                        this._service.navigate(['book', 'main', 'orders']);\n                    } else {\n                        this._service.navigate(['book', 'main', 'orders']);\n                    }\n                    break;\n                case 'orders':\n                    if (id || !space) {\n                        // Whether space selection handled on the main form\n                        this._service.navigate(['book', 'main', 'form']);\n                    } else {\n                        this._service.navigate(['book', 'main', 'space']);\n                    }\n                    break;\n                case 'space':\n                    this._service.navigate(['book', 'main', 'form']);\n                    break;\n                default:\n                    this._service.navigate(['home']);\n                    break;\n            }\n        }\n    }\n\n    /**\n     * Clear any form data\n     */\n    private clearForm() {\n        if (localStorage) {\n            localStorage.removeItem('STAFF.booking_form');\n        }\n        this.loadForm();\n    }\n\n    /**\n     * Load old form data and intialise the form\n     */\n    private loadForm() {\n        let booking: any = {};\n        if (localStorage) {\n            booking = JSON.parse(localStorage.getItem('STAFF.booking_form') || '{}');\n        }\n        this.form_fields = generateBookingFormMetadata(\n            booking as IBooking,\n            this._service.Settings.get('app.booking.fields'),\n            this._service\n        );\n        const host = this.form_fields.find(i => i.key === 'host');\n        if (host) {\n            host.metadata = { service: this._service.Bookings, options: this.getHostOptions() };\n            host.setValue(host.getValue() || booking.host);\n        }\n        this.form_fields.push(\n            new ADynamicFormField({\n                key: 'id',\n                type: 'action',\n                hide: true,\n                value: booking.id\n            })\n        );\n        this.date_field = this.form_fields\n            .reduce((v, i) => v.concat(i.children && i.children.length ? i.children : [i]), [])\n            .find(i => i.key === 'date');\n        this.space_list = new ADynamicFormField({\n            key: 'room',\n            label: 'Spaces',\n            type: 'action',\n            format: formatSpaces,\n            hide: !booking.id,\n            value: booking.room || []\n        });\n        this.catering = new ADynamicFormField({\n            key: 'catering',\n            label: 'Catering',\n            type: 'action',\n            hide: true,\n            value: (\n                (booking.catering instanceof Array ? booking.catering : [booking.catering]) || []\n            )\n                .filter(order => order)\n                .map(order => new CateringOrder(order))\n        });\n        this.form_fields.unshift(this.space_list);\n        this.form_fields.push(this.catering);\n        this.form_fields.push(\n            new ADynamicFormField({\n                key: 'booked_by',\n                label: 'Booked by',\n                type: 'custom',\n                hide: true,\n                value: booking.booked_by\n            })\n        );\n        if (!this.form_fields.find(i => i.key === 'catering_code')) {\n            this.form_fields.push(\n                new ADynamicFormField({\n                    key: 'catering_code',\n                    label: 'Catering Codes',\n                    type: 'custom',\n                    hide: true,\n                    value: booking.catering_code || {}\n                })\n            );\n        }\n        this.form_fields.push(\n            new ADynamicFormField({\n                key: 'recurrence_rooms',\n                label: 'Recurrence rooms',\n                type: 'custom',\n                hide: true,\n                value: []\n            })\n        );\n        this.form_fields.forEach(field => {\n            if (field.children && field.children.length) {\n                field.children.forEach(sub_field => {\n                    this.subscription(\n                        sub_field.key,\n                        sub_field.control.valueChanges.subscribe(value => {\n                            if (value && sub_field.control.valid) {\n                                this.saveForm();\n                            }\n                        })\n                    );\n                });\n            } else {\n                this.subscription(\n                    field.key,\n                    field.control.valueChanges.subscribe(value => {\n                        if (value && field.control.valid) {\n                            this.saveForm();\n                        }\n                    })\n                );\n            }\n        });\n        const empty: any = { control: { value: true, valueChanges: false }, children: [] };\n        const space = (this.form_fields.find(i => i.key === 'needs_space') || empty).control.value;\n        const time = this.form_fields.find(i => i.key === 'time_group') || empty;\n        const all_day = this.form_fields.find(i => i.key === 'all_day') || empty;\n        (time as ADynamicFormField).setDisabled(this.duration > 450);\n        const start = time.children.find(i => i.key === 'start') || empty;\n        const duration = time.children.find(i => i.key === 'duration') || empty;\n        const recurrence_field = this.form_fields\n            .reduce((v, i) => v.concat(i.children && i.children.length ? i.children : [i]), [])\n            .find(i => i.key === 'recurrence');\n        const recurrence_rooms = this.form_fields.find(i => i.key === 'recurrence_rooms');\n        this.subscription(\n            'all_day_value',\n            all_day.control.valueChanges.subscribe(state =>\n                (start as ADynamicFormField).setDisabled(state)\n            )\n        );\n        this.subscription(\n            'duration_value',\n            duration.control.valueChanges.subscribe(state => {\n                if (state > 450) {\n                    (start as ADynamicFormField).setDisabled(true);\n                }\n            })\n        );\n        this.subscription(\n            'date_value',\n            this.date_field.control.valueChanges.subscribe(state => {\n                if (this.recurr_end && dayjs(this.recurr_end).isBefore(state, 'd')) {\n                    recurrence_field.setValue({ recurr_period: 0, recurr_end: 0 });\n                    recurrence_rooms.setValue([]);\n                }\n            })\n        );\n        this.subscription(\n            'room_value',\n            this.space_list.control.valueChanges.subscribe(state => {\n                recurrence_rooms.setValue([]);\n            })\n        );\n        this.subscription(\n            'recurrence_value',\n            recurrence_field.control.valueChanges.subscribe(state => {\n                this.space_list.setValue([]);\n                recurrence_rooms.setValue([]);\n            })\n        );\n        const id = (this.form_fields.find(i => i.key === 'id') || empty).control.value;\n        this.id = id || !space ? '10' : '';\n    }\n\n    /**\n     * Save changes to the form data\n     */\n    private saveForm() {\n        this.timeout(\n            'save_form',\n            () => {\n                const form = this.formToBooking();\n                if (localStorage) {\n                    localStorage.setItem('STAFF.booking_form', JSON.stringify(form));\n                }\n            },\n            50\n        );\n    }\n\n    /**\n     * Convert form field data to a Booking object\n     */\n    private formToBooking(): IBooking {\n        return this.form_fields.reduce((v, i) => {\n            if (i.children && i.children.length) {\n                i.children.forEach(j => (v[j.key] = j.control.value));\n            } else {\n                v[i.key] = i.control.value;\n            }\n            return v;\n        }, {}) as IBooking;\n    }\n\n    /** Search for available rooms matching the set filters\n     * @param data Date selected in unix ms\n     */\n    private search(date: number): Promise<IRoom[]> {\n        const location_list = localStorage\n            ? localStorage.getItem('STAFF.booking.filters')\n            : this._service.Buildings.current().id;\n        const locations = location_list.split(',');\n        let room_list: IRoom[] = [];\n        for (const zone of locations) {\n            room_list = room_list.concat(this._service.Rooms.list(true, zone));\n        }\n        // Filter out rooms unavailable due to booking rules\n        const options = {\n            user: this._service.Users.current(),\n            time: date,\n            duration: this.duration\n        };\n        room_list = this._service.Rooms.filterRulesRooms(\n            Utils.unique(room_list, 'id'),\n            options,\n            true\n        );\n        room_list = room_list.slice(0, Math.min(100, room_list.length));\n        const query: IRoomAvailabilityRequest = {\n            date: this.all_day\n                ? dayjs(date)\n                      .startOf('d')\n                      .valueOf()\n                : date,\n            duration: this.all_day ? 24 * 60 : this.duration + (this.needs_catering ? 15 : 0),\n            hide_bookings: true,\n            ignore_rooms: room_list.reduce((v, i) => v + (v ? ',' : '') + i.id, ''),\n            zone_ids: location_list\n        };\n        return this._service.Rooms.available(query);\n    }\n\n    /** Show modal for rooms selection for recurrence booking */\n    private selectRecurrenceRooms() {\n        return new Promise((resolve, reject) => {\n            const empty = { control: { value: '' } };\n            const space = this.form_fields.find(i => i.key === 'room');\n            const recurrence_rooms = this.form_fields.find(i => i.key === 'recurrence_rooms');\n            const ref = this._dialog.open(BookingRecurrenceDetailsModalComponent, {\n                maxWidth: 'calc(100vw - 2em)',\n                width: '32em',\n                data: {\n                    space: ((space || empty).control.value || [])[0],\n                    recurrence_rooms: (recurrence_rooms || empty).control.value || []\n                }\n            });\n            ref.componentInstance.event.subscribe(event => {\n                if (event.reason === 'done') {\n                    const data = ref.componentInstance.recurrence_rooms;\n                    recurrence_rooms.setValue(data);\n                    resolve();\n                    ref.close();\n                } else if (event.reason === 'action') {\n                    const { item } = event.metadata;\n                    const date = item.date;\n                    item.loading = true;\n                    this.search(item.date).then(res => {\n                        // Filter rooms based on booking rules\n                        const options = {\n                            user: this._service.Users.current(),\n                            time: this.all_day\n                                ? dayjs(date)\n                                      .startOf('d')\n                                      .valueOf()\n                                : date,\n                            duration: this.all_day\n                                ? 24 * 60\n                                : this.duration + (this.needs_catering ? 15 : 0),\n                            recurr_end: this.recurr_end\n                        };\n                        const list = this._service.Rooms.filterRulesRooms(res, options);\n                        item.loading = false;\n                        this.openRoomSelectModal({ date, list })\n                            .then((room: IRoom) => {\n                                ref.componentInstance.room$.next({ date, room });\n                            })\n                            .catch();\n                    });\n                } else {\n                    reject();\n                }\n            });\n        });\n    }\n\n    /** Show modal to select room in recurrence */\n    public openRoomSelectModal(data) {\n        return new Promise((resolve, reject) => {\n            const ref = this._dialog.open(BookingRecurrenceRoomSelectModalComponent, {\n                maxWidth: 'calc(100vw - 2em)',\n                width: '32em',\n                data: {\n                    date: data.date,\n                    list: data.list\n                }\n            });\n            ref.componentInstance.event.subscribe(event => {\n                if (event.reason === 'done') {\n                    resolve(event.metadata);\n                } else {\n                    reject();\n                }\n                ref.close();\n            });\n        });\n    }\n\n    /**\n     * Show modal to user for adding equipment details to a booking\n     * @param reccurence recurrence booking\n     */\n    private addEquipment(recurrence: boolean = false) {\n        return new Promise((resolve, reject) => {\n            const empty = { control: { value: '' } };\n            const notes = this.form_fields.find(i => i.key === 'equipment');\n            const expected_attendees = this.form_fields.find(i => i.key === 'expected_attendees');\n            const spaces = this.form_fields.find(i => i.key === 'room');\n            const cost_code = this.form_fields.find(i => i.key === 'equipment_code');\n            const recurrence_rooms = this.form_fields.find(i => i.key === 'recurrence_rooms');\n            const recurrence_spaces = Utils.unique(\n                ((recurrence_rooms || empty).control.value || []).map(i => i.room),\n                'id'\n            );\n            const ref = this._dialog.open(BookingEquipmentDetailsModalComponent, {\n                maxWidth: 'calc(100vw - 2em)',\n                width: '32em',\n                data: {\n                    spaces: recurrence ? recurrence_spaces : (spaces || empty).control.value || [],\n                    expected_attendees: { ...(expected_attendees || empty).control.value },\n                    notes: { ...(notes || empty).control.value },\n                    cost_code: { ...(cost_code || empty).control.value },\n                    recurrence\n                }\n            });\n            ref.componentInstance.event.subscribe(event => {\n                if (event.reason === 'done') {\n                    if (notes) {\n                        notes.setValue(ref.componentInstance.notes);\n                    }\n                    if (expected_attendees) {\n                        expected_attendees.setValue(ref.componentInstance.expected_attendees || {});\n                    }\n                    if (cost_code) {\n                        cost_code.setValue(ref.componentInstance.cost_code);\n                    }\n                    resolve();\n                } else {\n                    reject();\n                }\n                ref.close();\n            });\n        });\n    }\n\n    /**\n     * Show modal for adding details to catering\n     */\n    private addCateringNotes() {\n        return new Promise((resolve, reject) => {\n            const empty = { control: { value: '' } };\n            const notes = this.form_fields.find(i => i.key === 'catering_notes');\n            const spaces = this.form_fields.find(i => i.key === 'room');\n            const cost_code = this.form_fields.find(i => i.key === 'catering_code');\n            const ref = this._dialog.open(BookingCateringDetailsModalComponent, {\n                maxWidth: 'calc(100vw - 2em)',\n                width: '32em',\n                data: {\n                    spaces: (spaces || empty).control.value || [],\n                    notes: { ...(notes || empty).control.value },\n                    cost_code: { ...(cost_code || empty).control.value }\n                }\n            });\n            ref.componentInstance.event.subscribe(event => {\n                if (event.reason === 'done') {\n                    console.log('Cost Codes:', cost_code, ref.componentInstance.cost_code);\n                    if (notes) {\n                        notes.setValue(ref.componentInstance.notes);\n                    }\n                    if (cost_code) {\n                        cost_code.setValue(ref.componentInstance.cost_code);\n                    }\n                    resolve();\n                } else {\n                    reject();\n                }\n                ref.close();\n            });\n        });\n    }\n\n    /**\n     * Open modal for confirming booking details\n     */\n    private confirmBooking(check: boolean = true) {\n        this.timeout(\n            'confirm-booking',\n            () => {\n                const fields: any = this.formToBooking();\n                console.log('Fields:', fields.catering_code);\n                fields.catering = fields.catering.map((order: CateringOrder) => order.toJSON(true));\n                const ref = this._dialog.open(BookingDetailsModalComponent, {\n                    data: { ...fields, check }\n                });\n                console.log('Fields:', fields.catering_code);\n                ref.componentInstance.event.subscribe(event => {\n                    if (event.reason === 'done') {\n                        // Booking completed successfully\n                        this.clearForm();\n                        this._service.navigate(['schedule'], {\n                            host: fields.host\n                                ? fields.host.email\n                                : this._service.Users.current().email\n                        });\n                        ref.close();\n                    } else if (event.reason === 'action' && event.metadata === 'new') {\n                        // User wishes to create a new booking\n                        this.clearForm();\n                        this._service.navigate(['book', 'main', 'form']);\n                    } else if (event.reason === 'action' && event.metadata === 'edit') {\n                        // User wishes to edit the booking\n                        this._service.navigate(['book', 'main', 'form']);\n                        ref.close();\n                    } else {\n                        ref.close();\n                    }\n                });\n            },\n            100\n        );\n    }\n\n    /**\n     * Get list of users available to select as the meeting host\n     */\n    private getHostOptions(): IUser[] {\n        const user = this._service.Users.current();\n        const list: IUser[] = [user];\n        if (user.delegates) {\n            for (const email of user.delegates) {\n                const delegate = this._service.Users.item(email);\n                if (delegate) {\n                    list.push(delegate);\n                } else {\n                    this.timeout(`load_user|${email}`, () =>\n                        this._service.Users.show(email, { update: true }).then(() => {\n                            this.timeout('update_host_options', () => {\n                                const host = this.form_fields.find(i => i.key === 'host');\n                                if (host) {\n                                    host.metadata = {\n                                        service: this._service.Bookings,\n                                        options: this.getHostOptions()\n                                    };\n                                    host.setValue(host.getValue());\n                                }\n                            });\n                        })\n                    );\n                }\n            }\n        }\n        return list;\n    }\n}\n"],"sourceRoot":"webpack:///"}