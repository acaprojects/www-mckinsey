{"version":3,"sources":["./src/app/shell/schedule/event-list/event-list.component.ts","./src/app/shell/schedule/event-list/event-list.component.html","./src/app/shell/schedule/event-list/list-item/list-item.component.ts","./src/app/shell/schedule/event-list/list-item/list-item.component.html","./src/app/shell/schedule/schedule.component.ts","./src/app/shell/schedule/schedule.template.html","./src/app/shell/schedule/schedule.module.ts","./src/app/shell/schedule/schedule.routes.ts","./src/app/shell/schedule/view-event/event-details/event-details.component.ts","./src/app/shell/schedule/view-event/event-details/event-details.component.html","./src/app/shell/schedule/view-event/event-edit/event-edit.component.ts","./src/app/shell/schedule/view-event/event-edit/event-edit.component.html","./src/app/shell/schedule/view-event/view-event.component.ts","./src/app/shell/schedule/view-event/view-event.component.html"],"names":[],"mappings":"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","file":"shell-schedule-schedule-module-es2015.js","sourcesContent":["import { Component, ViewChild, Output, EventEmitter } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport { first } from 'rxjs/operators';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { BookingLike } from './list-item/list-item.component';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { UsersService } from 'src/app/services/data/users/users.service';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nimport * as dayjs from 'dayjs';\n\nexport interface EventPair {\n    id: string;\n    date: number;\n}\n\n@Component({\n    selector: 'schedule-event-list',\n    templateUrl: './event-list.component.html',\n    styleUrls: ['./event-list.component.scss'],\n})\nexport class ScheduleEventListComponent extends BaseDirective {\n    /** Emitter  */\n    @Output('eventList') public event_list = new EventEmitter<EventPair[]>();\n    /** List of items to display on the event list */\n    public events: BookingLike[] = [];\n    /** Update promise */\n    public event_promise: Promise<void>;\n    /** Whether bookings are being updated */\n    public loading: boolean;\n    /** Number of days to render in the list from the current date */\n    public shown_offset: number = 7;\n    /** Offset of the date to show events for */\n    public date_offset: number = 0;\n    /** Whether to show the calendar tooltip */\n    public show_calendar: boolean;\n    /** Date to scroll to on next update */\n    public scroll_to: string;\n    /** Current UTC epoch */\n    public now: number = dayjs().valueOf();\n    /** Current UTC epoch */\n    public date: number;\n    /** Whether list is displaying the top of the first item */\n    public at_top: boolean = true;\n    /** List of users available to view schedules for */\n    public user_list: User[] = [];\n    /** Active user to display schedule for */\n    public active_user: User;\n\n    /** Viewport for the scrollable area of the list */\n    @ViewChild(CdkVirtualScrollViewport, { static: true })\n    private scroll_viewport: CdkVirtualScrollViewport;\n\n    @ViewChild(MatMenuTrigger, { static: true }) trigger: MatMenuTrigger;\n\n    constructor(\n        private _users: UsersService,\n        private _bookings: BookingsService,\n        private _spaces: SpacesService,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._spaces.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.subscription(\n                'route.query',\n                this._route.queryParamMap.subscribe((params) => {\n                    /* istanbul ignore else */\n                    if (params.has('email')) {\n                        this.active_user =\n                            this._users.find(params.get('email')) ||\n                            new User({ email: params.get('email') });\n                    }\n                })\n            );\n            this.updateEvents();\n            this.interval('update_events', () => this.updateEvents(), 10 * 1000);\n            this.subscription(\n                'scroll',\n                this.scroll_viewport.elementScrolled().subscribe(() => this.onScroll())\n            );\n            this.subscription(\n                'delegate_list',\n                this._users.listen('delegates').subscribe((list) => {\n                    /* istanbul ignore else */\n                    if (list && list[0]) {\n                        this.user_list = [this._users.current].concat(list);\n                        /* istanbul ignore else */\n                        if (!this.active_user) {\n                            this.active_user = this.user_list[0];\n                        }\n                    }\n                })\n            );\n        });\n    }\n\n    /**\n     * Update the list of events for the currently visible period\n     */\n    public updateEvents() {\n        /* istanbul ignore else */\n        if (!this.event_promise) {\n            this.event_promise = new Promise((resolve) => {\n                const start = dayjs().add(this.date_offset, 'd').startOf('d');\n                const end = start.add(7, 'd').endOf('d');\n                this.loading = true;\n                this._bookings\n                    .query({\n                        email:\n                            (this.active_user ? this.active_user.email : '') ||\n                            this._users.current.email,\n                        from: start.unix(),\n                        to: end.unix(),\n                    })\n                    .then(\n                        (list: Booking[]) => {\n                            this._bookings.updateList(this._bookings.filter(), list);\n                            const old_events = this.events.filter((i) => {\n                                const date = dayjs(i.date);\n                                return (\n                                    i.type !== 'date' &&\n                                    i.type !== 'empty' &&\n                                    (date.isBefore(start, 's') || date.isAfter(end, 's'))\n                                );\n                            });\n                            this.events = this.processEvents(list, old_events);\n                            // Update event list for view listing\n                            const event_list = this.events.filter(\n                                (i) => i.type !== 'date' && i.type !== 'empty'\n                            );\n                            this.event_list.emit(\n                                event_list.map((i) => ({ id: i.id, date: i.date }))\n                            );\n                            // Scroll to date if needed\n                            this.timeout('scroll_to', () => this.scrollTo());\n                            this.loading = false;\n                            delete this.event_promise;\n                        },\n                        () => {\n                            this.loading = false;\n                            delete this.event_promise;\n                        }\n                    );\n            });\n        }\n        return this.event_promise;\n    }\n\n    /**\n     * Process list of new items and merge with the old\n     * @param list List of new bookings to generate event blocks for\n     * @param old_events List of relevant old event blocks\n     */\n    public processEvents(list: Booking[], old_events: BookingLike[]): BookingLike[] {\n        let events: BookingLike[] = [];\n        const now = dayjs();\n        let date = dayjs().startOf('d');\n        const end = date.add(this.shown_offset, 'd').endOf('d');\n        for (; date.isBefore(end); date = date.add(1, 'd')) {\n            const date_str = date.format('YYYY-MM-DD');\n            // Add date block\n            events.push({\n                id: date_str,\n                type: 'date',\n                order_id: date_str,\n                title: date.format('dddd, DD MMM'),\n                is_today: date.isSame(now, 'd'),\n                date: date.valueOf(),\n            });\n            const filter_fn: (_: BookingLike) => boolean = (i) => {\n                const day = dayjs(i.date);\n                return day.isAfter(date, 's') && day.isBefore(date.endOf('d'), 's');\n            };\n            // Add events for today to list\n            const new_items = list.filter(filter_fn as any);\n            const old_items = old_events.filter(filter_fn as any);\n            if (new_items.length || old_items.length) {\n                events = events.concat(new_items as any).concat(old_items);\n            } else {\n                // Add block for no events if so\n                events.push({\n                    id: `${date_str}-empty`,\n                    type: 'empty',\n                    order_id: date_str,\n                    title: `No items for ${date.format('dddd, DD MMM')}`,\n                    is_today: date.isSame(now, 'd'),\n                    date: date.valueOf() + 1,\n                });\n            }\n        }\n        events.sort((a, b) => a.date - b.date);\n        events = unique(events, 'id');\n        return events;\n    }\n\n    /**\n     * Handle scrolling on the event list\n     */\n    public onScroll() {\n        /* istanbul ignore else */\n        if (!this.event_promise) {\n            this.show_calendar = false;\n            const range = this.scroll_viewport.getRenderedRange();\n            const dist = range.end - range.start;\n            const nearest = this.events[range.start];\n            this.at_top = range.start === 0 && this.scroll_viewport.measureScrollOffset() < 5;\n            this.date_offset = dayjs(nearest.date).diff(dayjs(), 'd') - 1;\n            this.date = dayjs((this.events[dist + range.start] || {}).date)\n                .subtract(1, 'd')\n                .valueOf();\n            /* istanbul ignore else */\n            if (range.end > this.events.length - 7) {\n                this.shown_offset += 3;\n                this.updateEvents();\n            }\n        }\n    }\n\n    /**\n     * Update the date offset\n     * @param date UTC milliseconds epoch of new date offset\n     */\n    public updateDate(date: number) {\n        const day = dayjs(date);\n        this.date_offset = day.diff(dayjs(), 'd') - 1;\n        this.shown_offset = Math.max(this.shown_offset, this.date_offset + 3);\n        this.scroll_to = day.format('YYYY-MM-DD');\n        delete this.event_promise;\n        this.show_calendar = false;\n        this.date = dayjs().add(this.date_offset, 'd').valueOf();\n        this.updateEvents();\n    }\n\n    /** Close the menu popup with the date picker */\n    public closeDatePicker() {\n        this.trigger.closeMenu();\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(item: BookingLike, index: number) {\n        return item ? item.id : null;\n    }\n\n    /**\n     * Scroll to a previously defined date on the event list\n     */\n    private scrollTo() {\n        /* istanbul ignore else */\n        if (this.scroll_to) {\n            const index = this.events.findIndex((i) => i.id === this.scroll_to);\n            /* istanbul ignore else */\n            if (index > -1) {\n                this.scroll_viewport.scrollToIndex(index, 'smooth');\n                this.scroll_to = null;\n            }\n        }\n    }\n}\n","<div class=\"event-list\">\n    <div class=\"header dark-mode\" [class.scrolled]=\"!at_top\">\n        <div class=\"user\">\n            <mat-form-field appearance=\"outline\" *ngIf=\"user_list && user_list.length > 1\" >\n                <mat-select #select [(value)]=\"active_user\" (valueChange)=\"updateEvents($event)\">\n                    <mat-option *ngFor=\"let user of user_list\" [value]=\"user\">\n                        {{ user?.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"flex\"></div>\n        <div class=\"date\">\n            <button mat-icon-button [matMenuTriggerFor]=\"appMenu\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'event' }\"></app-icon>\n            </button>\n        </div>\n    </div>\n    <div class=\"progress\">\n        <mat-progress-bar mode=\"indeterminate\" *ngIf=\"loading\"></mat-progress-bar>\n    </div>\n    <div class=\"body\">\n        <cdk-virtual-scroll-viewport itemSize=\"80\" class=\"viewport\" (scroll)=\"onScroll()\">\n            <ng-container *cdkVirtualFor=\"let item of events; trackBy: trackByFn\">\n                <schedule-event-item [attr.id]=\"item.id | slice:0:10\" [user]=\"active_user\" [event]=\"item\"></schedule-event-item>\n            </ng-container>\n        </cdk-virtual-scroll-viewport>\n    </div>\n    <div class=\"footer\"></div>\n</div>\n<mat-menu #appMenu=\"matMenu\">\n    <div mat-menu-item class=\"date-picker\" (click)=\"$event.stopPropagation()\">\n        <a-date-picker\n            [(ngModel)]=\"date\"\n            (ngModelChange)=\"updateDate($event); closeDatePicker()\"\n        ></a-date-picker>\n    </div>\n</mat-menu>\n","import { Component, Input } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport {\n    MeetingDetailsOverlayComponent,\n    MeetingDetailsModalData,\n} from 'src/app/overlays/meeting-details-overlay/meeting-details-overlay.component';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { User } from 'src/app/services/data/users/user.class';\n\nimport * as dayjs from 'dayjs';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\nexport interface BookingLike {\n    /** ID of the item */\n    id: string;\n    /** Sorting weight of the item */\n    order_id: string;\n    /** Type of item to render */\n    type: 'date' | 'event' | 'empty';\n    /** Whether the event is on the current date */\n    is_today: boolean;\n    /** Title of the event */\n    title: string;\n    /** Date in UTC milliseconds */\n    date: number;\n    /** Current state of the booking */\n    status?: 'future' | 'upcoming' | 'done' | 'started' | 'in_progress';\n\n    [key: string]: any;\n}\n\n@Component({\n    selector: 'schedule-event-item',\n    templateUrl: './list-item.component.html',\n    styleUrls: ['./list-item.component.scss'],\n})\nexport class ScheduleEventListItemComponent extends BaseDirective {\n    /** Booking to display */\n    @Input() public event: BookingLike;\n    /** User who's schedule is being viewed */\n    @Input() public user: User;\n\n    public get in_progress(): boolean {\n        return this.event.status === 'in_progress';\n    }\n\n    public get date_display(): string {\n        const date = dayjs(this.event.date);\n        const now = dayjs();\n        return now.isSame(date, 'd') ? 'Today' : date.format('DD MMM YYYY');\n    }\n\n    /** Display location of the booking event */\n    public get location(): string {\n        const booking: Booking = this.event as any;\n        return (booking.space_list || [booking.space]).map((i) => i.name).join(', ');\n    }\n\n    /** Image name to display for the event */\n    public get type_image(): string {\n        const booking: Booking = this.event as any;\n        return booking.has_visitors ? 'external' : 'book_room';\n    }\n\n    public get time(): string {\n        const booking: Booking = this.event as any;\n        return booking.all_day || booking.duration > 23 * 60\n            ? 'All Day'\n            : dayjs(booking.date).format('h:mm A');\n    }\n\n    /** Status of the current booking */\n    public get status(): 'approved' | 'tentative' | 'declined' | '' {\n        const statuses = this.event.approval_status || {};\n        const spaces = this.event.space_list || [];\n        for (const space of spaces) {\n            const status = statuses[space.id] || '';\n            if (status.indexOf('tentative') >= 0 || status.indexOf('not') === 0) {\n                return 'tentative';\n            } else if (status.indexOf('declined') >= 0) {\n                return 'declined';\n            }\n        }\n        const location = this.event.location || '';\n        const location_lower = (typeof location === 'string' ? location : '').toLowerCase();\n        if (location_lower.indexOf('tentative') >= 0) {\n            return 'tentative';\n        } else if (location_lower.indexOf('declined') >= 0) {\n            return 'declined';\n        }\n        return spaces.length ? 'approved' : '';\n    }\n\n    constructor(private _dialog: MatDialog, private _users: UsersService) {\n        super();\n    }\n\n    public openDetailsModal() {\n        /* istanbul ignore else */\n        if (this.event instanceof Booking) {\n            this._dialog.open<MeetingDetailsOverlayComponent, MeetingDetailsModalData>(\n                MeetingDetailsOverlayComponent,\n                {\n                    maxHeight: 'auto',\n                    maxWidth: 'auto',\n                    width: 'auto',\n                    height: 'auto',\n                    hasBackdrop: false,\n                    closeOnNavigation: true,\n                    data: {\n                        booking: this.event,\n                        as_delegate: this._users.current.email === (this.user || {}).email,\n                        delegate: this.user.email,\n                        is_first: false,\n                        is_last: false,\n                    },\n                }\n            );\n        }\n    }\n}\n","<div [class]=\"'event-item ' + event.type + ' ' + status\" *ngIf=\"event\" [attr.id]=\"event.id\">\n    <ng-container [ngSwitch]=\"event.type\">\n        <div *ngSwitchCase=\"'date'\" class=\"day display\">{{ event.title }}</div>\n        <div *ngSwitchCase=\"'empty'\" class=\"emptied display\">\n            No events for {{ date_display }}\n        </div>\n        <div *ngSwitchDefault class=\"event display\">\n            <a (tapped)=\"openDetailsModal()\">\n                <div class=\"content\">\n                    <div class=\"time\">\n                        <div>{{ time }}</div>\n                        <div class=\"info\" *ngIf=\"in_progress\">In Progress</div>\n                    </div>\n                    <div class=\"icon\">\n                        <img [src]=\"'assets/img/' + type_image + '.svg'\" />\n                    </div>\n                    <div class=\"details\">\n                        <div class=\"title text\">{{ event.title }}</div>\n                        <div class=\"location text\">\n                            <img src=\"assets/img/location.svg\">\n                            <div class=\"text\">{{ location || event.location_name || 'No location' }}</div>\n                        </div>\n                    </div>\n                </div>\n            </a>\n        </div>\n    </ng-container>\n</div>\n","\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { EventPair } from './event-list/event-list.component';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\n\n@Component({\n    selector: 'app-schedule',\n    templateUrl: './schedule.template.html',\n    styleUrls: ['./schedule.styles.scss'],\n})\nexport class ScheduleComponent extends BaseDirective implements OnInit {\n    /** Name of the page to render */\n    public page: string;\n    /** ID of the event item to view */\n    public id: string;\n    /** Current list of loaded events */\n    public events: EventPair[];\n    /** Whether to show menu */\n    public show_menu = false;\n\n    /** ID of the event after the active event */\n    public get next(): string {\n        if (this.events) {\n            const index = this.events.findIndex(i => this.id === i.id) + 1;\n            if (index > -1 && this.events[index]) {\n                return this.events[index].id;\n            }\n        }\n        return '';\n    }\n\n    /** ID of the event before the active event */\n    public get previous(): string {\n        if (this.events) {\n            const index = this.events.findIndex(i => this.id === i.id) - 1;\n            if (index > -1 && this.events[index]) {\n                return this.events[index].id;\n            }\n        }\n        return '';\n    }\n\n    constructor(private _route: ActivatedRoute, private _service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription('route.route', this._route.paramMap.subscribe((params) => {\n            if (params.has('page')) {\n                this.page = params.get('page');\n            }\n            if (params.has('id')) {\n                this.id = params.get('id');\n            }\n        }));\n        this.loadEvents();\n        this._service.title = 'My Day';\n    }\n\n    /**\n     * Update local event listing\n     * @param event_list New list of events\n     */\n    public updateEvents(event_list: EventPair[]) {\n        this.events = event_list;\n        this.saveEvents();\n    }\n\n    /**\n     * Save the current event listing\n     */\n    public saveEvents() {\n        if (localStorage) {\n            localStorage.setItem('STAFF.events', JSON.stringify(this.events || []));\n        }\n    }\n\n    /**\n     * Load the last saved event listing\n     */\n    public loadEvents() {\n        if (localStorage) {\n            const data = localStorage.getItem('STAFF.events');\n            this.events = JSON.parse(data || '[]');\n        }\n    }\n}\n","<div class=\"schedule page\">\n    <header class=\"header\">\n        <a-topbar-header [(menu)]=\"show_menu\"></a-topbar-header>\n    </header>\n    <main class=\"body\">\n        <ng-container [ngSwitch]=\"page\">\n            <ng-container *ngSwitchCase=\"'view'\">\n                <schedule-view-event [id]=\"id\" [next]=\"next\" [previous]=\"previous\"></schedule-view-event>\n            </ng-container>\n            <ng-container *ngSwitchDefault>\n                <schedule-event-list (eventList)=\"updateEvents($event)\"></schedule-event-list>\n            </ng-container>\n        </ng-container>\n    </main>\n    <footer class=\"footer\">\n        <a-footer-menu></a-footer-menu>\n    </footer>\n</div>\n<a-overlay-menu [(show)]=\"show_menu\"></a-overlay-menu>","\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { RouterModule } from '@angular/router';\nimport { ComposerModule } from '@placeos/composer';\n\nimport { ROUTES } from './schedule.routes';\nimport { SharedContentModule } from 'src/app/shared/shared.module';\n\nimport { ScheduleComponent } from './schedule.component';\nimport { ScheduleEventListComponent } from './event-list/event-list.component';\nimport { ScheduleViewEventComponent } from './view-event/view-event.component';\nimport { ScheduleEventListItemComponent } from './event-list/list-item/list-item.component';\nimport { EventDetailsComponent } from './view-event/event-details/event-details.component';\nimport { EventEditComponent } from './view-event/event-edit/event-edit.component';\n\n@NgModule({\n    declarations: [\n        ScheduleComponent,\n        ScheduleViewEventComponent,\n        ScheduleEventListComponent,\n        ScheduleEventListItemComponent,\n        EventDetailsComponent,\n        EventEditComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ComposerModule,\n        FormsModule,\n        ReactiveFormsModule,\n        RouterModule.forChild(ROUTES),\n        SharedContentModule,\n        ScrollingModule\n    ]\n})\nexport class ScheduleModule { }\n","import { Routes } from '@angular/router';\n\nimport { ScheduleComponent } from './schedule.component';\n\nexport const ROUTES: Routes = [\n    { path: '', component: ScheduleComponent },\n    { path: ':page', component: ScheduleComponent },\n    { path: ':page/:id', component: ScheduleComponent },\n    { path: '**', redirectTo: '' }\n];\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { humaniseDuration } from 'src/app/shared/utilities/general.utilities';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { ViewRoomModalComponent } from 'src/app/overlays/view-room-modal/view-room-modal.component';\n\nimport * as dayjs from 'dayjs';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: 'schedule-event-details',\n    templateUrl: './event-details.component.html',\n    styleUrls: ['./event-details.component.scss']\n})\nexport class EventDetailsComponent extends BaseDirective {\n    /** Booking to display */\n    @Input() event: Booking;\n    /** Emitter for action on the display view */\n    @Output() change = new EventEmitter();\n    /** Emitter for changes to the loading state */\n    @Output() loading = new EventEmitter();\n    /** Toggle for activating checkin */\n    public checked_in: boolean;\n    /** Mapping of spaces to last checkin time */\n    public last_start: { [id: string]: number } = {};\n    /** Whether to show full locations list */\n    public show_locations: boolean;\n    /** Whether to show full attendee list */\n    public show_attendees: boolean;\n\n    /** Title of the displayed event */\n    public get title(): string {\n        if (!this.event) {\n            return '';\n        }\n        return this.event.title;\n    }\n\n    /** Display string of when the event will occur */\n    public get when(): string {\n        if (!this.event) {\n            return 'Unable to determine.';\n        }\n        const date = dayjs(this.event.date);\n        const end = date.add(this.event.duration || 60, 'm');\n        if (this.event.all_day || this.event.duration > 23 * 60) {\n            return `${date.format('DD MMM YYYY')} - All Day`;\n        } else {\n            if (date.isSame(end, 'd')) {\n                return `${date.format('DD MMM YYYY, h:mm A')} - ${end.format('h:mm A')}`;\n            } else {\n                return `${date.format('DD MMM YYYY, h:mm A')} - ${end.format(\n                    'DD MMM YYYY, h:mm A'\n                )}`;\n            }\n        }\n    }\n\n    /** Display string for the event's duration */\n    public get duration(): string {\n        if (!this.event) {\n            return 'Unable to determine';\n        }\n        return humaniseDuration(this.event.duration || 60);\n    }\n\n    /** List of spaces associated with the event */\n    public get spaces(): Space[] {\n        if (!this.event) {\n            return [];\n        }\n        return this.event.space_list;\n    }\n\n    /** List of attendees associated with the event not including the host */\n    public get attendees(): User[] {\n        if (!this.event) {\n            return [];\n        }\n        return this.event.attendees.filter(i => i.email !== this.organiser.email);\n    }\n\n    /** Host of the event */\n    public get organiser(): User {\n        if (!this.event) {\n            return this._users.current;\n        }\n        return this.event.organiser || this._users.current;\n    }\n\n    /** Whether the user is allowed to edit the event */\n    public get can_edit(): boolean {\n        const organiser = this.organiser;\n        const user = this._users.current;\n        return organiser.email === user.email && this.status !== 'done';\n    }\n\n    /** Details about the event */\n    public get notes(): string {\n        if (!this.event) {\n            return '';\n        }\n        return this.event.description || '';\n    }\n\n    /** Status of the event */\n    public get status(): 'future' | 'upcoming' | 'done' | 'started' | 'in_progress' {\n        if (this.event) {\n            const now = dayjs();\n            const date = dayjs(this.event.date);\n            /* istanbul ignore else */\n            if (now.isBefore(date.subtract(15, 'm'), 'm')) {\n                return 'future';\n            } else if (now.isBefore(date, 'm')) {\n                return 'upcoming';\n            } else if (now.isBefore(date.add(15, 'm'), 'm')) {\n                return 'started';\n            } else if (now.isBefore(date.add(this.event.duration, 'm'), 'm')) {\n                return 'in_progress';\n            }\n        }\n        return 'done';\n    }\n\n    /** Whether the user has checkin to all the spaces in the event */\n    public get is_checked_in(): boolean {\n        return this.spaces.reduce(\n            (a, v) => a && this.event.date <= (this.last_start[v.id] || 0),\n            true\n        );\n    }\n\n    /** Whether the spaces can be controlled */\n    public get can_control(): boolean {\n        return this.spaces.length > 0 && this.status !== 'future' && this.status !== 'done';\n    }\n\n    /** Whether the user is able to checkin to the event */\n    public get can_checkin(): boolean {\n        return this.spaces.length > 0 && (this.status === 'upcoming' || this.status === 'started');\n    }\n\n    constructor(private _users: UsersService, private _dialog: MatDialog, private _router: Router) {\n        super();\n    }\n\n    /**\n     * Open the modal to show the location of a space\n     * @param space Space to show the location\n     */\n    public locate(space: Space) {\n        /* istanbul ignore else */\n        if (space) {\n            this._dialog.open(ViewRoomModalComponent, {\n                width: 'auto',\n                height: 'auto',\n                maxWidth: '95vw',\n                maxHeight: '95vh',\n                data: { space }\n            });\n        }\n    }\n\n    /**\n     * Enter edit mode for the booking\n     */\n    public edit(): void {\n        this.change.emit({ type: 'edit' });\n    }\n\n    /**\n     * Checkin the current booking\n     */\n    public checkin(): void {\n        this.checked_in = !this.checked_in;\n    }\n\n    /**\n     * Store the booking data and navigate to the booking form\n     */\n    public duplicate(): void {\n        /* istanbul ignore else */\n        if (localStorage) {\n            const booking = this.event.duplicate();\n            localStorage.setItem('STAFF.booking_form', JSON.stringify(booking));\n        }\n        this.change.emit({ type: 'duplicate' });\n        this._router.navigate(['/book']);\n    }\n}\n","<div class=\"event-details\">\n    <div class=\"bindings\">\n        <ng-container *ngFor=\"let space of spaces\">\n            <ng-container *ngIf=\"space?.level?.id\">\n                <i\n                    binding\n                    [(model)]=\"last_start[space.id]\"\n                    [sys]=\"space.id\"\n                    mod=\"Booking\"\n                    bind=\"last_meeting_started\"\n                ></i>\n                <i\n                    binding\n                    [(model)]=\"checkin\"\n                    [sys]=\"space.id\"\n                    mod=\"Booking\"\n                    exec=\"start_meeting\"\n                    [params]=\"[event.date]\"\n                ></i>\n            </ng-container>\n        </ng-container>\n    </div>\n    <div class=\"body\">\n        <div class=\"field\" name=\"title\">\n            <label>Title:</label>\n            <div class=\"value\">{{ title }}</div>\n        </div>\n        <div class=\"field\" name=\"when\">\n            <label>When:</label>\n            <div class=\"value\">{{ when }}</div>\n        </div>\n        <div class=\"field\" name=\"duration\">\n            <label>Duration:</label>\n            <div class=\"value\">{{ duration }}</div>\n        </div>\n        <div class=\"field multi\" name=\"location\">\n            <label>Locations({{ spaces.length || '0' }}):</label>\n            <div class=\"value\">\n                <div class=\"list\" [class.shown]=\"show_locations\">\n                    <div\n                        class=\"list-item\"\n                        *ngFor=\"let item of spaces\"\n                        [title]=\"item?.name + ' - ' + (item?.status || 'Approved')\"\n                    >\n                        <div class=\"status\"></div>\n                        <div class=\"text\">{{ item?.name }}</div>\n                        <button class=\"show\" *ngIf=\"item?.map_id\" name=\"map\" (tapped)=\"locate(item)\">\n                            Map\n                        </button>\n                        <a\n                            class=\"show\"\n                            *ngIf=\"item?.support_url && can_control\"\n                            name=\"control\"\n                            [href]=\"item.support_url\"\n                            target=\"_blank\"\n                            >Control</a\n                        >\n                    </div>\n                    <div class=\"list-item\" *ngIf=\"!spaces.length\">No Location</div>\n                </div>\n                <button\n                    class=\"show\"\n                    *ngIf=\"spaces.length > 5\"\n                    (touchrelease)=\"show_locations = !show_locations\"\n                >\n                    {{ show_locations ? 'Hide' : 'Show' }} Locations\n                </button>\n            </div>\n        </div>\n        <div class=\"field\" name=\"host\">\n            <label>Host:</label>\n            <div class=\"value\">{{ organiser.name }}</div>\n        </div>\n        <div class=\"field multi\" name=\"attendees\">\n            <label>Attendees({{ attendees.length || '0' }}):</label>\n            <div class=\"value\">\n                <div class=\"list\" [class.shown]=\"show_attendees\">\n                    <div\n                        class=\"list-item\"\n                        *ngFor=\"let item of attendees\"\n                        [title]=\"\n                            item?.name +\n                            ' - ' +\n                            (item?.status || 'Accepted') +\n                            (item?.email ? '\\n' + item.email : '')\n                        \"\n                    >\n                        <div class=\"status\"></div>\n                        <div class=\"text\">\n                            <div class=\"name\">{{ item.name }}</div>\n                            <div class=\"email\" *ngIf=\"item.email\">\n                                <a [href]=\"'mailto:' + item.email + '?subject=' + event.title\">{{\n                                    item.email\n                                }}</a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <button\n                    class=\"show\"\n                    *ngIf=\"attendees.length > 5\"\n                    (touchrelease)=\"show_attendees = !show_attendees\"\n                >\n                    {{ show_attendees ? 'Hide' : 'Show' }} Attendees\n                </button>\n            </div>\n        </div>\n        <div class=\"field\" name=\"notes\">\n            <label>Notes:</label>\n            <div class=\"value\" [innerHTML]=\"notes\"></div>\n        </div>\n        <div class=\"field\" *ngIf=\"event && event.has_catering\" name=\"catering\">\n            <label>Catered:</label>\n            <div class=\"value\">Yes</div>\n        </div>\n    </div>\n    <div class=\"footer\">\n        <button\n            mat-button\n            *ngIf=\"can_checkin\"\n            name=\"checkin\"\n            [class]=\"\n                status === 'done' && !is_checked_in\n                    ? 'error no-events'\n                    : is_checked_in\n                    ? 'success no-events'\n                    : ''\n            \"\n            (tapped)=\"checkin()\"\n        >\n            <div class=\"text\">\n                {{\n                    status === 'done' && !is_checked_in\n                        ? 'Cancelled'\n                        : is_checked_in\n                        ? 'Checked in'\n                        : 'Checkin'\n                }}\n            </div>\n        </button>\n        <button mat-button *ngIf=\"can_edit\" name=\"edit\" (tapped)=\"edit()\">Edit</button>\n        <button mat-button *ngIf=\"can_edit\" name=\"duplicate\" (tapped)=\"duplicate()\">Duplicate</button>\n    </div>\n</div>\n","import { Component, OnInit, EventEmitter, Input, Output, SimpleChanges, OnChanges, OnDestroy } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { generateBookingForm } from 'src/app/services/data/bookings/booking.utilities';\nimport { BookingConfirmComponent } from 'src/app/shell/bookings/overlays/booking-confirm/booking-confirm.component';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: 'schedule-event-edit',\n    templateUrl: './event-edit.component.html',\n    styleUrls: ['./event-edit.component.scss']\n})\nexport class EventEditComponent extends BaseDirective implements OnInit, OnChanges, OnDestroy {\n    /** Booking to display */\n    @Input() public event: Booking;\n    /** Emitter for action on the display view */\n    @Output() public change = new EventEmitter<{ type: string }>();\n    /** Emitter for changes to the loading state */\n    @Output() public loading = new EventEmitter<string>();\n    /** Form field data */\n    public form: FormGroup;\n\n    constructor(private _service: ApplicationService, private _users: UsersService, private _dialog: MatDialog) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        /* istanbul ignore else */\n        if (this.event) {\n            this.form = generateBookingForm(\n                this.event,\n                this._users.current,\n                this._service.setting('app.booking.show_fields') || []\n            );\n        }\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.event && this.event) {\n            /* istanbul ignore else */\n            if (this.form && changes.event.previousValue) {\n                (changes.event.previousValue as Booking).emit('item_saved');\n            }\n            this.form = generateBookingForm(\n                this.event,\n                this._users.current,\n                this._service.setting('app.booking.show_fields') || []\n            );\n        }\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        /* istanbul ignore else */\n        if (this.form && this.event) {\n            this.event.emit('item_saved');\n        }\n    }\n\n    /**\n     * Exit the edit form\n     */\n    public cancel() {\n        this.change.emit({ type: 'cancel' });\n    }\n\n    /**\n     * Save changes to the booking\n     */\n    public save() {\n        /* istanbul ignore else */\n        if (!this.event.has_changes) {\n            this._service.notifyInfo('No changes have been made to booking');\n            return;\n        }\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            const dialog_ref = this._dialog.open(BookingConfirmComponent, {\n                width: '32em',\n                maxWidth: '95vw',\n                maxHeight: '95vh',\n                data: { booking: this.event }\n            });\n            dialog_ref.componentInstance.event.subscribe(event => {\n                /* istanbul ignore else */\n                if (event.reason === 'success') {\n                    this.change.emit({ type: 'view' });\n                }\n            });\n        }\n    }\n}\n","<div class=\"event-edit\">\n    <form *ngIf=\"form\" [formGroup]=\"form\" (ngSubmit)=\"save()\">\n        <div class=\"body\">\n            <a-booking-form [form]=\"form\"></a-booking-form>\n        </div>\n        <div class=\"footer\">\n            <button mat-button type=\"button\" class=\"inverse\" name=\"cancel\" (tapped)=\"cancel()\">\n                Cancel\n            </button>\n            <button mat-button type=\"submit\">Save</button>\n        </div>\n    </form>\n</div>\n","import { Component, OnInit, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\n\n@Component({\n    selector: 'schedule-view-event',\n    templateUrl: './view-event.component.html',\n    styleUrls: ['./view-event.component.scss'],\n})\nexport class ScheduleViewEventComponent extends BaseDirective implements OnChanges, OnInit {\n    /** ID of the current booking to display */\n    @Input() public id: string;\n    /** ID of the next booking */\n    @Input() public next: string;\n    /** ID of the previous booking */\n    @Input() public previous: string;\n    /** Booking to display */\n    public event: Booking;\n    /** Whether booking data is being loaded */\n    public loading: string;\n    /** Whether booking is being edited */\n    public editing: boolean;\n\n    constructor(\n        private _service: ApplicationService,\n        private _bookings: BookingsService,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'arrow_right',\n            this._service.Hotkeys.listen(['ArrowRight'], () => this.nextBooking())\n        );\n        this.subscription(\n            'arrow_left',\n            this._service.Hotkeys.listen(['ArrowLeft'], () => this.previousBooking())\n        );\n        this.subscription(\n            'changes',\n            this._bookings.listen('list').subscribe(() => this.loadEvent())\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.id && this.id) {\n            this.event = null;\n            this.editing = false;\n            this.loading = '';\n            this.loadEvent();\n        }\n    }\n\n    /**\n     * Load the details of the active event\n     */\n    public loadEvent() {\n        this.loading = 'Loading booking data...';\n        let booking = this._bookings.find(this.id);\n        if (booking) {\n            this.event = booking;\n            this.loading = '';\n        } else {\n            this._bookings.show(this.id, {}).then(\n                (bkn) => {\n                    this.loading = '';\n                    this.event = bkn;\n                },\n                () => {\n                    this.loading = '';\n                    this._service.notifyError(`Failed to loaded booking data<br>ID: ${this.id}`);\n                    this._router.navigate(['/schedule']);\n                }\n            );\n        }\n    }\n\n    /**\n     * View the next booking in the list\n     */\n    public nextBooking() {\n        /* istanbul ignore else */\n        if (this.next && !this.editing) {\n            this._router.navigate(['/schedule', 'view', this.next]);\n        }\n    }\n\n    /**\n     * View the previous booking in the list\n     */\n    public previousBooking() {\n        /* istanbul ignore else */\n        if (this.previous && !this.editing) {\n            this._router.navigate(['/schedule', 'view', this.previous]);\n        }\n    }\n\n    /**\n     * Handle changes to sub-components\n     */\n    public onChange(event: { type: string }): void {\n        /* istanbul ignore else */\n        if (event.type === 'edit') {\n            this.editing = true;\n        } else if (event.type === 'view' || event.type === 'cancel') {\n            this.editing = false;\n        }\n    }\n}\n","<div class=\"event-display\">\n    <div class=\"header\">\n        <div class=\"icon\"></div>\n        <div class=\"details\">\n            <a mat-icon-button name=\"previous\" [routerLink]=\"['/schedule', 'view', previous]\" [class.disabled]=\"!previous\">\n                <div class=\"left icon\">\n                    <i class=\"material-icons\">keyboard_arrow_left</i>\n                </div>\n            </a>\n            <div class=\"title\">{{ event ? event.title || 'No title' : '????' }}</div>\n            <a mat-icon-button name=\"next\" [routerLink]=\"['/schedule', 'view', next]\" [class.disabled]=\"!next\">\n                <div class=\"right icon\">\n                    <i class=\"material-icons\">keyboard_arrow_right</i>\n                </div>\n            </a>\n        </div>\n        <a mat-icon-button [routerLink]=\"['/schedule']\">\n            <div class=\"icon\">\n                <i class=\"material-icons\">close</i>\n            </div>\n        </a>\n    </div>\n    <div class=\"body\">\n        <div class=\"content\">\n            <ng-container *ngIf=\"loading\">\n                <div class=\"no-item center\">\n                    <div class=\"icon\">\n                        <mat-spinner diameter=\"48\"></mat-spinner>\n                    </div>\n                    <div class=\"text\">\n                        {{ loading }}\n                    </div>\n                </div>\n            </ng-container>\n            <div [class.hide]=\"loading\">\n                <ng-container *ngIf=\"!editing; else edit_form\">\n                    <schedule-event-details [event]=\"event\" (change)=\"onChange($event)\" (loading)=\"loading = $event\"></schedule-event-details>\n                </ng-container>\n                <ng-template #edit_form>\n                    <schedule-event-edit [event]=\"event\" (change)=\"onChange($event)\" (loading)=\"loading = $event\"></schedule-event-edit>\n                </ng-template>\n            </div>\n        </div>\n    </div>\n</div>\n\n"],"sourceRoot":"webpack:///"}