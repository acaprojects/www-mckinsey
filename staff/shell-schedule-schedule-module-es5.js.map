{"version":3,"sources":["webpack:///src/app/shell/schedule/event-list/event-list.component.ts","webpack:///src/app/shell/schedule/event-list/event-list.component.html","webpack:///src/app/shell/schedule/event-list/list-item/list-item.component.ts","webpack:///src/app/shell/schedule/event-list/list-item/list-item.component.html","webpack:///src/app/shell/schedule/schedule.component.ts","webpack:///src/app/shell/schedule/schedule.template.html","webpack:///src/app/shell/schedule/schedule.module.ts","webpack:///src/app/shell/schedule/schedule.routes.ts","webpack:///src/app/shell/schedule/view-event/event-details/event-details.component.ts","webpack:///src/app/shell/schedule/view-event/event-details/event-details.component.html","webpack:///src/app/shell/schedule/view-event/event-edit/event-edit.component.ts","webpack:///src/app/shell/schedule/view-event/event-edit/event-edit.component.html","webpack:///src/app/shell/schedule/view-event/view-event.component.ts","webpack:///src/app/shell/schedule/view-event/view-event.component.html"],"names":["ScheduleEventListComponent","_service","_route","event_list","events","shown_offset","date_offset","now","valueOf","at_top","user_list","subscription","queryParamMap","subscribe","params","has","active_user","Users","find","get","email","updateEvents","interval","scroll_viewport","elementScrolled","onScroll","listen","list","current","concat","event_promise","Promise","resolve","start","add","startOf","end","endOf","loading","Bookings","query","from","unix","to","then","updateList","filter","old_events","i","date","type","isBefore","isAfter","processEvents","emit","map","id","timeout","scrollTo","date_str","format","push","order_id","title","is_today","isSame","filter_fn","day","new_items","old_items","length","sort","a","b","show_calendar","range","getRenderedRange","dist","nearest","measureScrollOffset","diff","subtract","Math","max","scroll_to","trigger","closeMenu","item","index","findIndex","scrollToIndex","$event","stopPropagation","updateDate","closeDatePicker","selector","templateUrl","styleUrls","ScheduleEventListItemComponent","_dialog","event","open","maxHeight","maxWidth","width","height","hasBackdrop","closeOnNavigation","data","booking","as_delegate","user","delegate","is_first","is_last","status","space_list","space","name","join","has_visitors","all_day","duration","statuses","approval_status","spaces","indexOf","location","location_lower","toLowerCase","ScheduleComponent","show_menu","paramMap","page","loadEvents","saveEvents","localStorage","setItem","JSON","stringify","getItem","parse","ScheduleModule","forChild","declarations","imports","ROUTES","path","component","redirectTo","EventDetailsComponent","_router","change","last_start","checked_in","duplicate","navigate","attendees","organiser","description","reduce","v","EventEditComponent","form","setting","changes","previousValue","has_changes","notifyInfo","valid","dialog_ref","componentInstance","reason","ScheduleViewEventComponent","Hotkeys","nextBooking","previousBooking","loadEvent","editing","show","bkn","notifyError","next","previous"],"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","file":"shell-schedule-schedule-module-es5.js","sourcesContent":["import { Component, ViewChild, Output, EventEmitter } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\n\nimport { ApplicationService } from '../../../services/app.service';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { BookingLike } from './list-item/list-item.component';\n\nimport * as dayjs from 'dayjs';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { MatMenuTrigger } from '@angular/material/menu';\n\nexport interface EventPair {\n    id: string;\n    date: number;\n}\n\n@Component({\n    selector: 'schedule-event-list',\n    templateUrl: './event-list.component.html',\n    styleUrls: ['./event-list.component.scss']\n})\nexport class ScheduleEventListComponent extends BaseDirective {\n    /** Emitter  */\n    @Output('eventList') public event_list = new EventEmitter<EventPair[]>();\n    /** List of items to display on the event list */\n    public events: BookingLike[] = [];\n    /** Update promise */\n    public event_promise: Promise<void>;\n    /** Whether bookings are being updated */\n    public loading: boolean;\n    /** Number of days to render in the list from the current date */\n    public shown_offset: number = 7;\n    /** Offset of the date to show events for */\n    public date_offset: number = 0;\n    /** Whether to show the calendar tooltip */\n    public show_calendar: boolean;\n    /** Date to scroll to on next update */\n    public scroll_to: string;\n    /** Current UTC epoch */\n    public now: number = dayjs().valueOf();\n    /** Current UTC epoch */\n    public date: number;\n    /** Whether list is displaying the top of the first item */\n    public at_top: boolean = true;\n    /** List of users available to view schedules for */\n    public user_list: User[] = [];\n    /** Active user to display schedule for */\n    public active_user: User;\n\n    /** Viewport for the scrollable area of the list */\n    @ViewChild(CdkVirtualScrollViewport, { static: true })\n    private scroll_viewport: CdkVirtualScrollViewport;\n\n    @ViewChild(MatMenuTrigger, { static: true }) trigger: MatMenuTrigger;\n\n    constructor(private _service: ApplicationService, private _route: ActivatedRoute) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe(params => {\n                /* istanbul ignore else */\n                if (params.has('email')) {\n                    this.active_user = this._service.Users.find(params.get('email')) || new User(this._service.Users, { email: params.get('email') });\n                }\n            })\n        );\n        this.updateEvents();\n        this.interval('update_events', () => this.updateEvents(), 10 * 1000);\n        this.subscription(\n            'scroll',\n            this.scroll_viewport.elementScrolled().subscribe(() => this.onScroll())\n        );\n        this.subscription('delegate_list', this._service.Users.listen('delegates').subscribe((list) => {\n            /* istanbul ignore else */\n            if (list && list[0]) {\n                this.user_list = [this._service.Users.current].concat(list);\n                /* istanbul ignore else */\n                if (!this.active_user) {\n                    this.active_user = this.user_list[0];\n                }\n            }\n        }));\n    }\n\n    /**\n     * Update the list of events for the currently visible period\n     */\n    public updateEvents() {\n        /* istanbul ignore else */\n        if (!this.event_promise) {\n            this.event_promise = new Promise(resolve => {\n                const start = dayjs()\n                    .add(this.date_offset, 'd')\n                    .startOf('d');\n                const end = start.add(7, 'd').endOf('d');\n                this.loading = true;\n                this._service.Bookings.query({\n                    email: (this.active_user ? this.active_user.email : '') || this._service.Users.current.email,\n                    from: start.unix(),\n                    to: end.unix()\n                }).then(\n                    (list: Booking[]) => {\n                        this._service.Bookings.updateList(this._service.Bookings.filter(), list);\n                        const old_events = this.events.filter(i => {\n                            const date = dayjs(i.date);\n                            return (\n                                i.type !== 'date' &&\n                                i.type !== 'empty' &&\n                                (date.isBefore(start, 's') || date.isAfter(end, 's'))\n                            );\n                        });\n                        this.events = this.processEvents(list, old_events);\n                        // Update event list for view listing\n                        const event_list = this.events.filter(\n                            i => i.type !== 'date' && i.type !== 'empty'\n                        );\n                        this.event_list.emit(event_list.map(i => ({ id: i.id, date: i.date })));\n                        // Scroll to date if needed\n                        this.timeout('scroll_to', () => this.scrollTo());\n                        this.loading = false;\n                        delete this.event_promise;\n                    },\n                    () => {\n                        this.loading = false;\n                        delete this.event_promise;\n                    }\n                );\n            });\n        }\n        return this.event_promise;\n    }\n\n    /**\n     * Process list of new items and merge with the old\n     * @param list List of new bookings to generate event blocks for\n     * @param old_events List of relevant old event blocks\n     */\n    public processEvents(list: Booking[], old_events: BookingLike[]): BookingLike[] {\n        let events: BookingLike[] = [];\n        const now = dayjs();\n        let date = dayjs().startOf('d');\n        const end = date.add(this.shown_offset, 'd').endOf('d');\n        for (; date.isBefore(end); date = date.add(1, 'd')) {\n            const date_str = date.format('YYYY-MM-DD');\n            // Add date block\n            events.push({\n                id: date_str,\n                type: 'date',\n                order_id: date_str,\n                title: date.format('dddd, DD MMM'),\n                is_today: date.isSame(now, 'd'),\n                date: date.valueOf()\n            });\n            const filter_fn: (_: BookingLike) => boolean = i => {\n                const day = dayjs(i.date);\n                return day.isAfter(date, 's') && day.isBefore(date.endOf('d'), 's');\n            };\n            // Add events for today to list\n            const new_items = list.filter(filter_fn as any);\n            const old_items = old_events.filter(filter_fn as any);\n            if (new_items.length || old_items.length) {\n                events = events.concat(new_items as any).concat(old_items);\n            } else {\n                // Add block for no events if so\n                events.push({\n                    id: `${date_str}-empty`,\n                    type: 'empty',\n                    order_id: date_str,\n                    title: `No items for ${date.format('dddd, DD MMM')}`,\n                    is_today: date.isSame(now, 'd'),\n                    date: date.valueOf() + 1\n                });\n            }\n        }\n        events.sort((a, b) => a.date - b.date);\n        events = unique(events, 'id');\n        return events;\n    }\n\n    /**\n     * Handle scrolling on the event list\n     */\n    public onScroll() {\n        /* istanbul ignore else */\n        if (!this.event_promise) {\n            this.show_calendar = false;\n            const range = this.scroll_viewport.getRenderedRange();\n            const dist = range.end - range.start;\n            const nearest = this.events[range.start];\n            this.at_top = range.start === 0 && this.scroll_viewport.measureScrollOffset() < 5;\n            this.date_offset = dayjs(nearest.date).diff(dayjs(), 'd') - 1;\n            this.date = dayjs((this.events[dist + range.start] || {}).date)\n                .subtract(1, 'd')\n                .valueOf();\n            /* istanbul ignore else */\n            if (range.end > this.events.length - 7) {\n                this.shown_offset += 3;\n                this.updateEvents();\n            }\n        }\n    }\n\n    /**\n     * Update the date offset\n     * @param date UTC milliseconds epoch of new date offset\n     */\n    public updateDate(date: number) {\n        const day = dayjs(date);\n        this.date_offset = day.diff(dayjs(), 'd') - 1;\n        this.shown_offset = Math.max(this.shown_offset, this.date_offset + 3);\n        this.scroll_to = day.format('YYYY-MM-DD');\n        delete this.event_promise;\n        this.show_calendar = false;\n        this.date = dayjs()\n            .add(this.date_offset, 'd')\n            .valueOf();\n        this.updateEvents();\n    }\n\n    /** Close the menu popup with the date picker */\n    public closeDatePicker() {\n        this.trigger.closeMenu();\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(item: BookingLike, index: number) {\n        return item ? item.id : null;\n    }\n\n    /**\n     * Scroll to a previously defined date on the event list\n     */\n    private scrollTo() {\n        /* istanbul ignore else */\n        if (this.scroll_to) {\n            const index = this.events.findIndex(i => i.id === this.scroll_to);\n            /* istanbul ignore else */\n            if (index > -1) {\n                this.scroll_viewport.scrollToIndex(index, 'smooth');\n                this.scroll_to = null;\n            }\n        }\n    }\n}\n","<div class=\"event-list\">\n    <div class=\"header dark-mode\" [class.scrolled]=\"!at_top\">\n        <div class=\"user\">\n            <mat-form-field appearance=\"outline\" *ngIf=\"user_list && user_list.length > 1\" >\n                <mat-select #select [(value)]=\"active_user\" (valueChange)=\"updateEvents($event)\">\n                    <mat-option *ngFor=\"let user of user_list\" [value]=\"user\">\n                        {{ user?.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"flex\"></div>\n        <div class=\"date\">\n            <button mat-icon-button [matMenuTriggerFor]=\"appMenu\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'event' }\"></app-icon>\n            </button>\n        </div>\n    </div>\n    <div class=\"progress\">\n        <mat-progress-bar mode=\"indeterminate\" *ngIf=\"loading\"></mat-progress-bar>\n    </div>\n    <div class=\"body\">\n        <cdk-virtual-scroll-viewport itemSize=\"80\" class=\"viewport\" (scroll)=\"onScroll()\">\n            <ng-container *cdkVirtualFor=\"let item of events; trackBy: trackByFn\">\n                <schedule-event-item [attr.id]=\"item.id | slice:0:10\" [user]=\"active_user\" [event]=\"item\"></schedule-event-item>\n            </ng-container>\n        </cdk-virtual-scroll-viewport>\n    </div>\n    <div class=\"footer\"></div>\n</div>\n<mat-menu #appMenu=\"matMenu\">\n    <div mat-menu-item class=\"date-picker\" (click)=\"$event.stopPropagation()\">\n        <a-date-picker\n            [(ngModel)]=\"date\"\n            (ngModelChange)=\"updateDate($event); closeDatePicker()\"\n        ></a-date-picker>\n    </div>\n</mat-menu>\n","import { Component, Input } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport {\n    MeetingDetailsOverlayComponent,\n    MeetingDetailsModalData,\n} from 'src/app/overlays/meeting-details-overlay/meeting-details-overlay.component';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { User } from 'src/app/services/data/users/user.class';\n\nimport * as dayjs from 'dayjs';\n\nexport interface BookingLike {\n    /** ID of the item */\n    id: string;\n    /** Sorting weight of the item */\n    order_id: string;\n    /** Type of item to render */\n    type: 'date' | 'event' | 'empty';\n    /** Whether the event is on the current date */\n    is_today: boolean;\n    /** Title of the event */\n    title: string;\n    /** Date in UTC milliseconds */\n    date: number;\n    /** Current state of the booking */\n    status?: 'future' | 'upcoming' | 'done' | 'started' | 'in_progress';\n\n    [key: string]: any;\n}\n\n@Component({\n    selector: 'schedule-event-item',\n    templateUrl: './list-item.component.html',\n    styleUrls: ['./list-item.component.scss'],\n})\nexport class ScheduleEventListItemComponent extends BaseDirective {\n    /** Booking to display */\n    @Input() public event: BookingLike;\n    /** User who's schedule is being viewed */\n    @Input() public user: User;\n\n    public get in_progress(): boolean {\n        return this.event.status === 'in_progress';\n    }\n\n    public get date_display(): string {\n        const date = dayjs(this.event.date);\n        const now = dayjs();\n        return now.isSame(date, 'd') ? 'Today' : date.format('DD MMM YYYY');\n    }\n\n    /** Display location of the booking event */\n    public get location(): string {\n        const booking: Booking = this.event as any;\n        return (booking.space_list || [booking.space]).map((i) => i.name).join(', ');\n    }\n\n    /** Image name to display for the event */\n    public get type_image(): string {\n        const booking: Booking = this.event as any;\n        return booking.has_visitors ? 'external' : 'book_room';\n    }\n\n    public get time(): string {\n        const booking: Booking = this.event as any;\n        return booking.all_day || booking.duration > 23 * 60\n            ? 'All Day'\n            : dayjs(booking.date).format('h:mm A');\n    }\n\n    /** Status of the current booking */\n    public get status(): 'approved' | 'tentative' | 'declined' | '' {\n        const statuses = this.event.approval_status || {};\n        const spaces = this.event.space_list || [];\n        for (const space of spaces) {\n            const status = statuses[space.id] || '';\n            if (status.indexOf('tentative') >= 0 || status.indexOf('not') === 0) {\n                return 'tentative';\n            } else if (status.indexOf('declined') >= 0) {\n                return 'declined';\n            }\n        }\n        const location = this.event.location || '';\n        const location_lower = (typeof location === 'string' ? location : '').toLowerCase();\n        if (location_lower.indexOf('tentative') >= 0) {\n            return 'tentative';\n        } else if (location_lower.indexOf('declined') >= 0) {\n            return 'declined';\n        }\n        return spaces.length ? 'approved' : '';\n    }\n\n    constructor(private _dialog: MatDialog, private _service: ApplicationService) {\n        super();\n    }\n\n    public openDetailsModal() {\n        /* istanbul ignore else */\n        if (this.event instanceof Booking) {\n            this._dialog.open<MeetingDetailsOverlayComponent, MeetingDetailsModalData>(\n                MeetingDetailsOverlayComponent,\n                {\n                    maxHeight: 'auto',\n                    maxWidth: 'auto',\n                    width: 'auto',\n                    height: 'auto',\n                    hasBackdrop: false,\n                    closeOnNavigation: true,\n                    data: {\n                        booking: this.event,\n                        as_delegate: this._service.Users.current.email === (this.user || {}).email,\n                        delegate: this.user.email,\n                        is_first: false,\n                        is_last: false,\n                    },\n                }\n            );\n        }\n    }\n}\n","<div [class]=\"'event-item ' + event.type + ' ' + status\" *ngIf=\"event\" [attr.id]=\"event.id\">\n    <ng-container [ngSwitch]=\"event.type\">\n        <div *ngSwitchCase=\"'date'\" class=\"day display\">{{ event.title }}</div>\n        <div *ngSwitchCase=\"'empty'\" class=\"emptied display\">\n            No events for {{ date_display }}\n        </div>\n        <div *ngSwitchDefault class=\"event display\">\n            <a (tapped)=\"openDetailsModal()\">\n                <div class=\"content\">\n                    <div class=\"time\">\n                        <div>{{ time }}</div>\n                        <div class=\"info\" *ngIf=\"in_progress\">In Progress</div>\n                    </div>\n                    <div class=\"icon\">\n                        <img [src]=\"'assets/img/' + type_image + '.svg'\" />\n                    </div>\n                    <div class=\"details\">\n                        <div class=\"title text\">{{ event.title }}</div>\n                        <div class=\"location text\">\n                            <img src=\"assets/img/location.svg\">\n                            <div class=\"text\">{{ location || event.location_name || 'No location' }}</div>\n                        </div>\n                    </div>\n                </div>\n            </a>\n        </div>\n    </ng-container>\n</div>\n","\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { EventPair } from './event-list/event-list.component';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\n\n@Component({\n    selector: 'app-schedule',\n    templateUrl: './schedule.template.html',\n    styleUrls: ['./schedule.styles.scss'],\n})\nexport class ScheduleComponent extends BaseDirective implements OnInit {\n    /** Name of the page to render */\n    public page: string;\n    /** ID of the event item to view */\n    public id: string;\n    /** Current list of loaded events */\n    public events: EventPair[];\n    /** Whether to show menu */\n    public show_menu = false;\n\n    /** ID of the event after the active event */\n    public get next(): string {\n        if (this.events) {\n            const index = this.events.findIndex(i => this.id === i.id) + 1;\n            if (index > -1 && this.events[index]) {\n                return this.events[index].id;\n            }\n        }\n        return '';\n    }\n\n    /** ID of the event before the active event */\n    public get previous(): string {\n        if (this.events) {\n            const index = this.events.findIndex(i => this.id === i.id) - 1;\n            if (index > -1 && this.events[index]) {\n                return this.events[index].id;\n            }\n        }\n        return '';\n    }\n\n    constructor(private _route: ActivatedRoute, private _service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription('route.route', this._route.paramMap.subscribe((params) => {\n            if (params.has('page')) {\n                this.page = params.get('page');\n            }\n            if (params.has('id')) {\n                this.id = params.get('id');\n            }\n        }));\n        this.loadEvents();\n        this._service.title = 'My Day';\n    }\n\n    /**\n     * Update local event listing\n     * @param event_list New list of events\n     */\n    public updateEvents(event_list: EventPair[]) {\n        this.events = event_list;\n        this.saveEvents();\n    }\n\n    /**\n     * Save the current event listing\n     */\n    public saveEvents() {\n        if (localStorage) {\n            localStorage.setItem('STAFF.events', JSON.stringify(this.events || []));\n        }\n    }\n\n    /**\n     * Load the last saved event listing\n     */\n    public loadEvents() {\n        if (localStorage) {\n            const data = localStorage.getItem('STAFF.events');\n            this.events = JSON.parse(data || '[]');\n        }\n    }\n}\n","<div class=\"schedule page\">\n    <header class=\"header\">\n        <a-topbar-header [(menu)]=\"show_menu\"></a-topbar-header>\n    </header>\n    <main class=\"body\">\n        <ng-container [ngSwitch]=\"page\">\n            <ng-container *ngSwitchCase=\"'view'\">\n                <schedule-view-event [id]=\"id\" [next]=\"next\" [previous]=\"previous\"></schedule-view-event>\n            </ng-container>\n            <ng-container *ngSwitchDefault>\n                <schedule-event-list (eventList)=\"updateEvents($event)\"></schedule-event-list>\n            </ng-container>\n        </ng-container>\n    </main>\n    <footer class=\"footer\">\n        <a-footer-menu></a-footer-menu>\n    </footer>\n</div>\n<a-overlay-menu [(show)]=\"show_menu\"></a-overlay-menu>","\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { RouterModule } from '@angular/router';\nimport { ComposerModule } from '@placeos/composer';\n\nimport { ROUTES } from './schedule.routes';\nimport { SharedContentModule } from 'src/app/shared/shared.module';\n\nimport { ScheduleComponent } from './schedule.component';\nimport { ScheduleEventListComponent } from './event-list/event-list.component';\nimport { ScheduleViewEventComponent } from './view-event/view-event.component';\nimport { ScheduleEventListItemComponent } from './event-list/list-item/list-item.component';\nimport { EventDetailsComponent } from './view-event/event-details/event-details.component';\nimport { EventEditComponent } from './view-event/event-edit/event-edit.component';\n\n@NgModule({\n    declarations: [\n        ScheduleComponent,\n        ScheduleViewEventComponent,\n        ScheduleEventListComponent,\n        ScheduleEventListItemComponent,\n        EventDetailsComponent,\n        EventEditComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ComposerModule,\n        FormsModule,\n        ReactiveFormsModule,\n        RouterModule.forChild(ROUTES),\n        SharedContentModule,\n        ScrollingModule\n    ]\n})\nexport class ScheduleModule { }\n","import { Routes } from '@angular/router';\n\nimport { ScheduleComponent } from './schedule.component';\n\nexport const ROUTES: Routes = [\n    { path: '', component: ScheduleComponent },\n    { path: ':page', component: ScheduleComponent },\n    { path: ':page/:id', component: ScheduleComponent },\n    { path: '**', redirectTo: '' }\n];\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { humaniseDuration } from 'src/app/shared/utilities/general.utilities';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { ViewRoomModalComponent } from 'src/app/overlays/view-room-modal/view-room-modal.component';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'schedule-event-details',\n    templateUrl: './event-details.component.html',\n    styleUrls: ['./event-details.component.scss']\n})\nexport class EventDetailsComponent extends BaseDirective {\n    /** Booking to display */\n    @Input() event: Booking;\n    /** Emitter for action on the display view */\n    @Output() change = new EventEmitter();\n    /** Emitter for changes to the loading state */\n    @Output() loading = new EventEmitter();\n    /** Toggle for activating checkin */\n    public checked_in: boolean;\n    /** Mapping of spaces to last checkin time */\n    public last_start: { [id: string]: number } = {};\n    /** Whether to show full locations list */\n    public show_locations: boolean;\n    /** Whether to show full attendee list */\n    public show_attendees: boolean;\n\n    /** Title of the displayed event */\n    public get title(): string {\n        if (!this.event) {\n            return '';\n        }\n        return this.event.title;\n    }\n\n    /** Display string of when the event will occur */\n    public get when(): string {\n        if (!this.event) {\n            return 'Unable to determine.';\n        }\n        const date = dayjs(this.event.date);\n        const end = date.add(this.event.duration || 60, 'm');\n        if (this.event.all_day || this.event.duration > 23 * 60) {\n            return `${date.format('DD MMM YYYY')} - All Day`;\n        } else {\n            if (date.isSame(end, 'd')) {\n                return `${date.format('DD MMM YYYY, h:mm A')} - ${end.format('h:mm A')}`;\n            } else {\n                return `${date.format('DD MMM YYYY, h:mm A')} - ${end.format(\n                    'DD MMM YYYY, h:mm A'\n                )}`;\n            }\n        }\n    }\n\n    /** Display string for the event's duration */\n    public get duration(): string {\n        if (!this.event) {\n            return 'Unable to determine';\n        }\n        return humaniseDuration(this.event.duration || 60);\n    }\n\n    /** List of spaces associated with the event */\n    public get spaces(): Space[] {\n        if (!this.event) {\n            return [];\n        }\n        return this.event.space_list;\n    }\n\n    /** List of attendees associated with the event not including the host */\n    public get attendees(): User[] {\n        if (!this.event) {\n            return [];\n        }\n        return this.event.attendees.filter(i => i.email !== this.organiser.email);\n    }\n\n    /** Host of the event */\n    public get organiser(): User {\n        if (!this.event) {\n            return this._service.Users.current;\n        }\n        return this.event.organiser || this._service.Users.current;\n    }\n\n    /** Whether the user is allowed to edit the event */\n    public get can_edit(): boolean {\n        const organiser = this.organiser;\n        const user = this._service.Users.current;\n        return organiser.email === user.email && this.status !== 'done';\n    }\n\n    /** Details about the event */\n    public get notes(): string {\n        if (!this.event) {\n            return '';\n        }\n        return this.event.description || '';\n    }\n\n    /** Status of the event */\n    public get status(): 'future' | 'upcoming' | 'done' | 'started' | 'in_progress' {\n        if (this.event) {\n            const now = dayjs();\n            const date = dayjs(this.event.date);\n            /* istanbul ignore else */\n            if (now.isBefore(date.subtract(15, 'm'), 'm')) {\n                return 'future';\n            } else if (now.isBefore(date, 'm')) {\n                return 'upcoming';\n            } else if (now.isBefore(date.add(15, 'm'), 'm')) {\n                return 'started';\n            } else if (now.isBefore(date.add(this.event.duration, 'm'), 'm')) {\n                return 'in_progress';\n            }\n        }\n        return 'done';\n    }\n\n    /** Whether the user has checkin to all the spaces in the event */\n    public get is_checked_in(): boolean {\n        return this.spaces.reduce(\n            (a, v) => a && this.event.date <= (this.last_start[v.id] || 0),\n            true\n        );\n    }\n\n    /** Whether the spaces can be controlled */\n    public get can_control(): boolean {\n        return this.spaces.length > 0 && this.status !== 'future' && this.status !== 'done';\n    }\n\n    /** Whether the user is able to checkin to the event */\n    public get can_checkin(): boolean {\n        return this.spaces.length > 0 && (this.status === 'upcoming' || this.status === 'started');\n    }\n\n    constructor(private _service: ApplicationService, private _dialog: MatDialog, private _router: Router) {\n        super();\n    }\n\n    /**\n     * Open the modal to show the location of a space\n     * @param space Space to show the location\n     */\n    public locate(space: Space) {\n        /* istanbul ignore else */\n        if (space) {\n            this._dialog.open(ViewRoomModalComponent, {\n                width: 'auto',\n                height: 'auto',\n                maxWidth: '95vw',\n                maxHeight: '95vh',\n                data: { space }\n            });\n        }\n    }\n\n    /**\n     * Enter edit mode for the booking\n     */\n    public edit(): void {\n        this.change.emit({ type: 'edit' });\n    }\n\n    /**\n     * Checkin the current booking\n     */\n    public checkin(): void {\n        this.checked_in = !this.checked_in;\n    }\n\n    /**\n     * Store the booking data and navigate to the booking form\n     */\n    public duplicate(): void {\n        /* istanbul ignore else */\n        if (localStorage) {\n            const booking = this.event.duplicate();\n            localStorage.setItem('STAFF.booking_form', JSON.stringify(booking));\n        }\n        this.change.emit({ type: 'duplicate' });\n        this._router.navigate(['/book']);\n    }\n}\n","<div class=\"event-details\">\n    <div class=\"bindings\">\n        <ng-container *ngFor=\"let space of spaces\">\n            <ng-container *ngIf=\"space?.level?.id\">\n                <i\n                    binding\n                    [(model)]=\"last_start[space.id]\"\n                    [sys]=\"space.id\"\n                    mod=\"Booking\"\n                    bind=\"last_meeting_started\"\n                ></i>\n                <i\n                    binding\n                    [(model)]=\"checkin\"\n                    [sys]=\"space.id\"\n                    mod=\"Booking\"\n                    exec=\"start_meeting\"\n                    [params]=\"[event.date]\"\n                ></i>\n            </ng-container>\n        </ng-container>\n    </div>\n    <div class=\"body\">\n        <div class=\"field\" name=\"title\">\n            <label>Title:</label>\n            <div class=\"value\">{{ title }}</div>\n        </div>\n        <div class=\"field\" name=\"when\">\n            <label>When:</label>\n            <div class=\"value\">{{ when }}</div>\n        </div>\n        <div class=\"field\" name=\"duration\">\n            <label>Duration:</label>\n            <div class=\"value\">{{ duration }}</div>\n        </div>\n        <div class=\"field multi\" name=\"location\">\n            <label>Locations({{ spaces.length || '0' }}):</label>\n            <div class=\"value\">\n                <div class=\"list\" [class.shown]=\"show_locations\">\n                    <div\n                        class=\"list-item\"\n                        *ngFor=\"let item of spaces\"\n                        [title]=\"item?.name + ' - ' + (item?.status || 'Approved')\"\n                    >\n                        <div class=\"status\"></div>\n                        <div class=\"text\">{{ item?.name }}</div>\n                        <button class=\"show\" *ngIf=\"item?.map_id\" name=\"map\" (tapped)=\"locate(item)\">\n                            Map\n                        </button>\n                        <a\n                            class=\"show\"\n                            *ngIf=\"item?.support_url && can_control\"\n                            name=\"control\"\n                            [href]=\"item.support_url\"\n                            target=\"_blank\"\n                            >Control</a\n                        >\n                    </div>\n                    <div class=\"list-item\" *ngIf=\"!spaces.length\">No Location</div>\n                </div>\n                <button\n                    class=\"show\"\n                    *ngIf=\"spaces.length > 5\"\n                    (touchrelease)=\"show_locations = !show_locations\"\n                >\n                    {{ show_locations ? 'Hide' : 'Show' }} Locations\n                </button>\n            </div>\n        </div>\n        <div class=\"field\" name=\"host\">\n            <label>Host:</label>\n            <div class=\"value\">{{ organiser.name }}</div>\n        </div>\n        <div class=\"field multi\" name=\"attendees\">\n            <label>Attendees({{ attendees.length || '0' }}):</label>\n            <div class=\"value\">\n                <div class=\"list\" [class.shown]=\"show_attendees\">\n                    <div\n                        class=\"list-item\"\n                        *ngFor=\"let item of attendees\"\n                        [title]=\"\n                            item?.name +\n                            ' - ' +\n                            (item?.status || 'Accepted') +\n                            (item?.email ? '\\n' + item.email : '')\n                        \"\n                    >\n                        <div class=\"status\"></div>\n                        <div class=\"text\">\n                            <div class=\"name\">{{ item.name }}</div>\n                            <div class=\"email\" *ngIf=\"item.email\">\n                                <a [href]=\"'mailto:' + item.email + '?subject=' + event.title\">{{\n                                    item.email\n                                }}</a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <button\n                    class=\"show\"\n                    *ngIf=\"attendees.length > 5\"\n                    (touchrelease)=\"show_attendees = !show_attendees\"\n                >\n                    {{ show_attendees ? 'Hide' : 'Show' }} Attendees\n                </button>\n            </div>\n        </div>\n        <div class=\"field\" name=\"notes\">\n            <label>Notes:</label>\n            <div class=\"value\" [innerHTML]=\"notes\"></div>\n        </div>\n        <div class=\"field\" *ngIf=\"event && event.has_catering\" name=\"catering\">\n            <label>Catered:</label>\n            <div class=\"value\">Yes</div>\n        </div>\n    </div>\n    <div class=\"footer\">\n        <button\n            mat-button\n            *ngIf=\"can_checkin\"\n            name=\"checkin\"\n            [class]=\"\n                status === 'done' && !is_checked_in\n                    ? 'error no-events'\n                    : is_checked_in\n                    ? 'success no-events'\n                    : ''\n            \"\n            (tapped)=\"checkin()\"\n        >\n            <div class=\"text\">\n                {{\n                    status === 'done' && !is_checked_in\n                        ? 'Cancelled'\n                        : is_checked_in\n                        ? 'Checked in'\n                        : 'Checkin'\n                }}\n            </div>\n        </button>\n        <button mat-button *ngIf=\"can_edit\" name=\"edit\" (tapped)=\"edit()\">Edit</button>\n        <button mat-button *ngIf=\"can_edit\" name=\"duplicate\" (tapped)=\"duplicate()\">Duplicate</button>\n    </div>\n</div>\n","import { Component, OnInit, EventEmitter, Input, Output, SimpleChanges, OnChanges, OnDestroy } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { generateBookingForm } from 'src/app/services/data/bookings/booking.utilities';\n\nimport * as dayjs from 'dayjs';\nimport { BookingConfirmComponent } from 'src/app/shell/bookings/overlays/booking-confirm/booking-confirm.component';\n\n@Component({\n    selector: 'schedule-event-edit',\n    templateUrl: './event-edit.component.html',\n    styleUrls: ['./event-edit.component.scss']\n})\nexport class EventEditComponent extends BaseDirective implements OnInit, OnChanges, OnDestroy {\n    /** Booking to display */\n    @Input() public event: Booking;\n    /** Emitter for action on the display view */\n    @Output() public change = new EventEmitter<{ type: string }>();\n    /** Emitter for changes to the loading state */\n    @Output() public loading = new EventEmitter<string>();\n    /** Form field data */\n    public form: FormGroup;\n\n    constructor(private _service: ApplicationService, private _dialog: MatDialog) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        /* istanbul ignore else */\n        if (this.event) {\n            this.form = generateBookingForm(\n                this.event,\n                this._service.Users.current,\n                this._service.setting('app.booking.show_fields') || []\n            );\n        }\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.event && this.event) {\n            /* istanbul ignore else */\n            if (this.form && changes.event.previousValue) {\n                (changes.event.previousValue as Booking).emit('item_saved');\n            }\n            this.form = generateBookingForm(\n                this.event,\n                this._service.Users.current,\n                this._service.setting('app.booking.show_fields') || []\n            );\n        }\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        /* istanbul ignore else */\n        if (this.form && this.event) {\n            this.event.emit('item_saved');\n        }\n    }\n\n    /**\n     * Exit the edit form\n     */\n    public cancel() {\n        this.change.emit({ type: 'cancel' });\n    }\n\n    /**\n     * Save changes to the booking\n     */\n    public save() {\n        /* istanbul ignore else */\n        if (!this.event.has_changes) {\n            this._service.notifyInfo('No changes have been made to booking');\n            return;\n        }\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            const dialog_ref = this._dialog.open(BookingConfirmComponent, {\n                width: '32em',\n                maxWidth: '95vw',\n                maxHeight: '95vh',\n                data: { booking: this.event }\n            });\n            dialog_ref.componentInstance.event.subscribe(event => {\n                /* istanbul ignore else */\n                if (event.reason === 'success') {\n                    this.change.emit({ type: 'view' });\n                }\n            });\n        }\n    }\n}\n","<div class=\"event-edit\">\n    <form *ngIf=\"form\" [formGroup]=\"form\" (ngSubmit)=\"save()\">\n        <div class=\"body\">\n            <a-booking-form [form]=\"form\"></a-booking-form>\n        </div>\n        <div class=\"footer\">\n            <button mat-button type=\"button\" class=\"inverse\" name=\"cancel\" (tapped)=\"cancel()\">\n                Cancel\n            </button>\n            <button mat-button type=\"submit\">Save</button>\n        </div>\n    </form>\n</div>\n","import { Component, OnInit, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { ApplicationService } from 'src/app/services/app.service';\n\n@Component({\n    selector: 'schedule-view-event',\n    templateUrl: './view-event.component.html',\n    styleUrls: ['./view-event.component.scss']\n})\nexport class ScheduleViewEventComponent extends BaseDirective implements OnChanges, OnInit {\n    /** ID of the current booking to display */\n    @Input() public id: string;\n    /** ID of the next booking */\n    @Input() public next: string;\n    /** ID of the previous booking */\n    @Input() public previous: string;\n    /** Booking to display */\n    public event: Booking;\n    /** Whether booking data is being loaded */\n    public loading: string;\n    /** Whether booking is being edited */\n    public editing: boolean;\n\n    constructor(private _service: ApplicationService, private _router: Router) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'arrow_right',\n            this._service.Hotkeys.listen(['ArrowRight'], () => this.nextBooking())\n        );\n        this.subscription(\n            'arrow_left',\n            this._service.Hotkeys.listen(['ArrowLeft'], () => this.previousBooking())\n        );\n        this.subscription(\n            'changes',\n            this._service.Bookings.listen('list').subscribe(() => this.loadEvent())\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.id && this.id) {\n            this.event = null;\n            this.editing = false;\n            this.loading = '';\n            this.loadEvent();\n        }\n    }\n\n    /**\n     * Load the details of the active event\n     */\n    public loadEvent() {\n        this.loading = 'Loading booking data...';\n        let booking = this._service.Bookings.find(this.id);\n        if (booking) {\n            this.event = booking;\n            this.loading = '';\n        } else {\n            this._service.Bookings.show(this.id, {}).then(\n                bkn => {\n                    this.loading = '';\n                    this.event = bkn;\n                },\n                () => {\n                    this.loading = '';\n                    this._service.notifyError(`Failed to loaded booking data<br>ID: ${this.id}`);\n                    this._router.navigate(['/schedule']);\n                }\n            );\n        }\n    }\n\n    /**\n     * View the next booking in the list\n     */\n    public nextBooking() {\n        /* istanbul ignore else */\n        if (this.next && !this.editing) {\n            this._router.navigate(['/schedule', 'view', this.next]);\n        }\n    }\n\n    /**\n     * View the previous booking in the list\n     */\n    public previousBooking() {\n        /* istanbul ignore else */\n        if (this.previous && !this.editing) {\n            this._router.navigate(['/schedule', 'view', this.previous]);\n        }\n    }\n\n    /**\n     * Handle changes to sub-components\n     */\n    public onChange(event: { type: string }): void {\n        /* istanbul ignore else */\n        if (event.type === 'edit') {\n            this.editing = true;\n        } else if (event.type === 'view' || event.type === 'cancel') {\n            this.editing = false;\n        }\n    }\n}\n","<div class=\"event-display\">\n    <div class=\"header\">\n        <div class=\"icon\"></div>\n        <div class=\"details\">\n            <a mat-icon-button name=\"previous\" [routerLink]=\"['/schedule', 'view', previous]\" [class.disabled]=\"!previous\">\n                <div class=\"left icon\">\n                    <i class=\"material-icons\">keyboard_arrow_left</i>\n                </div>\n            </a>\n            <div class=\"title\">{{ event ? event.title || 'No title' : '????' }}</div>\n            <a mat-icon-button name=\"next\" [routerLink]=\"['/schedule', 'view', next]\" [class.disabled]=\"!next\">\n                <div class=\"right icon\">\n                    <i class=\"material-icons\">keyboard_arrow_right</i>\n                </div>\n            </a>\n        </div>\n        <a mat-icon-button [routerLink]=\"['/schedule']\">\n            <div class=\"icon\">\n                <i class=\"material-icons\">close</i>\n            </div>\n        </a>\n    </div>\n    <div class=\"body\">\n        <div class=\"content\">\n            <ng-container *ngIf=\"loading\">\n                <div class=\"no-item center\">\n                    <div class=\"icon\">\n                        <mat-spinner diameter=\"48\"></mat-spinner>\n                    </div>\n                    <div class=\"text\">\n                        {{ loading }}\n                    </div>\n                </div>\n            </ng-container>\n            <div [class.hide]=\"loading\">\n                <ng-container *ngIf=\"!editing; else edit_form\">\n                    <schedule-event-details [event]=\"event\" (change)=\"onChange($event)\" (loading)=\"loading = $event\"></schedule-event-details>\n                </ng-container>\n                <ng-template #edit_form>\n                    <schedule-event-edit [event]=\"event\" (change)=\"onChange($event)\" (loading)=\"loading = $event\"></schedule-event-edit>\n                </ng-template>\n            </div>\n        </div>\n    </div>\n</div>\n\n"]}