{"version":3,"sources":["webpack:///src/app/shell/explore/explore.component.ts","webpack:///src/app/shell/explore/explore.component.html","webpack:///src/app/shell/explore/explore.module.ts","webpack:///src/app/shell/explore/map-legend/map-legend.component.ts","webpack:///src/app/shell/explore/map-legend/map-legend.component.html","webpack:///src/app/shell/explore/map-view/map-view.component.html","webpack:///src/app/shell/explore/map-view/map-view.component.ts","webpack:///src/app/shell/explore/overlays/booking-modal/booking-modal.component.ts","webpack:///src/app/shell/explore/overlays/booking-modal/booking-modal.component.html","webpack:///src/app/shell/explore/overlays/space-info/space-info.component.ts","webpack:///src/app/shell/explore/overlays/space-info/space-info.component.html","webpack:///src/app/shell/explore/search/search.component.ts","webpack:///src/app/shell/explore/search/search.component.html","webpack:///src/app/shell/explore/status-managers/desk-status.component.ts","webpack:///src/app/shell/explore/status-managers/space-status.component.ts","webpack:///src/app/shell/explore/timeline/timeline.component.ts","webpack:///src/app/shell/explore/timeline/timeline.component.html","webpack:///src/app/shell/explore/zoom-controls/zoom-controls.component.ts","webpack:///src/app/shell/explore/zoom-controls/zoom-controls.component.html"],"names":["ExploreComponent","_service","title","selector","templateUrl","styleUrls","ROUTES","path","component","ExploreModule","forChild","declarations","imports","ExploreMapLegendComponent","legend_items","colours","show_legend","initialised","pipe","_","subscribe","explore_settings","setting","legend","colors","show_group_names","show_legend_group_names","Object","keys","animations","MapViewComponent","_route","_dialog","_org","_users","_spaces","center","x","y","style_map","listeners","features","status_map","listener_map","feature_map","active_level","bld","building","levels","length","id","settings","subscription","queryParamMap","params","has","loadSpaceLocation","get","loadUserLocation","then","user","loading","message","focus","name","err","status","notifyError","level","levelWithID","building_id","buildings","find","open","data","styles","spaces","forEach","space","desks","desk","zones","zone","concat","focus_feature","space_id","map_id","coordinates","content","text","zoom","console","log","processFeatures","user_email","show","locate","location","fixed","diameter","confidence","map_url","booking_details","processStatuses","processListeners","ExploreBookingModalComponent","_dialog_ref","_data","_router","state","date","booking","valueOf","duration","room_ids","bookings","bookable","byRequest","host","current","available_until","is_now","toJSON","localStorage","setItem","JSON","stringify","navigate","queryParams","back","close","form","valid","checkSpaceAvailability","save","success","timeout","changes","space_list","Promise","resolve","reject","available","map","join","was_available","organiser","format","now","isSame","isAfter","ExploreSpaceInfoComponent","_position","processBookings","interval","toLowerCase","split","search$","ExploreSearchComponent","results","paramMap","type","search_results$","query","q","slice","cache","users","filter","search","search_str","item","indexOf","email","result_list","list","sort","a","b","localeCompare","next","autofocus","focusField","input_field","nativeElement","relativeTo","queryParamsHandling","selectOption","ExploreDeskStatusComponent","occupied","free","colour_map","loadDesks","desk_list","id_list","status_list","desk_id","in_use","reserved","push","fill","stroke","status_id","emit","desk_management","systems","system_id","template","ExploreSpaceStatusComponent","active_bookings","listen","loadSpaces","updateSpaceBookings","calculateStatus","clearSpaces","statuses","getStatus","opacity","datetime","startOf","second","current_booking","start","end","add","isBefore","options","rules","rulesFor","hide","auto_approve","bkn_data","is_today","from","unix","to","endOf","show_declined","zone_ids","processSpaceBookings","event","callback","showSpaceInfo","openBookingModal","width","height","notifyInfo","BLOCK_SIZE","MINUTES_IN_DAY","TimelineComponent","_renderer","dateChange","blocks","generateBlocks","checkDate","current_time","is_hour","minute","left","diff","amount","position","_start_position","_box","_container","getBoundingClientRect","MouseEvent","e","onMove","unsub","y_change","time_change","Math","round","old_date","floor","abs","ceil","changeDate","startMove","ZoomControlsComponent","zoomChange","positionChange","min_zoom","max_zoom","zoomIn","zoomOut","reset"],"mappings":"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","file":"shell-explore-explore-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\n@Component({\n    selector: 'app-explore',\n    templateUrl: './explore.component.html',\n    styleUrls: ['./explore.component.scss']\n})\nexport class ExploreComponent extends BaseDirective implements OnInit {\n    /** Whether to show the overlay menu */\n    public show_menu: boolean;\n\n    constructor(private _service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.title = 'Maps';\n    }\n}\n","<div class=\"explore page\">\n    <header class=\"header\">\n        <a-topbar-header [(menu)]=\"show_menu\"></a-topbar-header>\n    </header>\n    <main class=\"body\">\n        <explore-map-view></explore-map-view>\n    </main>\n    <footer class=\"footer\">\n        <a-footer-menu></a-footer-menu>\n    </footer>\n</div>\n<a-overlay-menu [(show)]=\"show_menu\"></a-overlay-menu>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Route } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\n\nimport { ComposerModule } from '@placeos/composer';\nimport { AInteractiveMapModule } from '@acaprojects/ngx-interactive-map';\n\nimport { ExploreComponent } from './explore.component';\nimport { SharedContentModule } from 'src/app/shared/shared.module';\nimport { MapViewComponent } from './map-view/map-view.component';\nimport { ExploreSpaceStatusComponent } from './status-managers/space-status.component';\nimport { ExploreDeskStatusComponent } from './status-managers/desk-status.component';\nimport { ZoomControlsComponent } from './zoom-controls/zoom-controls.component';\nimport { ExploreSpaceInfoComponent } from './overlays/space-info/space-info.component';\nimport { ExploreSearchComponent } from './search/search.component';\nimport { ExploreMapLegendComponent } from './map-legend/map-legend.component';\nimport { TimelineComponent } from './timeline/timeline.component';\nimport { ExploreBookingModalComponent } from './overlays/booking-modal/booking-modal.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: ExploreComponent },\n    { path: ':search_type', component: ExploreComponent }\n];\n\n@NgModule({\n    declarations: [\n        ExploreComponent,\n        MapViewComponent,\n        ExploreSpaceStatusComponent,\n        ExploreDeskStatusComponent,\n        ZoomControlsComponent,\n        ExploreSpaceInfoComponent,\n        ExploreSearchComponent,\n        ExploreMapLegendComponent,\n        TimelineComponent,\n        ExploreBookingModalComponent\n    ],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(ROUTES),\n        SharedContentModule,\n        AInteractiveMapModule,\n        ComposerModule,\n        FormsModule\n    ]\n})\nexport class ExploreModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { MapLegendItem, ExploreMapSettings } from 'src/app/shared/utilities/settings.interfaces';\nimport { ANIMATION_SHOW_CONTRACT_EXPAND } from 'src/app/shared/globals/angular-animations';\n\n@Component({\n    selector: 'a-map-legend',\n    templateUrl: './map-legend.component.html',\n    styleUrls: ['./map-legend.component.scss'],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND]\n})\nexport class ExploreMapLegendComponent extends BaseDirective implements OnInit {\n    /** Mapping of legend item groups */\n    public legend_items: HashMap<MapLegendItem[]> = {};\n    /** Mapping of map colours */\n    public colours: HashMap<string> = {};\n    /** Whether group names should be displayed */\n    public show_group_names: boolean;\n    /** Whether the legend items should be shown */\n    public show_legend = false;\n\n    /** List of group names for legend items */\n    public get group_names(): string[] {\n        return Object.keys(this.legend_items);\n    }\n\n    constructor(private _service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.initialised.pipe(first(_ => _)).subscribe(() => {\n            const explore_settings: ExploreMapSettings =\n                this._service.setting('app.explore') || ({} as any);\n            this.legend_items = explore_settings.legend || {};\n            this.colours = explore_settings.colors || {};\n            this.show_group_names = !!explore_settings.show_legend_group_names;\n        });\n    }\n}\n","<div class=\"map-legend\" *ngIf=\"group_names && group_names.length\">\n    <div class=\"tag\">\n        <div class=\"title\" (tapped)=\"show_legend = !show_legend\">\n            <div class=\"text\" i18n=\"Explore legend label\">{{ show_legend ? 'Hide' : 'Show' }} Legend</div>\n            <app-icon\n                [icon]=\"{\n                    class: 'material-icons',\n                    content: show_legend ? 'arrow_drop_up' : 'arrow_drop_down'\n                }\"\n            ></app-icon>\n        </div>\n    </div>\n    <div\n        class=\"contents\"\n        [@show]=\"show_legend ? 'show' : 'hide'\"\n        [style.padding-bottom]=\"show_legend ? '1em' : ''\"\n        [style.padding-bottom]=\"show_legend ? '.5em' : ''\"\n        [style.overflow]=\"show_legend ? 'hidden auto' : 'hidden'\"\n    >\n        <ul>\n            <ng-container *ngFor=\"let group of group_names\">\n                <li class=\"group\" *ngIf=\"show_group_names\">\n                    <div class=\"bar\"></div>\n                    <div class=\"name\">{{ group }}</div>\n                    <div class=\"bar\"></div>\n                </li>\n                <li class=\"item\" name=\"item.key\" *ngFor=\"let item of legend_items[group]\">\n                    <div class=\"ref\">\n                        <ng-container *ngIf=\"item.icon; else colour_display\">\n                            <app-icon [icon]=\"item.icon\"></app-icon>\n                        </ng-container>\n                        <ng-template #colour_display>\n                            <div\n                                class=\"colour\"\n                                [style.background-color]=\"item.color || colours[item.key]\"\n                            ></div>\n                        </ng-template>\n                    </div>\n                    <div class=\"name\">{{ item.name }}</div>\n                </li>\n            </ng-container>\n        </ul>\n    </div>\n</div>\n","<div class=\"map-view\">\n    <div class=\"header\">\n        <explore-search></explore-search>\n    </div>\n    <div class=\"body\">\n        <div class=\"status-list\" hidden>\n            <i\n                space-status\n                [zone]=\"active_level\"\n                [date]=\"date\"\n                (status)=\"status_map.spaces = $event; processStatuses()\"\n                (listeners)=\"listener_map.spaces = $event; processListeners()\"\n                (features)=\"feature_map.spaces = $event; processFeatures()\"\n            ></i>\n            <i desk-status [zone]=\"active_level\" (status)=\"status_map.desks = $event; processStatuses()\"></i>\n        </div>\n        <a-map-controls overlay [(level)]=\"active_level\" (levelChange)=\"zoom = 1; center = { x: .5, y: .5 }\"></a-map-controls>\n        <button mat-icon-button class=\"rules\" name=\"booking-rules\" *ngIf=\"has_booking_rules\" (tapped)=\"openBookingRulesModal()\">i</button>\n        <a-map\n            [(zoom)]=\"zoom\"\n            [(center)]=\"center\"\n            [src]=\"map_url\"\n            [css]=\"style_map\"\n            [listeners]=\"listeners\"\n            [features]=\"features\"\n            [focus]=\"focus\"\n        >\n            <mat-spinner diameter=\"32\"></mat-spinner>\n        </a-map>\n        <a-zoom-controls overlay [(zoom)]=\"zoom\" [(position)]=\"center\"></a-zoom-controls>\n        <a-map-legend overlay></a-map-legend>\n        <div class=\"message\" *ngIf=\"message\">\n            <div class=\"text\">{{ message }}</div>\n            <div class=\"loader\">\n                <mat-progress-bar mode=\"indeterminate\" *ngIf=\"loading\"></mat-progress-bar>\n            </div>\n        </div>\n    </div>\n    <a-timeline *ngIf=\"settings?.show_timeline\" [(date)]=\"date\"></a-timeline>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MapPinComponent } from '@acaprojects/ngx-interactive-map';\nimport { first } from 'rxjs/operators';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { MapStatus, MapListener } from '../status-managers/status.interfaces';\nimport { HashMap, Point } from 'src/app/shared/utilities/types.utilities';\nimport { MapFeature } from '@acaprojects/ngx-interactive-map/lib/helpers/map.interfaces';\nimport { MapRadiusComponent } from '@acaprojects/ngx-interactive-map';\nimport { ExploreMapSettings } from 'src/app/shared/utilities/settings.interfaces';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    BookingRulesModalComponent,\n    BookingRulesModalData,\n} from 'src/app/overlays/booking-rules-modal/booking-rules-modal.component';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: 'explore-map-view',\n    templateUrl: './map-view.component.html',\n    styleUrls: ['./map-view.component.scss'],\n})\nexport class MapViewComponent extends BaseDirective implements OnInit {\n    /** Zoom level of the map */\n    public zoom: number;\n    /** Center offset of the map */\n    public center: Point = { x: 0.5, y: 0.5 };\n    /** Mapping of elements to CSS styles */\n    public style_map: HashMap<HashMap<string | number>> = {};\n    /** List of listeners for the map */\n    public listeners: MapListener[] = [];\n    /** List of features to render on the map */\n    public features: MapFeature[] = [];\n    /** ID of the active level to display on the map */\n    public active_level: string;\n    /** Mapping of status lists to types */\n    public status_map: { spaces?: MapStatus[]; desks?: MapStatus[]; zones?: MapStatus[] } = {};\n    /** Mapping of listener lists to types */\n    public listener_map: {\n        spaces?: MapListener[];\n        desks?: MapListener[];\n        zones?: MapListener[];\n    } = {};\n    /** Mapping of features lists to types */\n    public feature_map: {\n        spaces?: MapFeature[];\n        desks?: MapFeature[];\n        zones?: MapFeature[];\n    } = {};\n    /** Message to display over the map */\n    public message: string;\n    /** Whether location data is loading */\n    public loading: boolean;\n    /** Point or element on the map to focus */\n    public focus: string | Point;\n    /** Feature on the map to focus */\n    public focus_feature: MapFeature;\n    /** Current shown time */\n    public date: number;\n    /** Application settings for the explore component */\n    public settings: ExploreMapSettings;\n\n    /** URL of the active map */\n    public get map_url(): string {\n        const level = this._org.levelWithID(this.active_level) || { map_url: '' };\n        return level.map_url || '';\n    }\n\n    /** Whether current level has booking rules associated with it */\n    public get has_booking_rules(): boolean {\n        const level = this._org.levelWithID(this.active_level) || {\n            building_id: '',\n        };\n        return !!(this._org.buildings.find((bld) => bld.id === level.building_id) || {})\n            .booking_details;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _route: ActivatedRoute,\n        private _dialog: MatDialog,\n        private _org: OrganisationService,\n        private _users: UsersService,\n        private _spaces: SpacesService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._spaces.initialised.pipe(first((_) => _)).subscribe(() => {\n            /* istanbul ignore else */\n            if (!this.active_level) {\n                const bld = this._org.building;\n                if (bld && bld.levels.length) {\n                    this.active_level = bld.levels[0].id;\n                }\n            }\n            this.settings = this._service.setting('app.explore') || {};\n            this.subscription(\n                'route.query',\n                this._route.queryParamMap.subscribe((params) => {\n                    /* istanbul ignore else */\n                    if (params.has('space')) {\n                        this.loadSpaceLocation(params.get('space'));\n                    }\n                    /* istanbul ignore else */\n                    if (params.has('user')) {\n                        this.loadUserLocation(params.get('user')).then(\n                            (user) => {\n                                this.loading = false;\n                                this.message = this.focus\n                                    ? ''\n                                    : `Unable to locate ${user ? user.name : params.get('user')}`;\n                            },\n                            (err) => {\n                                this.loading = false;\n                                this.message = `Unable to locate user`;\n                                /* istanbul ignore else */\n                                if (err && err.status !== 404) {\n                                    this._service.notifyError(\n                                        `Error loading user location. ${err.message}`\n                                    );\n                                }\n                            }\n                        );\n                    }\n                })\n            );\n        });\n    }\n\n    public openBookingRulesModal() {\n        const level = this._org.levelWithID(this.active_level) || {\n            building_id: '',\n        };\n        const building: Building =\n            this._org.buildings.find((bld) => bld.id === level.building_id) || ({} as any);\n        this._dialog.open<BookingRulesModalComponent, BookingRulesModalData>(\n            BookingRulesModalComponent,\n            {\n                data: {\n                    building,\n                },\n            }\n        );\n    }\n\n    /**\n     * Process changes to statuses\n     */\n    public processStatuses() {\n        const styles: HashMap<HashMap<string | number>> = {};\n        (this.status_map.spaces || []).forEach((space) => (styles[`#${space.id}`] = space.styles));\n        (this.status_map.desks || []).forEach((desk) => (styles[`#${desk.id}`] = desk.styles));\n        (this.status_map.zones || []).forEach((zone) => (styles[`#${zone.id}`] = zone.styles));\n        this.style_map = styles;\n    }\n\n    /**\n     * Process changes to statuses\n     */\n    public processListeners() {\n        let listeners: MapListener[] = [];\n        listeners = listeners.concat(this.listener_map.spaces || []);\n        listeners = listeners.concat(this.listener_map.desks || []);\n        listeners = listeners.concat(this.listener_map.zones || []);\n        this.listeners = listeners;\n    }\n\n    /**\n     * Process changes to statuses\n     */\n    public processFeatures() {\n        let features: MapFeature[] = [];\n        /* istanbul ignore else */\n        if (this.focus_feature) {\n            features = features.concat([this.focus_feature]);\n        }\n        features = features.concat(this.feature_map.spaces || []);\n        features = features.concat(this.feature_map.desks || []);\n        features = features.concat(this.feature_map.zones || []);\n        this.features = features;\n    }\n\n    /**\n     * Load and store location details for the space\n     * @param space_id Engine system ID of the space to locate\n     */\n    private loadSpaceLocation(space_id: string) {\n        const space = this._spaces.find(space_id);\n        /* istanbul ignore else */\n        if (space) {\n            this.message = `Loading location of ${space.name}`;\n            this.loading = true;\n            this.active_level = space.level.id;\n            this.focus = `area-${space.map_id}-status`;\n            this.focus_feature = {\n                id: `area-${space.map_id}-status`,\n                coordinates: null,\n                content: MapPinComponent,\n                data: {\n                    text: space.name,\n                },\n            };\n            this.zoom = 1;\n            this.loading = false;\n            this.message = '';\n            console.log('Focus:', this.focus_feature)\n            this.processFeatures();\n        }\n    }\n\n    /**\n     * Load and store the location for the user\n     * @param user_email Email address of the selected user\n     */\n    private async loadUserLocation(user_email: string) {\n        this.focus = null;\n        this.focus_feature = null;\n        this.loading = true;\n        this.message = `Loading user details...`;\n        const user = await this._users.show(user_email);\n        /* istanbul ignore else */\n        if (!user) return user;\n        this.message = `Loading location for ${user.name}...`;\n        const location = await user.locate();\n        /* istanbul ignore else */\n        if (!location) return user;\n        this.active_level = location.level.id;\n        if (location.fixed) {\n            this.focus = location.id;\n            this.focus_feature = {\n                id: location.id,\n                coordinates: null,\n                content: MapPinComponent,\n                data: {\n                    text: `${user.name} is here`,\n                },\n            };\n            this.zoom = 1;\n        } else {\n            this.focus = {\n                x: location.x,\n                y: location.y,\n            };\n            this.focus_feature = {\n                coordinates: {\n                    x: location.x,\n                    y: location.y,\n                },\n                content: MapRadiusComponent,\n                data: {\n                    text: `${user.name} is here`,\n                    diameter: location.confidence || 5,\n                },\n            };\n        }\n        this.zoom = 1;\n        this.loading = false;\n        this.message = '';\n        this.processFeatures();\n        return user;\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { generateBookingForm, statusFromBookings } from 'src/app/services/data/bookings/booking.utilities';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { UsersService } from 'src/app/services/data/users/users.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nimport * as dayjs from 'dayjs';\n\nexport interface ExploreBookingModalData {\n    /** Unix epoch in ms of the booking start time */\n    date: number;\n    /** Space to make the booking in */\n    space: Space;\n    /** List of bookings for the active space at the current time */\n    bookings: Booking[];\n}\n\n@Component({\n    selector: 'a-explore-booking-modal',\n    templateUrl: './booking-modal.component.html',\n    styleUrls: ['./booking-modal.component.scss']\n})\nexport class ExploreBookingModalComponent extends BaseDirective {\n    /**  */\n    public booking: Booking;\n    /** Form fields for new ad-hoc booking */\n    public form: FormGroup;\n    /** Form contents to display */\n    public state: 'info' | 'form' = 'info';\n    /** Description of the current loading state */\n    public loading: string;\n    /** String of time until next booking */\n    public available_until: string;\n    /** Whether booking was successful */\n    public success: boolean;\n\n    public get is_requesting(): boolean {\n        const booking = this.booking.toJSON(true);\n        return this.space.byRequest({\n            date: this.booking.changes.date || this.booking.date || dayjs(this._data.date).valueOf(),\n            duration: this.booking.changes.duration || this.booking.duration || 30,\n            host: booking.organiser || this._users.current\n        });\n    }\n\n    /** Display string for the selected date */\n    public get date(): string {\n        const date = dayjs(this._data.date);\n        return date.format('DD MMM YYYY');\n    }\n\n    /** Display string for the selected time */\n    public get time(): string {\n        const date = dayjs(this._data.date);\n        return date.format('h:mm A');\n    }\n\n    /** Selected space */\n    public get space(): Space {\n        return this._data.space;\n    }\n\n    /** Whether space is being booked for now */\n    public get is_now(): boolean {\n        const now = dayjs();\n        const date = dayjs(this._data.date);\n        return now.isSame(date, 'm') || now.isAfter(date, 'm');\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ExploreBookingModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: ExploreBookingModalData,\n        private _router: Router,\n        private _service: ApplicationService,\n        private _users: UsersService,\n        private _spaces: SpacesService\n    ) {\n        super();\n        const date = dayjs(this._data.date);\n        this.booking = new Booking({\n            title: 'Ad-Hoc Booking',\n            date: date.valueOf(),\n            duration: 30,\n            room_ids: [this._data.space.id]\n        });\n        const status = statusFromBookings(\n            this._data.bookings,\n            this.space.bookable,\n            this.space.byRequest({\n                date: this._data.date,\n                duration: 30,\n                host: this._users.current\n            }),\n            this._data.date\n        );\n        this.available_until = status.available_until;\n    }\n\n    /**\n     * Move onto the next step of the booking flow\n     */\n    public next() {\n        if (!this.is_now) {\n            const booking = this.booking.toJSON(true);\n            localStorage.setItem('ACA_STAFF.booking_form_data', JSON.stringify({ id: 'ad-hoc', ...booking }));\n            this._router.navigate(['/book', 'space'], { queryParams: { back: '/explore' } });\n            this._dialog_ref.close();\n        } else {\n            this.form = generateBookingForm(this.booking, this._users.current, [\n                'space_list',\n                'organiser',\n                'title',\n                'duration'\n            ]);\n            this.state = 'form';\n        }\n    }\n\n    public book() {\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            this.loading = 'Checking space availability...';\n            this.checkSpaceAvailability().then(\n                () => {\n                    this.booking.save().then(\n                        () => {\n                            this.loading = null;\n                            this.success = true;\n                            this.timeout('close', () => this._dialog_ref.close(), 5000);\n                        },\n                        err => {\n                            this.loading = null;\n                            this._service.notifyError(\n                                `Error ${this.booking.id ? 'updating' : 'creating'} booking: ${err.message || err}}`\n                            );\n                        }\n                    );\n                },\n                err => {\n                    this.loading = null;\n                    this._service.notifyError(`Error checking space availability: ${err.message || err}`);\n                }\n            );\n        }\n    }\n\n    /**\n     * Check whether the selected spaces are available for the selected time period\n     */\n    private checkSpaceAvailability(): Promise<void> {\n        const spaces: Space[] = this.booking.changes.space_list || this.booking.space_list;\n        return new Promise((resolve, reject) => {\n            this._spaces.available({\n                room_ids: spaces.map(space => space.id).join(','),\n                date: this.booking.changes.date || this.booking.date,\n                duration: this.booking.changes.duration || this.booking.duration\n            }).then(\n                space_list => {\n                    for (const space of space_list) {\n                        if (!space.was_available) {\n                            return reject(\n                                `${space.name} is not available at the select time period.`\n                            );\n                        }\n                    }\n                    resolve();\n                },\n                err => reject(err)\n            );\n        });\n    }\n}\n","<ng-container *ngIf=\"!success; else done_state\">\n    <header mat-dialog-title [class.request]=\"is_requesting\">\n        <ng-container *ngIf=\"state !== 'form'\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'add' }\"></app-icon>\n            <div class=\"text\">\n                Book <span>{{ space?.name }}</span> {{ is_now ? 'from now' : 'at ' + time }}\n            </div>\n        </ng-container>\n        <ng-container *ngIf=\"state === 'form'\">\n            <div class=\"text\">\n                Book <span>{{ space?.name }}</span>\n            </div>\n        </ng-container>\n    </header>\n    <mat-dialog-content>\n        <main *ngIf=\"!loading; else load_state\">\n            <ng-container [ngSwitch]=\"state\">\n                <ng-container *ngSwitchCase=\"'form'\">\n                    <a-booking-form [form]=\"form\"></a-booking-form>\n                </ng-container>\n                <ng-container *ngSwitchDefault>\n                    <div class=\"details\">\n                        <p>{{ available_until }}</p>\n                        <p *ngIf=\"is_requesting\" i18n=\"Explore booking request details\">\n                            This space requires approval to reserve\n                        </p>\n                    </div>\n                </ng-container>\n            </ng-container>\n        </main>\n    </mat-dialog-content>\n    <mat-dialog-actions *ngIf=\"!loading\">\n        <footer>\n            <button mat-button class=\"inverse\" mat-dialog-close>Cancel</button>\n            <button mat-button (tapped)=\"state === 'form' ? book() : next()\">\n                {{ state === 'form' ? (is_requesting ? 'Request' : 'Book') : 'Yes' }}\n            </button>\n        </footer>\n    </mat-dialog-actions>\n    <ng-template #load_state>\n        <main>\n            <div class=\"info-block\">\n                <div class=\"icon\">\n                    <mat-spinner diameter=\"48\"></mat-spinner>\n                </div>\n                <div class=\"text\">{{ loading || 'Processing request...' }}</div>\n            </div>\n        </main>\n    </ng-template>\n</ng-container>\n<ng-template #done_state>\n    <header class=\"success\" [class.request]=\"is_requesting\">\n        <div class=\"text\">\n            <ng-container *ngIf=\"is_requesting\" i18n=\"Explore booking request sent\">\n                Request for <span>{{ space?.name }}</span> sent\n            </ng-container>\n            <ng-container *ngIf=\"!is_requesting\" i18n=\"Explore booking made\">\n                Booked <span>{{ space?.name }}</span>\n                {{ is_now ? 'from now' : 'at ' + time }}\n            </ng-container>\n        </div>\n        <app-icon\n            [icon]=\"{ class: 'material-icons', content: is_requesting ? 'send' : 'done' }\"\n        ></app-icon>\n    </header>\n</ng-template>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {\n    MAP_OVERLAY_DATA,\n    MAP_LOCATION\n} from '@acaprojects/ngx-interactive-map';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { statusFromBookings } from 'src/app/services/data/bookings/booking.utilities';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Point } from 'src/app/shared/utilities/types.utilities';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\nexport interface SpaceInfoData {\n    /** Current time to show details for */\n    date?: number;\n    /** Space to show details for */\n    space: Space;\n    /** Active bookings for the space */\n    bookings: Booking[];\n}\n\n@Component({\n    selector: 'a-space-info',\n    templateUrl: './space-info.component.html',\n    styleUrls: ['./space-info.component.scss']\n})\nexport class ExploreSpaceInfoComponent extends BaseDirective implements OnInit {\n    /** Status of the space */\n    public status: string;\n    /** String of time until next booking */\n    public available_until: string;\n\n    /** Named position of the element location on the map */\n    public get quadrant(): 'top left' | 'top right' | 'bottom left' | 'bottom right' {\n        /* istanbul ignore if */\n        if (!this._position) {\n            return 'top left';\n        }\n        if (this._position.y < .5) {\n            if (this._position.x < .5) {\n                return 'top left';\n            } else {\n                return 'top right';\n            }\n        } else {\n            if (this._position.x < .5) {\n                return 'bottom left';\n            } else {\n                return 'bottom right';\n            }\n        }\n    }\n\n    /** CSS class for the current status of the space */\n    public get status_class(): string {\n        return (this.status || '')\n            .toLowerCase()\n            .split(' ')\n            .join('-');\n    }\n\n    /** Space to display on the component */\n    public get space(): Space {\n        /* istanbul ignore if */\n        if (!this._data) {\n            return null;\n        }\n        return this._data.space;\n    }\n\n    /** List of bookings from the space for the currently displayed time */\n    public get bookings(): Booking[] {\n        /* istanbul ignore if */\n        if (!this._data) {\n            return [];\n        }\n        return this._data.bookings || [];\n    }\n\n    constructor(\n        @Inject(MAP_OVERLAY_DATA) private _data: SpaceInfoData,\n        @Inject(MAP_LOCATION) private _position: Point,\n        private _users: UsersService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.processBookings();\n        this.interval('update_bookings', () => this.processBookings(), 60 * 1000);\n    }\n\n    /**\n     * Calculate availability of space based off given bookings\n     */\n    public processBookings(): void {\n        /* istanbul ignore if */\n        if (!this.space) {\n            return;\n        }\n        const status = statusFromBookings(\n            this.bookings,\n            this.space.bookable,\n            this.space.byRequest({\n                date: this._data.date,\n                duration: 30,\n                host: this._users.current\n            }),\n            this._data.date\n        );\n        this.status = status.status;\n        this.available_until = status.available_until;\n    }\n}\n","<div *ngIf=\"space\" [id]=\"space.id\" [class]=\"'space-info ' + quadrant\">\n    <div class=\"arrow\"></div>\n    <div class=\"details\">\n        <div class=\"name\">{{ space.name }}</div>\n        <div class=\"availability\">\n            <div name=\"status\" [class]=\"status_class\">{{ status }}</div>\n            <div name=\"available-until\" *ngIf=\"status_class !== 'not-bookable'\">{{ available_until }}</div>\n        </div>\n    </div>\n</div>","import {\n    Component,\n    OnInit,\n    Input,\n    OnChanges,\n    SimpleChanges,\n    ViewChild,\n    ElementRef\n} from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { catchError, debounceTime, distinctUntilChanged, switchMap, map, first } from 'rxjs/operators';\nimport { Observable, Subject, of } from 'rxjs';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { UsersService } from 'src/app/services/data/users/users.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nimport * as dayjs from 'dayjs';\n\n// TODO: Add handling for role users. e.g. Fire Wardens, First Aiders\n// TODO: Add handling for searching for features\n// TODO: Add handling for searching for desks\n\n@Component({\n    selector: 'explore-search',\n    templateUrl: './search.component.html',\n    styleUrls: ['./search.component.scss']\n})\nexport class ExploreSearchComponent extends BaseDirective implements OnInit, OnChanges {\n    /** Type of data to show when searching */\n    @Input() public type: 'space' | 'user' | 'feature' | 'desk' | 'any';\n    /** Whether external changes are being processed */\n    @Input() public autofocus: boolean;\n    /** Display string for the placeholder of the search input */\n    @Input() public placeholder: string;\n    /** Whether search data is loading */\n    public loading: boolean;\n    /** Search filter value */\n    public search_str: string;\n    /** List of users from an API search */\n    public search_results$: Observable<(User | Space)[]>;\n    /** Post search and filtering list of items */\n    public results: (User | Space)[] = [];\n    /** Subject holding the value of the search */\n    public search$ = new Subject<string>();\n\n    /** Input field reference */\n    @ViewChild('input', { static: false }) private input_field: ElementRef<HTMLInputElement>;\n\n    constructor(\n        private _users: UsersService,\n        private _spaces: SpacesService,\n        private _route: ActivatedRoute,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._spaces.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.subscription(\n                'route.params',\n                this._route.paramMap.subscribe(params => {\n                    if (params.has('search_type')) {\n                        this.type = params.get('search_type') as any;\n                    }\n                })\n            );\n            // Listen for input changes\n            this.search_results$ = this.search$.pipe(\n                debounceTime(300),\n                distinctUntilChanged(),\n                switchMap(query => {\n                    this.loading = true;\n                    return query.length >= 3 && (this.type === 'user' || this.type === 'any')\n                        ? (this._users.query({\n                              q: query.slice(0, 3),\n                              cache: 60 * 1000\n                          }) as Promise<User[]>)\n                        : Promise.resolve([]);\n                }),\n                catchError(err => of([])),\n                map((users: User[]) => {\n                    const spaces = this._spaces.filter(_ => true);\n                    const search = (this.search_str || '').toLowerCase();\n                    const filter = item =>\n                        (item.name || '').toLowerCase().indexOf(search) >= 0 ||\n                        (item.email || '').toLowerCase().indexOf(search) >= 0;\n                    let result_list = [];\n                    if (this.type === 'space') {\n                        result_list = spaces;\n                    } else if (this.type === 'user') {\n                        result_list = users;\n                    } else {\n                        result_list = (spaces as any).concat(users);\n                    }\n                    this.loading = false;\n                    return result_list.filter(filter);\n                })\n            );\n            // Process API results\n            this.subscription(\n                'search_results',\n                this.search_results$.subscribe(list => {\n                    this.results = list;\n                    list.sort((a, b) => (a.name || '').localeCompare(b.name));\n                    console.log('List:', list);\n                })\n            );\n            this.search$.next(`${dayjs().valueOf()}`);\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.autofocus && this.autofocus) {\n            this.focusField();\n        }\n    }\n\n    public focusField() {\n        /* istanbul ignore else */\n        if (this.input_field && this.input_field.nativeElement) {\n            this.input_field.nativeElement.focus();\n        }\n    }\n\n    /**\n     * Update the selected item to display the location for on the map\n     * @param item Space or User to display location for\n     */\n    public selectOption(item: User | Space) {\n        if (item instanceof Space) {\n            this._router.navigate([], {\n                relativeTo: this._route,\n                queryParams: { space: item.id },\n                queryParamsHandling: 'merge'\n            });\n        } else {\n            this._router.navigate([], {\n                relativeTo: this._route,\n                queryParams: { user: item.email },\n                queryParamsHandling: 'merge'\n            });\n        }\n        this.search_str = item.name;\n    }\n}\n","<div class=\"searchbar\" *ngIf=\"type\" tabindex=\"0\" (focus)=\"focusField()\" (click)=\"focusField()\">\n    <div class=\"prefix\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'search' }\"></app-icon>\n    </div>\n    <div class=\"input\">\n        <input\n            #input\n            type=\"text\"\n            [(ngModel)]=\"search_str\"\n            (ngModelChange)=\"search$.next($event)\"\n            [matAutocomplete]=\"auto\"\n            [placeholder]=\"placeholder || 'Search...'\"\n        />\n    </div>\n    <div class=\"suffix\">\n        <mat-spinner *ngIf=\"loading\" diameter=\"32\"></mat-spinner>\n    </div>\n</div>\n<mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"selectOption($event.option.value)\">\n    <mat-option *ngFor=\"let option of results\" [value]=\"option\">\n        <div class=\"name\">{{ option.name }}</div>\n        <div class=\"email\">{{ (option.level ? option.level.name : option.email) }}&nbsp;</div>\n    </mat-option>\n</mat-autocomplete>\n","import { Component, Output, EventEmitter, OnInit, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { MapStatus } from './status.interfaces';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\n@Component({\n    selector: '[desk-status]',\n    template: `\n        <ng-content></ng-content>\n        <div class=\"bindings\" *ngIf=\"system_id\">\n            <!-- BINDINGS -->\n            <i binding [(model)]=\"in_use\" [sys]=\"system_id\" mod=\"DeskManagement\" [bind]=\"zone\" (modelChange)=\"calculateStatus()\"></i>\n            <i binding [(model)]=\"id_list\" [sys]=\"system_id\" mod=\"DeskManagement\" [bind]=\"zone + ':desk_ids'\" (modelChange)=\"calculateStatus()\"></i>\n            <i binding [(model)]=\"reserved\" [sys]=\"system_id\" mod=\"DeskManagement\" [bind]=\"zone + ':reserved'\" (modelChange)=\"calculateStatus()\"></i>\n            <i binding [(model)]=\"occupied\" [sys]=\"system_id\" mod=\"DeskManagement\" [bind]=\"zone + ':occupied_count'\"></i>\n            <i binding [(model)]=\"free\" [sys]=\"system_id\" mod=\"DeskManagement\" [bind]=\"zone + ':free_count'\"></i>\n            <!-- REMOTE EXECUTIONS -->\n            <i binding [(model)]=\"checkin\" [sys]=\"system_id\" mod=\"DeskManagement\" exec=\"manual_checkin\" [params]=\"[checkin]\"></i>\n            <i binding [(model)]=\"cancel\" [sys]=\"system_id\" mod=\"DeskManagement\" exec=\"cancel_reservation\" [params]=\"[]\"></i>\n        </div>\n    `\n})\nexport class ExploreDeskStatusComponent extends BaseDirective implements OnChanges {\n    /** ID of the active level */\n    @Input() public zone: string;\n    /** ID of the desk to checkin */\n    @Input() public checkin: string;\n    /** Emitter for changes to the desk status */\n    @Output() public status = new EventEmitter<MapStatus[]>();\n    /** ID of the desk management system */\n    public system_id: string;\n    /** List of desks for the active level */\n    public id_list: string[];\n    /** List of desk IDs in use on the active level */\n    public in_use: string[];\n    /** List of desk IDs that are reserved on the active level */\n    public reserved: string[];\n    /** Number of occupied desks on the active level */\n    public occupied: number = 0;\n    /** Number of free desks on the active level */\n    public free: number = 0;\n    /** Mapping of colours to statuses */\n    public colour_map: HashMap<string> = {};\n    /** Toggle for cancelling desk reservations */\n    public cancel: boolean;\n\n    constructor(private _service: ApplicationService, private _org: OrganisationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.colour_map = this._service.setting('app.explore.colors') || {};\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.zone) {\n            this.loadDesks();\n        }\n    }\n\n    public calculateStatus() {\n        const desk_list = this.id_list || [];\n        const status_list: MapStatus[] = [];\n        for (const desk_id of desk_list) {\n            const in_use = (this.in_use || []).find(id => id === desk_id);\n            const reserved = (this.reserved || []).find(id => id === desk_id);\n            const status = in_use ? 'unavailable' : reserved ? 'reserved' : 'available';\n            status_list.push({\n                id: desk_id,\n                styles: {\n                    fill: this.colour_map[`desk-${status}`],\n                    stroke: this.colour_map[`desk-${status}-stroke`],\n                },\n                status_id: status\n            });\n        }\n        this.status.emit(status_list);\n    }\n\n    private loadDesks() {\n        const level = this._org.levelWithID(this.zone);\n        if (!level) { return ; }\n        const building = this._org.buildings.find(bld => bld.id === level.building_id);\n        if (!building) { return; }\n        const desk_management = building.systems.desk_management;\n        if (!desk_management) { return; }\n        this.system_id = desk_management;\n    }\n}\n","import {\n    Component,\n    Input,\n    Output,\n    EventEmitter,\n    OnInit,\n    OnDestroy,\n    SimpleChanges,\n    OnChanges,\n} from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { ExploreSpaceInfoComponent } from '../overlays/space-info/space-info.component';\nimport { MapStatus, MapListener, SpaceStatus } from './status.interfaces';\n\nimport * as dayjs from 'dayjs';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    ExploreBookingModalComponent,\n    ExploreBookingModalData,\n} from '../overlays/booking-modal/booking-modal.component';\nimport { MapFeature } from '@acaprojects/ngx-interactive-map/lib/helpers/map.interfaces';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: '[space-status]',\n    template: `\n        <div class=\"bindings\" *ngIf=\"space_list && is_today\">\n            <i\n                *ngFor=\"let space of space_list\"\n                binding\n                [sys]=\"space.id\"\n                mod=\"Bookings\"\n                bind=\"today\"\n                (modelChange)=\"processSpaceBookings(space, $event)\"\n            ></i>\n        </div>\n        <ng-content></ng-content>\n    `,\n})\nexport class ExploreSpaceStatusComponent extends BaseDirective\n    implements OnInit, OnChanges, OnDestroy {\n    /** ID of the zone to grab the spaces */\n    @Input() public zone: string;\n    /** Updates the status based of the given time. Unix epoch in milliseconds */\n    @Input() public date: number;\n    /** Emitter for changes to the space status */\n    @Output() public status = new EventEmitter<MapStatus[]>();\n    /** Emitter for changes to the space status */\n    @Output() public listeners = new EventEmitter<MapListener[]>();\n    /** Emitter for changes to the space status */\n    @Output() public features = new EventEmitter<MapFeature[]>();\n    /** List of spaces to grab the statuses for */\n    public space_list: Space[] = [];\n    /** Mapping of spaces to active bookings */\n    public active_bookings: HashMap<Booking[]> = {};\n    /** Mapping of colours to statuses */\n    public colour_map: HashMap<string> = {};\n\n    /** Whether selected date time is the current day */\n    public get is_today() {\n        return dayjs().isSame(dayjs(this.date), 'd');\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _users: UsersService,\n        private _spaces: SpacesService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.colour_map = this._service.setting('app.explore.colors') || {};\n            this.subscription(\n                'spaces',\n                this._spaces.listen('list').subscribe(() => this.loadSpaces())\n            );\n            this.interval(\n                'update_status',\n                () => {\n                    this.updateSpaceBookings();\n                    this.calculateStatus();\n                },\n                60 * 1000\n            );\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.zone || changes.date) {\n            this.loadSpaces();\n        }\n        if (changes.zone) {\n            this.clearSpaces();\n        }\n    }\n\n    public ngOnDestroy() {\n        this.clearSpaces();\n    }\n\n    /**\n     * Determine the availability statuses for all the spaces in the set zone\n     */\n    public calculateStatus() {\n        this.timeout('process_statuses', () => {\n            const statuses: MapStatus[] = [];\n            for (const space of this.space_list) {\n                const status = this.getStatus(space, this.date);\n                const id =\n                    space.map_id.indexOf('area') < 0 ? `area-${space.map_id}-status` : space.map_id;\n                statuses.push({\n                    id,\n                    styles: {\n                        fill: this.colour_map[`space-${status}`] || '#000',\n                        opacity: 0.6,\n                    },\n                    status_id: status,\n                });\n            }\n            this.status.emit(statuses);\n        });\n    }\n\n    /**\n     * Get the status of the space at the set time\n     * @param space Space to get the status for\n     */\n    private getStatus(space: Space, datetime?: number): SpaceStatus {\n        if (!space.bookable) {\n            return 'not-bookable';\n        }\n        const bookings = this.active_bookings[space.id] || [];\n        const date = dayjs(datetime).startOf('m').second(1);\n        const current_booking = bookings.find((booking) => {\n            const start = dayjs(booking.date).startOf('m');\n            const end = start.add(booking.duration, 'm');\n            return date.isAfter(start, 's') && date.isBefore(end, 'm');\n        });\n        if (current_booking) {\n            return 'unavailable';\n        }\n        const options = {\n            date: dayjs(this.date).valueOf(),\n            duration: 30,\n            host: this._users.current,\n        };\n        const rules = space.rulesFor(options);\n        if (rules.hide) {\n            return 'not-bookable';\n        } else if (!rules.auto_approve) {\n            return 'requestable';\n        }\n        return 'available';\n    }\n\n    /**\n     * Process raw booking data for the given space\n     * @param space Space associated with the bookings\n     * @param data List of booking data\n     */\n    public processSpaceBookings(space: Space, data: HashMap[]) {\n        this.timeout(\n            `space-${space.id}`,\n            () => {\n                const bookings = (data || []).map(\n                    (bkn_data) => new Booking({ ...bkn_data, room_ids: [space.id] })\n                );\n                this.active_bookings[space.id] = bookings;\n                this.calculateStatus();\n            },\n            10\n        );\n    }\n\n    /**\n     * Update the booking data for space on future dates\n     */\n    public updateSpaceBookings() {\n        /* istanbul ignore else */\n        if (this.is_today) {\n            return;\n        }\n        this.timeout(\n            'update_spaces',\n            () => {\n                const date = dayjs(this.date).startOf('d');\n                this._spaces\n                    .query({\n                        from: date.unix(),\n                        to: date.endOf('d').unix(),\n                        show_declined: false,\n                        zone_ids: this.zone,\n                        cache: 10 * 1000,\n                    })\n                    .then((spaces) => {\n                        spaces.forEach((space) =>\n                            this.processSpaceBookings(space, [...space.bookings])\n                        );\n                    });\n            },\n            50\n        );\n    }\n\n    /**\n     * Load listeners for space data\n     */\n    private loadSpaces() {\n        this.space_list = this._spaces.filter((space) => space.zones.indexOf(this.zone) >= 0);\n        const listeners: MapListener[] = [];\n        for (const space of this.space_list) {\n            const id =\n                space.map_id.indexOf('area') < 0 ? `area-${space.map_id}-status` : space.map_id;\n            listeners.push({\n                id,\n                event: 'mouseenter',\n                callback: () => this.showSpaceInfo(space),\n            });\n            listeners.push({\n                id,\n                event: 'mouseleave',\n                callback: () => this.features.emit([]),\n            });\n            if (space.bookable) {\n                listeners.push({\n                    id,\n                    event: 'click',\n                    callback: () => this.openBookingModal(space),\n                });\n            }\n        }\n        this.listeners.emit(listeners);\n        this.updateSpaceBookings();\n        this.calculateStatus();\n    }\n\n    /**\n     * Clear current space and booking data\n     */\n    private clearSpaces() {\n        delete this.active_bookings;\n        this.active_bookings = {};\n    }\n\n    /**\n     * Update features to include space info for a space\n     * @param space Space to show details for\n     */\n    private showSpaceInfo(space: Space) {\n        const id = space.map_id.indexOf('area') < 0 ? `area-${space.map_id}-status` : space.map_id;\n        this.features.emit([\n            {\n                id,\n                coordinates: null,\n                content: ExploreSpaceInfoComponent,\n                data: {\n                    space,\n                    bookings: this.active_bookings[space.id],\n                    date: this.date,\n                },\n            },\n        ]);\n    }\n\n    /**\n     * Open explore booking modal for the given space\n     * @param space Space to make booking for\n     */\n    private openBookingModal(space: Space) {\n        const status = this.getStatus(space, this.date);\n        if (status !== 'unavailable' && status !== 'not-bookable') {\n            this._dialog.open<ExploreBookingModalComponent, ExploreBookingModalData>(\n                ExploreBookingModalComponent,\n                {\n                    width: 'auto',\n                    height: 'auto',\n                    data: {\n                        date: this.date,\n                        space,\n                        bookings: this.active_bookings[space.id],\n                    },\n                }\n            );\n        } else {\n            this._service.notifyInfo(\n                `${space.name} is unavailable at the selected time. Please select another space or time and try again.`\n            );\n        }\n    }\n}\n","import {\n    Component,\n    OnInit,\n    Input,\n    Output,\n    EventEmitter,\n    ElementRef,\n    Renderer2,\n    ViewChild,\n} from '@angular/core';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Identity, Point } from 'src/app/shared/utilities/types.utilities';\n\nimport * as dayjs from 'dayjs';\nimport { eventToPoint } from 'src/app/shared/utilities/general.utilities';\n\nconst BLOCK_SIZE = 30;\nconst MINUTES_IN_DAY = 24 * 60;\n\n@Component({\n    selector: 'a-timeline',\n    templateUrl: './timeline.component.html',\n    styleUrls: ['./timeline.component.scss'],\n})\nexport class TimelineComponent extends BaseDirective implements OnInit {\n    /** Currently selected datetime */\n    @Input() public date: number;\n    /** Emitter for changes to the selected datetime */\n    @Output() public dateChange = new EventEmitter<number>();\n    /** List of time blocks to select */\n    public blocks: Identity[] = [];\n    /** Starting point for time move events */\n    private _start_position: Point;\n    /** Bounding box of the timeline container */\n    private _box: ClientRect;\n\n    /** Whether selected date time is the current day */\n    public get is_today() {\n        return dayjs().isSame(dayjs(this.date), 'd');\n    }\n\n    /** Offset of the current time from the start of the day */\n    public get offset() {\n        const date = dayjs();\n        const diff = date.diff(date.startOf('d'), 'm');\n        return (diff / MINUTES_IN_DAY) * 100;\n    }\n\n    /** Details of the currently selected datetime */\n    public get active_time(): Identity {\n        const date = dayjs(this.date);\n        const diff = date.diff(date.startOf('d'), 'm');\n        return {\n            id: date.isSame(dayjs(), 'd') ? 'Today' : date.format('DD MMM YYYY'),\n            name: date.format('h:mm A'),\n            left: (diff / MINUTES_IN_DAY) * 100,\n        };\n    }\n\n    @ViewChild('container', { static: true }) private _container: ElementRef<HTMLDivElement>;\n\n    constructor(private _renderer: Renderer2) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.blocks = this.generateBlocks();\n        this.interval('check_date', () => this.checkDate(), 15 * 1000);\n    }\n\n    /**\n     * Generate the display blocks for the timeline\n     */\n    public generateBlocks(): Identity[] {\n        const start = dayjs().startOf('d');\n        const end = start.endOf('d');\n        const blocks: Identity[] = [];\n        let current_time = start;\n        while (current_time.isBefore(end)) {\n            const is_hour = current_time.minute() === 0;\n            blocks.push({\n                id: current_time.format('HH:mm'),\n                name: is_hour ? current_time.format('h') : '',\n                is_hour,\n                left: (current_time.diff(start, 'm') / MINUTES_IN_DAY) * 100,\n            });\n            current_time = current_time.add(BLOCK_SIZE, 'm');\n        }\n        return blocks;\n    }\n\n    /**\n     * Change the date of the active date time\n     * @param amount Number of days to change by\n     */\n    public changeDate(amount: number = 1) {\n        let date = dayjs(this.date);\n        date = date.add(amount, 'd');\n        const now = dayjs();\n        this.date = date.isBefore(now, 'm') ? now.valueOf() : date.valueOf();\n        this.dateChange.emit(this.date);\n    }\n\n    public startMove(event: MouseEvent | TouchEvent) {\n        const position = eventToPoint(event);\n        this._start_position = position;\n        this._box = this._container.nativeElement.getBoundingClientRect();\n        const type = event instanceof MouseEvent ? 'mouse' : 'touch';\n        this.subscription(\n            'move',\n            this._renderer.listen('window', `${type}move`, (e) => this.onMove(e))\n        );\n        this.subscription(\n            'end',\n            this._renderer.listen('window', `${type === 'mouse' ? 'mouseup' : 'touchend'}`, (e) => {\n                this.unsub('move');\n                this.unsub('end');\n            })\n        );\n    }\n\n    public onMove(event: MouseEvent | TouchEvent) {\n        const position = eventToPoint(event);\n        const y_change = (this._start_position.x - position.x) / this._box.width;\n        const time_change = -Math.round(y_change * MINUTES_IN_DAY);\n        /* istanbul ignore else */\n        if (time_change !== 0) {\n            let old_date = dayjs(this.date);\n            let date = old_date;\n            date = date.add(time_change, 'm');\n            date = date.minute(Math.floor(Math.round(date.minute() / 5)) * 5);\n            this.date = date.valueOf();\n            this.dateChange.emit(this.date);\n            /* istanbul ignore else */\n            if (Math.abs(old_date.diff(date, 'm')) > 0) {\n                this._start_position = position;\n            }\n            this.checkDate();\n        }\n    }\n\n    /** Check that active datetime is not in the past */\n    private checkDate() {\n        const date = dayjs(this.date);\n        let now = dayjs();\n        now = now.minute(Math.floor(Math.ceil(now.minute() / 5)) * 5);\n        /* istanbul ignore else */\n        if (date.isBefore(now, 'm')) {\n            this.date = now.valueOf();\n            this.dateChange.emit(this.date);\n        }\n    }\n}\n","<div class=\"not-mobile\">\n    <div class=\"timeline\" explore #container>\n        <div\n            class=\"block\"\n            *ngFor=\"let item of blocks\"\n            [class.hour]=\"item.is_hour\"\n            [style.left]=\"item.left + '%'\"\n        >\n            <div class=\"text\">{{ item.name }}</div>\n            <div class=\"bar\"></div>\n        </div>\n    </div>\n    <div class=\"offset\" *ngIf=\"is_today\" [style.width]=\"offset + '%'\"></div>\n    <div class=\"active-time\" [style.left]=\"active_time.left + '%'\">\n        <div class=\"bar\"></div>\n        <div class=\"date\">\n            <button mat-icon-button [disabled]=\"is_today\" (tapped)=\"changeDate(-1)\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_left' }\"></app-icon>\n            </button>\n            <div class=\"text\" (mousedown)=\"startMove($event)\" (touchstart)=\"startMove($event)\">{{ active_time.id }}</div>\n            <button mat-icon-button (tapped)=\"changeDate()\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_right' }\"></app-icon>\n            </button>\n        </div>\n        <div class=\"time\" (mousedown)=\"startMove($event)\" (touchstart)=\"startMove($event)\">{{ active_time.name }}</div>\n        <div class=\"triangle\"></div>\n    </div>\n</div>\n<div class=\"pickers mobile-only\">\n    <a-date-field [(ngModel)]=\"date\" offset=\"top\" (ngModelChange)=\"dateChange.emit($event)\"></a-date-field>\n    <a-time-field [(ngModel)]=\"date\" (ngModelChange)=\"dateChange.emit($event)\"></a-time-field>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { Point } from 'src/app/shared/utilities/types.utilities';\n\n@Component({\n    selector: 'a-zoom-controls',\n    templateUrl: './zoom-controls.component.html',\n    styleUrls: ['./zoom-controls.component.scss']\n})\nexport class ZoomControlsComponent implements OnInit {\n    /** Current zoom level of the map */\n    @Input() public zoom: number;\n    /** Current center position of the map */\n    @Input() public position: Point;\n    /** Emitter for changes to the zoom value */\n    @Output() public zoomChange = new EventEmitter<number>();\n    /** Emitter for changes to the position */\n    @Output() public positionChange = new EventEmitter<Point>();\n\n    public min_zoom: number = 1;\n\n    public max_zoom: number = 10;\n\n    constructor() {}\n\n    public ngOnInit(): void {\n\n    }\n\n    public zoomIn() {\n        this.zoom = (this.zoom || this.min_zoom) * 1.2;\n        if (this.zoom > this.max_zoom) {\n            this.zoom = this.max_zoom;\n        }\n        this.zoomChange.emit(this.zoom);\n    }\n\n    public zoomOut() {\n        this.zoom = (this.zoom || this.min_zoom) * (1 / 1.2);\n        if (this.zoom < this.min_zoom) {\n            this.zoom = this.min_zoom;\n        }\n        this.zoomChange.emit(this.zoom);\n    }\n\n    public reset() {\n        this.zoom = this.min_zoom;\n        this.position = { x: 0.5, y: 0.5 };\n        this.zoomChange.emit(this.zoom);\n        this.positionChange.emit(this.position);\n    }\n}\n","<div class=\"zoom-control\">\n    <button mat-icon-button name=\"zoom-in\" (tapped)=\"zoomIn()\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'add' }\"></app-icon>\n    </button>\n    <button mat-icon-button name=\"zoom-out\" (tapped)=\"zoomOut()\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'remove' }\"></app-icon>\n    </button>\n    <button mat-icon-button name=\"reset\" (tapped)=\"reset()\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'replay' }\"></app-icon>\n    </button>\n</div>\n"]}