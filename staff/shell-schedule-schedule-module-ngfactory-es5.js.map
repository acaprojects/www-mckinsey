{"version":3,"sources":["src/app/shell/schedule/event-list/event-list.component.html","src/app/shell/schedule/event-list/event-list.component.ts","src/app/shell/schedule/schedule.template.html","src/app/shell/schedule/schedule.component.ts","src/app/shell/schedule/schedule.module.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qEAOwB,EAAA,MAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA,OAAA,EAAA,WAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,EAAA,IAAA,EAAA,CAAA,CAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,C,IAAmE,I,EAAA,UAAA,GAAA,EAAA,EAAA,EAAA;AAA9D,YAAA,SAAA,GAAA,UAAA,EAAwB,CAAA,MAAxB,CAAwB,MAAxB,CAAwB,OAAxB,CAAwB,SAAxB,CAAwB,IAAxB;;AAAL,QAAA,GAAA,CAAA,EAAA,EAAA,CAAA,EAAA,CAAA,EAAK,SAAL,CAAA;AAA6B,O;AAAA;;;qEADjC,EAAA,MAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,C,IACI,EAAA,MAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,QAAA,EAAA,IAAA,EAAA,IAAA,EAAA,CAAA,EAAA,IAAA,EAAA,iCAAA,C,GAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,KAAA,EAAA,IAAA,EAAA,CAAA,EAAA,4CAAA,CAAA,MAAA,CAAA,EAAA,CAAA,0CAAA,CAAA,kBAAA,CAAA,EAAA,0CAAA,CAAA,aAAA,CAAA,CAAA,EAAA;AAAA,QAAA,IAAA,EAAA,CAAA,CAAA,EAAA,MAAA;AAAA,OAAA,EAAA,IAAA,C,GAAyE,EAAA,MAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,EAAA,GAAA,CAAA,C,IAC7E,UAAA,GAAA,EAAA,EAAA,EAAA;AADoD,YAAA,SAAA,GAAA,EAAkB,CAAA,MAAlB,CAAkB,OAAlB,CAAkB,SAAlB,CAAkB,KAAlB;;AAAhD,QAAA,GAAA,CAAA,EAAA,EAAA,CAAA,EAAA,CAAA,EAAgD,SAAhD,CAAA;AAAkE,O,EAAA,UAAA,GAAA,EAAA,EAAA,EAAA;AAAO,YAAA,SAAA,GAAA,EAAA,CAAA,MAAA,CAAA,OAAA,CAAA,SAAA,CAAA,KAAA;;AAAA,QAAA,GAAA,CAAA,EAAA,EAAA,CAAA,EAAA,CAAA,EAAA,SAAA,CAAA;AAC7E,O;AAAA;;;qEACA,EAAA,MAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,C,IAAyC,EAAA,MAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,IAAA,EAAA,CAAA,GAAA,EAAA,GAAA,CAAA,C,IAAA,I,EAAA,UAAA,GAAA,EAAA,EAAA,EAAA;AAAA,YAAA,SAAA,GAAA,EAAA,CAAA,MAAA,CAAA,OAAA,CAAA,SAAA,CAAA,KAAA;;AAAA,QAAA,GAAA,CAAA,EAAA,EAAA,CAAA,EAAA,CAAA,EAAA,SAAA,CAAA;AAEzC,O;AAAA;;;qEAOQ,EAAA,MAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA,KAAA,EAAA,4BAAA,CAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,C,IAA4G,I,EAAA,I;AAAA;;;qEAC5G,EAAA,MAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA,KAAA,EAAA,wBAAA,CAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,C,IAAwD,I,EAAA,I;AAAA;;;qEACxD,EAAA,MAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA,OAAA,EAAA,KAAA,CAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,C,IAAuE,I,EAAA,I;AAAA;;;qEAIvE,EAAA,MAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA,OAAA,EAAA,UAAA,CAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,C,IACI,EAAA,MAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA,OAAA,EAAA,MAAA,CAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,C,IAAkB,EAAA,MAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA,KAAA,EAAA,0BAAA,CAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,C,IAClB,EAAA,MAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA,OAAA,EAAA,MAAA,CAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,C,IAAkB,EAAA,MAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,EAAA,EAAA,CAAA,C,IAAA,I,EAAA,UAAA,GAAA,EAAA,EAAA,EAAA;AAAA,YAAA,SAAA,GAAA,EAAA,CAAA,MAAA,CAAA,MAAA,CAAA,OAAA,CAAA,SAAA,CAAA,aAAA,IAAA,iBAAA;;AAAA,QAAA,GAAA,CAAA,EAAA,EAAA,CAAA,EAAA,CAAA,EAAA,SAAA,CAAA;AAA2C,O;AAAA;;;qEAdzE,EAAA,MAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,C,IACI,EAAA,MAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA,OAAA,EAAA,QAAA,CAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,C,IACI,EAAA,MAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA,OAAA,EAAA,MAAA,CAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,C,IAAkB,EAAA,MAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,EAAA,EAAA,CAAA,C,IAClB,EAAA,MAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA,OAAA,EAAA,MAAA,CAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,C,IAAkB,EAAA,MAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,EAAA,EAAA,CAAA,C,IAEtB,EAAA,MAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA,OAAA,EAAA,MAAA,CAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,C,IACI,EAAA,MAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,QAAA,EAAA,IAAA,EAAA,IAAA,EAAA,CAAA,EAAA,IAAA,EAAA,iCAAA,C,GAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,KAAA,EAAA,IAAA,EAAA,CAAA,EAAA,4CAAA,CAAA,MAAA,CAAA,EAAA,CAAA,0CAAA,CAAA,kBAAA,CAAA,EAAA,0CAAA,CAAA,aAAA,CAAA,CAAA,EAAA;AAAA,QAAA,IAAA,EAAA,CAAA,CAAA,EAAA,MAAA;AAAA,OAAA,EAAA,IAAA,C,GACA,EAAA,MAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,QAAA,EAAA,IAAA,EAAA,IAAA,EAAA,CAAA,EAAA,IAAA,EAAA,iCAAA,C,GAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,EAAA,EAAA,KAAA,EAAA,IAAA,EAAA,CAAA,EAAA,4CAAA,CAAA,MAAA,CAAA,EAAA,CAAA,0CAAA,CAAA,kBAAA,CAAA,EAAA,0CAAA,CAAA,aAAA,CAAA,CAAA,EAAA;AAAA,QAAA,IAAA,EAAA,CAAA,CAAA,EAAA,MAAA;AAAA,OAAA,EAAA,IAAA,C,GACA,EAAA,MAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,QAAA,EAAA,IAAA,EAAA,IAAA,EAAA,CAAA,EAAA,IAAA,EAAA,iCAAA,C,GAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,EAAA,EAAA,KAAA,EAAA,IAAA,EAAA,CAAA,EAAA,4CAAA,CAAA,MAAA,CAAA,EAAA,CAAA,0CAAA,CAAA,kBAAA,CAAA,EAAA,0CAAA,CAAA,aAAA,CAAA,CAAA,EAAA;AAAA,QAAA,IAAA,EAAA,CAAA,CAAA,EAAA,MAAA;AAAA,OAAA,EAAA,IAAA,C,GAEJ,EAAA,MAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,EAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA,OAAA,EAAA,SAAA,CAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,C,IACI,EAAA,MAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,EAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA,OAAA,EAAA,MAAA,CAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,C,IAAkB,EAAA,MAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,EAAA,EAAA,IAAA,EAAA,CAAA,EAAA,EAAA,EAAA,CAAA,C,IAClB,EAAA,MAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,QAAA,EAAA,IAAA,EAAA,IAAA,EAAA,CAAA,EAAA,IAAA,EAAA,iCAAA,C,GAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,EAAA,EAAA,KAAA,EAAA,IAAA,EAAA,CAAA,EAAA,4CAAA,CAAA,MAAA,CAAA,EAAA,CAAA,0CAAA,CAAA,kBAAA,CAAA,EAAA,0CAAA,CAAA,aAAA,CAAA,CAAA,EAAA;AAAA,QAAA,IAAA,EAAA,CAAA,CAAA,EAAA,MAAA;AAAA,OAAA,EAAA,IAAA,C,GAAgE,UAAA,GAAA,EAAA,EAAA,EAAA;AAN3D,YAAA,SAAA,GAAA,CAAA,EAAA,CAAA,MAAA,CAAA,OAAA,CAAA,SAAA,CAAA,QAAA,IAAA,EAAA,CAAA,MAAA,CAAA,OAAA,CAAA,SAAA,CAAA,SAAA,IAAA,EAAA,CAAA,MAAA,CAAA,OAAA,CAAA,SAAA,CAAA,SAAA,CAAA,MAAA,GAAA,CAAA;;AAAL,QAAA,GAAA,CAAA,EAAA,EAAA,CAAA,EAAA,CAAA,EAAK,SAAL,CAAA;;AACK,YAAA,SAAA,GAAA,EAAqB,CAAA,MAArB,CAAqB,OAArB,CAAqB,SAArB,CAAqB,QAArB;;AAAL,QAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,CAAA,EAAK,SAAL,CAAA;;AACiB,YAAA,SAAA,GAAA,CAAA,EAAA,CAAA,MAAA,CAAA,OAAA,CAAA,SAAA,CAAA,SAAA,IAAA,EAAA,CAAA,MAAA,CAAA,OAAA,CAAA,SAAA,CAAA,SAAA,CAAA,MAAA,IAAA,CAAA;;AAAjB,QAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,CAAA,EAAiB,SAAjB,CAAA;;AAIsB,YAAA,SAAA,GAAA,EAAA,CAAA,MAAA,CAAA,OAAA,CAAA,SAAA,CAAA,OAAA,IAAA,EAAyC,CAAA,MAAzC,CAAyC,OAAzC,CAAyC,SAAzC,CAAyC,OAAzC,CAAyC,IAAzC;;AAAtB,QAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,CAAA,EAAsB,SAAtB,CAAA;AAA+D,O,EAAA,UAAA,GAAA,EAAA,EAAA,EAAA;AAV7C,YAAA,SAAA,GAAA,EAAA,CAAA,MAAA,CAAA,OAAA,CAAA,SAAA,CAAA,OAAA,GAAA,SAAA,GAAA,EAAA,CAAA,MAAA,CAAA,OAAA,CAAA,SAAA,CAAA,OAAA,IAAA,IAAA,GAAA,IAAA,GAAA,EAAA,CAAA,MAAA,CAAA,OAAA,CAAA,SAAA,CAAA,OAAA,CAAA,KAAA;;AAAA,QAAA,GAAA,CAAA,EAAA,EAAA,CAAA,EAAA,CAAA,EAAA,SAAA,CAAA;;AACA,YAAA,SAAA,GAAA,EAAA,CAAA,MAAA,CAAA,OAAA,CAAA,SAAA,CAAA,OAAA,IAAA,IAAA,GAAA,IAAA,GAAA,EAAA,CAAA,MAAA,CAAA,OAAA,CAAA,SAAA,CAAA,OAAA,CAAA,cAAA;;AAAA,QAAA,GAAA,CAAA,EAAA,EAAA,CAAA,EAAA,CAAA,EAAA,SAAA,CAAA;;AAQA,YAAA,SAAA,GAAA,EAAA,CAAA,MAAA,CAAA,OAAA,CAAA,SAAA,CAAA,KAAA;;AAAA,QAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,CAAA,EAAA,SAAA,CAAA;AAAc,O;AAAA;;;qEApBhD,EAAA,MAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,C,IACI,EAAA,MAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA,WAAA,EAAA,CAAA,CAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,CAAA,CAAA,EAAA,WAAA,EAAA,CAAA,CAAA,EAAA,CAAA,CAAA,EAAA,WAAA,EAAA,IAAA,CAAA,EAAA,CAAA,CAAA,EAAA,UAAA,EAAA,IAAA,CAAA,EAAA,CAAA,CAAA,EAAA,OAAA,EAAA,CAAA,CAAA,EAAA,CAAA,CAAA,EAAA,IAAA,EAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,IAAA,EAAA,cAAA,CAAA,EAAA,CAAA,IAAA,EAAA,WAAA,CAAA,EAAA,CAAA,IAAA,EAAA,YAAA,CAAA,EAAA,CAAA,IAAA,EAAA,SAAA,CAAA,EAAA,CAAA,IAAA,EAAA,UAAA,CAAA,CAAA,EAAA,UAAA,EAAA,EAAA,EAAA,EAAA,MAAA,EAAA;AAAA,YAAA,EAAA,GAAA,IAAA;AAAA,YAAA,GAAA,GAAA,EAAA,CAAA,SAAA;;AAAA,YAAA,gBAAA,EAAA,EAAA;;;;;;;;;;;;;;;;;uBACiG,E;;;AAApD,YAAA,mBAAA,EAAA,EAAA;;uBAAmD,E;;;AADhG,eAAA,EAAA;AAAA,OAAA,EAAA,IAAA,EAAA,IAAA,C,GAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,KAAA,EAAA,IAAA,EAAA,CAAA,EAAA,4CAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA;AAAA,QAAA,QAAA,EAAA,CAAA,CAAA,EAAA,UAAA;AAAA,OAAA,EAAA,IAAA,C,EAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,KAAA,EAAA,IAAA,EAAA,CAAA,EAAA,qDAAA,CAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAAA,C,GAEI,EAAA,MAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,QAAA,EAAA,IAAA,EAAA,IAAA,EAAA,CAAA,EAAA,IAAA,EAAA,iCAAA,C,GAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,MAAA,EAAA,IAAA,EAAA,CAAA,EAAA,4CAAA,CAAA,cAAA,CAAA,EAAA,CAAA,0CAAA,CAAA,kBAAA,CAAA,EAAA,0CAAA,CAAA,aAAA,CAAA,EAAA,4CAAA,CAAA,UAAA,CAAA,CAAA,EAAA;AAAA,QAAA,YAAA,EAAA,CAAA,CAAA,EAAA,cAAA;AAAA,OAAA,EAAA,IAAA,C,GAGA,EAAA,MAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,QAAA,EAAA,IAAA,EAAA,IAAA,EAAA,CAAA,EAAA,IAAA,EAAA,iCAAA,C,GAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,MAAA,EAAA,IAAA,EAAA,CAAA,EAAA,4CAAA,CAAA,cAAA,CAAA,EAAA,CAAA,0CAAA,CAAA,kBAAA,CAAA,EAAA,0CAAA,CAAA,aAAA,CAAA,EAAA,4CAAA,CAAA,UAAA,CAAA,CAAA,EAAA;AAAA,QAAA,YAAA,EAAA,CAAA,CAAA,EAAA,cAAA;AAAA,OAAA,EAAA,IAAA,C,GAGA,EAAA,MAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,QAAA,EAAA,IAAA,EAAA,IAAA,EAAA,CAAA,EAAA,IAAA,EAAA,iCAAA,C,GAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,MAAA,EAAA,IAAA,EAAA,CAAA,EAAA,4CAAA,CAAA,cAAA,CAAA,EAAA,CAAA,0CAAA,CAAA,kBAAA,CAAA,EAAA,0CAAA,CAAA,aAAA,CAAA,EAAA,4CAAA,CAAA,UAAA,CAAA,CAAA,EAAA;AAAA,QAAA,YAAA,EAAA,CAAA,CAAA,EAAA,cAAA;AAAA,OAAA,EAAA,IAAA,C,GAmBA,EAAA,MAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,EAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA,OAAA,EAAA,MAAA,CAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,C,IAAkB,UAAA,GAAA,EAAA,EAAA,EAAA;AA1BlB,YAAA,SAAA,GAAA,EAAsB,CAAA,OAAtB,CAAsB,SAAtB,CAAsB,IAAtB;;AADJ,QAAA,GAAA,CAAA,EAAA,EAAA,CAAA,EAAA,CAAA,EACI,SADJ,CAAA;;AAEkB,YAAA,SAAA,GAAA,MAAA;;AAAd,QAAA,GAAA,CAAA,EAAA,EAAA,CAAA,EAAA,CAAA,EAAc,SAAd,CAAA;;AAGc,YAAA,SAAA,GAAA,UAAA;;AAAd,QAAA,GAAA,CAAA,EAAA,EAAA,CAAA,EAAA,CAAA,EAAc,SAAd,CAAA;;AAGc,YAAA,SAAA,GAAA,OAAA;;AAAd,QAAA,GAAA,CAAA,EAAA,EAAA,CAAA,EAAA,CAAA,EAAc,SAAd,CAAA;AAAqC,O,EAAA,UAAA,GAAA,EAAA,EAAA,EAAA;AARzB,YAAA,SAAA,GAAA,UAAA,EAA6B,CAAA,OAA7B,CAA6B,SAA7B,CAA6B,IAA7B;AAA8B,YAAA,SAAA,GAAA,EAAqC,CAAA,OAArC,CAAqC,SAArC,CAAqC,YAArC;AAAsC,YAAA,SAAA,GAAA,EAAmC,CAAA,OAAnC,CAAmC,SAAnC,CAAmC,WAAnC;AAAoC,YAAA,SAAA,GAAA,CAAA,EAAA,CAAA,OAAA,CAAA,SAAA,IAAA,IAAA,GAAA,IAAA,GAAA,EAAA,CAAA,OAAA,CAAA,SAAA,CAAA,WAAA,MAAA,EAAA,CAAA,OAAA,CAAA,SAAA,IAAA,IAAA,GAAA,IAAA,GAAA,EAAA,CAAA,OAAA,CAAA,SAAA,CAAA,IAAA,CAAA,KAAA,EAAA,CAAA,OAAA,CAAA,SAAA,IAAA,IAAA,GAAA,IAAA,GAAA,EAAA,CAAA,OAAA,CAAA,SAAA,CAAA,KAAA,CAAA,IAAA,EAAgE,CAAA,OAAhE,CAAgE,SAAhE;AAC7F,YAAA,SAAA,GAAA,EAAiB,CAAA,OAAjB,CAAiB,SAAjB,CAAiB,KAAjB;;AAD3B,QAAA,GAAA,CAAA,EAAA,EAAA,CAAA,EAAA,CAAA,EAAgB,SAAhB,EAA8C,SAA9C,EAAoF,SAApF,EAAwH,SAAxH,EAC2B,SAD3B,CAAA;AAC4C,O;AAAA;;;qEA+BxD,EAAA,MAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA,OAAA,EAAA,QAAA,CAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,C,IACI,EAAA,MAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,CAAA,EAAA,SAAA,EAAA,CAAA,CAAA,OAAA,EAAA,MAAA,CAAA,EAAA,CAAA,MAAA,EAAA,aAAA,CAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,oGAAA,CAAA,yBAAA,CAAA,EAAA,oGAAA,CAAA,6BAAA,CAAA,C,GAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,MAAA,EAAA,IAAA,EAAA,CAAA,EAAA,qDAAA,CAAA,kBAAA,CAAA,EAAA,CAAA,0CAAA,CAAA,mBAAA,CAAA,CAAA,EAAA;AAAA,QAAA,IAAA,EAAA,CAAA,CAAA,EAAA,MAAA,CAAA;AAAA,QAAA,KAAA,EAAA,CAAA,CAAA,EAAA,OAAA;AAAA,OAAA,EAAA,IAAA,C,GAAyC,UAAA,GAAA,EAAA,EAAA,EAAA;AAAhC,YAAA,SAAA,GAAA,aAAA;AAAmB,YAAA,SAAA,GAAA,MAAA;;AAA5B,QAAA,GAAA,CAAA,EAAA,EAAA,CAAA,EAAA,CAAA,EAAS,SAAT,EAA4B,SAA5B,CAAA;AAAwC,O,EAAA,I;AAAA;;;;;WArChD,EAAA,MAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,EAAA,EAAA,KAAA,EAAA,CAAA,CAAA,OAAA,EAAA,WAAA,CAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,C,IACI,EAAA,MAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,CAAA,EAAA,6BAAA,EAAA,CAAA,CAAA,OAAA,EAAA,6BAAA,CAAA,EAAA,CAAA,UAAA,EAAA,IAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,EAAA,2CAAA,EAAA,IAAA,CAAA,EAAA,CAAA,CAAA,EAAA,yCAAA,EAAA,IAAA,CAAA,CAAA,EAAA,CAAA,CAAA,IAAA,EAAA,qBAAA,CAAA,CAAA,EAAA,UAAA,EAAA,EAAA,EAAA,EAAA,MAAA,EAAA;AAAA,YAAA,EAAA,GAAA,IAAA;AAAA,YAAA,GAAA,GAAA,EAAiF,CAAA,SAAjF;;AAA2C,YAAA,0BAAA,EAAA,EAAA;;uBAAqC,E;;;AAAhF,eAAA,EAAA;AAAA,OAAA,EAAA,wFAAA,CAAA,iCAAA,CAAA,EAAA,wFAAA,CAAA,qCAAA,CAAA,C,GAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,IAAA,EAAA,IAAA,EAAA,mDAAA,CAAA,eAAA,CAAA,EAAA,IAAA,EAAA,CAAA,mDAAA,CAAA,0BAAA,CAAA,CAAA,C,EAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,MAAA,EAAA,IAAA,EAAA,CAAA,EAAA,mDAAA,CAAA,2BAAA,CAAA,EAAA,EAAA,EAAA;AAAA,QAAA,QAAA,EAAA,CAAA,CAAA,EAAA,UAAA;AAAA,OAAA,EAAA,IAAA,C,EAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,IAAA,EAAA,IAAA,EAAA,mDAAA,CAAA,yBAAA,CAAA,EAAA,mDAAA,CAAA,wCAAA,CAAA,EAAA,CAAA,mDAAA,CAAA,2BAAA,CAAA,CAAA,C,EAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,mDAAA,CAAA,0BAAA,CAAA,EAAA,CAAA,0CAAA,CAAA,YAAA,CAAA,EAAA,0CAAA,CAAA,mBAAA,CAAA,EAAA,0CAAA,CAAA,QAAA,CAAA,EAAA,CAAA,CAAA,EAAA,mDAAA,CAAA,yBAAA,CAAA,CAAA,EAAA,CAAA,CAAA,EAAA,8CAAA,CAAA,gBAAA,CAAA,CAAA,EAAA,mDAAA,CAAA,kBAAA,CAAA,CAAA,EAAA,IAAA,EAAA;AAAA,QAAA,mBAAA,EAAA;AAAA,OAAA,C,GACI,EAAA,MAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA,OAAA,EAAA,SAAA,CAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,C,IACI,EAAA,MAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,QAAA,EAAA,IAAA,EAAA,IAAA,EAAA,CAAA,EAAA,IAAA,EAAA,iCAAA,C,GAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,MAAA,EAAA,IAAA,EAAA,CAAA,EAAA,mDAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,0CAAA,CAAA,kBAAA,CAAA,EAAA,0CAAA,CAAA,aAAA,CAAA,EAAA,0CAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,CAAA,EAAA,mDAAA,CAAA,0BAAA,CAAA,CAAA,EAAA,0CAAA,CAAA,QAAA,CAAA,CAAA,EAAA;AAAA,QAAA,eAAA,EAAA,CAAA,CAAA,EAAA,iBAAA;AAAA,OAAA,EAAA,IAAA,C,EAAc,0CAAA,CAAA,MAAA,CAAA,CAAA,MAAA,EAAA,4CAAA,CAAA,WAAA,CAAA,EAAA,CAAA,0CAAA,CAAA,mBAAA,CAAA,CAAA,C,GAiCtB,EAAA,MAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,QAAA,EAAA,IAAA,EAAA,IAAA,EAAA,CAAA,EAAA,IAAA,EAAA,kCAAA,C,GAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,EAAA,EAAA,KAAA,EAAA,IAAA,EAAA,CAAA,EAAA,4CAAA,CAAA,MAAA,CAAA,EAAA,CAAA,0CAAA,CAAA,kBAAA,CAAA,EAAA,0CAAA,CAAA,aAAA,CAAA,CAAA,EAAA;AAAA,QAAA,IAAA,EAAA,CAAA,CAAA,EAAA,MAAA;AAAA,OAAA,EAAA,IAAA,C,GAA0C,UAAA,GAAA,EAAA,EAAA,EAAA;AAAA,YAAA,GAAA,GAAA,EAAA,CAAA,SAAA;AAnCb,YAAA,SAAA,GAAA,IAAA;;AAA7B,QAAA,GAAA,CAAA,EAAA,EAAA,CAAA,EAAA,CAAA,EAA6B,SAA7B,CAAA;;AAAA,QAAA,GAAA,CAAA,EAAA,EAAA,CAAA,EAAA,CAAA,CAAA;;AAEsB,YAAA,SAAA,GAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,EAAA,EAAA,CAAA,EAAA,CAAA,EAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,EAAA,EAAA,EAAA,EAAA,SAAA,CAAA,GAA2C,CAAA,KAA3C,CAAA,CAAA;;AAAd,QAAA,GAAA,CAAA,EAAA,EAAA,CAAA,EAAA,CAAA,EAAc,SAAd,CAAA;;AAiCY,YAAA,SAAA,GAAA,GAAqB,CAAA,KAArB,CAAqB,OAArB;;AAApB,QAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,CAAA,EAAoB,SAApB,CAAA;AAAyC,O,EAAA,UAAA,GAAA,EAAA,EAAA,EAAA;AAnCzC,YAAA,SAAA,GAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,EAAA,EAAA,CAAA,EAAA,WAAA,KAAA,YAAA;AAAA,YAAA,SAAA,GAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,EAAA,EAAA,CAAA,EAAA,WAAA,KAAA,YAAA;;AAAA,QAAA,GAAA,CAAA,EAAA,EAAA,CAAA,EAAA,CAAA,EAAA,SAAA,EAAA,SAAA,CAAA;AAAiF,O;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACArF,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,4BAAA,EAAA,YAAA;AAAA,aAAA,0BAAA;AAAA,KAAA;AAAA;;;AAAA,QAAA,0CAAA,GAAA,mBAAA;AAAA;AAAA,mDAAA,CAAA;AAAA;;;AAAA,QAAA,mDAAA,GAAA,mBAAA;AAAA;AAAA,sDAAA,CAAA;AAAA;;;AAAA,QAAA,iCAAA,GAAA,mBAAA;AAAA;AAAA,2CAAA,CAAA;AAAA;;;AAAA,QAAA,2DAAA,GAAA,mBAAA;AAAA;AAAA,gDAAA,CAAA;AAAA;;;AAAA,QAAA,kDAAA,GAAA,mBAAA;AAAA;AAAA,uCAAA,CAAA;AAAA;;;AAAA,QAAA,kDAAA,GAAA,mBAAA;AAAA;AAAA,uCAAA,CAAA;AAAA;;;AAAA,QAAA,kCAAA,GAAA,mBAAA;AAAA;AAAA,uCAAA,CAAA;AAAA;;;AAAA,QAAA,0CAAA;AAAA;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,kCAAA,CAAA;AAAA;;;AAAA,QAAA,qDAAA,GAAA,mBAAA;AAAA;AAAA,wDAAA,CAAA;AAAA;;;AAAA,QAAA,gGAAA,GAAA,mBAAA;AAAA;AAAA,qFAAA,CAAA;;QAqCa,0B;;;;;AAcT,0CAAoB,OAApB,EAAiD,OAAjD,EAAmE;AAAA;;AAAA;;AAC/D;AADgB,cAAA,OAAA,GAAA,OAAA;AAA6B,cAAA,OAAA,GAAA,OAAA;AAVjC,cAAA,IAAA,GAAO,kCAAK,GAAG,OAAR,EAAP;AACT,cAAA,KAAA,GAAa,EAAb;AACA,cAAA,KAAA,GAAqC,IAAI,iCAAA,CAAA,iBAAA,CAAJ,CAAoB,EAApB,CAArC;AAQ4D;AAElE;;;;mCAEc;AAAA;;AACX,eAAK,KAAL,CAAW,IAAX,GAAkB,EAAlB;AACA,eAAK,WAAL;AACA,eAAK,KAAL,CAAW,SAAX,CAAqB,UAAA,GAAG;AAAA,mBAAK,MAAI,CAAC,KAAL,CAAW,IAAX,GAAkB,GAAvB;AAAA,WAAxB;AACA,eAAK,YAAL,CACI,UADJ,EAEI,KAAK,OAAL,CAAa,QAAb,CAAsB,MAAtB,CAA6B,UAA7B,EAAyC,UAAA,QAAQ,EAAG;AAChD,gBAAI,IAAI,GAAG,kCAAK,GAAG,OAAR,CAAgB,GAAhB,CAAX;AACA,gBAAM,GAAG,GAAG,IAAI,CAAC,GAAL,CAAS,MAAI,CAAC,KAAL,CAAW,IAApB,EAA0B,GAA1B,CAAZ;AACA,gBAAI,IAAI,GAAe,EAAvB;;AACA,mBAAO,IAAI,CAAC,QAAL,CAAc,GAAd,EAAmB,GAAnB,CAAP,EAAgC,IAAI,GAAG,IAAI,CAAC,GAAL,CAAS,CAAT,EAAY,GAAZ,CAAvC,EAAyD;AACrD,cAAA,IAAI,gCAAO,IAAP,sBAAiB,QAAQ,CAAC,IAAI,CAAC,MAAL,CAAY,YAAZ,CAAD,CAAR,IAAuC,EAAxD,EAAJ;AACH;;AACD,YAAA,IAAI,GAAG,kDAAA,CAAA,OAAA,CAAA,CAAM,MAAN,CAAa,IAAb,EAAmB,UAAnB,CAAP;;AACA,gBAAI,MAAI,CAAC,IAAT,EAAe;AACX,cAAA,IAAI,GAAG,IAAI,CAAC,MAAL,CACH,UAAA,CAAC;AAAA,uBACG,CAAC,CAAC,SAAF,CAAY,KAAZ,KAAsB,MAAI,CAAC,IAAL,CAAU,KAAhC,IACA,CAAC,CAAC,CAAC,CAAC,SAAF,CAAY,IAAZ,CAAiB,UAAA,CAAC;AAAA,yBAAI,CAAC,CAAC,KAAF,KAAY,MAAI,CAAC,IAAL,CAAU,KAA1B;AAAA,iBAAlB,CAFL;AAAA,eADE,CAAP;AAKH;;AACD,YAAA,MAAI,CAAC,KAAL,CAAW,IAAX,GAAkB,IAAlB;;AACA,YAAA,MAAI,CAAC,eAAL;AACH,WAjBD,CAFJ;AAqBA,eAAK,YAAL;AACA,eAAK,QAAL,CAAc,QAAd,EAAwB;AAAA,mBAAM,MAAI,CAAC,cAAL,EAAN;AAAA,WAAxB,EAAqD,KAAK,IAA1D;AACH;;;oCAEkB,O,EAAY;AAAA;;AAC3B,cAAI,OAAO,CAAC,IAAZ,EAAkB;AACd,iBAAK,OAAL,CAAa,aAAb,EAA4B;AAAA,qBAAM,MAAI,CAAC,UAAL,CAAgB,MAAI,CAAC,IAArB,CAAN;AAAA,aAA5B,EAA8D,GAA9D;AACH;;AACD,cAAI,OAAO,CAAC,IAAZ,EAAkB;AACd,iBAAK,cAAL;AACA,iBAAK,QAAL,CAAc,QAAd,EAAwB;AAAA,qBAAM,MAAI,CAAC,cAAL,EAAN;AAAA,aAAxB,EAAqD,KAAK,IAA1D;AACH;AACJ;;;sCAEiB;AACd;;AACA,eAAK,aAAL,CAAmB,QAAnB;AACH;;;uCAEkB;AAAA;;AACf,cAAI,KAAK,KAAL,CAAW,OAAf,EAAwB;AACpB;AACH;;AACD,iBAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAoB;AACnC,YAAA,MAAI,CAAC,KAAL,CAAW,OAAX,GAAqB,IAArB;AACA,gBAAM,IAAI,GAAG,kCAAK,GAAG,OAAR,CAAgB,GAAhB,CAAb;AACA,gBAAM,GAAG,GAAG,IAAI,CAAC,GAAL,CAAS,IAAI,CAAC,GAAL,CAAS,CAAT,EAAY,MAAI,CAAC,KAAL,CAAW,IAAvB,CAAT,EAAuC,GAAvC,CAAZ;;AACA,gBAAM,IAAI,GAAG,MAAI,CAAC,OAAL,CAAa,KAAb,CAAmB,OAAnB,EAAb;;AACA,gBAAI,CAAC,MAAI,CAAC,IAAV,EAAgB;AACZ,cAAA,MAAI,CAAC,IAAL,GAAY,MAAI,CAAC,OAAL,CAAa,KAAb,CAAmB,OAAnB,EAAZ;AACH;;AACD,gBAAM,SAAS,GACX,IAAI,CAAC,SAAL,IAAkB,IAAI,CAAC,SAAL,CAAe,MAAf,GAAwB,CAA1C,IACO,IAAI,CAAC,KADZ,4BACsB,IAAI,CAAC,SAD3B,KAEM,CAAC,IAAI,CAAC,KAAN,CAHV;;AAIA,YAAA,MAAI,CAAC,OAAL,CAAa,QAAb,CAAsB,KAAtB,CAA4B;AACxB,cAAA,KAAK,EAAE,MAAI,CAAC,IAAL,GACD,MAAI,CAAC,IAAL,CAAU,KADT,GAED,SAAS,CAAC,MAAV,CAAiB,UAAC,CAAD,EAAI,CAAJ;AAAA,uBAAU,CAAC,CAAC,GAAG,CAAC,GAAG,GAAP,GAAa,CAAf,IAAoB,CAA9B;AAAA,eAAjB,EAAkD,EAAlD,CAHkB;AAIxB,cAAA,IAAI,EAAE,IAAI,CAAC,IAAL,EAJkB;AAKxB,cAAA,EAAE,EAAE,GAAG,CAAC,IAAJ,EALoB;AAMxB,cAAA,eAAe,EAAE,IAAI,IAAJ,GAAW,iBAAX;AANO,aAA5B,EAOG,IAPH,CAQI,UAAA,KAAK,EAAG;AACJ,cAAA,MAAI,CAAC,OAAL,CAAa,QAAb,CAAsB,KAAtB,CAA4B;AAAE,gBAAA,IAAI,EAAE,IAAI,CAAC,OAAL,EAAR;AAAwB,gBAAA,EAAE,EAAE,GAAG,CAAC,OAAJ;AAA5B,eAA5B;;AACA,cAAA,MAAI,CAAC,OAAL,CAAa,QAAb,CAAsB,UAAtB,CAAiC,kDAAA,CAAA,OAAA,CAAA,CAAM,MAAN,CAAa,KAAb,EAAoB,SAApB,CAAjC;;AACA,cAAA,MAAI,CAAC,KAAL,CAAW,OAAX,GAAqB,KAArB;AACA,cAAA,OAAO;AACV,aAbL,EAcI,UAAA,CAAC,EAAG;AACA,cAAA,MAAI,CAAC,KAAL,CAAW,OAAX,GAAqB,KAArB;AACA,cAAA,MAAM;AACT,aAjBL;AAmBH,WA/BM,CAAP;AAgCH;;;sCAEiB;AAAA;;AACd,eAAK,OAAL,CACI,cADJ,EAEI,YAAK;AACD,gBAAI,CAAC,MAAI,CAAC,QAAV,EAAoB;AAChB,qBAAO,MAAI,CAAC,OAAL,CAAa,UAAb,EAAyB;AAAA,uBAAM,MAAI,CAAC,WAAL,EAAN;AAAA,eAAzB,CAAP;AACH;;AACD,gBAAM,KAAK,GAAG,MAAI,CAAC,QAAL,CAAc,gBAAd,GAAiC,KAA/C;;AACA,gBAAM,GAAG,GAAG,MAAI,CAAC,QAAL,CAAc,gBAAd,GAAiC,GAA7C;;AACA,gBAAM,KAAK,GAAG,MAAI,CAAC,QAAL,CAAc,aAAd,EAAd;;AACA,gBAAM,UAAU,GAAG,kCAAK,GACnB,GADc,CACV,MAAI,CAAC,KAAL,CAAW,UADD,EACa,GADb,EAEd,MAFc,CAEP,YAFO,CAAnB;;AAGA,gBAAM,KAAK,GAAG,MAAI,CAAC,KAAL,CAAW,QAAX,EAAd;;AACA,gBAAI,GAAG,KAAK,KAAZ,EAAmB;AACf,cAAA,MAAI,CAAC,QAAL;AACH,aAFD,MAEO,IACH,MAAI,CAAC,KAAL,CAAW,UAAX,GAAwB,CAAxB,IACA,KAAK,CAAC,OAAN,CAAc,KAAK,CAAC,IAAN,CAAW,UAAA,CAAC;AAAA,qBAAI,CAAC,CAAC,EAAF,KAAS,UAAb;AAAA,aAAZ,CAAd,IAAsD,KAFnD,EAGL;AACE,cAAA,MAAI,CAAC,KAAL;AACH;AACJ,WArBL,EAsBI,GAtBJ;AAwBH;;;mCAEc;AAAA;;AACX,cAAI,KAAK,KAAL,CAAW,OAAf,EAAwB;AACpB;AACH;;AACD,eAAK,KAAL,CAAW,IAAX,IAAmB,CAAnB;AACA,eAAK,QAAL,CAAc,QAAd,EAAwB;AAAA,mBAAM,MAAI,CAAC,cAAL,EAAN;AAAA,WAAxB,EAAqD,IAAI,IAAzD;AACA,eAAK,cAAL;AACH;;;0CAEqB;AAClB,cAAI,KAAK,QAAT,EAAmB;AACf,gBAAM,KAAK,GAAG,IAAI,CAAC,KAAL,CAAW,KAAK,QAAL,CAAc,mBAAd,KAAsC,EAAjD,CAAd;AACA,gBAAM,KAAK,GAAG,KAAK,KAAL,CAAW,QAAX,EAAd;;AACA,gBAAI,KAAK,IAAI,KAAK,CAAC,MAAN,GAAe,CAAxB,IAA6B,KAAK,GAAG,KAAK,CAAC,MAA/C,EAAuD;AACnD,kBAAM,IAAI,GAAG,KAAK,CAAC,KAAD,CAAlB;AACA,qBAAO,IAAI,GAAG,IAAI,CAAC,EAAR,GAAa,IAAxB;AACH;AACJ;;AACD,iBAAO,IAAP;AACH;;;gCAEW;AACR,cAAI,KAAK,KAAL,CAAW,OAAX,IAAsB,KAAK,KAAL,CAAW,UAAX,IAAyB,CAAnD,EAAsD;AAClD;AACH;;AACD,cAAM,KAAK,GAAG,KAAK,QAAL,CAAc,gBAAd,EAAd;AACA,cAAM,GAAG,GAAG,kCAAK,GAAG,OAAR,CAAgB,GAAhB,CAAZ;AACA,cAAM,KAAK,GAAG,KAAK,KAAL,CAAW,QAAX,EAAd;AACA,cAAM,MAAM,GAAG,IAAI,CAAC,KAAL,CAAW,CAAC,KAAK,CAAC,KAAN,GAAc,KAAK,CAAC,GAArB,IAA4B,CAAvC,CAAf;AACA,cAAM,IAAI,GAAG,kCAAK,CAAC,KAAK,IAAI,KAAK,CAAC,MAAD,CAAd,GAAyB,KAAK,CAAC,MAAD,CAAL,CAAc,IAAvC,GAA8C,SAA/C,CAAlB;AACA,eAAK,KAAL,CAAW,UAAX,GAAwB,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,IAAL,CAAU,GAAV,EAAe,GAAf,CAAX,CAAxB;AACA,eAAK,cAAL;AACH;;;iCAEe,E,EAAsD;AAAA;;AAAA,cAA1C,MAA0C,uEAAzB,CAAyB;AAAA,cAAtB,MAAsB,uEAAJ,IAAI;;AAClE,cAAI,CAAC,EAAD,IAAQ,KAAK,KAAL,CAAW,MAAX,IAAqB,EAAE,KAAK,KAAK,KAAL,CAAW,MAAnD,EAA4D;AACxD;AACH;;AACD,cAAM,KAAK,GAAG,KAAK,KAAL,CAAW,QAAX,EAAd;AACA,cAAM,KAAK,GAAG,KAAK,CAAC,SAAN,CAAgB,UAAA,CAAC;AAAA,mBAAI,CAAC,CAAC,EAAF,KAAS,EAAb;AAAA,WAAjB,CAAd;;AACA,cAAI,KAAK,IAAI,CAAb,EAAgB;AACZ,iBAAK,QAAL,CAAc,cAAd,CAA6B,KAAK,GAAG,EAAR,GAAa,MAA1C,EAAkD,MAAM,GAAG,QAAH,GAAc,MAAtE;AACH;;AACD,eAAK,OAAL,CAAa,QAAb,EAAuB;AAAA,mBAAO,MAAI,CAAC,KAAL,CAAW,MAAX,GAAoB,IAA3B;AAAA,WAAvB,EAAyD,IAAzD;AACH;;;mCAEiB,I,EAAY;AAAA;;AAC1B,cAAM,GAAG,GAAG,kCAAK,GAAG,OAAR,CAAgB,GAAhB,CAAZ;AACA,cAAM,GAAG,GAAG,kCAAK,CAAC,IAAD,CAAjB;AACA,cAAI,IAAI,GAAG,GAAG,CAAC,QAAJ,CAAa,CAAb,EAAgB,GAAhB,CAAX;;AACA,cAAI,IAAI,CAAC,QAAL,CAAc,GAAd,EAAmB,GAAnB,CAAJ,EAA6B;AACzB,YAAA,IAAI,GAAG,kCAAK,CAAC,GAAD,CAAZ;AACH;;AACD,cAAI,GAAG,CAAC,IAAJ,CAAS,GAAT,EAAc,GAAd,IAAqB,KAAK,KAAL,CAAW,IAApC,EAA0C;AACtC,iBAAK,KAAL,CAAW,MAAX,GAAoB,GAAG,CAAC,MAAJ,CAAW,YAAX,CAApB;AACA,iBAAK,QAAL,CAAc,GAAG,CAAC,MAAJ,CAAW,YAAX,CAAd;AACH,WAHD,MAGO;AACH,iBAAK,KAAL,CAAW,UAAX,GAAwB,IAAI,CAAC,IAAL,CAAU,GAAV,EAAe,GAAf,CAAxB;AACA,iBAAK,KAAL,CAAW,IAAX,GAAkB,KAAK,KAAL,CAAW,UAAX,GAAwB,CAA1C;AACA,iBAAK,cAAL,GAAsB,IAAtB,CAA2B,YAAK;AAC5B,cAAA,MAAI,CAAC,OAAL,CAAa,QAAb,EAAuB;AAAA,uBAAM,MAAI,CAAC,QAAL,CAAc,GAAG,CAAC,MAAJ,CAAW,YAAX,CAAd,CAAN;AAAA,eAAvB,EAAsE,IAAtE;AACH,aAFD;AAGH;AACJ;;;yCAEoB;AAAA;;AACjB,iBAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAoB;AACnC,gBAAI,MAAI,CAAC,KAAL,CAAW,OAAf,EAAwB;AACpB,qBAAO,MAAM,EAAb;AACH;;AACD,gBAAI,CAAC,MAAI,CAAC,QAAV,EAAoB;AAChB,qBAAO,MAAI,CAAC,OAAL,CAAa,iBAAb,EAAgC;AAAA,uBACnC,MAAI,CAAC,cAAL,GAAsB,IAAtB,CAA2B,OAA3B,EAAoC,MAApC,CADmC;AAAA,eAAhC,CAAP;AAGH;;AACD,gBAAI,CAAC,MAAI,CAAC,IAAV,EAAgB;AACZ,cAAA,MAAI,CAAC,IAAL,GAAY,MAAI,CAAC,OAAL,CAAa,KAAb,CAAmB,OAAnB,EAAZ;AACH;;AACD,gBAAM,KAAK,GAAG,MAAI,CAAC,QAAL,CAAc,gBAAd,EAAd;;AACA,gBAAM,GAAG,GAAG,kCAAK,GAAG,OAAR,CAAgB,GAAhB,CAAZ;;AACA,gBAAM,KAAK,GAAG,MAAI,CAAC,KAAL,CAAW,QAAX,EAAd;;AACA,gBAAM,MAAM,GAAG,IAAI,CAAC,KAAL,CAAW,CAAC,KAAK,CAAC,KAAN,GAAc,KAAK,CAAC,GAArB,IAA4B,CAAvC,CAAf;AACA,gBAAM,IAAI,GAAG,KAAK,IAAI,KAAK,CAAC,MAAD,CAAd,GAAyB,KAAK,CAAC,MAAD,CAAL,CAAc,IAAvC,GAA8C,SAA3D;AACA,gBAAM,KAAK,GAAG,kCAAK,CAAC,IAAD,CAAL,CACT,QADS,CACA,CADA,EACG,GADH,EAET,OAFS,CAED,GAFC,CAAd;AAGA,gBAAM,GAAG,GAAG,kCAAK,CAAC,IAAD,CAAL,CACP,GADO,CACH,CADG,EACA,GADA,EAEP,KAFO,CAED,GAFC,CAAZ;AAGA,gBAAM,IAAI,GAAG,KAAK,CAAC,QAAN,CAAe,GAAf,EAAoB,GAApB,IAA2B,GAAG,CAAC,IAAJ,EAA3B,GAAwC,KAAK,CAAC,IAAN,EAArD;;AACA,gBAAI,kCAAK,CAAC,IAAD,CAAL,CAAY,OAAZ,CAAoB,GAApB,EAAyB,GAAzB,CAAJ,EAAmC;AAC/B;AACH;;AACD,YAAA,MAAI,CAAC,UAAL,CAAgB,KAAK,CAAC,OAAN,EAAhB,EAAiC,GAAG,CAAC,OAAJ,EAAjC;;AACA,gBAAM,IAAI,GAAG,MAAI,CAAC,OAAL,CAAa,KAAb,CAAmB,OAAnB,EAAb;;AACA,gBAAM,SAAS,GACX,IAAI,CAAC,SAAL,IAAkB,IAAI,CAAC,SAAL,CAAe,MAAf,GAAwB,CAA1C,IACO,IAAI,CAAC,KADZ,4BACsB,IAAI,CAAC,SAD3B,KAEM,CAAC,IAAI,CAAC,KAAN,CAHV;AAIA,YAAA,MAAI,CAAC,KAAL,CAAW,OAAX,GAAqB,IAArB;;AACA,YAAA,MAAI,CAAC,OAAL,CAAa,QAAb,CAAsB,KAAtB,CAA4B;AACxB,cAAA,KAAK,EAAE,MAAI,CAAC,IAAL,GACD,MAAI,CAAC,IAAL,CAAU,KADT,GAED,SAAS,CAAC,MAAV,CAAiB,UAAC,CAAD,EAAI,CAAJ;AAAA,uBAAU,CAAC,CAAC,GAAG,CAAC,GAAG,GAAP,GAAa,CAAf,IAAoB,CAA9B;AAAA,eAAjB,EAAkD,EAAlD,CAHkB;AAIxB,cAAA,IAAI,EAAJ,IAJwB;AAKxB,cAAA,EAAE,EAAE,GAAG,CAAC,IAAJ,EALoB;AAMxB,cAAA,eAAe,EAAE,IAAI,IAAJ,GAAW,iBAAX;AANO,aAA5B,EAOG,IAPH,CAQI,UAAA,IAAI,EAAG;AACH,cAAA,MAAI,CAAC,OAAL,CAAa,QAAb,CAAsB,KAAtB,CAA4B;AACxB,gBAAA,IAAI,EAAE,KAAK,CAAC,QAAN,CAAe,GAAf,EAAoB,GAApB,IAA2B,GAAG,CAAC,OAAJ,EAA3B,GAA2C,KAAK,CAAC,OAAN,EADzB;AAExB,gBAAA,EAAE,EAAE,GAAG,CAAC,OAAJ;AAFoB,eAA5B;;AAIA,cAAA,MAAI,CAAC,OAAL,CAAa,QAAb,CAAsB,UAAtB,CAAiC,IAAjC;;AACA,cAAA,MAAI,CAAC,KAAL,CAAW,OAAX,GAAqB,KAArB;AACA,cAAA,OAAO;AACV,aAhBL,EAiBI,UAAA,CAAC,EAAG;AACA,cAAA,MAAI,CAAC,KAAL,CAAW,OAAX,GAAqB,KAArB;AACA,cAAA,MAAM;AACT,aApBL;AAsBH,WAxDM,CAAP;AAyDH;;;mCAEiB,K,EAAe,G,EAAW;AACxC,cAAI,IAAI,GAAG,kCAAK,CAAC,KAAD,CAAhB;AACA,cAAM,EAAE,GAAG,kCAAK,CAAC,GAAD,CAAhB;AACA,cAAM,KAAK,GAAU,KAAK,KAAL,CAAW,QAAX,EAArB;;AACA,iBAAO,IAAI,CAAC,QAAL,CAAc,EAAd,EAAkB,GAAlB,CAAP,EAA+B,IAAI,GAAG,IAAI,CAAC,GAAL,CAAS,CAAT,EAAY,GAAZ,CAAtC,EAAwD;AACpD,gBAAM,IAAI,GAAG,KAAK,CAAC,IAAN,CAAW,UAAA,CAAC;AAAA,qBAAI,CAAC,CAAC,EAAF,KAAS,IAAI,CAAC,MAAL,CAAY,YAAZ,CAAb;AAAA,aAAZ,CAAb;;AACA,gBAAI,IAAJ,EAAU;AACN,cAAA,IAAI,CAAC,OAAL,GAAe,IAAf;AACH;AACJ;AACJ;;;0CAEqB;AAAA;;AAClB,eAAK,OAAL,CACI,SADJ,EAEI,YAAK;AACD,gBAAM,MAAM,GAAG,OAAI,CAAC,QAAL,CAAc,mBAAd,KAAsC,EAArD;;AACA,gBAAM,SAAS,GAAG,OAAI,CAAC,eAAL,EAAlB;;AACA,YAAA,OAAI,CAAC,KAAL,CAAW,IAAX,CAAgB,IAAhB,CAAqB,UAAC,CAAD,EAAI,CAAJ;AAAA,qBAAU,CAAC,CAAC,IAAF,GAAS,CAAC,CAAC,IAArB;AAAA,aAArB;;AACA,gBAAI,IAAI,GAAU,EAAlB;AACA,gBAAM,GAAG,GAAG,kCAAK,EAAjB;AACA,gBAAI,IAAI,GAAG,kCAAK,GAAG,OAAR,CAAgB,GAAhB,CAAX;AACA,gBAAM,GAAG,GAAG,IAAI,CAAC,GAAL,CAAS,OAAI,CAAC,KAAL,CAAW,IAApB,EAA0B,GAA1B,EAA+B,KAA/B,CAAqC,GAArC,CAAZ;;AACA,mBAAO,IAAI,CAAC,QAAL,CAAc,GAAd,EAAmB,GAAnB,KAA2B,IAAI,CAAC,MAAL,CAAY,GAAZ,EAAiB,GAAjB,CAAlC,EAAyD,IAAI,GAAG,IAAI,CAAC,GAAL,CAAS,CAAT,EAAY,GAAZ,CAAhE,EAAkF;AAC9E,cAAA,IAAI,CAAC,IAAL,CAAU;AACN,gBAAA,QAAQ,EAAE,IAAI,CAAC,MAAL,CAAY,YAAZ,CADJ;AAEN,gBAAA,EAAE,EAAE,IAAI,CAAC,MAAL,CAAY,YAAZ,CAFE;AAGN,gBAAA,IAAI,EAAE,MAHA;AAIN,gBAAA,KAAK,EAAE,GAAG,CAAC,MAAJ,CAAW,IAAX,EAAiB,GAAjB,CAJD;AAKN,gBAAA,KAAK,EAAE,IAAI,CAAC,MAAL,CAAY,cAAZ,CALD;AAMN,gBAAA,KAAK,EAAE,IAAI,CAAC,MAAL,CAAY,YAAZ,CAND;AAON,gBAAA,IAAI,EAAE,IAAI,CAAC,OAAL;AAPA,eAAV;AASA,kBAAM,MAAM,GAAG,IAAI,CAAC,MAApB;AAV8E;AAAA;AAAA;;AAAA;AAW9E,qCAAkB,OAAI,CAAC,KAAL,CAAW,IAA7B,8HAAmC;AAAA,sBAAxB,GAAwB;;AAC/B,sBAAI,GAAG,CAAC,IAAJ,IAAY,GAAG,CAAC,IAAJ,KAAa,OAA7B,EAAsC;AAClC;AACH;;AACD,sBAAM,QAAQ,GAAG,kCAAK,CAAC,GAAG,CAAC,QAAJ,IAAgB,GAAG,CAAC,IAArB,CAAtB;;AACA,sBAAI,QAAQ,CAAC,MAAT,CAAgB,IAAhB,EAAsB,GAAtB,CAAJ,EAAgC;AAC5B,wBAAM,IAAI,GAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACH,GADG,EACA;AACN,sBAAA,IAAI,EAAE,GAAG,CAAC,IADJ;AAEN,sBAAA,SAAS,EAAE,GAAG,CAAC,SAFT;AAGN,sBAAA,MAAM,EAAE,GAAG,CAAC,MAHN;AAIN,sBAAA,IAAI,EAAE;AAJA,qBADA,CAAV;AAOA,oBAAA,IAAI,CAAC,IAAL,CAAU,IAAV;AACH;AACJ;AA1B6E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA2B9E,kBAAI,IAAI,CAAC,MAAL,KAAgB,MAApB,EAA4B;AACxB,gBAAA,IAAI,CAAC,IAAL,CAAU;AACN,kBAAA,QAAQ,YAAK,IAAI,CAAC,MAAL,CAAY,YAAZ,CAAL,cADF;AAEN,kBAAA,IAAI,EAAE,UAFA;AAGN,kBAAA,KAAK,EAAE,WAHD;AAIN,kBAAA,IAAI,EAAE,IAAI,CAAC,OAAL;AAJA,iBAAV;AAMH;AACJ;;AACD,YAAA,IAAI,CAAC,OAAL,CAAa,UAAA,GAAG,EAAG;AACf,kBAAM,KAAK,GAAG,GAAG,CAAC,MAAJ,IAAc,EAA5B;AACA,cAAA,GAAG,CAAC,WAAJ,GAAkB,KAAK,CAAC,MAAN,CACd,UAAC,KAAD,EAAQ,IAAR;AAAA,uBAAiB,KAAK,IAAI,GAAG,CAAC,eAAJ,CAAoB,IAApB,MAA8B,UAAxD;AAAA,eADc,EAEd,KAFc,CAAlB;AAIA,cAAA,GAAG,CAAC,YAAJ,GAAmB,KAAK,CAAC,MAAN,CACf,UAAC,KAAD,EAAQ,IAAR;AAAA,uBACI,KAAK,IACL,CAAC,GAAG,CAAC,eAAJ,CAAoB,IAApB,KAA6B,EAA9B,EAAkC,OAAlC,CAA0C,WAA1C,KAA0D,CAD1D,IAEA,CAAC,GAAG,CAAC,eAAJ,CAAoB,IAApB,KAA6B,EAA9B,EAAkC,OAAlC,CAA0C,KAA1C,KAAoD,CAHxD;AAAA,eADe,EAKf,KALe,CAAnB;AAOH,aAbD;AAcA,YAAA,IAAI,CAAC,IAAL,CAAU,UAAC,CAAD,EAAI,CAAJ;AAAA,qBAAU,CAAC,CAAC,CAAC,QAAF,IAAc,CAAC,CAAC,IAAjB,KAA0B,CAAC,CAAC,QAAF,IAAc,CAAC,CAAC,IAA1C,CAAV;AAAA,aAAV;AACA,YAAA,IAAI,GAAG,kDAAA,CAAA,OAAA,CAAA,CAAM,MAAN,CAAa,IAAb,EAAmB,UAAnB,CAAP;;AACA,YAAA,OAAI,CAAC,KAAL,CAAW,IAAX,CAAgB,IAAhB;;AACA,YAAA,OAAI,CAAC,KAAL,CAAW,QAAX,GAAsB,IAAI,CAAC,MAAL,CAAY,UAAA,CAAC;AAAA,qBAAI,CAAC,CAAC,EAAN;AAAA,aAAb,CAAtB;;AACA,gBAAI,OAAI,CAAC,KAAL,CAAW,MAAX,IAAqB,CAAC,CAAC,IAAI,CAAC,IAAL,CAAU,UAAA,CAAC;AAAA,qBAAI,CAAC,CAAC,EAAF,KAAS,OAAI,CAAC,KAAL,CAAW,MAAxB;AAAA,aAAX,CAA3B,EAAuE;AACnE,cAAA,OAAI,CAAC,QAAL,CAAc,OAAI,CAAC,KAAL,CAAW,MAAzB;AACH,aAFD,MAEO;AACH,cAAA,OAAI,CAAC,QAAL,CAAc,SAAd,EAAyB,MAAzB,EAAiC,KAAjC;AACH;AACJ,WArEL,EAsEI,EAtEJ;AAwEH;;;6BAEW,I,EAAS;AAAA;;AACjB,eAAK,KAAL,CAAW,SAAX,GAAuB,KAAK,KAAL,CAAW,QAAX,CAAoB,OAApB,CAA4B,IAA5B,CAAvB;AACA,cAAM,GAAG,GAAG,KAAK,KAAL,CAAW,SAAvB;;AACA,cAAM,GAAG,GAAG,KAAK,OAAL,CAAa,IAAb,CACR,gGAAA,CAAA,gCAAA,CADQ,EAER;AACI,YAAA,SAAS,EAAE,MADf;AAEI,YAAA,QAAQ,EAAE,MAFd;AAGI,YAAA,KAAK,EAAE,MAHX;AAII,YAAA,MAAM,EAAE,MAJZ;AAKI,YAAA,WAAW,EAAE,KALjB;AAMI,YAAA,iBAAiB,EAAE,IANvB;AAOI,YAAA,IAAI,EAAE;AACF,cAAA,OAAO,EAAE,KAAK,OAAL,CAAa,QAAb,CAAsB,IAAtB,CAA2B,IAAI,CAAC,EAAhC,CADP;AAEF,cAAA,WAAW,EACP,KAAK,IAAL,IAAa,KAAK,IAAL,CAAU,KAAV,KAAoB,KAAK,OAAL,CAAa,KAAb,CAAmB,OAAnB,GAA6B,KAHhE;AAIF,cAAA,QAAQ,EAAE,KAAK,IAAL,CAAU,KAJlB;AAKF,cAAA,QAAQ,EAAE,GAAG,KAAK,CALhB;AAMF,cAAA,OAAO,EAAE,GAAG,KAAK,KAAK,KAAL,CAAW,QAAX,CAAoB,MAApB,GAA6B;AAN5C;AAPV,WAFQ,CAAZ;;AAmBA,eAAK,YAAL,CACI,eADJ,EAEI,GAAG,CAAC,iBAAJ,CAAsB,KAAtB,CAA4B,SAA5B,CAAsC,UAAA,KAAK,EAAG;AAC1C,gBAAI,KAAK,CAAC,MAAN,KAAiB,QAArB,EAA+B;AAC3B,sBAAQ,KAAK,CAAC,QAAd;AACI,qBAAK,MAAL;AACI,kBAAA,OAAI,CAAC,WAAL;;AACA;;AACJ,qBAAK,UAAL;AACI,kBAAA,OAAI,CAAC,eAAL;;AACA;AANR;AAQH;AACJ,WAXD,CAFJ;AAeA,UAAA,GAAG,CAAC,WAAJ,GAAkB,SAAlB,CAA4B;AAAA,mBAAM,OAAI,CAAC,KAAL,CAAW,eAAX,CAAN;AAAA,WAA5B;AACH;;;kCAEa;AACV,cAAM,KAAK,GAAG,KAAK,KAAL,CAAW,SAAzB;AACA,eAAK,KAAL,CAAW,QAAX,CAAoB,KAApB,EAA2B,OAA3B,GAAqC,IAArC;AACH;;;wCAEmB;AAChB,eAAK,KAAL,CAAW,QAAX,CAAoB,MAApB,CAA2B,KAAK,KAAL,CAAW,SAAtC,EAAiD,CAAjD;AACH;;;sCAEiB;AACd,cAAM,KAAK,GAAG,KAAK,KAAL,CAAW,SAAzB;;AACA,cAAI,KAAK,GAAG,KAAK,KAAL,CAAW,QAAX,CAAoB,MAApB,GAA6B,CAAzC,EAA4C;AACxC,iBAAK,IAAL,CAAU,KAAK,KAAL,CAAW,QAAX,CAAoB,KAAK,GAAG,CAA5B,CAAV;AACH,WAFD,MAEO;AACH,iBAAK,IAAL,CAAU,KAAK,KAAL,CAAW,QAAX,CAAoB,KAApB,CAAV;AACH;AACJ;;;0CAEqB;AAClB,cAAM,KAAK,GAAG,KAAK,KAAL,CAAW,SAAzB;;AACA,cAAI,KAAK,GAAG,CAAZ,EAAe;AACX,iBAAK,IAAL,CAAU,KAAK,KAAL,CAAW,QAAX,CAAoB,KAAK,GAAG,CAA5B,CAAV;AACH,WAFD,MAEO;AACH,iBAAK,IAAL,CAAU,KAAK,KAAL,CAAW,QAAX,CAAoB,KAApB,CAAV;AACH;AACJ;;;;MApZ2C,2DAAA,CAAA,eAAA,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qECnCpC,EAAA,MAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,CAAA,OAAA,EAAA,cAAA,CAAA,CAAA,EAAA,IAAA,EAAA,CAAA,CAAA,IAAA,EAAA,aAAA,CAAA,CAAA,EAAA,UAAA,EAAA,EAAA,EAAA,EAAA,MAAA,EAAA;AAAA,YAAA,EAAA,GAAA,IAAA;AAAA,YAAA,GAAA,GAAA,EAMC,CAAA,SAND;;AAKI,YAAA,kBAAA,EAAA,EAAA;;uBAA+C,E;;;AALnD,eAAA,EAAA;AAAA,OAAA,EAAA,oGAAA,CAAA,0BAAA,CAAA,EAAA,oGAAA,CAAA,8BAAA,CAAA,C,GAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,IAAA,EAAA,IAAA,EAAA,2CAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,IAAA,EAAA;AAAA,eAAA,CAAA,IAAA,CAAA;AAAA,OAAA,EAAA,CAAA,qDAAA,CAAA,mBAAA,CAAA,CAAA,C,EAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,MAAA,EAAA,IAAA,EAAA,CAAA,EAAA,qDAAA,CAAA,mBAAA,CAAA,EAAA,EAAA,EAAA;AAAA,QAAA,KAAA,EAAA,CAAA,CAAA,EAAA,OAAA,CAAA;AAAA,QAAA,KAAA,EAAA,CAAA,CAAA,EAAA,OAAA,CAAA;AAAA,QAAA,IAAA,EAAA,CAAA,CAAA,EAAA,MAAA;AAAA,OAAA,EAAA;AAAA,QAAA,WAAA,EAAA;AAAA,OAAA,C,GAMC,UAAA,GAAA,EAAA,EAAA,EAAA;AAAA,YAAA,GAAA,GAAA,EAAA,CAAA,SAAA;AAJG,YAAA,SAAA,GAAA,cAAA;AAEA,YAAA,SAAA,GAAA,GAAoB,CAAA,KAApB,CAAoB,IAApB;AADA,YAAA,SAAA,GAAA,GAAc,CAAA,KAAd;;AAHJ,QAAA,GAAA,CAAA,EAAA,EAAA,CAAA,EAAA,CAAA,EAEI,SAFJ,EAII,SAJJ,EAGI,SAHJ,CAAA;AAGkB,O,EAAA,I;AAAA;;;qEAoBtB,EAAA,MAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,CAAA,EAAA,eAAA,EAAA,CAAA,CAAA,OAAA,EAAA,QAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,EAAA,cAAA,EAAA,IAAA,CAAA,EAAA,CAAA,CAAA,EAAA,YAAA,EAAA,IAAA,CAAA,EAAA,CAAA,CAAA,EAAA,aAAA,EAAA,IAAA,CAAA,EAAA,CAAA,CAAA,EAAA,UAAA,EAAA,IAAA,CAAA,EAAA,CAAA,CAAA,EAAA,UAAA,EAAA,IAAA,CAAA,EAAA,CAAA,CAAA,EAAA,YAAA,EAAA,IAAA,CAAA,EAAA,CAAA,CAAA,EAAA,YAAA,EAAA,IAAA,CAAA,CAAA,EAAA,CAAA,CAAA,IAAA,EAAA,eAAA,CAAA,CAAA,EAAA,UAAA,EAAA,EAAA,EAAA,EAAA,MAAA,EAAA;AAAA,YAAA,EAAA,GAAA,IAAA;AAAA,YAAA,GAAA,GAAA,EAMC,CAAA,SAND;;AAKI,YAAA,oBAAA,EAAA,EAAA;;;;uBAA6D,E;;;AALjE,eAAA,EAAA;AAAA,OAAA,EAAA,4GAAA,CAAA,6BAAA,CAAA,EAAA,4GAAA,CAAA,iCAAA,CAAA,C,GAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,MAAA,EAAA,IAAA,EAAA,CAAA,EAAA,yDAAA,CAAA,sBAAA,CAAA,EAAA,EAAA,EAAA;AAAA,QAAA,QAAA,EAAA,CAAA,CAAA,EAAA,UAAA,CAAA;AAAA,QAAA,OAAA,EAAA,CAAA,CAAA,EAAA,SAAA;AAAA,OAAA,EAAA,IAAA,C,EAII,0CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAAA,C,EAJJ,0CAAA,CAAA,MAAA,CAAA,CAAA,IAAA,EAAA,IAAA,EAAA,2CAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,IAAA,EAAA;AAAA,eAAA,CAAA,IAAA,CAAA;AAAA,OAAA,EAAA,CAAA,yDAAA,CAAA,sBAAA,CAAA,CAAA,C,EAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,MAAA,EAAA,IAAA,EAAA,CAAA,EAAA,2CAAA,CAAA,SAAA,CAAA,EAAA,CAAA,CAAA,CAAA,EAAA,IAAA,CAAA,EAAA,CAAA,CAAA,EAAA,IAAA,CAAA,EAAA,CAAA,CAAA,EAAA,IAAA,CAAA,EAAA,CAAA,CAAA,EAAA,2CAAA,CAAA,mBAAA,CAAA,CAAA,CAAA,EAAA;AAAA,QAAA,KAAA,EAAA,CAAA,CAAA,EAAA,OAAA;AAAA,OAAA,EAAA;AAAA,QAAA,MAAA,EAAA;AAAA,OAAA,C,EAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,IAAA,EAAA,IAAA,EAAA,2CAAA,CAAA,WAAA,CAAA,EAAA,IAAA,EAAA,CAAA,2CAAA,CAAA,SAAA,CAAA,CAAA,C,EAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,KAAA,EAAA,IAAA,EAAA,CAAA,EAAA,2CAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,CAAA,CAAA,EAAA,2CAAA,CAAA,WAAA,CAAA,CAAA,CAAA,EAAA,IAAA,EAAA,IAAA,C,GAMC,UAAA,GAAA,EAAA,EAAA,EAAA;AAAA,YAAA,GAAA,GAAA,EAAA,CAAA,SAAA;AAHG,YAAA,SAAA,GAAA,GAAyB,CAAA,KAAzB,CAAyB,MAAzB;;AACA,YAAA,SAAA,GAAA,GAAA,CAAA,EAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAiC,CAAA,KAAjC,CAAiC,KAAjC,CAAA;;AAJJ,QAAA,GAAA,CAAA,EAAA,EAAA,CAAA,EAAA,CAAA,EAGI,SAHJ,EAII,SAJJ,CAAA;;AAEI,YAAA,SAAA,GAAA,GAAA,CAAA,KAAA,CAAA,IAAA,IAAA,IAAA,GAAA,IAAA,GAAA,GAA6B,CAAA,KAA7B,CAA6B,IAA7B,CAA6B,KAA7B;;AAFJ,QAAA,GAAA,CAAA,EAAA,EAAA,CAAA,EAAA,CAAA,EAEI,SAFJ,CAAA;AAEiC,O,EAAA,UAAA,GAAA,EAAA,EAAA,EAAA;AAFjC,YAAA,SAAA,GAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,EAAA,EAAA,CAAA,EAAA,gBAAA;;AAAA,YAAA,SAAA,GAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,EAAA,EAAA,CAAA,EAAA,cAAA;;AAAA,YAAA,SAAA,GAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,EAAA,EAAA,CAAA,EAAA,eAAA;;AAAA,YAAA,SAAA,GAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,EAAA,EAAA,CAAA,EAAA,YAAA;;AAAA,YAAA,SAAA,GAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,EAAA,EAAA,CAAA,EAAA,YAAA;;AAAA,YAAA,SAAA,GAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,EAAA,EAAA,CAAA,EAAA,cAAA;;AAAA,YAAA,SAAA,GAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,EAAA,EAAA,CAAA,EAAA,cAAA;;AAAA,QAAA,GAAA,CAAA,EAAA,EAAA,CAAA,EAAA,CAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,CAAA;AAMC,O;AAAA;;;qEAID,EAAA,MAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA,OAAA,EAAA,QAAA,CAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,C,IACI,EAAA,MAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,CAAA,EAAA,qBAAA,EAAA,EAAA,EAAA,IAAA,EAAA,CAAA,CAAA,IAAA,EAAA,YAAA,CAAA,EAAA,CAAA,IAAA,EAAA,SAAA,CAAA,CAAA,EAAA,UAAA,EAAA,EAAA,EAAA,EAAA,MAAA,EAAA;AAAA,YAAA,EAAA,GAAA,IAAA;AAAA,YAAA,GAAA,GAAA,EAIC,CAAA,SAJD;;AAEI,YAAA,iBAAA,EAAA,EAAA;;uBAA2B,E;;;AAC3B,YAAA,cAAA,EAAA,EAAA;;uBAAkC,E;;;AAHtC,eAAA,EAAA;AAAA,OAAA,EAAA,uEAAA,CAAA,mCAAA,CAAA,EAAA,uEAAA,CAAA,uCAAA,CAAA,C,GAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,MAAA,EAAA,IAAA,EAAA,CAAA,EAAA,6DAAA,CAAA,4BAAA,CAAA,EAAA,CAAA,kDAAA,CAAA,YAAA,CAAA,EAAA,sDAAA,CAAA,WAAA,CAAA,CAAA,EAAA;AAAA,QAAA,IAAA,EAAA,CAAA,CAAA,EAAA,MAAA,CAAA;AAAA,QAAA,IAAA,EAAA,CAAA,CAAA,EAAA,MAAA;AAAA,OAAA,EAAA,IAAA,C,GAIC,UAAA,GAAA,EAAA,EAAA,EAAA;AAAA,YAAA,GAAA,GAAA,EAAA,CAAA,SAAA;AAHG,YAAA,SAAA,GAAA,GAAwB,CAAA,KAAxB,CAAwB,SAAxB;AACA,YAAA,SAAA,GAAA,GAA2B,CAAA,KAA3B,CAA2B,IAA3B,CAA2B,KAA3B;;AAFJ,QAAA,GAAA,CAAA,EAAA,EAAA,CAAA,EAAA,CAAA,EACI,SADJ,EAEI,SAFJ,CAAA;AAE+B,O,EAAA,I;AAAA;;;qEAvC3C,EAAA,MAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,EAAA,EAAA,KAAA,EAAA,CAAA,CAAA,OAAA,EAAA,WAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,EAAA,QAAA,EAAA,IAAA,CAAA,EAAA,CAAA,CAAA,EAAA,kBAAA,EAAA,IAAA,CAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,C,IACI,EAAA,MAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,EAAA,EAAA,KAAA,EAAA,CAAA,CAAA,OAAA,EAAA,QAAA,CAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,C,IACI,EAAA,MAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA,OAAA,EAAA,WAAA,CAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,C,IACI,EAAA,MAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,QAAA,EAAA,IAAA,EAAA,IAAA,EAAA,CAAA,EAAA,IAAA,EAAA,wBAAA,C,GAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,KAAA,EAAA,IAAA,EAAA,CAAA,EAAA,6CAAA,CAAA,MAAA,CAAA,EAAA,CAAA,0CAAA,CAAA,kBAAA,CAAA,EAAA,0CAAA,CAAA,aAAA,CAAA,CAAA,EAAA;AAAA,QAAA,IAAA,EAAA,CAAA,CAAA,EAAA,MAAA;AAAA,OAAA,EAAA,IAAA,C,GAQJ,EAAA,MAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA,OAAA,EAAA,SAAA,CAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,C,IACI,EAAA,MAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,CAAA,CAAA,OAAA,EAAA,QAAA,CAAA,EAAA,CAAA,iBAAA,EAAA,EAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,EAAA,UAAA,EAAA,CAAA,CAAA,EAAA,CAAA,CAAA,EAAA,yBAAA,EAAA,IAAA,CAAA,CAAA,EAAA,CAAA,CAAA,IAAA,EAAA,cAAA,CAAA,EAAA,CAAA,IAAA,EAAA,WAAA,CAAA,EAAA,CAAA,IAAA,EAAA,YAAA,CAAA,EAAA,CAAA,IAAA,EAAA,SAAA,CAAA,EAAA,CAAA,IAAA,EAAA,UAAA,CAAA,CAAA,EAAA,UAAA,EAAA,EAAA,EAAA,EAAA,MAAA,EAAA;AAAA,YAAA,EAAA,GAAA,IAAA;AAAA,YAAA,GAAA,GAAA,EAAA,CAAA,SAAA;;AAAA,YAAA,gBAAA,EAAA,EAAA;;;;;;;;;;;;;;;;;uBAAiG,E;;;AAA1D,YAAA,mBAAA,EAAA,EAAA;;uBAAyD,E;;;AAAhG,eAAA,EAAA;AAAA,OAAA,EAAA,2FAAA,CAAA,kBAAA,CAAA,EAAA,2FAAA,CAAA,sBAAA,CAAA,C,GAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,KAAA,EAAA,IAAA,EAAA,CAAA,EAAA,qDAAA,CAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAAA,C,EAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,MAAA,EAAA,IAAA,EAAA,CAAA,EAAA,sDAAA,CAAA,WAAA,CAAA,EAAA,CAAA,0CAAA,CAAA,YAAA,CAAA,EAAA,mDAAA,CAAA,UAAA,CAAA,EAAA,+CAAA,CAAA,cAAA,CAAA,EAAA,CAAA,CAAA,EAAA,kEAAA,CAAA,uBAAA,CAAA,CAAA,CAAA,EAAA,IAAA,EAAA,IAAA,C,GACI,EAAA,MAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,CAAA,QAAA,EAAA,KAAA,CAAA,EAAA,CAAA,UAAA,EAAA,QAAA,CAAA,EAAA,CAAA,SAAA,EAAA,EAAA,CAAA,CAAA,EAAA,IAAA,EAAA,CAAA,CAAA,IAAA,EAAA,YAAA,CAAA,EAAA,CAAA,IAAA,EAAA,YAAA,CAAA,EAAA,CAAA,IAAA,EAAA,YAAA,CAAA,CAAA,EAAA,UAAA,EAAA,EAAA,EAAA,EAAA,MAAA,EAAA;AAAA,YAAA,EAAA,GAAA,IAAA;AAAA,YAAA,GAAA,GAAA,EAAA,CAAA,SAAA;;AAAA,YAAA,iBAAA,EAAA,EAAA;;;;;;;uBAQC,E;;;AANG,YAAA,iBAAA,EAAA,EAAA;;uBAA6B,E;;;AAFjC,eAAA,EAAA;AAAA,OAAA,EAAA,8EAAA,CAAA,sBAAA,CAAA,EAAA,8EAAA,CAAA,0BAAA,CAAA,C,GAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,EAAA,EAAA,MAAA,EAAA,IAAA,EAAA,CAAA,EAAA,qDAAA,CAAA,kBAAA,CAAA,EAAA,CAAA,0CAAA,CAAA,YAAA,CAAA,EAAA,qDAAA,CAAA,gBAAA,CAAA,CAAA,EAAA;AAAA,QAAA,QAAA,EAAA,CAAA,CAAA,EAAA,UAAA,CAAA;AAAA,QAAA,MAAA,EAAA,CAAA,CAAA,EAAA,QAAA,CAAA;AAAA,QAAA,QAAA,EAAA,CAAA,CAAA,EAAA,UAAA,CAAA;AAAA,QAAA,QAAA,EAAA,CAAA,CAAA,EAAA,UAAA,CAAA;AAAA,QAAA,IAAA,EAAA,CAAA,CAAA,EAAA,MAAA;AAAA,OAAA,EAAA;AAAA,QAAA,UAAA,EAAA;AAAA,OAAA,C,EAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,EAAA,EAAA,MAAA,EAAA,IAAA,EAAA,CAAA,EAAA,oEAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA;AAAA,QAAA,IAAA,EAAA,CAAA,CAAA,EAAA,MAAA;AAAA,OAAA,EAAA,IAAA,C,EAOI,0CAAA,CAAA,MAAA,CAAA,CAAA,EAAA,EAAA;AAAA,QAAA,KAAA,EAAA,CAAA;AAAA,QAAA,OAAA,EAAA;AAAA,OAAA,C,GAKhB,EAAA,MAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,UAAA,EAAA,CAAA,CAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,IAAA,EAAA,wBAAA,C,IAUA,EAAA,MAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,EAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA,OAAA,EAAA,MAAA,CAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,C,IACI,EAAA,MAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,QAAA,EAAA,IAAA,EAAA,IAAA,EAAA,CAAA,EAAA,IAAA,EAAA,wBAAA,C,GAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,EAAA,EAAA,KAAA,EAAA,IAAA,EAAA,CAAA,EAAA,6CAAA,CAAA,MAAA,CAAA,EAAA,CAAA,0CAAA,CAAA,kBAAA,CAAA,EAAA,0CAAA,CAAA,aAAA,CAAA,CAAA,EAAA;AAAA,QAAA,IAAA,EAAA,CAAA,CAAA,EAAA,MAAA;AAAA,OAAA,EAAA,IAAA,C,GAAiF,UAAA,GAAA,EAAA,EAAA,EAAA;AAAA,YAAA,GAAA,GAAA,EAAA,CAAA,SAAA;AAhCzE,YAAA,SAAA,GAAA,GAAA,CAAA,KAAA,IAAA,GAAA,CAAA,KAAA,CAAA,MAAA,GAAA,CAAA;;AADJ,QAAA,GAAA,CAAA,EAAA,EAAA,CAAA,EAAA,CAAA,EACI,SADJ,CAAA;;AAeQ,YAAA,SAAA,GAAA,QAAA;AACA,YAAA,SAAA,GAAA,KAAA;;AAHA,YAAA,SAAA,GAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,EAAA,EAAA,EAAA,CAAA;;AACA,YAAA,SAAA,GAAA,IAAA;AAFA,YAAA,SAAA,GAAA,GAA6B,CAAA,KAA7B,CAA6B,YAA7B;;AAFJ,QAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,CAAA,EAKI,SALJ,EAMI,SANJ,EAGI,SAHJ,EAII,SAJJ,EAEI,SAFJ,CAAA;;AAOI,YAAA,UAAA,GAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,CAAA,EAAA,gBAAA,EAAA,OAAA,CAAA;;AAPJ,QAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,CAAA,EAOI,UAPJ,CAAA;;AAuBY,YAAA,UAAA,GAAA,CAAA,GAAA,CAAA,KAAA,CAAA,QAAA,IAAA,GAAA,CAAA,KAAA,CAAA,QAAA,CAAA,QAAA,KAAA,KAAA;;AAApB,QAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,CAAA,EAAoB,UAApB,CAAA;AAAgF,O,EAAA,UAAA,GAAA,EAAA,EAAA,EAAA;AAAA,YAAA,GAAA,GAAA,EAAA,CAAA,SAAA;AApCjE,YAAA,SAAA,GAAA,GAA6B,CAAA,KAA7B,CAA6B,MAA7B;AAA8B,YAAA,SAAA,GAAA,GAAgD,CAAA,KAAhD,CAAgD,eAAhD;;AAArD,QAAA,GAAA,CAAA,EAAA,EAAA,CAAA,EAAA,CAAA,EAAuB,SAAvB,EAAqD,SAArD,CAAA;;AAYY,YAAA,SAAA,GAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,EAAA,EAAA,CAAA,EAAA,QAAA,IAAA,IAAA;AAAA,YAAA,SAAA,GAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,EAAA,EAAA,CAAA,EAAA,cAAA,KAAA,gBAAA;;AAAA,QAAA,GAAA,CAAA,EAAA,EAAA,CAAA,EAAA,CAAA,EAAA,SAAA,EAAA,SAAA,CAAA;AAAiG,O;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACZ7G,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,mBAAA,EAAA,YAAA;AAAA,aAAA,iBAAA;AAAA,KAAA;AAAA;;;AAAA,QAAA,0CAAA,GAAA,mBAAA;AAAA;AAAA,mDAAA,CAAA;AAAA;;;AAAA,QAAA,4CAAA,GAAA,mBAAA;AAAA;AAAA,uDAAA,CAAA;AAAA;;;AAAA,QAAA,2CAAA,GAAA,mBAAA;AAAA;AAAA,qDAAA,CAAA;AAAA;;;AAAA,QAAA,kDAAA,GAAA,mBAAA;AAAA;AAAA,uCAAA,CAAA;AAAA;;;AAAA,QAAA,2DAAA,GAAA,mBAAA;AAAA;AAAA,gDAAA,CAAA;AAAA;;;AAAA,QAAA,kCAAA,GAAA,mBAAA;AAAA;AAAA,uCAAA,CAAA;AAAA;;;AAAA,QAAA,0CAAA;AAAA;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,kCAAA,CAAA;AAAA;;;;;;;;QAwBa,iB;;;;;AAgBT,iCAAoB,OAApB,EAAiD,KAAjD,EAAsE;AAAA;;AAAA;;AAClE;AADgB,gBAAA,OAAA,GAAA,OAAA;AAA6B,gBAAA,KAAA,GAAA,KAAA;AAf1C,gBAAA,KAAA,GAAa,EAAb;AAEP;;AACO,gBAAA,KAAA,GAAiB,EAAjB;;AAKC,gBAAA,YAAA,GAAe,UAAC,KAAD;AAAA,iBAAW,UAAC,IAAD,EAAS;AACvC,gBAAM,QAAQ,GAAmC,QAAK,OAAL,CAAa,QAAb,CAAsB,GAAtB,CAA0B,UAA1B,CAAjD;;AADuC;AAAA;AAAA;;AAAA;AAEvC,oCAAgB,KAAhB,mIAAuB;AAAA,oBAAZ,CAAY;;AACnB,wBAAK,OAAL,CAAa,QAAb,CAAsB,KAAtB,CAA4B;AAAE,kBAAA,IAAI,EAAE;AAAR,iBAA5B;AACH;AAJsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAK1C,WALsB;AAAA,SAAf;;AAO8D;AAErE;;;;mCAEc;AACX,eAAK,KAAL,CAAW,KAAX,GAAmB,EAAnB;AACA,eAAK,IAAL;AACH;;;+BAEU;AAAA;;AACP,cAAI,CAAC,KAAK,OAAL,CAAa,KAAb,EAAL,EAA2B;AACvB,mBAAO,UAAU,CAAC;AAAA,qBAAM,OAAI,CAAC,IAAL,EAAN;AAAA,aAAD,EAAoB,GAApB,CAAjB;AACH;;AACD,eAAK,KAAL,CAAW,SAAX,GAAuB,KAAK,OAAL,CAAa,QAAb,CAAsB,GAAtB,CAA0B,qBAA1B,KAAoD,EAA3E;AACA,eAAK,KAAL,CAAW,WAAX,GAAyB,KAAK,OAAL,CAAa,QAAb,CAAsB,GAAtB,CAA0B,qBAA1B,CAAzB;AACA,eAAK,KAAL,CAAW,MAAX,GAAoB,KAAK,OAAL,CAAa,QAAb,CAAsB,GAAtB,CAA0B,kBAA1B,KAAiD,KAArE;AACA,eAAK,KAAL,CAAW,QAAX,GAAsB,KAAK,OAAL,CAAa,QAAb,CAAsB,GAAtB,CAA0B,cAA1B,CAAtB;;AACA,cAAI,KAAK,KAAL,CAAW,QAAX,CAAoB,MAApB,KAA+B,KAAnC,EAA0C;AACtC,iBAAK,KAAL,CAAW,MAAX,GAAoB,KAApB;AACH;;AACD,eAAK,OAAL,CAAa,GAAb,CAAiB,qBAAjB,EAAwC,CAAxC;AACA,eAAK,KAAL,CAAW,IAAX,GAAkB,kCAAK,GAAG,IAAR,EAAlB;AACA,eAAK,YAAL;AACA,eAAK,KAAL,CAAW,eAAX,GAA6B,KAA7B;AACA,eAAK,OAAL,CAAa,SAAb,CAAuB,MAAvB,CAA8B,UAA9B;AACA,eAAK,OAAL,CAAa,SAAb,CAAuB,IAAvB,CAA4B,WAA5B;AACA,eAAK,KAAL,CAAW,KAAX,GAAmB,kCAAK,GAAG,OAAR,EAAnB;AACA,eAAK,KAAL,CAAW,IAAX,GAAkB,KAAK,OAAL,CAAa,KAAb,CAAmB,OAAnB,EAAlB;AACA,eAAK,KAAL,CAAW,IAAX,GAAkB,CAAlB;AACA,eAAK,KAAL,GAAa,CAAC,KAAK,KAAL,CAAW,IAAZ,CAAb;AApBO;AAAA;AAAA;;AAAA;AAqBP,kCAAoB,KAAK,KAAL,CAAW,IAAX,CAAgB,SAApC,mIAA+C;AAAA,kBAApC,KAAoC;AAC3C,kBAAI,IAAI,GAAG,KAAK,OAAL,CAAa,KAAb,CAAmB,IAAnB,CAAwB,KAAxB,CAAX;;AACA,kBAAI,IAAJ,EAAU;AACN,qBAAK,KAAL,CAAW,IAAX,CAAgB,IAAhB;AACH,eAFD,MAEO;AACH,qBAAK,OAAL,CAAa,KAAb,CAAmB,IAAnB,CAAwB,KAAxB,EAA+B,IAA/B,CAAoC,UAAC,CAAD,EAAM;AACtC,sBAAI,OAAI,CAAC,IAAL,IAAa,CAAC,CAAC,KAAF,KAAY,OAAI,CAAC,IAAlC,EAAwC;AACpC,oBAAA,OAAI,CAAC,KAAL,CAAW,IAAX,GAAkB,OAAI,CAAC,KAAL,CAAW,MAA7B;AACA,oBAAA,OAAI,CAAC,KAAL,CAAW,SAAX,GAAuB,CAAvB;AACH;;AACD,kBAAA,OAAI,CAAC,KAAL,CAAW,IAAX,CAAgB,CAAhB;AACH,iBAND;AAOH;AACJ;AAlCM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAmCP,eAAK,KAAL,CAAW,OAAX,GAAqB,KAAK,KAAL,CAAW,IAAX,CAAgB,OAArC;AACA,eAAK,KAAL,CAAW,YAAX,GAA0B,KAA1B;AACA,cAAM,IAAI,GAAG,KAAK,KAAL,CAAW,IAAX,GAAkB,KAAK,KAAL,CAAW,IAAX,CAAgB,KAAlC,GAA0C,SAAvD;AACA,eAAK,KAAL,CAAW,QAAX,GAAsB,kCAAK,GAAG,MAAR,CAAe,kCAAK,CAAC,IAAD,CAApB,EAA4B,GAA5B,CAAtB;AACA,eAAK,YAAL,CAAkB,OAAlB,EAA2B,KAAK,KAAL,CAAW,aAAX,CAAyB,SAAzB,CAAmC,UAAC,MAAD,EAAW;AACrE,gBAAI,MAAM,CAAC,GAAP,CAAW,MAAX,CAAJ,EAAwB;AACpB,kBAAM,KAAK,GAAG,MAAM,CAAC,GAAP,CAAW,MAAX,CAAd;;AACA,kBAAM,KAAK,GAAG,OAAI,CAAC,KAAL,CAAW,SAAX,CAAqB,UAAA,CAAC;AAAA,uBAAI,CAAC,CAAC,KAAF,KAAY,KAAhB;AAAA,eAAtB,CAAd;;AACA,cAAA,OAAI,CAAC,KAAL,CAAW,IAAX,GAAkB,KAAK,GAAG,CAAR,GAAY,KAAZ,GAAoB,CAAtC;AACA,cAAA,OAAI,CAAC,KAAL,CAAW,SAAX,GAAuB,OAAI,CAAC,KAAL,CAAW,OAAI,CAAC,KAAL,CAAW,IAAtB,CAAvB;AACA,cAAA,OAAI,CAAC,IAAL,GAAY,KAAZ;AACH;AACJ,WAR0B,CAA3B;AASH;;;uCAEkB;AAAA;;AACf,cAAM,IAAI,GAAG,kCAAK,GAAG,OAAR,CAAgB,GAAhB,CAAb;AACA,eAAK,KAAL,CAAW,IAAX,GAAkB,KAAK,KAAL,CAAW,KAAX,CAAiB,IAAjB,CAAsB,UAAA,CAAC;AAAA,mBAAI,kCAAK,CAAC,CAAC,CAAC,KAAH,CAAL,CAAe,MAAf,CAAsB,IAAtB,EAA4B,GAA5B,CAAJ;AAAA,WAAvB,KAAgE,EAAlF;AACA,eAAK,OAAL,CAAa,QAAb,CAAsB,MAAtB,aAAyE,UAAC,IAAD,EAAS;AAC9E,YAAA,OAAI,CAAC,OAAL,CAAa,iBAAb,EAAgC;AAAA,qBAAM,OAAI,CAAC,eAAL,CAAqB,IAArB,CAAN;AAAA,aAAhC,EAAkE,GAAlE;AACH,WAFD;AAGH;;;gCAEc,I,EAAY;AACvB,eAAK,KAAL,CAAW,IAAX,GAAkB;AAAE,YAAA,KAAK,EAAE;AAAT,WAAlB;AACH;;;mCAEiB,K,EAAa;AAC3B,cAAM,QAAQ,GAAG,KAAK,KAAL,CAAW,IAAX,GAAkB,KAAK,KAAL,CAAW,IAAX,CAAgB,KAAlC,GAA0C,SAA3D;AACA,cAAM,IAAI,GAAG,kCAAK,CAAC,QAAD,CAAlB;AACA,UAAA,IAAI,CAAC,GAAL,CAAS,KAAT,EAAgB,GAAhB;AACA,eAAK,OAAL,CAAa,IAAI,CAAC,OAAL,EAAb;AACH;;;oCAEe;AACZ,eAAK,OAAL,CAAa,kCAAK,GAAG,OAAR,EAAb;AACH;;;mCAEiB,C,EAAM;AACpB,eAAK,KAAL,CAAW,eAAX,GAA6B,CAA7B;AACH;;;qCAEmB,S,EAAkB;AAClC,eAAK,KAAL,CAAW,KAAX,GAAmB,EAAnB;AACA,cAAI,IAAI,GAAG,kCAAK,CAAC,SAAD,CAAL,CAAiB,OAAjB,CAAyB,GAAzB,CAAX;AACA,cAAM,GAAG,GAAG,IAAI,CAAC,KAAL,CAAW,GAAX,CAAZ;AACA,cAAM,GAAG,GAAG,kCAAK,EAAjB;;AACA,iBAAO,IAAI,CAAC,QAAL,CAAc,GAAd,EAAmB,GAAnB,CAAP,EAAgC,IAAI,GAAG,IAAI,CAAC,GAAL,CAAS,CAAT,EAAY,GAAZ,CAAvC,EAAyD;AACrD,gBAAM,QAAQ,GAAG;AACb,cAAA,KAAK,EAAE,CADM;AAEb,cAAA,OAAO,EAAE,GAAG,CAAC,MAAJ,CAAW,IAAX,EAAiB,GAAjB,IAAwB,OAAxB,GAAkC,IAAI,CAAC,MAAL,CAAY,aAAZ,CAF9B;AAGb,cAAA,IAAI,EAAE,IAAI,CAAC,MAAL,CAAY,YAAZ,CAHO;AAIb,cAAA,KAAK,EAAE,IAAI,CAAC,OAAL;AAJM,aAAjB;AAMA,iBAAK,KAAL,CAAW,KAAX,CAAiB,IAAjB,CAAsB,QAAtB;AACH;;AACD,eAAK,eAAL,CAAqB,KAAK,OAAL,CAAa,QAAb,CAAsB,GAAtB,CAA0B,UAA1B,CAArB;AACH;;;wCAEsB,I,EAAoC;AACvD,eAAK,KAAL,CAAW,MAAX,GAAoB,EAApB;AADuD;AAAA;AAAA;;AAAA;AAEvD,kCAAkB,KAAK,KAAL,CAAW,KAA7B,mIAAoC;AAAA,kBAAzB,GAAyB;AAChC,cAAA,GAAG,CAAC,KAAJ,GAAY,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAL,CAAJ,IAAkB,EAArB,GAA0B,EAA/B,EAAmC,MAA/C;AACA,mBAAK,KAAL,CAAW,MAAX,CAAkB,kCAAK,CAAC,GAAG,CAAC,KAAL,CAAL,CAAiB,MAAjB,CAAwB,YAAxB,CAAlB,IAA2D,GAAG,CAAC,KAA/D;AACH;AALsD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAM1D;;;;MA7HkC,2DAAA,CAAA,eAAA,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXvC,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,mBAAA,EAAA,YAAA;AAAA,aAAA,iBAAA;AAAA,KAAA;AAAA;;;AAAA,QAAA,gDAAA,GAAA,mBAAA;AAAA;AAAA,oDAAA,CAAA;AAAA;;;AAAA,QAAA,6DAAA,GAAA,mBAAA;AAAA;AAAA,iEAAA,CAAA;;AAGA,QAAM,UAAU,GAAQ,CACpB,gDAAA,CAAA,mBAAA,CADoB,EAEpB,6DAAA,CAAA,4BAAA,CAFoB,CAAxB;;QAuBa,iB","sourcesContent":["<div class=\"container\">\n    <cdk-virtual-scroll-viewport itemSize=\"80\" (scrolledIndexChange)=\"checkScroll()\">\n        <div class=\"content\">\n            <ng-container *cdkVirtualFor=\"let item of items | async \">\n                <div #list_item [class]=\"'item ' + item.type\" [class.tentative]=\"item.is_tentative\" [class.declined]=\"item.is_declined\" [title]=\"item?.custom_name || item?.name || item?.title || item\"\n                    [ngSwitch]=\"item.type\" [id]=\"item.title\" (touchrelease)=\"item.type==='event'? view(item):''\">\n                    <ng-container *ngSwitchCase=\"'date'\">\n                        <div [id]=\"'item-'+item.date\" class=\"dot today\" *ngIf=\"item.today\"></div>{{item.title}}\n                    </ng-container>\n                    <ng-container *ngSwitchCase=\"'no-items'\">\n                        {{item.title}}\n                    </ng-container>\n                    <ng-container *ngSwitchCase=\"'event'\">\n                        <div class=\"period\">\n                            <div class=\"text\">{{item.all_day ? 'All Day' : item.display?.start}}</div>\n                            <div class=\"info\">{{item.display?.short_duration}}</div>\n                        </div>\n                        <div class=\"icon\">\n                            <img *ngIf=\"!item.visitors && item.attendees && item.attendees.length > 0\" src=\"assets/icon/roombooked.svg\">\n                            <img *ngIf=\"item.visitors\" src=\"assets/icon/events.svg\">\n                            <div class=\"dot\" *ngIf=\"!item.attendees || item.attendees.length <= 0\"></div>\n                        </div>\n                        <div class=\"details\">\n                            <div class=\"text\">{{item.title}}</div>\n                            <div class=\"location\" *ngIf=\"item.display && item.display.room\">\n                                <div class=\"icon\"><img src=\"assets/icon/location.svg\"></div>\n                                <div class=\"text\">{{item.location_name || 'No location set'}}</div>\n                            </div>\n                        </div>\n\n                    </ng-container>\n                    <div class=\"line\"></div>\n                </div>\n            </ng-container>\n        </div>\n    </cdk-virtual-scroll-viewport>\n    <div class=\"loader\" *ngIf=\"model.loading\">\n        <spinner type=\"circle-ring\" color=\"#000\"></spinner>\n    </div>\n</div>\n","import { animate, keyframes, style, transition, trigger } from '@angular/animations';\nimport { Component, OnInit, ViewChild, Input, OnChanges, OnDestroy } from '@angular/core';\nimport { CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { BaseDirective } from '../../../shared/globals/base.directive';\nimport { AppService } from '../../../services/app.service';\nimport { IBooking } from '../../../services/data/bookings.service';\nimport { Utils } from '../../../shared/utility.class';\nimport { IUser } from '../../../services/data/users.service';\n\nimport * as dayjs from 'dayjs';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    MeetingDetailsOverlayComponent,\n    MeetingDetailsModalData\n} from '../../../overlays/meeting-details-overlay/meeting-details-overlay.component';\nimport { CONFIRM_METADATA } from '../../../overlays/confirm-modal/confirm-modal.component';\n\n@Component({\n    selector: 'schedule-event-list',\n    templateUrl: './event-list.component.html',\n    styleUrls: ['./event-list.component.scss'],\n    animations: [\n        trigger('show', [\n            transition(\n                'void => event',\n                animate(\n                    '.3s ease-out',\n                    keyframes([\n                        style({ height: 0, opacity: 0, offset: 0 }),\n                        style({ height: '80px', opacity: 1, offset: 1 })\n                    ])\n                )\n            )\n        ])\n    ]\n})\nexport class ScheduleEventListComponent extends BaseDirective\n    implements OnInit, OnChanges, OnDestroy {\n    /** User to show events for */\n    @Input() public user: IUser;\n    @Input() public date = dayjs().valueOf();\n    public model: any = {};\n    public items: BehaviorSubject<IBooking[]> = new BehaviorSubject([]);\n    public selected_index: number;\n\n    // @ViewChild('list') private list: ElementRef;\n\n    @ViewChild(CdkVirtualScrollViewport, { static: true })\n    private viewport: CdkVirtualScrollViewport;\n\n    constructor(private service: AppService, private _dialog: MatDialog) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.model.days = 15;\n        this.checkScroll();\n        this.items.subscribe(res => (this.model.list = res));\n        this.subscription(\n            'bookings',\n            this.service.Bookings.listen('timeline', timeline => {\n                let date = dayjs().startOf('d');\n                const end = date.add(this.model.days, 'd');\n                let list: IBooking[] = [];\n                for (; date.isBefore(end, 'm'); date = date.add(1, 'd')) {\n                    list = [...list, ...(timeline[date.format('YYYY/MM/DD')] || [])];\n                }\n                list = Utils.unique(list, 'order_id');\n                if (this.user) {\n                    list = list.filter(\n                        i =>\n                            i.organiser.email === this.user.email ||\n                            !!i.attendees.find(j => j.email === this.user.email)\n                    );\n                }\n                this.model.list = list;\n                this.processBookings();\n            })\n        );\n        this.loadBookings();\n        this.interval('update', () => this.updateBookings(), 10 * 1000);\n    }\n\n    public ngOnChanges(changes: any) {\n        if (changes.date) {\n            this.timeout('date_change', () => this.changeDate(this.date), 500);\n        }\n        if (changes.user) {\n            this.updateBookings();\n            this.interval('update', () => this.updateBookings(), 10 * 1000);\n        }\n    }\n\n    public ngOnDestroy(): void {\n        super.ngOnDestroy();\n        this.clearInterval('update');\n    }\n\n    public loadBookings() {\n        if (this.model.loading) {\n            return;\n        }\n        return new Promise((resolve, reject) => {\n            this.model.loading = true;\n            const date = dayjs().startOf('d');\n            const end = date.add(Math.max(3, this.model.days), 'd');\n            const user = this.service.Users.current();\n            if (!this.user) {\n                this.user = this.service.Users.current();\n            }\n            const user_list =\n                user.delegates && user.delegates.length > 0\n                    ? [user.email, ...user.delegates]\n                    : [user.email];\n            this.service.Bookings.query({\n                email: this.user\n                    ? this.user.email\n                    : user_list.reduce((a, v) => (a ? a + ',' : a) + v, ''),\n                from: date.unix(),\n                to: end.unix(),\n                timezone_offset: new Date().getTimezoneOffset()\n            }).then(\n                items => {\n                    this.service.Bookings.clear({ from: date.valueOf(), to: end.valueOf() });\n                    this.service.Bookings.updateList(Utils.unique(items, 'icaluid'));\n                    this.model.loading = false;\n                    resolve();\n                },\n                _ => {\n                    this.model.loading = false;\n                    reject();\n                }\n            );\n        });\n    }\n\n    public checkScroll() {\n        this.timeout(\n            'check_scroll',\n            () => {\n                if (!this.viewport) {\n                    return this.timeout('atBottom', () => this.checkScroll());\n                }\n                const start = this.viewport.getRenderedRange().start;\n                const end = this.viewport.getRenderedRange().end;\n                const total = this.viewport.getDataLength();\n                const from_start = dayjs()\n                    .add(this.model.from_start, 'd')\n                    .format('YYYY-MM-DD');\n                const items = this.items.getValue();\n                if (end === total) {\n                    this.atBottom();\n                } else if (\n                    this.model.from_start > 0 &&\n                    items.indexOf(items.find(i => i.id === from_start)) > start\n                ) {\n                    this.atTop();\n                }\n            },\n            100\n        );\n    }\n\n    public atBottom() {\n        if (this.model.loading) {\n            return;\n        }\n        this.model.days += 3;\n        this.interval('update', () => this.updateBookings(), 5 * 1000);\n        this.updateBookings();\n    }\n\n    public getViewLocation() {\n        if (this.viewport) {\n            const start = Math.floor(this.viewport.measureScrollOffset() / 80);\n            const items = this.items.getValue();\n            if (items && items.length > 0 && start < items.length) {\n                const item = items[start];\n                return item ? item.id : null;\n            }\n        }\n        return null;\n    }\n\n    public atTop() {\n        if (this.model.loading || this.model.from_start <= 0) {\n            return;\n        }\n        const range = this.viewport.getRenderedRange();\n        const now = dayjs().startOf('d');\n        const items = this.items.getValue();\n        const middle = Math.floor((range.start + range.end) / 2);\n        const time = dayjs(items && items[middle] ? items[middle].date : undefined);\n        this.model.from_start = Math.floor(time.diff(now, 'd'));\n        this.updateBookings();\n    }\n\n    public scrollTo(id: string, offset: number = 0, smooth: boolean = true) {\n        if (!id || (this.model.ignore && id !== this.model.ignore)) {\n            return;\n        }\n        const items = this.items.getValue();\n        const index = items.findIndex(i => i.id === id);\n        if (index >= 0) {\n            this.viewport.scrollToOffset(index * 80 + offset, smooth ? 'smooth' : 'auto');\n        }\n        this.timeout('ignore', () => (this.model.ignore = null), 1000);\n    }\n\n    public changeDate(date: number) {\n        const now = dayjs().startOf('d');\n        const day = dayjs(date);\n        let time = day.subtract(3, 'd');\n        if (time.isBefore(now, 'd')) {\n            time = dayjs(now);\n        }\n        if (day.diff(now, 'd') < this.model.days) {\n            this.model.ignore = day.format('YYYY-MM-DD');\n            this.scrollTo(day.format('YYYY-MM-DD'));\n        } else {\n            this.model.from_start = time.diff(now, 'd');\n            this.model.days = this.model.from_start + 8;\n            this.updateBookings().then(() => {\n                this.timeout('scroll', () => this.scrollTo(day.format('YYYY-MM-DD')), 1000);\n            });\n        }\n    }\n\n    public updateBookings() {\n        return new Promise((resolve, reject) => {\n            if (this.model.loading) {\n                return reject();\n            }\n            if (!this.viewport) {\n                return this.timeout('update_bookings', () =>\n                    this.updateBookings().then(resolve, reject)\n                );\n            }\n            if (!this.user) {\n                this.user = this.service.Users.current();\n            }\n            const range = this.viewport.getRenderedRange();\n            const now = dayjs().startOf('d');\n            const items = this.items.getValue();\n            const middle = Math.floor((range.start + range.end) / 2);\n            const date = items && items[middle] ? items[middle].date : undefined;\n            const start = dayjs(date)\n                .subtract(3, 'd')\n                .startOf('d');\n            const end = dayjs(date)\n                .add(3, 'd')\n                .endOf('d');\n            const from = start.isBefore(now, 'd') ? now.unix() : start.unix();\n            if (dayjs(from).isAfter(end, 's')) {\n                return;\n            }\n            this.setLoading(start.valueOf(), end.valueOf());\n            const user = this.service.Users.current();\n            const user_list =\n                user.delegates && user.delegates.length > 0\n                    ? [user.email, ...user.delegates]\n                    : [user.email];\n            this.model.loading = true;\n            this.service.Bookings.query({\n                email: this.user\n                    ? this.user.email\n                    : user_list.reduce((a, v) => (a ? a + ',' : a) + v, ''),\n                from,\n                to: end.unix(),\n                timezone_offset: new Date().getTimezoneOffset()\n            }).then(\n                list => {\n                    this.service.Bookings.clear({\n                        from: start.isBefore(now, 'd') ? now.valueOf() : start.valueOf(),\n                        to: end.valueOf()\n                    });\n                    this.service.Bookings.updateList(list);\n                    this.model.loading = false;\n                    resolve();\n                },\n                _ => {\n                    this.model.loading = false;\n                    reject();\n                }\n            );\n        });\n    }\n\n    public setLoading(start: number, end: number) {\n        let from = dayjs(start);\n        const to = dayjs(end);\n        const items: any[] = this.items.getValue();\n        for (; from.isBefore(to, 'm'); from = from.add(1, 'd')) {\n            const item = items.find(i => i.id === from.format('YYYY-MM-DD'));\n            if (item) {\n                item.loading = true;\n            }\n        }\n    }\n\n    public processBookings() {\n        this.timeout(\n            'process',\n            () => {\n                const offset = this.viewport.measureScrollOffset() % 80;\n                const scroll_id = this.getViewLocation();\n                this.model.list.sort((a, b) => a.date - b.date);\n                let list: any[] = [];\n                const now = dayjs();\n                let date = dayjs().startOf('d');\n                const end = date.add(this.model.days, 'd').endOf('d');\n                for (; date.isBefore(end, 'd') || date.isSame(end, 'd'); date = date.add(1, 'd')) {\n                    list.push({\n                        order_id: date.format('YYYY-MM-DD'),\n                        id: date.format('YYYY-MM-DD'),\n                        type: 'date',\n                        today: now.isSame(date, 'd'),\n                        title: date.format('dddd, DD MMM'),\n                        value: date.format('YYYY-MM-DD'),\n                        date: date.valueOf()\n                    });\n                    const length = list.length;\n                    for (const bkn of this.model.list) {\n                        if (bkn.type && bkn.type !== 'event') {\n                            continue;\n                        }\n                        const bkn_date = dayjs(bkn.for_date || bkn.date);\n                        if (bkn_date.isSame(date, 'd')) {\n                            const item = {\n                                ...bkn,\n                                room: bkn.room,\n                                room_list: bkn.room_list,\n                                status: bkn.status,\n                                type: 'event'\n                            };\n                            list.push(item);\n                        }\n                    }\n                    if (list.length === length) {\n                        list.push({\n                            order_id: `${date.format('YYYY-MM-DD')}-no-items`,\n                            type: 'no-items',\n                            title: 'No events',\n                            date: date.valueOf()\n                        });\n                    }\n                }\n                list.forEach(bkn => {\n                    const rooms = bkn.spaces || [];\n                    bkn.is_declined = rooms.reduce(\n                        (state, room) => state || bkn.approval_status[room] === 'declined',\n                        false\n                    );\n                    bkn.is_tentative = rooms.reduce(\n                        (state, room) =>\n                            state ||\n                            (bkn.approval_status[room] || '').indexOf('tentative') >= 0 ||\n                            (bkn.approval_status[room] || '').indexOf('not') >= 0,\n                        false\n                    );\n                });\n                list.sort((a, b) => (a.for_date || a.date) - (b.for_date || b.date));\n                list = Utils.unique(list, 'order_id');\n                this.items.next(list);\n                this.model.bookings = list.filter(i => i.id);\n                if (this.model.ignore && !!list.find(i => i.id === this.model.ignore)) {\n                    this.scrollTo(this.model.ignore);\n                } else {\n                    this.scrollTo(scroll_id, offset, false);\n                }\n            },\n            50\n        );\n    }\n\n    public view(item: any) {\n        this.model.mainIndex = this.model.bookings.indexOf(item);\n        const idx = this.model.mainIndex;\n        const ref = this._dialog.open<MeetingDetailsOverlayComponent, MeetingDetailsModalData>(\n            MeetingDetailsOverlayComponent,\n            {\n                maxHeight: 'auto',\n                maxWidth: 'auto',\n                width: 'auto',\n                height: 'auto',\n                hasBackdrop: false,\n                closeOnNavigation: true,\n                data: {\n                    booking: this.service.Bookings.item(item.id),\n                    as_delegate:\n                        this.user && this.user.email !== this.service.Users.current().email,\n                    delegate: this.user.email,\n                    is_first: idx === 0,\n                    is_last: idx === this.model.bookings.length - 1\n                }\n            }\n        );\n        this.subscription(\n            'details-modal',\n            ref.componentInstance.event.subscribe(event => {\n                if (event.reason === 'action') {\n                    switch (event.metadata) {\n                        case 'next':\n                            this.nextBooking();\n                            break;\n                        case 'previous':\n                            this.previousBooking();\n                            break;\n                    }\n                }\n            })\n        );\n        ref.afterClosed().subscribe(() => this.unsub('details-modal'));\n    }\n\n    public checkin() {\n        const index = this.model.mainIndex;\n        this.model.bookings[index].checkin = true;\n    }\n\n    public deletebooking() {\n        this.model.bookings.splice(this.model.mainIndex, 1);\n    }\n\n    public nextBooking() {\n        const index = this.model.mainIndex;\n        if (index < this.model.bookings.length - 1) {\n            this.view(this.model.bookings[index + 1]);\n        } else {\n            this.view(this.model.bookings[index]);\n        }\n    }\n\n    public previousBooking() {\n        const index = this.model.mainIndex;\n        if (index > 0) {\n            this.view(this.model.bookings[index - 1]);\n        } else {\n            this.view(this.model.bookings[index]);\n        }\n    }\n}\n","<div class=\"container\" [class.popout]=\"model.popout\" [class.visitor-dropdown]=\"model.visitorDropdown\">\n    <div class=\"header\">\n        <div class=\"icon text\">\n            <dropdown\n                *ngIf=\"users && users.length > 1\"\n                klass=\"no-back form\"\n                [list]=\"users\"\n                [model]=\"model.host\"\n                (modelChange)=\"model.show_user = users[$event]\"\n            ></dropdown>\n        </div>\n        <div class=\"buttons\">\n            <button mat-icon-button class=\"shadow\" (touchrelease)=\"model.show_tooltip = !model.show_tooltip\">\n                <app-icon\n                    tooltip\n                    [(show)]=\"model.show_tooltip\"\n                    [template]=\"calendar\"\n                    [triangle]=\"true\"\n                    position=\"bottom\"\n                    offset=\"end\"\n                    [icon]=\"{class:'material-icons', content: 'today'}\"\n                ></app-icon>\n            </button>\n        </div>\n    </div>\n    <ng-template #calendar>\n        <a-date-picker\n            class=\"themed\"\n            [ngModel]=\"model.date?.value\"\n            [counters]=\"model.events\"\n            [options]=\"{ from: model.today }\"\n            (ngModelChange)=\"setDate($event); model.show_tooltip = false\"\n        ></a-date-picker>\n    </ng-template>\n\n    <div class=\"body\">\n        <div class=\"events\" *ngIf=\"!model.settings || model.settings.visitors !== false\">\n            <schedule-event-list\n                [user]=\"model.show_user\"\n                [(date)]=\"model.date.value\"\n                (loading)=\"model.loading = $event\"\n            ></schedule-event-list>\n        </div>\n    </div>\n</div>\n","/*\n * @Author: Alex Sorafumo\n * @Date:   2017-05-16 14:12:48\n * @Last Modified by: Alex Sorafumo\n * @Last Modified time: 2018-08-08 14:49:27\n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport { FormGroup, AbstractControl } from '@angular/forms';\n\nimport { AppService } from '../../services/app.service';\nimport { IBooking } from '../../services/data/bookings.service';\nimport { BaseDirective } from '../../shared/globals/base.directive';\n\nimport * as dayjs from 'dayjs';\nimport { IUser } from '../../services/data/users.service';\n\n@Component({\n    selector: 'app-schedule',\n    templateUrl: './schedule.template.html',\n    styleUrls: ['./schedule.styles.scss'],\n})\nexport class ScheduleComponent extends BaseDirective implements OnInit {\n    public model: any = {};\n    public form: FormGroup;\n    /** List of users that the current user can see the bookings of */\n    public users: IUser[] = [];\n    /** Email of the host of the last created booking */\n    public host: string;\n\n\n    private process_list = (dates) => (list) => {\n        const timeline: { [name: string]: IBooking[] } = this.service.Bookings.get('timeline');\n        for (const d of dates) {\n            this.service.Bookings.clear({ from: d });\n        }\n    }\n\n    constructor(private service: AppService, private route: ActivatedRoute) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.model.dates = [];\n        this.init();\n    }\n\n    public init() {\n        if (!this.service.ready()) {\n            return setTimeout(() => this.init(), 500);\n        }\n        this.model.day_count = this.service.Settings.get('app.schedule.length') || 14;\n        this.model.has_lockers = this.service.Settings.get('app.lockers.enabled');\n        this.model.popout = this.service.Settings.get('app.style.popout') || false;\n        this.model.settings = this.service.Settings.get('app.schedule');\n        if (this.model.settings.popout === false) {\n            this.model.popout = false;\n        }\n        this.service.set('BANNER.block_height', 0);\n        this.model.year = dayjs().year();\n        this.loadBookings();\n        this.model.visitorDropdown = false;\n        this.service.Analytics.screen('Schedule');\n        this.service.Analytics.page('/schedule');\n        this.model.today = dayjs().valueOf();\n        this.model.user = this.service.Users.current();\n        this.model.host = 0;\n        this.users = [this.model.user];\n        for (const email of this.model.user.delegates) {\n            let user = this.service.Users.item(email);\n            if (user) {\n                this.users.push(user);\n            } else {\n                this.service.Users.show(email).then((u) => {\n                    if (this.host && u.email === this.host) {\n                        this.model.host = this.users.length;\n                        this.model.show_user = u;\n                    }\n                    this.users.push(u);\n                });\n            }\n        }\n        this.model.lockers = this.model.user.lockers;\n        this.model.show_tooltip = false;\n        const date = this.model.date ? this.model.date.value : undefined;\n        this.model.is_today = dayjs().isSame(dayjs(date), 'd');\n        this.subscription('route', this.route.queryParamMap.subscribe((params) => {\n            if (params.has('host')) {\n                const email = params.get('host')\n                const index = this.users.findIndex(i => i.email === email);\n                this.model.host = index > 0 ? index : 0;\n                this.model.show_user = this.users[this.model.host];\n                this.host = email;\n            }\n        }));\n    }\n\n    public loadBookings() {\n        const date = dayjs().startOf('d');\n        this.model.date = this.model.dates.find(i => dayjs(i.value).isSame(date, 'd')) || {};\n        this.service.Bookings.listen<{ [name: string]: IBooking[] }>(`timeline`, (list) => {\n            this.timeout('update_timeline', () => this.processTimeline(list), 100);\n        });\n    }\n\n    public setDate(date: number) {\n        this.model.date = { value: date };\n    }\n\n    public changeDate(value: number) {\n        const date_obj = this.model.date ? this.model.date.value : undefined;\n        const date = dayjs(date_obj);\n        date.add(value, 'd');\n        this.setDate(date.valueOf());\n    }\n\n    public resetDate() {\n        this.setDate(dayjs().valueOf());\n    }\n\n    public toggleView(e: any) {\n        this.model.visitorDropdown = e;\n    }\n\n    public updateEvents(timestamp?: number) {\n        this.model.dates = [];\n        let date = dayjs(timestamp).startOf('M');\n        const end = date.endOf('M');\n        const now = dayjs();\n        for (; date.isBefore(end, 's'); date = date.add(1, 'd')) {\n            const date_obj = {\n                count: 0,\n                display: now.isSame(date, 'd') ? 'Today' : date.format('ddd, MMM Do'),\n                date: date.format('YYYY/MM/DD'),\n                value: date.valueOf()\n            };\n            this.model.dates.push(date_obj);\n        }\n        this.processTimeline(this.service.Bookings.get('timeline'));\n    }\n\n    public processTimeline(list: { [name: string]: IBooking[] }) {\n        this.model.events = {};\n        for (const day of this.model.dates) {\n            day.count = (list ? list[day.date] || [] : []).length;\n            this.model.events[dayjs(day.value).format('YYYY-MM-DD')] = day.count;\n        }\n    }\n\n}\n","\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { ComposerModule } from '@acaprojects/ngx-composer';\n\nimport { WidgetsModule } from '@acaprojects/ngx-widgets';\nimport { RouterModule } from '@angular/router';\nimport { ROUTES } from './schedule.routes';\n\nimport { SharedComponentModule } from '../../shared/components/shared.module';\n\nimport { ScheduleComponent } from './schedule.component';\nimport { ScheduleEventListComponent } from './event-list/event-list.component';\n\nconst COMPONENTS: any = [\n    ScheduleComponent,\n    ScheduleEventListComponent,\n\n];\n\n@NgModule({\n    declarations: [\n        ...COMPONENTS\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        WidgetsModule,\n        ComposerModule,\n        RouterModule.forChild(ROUTES),\n        SharedComponentModule,\n        ScrollingModule\n    ],\n    exports: [\n        ...COMPONENTS\n    ]\n})\nexport class AppScheduleModule { }\n"],"sourceRoot":"webpack:///","file":"shell-schedule-schedule-module-ngfactory-es5.js"}